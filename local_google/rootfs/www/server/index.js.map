{"version":3,"file":"index.js","mappings":"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ACAwC,OAAO,CAAC;QAAEhB,IAAI,EAAE,SAAR;QAAmB1H,OAAO,EAAEkG;MAA5B,CAAD,CAAP;IACD;EAJwB,CAA3B;EAOA,OAAOqC,GAAP;AACD,CA7EM;;;;;;;;;;ACbP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;ACRA;AACA;AACA;AACA;AACA;AACA;;AAEY;;AAEZ;AACA;AACA;AACA;;AAEA,iBAAiB,mBAAO,CAAC,0DAAY;AACrC,WAAW,mBAAO,CAAC,0DAAY;;AAE/B;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA,WAAW,cAAc;AACzB,YAAY;AACZ;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,oBAAoB,kBAAkB;AACtC;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,cAAc;AACzB,YAAY;AACZ;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,oBAAoB,sBAAsB;AAC1C;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,4CAA4C,aAAa;AACzD;AACA;AACA;AACA;AACA,WAAW,cAAc;AACzB,YAAY;AACZ;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,oBAAoB,qBAAqB;AACzC;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,8BAA8B;AAC9B;AACA;AACA;AACA;AACA,WAAW,cAAc;AACzB,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,oBAAoB,sBAAsB;AAC1C;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,YAAY;AACZ;AACA;;AAEA;AACA;AACA;;;;;;;;;;;;AC7OY;;AAEZ;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,YAAY;AACZ;AACA;AACA,kBAAkB,kBAAkB;AACpC;;AAEA;AACA;AACA,MAAM;AACN;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,YAAY,OAAO;AACnB,YAAY,OAAO;AACnB,YAAY;AACZ;AACA;AACA,kBAAkB,kBAAkB;AACpC;;AAEA;AACA;AACA,MAAM;AACN;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,YAAY;AACZ;AACA;AACA;AACA;AACA;;AAEA;AACA;;;;;;;;;;;;AC/DA;AACA;AACA;AACA;AACA;;AAEY;;AAEZ;AACA;AACA;AACA;;AAEA,gBAAgB,mBAAO,CAAC,8CAAM;;AAE9B;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,UAAU;AACV,cAAc,UAAU;AACxB,cAAc,UAAU;AACxB,cAAc,UAAU;AACxB,cAAc,UAAU;AACxB;;AAEA;AACA;AACA,UAAU;AACV;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,wCAAuC;AACvC;AACA;AACA;AACA,CAAC,EAAC;;AAEF;AACA;AACA;AACA;;AAEA,uCAAsC;AACtC;AACA;AACA;AACA,CAAC,EAAC;;AAEF;AACA;AACA;AACA;;AAEA,wCAAuC;AACvC;AACA;AACA;AACA,CAAC,EAAC;;AAEF;AACA;AACA;AACA;;AAEA,8CAA6C;AAC7C;AACA;AACA;AACA,CAAC,EAAC;;AAEF;AACA;AACA;AACA,WAAW,QAAQ;AACnB,YAAY;AACZ;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,eAAe,mBAAO,CAAC,0EAAkB;AACzC;AACA;AACA,eAAe,mBAAO,CAAC,wEAAiB;AACxC;AACA;AACA,eAAe,mBAAO,CAAC,0EAAkB;AACzC;AACA;AACA,eAAe,mBAAO,CAAC,sFAAwB;AAC/C;AACA;;AAEA;AACA;AACA;;;;;;;;;;;;AC5JA;AACA;AACA;AACA;AACA;;AAEY;;AAEZ;AACA;AACA;AACA;;AAEA,kBAAkB,mBAAO,CAAC,4DAAa;AACvC,cAAc,mBAAO,CAAC,oDAAS;AAC/B,cAAc,mBAAO,CAAC,sDAAU;AAChC,YAAY,mBAAO,CAAC,8DAAY;AAChC,iBAAiB,mBAAO,CAAC,4DAAa;AACtC,aAAa,mBAAO,CAAC,kDAAQ;AAC7B,WAAW,mBAAO,CAAC,kBAAM;;AAEzB;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,UAAU;AACrB,WAAW,UAAU;AACrB,WAAW,UAAU;AACrB,WAAW,QAAQ;AACnB;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,QAAQ;AACR;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,UAAU;AACrB,WAAW,SAAS;AACpB,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,UAAU;AACrB;AACA;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;;;;;;;;;;;;AC5MA;AACA;AACA;AACA;AACA;AACA;;AAEY;;AAEZ;AACA;AACA;AACA;;AAEA,YAAY,mBAAO,CAAC,gDAAO;AAC3B,kBAAkB,mBAAO,CAAC,8DAAc;AACxC,kBAAkB,mBAAO,CAAC,4DAAa;AACvC,YAAY,mBAAO,CAAC,6EAAO;AAC3B,WAAW,mBAAO,CAAC,2DAAS;AAC5B,aAAa,mBAAO,CAAC,oDAAS;;AAE9B;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC;AACpC,oCAAoC;AACpC,oCAAoC;AACpC,oCAAoC;AACpC;;AAEA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,YAAY;AACZ;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,sBAAsB;AACtB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,yBAAyB;AACzB,IAAI;AACJ;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,YAAY;AACZ;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB;AACA;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,aAAa;AACxB,WAAW,QAAQ;AACnB,YAAY;AACZ;;AAEA;AACA;;AAEA,kBAAkB,iBAAiB;AACnC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,YAAY;AACZ;;AAEA;AACA;AACA;AACA;AACA;;;;;;;;;;;;AC3OA;AACA;AACA;AACA;AACA;;AAEY;;AAEZ;AACA;AACA;;AAEA,YAAY,mBAAO,CAAC,gDAAO;AAC3B,YAAY,mBAAO,CAAC,6EAAO;AAC3B,WAAW,mBAAO,CAAC,2DAAS;AAC5B,aAAa,mBAAO,CAAC,oDAAS;;AAE9B;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,YAAY;AACZ;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,YAAY;AACZ;;AAEA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACpGA;AACA;AACA;AACA;AACA;;AAEY;;AAEZ;AACA;AACA;;AAEA,YAAY,mBAAO,CAAC,gDAAO;AAC3B,kBAAkB,mBAAO,CAAC,8DAAc;AACxC,YAAY,mBAAO,CAAC,6EAAO;AAC3B,WAAW,mBAAO,CAAC,2DAAS;AAC5B,aAAa,mBAAO,CAAC,oDAAS;;AAE9B;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,YAAY;AACZ;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB;AACA;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,YAAY;AACZ;;AAEA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACxHA;AACA;AACA;AACA;AACA;AACA;;AAEY;;AAEZ;AACA;AACA;AACA;;AAEA,YAAY,mBAAO,CAAC,gDAAO;AAC3B,kBAAkB,mBAAO,CAAC,8DAAc;AACxC,kBAAkB,mBAAO,CAAC,4DAAa;AACvC,YAAY,mBAAO,CAAC,6EAAO;AAC3B,gBAAgB,mBAAO,CAAC,8CAAM;AAC9B,WAAW,mBAAO,CAAC,2DAAS;AAC5B,aAAa,mBAAO,CAAC,oDAAS;;AAE9B;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,YAAY;AACZ;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB;AACA;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,YAAY;AACZ;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAY,mBAAO,CAAC,8CAAI;AACxB;AACA;AACA,YAAY,mBAAO,CAAC,gCAAa;AACjC;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA,+CAA+C,yBAAyB;AACxE;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,YAAY;AACZ;;AAEA;AACA;AACA;AACA;AACA;;;;;;;;;;;AC3RA;AACA;AACA;AACA;AACA;;AAEA,UAAU,qHAAmC;AAC7C,WAAW;AACX,kBAAkB;AAClB,YAAY;AACZ,YAAY;AACZ,iBAAiB;AACjB,eAAe;AACf;AACA;AACA;;AAEA;AACA;AACA;;AAEA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,oBAAoB;AACpB;AACA;AACA,IAAI;AACJ;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAM;AACN,MAAM,qBAAqB;AAC3B;AACA,IAAI;AACJ;;AAEA;AACA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAI;;AAEJ;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA,IAAI;AACJ;;;;;;;;;;;;ACvLA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,cAAc;AACd,eAAe;AACf,cAAc;AACd,eAAe;AACf,2GAAgC;;AAEhC;AACA;AACA;;AAEA,aAAa;AACb,aAAa;;AAEb;AACA;AACA;AACA;AACA;;AAEA,kBAAkB;;AAElB;AACA;AACA;;AAEA;;AAEA;AACA;AACA,WAAW,QAAQ;AACnB,YAAY;AACZ;AACA;;AAEA;AACA;;AAEA;AACA;AACA,eAAe;AACf;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,YAAY;AACZ;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,oBAAoB,iBAAiB;AACrC;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB;AACA;;AAEA;AACA;;AAEA,EAAE,aAAa;AACf,EAAE,aAAa;;AAEf;AACA;;AAEA,kBAAkB,SAAS;AAC3B,6BAA6B;AAC7B;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,YAAY;AACZ;AACA;;AAEA;AACA;AACA,0CAA0C,SAAS;AACnD;AACA;AACA;AACA;AACA,0CAA0C,SAAS;AACnD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA;;;;;;;;;;;ACzMA;AACA;AACA;AACA;;AAEA;AACA,EAAE,4HAAwC;AAC1C,EAAE;AACF,EAAE,sHAAqC;AACvC;;;;;;;;;;;ACTA;AACA;AACA;;AAEA,UAAU,mBAAO,CAAC,gBAAK;AACvB,WAAW,mBAAO,CAAC,kBAAM;;AAEzB;AACA;AACA;AACA;AACA;;AAEA,UAAU,qHAAmC;AAC7C,YAAY;AACZ,WAAW;AACX,kBAAkB;AAClB,YAAY;AACZ,YAAY;AACZ,iBAAiB;;AAEjB;AACA;AACA;;AAEA,cAAc;;AAEd;AACA;AACA;AACA;AACA;;AAEA,mBAAmB;AACnB;AACA,CAAC;AACD;AACA;AACA;AACA;AACA,4CAA4C,wBAAwB;;AAEpE;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,CAAC,IAAI;;AAEL;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,6BAA6B;AAC7B;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,oBAAoB;AACpB;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;;AAEA,oBAAoB;AACpB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,sCAAsC;;AAEtC;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,eAAe,mBAAO,CAAC,cAAI;AAC3B,4CAA4C,kBAAkB;AAC9D;AACA;;AAEA;AACA;AACA,gBAAgB,mBAAO,CAAC,gBAAK;AAC7B;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,kBAAkB,iBAAiB;AACnC;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;;;;;;;;;;ACvPA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,eAAe;AAC1B,WAAW,QAAQ;AACnB,YAAY,OAAO;AACnB,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACvJa;;AAEb;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB;AACA;AACA;AACA,kBAAkB,YAAY;AAC9B;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB;AACA;AACA;AACA;AACA;AACA,kBAAkB,YAAY;AAC9B;AACA;AACA;;AAEA,mBAAmB;;;;;;;;;;;;ACjCN;;AAEb;AACA,mBAAmB,mBAAO,CAAC,kEAAgB;AAC3C,EAAE;AACF,EAAE,mGAAsC;AACxC;;;;;;;;;;;;ACNA;AACA;AACA;AACA;AACA;AACA;;AAEa;;AAEb;AACA;AACA;AACA;;AAEA;AACA,qBAAqB;AACrB,oBAAoB;;AAEpB;AACA;AACA;AACA;;AAEA,sCAAsC,EAAE;;AAExC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,WAAW,eAAe;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,aAAa;AACb;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB;AACA,aAAa;AACb;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAM;AACN;AACA,MAAM;AACN;AACA,MAAM;AACN;AACA,MAAM;AACN;AACA,MAAM;AACN;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,eAAe;AAC1B;AACA,aAAa;AACb;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;;;;;;;;;;;ACzKa;;AAEb,mBAAmB,mBAAO,CAAC,gEAAe;;AAE1C,eAAe,mBAAO,CAAC,iDAAI;;AAE3B;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACda;;AAEb,WAAW,mBAAO,CAAC,gEAAe;AAClC,mBAAmB,mBAAO,CAAC,gEAAe;;AAE1C;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,oBAAoB,SAAS,UAAU;AACvC,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,4CAA4C,kBAAkB;AAC9D,EAAE;AACF,CAAC,oBAAoB;AACrB;;;;;;;;;;;;AC9CA;AACA;AACA;AACA;AACA;;AAEY;;AAEZ;AACA;AACA;AACA;;AAEA;AACA,oBAAoB;;AAEpB;AACA;AACA;AACA;;AAEA,eAAe,kDAAwB;AACvC,aAAa,2HAA6B;;AAE1C;AACA;AACA;AACA;;AAEA,sDAAsD,YAAY;;AAElE;AACA;AACA;AACA;;AAEA,sCAAsC,EAAE;AACxC,+CAA+C,EAAE;;AAEjD;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B;AAC3B;AACA,qBAAqB,MAAM;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,qBAAqB;AACrB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,MAAM;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,iDAAiD,iBAAiB,IAAI,aAAa,EAAE,EAAE,IAAI,UAAU,IAAI,oBAAoB,EAAE;;AAE/H;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,8EAA8E;;AAE9E;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,gBAAgB;AAC3B,YAAY;AACZ;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,gBAAgB;AAC3B,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,YAAY;AACZ;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,oBAAoB,mBAAmB;AACvC;;AAEA;AACA;AACA;;AAEA,mBAAmB;AACnB;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,YAAY;AACZ;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,6DAA6D;AAC7D;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,YAAY;AACZ;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,YAAY;AACZ;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,YAAY;AACZ;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB;AACA;;AAEA;AACA;AACA;AACA;;;;;;;;;;;ACzcA;AACA;AACA,aAAa,mBAAO,CAAC,sBAAQ;AAC7B;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA,EAAE,cAAc;AAChB;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;AChEA;AACA;AACA;AACA;AACA;;AAEY;;AAEZ;AACA,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,cAAc;AACd,aAAa;;AAEb;AACA;AACA;AACA,WAAW,QAAQ;AACnB,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA,oBAAoB,mBAAmB;AACvC;;AAEA;AACA;AACA;;AAEA,mBAAmB;AACnB;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW,eAAe;AAC1B,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,+BAA+B;AAC/B;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW;AACX,YAAY;AACZ;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,YAAY;AACZ;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;AC7NA;AACA;AACA;;AAEA,aAAa,mBAAO,CAAC,sBAAQ;;AAE7B;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,YAAY;AACZ;AACA;;AAEA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,YAAY;AACZ;AACA;;AAEA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;;;;;;AClDA;AACA;AACA;AACA;AACA;AACA;;AAEa;;AAEb;AACA;AACA;AACA;;AAEA,aAAa;AACb,iBAAiB;;AAEjB;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,+BAA+B;;AAE/B;AACA;AACA,MAAM;AACN;AACA,gCAAgC;AAChC;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,gBAAgB;AAC7C,kBAAkB;AAClB;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,YAAY;AACZ;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA,cAAc;AACd;;AAEA;AACA;AACA;AACA;;AAEA,cAAc;AACd;;AAEA;AACA;AACA;AACA;;AAEA,cAAc;AACd;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA,cAAc;AACd;;AAEA;AACA,cAAc;AACd;;AAEA;AACA,cAAc;AACd;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,kBAAkB;AAClB;AACA;AACA,kBAAkB;AAClB;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,kBAAkB;AAClB;AACA;AACA,kBAAkB;AAClB;AACA;AACA,kBAAkB;AAClB;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,aAAa;AACb;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,aAAa;AACb;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,GAAG;AACd;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,UAAU;AACrB;AACA;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;;;;;;;;;;;AC7QA;;AAEA;;AAEA,eAAe,mBAAO,CAAC,gEAAe;AACtC,aAAa,mBAAO,CAAC,8CAAM;;AAE3B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,sBAAsB,0BAA0B;AAChD;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA,MAAM;AACN;AACA,MAAM;AACN;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,MAAM;AACN;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP,MAAM;AACN;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;;AAEA;AACA;AACA;AACA,2CAA2C;AAC3C;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,sEAAsE;AACtE;AACA;AACA;AACA,OAAO;AACP,MAAM;AACN,iDAAiD;AACjD;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAM;AACN,mCAAmC;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,wCAAwC,OAAO;AAC/C;AACA;AACA;AACA;AACA,UAAU;AACV;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,UAAU;AACV,qCAAqC;AACrC;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,aAAa;AACb,YAAY;AACZ;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;;AAEA,CAAC;;;;;;;;;;;AC7OD;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,eAAe,kDAAwB;;AAEvC;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,kBAAkB,iBAAiB;AACnC;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,wCAAwC;;AAExC;AACA,6CAA6C;AAC7C;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA,kBAAkB,WAAW;AAC7B;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA,kBAAkB,kBAAkB;AACpC;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,cAAc;AACzB,WAAW,QAAQ;AACnB,aAAa;AACb;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;;AAEA;AACA,SAAS,kBAAkB;AAC3B;AACA;;AAEA;AACA;AACA,MAAM;AACN;AACA,MAAM;AACN;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,oBAAoB,kBAAkB;AACtC;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,2BAA2B,iCAAiC;AAC5D,cAAc,oBAAoB;AAClC;;AAEA;AACA;AACA,oBAAoB,kBAAkB;AACtC;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,qCAAqC;AACrC;AACA;AACA,MAAM;;AAEN;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,GAAG;;AAEH;AACA;;;;;;;;;;;;ACzhBA;AACA;AACA;AACA;AACA;AACA;;AAEY;;AAEZ;AACA;AACA;AACA;;AAEA,mBAAmB,0DAA8B;AACjD,iBAAiB,gDAAwB;AACzC,aAAa,mBAAO,CAAC,sBAAQ;AAC7B,WAAW,mBAAO,CAAC,kBAAM;;AAEzB;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,SAAS;AACpB;AACA;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA,IAAI;AACJ;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,2BAA2B;AAC3B;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA,MAAM;AACN;AACA;AACA,MAAM;AACN;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;AChNA,WAAW,mBAAO,CAAC,cAAI;AACvB,aAAa,mBAAO,CAAC,kBAAM;AAC3B,WAAW,mBAAO,CAAC,cAAI;;AAEvB;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,iCAAiC,QAAQ;AACzC;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,oEAAoE,UAAU;;AAE9E;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;;AAEA;AACA;AACA,qBAAqB,IAAI;AACzB,YAAY;AACZ,qBAAqB,IAAI;AACzB;AACA;AACA;AACA,KAAK;;AAEL,aAAa;AACb,IAAI;AACJ;AACA,6BAA6B,YAAY,EAAE,UAAU;AACrD;;AAEA,aAAa;AACb;AACA;;AAEA;AACA;AACA;AACA;;AAEA,qBAAqB;AACrB,oBAAoB;AACpB;;;;;;;;;;;;AC5GA;AACA;AACA;AACA;AACA;;AAEY;;AAEZ;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,UAAU;AACrB;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA,kBAAkB,kBAAkB;AACpC;;AAEA;AACA;;AAEA;;AAEA,oBAAoB,gBAAgB;AACpC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,oBAAoB,qBAAqB;AACzC;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,oBAAoB,iBAAiB;AACrC;AACA;;AAEA;AACA;AACA;;;;;;;;;;;;AC9FA;AACA;AACA;AACA;AACA;;AAEY;;AAEZ;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA;AACA;;;;;;;;;;;;AC3DA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEa;;AAEb;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,YAAY,QAAQ;AACpB,YAAY;AACZ;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,4BAA4B,oBAAoB;AAChD;AACA;AACA,wBAAwB;AACxB;AACA;AACA,uBAAuB;AACvB;AACA;AACA,uBAAuB;AACvB;AACA;AACA,sBAAsB;AACtB;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;;;;;;;;;;AC7EA;AACA;AACA;AACA;AACA;;AAEY;;AAEZ;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA,aAAa,mBAAO,CAAC,sBAAQ;AAC7B,YAAY,2CAAmB;;AAE/B;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,WAAW,eAAe;AAC1B,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW,qBAAqB;AAChC,WAAW,QAAQ;AACnB,WAAW,SAAS;AACpB,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,YAAY;AACZ;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;;;;;;;;;;;AClIA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEa;;AAEb,sGAAyC;;;;;;;;;;;;ACVzC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEa;;AAEb;AACA;AACA;AACA;;AAEA,mBAAmB,mBAAO,CAAC,8DAAc;AACzC,aAAa,mBAAO,CAAC,gEAAU;AAC/B,cAAc,mBAAO,CAAC,oDAAS;AAC/B,iBAAiB,mBAAO,CAAC,4EAAmB;AAC5C,YAAY,mBAAO,CAAC,8EAAoB;AACxC,YAAY,mBAAO,CAAC,yEAAO;AAC3B,WAAW,mBAAO,CAAC,sDAAQ;AAC3B,WAAW,mBAAO,CAAC,kBAAM;AACzB,kBAAkB,2FAA8B;AAChD,yBAAyB,kGAAqC;AAC9D,mBAAmB,4FAA+B;AAClD,gBAAgB,mBAAO,CAAC,8CAAM;AAC9B,cAAc,mBAAO,CAAC,wEAAe;AACrC,YAAY,mBAAO,CAAC,4DAAa;AACjC,cAAc,iDAAuB;AACrC,qBAAqB,mBAAO,CAAC,kEAAgB;;AAE7C;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,YAAY,aAAoB,IAAI,CAAa;;AAEjD;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;;AAEH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;;AAEL;AACA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,UAAU;AACrB,YAAY,KAAK;AACjB;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,cAAc;AACzB,WAAW,UAAU;AACrB,YAAY,KAAK;AACjB;AACA;;AAEA;AACA;;AAEA;AACA,oBAAoB,iBAAiB;AACrC;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,GAAG;AACd,YAAY,QAAQ;AACpB;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,YAAY;AACZ;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,YAAY;AACZ;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,YAAY,KAAK;AACjB;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,YAAY,KAAK;AACjB;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,UAAU;AACrB,YAAY,KAAK;AACjB;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA,kBAAkB,oBAAoB;AACtC;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,cAAc;AAC1C;AACA,OAAO;AACP;AACA,WAAW,QAAQ;AACnB,WAAW,iBAAiB;AAC5B,WAAW,UAAU;AACrB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,KAAK;AAChC;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;;;;;;;;;;;;ACppBA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEa;;AAEb;AACA;AACA;;AAEA,iBAAiB,mBAAO,CAAC,4DAAa;AACtC,mBAAmB,0DAA8B;AACjD,YAAY,mBAAO,CAAC,wEAAmB;AACvC,YAAY,mBAAO,CAAC,oEAAe;AACnC,YAAY,mBAAO,CAAC,sEAAgB;AACpC,aAAa,mBAAO,CAAC,gEAAU;AAC/B,UAAU,mBAAO,CAAC,4DAAW;AAC7B,UAAU,mBAAO,CAAC,8DAAY;;AAE9B;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,WAAW;AACX,GAAG;;AAEH;AACA;AACA,WAAW;AACX,GAAG;;AAEH;AACA;AACA;;AAEA;AACA;AACA;;AAEA,mBAAmB;AACnB,eAAe;AACf,gBAAgB;;AAEhB;AACA;AACA;;AAEA,aAAa;AACb,cAAc;;AAEd;AACA;AACA;;AAEA,YAAY;AACZ,mHAA6C;AAC7C,WAAW;AACX,uGAAwC;AACxC,YAAY;AACZ,kBAAkB;;AAElB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,GAAG;AACH,CAAC;;;;;;;;;;;;ACnHD;AACA;AACA;AACA;AACA;AACA;AACA;;AAEa;;AAEb;AACA;AACA;AACA;;AAEA,qBAAqB,mBAAO,CAAC,kEAAgB;;AAE7C;AACA;AACA;AACA;AACA;AACA,WAAW,UAAU;AACrB,YAAY;AACZ;AACA;;AAEA,YAAY;AACZ;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;;;;;;;;;;;;ACzCA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEa;;AAEb;AACA;AACA;;AAEA,YAAY,mBAAO,CAAC,4DAAa;AACjC,eAAe,mBAAO,CAAC,sDAAU;AACjC,SAAS,mBAAO,CAAC,8CAAI;;AAErB;AACA,WAAW,QAAQ;AACnB,YAAY;AACZ;AACA;;AAEA;AACA,qBAAqB;AACrB;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;;;;;;AC9CA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEa;;AAEb;AACA;AACA;AACA;;AAEA,cAAc,mBAAO,CAAC,oDAAS;AAC/B,gBAAgB,mBAAO,CAAC,8CAAM;AAC9B,WAAW,4CAAmB;AAC9B,aAAa,mBAAO,CAAC,oDAAS;AAC9B,WAAW,mBAAO,CAAC,kBAAM;AACzB,YAAY,mBAAO,CAAC,gDAAO;AAC3B,iBAAiB,mBAAO,CAAC,8DAAc;AACvC,YAAY,mBAAO,CAAC,sDAAU;AAC9B,gBAAgB,mBAAO,CAAC,0DAAY;;AAEpC;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA,WAAW,cAAc;AACzB,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,SAAS;AACpB,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,sCAAsC;AACtC;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,OAAO;AAClB,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,cAAc;AACzB,YAAY;AACZ;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,oBAAoB,gBAAgB;AACpC;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,CAAC;;AAED;AACA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,CAAC;;AAED;;AAEA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,UAAU;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;;;;;;;;;;;AC5gBA;AACA;AACA;AACA;AACA;AACA;;AAEa;;AAEb;AACA;AACA;AACA;;AAEA,aAAa,+GAA6B;AAC1C,yBAAyB,mBAAO,CAAC,4EAAqB;AACtD,kBAAkB,mBAAO,CAAC,4DAAa;AACvC,gBAAgB,mBAAO,CAAC,8CAAM;AAC9B,gBAAgB,mBAAO,CAAC,wDAAW;AACnC,iBAAiB,mBAAO,CAAC,4DAAa;AACtC,WAAW,mBAAO,CAAC,kBAAM;AACzB,iBAAiB,0FAA6B;AAC9C,iBAAiB,mBAAO,CAAC,4DAAa;AACtC,WAAW,mBAAO,CAAC,kBAAM;AACzB,eAAe,mBAAO,CAAC,sDAAU;AACjC,YAAY,mBAAO,CAAC,4DAAa;AACjC,WAAW,kGAAgC;AAC3C,oBAAoB,6FAAgC;AACpD,qBAAqB,8FAAiC;AACtD,iBAAiB,0FAA6B;AAC9C,aAAa,mBAAO,CAAC,kDAAQ;AAC7B,WAAW,mBAAO,CAAC,8CAAM;AACzB;AACA;AACA;AACA,WAAW,mBAAO,CAAC,8CAAM;;AAEzB;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA,sBAAsB;;AAEtB;AACA;AACA;AACA,WAAW,QAAQ;AACnB,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,WAAW,QAAQ;AACnB,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA;AACA,kCAAkC;AAClC,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,cAAc;AAChC;AACA;AACA,WAAW,qCAAqC;AAChD;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,YAAY;AAC9B;AACA,WAAW,8BAA8B;AACzC;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,YAAY;AAC/B;AACA,WAAW,8BAA8B;AACzC;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,4FAA4F;AAC5F;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uDAAuD;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,UAAU;AACV,QAAQ;AACR;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uDAAuD;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,UAAU;AACV,QAAQ;AACR;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,oBAAoB,iBAAiB;AACrC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,YAAY,gBAAgB;AAC5B;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,qBAAqB,gBAAgB;AACrC;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,qBAAqB,gBAAgB;AACrC;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,YAAY,gBAAgB;AAC5B;AACA;;AAEA;AACA;AACA;;AAEA;AACA,2BAA2B,wBAAwB;;AAEnD;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA,IAAI;AACJ;AACA,qDAAqD,gBAAgB;AACrE,KAAK;AACL;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC,QAAQ;AACjD;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,cAAc;AACzB,YAAY,gBAAgB;AAC5B;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,2CAA2C;AAC3D;AACA;AACA;AACA,WAAW,eAAe;AAC1B,WAAW,cAAc;AACzB,YAAY,gBAAgB;AAC5B;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,yDAAyD;AACzD,iCAAiC;AACjC;AACA;;AAEA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,YAAY;AACZ;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,YAAY,gBAAgB;AAC5B;AACA;;AAEA;AACA,qBAAqB,iCAAiC;;AAEtD;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC,wDAAwD;AAC9F;AACA;AACA,sCAAsC,gCAAgC;AACtE;AACA,WAAW,QAAQ;AACnB,WAAW,eAAe;AAC1B,WAAW,QAAQ;AACnB,YAAY,gBAAgB;AAC5B;AACA;;AAEA;AACA,qBAAqB;AACrB;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,YAAY,gBAAgB;AAC5B;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC;AAChC;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;;AAEA;AACA;;AAEA,mBAAmB,YAAY;AAC/B;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;;AAEA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,cAAc;AACzB,YAAY,gBAAgB;AAC5B;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,sBAAsB,iBAAiB;AACvC;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,GAAG;AACd,WAAW,UAAU;AACrB,WAAW,QAAQ;AACnB,WAAW,SAAS;AACpB,aAAa;AACb;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;;;;;;;;;;;;AChpCA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEa;;AAEb;AACA;AACA;AACA;;AAEA,YAAY,mBAAO,CAAC,+DAAS;AAC7B,YAAY,mBAAO,CAAC,+DAAS;AAC7B,cAAc,mBAAO,CAAC,oDAAS;AAC/B,YAAY,mBAAO,CAAC,4DAAa;AACjC,YAAY,mBAAO,CAAC,yEAAO;AAC3B,gBAAgB,mBAAO,CAAC,8CAAM;AAC9B,cAAc,mBAAO,CAAC,wEAAe;AACrC,eAAe,mBAAO,CAAC,sDAAU;AACjC,qBAAqB,mBAAO,CAAC,kEAAgB;;AAE7C;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,YAAY,QAAQ;AACpB;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA,WAAW,QAAQ;AACnB,WAAW,UAAU;AACrB,YAAY,KAAK;AACjB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,kBAAkB,SAAS;AAC3B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA,QAAQ;AACR;AACA;;AAEA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,MAAM;AACN;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA,kBAAkB,sBAAsB;AACxC;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;;AAEL;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,YAAY;AACZ;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;;AAEH;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA,kBAAkB,qBAAqB;AACvC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,QAAQ;AACnB;AACA;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,oBAAoB;;AAEpB;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,YAAY,QAAQ;AACpB;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,kBAAkB,kBAAkB;AACpC;AACA;AACA;;AAEA;AACA;AACA,oBAAoB,kBAAkB;AACtC;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,4CAA4C,SAAS;AACrD;AACA;;AAEA;AACA;AACA;;;;;;;;;;;;AChqBA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEa;;AAEb;AACA;AACA;AACA;;AAEA,iBAAiB,mBAAO,CAAC,kEAAgB;AACzC,YAAY,mBAAO,CAAC,yEAAO;;AAE3B;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,SAAS;AACpB,WAAW,UAAU;AACrB,WAAW,UAAU;AACrB;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,SAAS;AACpB,WAAW,UAAU;AACrB,WAAW,UAAU;AACrB;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,YAAY;AACZ;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA,kBAAkB,kBAAkB;AACpC;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;;;;;;ACpLA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEa;;AAEb;AACA;AACA;AACA;;AAEA,YAAY,mBAAO,CAAC,yEAAO;AAC3B,cAAc,mBAAO,CAAC,wEAAe;AACrC,YAAY,mBAAO,CAAC,+DAAS;AAC7B,cAAc,mBAAO,CAAC,oDAAS;;AAE/B;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,YAAY,OAAO;AACnB;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,kBAAkB,oBAAoB;AACtC;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,YAAY;AACZ;AACA;;AAEA,kBAAkB;AAClB;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA;;;;;;;;;;;;AC/SA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEa;;AAEb;AACA;AACA;AACA;;AAEA,YAAY,mBAAO,CAAC,yEAAO;AAC3B,WAAW,mBAAO,CAAC,kBAAM;AACzB,SAAS,mBAAO,CAAC,cAAI;;AAErB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,aAAa,qEAAQ,GAAG,CAAC;;AAEzB;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA,kBAAkB,2BAA2B;AAC7C;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,UAAU;AACrB;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,YAAY;AACZ;AACA;;AAEA;AACA;;AAEA;AACA;AACA,IAAI;AACJ;AACA;AACA;;;;;;;;;;;ACrLA;AACA;AACA;AACA;AACA;;AAEA,UAAU,iHAAmC;AAC7C,WAAW;AACX,kBAAkB;AAClB,YAAY;AACZ,YAAY;AACZ,iBAAiB;AACjB,eAAe;AACf;AACA;AACA;;AAEA;AACA;AACA;;AAEA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,oBAAoB;AACpB;AACA;AACA,IAAI;AACJ;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAM;AACN,MAAM,qBAAqB;AAC3B;AACA,IAAI;AACJ;;AAEA;AACA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAI;;AAEJ;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA,IAAI;AACJ;;;;;;;;;;;;ACvLA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,cAAc;AACd,eAAe;AACf,cAAc;AACd,eAAe;AACf,uGAAgC;;AAEhC;AACA;AACA;;AAEA,aAAa;AACb,aAAa;;AAEb;AACA;AACA;AACA;AACA;;AAEA,kBAAkB;;AAElB;AACA;AACA;;AAEA;;AAEA;AACA;AACA,WAAW,QAAQ;AACnB,YAAY;AACZ;AACA;;AAEA;AACA;;AAEA;AACA;AACA,eAAe;AACf;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,YAAY;AACZ;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,oBAAoB,iBAAiB;AACrC;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB;AACA;;AAEA;AACA;;AAEA,EAAE,aAAa;AACf,EAAE,aAAa;;AAEf;AACA;;AAEA,kBAAkB,SAAS;AAC3B,6BAA6B;AAC7B;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,YAAY;AACZ;AACA;;AAEA;AACA;AACA,0CAA0C,SAAS;AACnD;AACA;AACA;AACA;AACA,0CAA0C,SAAS;AACnD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA;;;;;;;;;;;ACzMA;AACA;AACA;AACA;;AAEA;AACA,EAAE,wHAAwC;AAC1C,EAAE;AACF,EAAE,kHAAqC;AACvC;;;;;;;;;;;ACTA;AACA;AACA;;AAEA,UAAU,mBAAO,CAAC,gBAAK;AACvB,WAAW,mBAAO,CAAC,kBAAM;;AAEzB;AACA;AACA;AACA;AACA;;AAEA,UAAU,iHAAmC;AAC7C,YAAY;AACZ,WAAW;AACX,kBAAkB;AAClB,YAAY;AACZ,YAAY;AACZ,iBAAiB;;AAEjB;AACA;AACA;;AAEA,cAAc;;AAEd;AACA;AACA;AACA;AACA;;AAEA,mBAAmB;AACnB;AACA,CAAC;AACD;AACA;AACA;AACA;AACA,4CAA4C,wBAAwB;;AAEpE;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,CAAC,IAAI;;AAEL;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,6BAA6B;AAC7B;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,oBAAoB;AACpB;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;;AAEA,oBAAoB;AACpB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,sCAAsC;;AAEtC;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,eAAe,mBAAO,CAAC,cAAI;AAC3B,4CAA4C,kBAAkB;AAC9D;AACA;;AAEA;AACA;AACA,gBAAgB,mBAAO,CAAC,gBAAK;AAC7B;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,kBAAkB,iBAAiB;AACnC;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;;;;;;;;;;ACvPA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,eAAe;AAC1B,WAAW,QAAQ;AACnB,YAAY,OAAO;AACnB,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;ACvJA;AACA;AACA,aAAa,mBAAO,CAAC,sBAAQ;AAC7B;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA,EAAE,cAAc;AAChB;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;AChEA;AACA;AACA;AACA;AACA;;AAEY;;AAEZ;AACA;AACA;AACA;;AAEA,YAAY,mBAAO,CAAC,8EAAO;AAC3B,gBAAgB,mBAAO,CAAC,wDAAW;AACnC,iBAAiB,mBAAO,CAAC,4DAAa;AACtC,iBAAiB,mBAAO,CAAC,4DAAa;AACtC,eAAe,mBAAO,CAAC,sDAAU;AACjC,eAAe,mBAAO,CAAC,sDAAU;AACjC,aAAa,mBAAO,CAAC,kDAAQ;;AAE7B;AACA;AACA;AACA;;AAEA,gCAAgC,EAAE;AAClC;;AAEA;AACA;AACA;AACA,oBAAoB;AACpB;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB;AACA;;AAEA;AACA;AACA;AACA,0CAA0C;;AAE1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,WAAW,SAAS;AACpB,WAAW,UAAU;AACrB,WAAW,QAAQ;AACnB,YAAY;AACZ;AACA;;AAEA;AACA;;AAEA;AACA,wBAAwB,aAAoB,IAAI,CAAa;;AAE7D;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;;AAEA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,kBAAkB,iBAAiB;AACnC;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,YAAY;AACZ;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,iBAAiB;AAC5B,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,iBAAiB;AAC5B,YAAY;AACZ;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,aAAa;AACb;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,iBAAiB;AAC5B,WAAW,iBAAiB;AAC5B,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,8CAA8C;AAC9C;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,iBAAiB;AAC5B,WAAW,QAAQ;AACnB;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,kBAAkB,iBAAiB;AACnC;AACA;AACA;AACA;;;;;;;;;;;AC/UA;AACA;AACA;AACA;AACA;;AAEA,UAAU,sHAAmC;AAC7C,WAAW;AACX,kBAAkB;AAClB,YAAY;AACZ,YAAY;AACZ,iBAAiB;AACjB,eAAe;AACf;AACA;AACA;;AAEA;AACA;AACA;;AAEA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,oBAAoB;AACpB;AACA;AACA,IAAI;AACJ;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAM;AACN,MAAM,qBAAqB;AAC3B;AACA,IAAI;AACJ;;AAEA;AACA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAI;;AAEJ;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA,IAAI;AACJ;;;;;;;;;;;;ACvLA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,cAAc;AACd,eAAe;AACf,cAAc;AACd,eAAe;AACf,4GAAgC;;AAEhC;AACA;AACA;;AAEA,aAAa;AACb,aAAa;;AAEb;AACA;AACA;AACA;AACA;;AAEA,kBAAkB;;AAElB;AACA;AACA;;AAEA;;AAEA;AACA;AACA,WAAW,QAAQ;AACnB,YAAY;AACZ;AACA;;AAEA;AACA;;AAEA;AACA;AACA,eAAe;AACf;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,YAAY;AACZ;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,oBAAoB,iBAAiB;AACrC;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB;AACA;;AAEA;AACA;;AAEA,EAAE,aAAa;AACf,EAAE,aAAa;;AAEf;AACA;;AAEA,kBAAkB,SAAS;AAC3B,6BAA6B;AAC7B;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,YAAY;AACZ;AACA;;AAEA;AACA;AACA,0CAA0C,SAAS;AACnD;AACA;AACA;AACA;AACA,0CAA0C,SAAS;AACnD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA;;;;;;;;;;;ACzMA;AACA;AACA;AACA;;AAEA;AACA,EAAE,6HAAwC;AAC1C,EAAE;AACF,EAAE,uHAAqC;AACvC;;;;;;;;;;;ACTA;AACA;AACA;;AAEA,UAAU,mBAAO,CAAC,gBAAK;AACvB,WAAW,mBAAO,CAAC,kBAAM;;AAEzB;AACA;AACA;AACA;AACA;;AAEA,UAAU,sHAAmC;AAC7C,YAAY;AACZ,WAAW;AACX,kBAAkB;AAClB,YAAY;AACZ,YAAY;AACZ,iBAAiB;;AAEjB;AACA;AACA;;AAEA,cAAc;;AAEd;AACA;AACA;AACA;AACA;;AAEA,mBAAmB;AACnB;AACA,CAAC;AACD;AACA;AACA;AACA;AACA,4CAA4C,wBAAwB;;AAEpE;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,CAAC,IAAI;;AAEL;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,6BAA6B;AAC7B;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,oBAAoB;AACpB;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;;AAEA,oBAAoB;AACpB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,sCAAsC;;AAEtC;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,eAAe,mBAAO,CAAC,cAAI;AAC3B,4CAA4C,kBAAkB;AAC9D;AACA;;AAEA;AACA;AACA,gBAAgB,mBAAO,CAAC,gBAAK;AAC7B;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,kBAAkB,iBAAiB;AACnC;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;;;;;;;;;;ACvPA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,eAAe;AAC1B,WAAW,QAAQ;AACnB,YAAY,OAAO;AACnB,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACvJA;AACA;AACA;AACA;AACA;;AAEY;;AAEZ;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,kCAAkC,QAAQ;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;;;;;;;;;;;ACzFA;AACA;AACA;AACA;AACA;AACA;;AAEY;;AAEZ;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,oBAAoB,oBAAoB;AACxC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,oCAAoC,SAAS;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;;;;;;ACxIa;;AAEb;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,oBAAoB,iBAAiB;AACrC;AACA;;AAEA,+EAA+E,sCAAsC;;AAErH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;;;;;;;;;;ACnDa;;AAEb,qBAAqB,mBAAO,CAAC,4EAAkB;;AAE/C;;;;;;;;;;;;ACJa;;AAEb;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,kCAAkC,8CAA8C;AAChF,GAAG;AACH;;AAEA;AACA;AACA;AACA,UAAU;AACV,GAAG;AACH,gBAAgB;AAChB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA,IAAI;AACJ;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,EAAE;AACF;;AAEA,iBAAiB,mBAAO,CAAC,4DAAa;;AAEtC,uDAAuD,uBAAuB;;AAE9E;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,qDAAqD;AACrD,GAAG;AACH,gDAAgD;AAChD,GAAG;AACH,sDAAsD;AACtD,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,WAAW,mBAAO,CAAC,gEAAe;AAClC,aAAa,mBAAO,CAAC,gDAAK;AAC1B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,+BAA+B;AAC/B;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,+BAA+B,kBAAkB;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;AC7Ua;;AAEb;AACA,oBAAoB,mBAAO,CAAC,wDAAS;;AAErC;AACA,yCAAyC;AACzC,qCAAqC;AACrC,8CAA8C;AAC9C,0CAA0C;;AAE1C;AACA;;;;;;;;;;;;ACZa;;AAEb;AACA;AACA,2FAA2F;AAC3F,4CAA4C;;AAE5C;AACA;AACA;AACA,gCAAgC;;AAEhC,kEAAkE;AAClE,qEAAqE;;AAErE;AACA,iCAAiC;AACjC;AACA,uCAAuC;;AAEvC,2DAA2D;AAC3D,+DAA+D;;AAE/D;AACA;AACA,oBAAoB,gBAAgB;AACpC,2EAA2E;;AAE3E,yGAAyG;;AAEzG;AACA,6CAA6C;;AAE7C,8DAA8D;;AAE9D;AACA;AACA,uEAAuE;AACvE;;AAEA;AACA;;;;;;;;;;;;ACzCa;;AAEb,WAAW,mBAAO,CAAC,gEAAe;;AAElC;;;;;;;;;;;;ACJA;AACA;AACA;AACA;AACA;AACA;;AAEY;;AAEZ;AACA;AACA;AACA;;AAEA,gBAAgB,mBAAO,CAAC,8CAAM;AAC9B,qBAAqB,mBAAO,CAAC,kEAAgB;AAC7C,eAAe,mBAAO,CAAC,sDAAU;AACjC,eAAe,mBAAO,CAAC,yDAAU;AACjC,mBAAmB,mBAAO,CAAC,8DAAc;;AAEzC;AACA;AACA;AACA;;AAEA;AACA,wBAAwB;AACxB,0BAA0B;;AAE1B;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa;AACb;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,sBAAsB;AACxC;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA,MAAM;AACN;AACA,MAAM;AACN;AACA,MAAM;AACN;AACA;AACA;;AAEA;AACA,sCAAsC;AACtC;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;;;;;;;;;;AChSa;AACb,aAAa,4FAA8B;;AAE3C;AACA;AACA;;AAEA,aAAa;;AAEb;AACA;AACA;AACA;AACA;AACA;;AAEA,gBAAgB,WAAW;AAC3B;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qDAAqD;;AAErD;AACA;;AAEA;AACA,oBAAoB,yBAAyB;AAC7C;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,wBAAwB,wCAAwC;AAChE;AACA;AACA;AACA;AACA,uCAAuC,aAAa;AACpD;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA,+CAA+C;;AAE/C;AACA;AACA;;AAEA;AACA;;AAEA,2BAA2B,WAAW;AACtC;AACA;AACA,+BAA+B,WAAW;AAC1C;AACA;AACA,2BAA2B,WAAW;AACtC;AACA,2BAA2B,WAAW;AACtC;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW,UAAU;AACrB;AACA;AACA;;AAEA;AACA,iCAAiC,OAAO,OAAO;AAC/C;;AAEA,iCAAiC;AACjC;AACA;AACA;AACA,sCAAsC;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,oBAAoB,kBAAkB;AACtC;AACA,wCAAwC;AACxC,4BAA4B,gBAAgB;AAC5C;AACA,uDAAuD;AACvD;AACA;AACA;AACA;AACA;AACA;AACA,4DAA4D;AAC5D;AACA;AACA,oCAAoC,SAAS;AAC7C,wDAAwD;;AAExD;AACA;AACA;AACA;AACA,kDAAkD;AAClD;AACA;AACA,6CAA6C;AAC7C;AACA,4BAA4B,UAAU;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,2BAA2B;AAC3B;AACA,2DAA2D;AAC3D;AACA;;AAEA;AACA;AACA;AACA;AACA,yEAAyE;AACzE;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sEAAsE;AACtE;AACA;AACA;;AAEA;AACA,oBAAoB,kBAAkB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,oBAAoB,WAAW;AAC/B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AAIA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,iDAAiD;AACjD,kCAAkC;AAClC;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA,cAAc,OAAO;AACrB;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,oBAAoB;AAClD;AACA;;AAEA;AACA;AACA,2DAA2D;AAC3D;AACA,+CAA+C;AAC/C;AACA;;AAEA,cAAc,uCAAuC;AACrD;;AAEA,cAAc,iCAAiC;;AAE/C;AACA;AACA;AACA,wCAAwC;AACxC,sCAAsC;;AAEtC,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC;AAChC;AACA;AACA;AACA;AACA,yCAAyC;AACzC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,uEAAuE;AACvE,sEAAsE;AACtE,oEAAoE;AACpE;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C;AAC3C,2CAA2C;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,gBAAgB;;AAEhB;;AAEA,uBAAuB;AACvB;AACA,sCAAsC;AACtC;AACA;AACA;AACA;AACA,+CAA+C;AAC/C,+CAA+C;AAC/C;AACA,UAAU;AACV;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,2BAA2B,gBAAgB;AAC3C;;AAEA;AACA;;AAEA;AACA;AACA;AACA,yCAAyC;AACzC;AACA;AACA,0BAA0B;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC;AACxC;AACA;AACA;AACA,uCAAuC;AACvC;AACA,4BAA4B,oBAAoB;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,qBAAqB;AACrB;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACziBa;;AAEb;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,+EAA+E;AAC/E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,4BAA4B,OAAO,mBAAO,CAAC,4FAAwB,GAAG;AACtE,oBAAoB,+BAA+B;AACnD,0BAA0B,yBAAyB;AACnD,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,4BAA4B,OAAO,mBAAO,CAAC,sFAAqB,GAAG;AACnE,oBAAoB,+BAA+B;AACnD,KAAK;;AAEL;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,OAAO,mBAAO,CAAC,sFAAqB,GAAG;AACnE,KAAK;;AAEL;AACA;AACA;AACA,4BAA4B,OAAO,oHAAqC,CAAC,mBAAO,CAAC,8FAAyB,IAAI;AAC9G,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,OAAO,oHAAqC,CAAC,mBAAO,CAAC,8FAAyB,IAAI;AAC9G,8BAA8B,OAAO,mBAAO,CAAC,wGAA8B,GAAG;AAC9E;AACA,oBAAoB,YAAY;AAChC,KAAK;;AAEL;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,OAAO,mBAAO,CAAC,sFAAqB,GAAG;AACnE,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8DAA8D;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,4BAA4B,OAAO,mBAAO,CAAC,sFAAqB,GAAG;AACnE,KAAK;;AAEL;AACA;AACA;AACA;AACA,4BAA4B,OAAO,oHAAqC,CAAC,mBAAO,CAAC,gGAA0B,IAAI;AAC/G;AACA,KAAK;;AAEL;AACA;AACA;AACA;;;;;;;;;;;;AC/Ka;;AAEb;AACA;AACA;AACA,IAAI,mBAAO,CAAC,uEAAY;AACxB,IAAI,mBAAO,CAAC,iEAAS;AACrB,IAAI,mBAAO,CAAC,+DAAQ;AACpB,IAAI,mBAAO,CAAC,2EAAc;AAC1B,IAAI,mBAAO,CAAC,yEAAa;AACzB,IAAI,mBAAO,CAAC,6FAAuB;AACnC,IAAI,mBAAO,CAAC,2EAAc;AAC1B,IAAI,mBAAO,CAAC,yEAAa;AACzB;;AAEA;AACA,gBAAgB,oBAAoB;AACpC;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACrBa;AACb,aAAa,4FAA8B;;AAE3C;;AAEA;AACA;AACA,cAAc,kCAAkC;AAChD,cAAc,kCAAkC;AAChD;;AAEA,cAAc,kCAAkC;AAChD;;AAEA,cAAc,mBAAmB;AACjC,cAAc,mBAAmB;AACjC,cAAc,mBAAmB;;AAEjC;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,2BAA2B;AAC3B;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA,oBAAoB,2EAAuC;;AAE3D;AACA;;;AAGA;AACA;AACA;;AAEA;;;AAGA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,oBAAoB,gBAAgB;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,oBAAoB,gBAAgB;AACpC;AACA,yCAAyC;AACzC,iCAAiC;AACjC;AACA;AACA;;AAEA,kCAAkC;AAClC;AACA,cAAc,2BAA2B;AACzC;AACA,+BAA+B;AAC/B,cAAc,2BAA2B;AACzC;AACA,+BAA+B;AAC/B,cAAc,OAAO;AACrB;AACA;AACA,UAAU,OAAO;AACjB,iCAAiC;AACjC;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,OAAO;AACrB;AACA;AACA;AACA;AACA,oBAAoB,4BAA4B;AAChD;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;AC3La;AACb,aAAa,4FAA8B;;AAE3C;AACA;;AAEA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,SAAS;AACjC;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,oBAAoB,+BAA+B;AACnD;;AAEA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA,oBAAoB,gBAAgB;AACpC;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,oBAAoB,gBAAgB;AACpC,yBAAyB;AACzB;AACA;AACA;AACA;AACA;;AAEA;AACA;;;;;;;;;;;;ACvEa;;AAEbuNAAuN,iEAAiE,EAAE;AAC1R,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,2JAA2J,iEAAiE,EAAE;AAC9N,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,yLAAyL,iEAAiE,EAAE;AAC5P,GAAG;AACH;AACA;AACA,uNAAuN,iEAAiE,EAAE;AAC1R,GAAG;AACH;AACA;AACA,uNAAuN,gEAAgE,EAAE;AACzR,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;;;;;;;;;;AClca;;AAEb;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;;;;;;;AC5Ka;AACb,aAAa,4FAA8B;;AAE3C;;AAEA;;AAEA,eAAe;AACf;AACA;;AAEA;AACA;AACA;;;AAGA;;AAEA;AACA;;AAEA;AACA;AACA,oBAAoB,gBAAgB;AACpC,0BAA0B,mBAAmB;AAC7C;AACA;AACA;;AAEA;AACA;;;AAGA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,eAAe;AACf;;AAEA,WAAW,kBAAkB;AAC7B;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA,+DAA+D,4BAA4B;;AAE3F;;AAEA,aAAa;AACb;AACA;AACA;;AAEA;AACA;;;AAGA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oEAAoE;;AAEpE,4BAA4B,UAAU;AACtC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;;;;;;;;;;;;AC9Ka;AACb,aAAa,4FAA8B;;AAE3C;AACA;;AAEA,YAAY;AACZ,qBAAqB,WAAW;AAChC;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,qDAAqD;AACrD;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;;;AAGA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,gBAAgB,SAAS;AACzB;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA,oBAAoB,gBAAgB;AACpC,yBAAyB;AACzB;AACA;AACA,wEAAwE;AACxE;AACA;AACA;AACA,UAAU,OAAO;AACjB,wCAAwC;AACxC,wDAAwD;AACxD;AACA,kBAAkB;AAClB;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,6DAA6D;AAC7D,MAAM;AACN;;AAEA,gEAAgE;AAChE,kDAAkD;AAClD;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA,gBAAgB;AAChB;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,oBAAoB,gBAAgB;AACpC;AACA,8CAA8C;AAC9C;AACA;AACA;AACA;AACA;;AAEA,2CAA2C;AAC3C;AACA;;AAEA;AACA,uCAAuC;;AAEvC;AACA;AACA;;AAEA,UAAU,OAAO;AACjB;AACA,yCAAyC;AACzC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,mCAAmC;AACnC;AACA;;AAEA;AACA;;;AAGA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,oBAAoB,gBAAgB;AACpC,yBAAyB;AACzB;AACA;AACA,wEAAwE;AACxE;AACA;AACA;AACA,UAAU,OAAO;AACjB,4CAA4C;AAC5C,yDAAyD;AACzD;AACA,kBAAkB;AAClB;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,6DAA6D;AAC7D,MAAM;AACN;;AAEA,gEAAgE;AAChE,kDAAkD;AAClD;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;;;;;;;;;;;;AC/Ra;;AAEb;;AAEA,kBAAkB;AAClB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;;AAEA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;;;;;;;AClDa;AACb,aAAa,oDAAwB;AACrC;;AAEA;;AAEA;AACA,8BAA8B;;AAE9B;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,yBAAyB,wDAA4B;;AAErD;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,QAAQ;AACtB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,QAAQ;AACtB;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA,2BAA2B,sDAA0B;;AAErD;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,+FAA+F;;AAE/F;;AAEA,yBAAyB,wDAA4B;;AAErD;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,2BAA2B,sDAA0B;;AAErD;AACA;AACA;;AAEA;AACA;AACA;;;;;;;;;;;;ACxNa;;AAEb;AACA;AACA,aAAa,4FAA8B;;AAE3C,kBAAkB,mBAAO,CAAC,yEAAgB;AAC1C;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,4BAA4B;;AAE5B;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,uDAAuD;AACvD;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,0BAA0B,mBAAO,CAAC,sEAAc,GAAG;AACnD;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,0EAA0E;AAC1E;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,oDAAoD,EAAE;AACtD;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA,QAAQ,mBAAO,CAAC,+DAAW;AAC3B;;AAEA;AACA,IAAI,mBAAO,CAAC,uEAAe;AAC3B;;AAEA,IAAI,KAAe,EAAE,EAEpB;;;;;;;;;;;;ACxJY;;AAEb,aAAa,oDAAwB;AACrC,gBAAgB,uDAA2B;;;AAG3C;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;;AAGA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA,mCAAmC;AACnC;AACA;;AAEA;AACA,mBAAmB;AACnB,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,sCAAsC,qBAAqB;AAC3D;AACA;AACA,KAAK;AACL;AACA;;;AAGA;AACA;AACA;AACA;AACA,+CAA+C;AAC/C;AACA;;AAEA;AACA,mBAAmB;AACnB,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,sCAAsC,eAAe;AACrD;AACA;AACA,KAAK;AACL;AACA;;;;;;;;;;;;ACvHA;AACA,aAAa,mBAAO,CAAC,kBAAM;AAC3B;AACA;AACA;AACA,EAAE;AACF;AACA,EAAE,oHAAiD;AACnD;;;;;;;;;;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;AC1BA;AACA;;AAEA;;AAEA;;AAEA,OAAO,KAA6B;AACpC;AACA,IAAI;AACJ;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C,SAAS;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,SAAS;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,QAAQ;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;;AAEA;;AAEA,GAAG;;AAEH;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC,SAAS;AAC/C;AACA;AACA;AACA;AACA,OAAO;AACP,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,SAAS;AACrC;AACA;AACA;AACA,OAAO;AACP,MAAM;AACN;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,wBAAwB,SAAS;AACjC;AACA;AACA,QAAQ;AACR;AACA,QAAQ;AACR;AACA;AACA;AACA,oCAAoC,SAAS;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,8BAA8B,GAAG;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,oCAAoC,SAAS;AAC7C;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC,SAAS;AAC/C;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC,SAAS;AAC/C;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,QAAQ;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;;AAEA;;AAEA,GAAG;;AAEH;;AAEA,yBAAyB,GAAG;;AAE5B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,SAAS;AAC7C;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA,yCAAyC,SAAS;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;;AAEA;AACA,mFAAmF,EAAE;AACrF;AACA,MAAM;AACN;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAM;AACN;AACA,MAAM;AACN;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA,MAAM;AACN;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;;AAEA,CAAC;;;;;;;;;;;AChqBD;AACA;AACA;AACA;AACA;;AAEA;AACA,wBAAwB;AACxB;AACA;AACA;AACA;AACA,2BAA2B;AAC3B;AACA,qBAAqB,MAAM;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC;AAClC,kCAAkC;AAClC,kCAAkC;AAClC,kCAAkC;AAClC,kCAAkC;AAClC,kCAAkC;AAClC;AACA,yDAAyD,MAAM;AAC/D,qDAAqD,MAAM;AAC3D,oDAAoD,MAAM,oCAAoC,MAAM;;AAEpG;AACA;AACA;;AAEA,cAAc;AACd,aAAa;;AAEb;AACA;AACA;AACA,WAAW,QAAQ;AACnB,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,oBAAoB,mBAAmB;AACvC;;AAEA;AACA;AACA;;AAEA,mBAAmB;AACnB;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW,eAAe;AAC1B,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,+BAA+B;AAC/B;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW;AACX,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,YAAY;AACZ;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,YAAY;AACZ;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;;;;;;;;;;AC7QA;AACA;AACA;AACA;AACA;AACA;;AAEY;;AAEZ;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,SAAS;AACpB,aAAa,QAAQ;AACrB;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;;AAEH;AACA;;;;;;;;;;;;AC3DA;AACA;AACA;AACA;AACA;AACA;;AAEa;;AAEb;AACA;AACA;AACA;;AAEA,WAAW,mBAAO,CAAC,kBAAM;;AAEzB;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;ACpEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,2FAAqC;;;;;;;;;;;;ACXrC;AACA;AACA;AACA;AACA;AACA;;AAEY;;AAEZ;AACA;AACA;AACA;;AAEA,SAAS,mBAAO,CAAC,oDAAS;AAC1B,cAAc,iDAAuB;;AAErC;AACA;AACA;AACA;;AAEA,mCAAmC,SAAS;AAC5C;;AAEA;AACA;AACA;AACA;;AAEA,eAAe;AACf,gBAAgB,KAAK;AACrB,mBAAmB;AACnB,iBAAiB;AACjB,kBAAkB;AAClB,cAAc;AACd,aAAa;;AAEb;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,YAAY;AACZ;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,YAAY;AACZ;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,4BAA4B;AAC5B;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,YAAY;AACZ;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,YAAY;AACZ;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,oBAAoB,iBAAiB;AACrC;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;;;;;;;;;;;AC3LA,WAAW,mBAAO,CAAC,kBAAM;AACzB,SAAS,mBAAO,CAAC,cAAI;;AAErB;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,qBAAqB,mCAAmC;AACxD;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,iBAAiB;AACrC;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;;AAEH;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,qCAAqC,SAAS;AAC9C;AACA;;AAEA;AACA;;AAEA;AACA,YAAY,mBAAO,CAAC,wDAAc;;AAElC;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;AC3GA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEa;;AAEb,wBAAwB,mBAAO,CAAC,mEAAe;AAC/C,yBAAyB,mBAAO,CAAC,qEAAgB;AACjD,yBAAyB,mBAAO,CAAC,qEAAgB;AACjD,0BAA0B,mBAAO,CAAC,uEAAiB;;AAEnD;AACA;AACA;AACA;;AAEA;AACA,yBAAyB;;AAEzB;AACA;AACA,WAAW,QAAQ;AACnB;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACjFA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEa;;AAEb;AACA;AACA;AACA;;AAEA;AACA,gCAAgC;;AAEhC;AACA;AACA;AACA;;AAEA,qCAAqC,UAAU;;AAE/C;AACA;AACA;AACA;;AAEA;AACA;;AAEA,yBAAyB,oBAAoB;AAC7C;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,kCAAkC;AAClC,oBAAoB,mBAAmB;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,kBAAkB;;AAElB,kBAAkB,qBAAqB;AACvC;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;;;;;;ACxKA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEa;;AAEb;AACA;AACA;AACA;;AAEA;AACA,iCAAiC;;AAEjC;AACA;AACA;AACA;;AAEA,sCAAsC,UAAU;;AAEhD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,yBAAyB,oBAAoB;AAC7C;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,kCAAkC;AAClC,oBAAoB,mBAAmB;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,kBAAkB;;AAElB,kBAAkB,qBAAqB;AACvC;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;;;;;;ACvLA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEa;;AAEb;AACA;AACA;AACA;;AAEA;AACA,iCAAiC;;AAEjC;AACA;AACA;AACA;;AAEA,wCAAwC,aAAa,YAAY;;AAEjE;AACA;AACA;AACA;;AAEA;AACA;;AAEA,yBAAyB,oBAAoB;AAC7C;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,kCAAkC;AAClC,oBAAoB,mBAAmB;AACvC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,kBAAkB;;AAElB,kBAAkB,qBAAqB;AACvC;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA,IAAI;AACJ;AACA,IAAI;AACJ;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;;;;;;AClLA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEa;;AAEb;AACA;AACA;AACA;;AAEA;AACA,kCAAkC;;AAElC;AACA;AACA;AACA;;AAEA,yCAAyC,SAAS,YAAY;;AAE9D;AACA;AACA;AACA;;AAEA;AACA;;AAEA,yBAAyB,oBAAoB;AAC7C;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,oBAAoB,iBAAiB;AACrC;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,kBAAkB;;AAElB,kBAAkB,qBAAqB;AACvC;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,IAAI;AACJ;AACA;;AAEA;AACA;AACA,IAAI;AACJ;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,MAAM;AACN;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,yBAAyB,oBAAoB;AAC7C;AACA;AACA,MAAM;AACN;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,+BAA+B;;AAE/B,yBAAyB,uBAAuB;AAChD;AACA;AACA,MAAM;AACN,yBAAyB;AACzB;AACA;;AAEA;AACA;;AAEA,kBAAkB,uBAAuB;AACzC;AACA;;AAEA;AACA;;;;;;;;;;;ACrSA,SAAS,mBAAO,CAAC,cAAI;AACrB,WAAW,mBAAO,CAAC,kBAAM;AACzB,SAAS,mBAAO,CAAC,cAAI;;AAErB;AACA,qBAAqB,KAAyC,GAAG,OAAuB,GAAG,CAAO;;AAElG;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,IAAI;;AAEJ;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,KAAyC,oBAAoB,CAAE;AACnE;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA,WAAW;AACX;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,eAAe;;AAEf;;AAEA,kBAAkB,gBAAgB;AAClC;;AAEA;AACA;AACA,MAAM;AACN;AACA,MAAM;AACN;AACA,MAAM;AACN;AACA,MAAM;AACN;AACA,MAAM;AACN;AACA,MAAM;AACN;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA,MAAM;AACN;AACA,MAAM;AACN;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;AC9MA;AACA;AACA;AACA;AACA;;AAEa;AACb;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,kCAAkC;AAClC;AACA;AACA;AACA;;AAEA;AACA;AACA,kBAAkB,QAAQ;AAC1B;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH,kCAAkC;AAClC;AACA;AACA;;AAEA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,iBAAiB,sBAAsB;AACvC;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,mBAAmB,oBAAoB;AACvC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;;;;;;;;;ACzFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,gCAAgC;AAChC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,EAAE;AACvC;AACA,yDAAyD;AACzD;AACA;AACA;AACA,2GAA2G,EAAE;AAC7G;AACA;AACA;AACA;;AAEA,kBAAkB,mBAAO,CAAC,yEAAgB;AAC1C;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,wCAAwC;AACxC;AACA;AACA;;AAEA;;AAEA;AACA;AACA,MAAM;AACN;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,uDAAuD;AACvD;AACA;AACA,kGAAkG,gCAAgC;AAClI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,kBAAkB;AAC1C;AACA;AACA;AACA,uDAAuD;AACvD;AACA;AACA;AACA;AACA,gCAAgC;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,uGAAuG;AAC7H;AACA,kCAAkC;AAClC,kBAAkB,uDAAuD;AACzE;AACA;AACA;AACA,sCAAsC,yBAAyB;AAC/D,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,gBAAgB;AAC/C;AACA,2BAA2B,iCAAiC;AAC5D;AACA,wBAAwB,8BAA8B;AACtD;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,iDAAiD;AACjD;;AAEA,wBAAwB;AACxB,uBAAuB;AACvB,yBAAyB;AACzB,wBAAwB;AACxB,yBAAyB;AACzB,yBAAyB;AACzB,0BAA0B;;AAE1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;;AAEA,iEAAiE;AACjE;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,kBAAkB;AAClB;AACA,aAAa;AACb;AACA;;AAEA;AACA,sBAAsB;AACtB,mCAAmC,OAAO;AAC1C,2BAA2B;AAC3B;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA,iCAAiC;AACjC,MAAM;AACN;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA,qCAAqC;AACrC,MAAM;AACN;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA,iCAAiC;AACjC,MAAM;AACN;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA,qCAAqC;AACrC,MAAM;AACN;AACA;;AAEA;AACA,uCAAuC;AACvC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,aAAa;AACb;AACA;;AAEA;AACA;AACA;;AAEA;AACA,sBAAsB,GAAG;AACzB;;AAEA;AACA;AACA,oCAAoC,sBAAsB;AAC1D;;AAEA;AACA,oBAAoB,eAAe;AACnC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,2BAA2B;AAC3B;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,wBAAwB,gBAAgB;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,iBAAiB;AACzC;AACA;AACA;;AAEA,2BAA2B;AAC3B,8BAA8B,YAAY;AAC1C,wEAAwE,YAAY;AACpF;AACA;AACA,sBAAsB;AACtB,UAAU;AACV;AACA,UAAU;AACV;AACA;AACA;AACA;AACA,wBAAwB,iBAAiB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;AC/fA,gEAAwC;;;;;;;;;;;;ACAxC;AACA;AACA;AACA;AACA;AACA;;AAEY;;AAEZ;AACA;AACA;AACA;;AAEA;AACA,yBAAyB;;AAEzB;AACA;AACA;AACA;;AAEA;AACA,YAAY,mBAAO,CAAC,sDAAU;;AAE9B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,oBAAoB;;AAEpB;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,UAAU;AACrB,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,YAAY;AACZ;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,UAAU;AACrB;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,YAAY;AACZ;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,oBAAoB,kBAAkB;AACtC;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW,gBAAgB;AAC3B,WAAW,UAAU;AACrB;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,mBAAO,CAAC,gCAAa;AAChC,IAAI;AACJ;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;;;;;;ACzOA;AACA;AACA;AACA;AACA;AACA;;AAEY;;AAEZ;AACA;AACA;AACA;;AAEA,UAAU,mBAAO,CAAC,gBAAK;AACvB;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,uBAAuB;;AAEvB;AACA;AACA;AACA,WAAW,eAAe;AAC1B,YAAY;AACZ;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW,eAAe;AAC1B,YAAY;AACZ;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,kBAAkB,gBAAgB;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;AC7JA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,qBAAqB;AACjC,YAAY,OAAO;AACnB,YAAY,QAAQ;AACpB,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,KAAK;AACL;AACA;;AAEA;AACA,+BAA+B;AAC/B;;AAEA;AACA,KAAK;;AAEL;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;;;;;;AChIA;AACA;AACA;AACA;AACA;;AAEY;;AAEZ;AACA;AACA;AACA;;AAEA;AACA,kBAAkB;AAClB,sBAAsB;;AAEtB;AACA;AACA;AACA;;AAEA,gBAAgB,mBAAO,CAAC,wDAAW;AACnC,aAAa,mBAAO,CAAC,6DAAW;;AAEhC;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,uBAAuB;AAClC;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,kBAAkB,sBAAsB;AACxC;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW,cAAc;AACzB;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,IAAI;AACJ;AACA,IAAI;AACJ;AACA;;AAEA,kBAAkB,kBAAkB;AACpC;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB;AACA;;AAEA;AACA;;AAEA,kBAAkB,gBAAgB;AAClC;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,IAAI;AACJ;AACA,IAAI;AACJ;AACA,IAAI;AACJ;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,uBAAuB;AAClC;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,oBAAoB,oBAAoB;AACxC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;;;;;;ACtUa;;AAEb;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;;;;;;;;;;;ACtBa;;AAEb,gBAAgB,mBAAO,CAAC,2DAAa;AACrC,YAAY,mBAAO,CAAC,mDAAS;AAC7B,cAAc,mBAAO,CAAC,uDAAW;;AAEjC;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACVa;;AAEb,YAAY,mBAAO,CAAC,mDAAS;;AAE7B;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,gCAAgC;AAChC;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,yCAAyC,+BAA+B;;AAExE;AACA,wCAAwC;;AAExC;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB;;AAEA;AACA;AACA,oBAAoB,kBAAkB;AACtC;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA,kCAAkC;AAClC;AACA;AACA;;AAEA,gBAAgB,kBAAkB;AAClC;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,UAAU;AACV;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA,mCAAmC,QAAQ;AAC3C;AACA;;AAEA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA,wBAAwB;AACxB,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA,oBAAoB,iBAAiB;AACrC;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;;;;;;;;;;;ACtQa;;AAEb,qBAAqB,mBAAO,CAAC,8DAAc;AAC3C,YAAY,mBAAO,CAAC,mDAAS;AAC7B,cAAc,mBAAO,CAAC,uDAAW;AACjC;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd,iCAAiC;AACjC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,MAAM;AACN;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,wBAAwB;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,qBAAqB,gEAAgE;AACrF,MAAM;AACN;AACA,MAAM;AACN;AACA;AACA;;AAEA,oBAAoB,oBAAoB;AACxC;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAM;AACN;AACA,MAAM;AACN;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,oBAAoB,oBAAoB;AACxC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,2CAA2C;AAC3C;AACA,UAAU;AACV;AACA;AACA;AACA;;AAEA;AACA;;;;;;;;;;;;AC5Ta;;AAEb,cAAc,mBAAO,CAAC,uDAAW;;AAEjC;AACA;;AAEA;AACA;AACA,oBAAoB,SAAS;AAC7B;AACA;;AAEA;AACA,CAAC;;AAED;AACA;AACA;AACA;;AAEA;AACA;;AAEA,4BAA4B,gBAAgB;AAC5C;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,oBAAoB,mBAAmB;AACvC;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA,UAAU;AACV;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA,cAAc;AACd;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;;AAEA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA,iDAAiD,EAAE;AACnD;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAM;AACN;AACA;;AAEA;AACA,kDAAkD,EAAE;AACpD;AACA,SAAS;AACT;;AAEA;AACA,oBAAoB,mBAAmB;AACvC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,mBAAmB,OAAO,UAAU,aAAa;AACjD;;AAEA,oBAAoB,kBAAkB;AACtC;AACA;;AAEA;AACA,wBAAwB,iBAAiB;AACzC;AACA;AACA;AACA,6BAA6B,qBAAqB;AAClD;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,wBAAwB,gBAAgB;AACxC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;AC3PA;AACA;AACA;AACA;AACA;AACA;;AAEY;;AAEZ;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,kBAAkB,gBAAgB;AAClC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,yBAAyB,oBAAoB;AAC7C;AACA;;AAEA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;;;;;;ACjKA;AACA;AACA;AACA;AACA;AACA;;AAEY;;AAEZ;AACA;AACA;AACA;;AAEA;AACA,YAAY,mBAAO,CAAC,gDAAO;AAC3B,kBAAkB,mBAAO,CAAC,4DAAa;AACvC,YAAY,mBAAO,CAAC,8DAAY;AAChC,aAAa,mBAAO,CAAC,kDAAQ;;AAE7B;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB;AACA;;AAEA;AACA;;AAEA;AACA;AACA,IAAI;AACJ;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,wBAAwB;AACnC,WAAW,UAAU;AACrB;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,UAAU;AACrB;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;;AAEA;AACA;AACA,IAAI;AACJ;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,oBAAoB,iBAAiB;AACrC;AACA;;AAEA;AACA;;AAEA;AACA;AACA,MAAM;AACN;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,MAAM;AACN;AACA,MAAM;AACN;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,mBAAO,CAAC,gCAAa;AAChC,IAAI;AACJ;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACzTA,+HAAmD;AAA1C,mHAAU;AACnB,sLAAoF;AAA3E,oJAAqB;AAG9B,6IAA0D;AAAjD,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ACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,WAAW,SAAS;AACpB,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA,WAAW,SAAS;AACpB,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA,WAAW,sBAAsB;AACjC,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA,WAAW,QAAQ;AACnB,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,OAAO;AAClB;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,4CAA4C;AAC5C;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,wDAAwD,IAAI;AAC5D;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,4CAA4C;AAC5C;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,YAAY,QAAQ;AACpB;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,mBAAmB;AACnB,OAAO;AACP;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,qDAAqD;AACrD;;AAEA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB;AACA;;AAEA;AACA;;AAEA,kBAAkB,oBAAoB;AACtC;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB;AACA;AACA;AACA,kBAAkB,gBAAgB;AAClC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,kBAAkB,kBAAkB;AACpC;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,OAAO;AAClB;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,cAAc;AACzB;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,iCAAiC,eAAe;AAChD;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB;AACA;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,aAAa;AACb;AACA;;AAEA;AACA;AACA,oCAAoC;AACpC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,cAAc;AACzB,WAAW,QAAQ;AACnB,aAAa;AACb;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,aAAa;AACb;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,sBAAsB;AACjC,WAAW,QAAQ;AACnB;AACA;;AAEA;AACA;;AAEA,kBAAkB,iBAAiB;AACnC;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,oCAAoC,SAAS;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB;AACA;;AAEA;AACA;;AAEA,kBAAkB,iBAAiB;AACnC;AACA;AACA;AACA;;;;;;;;;;;ACtnCA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,eAAe;AAC1B,WAAW,QAAQ;AACnB,YAAY,OAAO;AACnB,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;ACvJA;AACA;AACA;AACA;AACA;;AAEA,UAAU,8GAAmC;AAC7C,WAAW;AACX,kBAAkB;AAClB,YAAY;AACZ,YAAY;AACZ,iBAAiB;AACjB,eAAe;AACf;AACA;AACA;;AAEA;AACA;AACA;;AAEA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,oBAAoB;AACpB;AACA;AACA,IAAI;AACJ;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAM;AACN,MAAM,qBAAqB;AAC3B;AACA,IAAI;AACJ;;AAEA;AACA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAI;;AAEJ;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA,IAAI;AACJ;;;;;;;;;;;;ACvLA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,cAAc;AACd,eAAe;AACf,cAAc;AACd,eAAe;AACf,uHAAgC;;AAEhC;AACA;AACA;;AAEA,aAAa;AACb,aAAa;;AAEb;AACA;AACA;AACA;AACA;;AAEA,kBAAkB;;AAElB;AACA;AACA;;AAEA;;AAEA;AACA;AACA,WAAW,QAAQ;AACnB,YAAY;AACZ;AACA;;AAEA;AACA;;AAEA;AACA;AACA,eAAe;AACf;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,YAAY;AACZ;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,oBAAoB,iBAAiB;AACrC;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB;AACA;;AAEA;AACA;;AAEA,EAAE,aAAa;AACf,EAAE,aAAa;;AAEf;AACA;;AAEA,kBAAkB,SAAS;AAC3B,6BAA6B;AAC7B;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,YAAY;AACZ;AACA;;AAEA;AACA;AACA,0CAA0C,SAAS;AACnD;AACA;AACA;AACA;AACA,0CAA0C,SAAS;AACnD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA;;;;;;;;;;;ACzMA;AACA;AACA;AACA;;AAEA;AACA,EAAE,qHAAwC;AAC1C,EAAE;AACF,EAAE,+GAAqC;AACvC;;;;;;;;;;;ACTA;AACA;AACA;;AAEA,UAAU,mBAAO,CAAC,gBAAK;AACvB,WAAW,mBAAO,CAAC,kBAAM;;AAEzB;AACA;AACA;AACA;AACA;;AAEA,UAAU,8GAAmC;AAC7C,YAAY;AACZ,WAAW;AACX,kBAAkB;AAClB,YAAY;AACZ,YAAY;AACZ,iBAAiB;;AAEjB;AACA;AACA;;AAEA,cAAc;;AAEd;AACA;AACA;AACA;AACA;;AAEA,mBAAmB;AACnB;AACA,CAAC;AACD;AACA;AACA;AACA;AACA,4CAA4C,wBAAwB;;AAEpE;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,CAAC,IAAI;;AAEL;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,6BAA6B;AAC7B;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,oBAAoB;AACpB;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;;AAEA,oBAAoB;AACpB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,sCAAsC;;AAEtC;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,eAAe,mBAAO,CAAC,cAAI;AAC3B,4CAA4C,kBAAkB;AAC9D;AACA;;AAEA;AACA;AACA,gBAAgB,mBAAO,CAAC,gBAAK;AAC7B;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,kBAAkB,iBAAiB;AACnC;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;;;;;;;;;;ACvPA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,eAAe;AAC1B,WAAW,QAAQ;AACnB,YAAY,OAAO;AACnB,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;;;;;;;;;;ACjKA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEY;;AAEZ;AACA;AACA;AACA;;AAEA,gBAAgB,mBAAO,CAAC,wDAAW;AACnC,iBAAiB,mBAAO,CAAC,4DAAa;AACtC,eAAe,mBAAO,CAAC,sDAAU;AACjC,cAAc,iDAAuB;AACrC,WAAW,mBAAO,CAAC,8CAAM;AACzB,UAAU,mBAAO,CAAC,gBAAK;;AAEvB;AACA;AACA;AACA;;AAEA;AACA,mBAAmB;;AAEnB;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,kBAAkB,gBAAgB;AAClC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,8CAA8C;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACjNY;AACZ;AACA,6CAA6C,gBAAgB;;AAE7D;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;AChBa;;AAEb,mBAAmB,mBAAO,CAAC,gEAAe;AAC1C,gBAAgB,mBAAO,CAAC,sEAAqB;AAC7C,cAAc,mBAAO,CAAC,kEAAgB;;AAEtC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC;AACzC,6BAA6B,6BAA6B;AAC1D;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH,wBAAwB;AACxB;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL,cAAc;AACd;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL,cAAc;AACd;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;AC3HA;AACA;AACA;AACA;AACA;AACA;;AAEY;;AAEZ;AACA;AACA;AACA;;AAEA,YAAY,mBAAO,CAAC,4DAAc;;AAElC;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,eAAe;AAC1B,aAAa;AACb;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;;;;;;;;;;ACjJA;AACA;AACA;AACA;AACA;;AAEY;;AAEZ;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,aAAa;AACb;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;;;;;;;;;;;AC/BA;AACA;AACA;AACA;AACA;AACA;;AAEY;;AAEZ;AACA;AACA;AACA;;AAEA,YAAY,mBAAO,CAAC,4DAAa;AACjC,WAAW,mBAAO,CAAC,0DAAY;;AAE/B;AACA;AACA;AACA;;AAEA;AACA,iBAAiB;AACjB,sBAAsB;AACtB,wBAAwB;AACxB,oBAAoB;;AAEpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,OAAO;AAClB;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,gBAAgB,kBAAkB;AAClC;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,cAAc,kBAAkB;AAChC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC;AACxC,wBAAwB;AACxB,6BAA6B;AAC7B,8CAA8C;AAC9C;AACA;AACA,sCAAsC;AACtC,oCAAoC;AACpC,yCAAyC;AACzC;AACA,wBAAwB;AACxB;AACA,WAAW,cAAc;AACzB,YAAY;AACZ;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,oBAAoB,kBAAkB;AACtC;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,YAAY;AACZ;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,IAAI;AACJ;AACA;AACA;;;;;;;;;;;;ACzQA;AACA;AACA;AACA;AACA;;AAEY;;AAEZ;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,kBAAkB,sBAAsB;AACxC;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,kBAAkB,sBAAsB;AACxC;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;;;;;;;;;;ACpEa;;AAEb;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,YAAY,SAAS;AACrB;AACA;AACA;AACA;AACA;;AAEA;AACA,qCAAqC;AACrC;AACA,MAAM,sCAAsC;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,MAAM,sCAAsC;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,MAAM,sCAAsC;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,MAAM;AACN;AACA;AACA;;AAEA;AACA;;AAEA;;;;;;;;;;;;AC7Da;;AAEb;AACA,mBAAmB,mBAAO,CAAC,kEAAgB;AAC3C,EAAE;AACF,EAAE,uGAAsC;AACxC;;;;;;;;;;;ACNA;AACA;AACA;AACA,iBAAiB;AACjB,iBAAiB;AACjB;AACA;AACA,eAAe;AACf;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;ACtBA,iEAAe,cAAc,EAAE,UAAU,EAAE,eAAe,EAAE,gBAAgB,EAAE,UAAU,GAAG,yCAAyC;;;;;;;;;;;;;;;;;ACAxG;AAC5B,uCAAuC;;AAEvC;AACe;AACf;AACA,IAAI,4DAAqB;AACzB;AACA;;AAEA;AACA;;;;;;;;;;;;;;;;ACXqC;AACrC;AACA;AACA;AACA;;AAEA;;AAEA,gBAAgB,SAAS;AACzB;AACA;;AAEA;AACA;AACA;AACA,4gBAA4gB;AAC5gB;AACA;AACA;AACA;;AAEA,OAAO,wDAAQ;AACf;AACA;;AAEA;AACA;;AAEA,iEAAe,SAAS;;;;;;;;;;;;;;;;;AC5BG;AACY;;AAEvC;AACA;AACA,iDAAiD,+CAAG,KAAK;;AAEzD;AACA,mCAAmC;;AAEnC;AACA;;AAEA,oBAAoB,QAAQ;AAC5B;AACA;;AAEA;AACA;;AAEA,SAAS,yDAAS;AAClB;;AAEA,iEAAe,EAAE;;;;;;;;;;;;;;;;ACvBc;;AAE/B;AACA,qCAAqC,sDAAU;AAC/C;;AAEA,iEAAe,QAAQ;;;;;;;;;;;ACNvB;AACA;AACA;AACA;AACA;;AAEY;;AAEZ;AACA;AACA;;AAEA;AACA,qBAAqB;;AAErB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB;;AAEA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,cAAc;AACzB,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,kBAAkB,mBAAmB;AACrC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,kBAAkB,mBAAmB;AACrC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,uCAAuC,SAAS;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,cAAc;AACzB;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACpJa;;AAEb,kBAAkB,mBAAO,CAAC,+DAAiB;;AAE3C,kCAAkC,mBAAO,CAAC,yDAAc;AACxD,mBAAmB,mBAAO,CAAC,6EAAwB;AACnD,qBAAqB,mBAAO,CAAC,6DAAgB;AAC7C,mBAAmB,mBAAO,CAAC,yDAAc;;AAEzC;AACA;;AAEA;;;;;;;;;;;;ACZa;;AAEb,QAAQ,eAAe,EAAE,mBAAO,CAAC,2DAAa;;AAE9C;AACA;AACA;AACA,WAAW,UAAU;AACrB,WAAW,QAAQ;AACnB,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,kBAAkB,iBAAiB;AACnC;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB;AACA;AACA;AACA,kBAAkB,YAAY;AAC9B;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB;AACA;AACA;AACA,kBAAkB,mBAAmB;AACrC;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,YAAY,aAAa;AACzB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW,GAAG;AACd,YAAY,QAAQ;AACpB,YAAY;AACZ;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA,IAAI;AACJ;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,uBAAuB,mBAAO,CAAC,0DAAY;;AAE3C,IAAI,mBAAmB;AACvB;AACA;AACA;;AAEA,IAAI,qBAAqB;AACzB;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;;;;;;;;;;;;AC9Ha;;AAEb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACXa;;AAEb,QAAQ,kCAAkC,EAAE,mBAAO,CAAC,2DAAa;;AAEjE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,QAAQ;AACrB,cAAc,WAAW;AACzB;AACA;AACA;AACA;AACA;;AAEA;AACA,YAAY;AACZ;AACA;AACA;AACA;;AAEA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;;AAEA,mDAAmD,kBAAkB;AACrE,iDAAiD,kBAAkB;;AAEnE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,QAAQ;AACrB,aAAa,QAAQ;AACrB;AACA,aAAa,QAAQ;AACrB;AACA,aAAa,QAAQ;AACrB;AACA,aAAa,SAAS;AACtB;AACA;AACA,gCAAgC;AAChC;;AAEA;AACA;AACA;AACA;;AAEA;AACA,YAAY;AACZ;AACA;AACA;AACA;;AAEA;AACA,YAAY;AACZ;AACA;AACA;AACA;;AAEA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;;AAEA,sDAAsD,kBAAkB;AACxE,wDAAwD,kBAAkB;AAC1E,0DAA0D,kBAAkB;;AAE5E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,QAAQ;AACrB,aAAa,QAAQ;AACrB;AACA,aAAa,GAAG;AAChB,aAAa,QAAQ;AACrB;AACA,gCAAgC;AAChC;;AAEA;AACA;AACA;;AAEA;AACA,YAAY;AACZ;AACA;AACA;AACA;;AAEA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;;AAEA,uDAAuD,kBAAkB;AACzE,yDAAyD,kBAAkB;;AAE3E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,QAAQ;AACrB,aAAa,QAAQ;AACrB;AACA,aAAa,GAAG;AAChB;AACA,gCAAgC;AAChC;;AAEA;AACA;;AAEA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;;AAEA,wDAAwD,kBAAkB;;AAE1E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,QAAQ;AACrB,aAAa,UAAU;AACvB,aAAa,QAAQ;AACrB;AACA,aAAa,SAAS;AACtB;AACA;AACA;AACA;AACA,+CAA+C;AAC/C;;AAEA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA,MAAM;AACN;AACA;;AAEA;AACA;AACA;AACA,MAAM;AACN;AACA;;AAEA;AACA;;AAEA;AACA;AACA,MAAM;AACN;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA,aAAa,QAAQ;AACrB,aAAa,UAAU;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACzQa;;AAEb,QAAQ,aAAa,EAAE,mBAAO,CAAC,6DAAc;;AAE7C;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,yBAAyB;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAAS,mBAAmB;AAC5B;;AAEA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA,QAAQ,4BAA4B;AACpC;AACA,iEAAiE,EAAE;AACnE;;AAEA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;;AAEA;AACA,QAAQ;AACR,+DAA+D,EAAE;AACjE;AACA,MAAM;AACN;AACA;AACA,QAAQ;AACR;AACA,QAAQ;AACR;AACA,iEAAiE,EAAE;AACnE;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,QAAQ;AACR;AACA;AACA,QAAQ;AACR,+DAA+D,EAAE;AACjE;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iEAAiE,EAAE;AACnE;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA,UAAU;AACV;AACA;AACA,UAAU;AACV;AACA,UAAU;AACV,iEAAiE,EAAE;AACnE;AACA,QAAQ;AACR;AACA,QAAQ;AACR;AACA,QAAQ;AACR;AACA,QAAQ;AACR;AACA,iEAAiE,EAAE;AACnE;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,QAAQ;AACR,+DAA+D,EAAE;AACjE;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA,MAAM;AACN;AACA,MAAM;AACN;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mDAAmD,EAAE,GAAG,EAAE;AAC1D,2BAA2B;AAC3B,eAAe;AACf;AACA,qBAAqB;AACrB,SAAS;AACT;AACA,KAAK;AACL;AACA;;AAEA,mBAAmB;;;;;;;;;;;;AC1MN;;AAEb;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,UAAU;AACvB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;ACtDa;;AAEb,aAAa,mBAAO,CAAC,kBAAM;;AAE3B,mBAAmB,mBAAO,CAAC,+DAAe;AAC1C,gBAAgB,mBAAO,CAAC,uDAAW;AACnC,QAAQ,cAAc,EAAE,mBAAO,CAAC,2DAAa;;AAE7C;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,QAAQ;AACrB,aAAa,kBAAkB;AAC/B;AACA,aAAa,SAAS;AACtB;AACA,aAAa,QAAQ;AACrB;AACA,aAAa,kBAAkB;AAC/B;AACA,aAAa,SAAS;AACtB;AACA,aAAa,QAAQ;AACrB;AACA,aAAa,QAAQ;AACrB;AACA,aAAa,QAAQ;AACrB;AACA,aAAa,SAAS;AACtB;AACA,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,YAAY;AACZ;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc,QAAQ;AACtB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,aAAa,OAAO;AACpB,cAAc,QAAQ;AACtB;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,OAAO;AACpB,cAAc,QAAQ;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,aAAa,OAAO;AACpB,cAAc,QAAQ;AACtB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,aAAa,OAAO;AACpB,cAAc,OAAO;AACrB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,wCAAwC,IAAI;AAC5C;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,gDAAgD,IAAI,KAAK,MAAM;AAC/D;AACA;AACA;AACA,YAAY;AACZ;AACA,8CAA8C,IAAI,KAAK,MAAM;AAC7D;AACA;AACA,UAAU;AACV;AACA;AACA;AACA,8CAA8C,IAAI,KAAK,MAAM;AAC7D;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA,8CAA8C,IAAI,KAAK,MAAM;AAC7D;AACA;AACA,UAAU;AACV,gDAAgD,IAAI;AACpD;;AAEA;AACA,OAAO;AACP,KAAK;;AAEL;AACA;;AAEA;AACA;AACA;AACA,aAAa,QAAQ;AACrB,aAAa,SAAS;AACtB,aAAa,UAAU;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;;AAEA;AACA;AACA;AACA,aAAa,iBAAiB;AAC9B,aAAa,SAAS;AACtB,aAAa,UAAU;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;;AAEA;AACA;AACA;AACA,aAAa,QAAQ;AACrB,aAAa,SAAS;AACtB,aAAa,UAAU;AACvB;AACA;AACA;AACA;;AAEA;AACA,qBAAqB,SAAS;AAC9B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,QAAQ;AACR;AACA;;AAEA,kCAAkC,SAAS;AAC3C;AACA;AACA;;AAEA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA,aAAa,iBAAiB;AAC9B,aAAa,SAAS;AACtB,aAAa,UAAU;AACvB;AACA;AACA;AACA;;AAEA;AACA,qBAAqB,SAAS;AAC9B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;;AAEP;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,gCAAgC,SAAS;AACzC;AACA;;AAEA;AACA,KAAK;AACL;AACA;;AAEA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;AC9fa;;AAEb,QAAQ,WAAW,EAAE,mBAAO,CAAC,sBAAQ;;AAErC,0BAA0B,mBAAO,CAAC,6EAAsB;AACxD;AACA;AACA;AACA;AACA;AACA,EAAE,EAAE,mBAAO,CAAC,2DAAa;AACzB,QAAQ,gCAAgC,EAAE,mBAAO,CAAC,+DAAe;AACjE,QAAQ,iCAAiC,EAAE,mBAAO,CAAC,6DAAc;;AAEjE;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,QAAQ;AACrB,aAAa,QAAQ;AACrB,aAAa,QAAQ;AACrB;AACA,aAAa,SAAS;AACtB;AACA,aAAa,QAAQ;AACrB,aAAa,SAAS;AACtB;AACA;AACA,0BAA0B;AAC1B;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,QAAQ;AACrB,aAAa,QAAQ;AACrB,aAAa,UAAU;AACvB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,QAAQ;AACrB,cAAc,QAAQ;AACtB;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,QAAQ;AACR;AACA;AACA;;AAEA;AACA,MAAM;;AAEN;AACA;;AAEA;AACA;AACA;AACA,aAAa,UAAU;AACvB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;;AAEN;AACA;;AAEA;AACA;AACA;AACA,cAAc,wBAAwB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA,4BAA4B,aAAa;AACzC;AACA;AACA;AACA;AACA;;AAEA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,oCAAoC,oBAAoB;AACxD;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA,0BAA0B,aAAa;AACvC;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc,wBAAwB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc,wBAAwB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc,wBAAwB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,UAAU;AACvB,cAAc,8BAA8B;AAC5C;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,aAAa,QAAQ;AACrB,aAAa,UAAU;AACvB;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA,cAAc,mBAAmB;AACjC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,UAAU;AACV;AACA,UAAU;AACV;AACA;;AAEA;AACA,QAAQ;AACR;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,aAAa,QAAQ;AACrB,cAAc,8BAA8B;AAC5C;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;;AAEA;AACA;AACA;AACA,mCAAmC,KAAK;AACxC;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAM;AACN;AACA,MAAM;AACN;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,WAAW,gCAAgC;AAC3C,WAAW,QAAQ;AACnB,WAAW,SAAS;AACpB;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,YAAY,oBAAoB;AAChC;AACA;AACA;AACA;AACA,yCAAyC,QAAQ;AACjD;;AAEA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACzmBA,sCAAsC,kCAAkC;;AAE3D;;AAEb,YAAY,mBAAO,CAAC,gBAAK;AACzB,YAAY,mBAAO,CAAC,gBAAK;AACzB,QAAQ,iBAAiB,EAAE,mBAAO,CAAC,sBAAQ;;AAE3C,0BAA0B,mBAAO,CAAC,6EAAsB;AACxD,QAAQ,eAAe,EAAE,mBAAO,CAAC,2DAAa;AAC9C,QAAQ,oBAAoB,EAAE,mBAAO,CAAC,6DAAc;AACpD,QAAQ,4BAA4B,EAAE,mBAAO,CAAC,+DAAe;;AAE7D;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,yBAAyB;AACtC,aAAa,QAAQ;AACrB,aAAa,UAAU;AACvB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,iBAAiB;AAC9B,aAAa,QAAQ;AACrB,aAAa,SAAS;AACtB;AACA,aAAa,UAAU;AACvB;AACA,aAAa,SAAS;AACtB;AACA,aAAa,QAAQ;AACrB;AACA,aAAa,QAAQ;AACrB,aAAa,SAAS;AACtB;AACA,aAAa,SAAS;AACtB;AACA,cAAc,mBAAmB;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,QAAQ;AACR;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA,MAAM;AACN;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,QAAQ;AACrB,aAAa,iBAAiB;AAC9B,aAAa,SAAS;AACtB,aAAa,UAAU;AACvB;AACA;AACA;AACA;;AAEA;AACA;AACA,MAAM;AACN;AACA,MAAM;AACN;AACA;AACA,MAAM;AACN;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,QAAQ;AACR;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,MAAM;AACN;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,GAAG;AAChB,aAAa,SAAS;AACtB,aAAa,UAAU;AACvB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,MAAM;AACN;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,GAAG;AAChB,aAAa,SAAS;AACtB,aAAa,UAAU;AACvB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,MAAM;AACN;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,GAAG;AAChB,aAAa,QAAQ;AACrB,aAAa,SAAS;AACtB;AACA,aAAa,SAAS;AACtB;AACA,aAAa,SAAS;AACtB;AACA,aAAa,SAAS;AACtB;AACA,aAAa,UAAU;AACvB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,QAAQ;AACR;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,iBAAiB;AAC9B,aAAa,SAAS;AACtB;AACA,aAAa,QAAQ;AACrB,aAAa,SAAS;AACtB;AACA,aAAa,UAAU;AACvB;AACA,aAAa,SAAS;AACtB;AACA,aAAa,QAAQ;AACrB;AACA,aAAa,QAAQ;AACrB,aAAa,SAAS;AACtB;AACA,aAAa,SAAS;AACtB;AACA,aAAa,UAAU;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,wBAAwB,wBAAwB;AAChD;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,UAAU;AACvB,aAAa,UAAU;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;AC7da;;AAEb,QAAQ,SAAS,EAAE,mBAAO,CAAC,sBAAQ;;AAEnC;AACA;AACA;AACA,WAAW,QAAQ;AACnB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,WAAW;AACtB,WAAW,QAAQ;AACnB,YAAY,QAAQ;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;;AAEA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,KAAK;;AAEL;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;AC9Ja;;AAEb,QAAQ,aAAa,EAAE,mBAAO,CAAC,6DAAc;;AAE7C;AACA;AACA;AACA,WAAW,QAAQ;AACnB,YAAY,KAAK;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,UAAU,mBAAmB;AAC7B;;AAEA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA,MAAM;AACN;AACA,+DAA+D,EAAE;AACjE;;AAEA;;AAEA;;AAEA;AACA,sCAAsC,SAAS;AAC/C;;AAEA;AACA;AACA,MAAM;AACN,6DAA6D,EAAE;AAC/D;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA,kCAAkC,SAAS;AAC3C;;AAEA;AACA;AACA;;AAEA,mBAAmB;;;;;;;;;;;;AC7DN;;AAEb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,YAAY,SAAS;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,YAAY,SAAS;AACrB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,MAAM;AACN;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,wBAAwB,mBAAO,CAAC,kEAAgB;;AAEhD,IAAI,0BAA0B;AAC9B;AACA;AACA,IAAI;AACJ;AACA;AACA;;;;;;;;;;;;AC5HA,sCAAsC,wCAAwC;;AAEjE;;AAEb,qBAAqB,mBAAO,CAAC,sBAAQ;AACrC,aAAa,mBAAO,CAAC,kBAAM;AAC3B,cAAc,mBAAO,CAAC,oBAAO;AAC7B,YAAY,mBAAO,CAAC,gBAAK;AACzB,YAAY,mBAAO,CAAC,gBAAK;AACzB,QAAQ,aAAa,EAAE,mBAAO,CAAC,sBAAQ;;AAEvC,kBAAkB,mBAAO,CAAC,2DAAa;AACvC,0BAA0B,mBAAO,CAAC,6EAAsB;AACxD,oBAAoB,mBAAO,CAAC,+DAAe;AAC3C,kBAAkB,mBAAO,CAAC,2DAAa;AACvC,QAAQ,mBAAmB,EAAE,mBAAO,CAAC,2DAAa;;AAElD,iCAAiC,GAAG;;AAEpC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,QAAQ;AACrB,aAAa,QAAQ;AACrB;AACA,aAAa,SAAS;AACtB;AACA,aAAa,UAAU;AACvB,aAAa,QAAQ;AACrB,aAAa,QAAQ;AACrB;AACA,aAAa,SAAS;AACtB,aAAa,QAAQ;AACrB,aAAa,kBAAkB;AAC/B;AACA,aAAa,QAAQ;AACrB,aAAa,4BAA4B;AACzC;AACA,aAAa,SAAS;AACtB;AACA,aAAa,UAAU;AACvB,aAAa,UAAU;AACvB;AACA,aAAa,UAAU;AACvB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,sBAAsB;AACpC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa,UAAU;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA,QAAQ;AACR;AACA;AACA,MAAM;AACN;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA,aAAa,sBAAsB;AACnC,cAAc,SAAS;AACvB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,aAAa,sBAAsB;AACnC,aAAa,yBAAyB;AACtC;AACA,aAAa,QAAQ;AACrB,aAAa,UAAU;AACvB;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,kDAAkD;AAC3E;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,aAAa,QAAQ;AACrB,aAAa,QAAQ;AACrB,aAAa,KAAK;AAClB,aAAa,sBAAsB;AACnC,aAAa,yBAAyB;AACtC;AACA,aAAa,QAAQ;AACrB,aAAa,UAAU;AACvB,cAAc,OAAO;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,+BAA+B,OAAO;AACtC;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,gDAAgD,SAAS;AACzD;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP,gDAAgD,MAAM;AACtD;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,WAAW,cAAc;AACzB,WAAW,2BAA2B;AACtC,YAAY,UAAU;AACtB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,cAAc;AACzB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,yBAAyB;AACpC,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,gBAAgB,MAAM,EAAE,wBAAwB;AAChD;AACA,uBAAuB,EAAE,IAAI,WAAW;AACxC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,iBAAiB;AAC5B,WAAW,sBAAsB;AACjC,WAAW,yBAAyB;AACpC,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,IAAI;AACJ;AACA;AACA;;;;;;;;;;;;ACthBA,sCAAsC,mCAAmC;;AAE5D;;AAEb,qBAAqB,mBAAO,CAAC,sBAAQ;AACrC,cAAc,mBAAO,CAAC,oBAAO;AAC7B,aAAa,mBAAO,CAAC,kBAAM;AAC3B,YAAY,mBAAO,CAAC,gBAAK;AACzB,YAAY,mBAAO,CAAC,gBAAK;AACzB,QAAQ,0BAA0B,EAAE,mBAAO,CAAC,sBAAQ;AACpD,QAAQ,WAAW,EAAE,mBAAO,CAAC,sBAAQ;AACrC,QAAQ,MAAM,EAAE,mBAAO,CAAC,gBAAK;;AAE7B,0BAA0B,mBAAO,CAAC,6EAAsB;AACxD,iBAAiB,mBAAO,CAAC,yDAAY;AACrC,eAAe,mBAAO,CAAC,qDAAU;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE,EAAE,mBAAO,CAAC,2DAAa;AACzB;AACA,iBAAiB;AACjB,EAAE,EAAE,mBAAO,CAAC,iEAAgB;AAC5B,QAAQ,gBAAgB,EAAE,mBAAO,CAAC,2DAAa;AAC/C,QAAQ,WAAW,EAAE,mBAAO,CAAC,+DAAe;;AAE5C;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,cAAc;AAC3B,aAAa,mBAAmB;AAChC,aAAa,QAAQ;AACrB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;;AAEA;AACA,MAAM;AACN;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;;AAEA;AACA,YAAY;AACZ;AACA;AACA;AACA;;AAEA;AACA,YAAY;AACZ;AACA;AACA;AACA;;AAEA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;;AAEA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;;AAEA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;;AAEA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;;AAEA;AACA,YAAY;AACZ;AACA;AACA;AACA;;AAEA;AACA,YAAY;AACZ;AACA;AACA;AACA;;AAEA;AACA,YAAY;AACZ;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,yBAAyB;AACtC;AACA,aAAa,QAAQ;AACrB,aAAa,QAAQ;AACrB,aAAa,UAAU;AACvB;AACA,aAAa,QAAQ;AACrB,aAAa,SAAS;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,QAAQ;AACrB,aAAa,iBAAiB;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,GAAG;AAChB,aAAa,SAAS;AACtB,aAAa,UAAU;AACvB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,GAAG;AAChB,aAAa,SAAS;AACtB,aAAa,UAAU;AACvB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,GAAG;AAChB,aAAa,QAAQ;AACrB,aAAa,SAAS;AACtB;AACA,aAAa,SAAS;AACtB;AACA,aAAa,SAAS;AACtB;AACA,aAAa,SAAS;AACtB,aAAa,UAAU;AACvB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,cAAc,QAAQ;AACtB;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA,cAAc,QAAQ;AACtB;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA,cAAc,QAAQ;AACtB;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA,cAAc,QAAQ;AACtB;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA,cAAc,QAAQ;AACtB;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA,cAAc,QAAQ;AACtB;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA,cAAc,QAAQ;AACtB;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA,cAAc,QAAQ;AACtB;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yDAAyD,kBAAkB;AAC3E,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA,kDAAkD,OAAO;AACzD;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,OAAO;AACP;AACA,GAAG;AACH,CAAC;;AAED;AACA;;AAEA;;AAEA;AACA;AACA;AACA,WAAW,WAAW;AACtB,WAAW,cAAc;AACzB,WAAW,OAAO;AAClB,WAAW,QAAQ;AACnB,WAAW,SAAS;AACpB;AACA,WAAW,UAAU;AACrB;AACA,WAAW,QAAQ;AACnB;AACA,WAAW,QAAQ;AACnB;AACA,WAAW,QAAQ;AACnB;AACA,WAAW,QAAQ;AACnB;AACA,WAAW,kBAAkB;AAC7B;AACA,WAAW,QAAQ;AACnB;AACA,WAAW,SAAS;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,uCAAuC,sBAAsB;AAC7D,gCAAgC,4BAA4B;AAC5D;AACA;;AAEA;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA,MAAM;AACN,4CAA4C,QAAQ;AACpD;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA,IAAI;AACJ;AACA;;AAEA;AACA;;AAEA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,mEAAmE;AACnE;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA,mBAAmB,mBAAmB,GAAG,mBAAmB;AAC5D;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,kBAAkB;;AAElB;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;;AAEA;AACA;AACA,GAAG;;AAEH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA,QAAQ;AACR,oDAAoD,SAAS;AAC7D;AACA;AACA;;AAEA;AACA,MAAM;AACN;AACA;AACA;AACA,uCAAuC,eAAe;AACtD;AACA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA,MAAM;AACN;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;;AAEH;AACA;;AAEA;AACA;AACA;AACA,WAAW,WAAW;AACtB,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,YAAY,YAAY;AACxB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,YAAY,eAAe;AAC3B;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW,WAAW;AACtB,WAAW,4CAA4C;AACvD;AACA,WAAW,QAAQ;AACnB;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,WAAW;AACtB,WAAW,GAAG;AACd,WAAW,UAAU;AACrB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,2CAA2C,sBAAsB;AACjE,YAAY,kCAAkC;AAC9C;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW,oBAAoB;AAC/B;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,8BAA8B;AACzC,WAAW,SAAS;AACpB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB;AACA;AACA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ACA,kGAAkG,gEAAsB;AACxH;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA,UAAU,OAAO;AACjB;AACA,oGAAoG,kEAAwB;AAC5H;AACA;AACA,GAAG;AACH;AACA;;AAEA,8CAA8C;AAC9C;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH,EAAE;AACF,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA,QAAQ,mBAAmB;AAC3B;AACA;AACA;AACA;AACA;AACA,YAAY,+DAAgB;;AAE5B;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,6EAA8B;AACzC;;AAEA;AACA;;AAEA;;AAEA;AACO,iCAAiC,2CAA2C;;AAKjF;;AAEF,iEAAe,KAAK,EAAC;;;;;;;;;;;;;;;;;ACnNrB;AACO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;;;;;;;;;;;;;;;;AChCA;;AAEA,qDAAqD,cAAc;;AAEnE,sDAAsD,aAAa,EAAE,EAAE,KAAK;;AAE5E,oEAAoE,aAAa,EAAE,EAAE,KAAK,EAAE,OAAO,EAAE,KAAK;;AAE1G;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,oBAAoB,SAAS;AAC7B,qBAAqB,SAAS;AAC9B;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA,EAAE;;AAEF;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA,GAAG;AACH;AACA;AACA,4CAA4C,EAAE,SAAS,EAAE;AACzD;AACA;AACA;;AAEA,SAAS,aAAa;;AAEtB;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAM;AACN;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,IAAI;AACJ;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH,EAAE;;AAEF;AACA;;AAEA;;AAEA,iEAAe,UAAU,EAAC;;;;;;;;;;;;;;;;;;;;AC1NS;AACV;AACE;;AAE3B;AACA,8BAA8B,8CAAY;AAC1C;AACA;AACA;AACA;AACA;;AAEA,OAAO,KAAK,EAAE,yCAAO;;AAErB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,qCAAqC,gCAAgC,IAAI;AACzE;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;A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","sources":["webpack://@ha-assistant/server/./src/api-endpoints.ts","webpack://@ha-assistant/server/./src/auth-endpoints.ts","webpack://@ha-assistant/server/./src/client-endpoints.ts","webpack://@ha-assistant/server/./src/config.ts","webpack://@ha-assistant/server/./src/google-endpoints.ts","webpack://@ha-assistant/server/./src/lookup-endpoints.ts","webpack://@ha-assistant/server/./src/services/google-disconnect.ts","webpack://@ha-assistant/server/./src/services/google-execute.ts","webpack://@ha-assistant/server/./src/services/google-query.ts","webpack://@ha-assistant/server/./src/services/google-sync.ts","webpack://@ha-assistant/server/./src/websocket-endpoint.ts","webpack://@ha-assistant/server/../../node_modules/express/lib/ sync","webpack://@ha-assistant/server/../../node_modules/accepts/index.js","webpack://@ha-assistant/server/../../node_modules/array-flatten/array-flatten.js","webpack://@ha-assistant/server/../../node_modules/body-parser/index.js","webpack://@ha-assistant/server/../../node_modules/body-parser/lib/read.js","webpack://@ha-assistant/server/../../node_modules/body-parser/lib/types/json.js","webpack://@ha-assistant/server/../../node_modules/body-parser/lib/types/raw.js","webpack://@ha-assistant/server/../../node_modules/body-parser/lib/types/text.js","webpack://@ha-assistant/server/../../node_modules/body-parser/lib/types/urlencoded.js","webpack://@ha-assistant/server/../../node_modules/body-parser/node_modules/debug/src/browser.js","webpack://@ha-assistant/server/../../node_modules/body-parser/node_modules/debug/src/debug.js","webpack://@ha-assistant/server/../../node_modules/body-parser/node_modules/debug/src/index.js","webpack://@ha-assistant/server/../../node_modules/body-parser/node_modules/debug/src/node.js","webpack://@ha-assistant/server/../../node_modules/body-parser/node_modules/ms/index.js","webpack://@ha-assistant/server/../../node_modules/bufferutil/fallback.js","webpack://@ha-assistant/server/../../node_modules/bufferutil/index.js","webpack://@ha-assistant/server/../../node_modules/bytes/index.js","webpack://@ha-assistant/server/../../node_modules/call-bind/callBound.js","webpack://@ha-assistant/server/../../node_modules/call-bind/index.js","webpack://@ha-assistant/server/../../node_modules/content-disposition/index.js","webpack://@ha-assistant/server/../../node_modules/content-disposition/node_modules/safe-buffer/index.js","webpack://@ha-assistant/server/../../node_modules/content-type/index.js","webpack://@ha-assistant/server/../../node_modules/cookie-signature/index.js","webpack://@ha-assistant/server/../../node_modules/cookie/index.js","webpack://@ha-assistant/server/../../node_modules/cors/lib/index.js","webpack://@ha-assistant/server/../../node_modules/depd/index.js","webpack://@ha-assistant/server/../../node_modules/destroy/index.js","webpack://@ha-assistant/server/../../node_modules/dotenv/lib/main.js","webpack://@ha-assistant/server/../../node_modules/ee-first/index.js","webpack://@ha-assistant/server/../../node_modules/encodeurl/index.js","webpack://@ha-assistant/server/../../node_modules/escape-html/index.js","webpack://@ha-assistant/server/../../node_modules/etag/index.js","webpack://@ha-assistant/server/../../node_modules/express/index.js","webpack://@ha-assistant/server/../../node_modules/express/lib/application.js","webpack://@ha-assistant/server/../../node_modules/express/lib/express.js","webpack://@ha-assistant/server/../../node_modules/express/lib/middleware/init.js","webpack://@ha-assistant/server/../../node_modules/express/lib/middleware/query.js","webpack://@ha-assistant/server/../../node_modules/express/lib/request.js","webpack://@ha-assistant/server/../../node_modules/express/lib/response.js","webpack://@ha-assistant/server/../../node_modules/express/lib/router/index.js","webpack://@ha-assistant/server/../../node_modules/express/lib/router/layer.js","webpack://@ha-assistant/server/../../node_modules/express/lib/router/route.js","webpack://@ha-assistant/server/../../node_modules/express/lib/utils.js","webpack://@ha-assistant/server/../../node_modules/express/lib/view.js","webpack://@ha-assistant/server/../../node_modules/express/node_modules/debug/src/browser.js","webpack://@ha-assistant/server/../../node_modules/express/node_modules/debug/src/debug.js","webpack://@ha-assistant/server/../../node_modules/express/node_modules/debug/src/index.js","webpack://@ha-assistant/server/../../node_modules/express/node_modules/debug/src/node.js","webpack://@ha-assistant/server/../../node_modules/express/node_modules/ms/index.js","webpack://@ha-assistant/server/../../node_modules/express/node_modules/safe-buffer/index.js","webpack://@ha-assistant/server/../../node_modules/finalhandler/index.js","webpack://@ha-assistant/server/../../node_modules/finalhandler/node_modules/debug/src/browser.js","webpack://@ha-assistant/server/../../node_modules/finalhandler/node_modules/debug/src/debug.js","webpack://@ha-assistant/server/../../node_modules/finalhandler/node_modules/debug/src/index.js","webpack://@ha-assistant/server/../../node_modules/finalhandler/node_modules/debug/src/node.js","webpack://@ha-assistant/server/../../node_modules/finalhandler/node_modules/ms/index.js","webpack://@ha-assistant/server/../../node_modules/forwarded/index.js","webpack://@ha-assistant/server/../../node_modules/fresh/index.js","webpack://@ha-assistant/server/../../node_modules/function-bind/implementation.js","webpack://@ha-assistant/server/../../node_modules/function-bind/index.js","webpack://@ha-assistant/server/../../node_modules/get-intrinsic/index.js","webpack://@ha-assistant/server/../../node_modules/has-symbols/index.js","webpack://@ha-assistant/server/../../node_modules/has-symbols/shams.js","webpack://@ha-assistant/server/../../node_modules/has/src/index.js","webpack://@ha-assistant/server/../../node_modules/http-errors/index.js","webpack://@ha-assistant/server/../../node_modules/iconv-lite/encodings/dbcs-codec.js","webpack://@ha-assistant/server/../../node_modules/iconv-lite/encodings/dbcs-data.js","webpack://@ha-assistant/server/../../node_modules/iconv-lite/encodings/index.js","webpack://@ha-assistant/server/../../node_modules/iconv-lite/encodings/internal.js","webpack://@ha-assistant/server/../../node_modules/iconv-lite/encodings/sbcs-codec.js","webpack://@ha-assistant/server/../../node_modules/iconv-lite/encodings/sbcs-data-generated.js","webpack://@ha-assistant/server/../../node_modules/iconv-lite/encodings/sbcs-data.js","webpack://@ha-assistant/server/../../node_modules/iconv-lite/encodings/utf16.js","webpack://@ha-assistant/server/../../node_modules/iconv-lite/encodings/utf7.js","webpack://@ha-assistant/server/../../node_modules/iconv-lite/lib/bom-handling.js","webpack://@ha-assistant/server/../../node_modules/iconv-lite/lib/extend-node.js","webpack://@ha-assistant/server/../../node_modules/iconv-lite/lib/index.js","webpack://@ha-assistant/server/../../node_modules/iconv-lite/lib/streams.js","webpack://@ha-assistant/server/../../node_modules/inherits/inherits.js","webpack://@ha-assistant/server/../../node_modules/inherits/inherits_browser.js","webpack://@ha-assistant/server/../../node_modules/ipaddr.js/lib/ipaddr.js","webpack://@ha-assistant/server/../../node_modules/media-typer/index.js","webpack://@ha-assistant/server/../../node_modules/merge-descriptors/index.js","webpack://@ha-assistant/server/../../node_modules/methods/index.js","webpack://@ha-assistant/server/../../node_modules/mime-db/index.js","webpack://@ha-assistant/server/../../node_modules/mime-types/index.js","webpack://@ha-assistant/server/../../node_modules/mime/mime.js","webpack://@ha-assistant/server/../../node_modules/negotiator/index.js","webpack://@ha-assistant/server/../../node_modules/negotiator/lib/charset.js","webpack://@ha-assistant/server/../../node_modules/negotiator/lib/encoding.js","webpack://@ha-assistant/server/../../node_modules/negotiator/lib/language.js","webpack://@ha-assistant/server/../../node_modules/negotiator/lib/mediaType.js","webpack://@ha-assistant/server/../../node_modules/node-gyp-build/index.js","webpack://@ha-assistant/server/../../node_modules/object-assign/index.js","webpack://@ha-assistant/server/../../node_modules/object-inspect/index.js","webpack://@ha-assistant/server/../../node_modules/object-inspect/util.inspect.js","webpack://@ha-assistant/server/../../node_modules/on-finished/index.js","webpack://@ha-assistant/server/../../node_modules/parseurl/index.js","webpack://@ha-assistant/server/../../node_modules/path-to-regexp/index.js","webpack://@ha-assistant/server/../../node_modules/proxy-addr/index.js","webpack://@ha-assistant/server/../../node_modules/qs/lib/formats.js","webpack://@ha-assistant/server/../../node_modules/qs/lib/index.js","webpack://@ha-assistant/server/../../node_modules/qs/lib/parse.js","webpack://@ha-assistant/server/../../node_modules/qs/lib/stringify.js","webpack://@ha-assistant/server/../../node_modules/qs/lib/utils.js","webpack://@ha-assistant/server/../../node_modules/range-parser/index.js","webpack://@ha-assistant/server/../../node_modules/raw-body/index.js","webpack://@ha-assistant/server/../../node_modules/rxjs/src/index.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/AsyncSubject.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/BehaviorSubject.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/Notification.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/NotificationFactories.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/Observable.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/ReplaySubject.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/Scheduler.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/Subject.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/Subscriber.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/Subscription.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/config.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/firstValueFrom.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/lastValueFrom.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/observable/ConnectableObservable.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/observable/bindCallback.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/observable/bindCallbackInternals.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/observable/bindNodeCallback.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/observable/combineLatest.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/observable/concat.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/observable/connectable.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/observable/defer.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/observable/dom/WebSocketSubject.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/observable/dom/animationFrames.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/observable/dom/webSocket.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/observable/empty.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/observable/forkJoin.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/observable/from.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/observable/fromEvent.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/observable/fromEventPattern.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/observable/fromSubscribable.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/observable/generate.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/observable/iif.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/observable/innerFrom.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/observable/interval.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/observable/merge.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/observable/never.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/observable/of.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/observable/onErrorResumeNext.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/observable/pairs.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/observable/partition.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/observable/race.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/observable/range.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/observable/throwError.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/observable/timer.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/observable/using.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/observable/zip.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/operators/OperatorSubscriber.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/operators/audit.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/operators/auditTime.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/operators/buffer.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/operators/bufferCount.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/operators/bufferTime.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/operators/bufferToggle.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/operators/bufferWhen.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/operators/catchError.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/operators/combineAll.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/operators/combineLatest.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/operators/combineLatestAll.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/operators/combineLatestWith.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/operators/concat.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/operators/concatAll.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/operators/concatMap.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/operators/concatMapTo.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/operators/concatWith.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/operators/connect.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/operators/count.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/operators/debounce.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/operators/debounceTime.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/operators/defaultIfEmpty.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/operators/delay.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/operators/delayWhen.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/operators/dematerialize.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/operators/distinct.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/operators/distinctUntilChanged.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/operators/distinctUntilKeyChanged.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/operators/elementAt.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/operators/endWith.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/operators/every.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/operators/exhaust.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/operators/exhaustAll.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/operators/exhaustMap.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/operators/expand.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/operators/filter.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/operators/finalize.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/operators/find.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/operators/findIndex.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/operators/first.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/operators/flatMap.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/operators/groupBy.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/operators/ignoreElements.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/operators/isEmpty.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/operators/joinAllInternals.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/operators/last.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/operators/map.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/operators/mapTo.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/operators/materialize.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/operators/max.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/operators/merge.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/operators/mergeAll.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/operators/mergeInternals.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/operators/mergeMap.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/operators/mergeMapTo.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/operators/mergeScan.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/operators/mergeWith.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/operators/min.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/operators/multicast.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/operators/observeOn.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/operators/onErrorResumeNext.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/operators/pairwise.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/operators/pluck.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/operators/publish.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/operators/publishBehavior.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/operators/publishLast.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/operators/publishReplay.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/operators/raceWith.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/operators/reduce.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/operators/refCount.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/operators/repeat.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/operators/repeatWhen.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/operators/retry.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/operators/retryWhen.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/operators/sample.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/operators/sampleTime.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/operators/scan.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/operators/scanInternals.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/operators/sequenceEqual.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/operators/share.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/operators/shareReplay.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/operators/single.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/operators/skip.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/operators/skipLast.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/operators/skipUntil.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/operators/skipWhile.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/operators/startWith.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/operators/subscribeOn.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/operators/switchAll.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/operators/switchMap.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/operators/switchMapTo.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/operators/switchScan.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/operators/take.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/operators/takeLast.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/operators/takeUntil.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/operators/takeWhile.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/operators/tap.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/operators/throttle.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/operators/throttleTime.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/operators/throwIfEmpty.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/operators/timeInterval.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/operators/timeout.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/operators/timeoutWith.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/operators/timestamp.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/operators/toArray.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/operators/window.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/operators/windowCount.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/operators/windowTime.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/operators/windowToggle.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/operators/windowWhen.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/operators/withLatestFrom.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/operators/zip.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/operators/zipAll.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/operators/zipWith.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/scheduled/scheduleArray.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/scheduled/scheduleAsyncIterable.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/scheduled/scheduleIterable.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/scheduled/scheduleObservable.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/scheduled/schedulePromise.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/scheduled/scheduleReadableStreamLike.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/scheduled/scheduled.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/scheduler/Action.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/scheduler/AnimationFrameAction.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/scheduler/AnimationFrameScheduler.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/scheduler/AsapAction.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/scheduler/AsapScheduler.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/scheduler/AsyncAction.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/scheduler/AsyncScheduler.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/scheduler/QueueAction.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/scheduler/QueueScheduler.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/scheduler/VirtualTimeScheduler.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/scheduler/animationFrame.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/scheduler/animationFrameProvider.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/scheduler/asap.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/scheduler/async.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/scheduler/dateTimestampProvider.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/scheduler/immediateProvider.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/scheduler/intervalProvider.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/scheduler/performanceTimestampProvider.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/scheduler/queue.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/scheduler/timeoutProvider.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/symbol/iterator.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/symbol/observable.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/types.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/util/ArgumentOutOfRangeError.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/util/EmptyError.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/util/Immediate.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/util/NotFoundError.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/util/ObjectUnsubscribedError.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/util/SequenceError.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/util/UnsubscriptionError.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/util/args.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/util/argsArgArrayOrObject.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/util/argsOrArgArray.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/util/arrRemove.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/util/createErrorClass.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/util/createObject.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/util/errorContext.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/util/executeSchedule.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/util/identity.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/util/isArrayLike.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/util/isAsyncIterable.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/util/isDate.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/util/isFunction.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/util/isInteropObservable.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/util/isIterable.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/util/isObservable.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/util/isPromise.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/util/isReadableStreamLike.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/util/isScheduler.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/util/lift.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/util/mapOneOrManyArgs.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/util/noop.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/util/not.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/util/pipe.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/util/reportUnhandledError.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/util/throwUnobservableError.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/webSocket/index.ts","webpack://@ha-assistant/server/../../node_modules/safer-buffer/safer.js","webpack://@ha-assistant/server/../../node_modules/send/index.js","webpack://@ha-assistant/server/../../node_modules/send/node_modules/debug/node_modules/ms/index.js","webpack://@ha-assistant/server/../../node_modules/send/node_modules/debug/src/browser.js","webpack://@ha-assistant/server/../../node_modules/send/node_modules/debug/src/debug.js","webpack://@ha-assistant/server/../../node_modules/send/node_modules/debug/src/index.js","webpack://@ha-assistant/server/../../node_modules/send/node_modules/debug/src/node.js","webpack://@ha-assistant/server/../../node_modules/send/node_modules/ms/index.js","webpack://@ha-assistant/server/../../node_modules/serve-static/index.js","webpack://@ha-assistant/server/../../node_modules/setprototypeof/index.js","webpack://@ha-assistant/server/../../node_modules/side-channel/index.js","webpack://@ha-assistant/server/../../node_modules/statuses/index.js","webpack://@ha-assistant/server/../../node_modules/toidentifier/index.js","webpack://@ha-assistant/server/../../node_modules/type-is/index.js","webpack://@ha-assistant/server/../../node_modules/unpipe/index.js","webpack://@ha-assistant/server/../../node_modules/utf-8-validate/fallback.js","webpack://@ha-assistant/server/../../node_modules/utf-8-validate/index.js","webpack://@ha-assistant/server/../../node_modules/utils-merge/index.js","webpack://@ha-assistant/server/../../node_modules/uuid/dist/esm-node/regex.js","webpack://@ha-assistant/server/../../node_modules/uuid/dist/esm-node/rng.js","webpack://@ha-assistant/server/../../node_modules/uuid/dist/esm-node/stringify.js","webpack://@ha-assistant/server/../../node_modules/uuid/dist/esm-node/v4.js","webpack://@ha-assistant/server/../../node_modules/uuid/dist/esm-node/validate.js","webpack://@ha-assistant/server/../../node_modules/vary/index.js","webpack://@ha-assistant/server/../../node_modules/ws/index.js","webpack://@ha-assistant/server/../../node_modules/ws/lib/buffer-util.js","webpack://@ha-assistant/server/../../node_modules/ws/lib/constants.js","webpack://@ha-assistant/server/../../node_modules/ws/lib/event-target.js","webpack://@ha-assistant/server/../../node_modules/ws/lib/extension.js","webpack://@ha-assistant/server/../../node_modules/ws/lib/limiter.js","webpack://@ha-assistant/server/../../node_modules/ws/lib/permessage-deflate.js","webpack://@ha-assistant/server/../../node_modules/ws/lib/receiver.js","webpack://@ha-assistant/server/../../node_modules/ws/lib/sender.js","webpack://@ha-assistant/server/../../node_modules/ws/lib/stream.js","webpack://@ha-assistant/server/../../node_modules/ws/lib/subprotocol.js","webpack://@ha-assistant/server/../../node_modules/ws/lib/validation.js","webpack://@ha-assistant/server/../../node_modules/ws/lib/websocket-server.js","webpack://@ha-assistant/server/../../node_modules/ws/lib/websocket.js","webpack://@ha-assistant/server/external node-commonjs \"async_hooks\"","webpack://@ha-assistant/server/external node-commonjs \"buffer\"","webpack://@ha-assistant/server/external node-commonjs \"crypto\"","webpack://@ha-assistant/server/external node-commonjs \"events\"","webpack://@ha-assistant/server/external node-commonjs \"fs\"","webpack://@ha-assistant/server/external node-commonjs \"fs/promises\"","webpack://@ha-assistant/server/external node-commonjs \"http\"","webpack://@ha-assistant/server/external node-commonjs \"https\"","webpack://@ha-assistant/server/external node-commonjs \"net\"","webpack://@ha-assistant/server/external node-commonjs \"node:os\"","webpack://@ha-assistant/server/external node-commonjs \"node:process\"","webpack://@ha-assistant/server/external node-commonjs \"node:tty\"","webpack://@ha-assistant/server/external node-commonjs \"os\"","webpack://@ha-assistant/server/external node-commonjs \"path\"","webpack://@ha-assistant/server/external node-commonjs \"querystring\"","webpack://@ha-assistant/server/external node-commonjs \"stream\"","webpack://@ha-assistant/server/external node-commonjs \"string_decoder\"","webpack://@ha-assistant/server/external node-commonjs \"tls\"","webpack://@ha-assistant/server/external node-commonjs \"tty\"","webpack://@ha-assistant/server/external node-commonjs \"url\"","webpack://@ha-assistant/server/external node-commonjs \"util\"","webpack://@ha-assistant/server/external node-commonjs \"zlib\"","webpack://@ha-assistant/server/../../node_modules/@babel/parser/src/util/location.ts","webpack://@ha-assistant/server/../../node_modules/@babel/parser/src/parse-error/credentials.ts","webpack://@ha-assistant/server/../../node_modules/@babel/parser/src/parse-error/module-errors.ts","webpack://@ha-assistant/server/../../node_modules/@babel/parser/src/parse-error/to-node-description.ts","webpack://@ha-assistant/server/../../node_modules/@babel/parser/src/parse-error/standard-errors.ts","webpack://@ha-assistant/server/../../node_modules/@babel/parser/src/parse-error/strict-mode-errors.ts","webpack://@ha-assistant/server/../../node_modules/@babel/parser/src/parse-error/pipeline-operator-errors.ts","webpack://@ha-assistant/server/../../node_modules/@babel/parser/src/parse-error.ts","webpack://@ha-assistant/server/../../node_modules/@babel/parser/src/plugins/estree.ts","webpack://@ha-assistant/server/../../node_modules/@babel/parser/src/tokenizer/context.ts","webpack://@ha-assistant/server/../../node_modules/@babel/parser/src/tokenizer/types.ts","webpack://@ha-assistant/server/../../node_modules/@babel/babel-helper-validator-identifier/src/identifier.ts","webpack://@ha-assistant/server/../../node_modules/@babel/babel-helper-validator-identifier/src/keyword.ts","webpack://@ha-assistant/server/../../node_modules/@babel/parser/src/util/identifier.ts","webpack://@ha-assistant/server/../../node_modules/@babel/parser/src/util/scopeflags.ts","webpack://@ha-assistant/server/../../node_modules/@babel/parser/src/parser/base.ts","webpack://@ha-assistant/server/../../node_modules/@babel/parser/src/parser/comments.ts","webpack://@ha-assistant/server/../../node_modules/@babel/parser/src/util/whitespace.ts","webpack://@ha-assistant/server/../../node_modules/@babel/parser/src/tokenizer/state.ts","webpack://@ha-assistant/server/../../node_modules/@babel/babel-helper-string-parser/src/index.ts","webpack://@ha-assistant/server/../../node_modules/@babel/parser/src/tokenizer/index.ts","webpack://@ha-assistant/server/../../node_modules/@babel/parser/src/util/scope.ts","webpack://@ha-assistant/server/../../node_modules/@babel/parser/src/plugins/flow/scope.ts","webpack://@ha-assistant/server/../../node_modules/@babel/parser/src/util/class-scope.ts","webpack://@ha-assistant/server/../../node_modules/@babel/parser/src/util/expression-scope.ts","webpack://@ha-assistant/server/../../node_modules/@babel/parser/src/util/production-parameter.ts","webpack://@ha-assistant/server/../../node_modules/@babel/parser/src/parser/util.ts","webpack://@ha-assistant/server/../../node_modules/@babel/parser/src/parser/node.ts","webpack://@ha-assistant/server/../../node_modules/@babel/parser/src/plugins/flow/index.ts","webpack://@ha-assistant/server/../../node_modules/@babel/parser/src/plugins/jsx/xhtml.ts","webpack://@ha-assistant/server/../../node_modules/@babel/parser/src/plugins/jsx/index.ts","webpack://@ha-assistant/server/../../node_modules/@babel/parser/src/plugins/typescript/scope.ts","webpack://@ha-assistant/server/../../node_modules/@babel/parser/src/plugins/typescript/index.ts","webpack://@ha-assistant/server/../../node_modules/@babel/parser/src/plugins/placeholders.ts","webpack://@ha-assistant/server/../../node_modules/@babel/parser/src/plugins/v8intrinsic.ts","webpack://@ha-assistant/server/../../node_modules/@babel/parser/src/plugin-utils.ts","webpack://@ha-assistant/server/../../node_modules/@babel/parser/src/options.ts","webpack://@ha-assistant/server/../../node_modules/@babel/parser/src/parser/lval.ts","webpack://@ha-assistant/server/../../node_modules/@babel/parser/src/parser/expression.ts","webpack://@ha-assistant/server/../../node_modules/@babel/parser/src/parser/statement.ts","webpack://@ha-assistant/server/../../node_modules/@babel/parser/src/parser/index.ts","webpack://@ha-assistant/server/../../node_modules/@babel/parser/src/index.ts","webpack://@ha-assistant/server/../../libs/listner/src/devices-state.ts","webpack://@ha-assistant/server/../../libs/listner/src/devices-props.ts","webpack://@ha-assistant/server/../../libs/listner/src/utils/logging.ts","webpack://@ha-assistant/server/../../libs/listner/src/repo/devices.ts","webpack://@ha-assistant/server/../../libs/listner/src/repo/base.ts","webpack://@ha-assistant/server/../../libs/listner/src/home-assistant-web-socket.ts","webpack://@ha-assistant/server/../../libs/listner/src/home-assistant-data-access.ts","webpack://@ha-assistant/server/../../libs/listner/src/utils/helpers.ts","webpack://@ha-assistant/server/../../libs/listner/src/google/device-traits.ts","webpack://@ha-assistant/server/../../libs/listner/src/google/device-types.ts","webpack://@ha-assistant/server/../../libs/listner/node_modules/chalk/source/index.js","webpack://@ha-assistant/server/../../libs/listner/node_modules/chalk/source/utilities.js","webpack://@ha-assistant/server/../../libs/listner/node_modules/chalk/source/vendor/ansi-styles/index.js","webpack://@ha-assistant/server/../../libs/listner/node_modules/chalk/source/vendor/supports-color/index.js","webpack://@ha-assistant/server/../../node_modules/ws/wrapper.mjs","webpack://@ha-assistant/server/webpack/bootstrap","webpack://@ha-assistant/server/webpack/runtime/compat get default export","webpack://@ha-assistant/server/webpack/runtime/define property getters","webpack://@ha-assistant/server/webpack/runtime/hasOwnProperty shorthand","webpack://@ha-assistant/server/webpack/runtime/make namespace object","webpack://@ha-assistant/server/webpack/runtime/node module decorator","webpack://@ha-assistant/server/./src/index.ts"],"sourcesContent":["import { type Express } from 'express';\r\nimport {\r\n  logging,\r\n  createDevice,\r\n  updateDevice,\r\n  deleteDevice,\r\n  IDevice,\r\n  getHomeAssistantDataAccess,\r\n  importDevice,\r\n} from '@ha-assistant/listner';\r\nimport { getConfig } from './config';\r\nimport { firstValueFrom } from 'rxjs';\r\n\r\ntype LookupItem = {\r\n  label: string;\r\n  detail: string;\r\n  info?: string;\r\n};\r\n\r\nexport const apiInit = (app: Express) => {\r\n  const config = getConfig();\r\n\r\n  const socket = getHomeAssistantDataAccess(\r\n    config.homeAssistaneSocketUri,\r\n    config.homeAssistaneApiKey\r\n  );\r\n\r\n  // app.get('/api', (req, res) => {\r\n  //   res.send({\r\n  //     name: 'hello',\r\n  //   });\r\n  // });\r\n\r\n  app.post('/api/device', (req, res) => {\r\n    logging.log('Got body:', req.body);\r\n    const device: IDevice = req.body;\r\n    createDevice(device);\r\n    res.sendStatus(201);\r\n  });\r\n\r\n  app.put('/api/device/:id', (req, res) => {\r\n    var id = req.params.id;\r\n    logging.log('Got body:', id, req.body);\r\n    const device: IDevice = req.body;\r\n    updateDevice(id, device);\r\n    res.sendStatus(200);\r\n  });\r\n\r\n  app.delete('/api/device/:id', (req, res) => {\r\n    var id = req.params.id;\r\n    logging.log('Got delete:', id);\r\n    deleteDevice(id);\r\n    res.sendStatus(200);\r\n  });\r\n\r\n  app.get('/api/areas', async (req, res) => {\r\n    logging.debug('areas');\r\n    const rooms = await firstValueFrom(socket.getAreas());\r\n\r\n    // const services = await firstValueFrom(socket.getServices());\r\n\r\n    // Object.keys(services).forEach((x) => {\r\n    //   if (x === 'sonos') {\r\n    //     const _switch = services[x];\r\n    //     logging.log('sonos', _switch);\r\n    //     Object.keys(_switch).map(x => {\r\n    //       logging.log('sonos fields', _switch[x].fields);\r\n    //     })\r\n    //   }\r\n    // });\r\n\r\n    // logging.log('services', services);\r\n\r\n    res.send(rooms);\r\n  });\r\n\r\n  app.get('/api/export', (req, res) => {\r\n    res.download(config.deviceStore);\r\n  });\r\n\r\n  app.post('/api/import', async (req, res) => {\r\n    logging.debug('body', req.body);\r\n\r\n    const devices =\r\n      typeof req.body === 'string' ? JSON.parse(req.body) : req.body;\r\n\r\n    await importDevice(devices);\r\n\r\n    res.sendStatus(200);\r\n  });\r\n};\r\n","import { type Express } from 'express';\r\nimport { logging } from '@ha-assistant/listner';\r\nimport { format } from 'util';\r\n\r\nexport const authInit = (app: Express) => {\r\n\r\n  app.get('/login', (req, res) => {\r\n    res.send(`\r\n    <html>\r\n  <body>\r\n  <p>${req.query.response_url}</p>\r\n  <form action=\"/login\" method=\"post\">\r\n  <input type=\"hidden\" name=\"response_url\" value=\"${req.query.response_url}\" />\r\n  <button type=\"submit\" style=\"font-size:14pt\">Link this service to Google</button>\r\n  </form>\r\n  </body>\r\n  </html>\r\n  `);\r\n  });\r\n\r\n  app.post('/login', async (req, res) => {\r\n    logging.debug('post login query', req.query);\r\n    logging.debug('post login body', req.body);\r\n    // Here, you should validate the user account.\r\n    // In this sample, we do not do that.\r\n    const responseUrl = decodeURIComponent(req.body.response_url as string);\r\n    logging.debug('redirect:', responseUrl);\r\n    return res.redirect(responseUrl);\r\n  });\r\n\r\n  app.get('/api/fakeauth', async (req, res) => {\r\n    logging.warn('/fakeauth', req.query);\r\n    const responseUrl = format(\r\n      '%s?code=%s&state=%s',\r\n      decodeURIComponent(req.query.redirect_uri as string),\r\n      'xxxxxx',\r\n      req.query.state\r\n    );\r\n    const redirectUrl = `/login?response_url=${encodeURIComponent(\r\n      responseUrl\r\n    )}`;\r\n    logging.warn('redirect:', redirectUrl);\r\n    return res.redirect(redirectUrl);\r\n  });\r\n\r\n  app.all('/api/faketoken', async (req, res) => {\r\n    logging.warn('/faketoken', req.query);\r\n    const grantType = req.query.grant_type\r\n      ? req.query.grant_type\r\n      : req.body.grant_type;\r\n    const secondsInDay = 86400; // 60 * 60 * 24\r\n    const HTTP_STATUS_OK = 200;\r\n    let token;\r\n    if (grantType === 'authorization_code') {\r\n      token = {\r\n        token_type: 'bearer',\r\n        access_token: '123access',\r\n        refresh_token: '123refresh',\r\n        expires_in: secondsInDay,\r\n      };\r\n    } else if (grantType === 'refresh_token') {\r\n      token = {\r\n        token_type: 'bearer',\r\n        access_token: '123access',\r\n        expires_in: secondsInDay,\r\n      };\r\n    }\r\n    logging.warn('token:', token);\r\n    res.status(HTTP_STATUS_OK).json(token);\r\n  });\r\n};\r\n","import { IServerConfig, logging } from '@ha-assistant/listner';\r\nimport express from 'express';\r\nimport { type Express } from 'express';\r\nimport { getConfig, IConfig } from './config';\r\n\r\nexport const clientInit = (app: Express, config: IConfig) => {\r\n  app.use('/', express.static('public'));\r\n\r\n  app.get('/config.js', (req, res) => {\r\n    const config = getConfig();\r\n\r\n    // logging.debug('Client', req.protocol, req.get('referer'), req.originalUrl);\r\n    // logging.debug('config.js rawHeaders', req.rawHeaders);\r\n\r\n    const host =\r\n      process.env.NODE_ENV === 'development'\r\n        ? `localhost:${config.port}`\r\n        : req.get('host');\r\n\r\n    const referer = req.get('referer') || '';\r\n    const noRefererHost = `${req.protocol === 'http' ? 'ws' : 'wss'}://${host}${\r\n      config.ingressUrl\r\n    }ws`;\r\n    const refererHost =\r\n      referer.replace('https://', 'wss://').replace('http://', 'ws://') + 'ws';\r\n\r\n    const clientConfig: IServerConfig = {\r\n      port: config.port,\r\n      ingressUrl: config.ingressUrl,\r\n      socketUrl: config.inferWebsocketUrl ? noRefererHost : refererHost,\r\n    };\r\n\r\n    res.set('Content-Type', 'application/javascript');\r\n    res.send(`window.config = ${JSON.stringify(clientConfig)}`);\r\n  });\r\n};\r\n","import { readFileSync, existsSync } from 'fs';\r\nimport { setLogLevel, logging } from '@ha-assistant/listner';\r\n\r\nexport interface IConfig {\r\n  port: number;\r\n  ingressUrl?: string;\r\n  homeAssistaneSocketUri: string;\r\n  homeAssistaneApiKey: string;\r\n  deviceStore: string;\r\n  inferWebsocketUrl?: boolean;\r\n}\r\n\r\nexport interface IOptions {\r\n  dataStorePath?: string;\r\n}\r\n\r\nconst readFileAsJson = (filePath: string): any => {\r\n  logging.info('Reading File:', filePath);\r\n  const rawdata = readFileSync(filePath);\r\n  return JSON.parse(rawdata.toString());\r\n};\r\n\r\nconst options = existsSync('/data/options.json')\r\n  ? readFileAsJson('/data/options.json')\r\n  : {\r\n      logLevel: process.env.LOG_LEVEL,\r\n      inferWebsocketUrl: process.env.INFER_WEBSOCKET_URL,\r\n    };\r\n\r\nlogging.debug('App options', options);\r\n\r\nsetLogLevel(options.logLevel);\r\n\r\nconst port = process.env.SERVER_PORT ? parseInt(process.env.SERVER_PORT) : 4001;\r\n\r\n// Object.keys(process.env).forEach((x) => {\r\n//   logging.debug(`process.env.${x} = ${process.env[x]}`);\r\n// });\r\n\r\nexport const getConfig = (): IConfig => {\r\n  return {\r\n    port: port,\r\n    ingressUrl: process.env.INGRESS_URL,\r\n    homeAssistaneApiKey: process.env.HASSIO_TOKEN || '',\r\n    homeAssistaneSocketUri:\r\n      process.env.HA_SOCKET_URL || 'ws://hassio/homeassistant/api/websocket',\r\n\r\n    deviceStore: process.env.DEVICE_STORE || '/data/devices.json',\r\n    inferWebsocketUrl: options.inferWebsocketUrl,\r\n  };\r\n};\r\n","import { type Express } from 'express';\r\nimport { logging } from '@ha-assistant/listner';\r\nimport {\r\n  SmartHomeV1Request,\r\n  SmartHomeV1SyncResponse,\r\n  SmartHomeV1QueryRequestInputs,\r\n  SmartHomeV1QueryResponse,\r\n  SmartHomeV1ExecuteResponse,\r\n  SmartHomeV1ExecuteRequestInputs,\r\n  Headers,\r\n} from 'actions-on-google';\r\nimport { onSync } from './services/google-sync';\r\nimport { onQuery } from './services/google-query';\r\nimport { onDisconnect } from './services/google-disconnect';\r\nimport { onExecute } from './services/google-execute';\r\n\r\n// https://developers.google.com/assistant/smarthome/develop/process-intents#disconnect-request\r\n\r\nconst getUser = (headers: Headers): Promise<string> => {\r\n  const authorization = headers.authorization as string;\r\n  const accessToken = (authorization || '').substr(7);\r\n  return new Promise((res, rej) => {\r\n    logging.info(`getUser ${accessToken}`);\r\n    res(accessToken);\r\n  });\r\n};\r\n\r\nexport const googleInit = (app: Express) => {\r\n  app.post('/api/fulfillment', async (req, res) => {\r\n    // const user = await getUser(req.headers);\r\n    const payload: SmartHomeV1Request = req.body;\r\n\r\n    logging.debug('payload', payload);\r\n\r\n    const results = payload.inputs.map(async (x) => {\r\n      if (x.intent === 'action.devices.SYNC') {\r\n        const sync = await onSync();\r\n        return {\r\n          requestId: payload.requestId,\r\n          payload: sync,\r\n        } as SmartHomeV1SyncResponse;\r\n      } else if (x.intent === 'action.devices.QUERY') {\r\n        const query = await onQuery(\r\n          (x as SmartHomeV1QueryRequestInputs).payload\r\n        );\r\n        return {\r\n          requestId: payload.requestId,\r\n          payload: query,\r\n        } as SmartHomeV1QueryResponse;\r\n      } else if (x.intent === 'action.devices.EXECUTE') {\r\n        const execute = await onExecute(\r\n          (x as SmartHomeV1ExecuteRequestInputs).payload\r\n        );\r\n        return {\r\n          requestId: payload.requestId,\r\n          payload: execute,\r\n        } as SmartHomeV1ExecuteResponse;\r\n      } else if (x.intent === 'action.devices.DISCONNECT') {\r\n        return await onDisconnect();\r\n      }\r\n    });\r\n\r\n    Promise.all(results).then((x) => {\r\n      return res.send(x[0]);\r\n    });\r\n  });\r\n\r\n\r\n};\r\n","import { type Express } from 'express';\r\nimport {\r\n  logging,\r\n  createDevice,\r\n  updateDevice,\r\n  deleteDevice,\r\n  IDevice,\r\n  getHomeAssistantDataAccess,\r\n  importDevice,\r\n} from '@ha-assistant/listner';\r\nimport { getConfig } from './config';\r\nimport { firstValueFrom } from 'rxjs';\r\n\r\ntype LookupItem = {\r\n  label: string;\r\n  detail: string;\r\n  info?: string;\r\n};\r\n\r\nexport const lookupInit = (app: Express) => {\r\n  const config = getConfig();\r\n\r\n  const socket = getHomeAssistantDataAccess(\r\n    config.homeAssistaneSocketUri,\r\n    config.homeAssistaneApiKey\r\n  );\r\n\r\n  app.get('/api/editor/builtin/functions', async (req, res) => {\r\n    const lookupFunctions: LookupItem[] = [\r\n      {\r\n        label: 'equals',\r\n        detail: 'compare to values',\r\n      },\r\n      {\r\n        label: 'toInt',\r\n        detail: 'converts string to int',\r\n      },\r\n      {\r\n        label: 'toNum',\r\n        detail: 'converts string to number',\r\n        info: 'some really foon info to help me',\r\n      },\r\n    ];\r\n    res.send(lookupFunctions);\r\n  });\r\n\r\n  app.get('/api/editor/entity/domains', async (req, res) => {\r\n    const entities = await firstValueFrom(socket.getEntities());\r\n    const s = entities.reduce<{ [key: string]: boolean }>((acc, i) => {\r\n      if (i.entity_id) {\r\n        const [d] = i.entity_id.split('.');\r\n        acc[d] = true;\r\n      }\r\n      return acc;\r\n    }, {});\r\n    const results = Object.keys(s);\r\n    res.send(results);\r\n  });\r\n\r\n  app.get('/api/editor/lookup/:domain', async (req, res) => {\r\n    var domain = req.params.domain;\r\n    logging.log('Got lookup domain:', domain);\r\n\r\n    const [d, n, a] = domain.split('.');\r\n\r\n    logging.debug(`lookup d:${d} - n:${n} - a:${a}`);\r\n\r\n    if (d && n) {\r\n      const entities = await firstValueFrom(socket.getEntityStatus());\r\n      const entity = entities.find((x) => x.entity_id === `${d}.${n}`) as any;\r\n      logging.debug('found enity', entity);\r\n      if (a) {\r\n        res.send(\r\n          Object.keys((entity || {})[a] || {}).map<LookupItem>((x) => {\r\n            return {\r\n              label: x,\r\n              detail: `${typeof entity[a][x]} - ${entity[a][x]}`,\r\n            };\r\n          })\r\n        );\r\n      } else {\r\n        res.send(\r\n          Object.keys(entity || {}).map<LookupItem>((x) => {\r\n            return {\r\n              label: x,\r\n              detail: `${typeof entity[x]} - ${entity[x]}`,\r\n            };\r\n          })\r\n        );\r\n      }\r\n    } else {\r\n      const entities = await firstValueFrom(socket.getEntities());\r\n      const results = entities.reduce<LookupItem[]>((acc, i) => {\r\n        if (i.entity_id.startsWith(domain)) {\r\n          const [, d] = i.entity_id.split('.');\r\n          const item: LookupItem = {\r\n            label: d,\r\n            detail: i.name,\r\n          };\r\n          return [...acc, item];\r\n        }\r\n        return acc;\r\n      }, []);\r\n      res.send(results);\r\n    }\r\n  });\r\n};\r\n","export const onDisconnect = () => {\r\n  return Promise.resolve({});\r\n};\r\n","import {\r\n  SmartHomeV1ExecuteRequestPayload,\r\n  SmartHomeV1ExecutePayload,\r\n} from 'actions-on-google';\r\n\r\nexport const onExecute = (\r\n  payload: SmartHomeV1ExecuteRequestPayload\r\n): Promise<SmartHomeV1ExecutePayload> => {\r\n  return Promise.resolve({\r\n    commands: [\r\n      {\r\n        ids: ['123'],\r\n        status: 'SUCCESS',\r\n        states: {\r\n          on: true,\r\n          online: true,\r\n        },\r\n      },\r\n      {\r\n        ids: ['456'],\r\n        status: 'ERROR',\r\n        errorCode: 'deviceTurnedOff',\r\n      },\r\n    ],\r\n  });\r\n};\r\n","import {\r\n  getDeviceStatusV2$,\r\n  getHomeAssistantDataAccess,\r\n  HomeAssistantDataAccess,\r\n  logging,\r\n} from '@ha-assistant/listner';\r\nimport {\r\n  SmartHomeV1QueryPayload,\r\n  SmartHomeV1QueryRequestPayload,\r\n} from 'actions-on-google';\r\nimport { firstValueFrom } from 'rxjs';\r\nimport { getConfig } from '../config';\r\n\r\nexport const onQuery = async (\r\n  payload: SmartHomeV1QueryRequestPayload\r\n): Promise<SmartHomeV1QueryPayload> => {\r\n  logging.debug('onQuery', payload);\r\n\r\n  const config = getConfig();\r\n\r\n  let socket: HomeAssistantDataAccess = getHomeAssistantDataAccess(\r\n    config.homeAssistaneSocketUri,\r\n    config.homeAssistaneApiKey\r\n  );\r\n\r\n  const ids = payload.devices.map((x) => x.id);\r\n\r\n  const statusMap = await firstValueFrom(getDeviceStatusV2$(socket));\r\n\r\n  return {\r\n    devices: ids.reduce<{ [key: string]: any }>((acc, x) => {\r\n      acc[x] = statusMap[x];\r\n      return acc;\r\n    }, {}),\r\n  };\r\n\r\n  //   return Promise.resolve({\r\n  //     devices: {\r\n  //       '123': {\r\n  //         on: true,\r\n  //         online: true,\r\n  //       },\r\n  //       '456': {\r\n  //         on: true,\r\n  //         online: true,\r\n  //         brightness: 80,\r\n  //         color: {\r\n  //           name: 'cerulean',\r\n  //           spectrumRGB: 31655,\r\n  //         },\r\n  //       },\r\n  //     },\r\n  //   });\r\n};\r\n","import { getAllDevices$ } from '@ha-assistant/listner';\r\nimport {\r\n  SmartHomeV1SyncDevices,\r\n  SmartHomeV1SyncPayload,\r\n} from 'actions-on-google';\r\nimport { firstValueFrom } from 'rxjs';\r\n\r\nexport const onSync = async (): Promise<SmartHomeV1SyncPayload> => {\r\n  const devices = await firstValueFrom(getAllDevices$());\r\n\r\n  return Promise.resolve({\r\n    agentUserId: '1836.15267389',\r\n    devices: devices.map<SmartHomeV1SyncDevices>((x) => {\r\n      return {\r\n        id: x.id,\r\n        type: x.deviceType,\r\n        traits: x.traits,\r\n        name: {\r\n            defaultNames: [x.name],\r\n            name: x.name,\r\n            nicknames: [x.name]\r\n        },\r\n        willReportState: false,\r\n        roomHint: x.room,\r\n        // deviceInfo: {\r\n        //     manufacturer: 'HomeAssistant',\r\n        //     model: '',\r\n        //     hwVersion, '',\r\n        //     swVersion: '',\r\n        // }\r\n      };\r\n    }),\r\n    // devices: [\r\n    //   {\r\n    //     id: '123',\r\n    //     type: 'action.devices.types.OUTLET',\r\n    //     traits: ['action.devices.traits.OnOff'],\r\n    //     name: {\r\n    //       defaultNames: ['My Outlet 1234'],\r\n    //       name: 'Night light',\r\n    //       nicknames: ['wall plug'],\r\n    //     },\r\n    //     willReportState: false,\r\n    //     roomHint: 'kitchen',\r\n    //     deviceInfo: {\r\n    //       manufacturer: 'lights-out-inc',\r\n    //       model: 'hs1234',\r\n    //       hwVersion: '3.2',\r\n    //       swVersion: '11.4',\r\n    //     },\r\n    //     otherDeviceIds: [\r\n    //       {\r\n    //         deviceId: 'local-device-id',\r\n    //       },\r\n    //     ],\r\n    //     customData: {\r\n    //       fooValue: 74,\r\n    //       barValue: true,\r\n    //       bazValue: 'foo',\r\n    //     },\r\n    //   },\r\n    //   {\r\n    //     id: '456',\r\n    //     type: 'action.devices.types.LIGHT',\r\n    //     traits: [\r\n    //       'action.devices.traits.OnOff',\r\n    //       'action.devices.traits.Brightness',\r\n    //       'action.devices.traits.ColorSetting',\r\n    //     ],\r\n    //     name: {\r\n    //       defaultNames: ['lights out inc. bulb A19 color hyperglow'],\r\n    //       name: 'lamp1',\r\n    //       nicknames: ['reading lamp'],\r\n    //     },\r\n    //     willReportState: false,\r\n    //     roomHint: 'office',\r\n    //     attributes: {\r\n    //       colorModel: 'rgb',\r\n    //       colorTemperatureRange: {\r\n    //         temperatureMinK: 2000,\r\n    //         temperatureMaxK: 9000,\r\n    //       },\r\n    //       commandOnlyColorSetting: false,\r\n    //     },\r\n    //     deviceInfo: {\r\n    //       manufacturer: 'lights out inc.',\r\n    //       model: 'hg11',\r\n    //       hwVersion: '1.2',\r\n    //       swVersion: '5.4',\r\n    //     },\r\n    //     customData: {\r\n    //       fooValue: 12,\r\n    //       barValue: false,\r\n    //       bazValue: 'bar',\r\n    //     },\r\n    //   },\r\n    // ],\r\n  });\r\n};\r\n","import { IDevice, getAllDevices$, messages } from '@ha-assistant/listner';\r\nimport {\r\n  logging,\r\n  getHomeAssistantDataAccess,\r\n  HomeAssistantDataAccess,\r\n  getDeviceStatusV2$,\r\n} from '@ha-assistant/listner';\r\nimport { Server } from 'http';\r\nimport WebSocket from 'ws';\r\nimport { getConfig } from './config';\r\n\r\nlet socket: HomeAssistantDataAccess;\r\n\r\nexport const webSocketInit = (server: Server) => {\r\n  const config = getConfig();\r\n\r\n  let lastDevicesStatus: any;\r\n  let lastDevices: IDevice[];\r\n\r\n  const wss = new WebSocket.Server({\r\n    path: '/ws',\r\n    server,\r\n  });\r\n\r\n  const sendAll = (message: messages) => {\r\n    wss.clients.forEach((client) => {\r\n      if (client.readyState === WebSocket.OPEN) {\r\n        client.send(JSON.stringify(message));\r\n      }\r\n    });\r\n  };\r\n\r\n  logging.debug('created socket server', wss.path);\r\n\r\n  wss.on('connection', (ws) => {\r\n    const send = (message: messages) => {\r\n      ws.send(JSON.stringify(message));\r\n    };\r\n\r\n    send({ type: 'welcome', value: 'Hello' });\r\n\r\n    if (lastDevicesStatus) {\r\n      send({\r\n        type: 'devices-status',\r\n        status: lastDevicesStatus,\r\n        fromCache: true,\r\n      });\r\n    }\r\n\r\n    if (lastDevices) {\r\n      send({\r\n        type: 'devices',\r\n        devices: lastDevices,\r\n        fromCache: true,\r\n      });\r\n    }\r\n\r\n    ws.on('message', (message) => {\r\n      logging.log('from Client', message.toLocaleString());\r\n      send({\r\n        type: 'debug',\r\n        value: 'There be gold in them thar hills.',\r\n      });\r\n    });\r\n\r\n    ws.on('close', (e) => {\r\n      logging.log('client gone', e);\r\n    });\r\n  });\r\n\r\n  socket = getHomeAssistantDataAccess(\r\n    config.homeAssistaneSocketUri,\r\n    config.homeAssistaneApiKey\r\n  );\r\n\r\n  getDeviceStatusV2$(socket).subscribe({\r\n    next: (d) => {\r\n      lastDevicesStatus = d;\r\n      sendAll({ type: 'devices-status', status: d });\r\n    },\r\n  });\r\n\r\n  getAllDevices$().subscribe({\r\n    next: (d) => {\r\n      lastDevices = d;\r\n      sendAll({ type: 'devices', devices: d });\r\n    },\r\n  });\r\n\r\n  return wss;\r\n};\r\n","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = () => ([]);\nwebpackEmptyContext.resolve = webpackEmptyContext;\nwebpackEmptyContext.id = \"../../node_modules/express/lib sync recursive\";\nmodule.exports = webpackEmptyContext;","/*!\n * accepts\n * Copyright(c) 2014 Jonathan Ong\n * Copyright(c) 2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * Module dependencies.\n * @private\n */\n\nvar Negotiator = require('negotiator')\nvar mime = require('mime-types')\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = Accepts\n\n/**\n * Create a new Accepts object for the given req.\n *\n * @param {object} req\n * @public\n */\n\nfunction Accepts (req) {\n  if (!(this instanceof Accepts)) {\n    return new Accepts(req)\n  }\n\n  this.headers = req.headers\n  this.negotiator = new Negotiator(req)\n}\n\n/**\n * Check if the given `type(s)` is acceptable, returning\n * the best match when true, otherwise `undefined`, in which\n * case you should respond with 406 \"Not Acceptable\".\n *\n * The `type` value may be a single mime type string\n * such as \"application/json\", the extension name\n * such as \"json\" or an array `[\"json\", \"html\", \"text/plain\"]`. When a list\n * or array is given the _best_ match, if any is returned.\n *\n * Examples:\n *\n *     // Accept: text/html\n *     this.types('html');\n *     // => \"html\"\n *\n *     // Accept: text/*, application/json\n *     this.types('html');\n *     // => \"html\"\n *     this.types('text/html');\n *     // => \"text/html\"\n *     this.types('json', 'text');\n *     // => \"json\"\n *     this.types('application/json');\n *     // => \"application/json\"\n *\n *     // Accept: text/*, application/json\n *     this.types('image/png');\n *     this.types('png');\n *     // => undefined\n *\n *     // Accept: text/*;q=.5, application/json\n *     this.types(['html', 'json']);\n *     this.types('html', 'json');\n *     // => \"json\"\n *\n * @param {String|Array} types...\n * @return {String|Array|Boolean}\n * @public\n */\n\nAccepts.prototype.type =\nAccepts.prototype.types = function (types_) {\n  var types = types_\n\n  // support flattened arguments\n  if (types && !Array.isArray(types)) {\n    types = new Array(arguments.length)\n    for (var i = 0; i < types.length; i++) {\n      types[i] = arguments[i]\n    }\n  }\n\n  // no types, return all requested types\n  if (!types || types.length === 0) {\n    return this.negotiator.mediaTypes()\n  }\n\n  // no accept header, return first given type\n  if (!this.headers.accept) {\n    return types[0]\n  }\n\n  var mimes = types.map(extToMime)\n  var accepts = this.negotiator.mediaTypes(mimes.filter(validMime))\n  var first = accepts[0]\n\n  return first\n    ? types[mimes.indexOf(first)]\n    : false\n}\n\n/**\n * Return accepted encodings or best fit based on `encodings`.\n *\n * Given `Accept-Encoding: gzip, deflate`\n * an array sorted by quality is returned:\n *\n *     ['gzip', 'deflate']\n *\n * @param {String|Array} encodings...\n * @return {String|Array}\n * @public\n */\n\nAccepts.prototype.encoding =\nAccepts.prototype.encodings = function (encodings_) {\n  var encodings = encodings_\n\n  // support flattened arguments\n  if (encodings && !Array.isArray(encodings)) {\n    encodings = new Array(arguments.length)\n    for (var i = 0; i < encodings.length; i++) {\n      encodings[i] = arguments[i]\n    }\n  }\n\n  // no encodings, return all requested encodings\n  if (!encodings || encodings.length === 0) {\n    return this.negotiator.encodings()\n  }\n\n  return this.negotiator.encodings(encodings)[0] || false\n}\n\n/**\n * Return accepted charsets or best fit based on `charsets`.\n *\n * Given `Accept-Charset: utf-8, iso-8859-1;q=0.2, utf-7;q=0.5`\n * an array sorted by quality is returned:\n *\n *     ['utf-8', 'utf-7', 'iso-8859-1']\n *\n * @param {String|Array} charsets...\n * @return {String|Array}\n * @public\n */\n\nAccepts.prototype.charset =\nAccepts.prototype.charsets = function (charsets_) {\n  var charsets = charsets_\n\n  // support flattened arguments\n  if (charsets && !Array.isArray(charsets)) {\n    charsets = new Array(arguments.length)\n    for (var i = 0; i < charsets.length; i++) {\n      charsets[i] = arguments[i]\n    }\n  }\n\n  // no charsets, return all requested charsets\n  if (!charsets || charsets.length === 0) {\n    return this.negotiator.charsets()\n  }\n\n  return this.negotiator.charsets(charsets)[0] || false\n}\n\n/**\n * Return accepted languages or best fit based on `langs`.\n *\n * Given `Accept-Language: en;q=0.8, es, pt`\n * an array sorted by quality is returned:\n *\n *     ['es', 'pt', 'en']\n *\n * @param {String|Array} langs...\n * @return {Array|String}\n * @public\n */\n\nAccepts.prototype.lang =\nAccepts.prototype.langs =\nAccepts.prototype.language =\nAccepts.prototype.languages = function (languages_) {\n  var languages = languages_\n\n  // support flattened arguments\n  if (languages && !Array.isArray(languages)) {\n    languages = new Array(arguments.length)\n    for (var i = 0; i < languages.length; i++) {\n      languages[i] = arguments[i]\n    }\n  }\n\n  // no languages, return all requested languages\n  if (!languages || languages.length === 0) {\n    return this.negotiator.languages()\n  }\n\n  return this.negotiator.languages(languages)[0] || false\n}\n\n/**\n * Convert extnames to mime.\n *\n * @param {String} type\n * @return {String}\n * @private\n */\n\nfunction extToMime (type) {\n  return type.indexOf('/') === -1\n    ? mime.lookup(type)\n    : type\n}\n\n/**\n * Check if mime is valid.\n *\n * @param {String} type\n * @return {String}\n * @private\n */\n\nfunction validMime (type) {\n  return typeof type === 'string'\n}\n","'use strict'\n\n/**\n * Expose `arrayFlatten`.\n */\nmodule.exports = arrayFlatten\n\n/**\n * Recursive flatten function with depth.\n *\n * @param  {Array}  array\n * @param  {Array}  result\n * @param  {Number} depth\n * @return {Array}\n */\nfunction flattenWithDepth (array, result, depth) {\n  for (var i = 0; i < array.length; i++) {\n    var value = array[i]\n\n    if (depth > 0 && Array.isArray(value)) {\n      flattenWithDepth(value, result, depth - 1)\n    } else {\n      result.push(value)\n    }\n  }\n\n  return result\n}\n\n/**\n * Recursive flatten function. Omitting depth is slightly faster.\n *\n * @param  {Array} array\n * @param  {Array} result\n * @return {Array}\n */\nfunction flattenForever (array, result) {\n  for (var i = 0; i < array.length; i++) {\n    var value = array[i]\n\n    if (Array.isArray(value)) {\n      flattenForever(value, result)\n    } else {\n      result.push(value)\n    }\n  }\n\n  return result\n}\n\n/**\n * Flatten an array, with the ability to define a depth.\n *\n * @param  {Array}  array\n * @param  {Number} depth\n * @return {Array}\n */\nfunction arrayFlatten (array, depth) {\n  if (depth == null) {\n    return flattenForever(array, [])\n  }\n\n  return flattenWithDepth(array, [], depth)\n}\n","/*!\n * body-parser\n * Copyright(c) 2014-2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * Module dependencies.\n * @private\n */\n\nvar deprecate = require('depd')('body-parser')\n\n/**\n * Cache of loaded parsers.\n * @private\n */\n\nvar parsers = Object.create(null)\n\n/**\n * @typedef Parsers\n * @type {function}\n * @property {function} json\n * @property {function} raw\n * @property {function} text\n * @property {function} urlencoded\n */\n\n/**\n * Module exports.\n * @type {Parsers}\n */\n\nexports = module.exports = deprecate.function(bodyParser,\n  'bodyParser: use individual json/urlencoded middlewares')\n\n/**\n * JSON parser.\n * @public\n */\n\nObject.defineProperty(exports, 'json', {\n  configurable: true,\n  enumerable: true,\n  get: createParserGetter('json')\n})\n\n/**\n * Raw parser.\n * @public\n */\n\nObject.defineProperty(exports, 'raw', {\n  configurable: true,\n  enumerable: true,\n  get: createParserGetter('raw')\n})\n\n/**\n * Text parser.\n * @public\n */\n\nObject.defineProperty(exports, 'text', {\n  configurable: true,\n  enumerable: true,\n  get: createParserGetter('text')\n})\n\n/**\n * URL-encoded parser.\n * @public\n */\n\nObject.defineProperty(exports, 'urlencoded', {\n  configurable: true,\n  enumerable: true,\n  get: createParserGetter('urlencoded')\n})\n\n/**\n * Create a middleware to parse json and urlencoded bodies.\n *\n * @param {object} [options]\n * @return {function}\n * @deprecated\n * @public\n */\n\nfunction bodyParser (options) {\n  var opts = {}\n\n  // exclude type option\n  if (options) {\n    for (var prop in options) {\n      if (prop !== 'type') {\n        opts[prop] = options[prop]\n      }\n    }\n  }\n\n  var _urlencoded = exports.urlencoded(opts)\n  var _json = exports.json(opts)\n\n  return function bodyParser (req, res, next) {\n    _json(req, res, function (err) {\n      if (err) return next(err)\n      _urlencoded(req, res, next)\n    })\n  }\n}\n\n/**\n * Create a getter for loading a parser.\n * @private\n */\n\nfunction createParserGetter (name) {\n  return function get () {\n    return loadParser(name)\n  }\n}\n\n/**\n * Load a parser module.\n * @private\n */\n\nfunction loadParser (parserName) {\n  var parser = parsers[parserName]\n\n  if (parser !== undefined) {\n    return parser\n  }\n\n  // this uses a switch for static require analysis\n  switch (parserName) {\n    case 'json':\n      parser = require('./lib/types/json')\n      break\n    case 'raw':\n      parser = require('./lib/types/raw')\n      break\n    case 'text':\n      parser = require('./lib/types/text')\n      break\n    case 'urlencoded':\n      parser = require('./lib/types/urlencoded')\n      break\n  }\n\n  // store to prevent invoking require()\n  return (parsers[parserName] = parser)\n}\n","/*!\n * body-parser\n * Copyright(c) 2014-2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * Module dependencies.\n * @private\n */\n\nvar createError = require('http-errors')\nvar destroy = require('destroy')\nvar getBody = require('raw-body')\nvar iconv = require('iconv-lite')\nvar onFinished = require('on-finished')\nvar unpipe = require('unpipe')\nvar zlib = require('zlib')\n\n/**\n * Module exports.\n */\n\nmodule.exports = read\n\n/**\n * Read a request into a buffer and parse.\n *\n * @param {object} req\n * @param {object} res\n * @param {function} next\n * @param {function} parse\n * @param {function} debug\n * @param {object} options\n * @private\n */\n\nfunction read (req, res, next, parse, debug, options) {\n  var length\n  var opts = options\n  var stream\n\n  // flag as parsed\n  req._body = true\n\n  // read options\n  var encoding = opts.encoding !== null\n    ? opts.encoding\n    : null\n  var verify = opts.verify\n\n  try {\n    // get the content stream\n    stream = contentstream(req, debug, opts.inflate)\n    length = stream.length\n    stream.length = undefined\n  } catch (err) {\n    return next(err)\n  }\n\n  // set raw-body options\n  opts.length = length\n  opts.encoding = verify\n    ? null\n    : encoding\n\n  // assert charset is supported\n  if (opts.encoding === null && encoding !== null && !iconv.encodingExists(encoding)) {\n    return next(createError(415, 'unsupported charset \"' + encoding.toUpperCase() + '\"', {\n      charset: encoding.toLowerCase(),\n      type: 'charset.unsupported'\n    }))\n  }\n\n  // read body\n  debug('read body')\n  getBody(stream, opts, function (error, body) {\n    if (error) {\n      var _error\n\n      if (error.type === 'encoding.unsupported') {\n        // echo back charset\n        _error = createError(415, 'unsupported charset \"' + encoding.toUpperCase() + '\"', {\n          charset: encoding.toLowerCase(),\n          type: 'charset.unsupported'\n        })\n      } else {\n        // set status code on error\n        _error = createError(400, error)\n      }\n\n      // unpipe from stream and destroy\n      if (stream !== req) {\n        unpipe(req)\n        destroy(stream, true)\n      }\n\n      // read off entire request\n      dump(req, function onfinished () {\n        next(createError(400, _error))\n      })\n      return\n    }\n\n    // verify\n    if (verify) {\n      try {\n        debug('verify body')\n        verify(req, res, body, encoding)\n      } catch (err) {\n        next(createError(403, err, {\n          body: body,\n          type: err.type || 'entity.verify.failed'\n        }))\n        return\n      }\n    }\n\n    // parse\n    var str = body\n    try {\n      debug('parse body')\n      str = typeof body !== 'string' && encoding !== null\n        ? iconv.decode(body, encoding)\n        : body\n      req.body = parse(str)\n    } catch (err) {\n      next(createError(400, err, {\n        body: str,\n        type: err.type || 'entity.parse.failed'\n      }))\n      return\n    }\n\n    next()\n  })\n}\n\n/**\n * Get the content stream of the request.\n *\n * @param {object} req\n * @param {function} debug\n * @param {boolean} [inflate=true]\n * @return {object}\n * @api private\n */\n\nfunction contentstream (req, debug, inflate) {\n  var encoding = (req.headers['content-encoding'] || 'identity').toLowerCase()\n  var length = req.headers['content-length']\n  var stream\n\n  debug('content-encoding \"%s\"', encoding)\n\n  if (inflate === false && encoding !== 'identity') {\n    throw createError(415, 'content encoding unsupported', {\n      encoding: encoding,\n      type: 'encoding.unsupported'\n    })\n  }\n\n  switch (encoding) {\n    case 'deflate':\n      stream = zlib.createInflate()\n      debug('inflate body')\n      req.pipe(stream)\n      break\n    case 'gzip':\n      stream = zlib.createGunzip()\n      debug('gunzip body')\n      req.pipe(stream)\n      break\n    case 'identity':\n      stream = req\n      stream.length = length\n      break\n    default:\n      throw createError(415, 'unsupported content encoding \"' + encoding + '\"', {\n        encoding: encoding,\n        type: 'encoding.unsupported'\n      })\n  }\n\n  return stream\n}\n\n/**\n * Dump the contents of a request.\n *\n * @param {object} req\n * @param {function} callback\n * @api private\n */\n\nfunction dump (req, callback) {\n  if (onFinished.isFinished(req)) {\n    callback(null)\n  } else {\n    onFinished(req, callback)\n    req.resume()\n  }\n}\n","/*!\n * body-parser\n * Copyright(c) 2014 Jonathan Ong\n * Copyright(c) 2014-2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * Module dependencies.\n * @private\n */\n\nvar bytes = require('bytes')\nvar contentType = require('content-type')\nvar createError = require('http-errors')\nvar debug = require('debug')('body-parser:json')\nvar read = require('../read')\nvar typeis = require('type-is')\n\n/**\n * Module exports.\n */\n\nmodule.exports = json\n\n/**\n * RegExp to match the first non-space in a string.\n *\n * Allowed whitespace is defined in RFC 7159:\n *\n *    ws = *(\n *            %x20 /              ; Space\n *            %x09 /              ; Horizontal tab\n *            %x0A /              ; Line feed or New line\n *            %x0D )              ; Carriage return\n */\n\nvar FIRST_CHAR_REGEXP = /^[\\x20\\x09\\x0a\\x0d]*([^\\x20\\x09\\x0a\\x0d])/ // eslint-disable-line no-control-regex\n\n/**\n * Create a middleware to parse JSON bodies.\n *\n * @param {object} [options]\n * @return {function}\n * @public\n */\n\nfunction json (options) {\n  var opts = options || {}\n\n  var limit = typeof opts.limit !== 'number'\n    ? bytes.parse(opts.limit || '100kb')\n    : opts.limit\n  var inflate = opts.inflate !== false\n  var reviver = opts.reviver\n  var strict = opts.strict !== false\n  var type = opts.type || 'application/json'\n  var verify = opts.verify || false\n\n  if (verify !== false && typeof verify !== 'function') {\n    throw new TypeError('option verify must be function')\n  }\n\n  // create the appropriate type checking function\n  var shouldParse = typeof type !== 'function'\n    ? typeChecker(type)\n    : type\n\n  function parse (body) {\n    if (body.length === 0) {\n      // special-case empty json body, as it's a common client-side mistake\n      // TODO: maybe make this configurable or part of \"strict\" option\n      return {}\n    }\n\n    if (strict) {\n      var first = firstchar(body)\n\n      if (first !== '{' && first !== '[') {\n        debug('strict violation')\n        throw createStrictSyntaxError(body, first)\n      }\n    }\n\n    try {\n      debug('parse json')\n      return JSON.parse(body, reviver)\n    } catch (e) {\n      throw normalizeJsonSyntaxError(e, {\n        message: e.message,\n        stack: e.stack\n      })\n    }\n  }\n\n  return function jsonParser (req, res, next) {\n    if (req._body) {\n      debug('body already parsed')\n      next()\n      return\n    }\n\n    req.body = req.body || {}\n\n    // skip requests without bodies\n    if (!typeis.hasBody(req)) {\n      debug('skip empty body')\n      next()\n      return\n    }\n\n    debug('content-type %j', req.headers['content-type'])\n\n    // determine if request should be parsed\n    if (!shouldParse(req)) {\n      debug('skip parsing')\n      next()\n      return\n    }\n\n    // assert charset per RFC 7159 sec 8.1\n    var charset = getCharset(req) || 'utf-8'\n    if (charset.slice(0, 4) !== 'utf-') {\n      debug('invalid charset')\n      next(createError(415, 'unsupported charset \"' + charset.toUpperCase() + '\"', {\n        charset: charset,\n        type: 'charset.unsupported'\n      }))\n      return\n    }\n\n    // read\n    read(req, res, next, parse, debug, {\n      encoding: charset,\n      inflate: inflate,\n      limit: limit,\n      verify: verify\n    })\n  }\n}\n\n/**\n * Create strict violation syntax error matching native error.\n *\n * @param {string} str\n * @param {string} char\n * @return {Error}\n * @private\n */\n\nfunction createStrictSyntaxError (str, char) {\n  var index = str.indexOf(char)\n  var partial = index !== -1\n    ? str.substring(0, index) + '#'\n    : ''\n\n  try {\n    JSON.parse(partial); /* istanbul ignore next */ throw new SyntaxError('strict violation')\n  } catch (e) {\n    return normalizeJsonSyntaxError(e, {\n      message: e.message.replace('#', char),\n      stack: e.stack\n    })\n  }\n}\n\n/**\n * Get the first non-whitespace character in a string.\n *\n * @param {string} str\n * @return {function}\n * @private\n */\n\nfunction firstchar (str) {\n  var match = FIRST_CHAR_REGEXP.exec(str)\n\n  return match\n    ? match[1]\n    : undefined\n}\n\n/**\n * Get the charset of a request.\n *\n * @param {object} req\n * @api private\n */\n\nfunction getCharset (req) {\n  try {\n    return (contentType.parse(req).parameters.charset || '').toLowerCase()\n  } catch (e) {\n    return undefined\n  }\n}\n\n/**\n * Normalize a SyntaxError for JSON.parse.\n *\n * @param {SyntaxError} error\n * @param {object} obj\n * @return {SyntaxError}\n */\n\nfunction normalizeJsonSyntaxError (error, obj) {\n  var keys = Object.getOwnPropertyNames(error)\n\n  for (var i = 0; i < keys.length; i++) {\n    var key = keys[i]\n    if (key !== 'stack' && key !== 'message') {\n      delete error[key]\n    }\n  }\n\n  // replace stack before message for Node.js 0.10 and below\n  error.stack = obj.stack.replace(error.message, obj.message)\n  error.message = obj.message\n\n  return error\n}\n\n/**\n * Get the simple type checker.\n *\n * @param {string} type\n * @return {function}\n */\n\nfunction typeChecker (type) {\n  return function checkType (req) {\n    return Boolean(typeis(req, type))\n  }\n}\n","/*!\n * body-parser\n * Copyright(c) 2014-2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * Module dependencies.\n */\n\nvar bytes = require('bytes')\nvar debug = require('debug')('body-parser:raw')\nvar read = require('../read')\nvar typeis = require('type-is')\n\n/**\n * Module exports.\n */\n\nmodule.exports = raw\n\n/**\n * Create a middleware to parse raw bodies.\n *\n * @param {object} [options]\n * @return {function}\n * @api public\n */\n\nfunction raw (options) {\n  var opts = options || {}\n\n  var inflate = opts.inflate !== false\n  var limit = typeof opts.limit !== 'number'\n    ? bytes.parse(opts.limit || '100kb')\n    : opts.limit\n  var type = opts.type || 'application/octet-stream'\n  var verify = opts.verify || false\n\n  if (verify !== false && typeof verify !== 'function') {\n    throw new TypeError('option verify must be function')\n  }\n\n  // create the appropriate type checking function\n  var shouldParse = typeof type !== 'function'\n    ? typeChecker(type)\n    : type\n\n  function parse (buf) {\n    return buf\n  }\n\n  return function rawParser (req, res, next) {\n    if (req._body) {\n      debug('body already parsed')\n      next()\n      return\n    }\n\n    req.body = req.body || {}\n\n    // skip requests without bodies\n    if (!typeis.hasBody(req)) {\n      debug('skip empty body')\n      next()\n      return\n    }\n\n    debug('content-type %j', req.headers['content-type'])\n\n    // determine if request should be parsed\n    if (!shouldParse(req)) {\n      debug('skip parsing')\n      next()\n      return\n    }\n\n    // read\n    read(req, res, next, parse, debug, {\n      encoding: null,\n      inflate: inflate,\n      limit: limit,\n      verify: verify\n    })\n  }\n}\n\n/**\n * Get the simple type checker.\n *\n * @param {string} type\n * @return {function}\n */\n\nfunction typeChecker (type) {\n  return function checkType (req) {\n    return Boolean(typeis(req, type))\n  }\n}\n","/*!\n * body-parser\n * Copyright(c) 2014-2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * Module dependencies.\n */\n\nvar bytes = require('bytes')\nvar contentType = require('content-type')\nvar debug = require('debug')('body-parser:text')\nvar read = require('../read')\nvar typeis = require('type-is')\n\n/**\n * Module exports.\n */\n\nmodule.exports = text\n\n/**\n * Create a middleware to parse text bodies.\n *\n * @param {object} [options]\n * @return {function}\n * @api public\n */\n\nfunction text (options) {\n  var opts = options || {}\n\n  var defaultCharset = opts.defaultCharset || 'utf-8'\n  var inflate = opts.inflate !== false\n  var limit = typeof opts.limit !== 'number'\n    ? bytes.parse(opts.limit || '100kb')\n    : opts.limit\n  var type = opts.type || 'text/plain'\n  var verify = opts.verify || false\n\n  if (verify !== false && typeof verify !== 'function') {\n    throw new TypeError('option verify must be function')\n  }\n\n  // create the appropriate type checking function\n  var shouldParse = typeof type !== 'function'\n    ? typeChecker(type)\n    : type\n\n  function parse (buf) {\n    return buf\n  }\n\n  return function textParser (req, res, next) {\n    if (req._body) {\n      debug('body already parsed')\n      next()\n      return\n    }\n\n    req.body = req.body || {}\n\n    // skip requests without bodies\n    if (!typeis.hasBody(req)) {\n      debug('skip empty body')\n      next()\n      return\n    }\n\n    debug('content-type %j', req.headers['content-type'])\n\n    // determine if request should be parsed\n    if (!shouldParse(req)) {\n      debug('skip parsing')\n      next()\n      return\n    }\n\n    // get charset\n    var charset = getCharset(req) || defaultCharset\n\n    // read\n    read(req, res, next, parse, debug, {\n      encoding: charset,\n      inflate: inflate,\n      limit: limit,\n      verify: verify\n    })\n  }\n}\n\n/**\n * Get the charset of a request.\n *\n * @param {object} req\n * @api private\n */\n\nfunction getCharset (req) {\n  try {\n    return (contentType.parse(req).parameters.charset || '').toLowerCase()\n  } catch (e) {\n    return undefined\n  }\n}\n\n/**\n * Get the simple type checker.\n *\n * @param {string} type\n * @return {function}\n */\n\nfunction typeChecker (type) {\n  return function checkType (req) {\n    return Boolean(typeis(req, type))\n  }\n}\n","/*!\n * body-parser\n * Copyright(c) 2014 Jonathan Ong\n * Copyright(c) 2014-2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * Module dependencies.\n * @private\n */\n\nvar bytes = require('bytes')\nvar contentType = require('content-type')\nvar createError = require('http-errors')\nvar debug = require('debug')('body-parser:urlencoded')\nvar deprecate = require('depd')('body-parser')\nvar read = require('../read')\nvar typeis = require('type-is')\n\n/**\n * Module exports.\n */\n\nmodule.exports = urlencoded\n\n/**\n * Cache of parser modules.\n */\n\nvar parsers = Object.create(null)\n\n/**\n * Create a middleware to parse urlencoded bodies.\n *\n * @param {object} [options]\n * @return {function}\n * @public\n */\n\nfunction urlencoded (options) {\n  var opts = options || {}\n\n  // notice because option default will flip in next major\n  if (opts.extended === undefined) {\n    deprecate('undefined extended: provide extended option')\n  }\n\n  var extended = opts.extended !== false\n  var inflate = opts.inflate !== false\n  var limit = typeof opts.limit !== 'number'\n    ? bytes.parse(opts.limit || '100kb')\n    : opts.limit\n  var type = opts.type || 'application/x-www-form-urlencoded'\n  var verify = opts.verify || false\n\n  if (verify !== false && typeof verify !== 'function') {\n    throw new TypeError('option verify must be function')\n  }\n\n  // create the appropriate query parser\n  var queryparse = extended\n    ? extendedparser(opts)\n    : simpleparser(opts)\n\n  // create the appropriate type checking function\n  var shouldParse = typeof type !== 'function'\n    ? typeChecker(type)\n    : type\n\n  function parse (body) {\n    return body.length\n      ? queryparse(body)\n      : {}\n  }\n\n  return function urlencodedParser (req, res, next) {\n    if (req._body) {\n      debug('body already parsed')\n      next()\n      return\n    }\n\n    req.body = req.body || {}\n\n    // skip requests without bodies\n    if (!typeis.hasBody(req)) {\n      debug('skip empty body')\n      next()\n      return\n    }\n\n    debug('content-type %j', req.headers['content-type'])\n\n    // determine if request should be parsed\n    if (!shouldParse(req)) {\n      debug('skip parsing')\n      next()\n      return\n    }\n\n    // assert charset\n    var charset = getCharset(req) || 'utf-8'\n    if (charset !== 'utf-8') {\n      debug('invalid charset')\n      next(createError(415, 'unsupported charset \"' + charset.toUpperCase() + '\"', {\n        charset: charset,\n        type: 'charset.unsupported'\n      }))\n      return\n    }\n\n    // read\n    read(req, res, next, parse, debug, {\n      debug: debug,\n      encoding: charset,\n      inflate: inflate,\n      limit: limit,\n      verify: verify\n    })\n  }\n}\n\n/**\n * Get the extended query parser.\n *\n * @param {object} options\n */\n\nfunction extendedparser (options) {\n  var parameterLimit = options.parameterLimit !== undefined\n    ? options.parameterLimit\n    : 1000\n  var parse = parser('qs')\n\n  if (isNaN(parameterLimit) || parameterLimit < 1) {\n    throw new TypeError('option parameterLimit must be a positive number')\n  }\n\n  if (isFinite(parameterLimit)) {\n    parameterLimit = parameterLimit | 0\n  }\n\n  return function queryparse (body) {\n    var paramCount = parameterCount(body, parameterLimit)\n\n    if (paramCount === undefined) {\n      debug('too many parameters')\n      throw createError(413, 'too many parameters', {\n        type: 'parameters.too.many'\n      })\n    }\n\n    var arrayLimit = Math.max(100, paramCount)\n\n    debug('parse extended urlencoding')\n    return parse(body, {\n      allowPrototypes: true,\n      arrayLimit: arrayLimit,\n      depth: Infinity,\n      parameterLimit: parameterLimit\n    })\n  }\n}\n\n/**\n * Get the charset of a request.\n *\n * @param {object} req\n * @api private\n */\n\nfunction getCharset (req) {\n  try {\n    return (contentType.parse(req).parameters.charset || '').toLowerCase()\n  } catch (e) {\n    return undefined\n  }\n}\n\n/**\n * Count the number of parameters, stopping once limit reached\n *\n * @param {string} body\n * @param {number} limit\n * @api private\n */\n\nfunction parameterCount (body, limit) {\n  var count = 0\n  var index = 0\n\n  while ((index = body.indexOf('&', index)) !== -1) {\n    count++\n    index++\n\n    if (count === limit) {\n      return undefined\n    }\n  }\n\n  return count\n}\n\n/**\n * Get parser for module name dynamically.\n *\n * @param {string} name\n * @return {function}\n * @api private\n */\n\nfunction parser (name) {\n  var mod = parsers[name]\n\n  if (mod !== undefined) {\n    return mod.parse\n  }\n\n  // this uses a switch for static require analysis\n  switch (name) {\n    case 'qs':\n      mod = require('qs')\n      break\n    case 'querystring':\n      mod = require('querystring')\n      break\n  }\n\n  // store to prevent invoking require()\n  parsers[name] = mod\n\n  return mod.parse\n}\n\n/**\n * Get the simple query parser.\n *\n * @param {object} options\n */\n\nfunction simpleparser (options) {\n  var parameterLimit = options.parameterLimit !== undefined\n    ? options.parameterLimit\n    : 1000\n  var parse = parser('querystring')\n\n  if (isNaN(parameterLimit) || parameterLimit < 1) {\n    throw new TypeError('option parameterLimit must be a positive number')\n  }\n\n  if (isFinite(parameterLimit)) {\n    parameterLimit = parameterLimit | 0\n  }\n\n  return function queryparse (body) {\n    var paramCount = parameterCount(body, parameterLimit)\n\n    if (paramCount === undefined) {\n      debug('too many parameters')\n      throw createError(413, 'too many parameters', {\n        type: 'parameters.too.many'\n      })\n    }\n\n    debug('parse urlencoding')\n    return parse(body, undefined, undefined, { maxKeys: parameterLimit })\n  }\n}\n\n/**\n * Get the simple type checker.\n *\n * @param {string} type\n * @return {function}\n */\n\nfunction typeChecker (type) {\n  return function checkType (req) {\n    return Boolean(typeis(req, type))\n  }\n}\n","/**\n * This is the web browser implementation of `debug()`.\n *\n * Expose `debug()` as the module.\n */\n\nexports = module.exports = require('./debug');\nexports.log = log;\nexports.formatArgs = formatArgs;\nexports.save = save;\nexports.load = load;\nexports.useColors = useColors;\nexports.storage = 'undefined' != typeof chrome\n               && 'undefined' != typeof chrome.storage\n                  ? chrome.storage.local\n                  : localstorage();\n\n/**\n * Colors.\n */\n\nexports.colors = [\n  'lightseagreen',\n  'forestgreen',\n  'goldenrod',\n  'dodgerblue',\n  'darkorchid',\n  'crimson'\n];\n\n/**\n * Currently only WebKit-based Web Inspectors, Firefox >= v31,\n * and the Firebug extension (any Firefox version) are known\n * to support \"%c\" CSS customizations.\n *\n * TODO: add a `localStorage` variable to explicitly enable/disable colors\n */\n\nfunction useColors() {\n  // NB: In an Electron preload script, document will be defined but not fully\n  // initialized. Since we know we're in Chrome, we'll just detect this case\n  // explicitly\n  if (typeof window !== 'undefined' && window.process && window.process.type === 'renderer') {\n    return true;\n  }\n\n  // is webkit? http://stackoverflow.com/a/16459606/376773\n  // document is undefined in react-native: https://github.com/facebook/react-native/pull/1632\n  return (typeof document !== 'undefined' && document.documentElement && document.documentElement.style && document.documentElement.style.WebkitAppearance) ||\n    // is firebug? http://stackoverflow.com/a/398120/376773\n    (typeof window !== 'undefined' && window.console && (window.console.firebug || (window.console.exception && window.console.table))) ||\n    // is firefox >= v31?\n    // https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages\n    (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/firefox\\/(\\d+)/) && parseInt(RegExp.$1, 10) >= 31) ||\n    // double check webkit in userAgent just in case we are in a worker\n    (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/applewebkit\\/(\\d+)/));\n}\n\n/**\n * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.\n */\n\nexports.formatters.j = function(v) {\n  try {\n    return JSON.stringify(v);\n  } catch (err) {\n    return '[UnexpectedJSONParseError]: ' + err.message;\n  }\n};\n\n\n/**\n * Colorize log arguments if enabled.\n *\n * @api public\n */\n\nfunction formatArgs(args) {\n  var useColors = this.useColors;\n\n  args[0] = (useColors ? '%c' : '')\n    + this.namespace\n    + (useColors ? ' %c' : ' ')\n    + args[0]\n    + (useColors ? '%c ' : ' ')\n    + '+' + exports.humanize(this.diff);\n\n  if (!useColors) return;\n\n  var c = 'color: ' + this.color;\n  args.splice(1, 0, c, 'color: inherit')\n\n  // the final \"%c\" is somewhat tricky, because there could be other\n  // arguments passed either before or after the %c, so we need to\n  // figure out the correct index to insert the CSS into\n  var index = 0;\n  var lastC = 0;\n  args[0].replace(/%[a-zA-Z%]/g, function(match) {\n    if ('%%' === match) return;\n    index++;\n    if ('%c' === match) {\n      // we only are interested in the *last* %c\n      // (the user may have provided their own)\n      lastC = index;\n    }\n  });\n\n  args.splice(lastC, 0, c);\n}\n\n/**\n * Invokes `console.log()` when available.\n * No-op when `console.log` is not a \"function\".\n *\n * @api public\n */\n\nfunction log() {\n  // this hackery is required for IE8/9, where\n  // the `console.log` function doesn't have 'apply'\n  return 'object' === typeof console\n    && console.log\n    && Function.prototype.apply.call(console.log, console, arguments);\n}\n\n/**\n * Save `namespaces`.\n *\n * @param {String} namespaces\n * @api private\n */\n\nfunction save(namespaces) {\n  try {\n    if (null == namespaces) {\n      exports.storage.removeItem('debug');\n    } else {\n      exports.storage.debug = namespaces;\n    }\n  } catch(e) {}\n}\n\n/**\n * Load `namespaces`.\n *\n * @return {String} returns the previously persisted debug modes\n * @api private\n */\n\nfunction load() {\n  var r;\n  try {\n    r = exports.storage.debug;\n  } catch(e) {}\n\n  // If debug isn't set in LS, and we're in Electron, try to load $DEBUG\n  if (!r && typeof process !== 'undefined' && 'env' in process) {\n    r = process.env.DEBUG;\n  }\n\n  return r;\n}\n\n/**\n * Enable namespaces listed in `localStorage.debug` initially.\n */\n\nexports.enable(load());\n\n/**\n * Localstorage attempts to return the localstorage.\n *\n * This is necessary because safari throws\n * when a user disables cookies/localstorage\n * and you attempt to access it.\n *\n * @return {LocalStorage}\n * @api private\n */\n\nfunction localstorage() {\n  try {\n    return window.localStorage;\n  } catch (e) {}\n}\n","\n/**\n * This is the common logic for both the Node.js and web browser\n * implementations of `debug()`.\n *\n * Expose `debug()` as the module.\n */\n\nexports = module.exports = createDebug.debug = createDebug['default'] = createDebug;\nexports.coerce = coerce;\nexports.disable = disable;\nexports.enable = enable;\nexports.enabled = enabled;\nexports.humanize = require('ms');\n\n/**\n * The currently active debug mode names, and names to skip.\n */\n\nexports.names = [];\nexports.skips = [];\n\n/**\n * Map of special \"%n\" handling functions, for the debug \"format\" argument.\n *\n * Valid key names are a single, lower or upper-case letter, i.e. \"n\" and \"N\".\n */\n\nexports.formatters = {};\n\n/**\n * Previous log timestamp.\n */\n\nvar prevTime;\n\n/**\n * Select a color.\n * @param {String} namespace\n * @return {Number}\n * @api private\n */\n\nfunction selectColor(namespace) {\n  var hash = 0, i;\n\n  for (i in namespace) {\n    hash  = ((hash << 5) - hash) + namespace.charCodeAt(i);\n    hash |= 0; // Convert to 32bit integer\n  }\n\n  return exports.colors[Math.abs(hash) % exports.colors.length];\n}\n\n/**\n * Create a debugger with the given `namespace`.\n *\n * @param {String} namespace\n * @return {Function}\n * @api public\n */\n\nfunction createDebug(namespace) {\n\n  function debug() {\n    // disabled?\n    if (!debug.enabled) return;\n\n    var self = debug;\n\n    // set `diff` timestamp\n    var curr = +new Date();\n    var ms = curr - (prevTime || curr);\n    self.diff = ms;\n    self.prev = prevTime;\n    self.curr = curr;\n    prevTime = curr;\n\n    // turn the `arguments` into a proper Array\n    var args = new Array(arguments.length);\n    for (var i = 0; i < args.length; i++) {\n      args[i] = arguments[i];\n    }\n\n    args[0] = exports.coerce(args[0]);\n\n    if ('string' !== typeof args[0]) {\n      // anything else let's inspect with %O\n      args.unshift('%O');\n    }\n\n    // apply any `formatters` transformations\n    var index = 0;\n    args[0] = args[0].replace(/%([a-zA-Z%])/g, function(match, format) {\n      // if we encounter an escaped % then don't increase the array index\n      if (match === '%%') return match;\n      index++;\n      var formatter = exports.formatters[format];\n      if ('function' === typeof formatter) {\n        var val = args[index];\n        match = formatter.call(self, val);\n\n        // now we need to remove `args[index]` since it's inlined in the `format`\n        args.splice(index, 1);\n        index--;\n      }\n      return match;\n    });\n\n    // apply env-specific formatting (colors, etc.)\n    exports.formatArgs.call(self, args);\n\n    var logFn = debug.log || exports.log || console.log.bind(console);\n    logFn.apply(self, args);\n  }\n\n  debug.namespace = namespace;\n  debug.enabled = exports.enabled(namespace);\n  debug.useColors = exports.useColors();\n  debug.color = selectColor(namespace);\n\n  // env-specific initialization logic for debug instances\n  if ('function' === typeof exports.init) {\n    exports.init(debug);\n  }\n\n  return debug;\n}\n\n/**\n * Enables a debug mode by namespaces. This can include modes\n * separated by a colon and wildcards.\n *\n * @param {String} namespaces\n * @api public\n */\n\nfunction enable(namespaces) {\n  exports.save(namespaces);\n\n  exports.names = [];\n  exports.skips = [];\n\n  var split = (typeof namespaces === 'string' ? namespaces : '').split(/[\\s,]+/);\n  var len = split.length;\n\n  for (var i = 0; i < len; i++) {\n    if (!split[i]) continue; // ignore empty strings\n    namespaces = split[i].replace(/\\*/g, '.*?');\n    if (namespaces[0] === '-') {\n      exports.skips.push(new RegExp('^' + namespaces.substr(1) + '$'));\n    } else {\n      exports.names.push(new RegExp('^' + namespaces + '$'));\n    }\n  }\n}\n\n/**\n * Disable debug output.\n *\n * @api public\n */\n\nfunction disable() {\n  exports.enable('');\n}\n\n/**\n * Returns true if the given mode name is enabled, false otherwise.\n *\n * @param {String} name\n * @return {Boolean}\n * @api public\n */\n\nfunction enabled(name) {\n  var i, len;\n  for (i = 0, len = exports.skips.length; i < len; i++) {\n    if (exports.skips[i].test(name)) {\n      return false;\n    }\n  }\n  for (i = 0, len = exports.names.length; i < len; i++) {\n    if (exports.names[i].test(name)) {\n      return true;\n    }\n  }\n  return false;\n}\n\n/**\n * Coerce `val`.\n *\n * @param {Mixed} val\n * @return {Mixed}\n * @api private\n */\n\nfunction coerce(val) {\n  if (val instanceof Error) return val.stack || val.message;\n  return val;\n}\n","/**\n * Detect Electron renderer process, which is node, but we should\n * treat as a browser.\n */\n\nif (typeof process !== 'undefined' && process.type === 'renderer') {\n  module.exports = require('./browser.js');\n} else {\n  module.exports = require('./node.js');\n}\n","/**\n * Module dependencies.\n */\n\nvar tty = require('tty');\nvar util = require('util');\n\n/**\n * This is the Node.js implementation of `debug()`.\n *\n * Expose `debug()` as the module.\n */\n\nexports = module.exports = require('./debug');\nexports.init = init;\nexports.log = log;\nexports.formatArgs = formatArgs;\nexports.save = save;\nexports.load = load;\nexports.useColors = useColors;\n\n/**\n * Colors.\n */\n\nexports.colors = [6, 2, 3, 4, 5, 1];\n\n/**\n * Build up the default `inspectOpts` object from the environment variables.\n *\n *   $ DEBUG_COLORS=no DEBUG_DEPTH=10 DEBUG_SHOW_HIDDEN=enabled node script.js\n */\n\nexports.inspectOpts = Object.keys(process.env).filter(function (key) {\n  return /^debug_/i.test(key);\n}).reduce(function (obj, key) {\n  // camel-case\n  var prop = key\n    .substring(6)\n    .toLowerCase()\n    .replace(/_([a-z])/g, function (_, k) { return k.toUpperCase() });\n\n  // coerce string value into JS value\n  var val = process.env[key];\n  if (/^(yes|on|true|enabled)$/i.test(val)) val = true;\n  else if (/^(no|off|false|disabled)$/i.test(val)) val = false;\n  else if (val === 'null') val = null;\n  else val = Number(val);\n\n  obj[prop] = val;\n  return obj;\n}, {});\n\n/**\n * The file descriptor to write the `debug()` calls to.\n * Set the `DEBUG_FD` env variable to override with another value. i.e.:\n *\n *   $ DEBUG_FD=3 node script.js 3>debug.log\n */\n\nvar fd = parseInt(process.env.DEBUG_FD, 10) || 2;\n\nif (1 !== fd && 2 !== fd) {\n  util.deprecate(function(){}, 'except for stderr(2) and stdout(1), any other usage of DEBUG_FD is deprecated. Override debug.log if you want to use a different log function (https://git.io/debug_fd)')()\n}\n\nvar stream = 1 === fd ? process.stdout :\n             2 === fd ? process.stderr :\n             createWritableStdioStream(fd);\n\n/**\n * Is stdout a TTY? Colored output is enabled when `true`.\n */\n\nfunction useColors() {\n  return 'colors' in exports.inspectOpts\n    ? Boolean(exports.inspectOpts.colors)\n    : tty.isatty(fd);\n}\n\n/**\n * Map %o to `util.inspect()`, all on a single line.\n */\n\nexports.formatters.o = function(v) {\n  this.inspectOpts.colors = this.useColors;\n  return util.inspect(v, this.inspectOpts)\n    .split('\\n').map(function(str) {\n      return str.trim()\n    }).join(' ');\n};\n\n/**\n * Map %o to `util.inspect()`, allowing multiple lines if needed.\n */\n\nexports.formatters.O = function(v) {\n  this.inspectOpts.colors = this.useColors;\n  return util.inspect(v, this.inspectOpts);\n};\n\n/**\n * Adds ANSI color escape codes if enabled.\n *\n * @api public\n */\n\nfunction formatArgs(args) {\n  var name = this.namespace;\n  var useColors = this.useColors;\n\n  if (useColors) {\n    var c = this.color;\n    var prefix = '  \\u001b[3' + c + ';1m' + name + ' ' + '\\u001b[0m';\n\n    args[0] = prefix + args[0].split('\\n').join('\\n' + prefix);\n    args.push('\\u001b[3' + c + 'm+' + exports.humanize(this.diff) + '\\u001b[0m');\n  } else {\n    args[0] = new Date().toUTCString()\n      + ' ' + name + ' ' + args[0];\n  }\n}\n\n/**\n * Invokes `util.format()` with the specified arguments and writes to `stream`.\n */\n\nfunction log() {\n  return stream.write(util.format.apply(util, arguments) + '\\n');\n}\n\n/**\n * Save `namespaces`.\n *\n * @param {String} namespaces\n * @api private\n */\n\nfunction save(namespaces) {\n  if (null == namespaces) {\n    // If you set a process.env field to null or undefined, it gets cast to the\n    // string 'null' or 'undefined'. Just delete instead.\n    delete process.env.DEBUG;\n  } else {\n    process.env.DEBUG = namespaces;\n  }\n}\n\n/**\n * Load `namespaces`.\n *\n * @return {String} returns the previously persisted debug modes\n * @api private\n */\n\nfunction load() {\n  return process.env.DEBUG;\n}\n\n/**\n * Copied from `node/src/node.js`.\n *\n * XXX: It's lame that node doesn't expose this API out-of-the-box. It also\n * relies on the undocumented `tty_wrap.guessHandleType()` which is also lame.\n */\n\nfunction createWritableStdioStream (fd) {\n  var stream;\n  var tty_wrap = process.binding('tty_wrap');\n\n  // Note stream._type is used for test-module-load-list.js\n\n  switch (tty_wrap.guessHandleType(fd)) {\n    case 'TTY':\n      stream = new tty.WriteStream(fd);\n      stream._type = 'tty';\n\n      // Hack to have stream not keep the event loop alive.\n      // See https://github.com/joyent/node/issues/1726\n      if (stream._handle && stream._handle.unref) {\n        stream._handle.unref();\n      }\n      break;\n\n    case 'FILE':\n      var fs = require('fs');\n      stream = new fs.SyncWriteStream(fd, { autoClose: false });\n      stream._type = 'fs';\n      break;\n\n    case 'PIPE':\n    case 'TCP':\n      var net = require('net');\n      stream = new net.Socket({\n        fd: fd,\n        readable: false,\n        writable: true\n      });\n\n      // FIXME Should probably have an option in net.Socket to create a\n      // stream from an existing fd which is writable only. But for now\n      // we'll just add this hack and set the `readable` member to false.\n      // Test: ./node test/fixtures/echo.js < /etc/passwd\n      stream.readable = false;\n      stream.read = null;\n      stream._type = 'pipe';\n\n      // FIXME Hack to have stream not keep the event loop alive.\n      // See https://github.com/joyent/node/issues/1726\n      if (stream._handle && stream._handle.unref) {\n        stream._handle.unref();\n      }\n      break;\n\n    default:\n      // Probably an error on in uv_guess_handle()\n      throw new Error('Implement me. Unknown stream file type!');\n  }\n\n  // For supporting legacy API we put the FD here.\n  stream.fd = fd;\n\n  stream._isStdio = true;\n\n  return stream;\n}\n\n/**\n * Init logic for `debug` instances.\n *\n * Create a new `inspectOpts` object in case `useColors` is set\n * differently for a particular `debug` instance.\n */\n\nfunction init (debug) {\n  debug.inspectOpts = {};\n\n  var keys = Object.keys(exports.inspectOpts);\n  for (var i = 0; i < keys.length; i++) {\n    debug.inspectOpts[keys[i]] = exports.inspectOpts[keys[i]];\n  }\n}\n\n/**\n * Enable namespaces listed in `process.env.DEBUG` initially.\n */\n\nexports.enable(load());\n","/**\n * Helpers.\n */\n\nvar s = 1000;\nvar m = s * 60;\nvar h = m * 60;\nvar d = h * 24;\nvar y = d * 365.25;\n\n/**\n * Parse or format the given `val`.\n *\n * Options:\n *\n *  - `long` verbose formatting [false]\n *\n * @param {String|Number} val\n * @param {Object} [options]\n * @throws {Error} throw an error if val is not a non-empty string or a number\n * @return {String|Number}\n * @api public\n */\n\nmodule.exports = function(val, options) {\n  options = options || {};\n  var type = typeof val;\n  if (type === 'string' && val.length > 0) {\n    return parse(val);\n  } else if (type === 'number' && isNaN(val) === false) {\n    return options.long ? fmtLong(val) : fmtShort(val);\n  }\n  throw new Error(\n    'val is not a non-empty string or a valid number. val=' +\n      JSON.stringify(val)\n  );\n};\n\n/**\n * Parse the given `str` and return milliseconds.\n *\n * @param {String} str\n * @return {Number}\n * @api private\n */\n\nfunction parse(str) {\n  str = String(str);\n  if (str.length > 100) {\n    return;\n  }\n  var match = /^((?:\\d+)?\\.?\\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|years?|yrs?|y)?$/i.exec(\n    str\n  );\n  if (!match) {\n    return;\n  }\n  var n = parseFloat(match[1]);\n  var type = (match[2] || 'ms').toLowerCase();\n  switch (type) {\n    case 'years':\n    case 'year':\n    case 'yrs':\n    case 'yr':\n    case 'y':\n      return n * y;\n    case 'days':\n    case 'day':\n    case 'd':\n      return n * d;\n    case 'hours':\n    case 'hour':\n    case 'hrs':\n    case 'hr':\n    case 'h':\n      return n * h;\n    case 'minutes':\n    case 'minute':\n    case 'mins':\n    case 'min':\n    case 'm':\n      return n * m;\n    case 'seconds':\n    case 'second':\n    case 'secs':\n    case 'sec':\n    case 's':\n      return n * s;\n    case 'milliseconds':\n    case 'millisecond':\n    case 'msecs':\n    case 'msec':\n    case 'ms':\n      return n;\n    default:\n      return undefined;\n  }\n}\n\n/**\n * Short format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtShort(ms) {\n  if (ms >= d) {\n    return Math.round(ms / d) + 'd';\n  }\n  if (ms >= h) {\n    return Math.round(ms / h) + 'h';\n  }\n  if (ms >= m) {\n    return Math.round(ms / m) + 'm';\n  }\n  if (ms >= s) {\n    return Math.round(ms / s) + 's';\n  }\n  return ms + 'ms';\n}\n\n/**\n * Long format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtLong(ms) {\n  return plural(ms, d, 'day') ||\n    plural(ms, h, 'hour') ||\n    plural(ms, m, 'minute') ||\n    plural(ms, s, 'second') ||\n    ms + ' ms';\n}\n\n/**\n * Pluralization helper.\n */\n\nfunction plural(ms, n, name) {\n  if (ms < n) {\n    return;\n  }\n  if (ms < n * 1.5) {\n    return Math.floor(ms / n) + ' ' + name;\n  }\n  return Math.ceil(ms / n) + ' ' + name + 's';\n}\n","'use strict';\n\n/**\n * Masks a buffer using the given mask.\n *\n * @param {Buffer} source The buffer to mask\n * @param {Buffer} mask The mask to use\n * @param {Buffer} output The buffer where to store the result\n * @param {Number} offset The offset at which to start writing\n * @param {Number} length The number of bytes to mask.\n * @public\n */\nconst mask = (source, mask, output, offset, length) => {\n  for (var i = 0; i < length; i++) {\n    output[offset + i] = source[i] ^ mask[i & 3];\n  }\n};\n\n/**\n * Unmasks a buffer using the given mask.\n *\n * @param {Buffer} buffer The buffer to unmask\n * @param {Buffer} mask The mask to use\n * @public\n */\nconst unmask = (buffer, mask) => {\n  // Required until https://github.com/nodejs/node/issues/9006 is resolved.\n  const length = buffer.length;\n  for (var i = 0; i < length; i++) {\n    buffer[i] ^= mask[i & 3];\n  }\n};\n\nmodule.exports = { mask, unmask };\n","'use strict';\n\ntry {\n  module.exports = require('node-gyp-build')(__dirname);\n} catch (e) {\n  module.exports = require('./fallback');\n}\n","/*!\n * bytes\n * Copyright(c) 2012-2014 TJ Holowaychuk\n * Copyright(c) 2015 Jed Watson\n * MIT Licensed\n */\n\n'use strict';\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = bytes;\nmodule.exports.format = format;\nmodule.exports.parse = parse;\n\n/**\n * Module variables.\n * @private\n */\n\nvar formatThousandsRegExp = /\\B(?=(\\d{3})+(?!\\d))/g;\n\nvar formatDecimalsRegExp = /(?:\\.0*|(\\.[^0]+)0+)$/;\n\nvar map = {\n  b:  1,\n  kb: 1 << 10,\n  mb: 1 << 20,\n  gb: 1 << 30,\n  tb: Math.pow(1024, 4),\n  pb: Math.pow(1024, 5),\n};\n\nvar parseRegExp = /^((-|\\+)?(\\d+(?:\\.\\d+)?)) *(kb|mb|gb|tb|pb)$/i;\n\n/**\n * Convert the given value in bytes into a string or parse to string to an integer in bytes.\n *\n * @param {string|number} value\n * @param {{\n *  case: [string],\n *  decimalPlaces: [number]\n *  fixedDecimals: [boolean]\n *  thousandsSeparator: [string]\n *  unitSeparator: [string]\n *  }} [options] bytes options.\n *\n * @returns {string|number|null}\n */\n\nfunction bytes(value, options) {\n  if (typeof value === 'string') {\n    return parse(value);\n  }\n\n  if (typeof value === 'number') {\n    return format(value, options);\n  }\n\n  return null;\n}\n\n/**\n * Format the given value in bytes into a string.\n *\n * If the value is negative, it is kept as such. If it is a float,\n * it is rounded.\n *\n * @param {number} value\n * @param {object} [options]\n * @param {number} [options.decimalPlaces=2]\n * @param {number} [options.fixedDecimals=false]\n * @param {string} [options.thousandsSeparator=]\n * @param {string} [options.unit=]\n * @param {string} [options.unitSeparator=]\n *\n * @returns {string|null}\n * @public\n */\n\nfunction format(value, options) {\n  if (!Number.isFinite(value)) {\n    return null;\n  }\n\n  var mag = Math.abs(value);\n  var thousandsSeparator = (options && options.thousandsSeparator) || '';\n  var unitSeparator = (options && options.unitSeparator) || '';\n  var decimalPlaces = (options && options.decimalPlaces !== undefined) ? options.decimalPlaces : 2;\n  var fixedDecimals = Boolean(options && options.fixedDecimals);\n  var unit = (options && options.unit) || '';\n\n  if (!unit || !map[unit.toLowerCase()]) {\n    if (mag >= map.pb) {\n      unit = 'PB';\n    } else if (mag >= map.tb) {\n      unit = 'TB';\n    } else if (mag >= map.gb) {\n      unit = 'GB';\n    } else if (mag >= map.mb) {\n      unit = 'MB';\n    } else if (mag >= map.kb) {\n      unit = 'KB';\n    } else {\n      unit = 'B';\n    }\n  }\n\n  var val = value / map[unit.toLowerCase()];\n  var str = val.toFixed(decimalPlaces);\n\n  if (!fixedDecimals) {\n    str = str.replace(formatDecimalsRegExp, '$1');\n  }\n\n  if (thousandsSeparator) {\n    str = str.split('.').map(function (s, i) {\n      return i === 0\n        ? s.replace(formatThousandsRegExp, thousandsSeparator)\n        : s\n    }).join('.');\n  }\n\n  return str + unitSeparator + unit;\n}\n\n/**\n * Parse the string value into an integer in bytes.\n *\n * If no unit is given, it is assumed the value is in bytes.\n *\n * @param {number|string} val\n *\n * @returns {number|null}\n * @public\n */\n\nfunction parse(val) {\n  if (typeof val === 'number' && !isNaN(val)) {\n    return val;\n  }\n\n  if (typeof val !== 'string') {\n    return null;\n  }\n\n  // Test if the string passed is valid\n  var results = parseRegExp.exec(val);\n  var floatValue;\n  var unit = 'b';\n\n  if (!results) {\n    // Nothing could be extracted from the given string\n    floatValue = parseInt(val, 10);\n    unit = 'b'\n  } else {\n    // Retrieve the value and the unit\n    floatValue = parseFloat(results[1]);\n    unit = results[4].toLowerCase();\n  }\n\n  if (isNaN(floatValue)) {\n    return null;\n  }\n\n  return Math.floor(map[unit] * floatValue);\n}\n","'use strict';\n\nvar GetIntrinsic = require('get-intrinsic');\n\nvar callBind = require('./');\n\nvar $indexOf = callBind(GetIntrinsic('String.prototype.indexOf'));\n\nmodule.exports = function callBoundIntrinsic(name, allowMissing) {\n\tvar intrinsic = GetIntrinsic(name, !!allowMissing);\n\tif (typeof intrinsic === 'function' && $indexOf(name, '.prototype.') > -1) {\n\t\treturn callBind(intrinsic);\n\t}\n\treturn intrinsic;\n};\n","'use strict';\n\nvar bind = require('function-bind');\nvar GetIntrinsic = require('get-intrinsic');\n\nvar $apply = GetIntrinsic('%Function.prototype.apply%');\nvar $call = GetIntrinsic('%Function.prototype.call%');\nvar $reflectApply = GetIntrinsic('%Reflect.apply%', true) || bind.call($call, $apply);\n\nvar $gOPD = GetIntrinsic('%Object.getOwnPropertyDescriptor%', true);\nvar $defineProperty = GetIntrinsic('%Object.defineProperty%', true);\nvar $max = GetIntrinsic('%Math.max%');\n\nif ($defineProperty) {\n\ttry {\n\t\t$defineProperty({}, 'a', { value: 1 });\n\t} catch (e) {\n\t\t// IE 8 has a broken defineProperty\n\t\t$defineProperty = null;\n\t}\n}\n\nmodule.exports = function callBind(originalFunction) {\n\tvar func = $reflectApply(bind, $call, arguments);\n\tif ($gOPD && $defineProperty) {\n\t\tvar desc = $gOPD(func, 'length');\n\t\tif (desc.configurable) {\n\t\t\t// original length, plus the receiver, minus any additional arguments (after the receiver)\n\t\t\t$defineProperty(\n\t\t\t\tfunc,\n\t\t\t\t'length',\n\t\t\t\t{ value: 1 + $max(0, originalFunction.length - (arguments.length - 1)) }\n\t\t\t);\n\t\t}\n\t}\n\treturn func;\n};\n\nvar applyBind = function applyBind() {\n\treturn $reflectApply(bind, $apply, arguments);\n};\n\nif ($defineProperty) {\n\t$defineProperty(module.exports, 'apply', { value: applyBind });\n} else {\n\tmodule.exports.apply = applyBind;\n}\n","/*!\n * content-disposition\n * Copyright(c) 2014-2017 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = contentDisposition\nmodule.exports.parse = parse\n\n/**\n * Module dependencies.\n * @private\n */\n\nvar basename = require('path').basename\nvar Buffer = require('safe-buffer').Buffer\n\n/**\n * RegExp to match non attr-char, *after* encodeURIComponent (i.e. not including \"%\")\n * @private\n */\n\nvar ENCODE_URL_ATTR_CHAR_REGEXP = /[\\x00-\\x20\"'()*,/:;<=>?@[\\\\\\]{}\\x7f]/g // eslint-disable-line no-control-regex\n\n/**\n * RegExp to match percent encoding escape.\n * @private\n */\n\nvar HEX_ESCAPE_REGEXP = /%[0-9A-Fa-f]{2}/\nvar HEX_ESCAPE_REPLACE_REGEXP = /%([0-9A-Fa-f]{2})/g\n\n/**\n * RegExp to match non-latin1 characters.\n * @private\n */\n\nvar NON_LATIN1_REGEXP = /[^\\x20-\\x7e\\xa0-\\xff]/g\n\n/**\n * RegExp to match quoted-pair in RFC 2616\n *\n * quoted-pair = \"\\\" CHAR\n * CHAR        = <any US-ASCII character (octets 0 - 127)>\n * @private\n */\n\nvar QESC_REGEXP = /\\\\([\\u0000-\\u007f])/g // eslint-disable-line no-control-regex\n\n/**\n * RegExp to match chars that must be quoted-pair in RFC 2616\n * @private\n */\n\nvar QUOTE_REGEXP = /([\\\\\"])/g\n\n/**\n * RegExp for various RFC 2616 grammar\n *\n * parameter     = token \"=\" ( token | quoted-string )\n * token         = 1*<any CHAR except CTLs or separators>\n * separators    = \"(\" | \")\" | \"<\" | \">\" | \"@\"\n *               | \",\" | \";\" | \":\" | \"\\\" | <\">\n *               | \"/\" | \"[\" | \"]\" | \"?\" | \"=\"\n *               | \"{\" | \"}\" | SP | HT\n * quoted-string = ( <\"> *(qdtext | quoted-pair ) <\"> )\n * qdtext        = <any TEXT except <\">>\n * quoted-pair   = \"\\\" CHAR\n * CHAR          = <any US-ASCII character (octets 0 - 127)>\n * TEXT          = <any OCTET except CTLs, but including LWS>\n * LWS           = [CRLF] 1*( SP | HT )\n * CRLF          = CR LF\n * CR            = <US-ASCII CR, carriage return (13)>\n * LF            = <US-ASCII LF, linefeed (10)>\n * SP            = <US-ASCII SP, space (32)>\n * HT            = <US-ASCII HT, horizontal-tab (9)>\n * CTL           = <any US-ASCII control character (octets 0 - 31) and DEL (127)>\n * OCTET         = <any 8-bit sequence of data>\n * @private\n */\n\nvar PARAM_REGEXP = /;[\\x09\\x20]*([!#$%&'*+.0-9A-Z^_`a-z|~-]+)[\\x09\\x20]*=[\\x09\\x20]*(\"(?:[\\x20!\\x23-\\x5b\\x5d-\\x7e\\x80-\\xff]|\\\\[\\x20-\\x7e])*\"|[!#$%&'*+.0-9A-Z^_`a-z|~-]+)[\\x09\\x20]*/g // eslint-disable-line no-control-regex\nvar TEXT_REGEXP = /^[\\x20-\\x7e\\x80-\\xff]+$/\nvar TOKEN_REGEXP = /^[!#$%&'*+.0-9A-Z^_`a-z|~-]+$/\n\n/**\n * RegExp for various RFC 5987 grammar\n *\n * ext-value     = charset  \"'\" [ language ] \"'\" value-chars\n * charset       = \"UTF-8\" / \"ISO-8859-1\" / mime-charset\n * mime-charset  = 1*mime-charsetc\n * mime-charsetc = ALPHA / DIGIT\n *               / \"!\" / \"#\" / \"$\" / \"%\" / \"&\"\n *               / \"+\" / \"-\" / \"^\" / \"_\" / \"`\"\n *               / \"{\" / \"}\" / \"~\"\n * language      = ( 2*3ALPHA [ extlang ] )\n *               / 4ALPHA\n *               / 5*8ALPHA\n * extlang       = *3( \"-\" 3ALPHA )\n * value-chars   = *( pct-encoded / attr-char )\n * pct-encoded   = \"%\" HEXDIG HEXDIG\n * attr-char     = ALPHA / DIGIT\n *               / \"!\" / \"#\" / \"$\" / \"&\" / \"+\" / \"-\" / \".\"\n *               / \"^\" / \"_\" / \"`\" / \"|\" / \"~\"\n * @private\n */\n\nvar EXT_VALUE_REGEXP = /^([A-Za-z0-9!#$%&+\\-^_`{}~]+)'(?:[A-Za-z]{2,3}(?:-[A-Za-z]{3}){0,3}|[A-Za-z]{4,8}|)'((?:%[0-9A-Fa-f]{2}|[A-Za-z0-9!#$&+.^_`|~-])+)$/\n\n/**\n * RegExp for various RFC 6266 grammar\n *\n * disposition-type = \"inline\" | \"attachment\" | disp-ext-type\n * disp-ext-type    = token\n * disposition-parm = filename-parm | disp-ext-parm\n * filename-parm    = \"filename\" \"=\" value\n *                  | \"filename*\" \"=\" ext-value\n * disp-ext-parm    = token \"=\" value\n *                  | ext-token \"=\" ext-value\n * ext-token        = <the characters in token, followed by \"*\">\n * @private\n */\n\nvar DISPOSITION_TYPE_REGEXP = /^([!#$%&'*+.0-9A-Z^_`a-z|~-]+)[\\x09\\x20]*(?:$|;)/ // eslint-disable-line no-control-regex\n\n/**\n * Create an attachment Content-Disposition header.\n *\n * @param {string} [filename]\n * @param {object} [options]\n * @param {string} [options.type=attachment]\n * @param {string|boolean} [options.fallback=true]\n * @return {string}\n * @public\n */\n\nfunction contentDisposition (filename, options) {\n  var opts = options || {}\n\n  // get type\n  var type = opts.type || 'attachment'\n\n  // get parameters\n  var params = createparams(filename, opts.fallback)\n\n  // format into string\n  return format(new ContentDisposition(type, params))\n}\n\n/**\n * Create parameters object from filename and fallback.\n *\n * @param {string} [filename]\n * @param {string|boolean} [fallback=true]\n * @return {object}\n * @private\n */\n\nfunction createparams (filename, fallback) {\n  if (filename === undefined) {\n    return\n  }\n\n  var params = {}\n\n  if (typeof filename !== 'string') {\n    throw new TypeError('filename must be a string')\n  }\n\n  // fallback defaults to true\n  if (fallback === undefined) {\n    fallback = true\n  }\n\n  if (typeof fallback !== 'string' && typeof fallback !== 'boolean') {\n    throw new TypeError('fallback must be a string or boolean')\n  }\n\n  if (typeof fallback === 'string' && NON_LATIN1_REGEXP.test(fallback)) {\n    throw new TypeError('fallback must be ISO-8859-1 string')\n  }\n\n  // restrict to file base name\n  var name = basename(filename)\n\n  // determine if name is suitable for quoted string\n  var isQuotedString = TEXT_REGEXP.test(name)\n\n  // generate fallback name\n  var fallbackName = typeof fallback !== 'string'\n    ? fallback && getlatin1(name)\n    : basename(fallback)\n  var hasFallback = typeof fallbackName === 'string' && fallbackName !== name\n\n  // set extended filename parameter\n  if (hasFallback || !isQuotedString || HEX_ESCAPE_REGEXP.test(name)) {\n    params['filename*'] = name\n  }\n\n  // set filename parameter\n  if (isQuotedString || hasFallback) {\n    params.filename = hasFallback\n      ? fallbackName\n      : name\n  }\n\n  return params\n}\n\n/**\n * Format object to Content-Disposition header.\n *\n * @param {object} obj\n * @param {string} obj.type\n * @param {object} [obj.parameters]\n * @return {string}\n * @private\n */\n\nfunction format (obj) {\n  var parameters = obj.parameters\n  var type = obj.type\n\n  if (!type || typeof type !== 'string' || !TOKEN_REGEXP.test(type)) {\n    throw new TypeError('invalid type')\n  }\n\n  // start with normalized type\n  var string = String(type).toLowerCase()\n\n  // append parameters\n  if (parameters && typeof parameters === 'object') {\n    var param\n    var params = Object.keys(parameters).sort()\n\n    for (var i = 0; i < params.length; i++) {\n      param = params[i]\n\n      var val = param.substr(-1) === '*'\n        ? ustring(parameters[param])\n        : qstring(parameters[param])\n\n      string += '; ' + param + '=' + val\n    }\n  }\n\n  return string\n}\n\n/**\n * Decode a RFC 5987 field value (gracefully).\n *\n * @param {string} str\n * @return {string}\n * @private\n */\n\nfunction decodefield (str) {\n  var match = EXT_VALUE_REGEXP.exec(str)\n\n  if (!match) {\n    throw new TypeError('invalid extended field value')\n  }\n\n  var charset = match[1].toLowerCase()\n  var encoded = match[2]\n  var value\n\n  // to binary string\n  var binary = encoded.replace(HEX_ESCAPE_REPLACE_REGEXP, pdecode)\n\n  switch (charset) {\n    case 'iso-8859-1':\n      value = getlatin1(binary)\n      break\n    case 'utf-8':\n      value = Buffer.from(binary, 'binary').toString('utf8')\n      break\n    default:\n      throw new TypeError('unsupported charset in extended field')\n  }\n\n  return value\n}\n\n/**\n * Get ISO-8859-1 version of string.\n *\n * @param {string} val\n * @return {string}\n * @private\n */\n\nfunction getlatin1 (val) {\n  // simple Unicode -> ISO-8859-1 transformation\n  return String(val).replace(NON_LATIN1_REGEXP, '?')\n}\n\n/**\n * Parse Content-Disposition header string.\n *\n * @param {string} string\n * @return {object}\n * @public\n */\n\nfunction parse (string) {\n  if (!string || typeof string !== 'string') {\n    throw new TypeError('argument string is required')\n  }\n\n  var match = DISPOSITION_TYPE_REGEXP.exec(string)\n\n  if (!match) {\n    throw new TypeError('invalid type format')\n  }\n\n  // normalize type\n  var index = match[0].length\n  var type = match[1].toLowerCase()\n\n  var key\n  var names = []\n  var params = {}\n  var value\n\n  // calculate index to start at\n  index = PARAM_REGEXP.lastIndex = match[0].substr(-1) === ';'\n    ? index - 1\n    : index\n\n  // match parameters\n  while ((match = PARAM_REGEXP.exec(string))) {\n    if (match.index !== index) {\n      throw new TypeError('invalid parameter format')\n    }\n\n    index += match[0].length\n    key = match[1].toLowerCase()\n    value = match[2]\n\n    if (names.indexOf(key) !== -1) {\n      throw new TypeError('invalid duplicate parameter')\n    }\n\n    names.push(key)\n\n    if (key.indexOf('*') + 1 === key.length) {\n      // decode extended value\n      key = key.slice(0, -1)\n      value = decodefield(value)\n\n      // overwrite existing value\n      params[key] = value\n      continue\n    }\n\n    if (typeof params[key] === 'string') {\n      continue\n    }\n\n    if (value[0] === '\"') {\n      // remove quotes and escapes\n      value = value\n        .substr(1, value.length - 2)\n        .replace(QESC_REGEXP, '$1')\n    }\n\n    params[key] = value\n  }\n\n  if (index !== -1 && index !== string.length) {\n    throw new TypeError('invalid parameter format')\n  }\n\n  return new ContentDisposition(type, params)\n}\n\n/**\n * Percent decode a single character.\n *\n * @param {string} str\n * @param {string} hex\n * @return {string}\n * @private\n */\n\nfunction pdecode (str, hex) {\n  return String.fromCharCode(parseInt(hex, 16))\n}\n\n/**\n * Percent encode a single character.\n *\n * @param {string} char\n * @return {string}\n * @private\n */\n\nfunction pencode (char) {\n  return '%' + String(char)\n    .charCodeAt(0)\n    .toString(16)\n    .toUpperCase()\n}\n\n/**\n * Quote a string for HTTP.\n *\n * @param {string} val\n * @return {string}\n * @private\n */\n\nfunction qstring (val) {\n  var str = String(val)\n\n  return '\"' + str.replace(QUOTE_REGEXP, '\\\\$1') + '\"'\n}\n\n/**\n * Encode a Unicode string for HTTP (RFC 5987).\n *\n * @param {string} val\n * @return {string}\n * @private\n */\n\nfunction ustring (val) {\n  var str = String(val)\n\n  // percent encode as UTF-8\n  var encoded = encodeURIComponent(str)\n    .replace(ENCODE_URL_ATTR_CHAR_REGEXP, pencode)\n\n  return 'UTF-8\\'\\'' + encoded\n}\n\n/**\n * Class for parsed Content-Disposition header for v8 optimization\n *\n * @public\n * @param {string} type\n * @param {object} parameters\n * @constructor\n */\n\nfunction ContentDisposition (type, parameters) {\n  this.type = type\n  this.parameters = parameters\n}\n","/*! safe-buffer. MIT License. Feross Aboukhadijeh <https://feross.org/opensource> */\n/* eslint-disable node/no-deprecated-api */\nvar buffer = require('buffer')\nvar Buffer = buffer.Buffer\n\n// alternative to using Object.keys for old browsers\nfunction copyProps (src, dst) {\n  for (var key in src) {\n    dst[key] = src[key]\n  }\n}\nif (Buffer.from && Buffer.alloc && Buffer.allocUnsafe && Buffer.allocUnsafeSlow) {\n  module.exports = buffer\n} else {\n  // Copy properties from require('buffer')\n  copyProps(buffer, exports)\n  exports.Buffer = SafeBuffer\n}\n\nfunction SafeBuffer (arg, encodingOrOffset, length) {\n  return Buffer(arg, encodingOrOffset, length)\n}\n\nSafeBuffer.prototype = Object.create(Buffer.prototype)\n\n// Copy static methods from Buffer\ncopyProps(Buffer, SafeBuffer)\n\nSafeBuffer.from = function (arg, encodingOrOffset, length) {\n  if (typeof arg === 'number') {\n    throw new TypeError('Argument must not be a number')\n  }\n  return Buffer(arg, encodingOrOffset, length)\n}\n\nSafeBuffer.alloc = function (size, fill, encoding) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  var buf = Buffer(size)\n  if (fill !== undefined) {\n    if (typeof encoding === 'string') {\n      buf.fill(fill, encoding)\n    } else {\n      buf.fill(fill)\n    }\n  } else {\n    buf.fill(0)\n  }\n  return buf\n}\n\nSafeBuffer.allocUnsafe = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return Buffer(size)\n}\n\nSafeBuffer.allocUnsafeSlow = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return buffer.SlowBuffer(size)\n}\n","/*!\n * content-type\n * Copyright(c) 2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * RegExp to match *( \";\" parameter ) in RFC 7231 sec 3.1.1.1\n *\n * parameter     = token \"=\" ( token / quoted-string )\n * token         = 1*tchar\n * tchar         = \"!\" / \"#\" / \"$\" / \"%\" / \"&\" / \"'\" / \"*\"\n *               / \"+\" / \"-\" / \".\" / \"^\" / \"_\" / \"`\" / \"|\" / \"~\"\n *               / DIGIT / ALPHA\n *               ; any VCHAR, except delimiters\n * quoted-string = DQUOTE *( qdtext / quoted-pair ) DQUOTE\n * qdtext        = HTAB / SP / %x21 / %x23-5B / %x5D-7E / obs-text\n * obs-text      = %x80-FF\n * quoted-pair   = \"\\\" ( HTAB / SP / VCHAR / obs-text )\n */\nvar PARAM_REGEXP = /; *([!#$%&'*+.^_`|~0-9A-Za-z-]+) *= *(\"(?:[\\u000b\\u0020\\u0021\\u0023-\\u005b\\u005d-\\u007e\\u0080-\\u00ff]|\\\\[\\u000b\\u0020-\\u00ff])*\"|[!#$%&'*+.^_`|~0-9A-Za-z-]+) */g\nvar TEXT_REGEXP = /^[\\u000b\\u0020-\\u007e\\u0080-\\u00ff]+$/\nvar TOKEN_REGEXP = /^[!#$%&'*+.^_`|~0-9A-Za-z-]+$/\n\n/**\n * RegExp to match quoted-pair in RFC 7230 sec 3.2.6\n *\n * quoted-pair = \"\\\" ( HTAB / SP / VCHAR / obs-text )\n * obs-text    = %x80-FF\n */\nvar QESC_REGEXP = /\\\\([\\u000b\\u0020-\\u00ff])/g\n\n/**\n * RegExp to match chars that must be quoted-pair in RFC 7230 sec 3.2.6\n */\nvar QUOTE_REGEXP = /([\\\\\"])/g\n\n/**\n * RegExp to match type in RFC 7231 sec 3.1.1.1\n *\n * media-type = type \"/\" subtype\n * type       = token\n * subtype    = token\n */\nvar TYPE_REGEXP = /^[!#$%&'*+.^_`|~0-9A-Za-z-]+\\/[!#$%&'*+.^_`|~0-9A-Za-z-]+$/\n\n/**\n * Module exports.\n * @public\n */\n\nexports.format = format\nexports.parse = parse\n\n/**\n * Format object to media type.\n *\n * @param {object} obj\n * @return {string}\n * @public\n */\n\nfunction format (obj) {\n  if (!obj || typeof obj !== 'object') {\n    throw new TypeError('argument obj is required')\n  }\n\n  var parameters = obj.parameters\n  var type = obj.type\n\n  if (!type || !TYPE_REGEXP.test(type)) {\n    throw new TypeError('invalid type')\n  }\n\n  var string = type\n\n  // append parameters\n  if (parameters && typeof parameters === 'object') {\n    var param\n    var params = Object.keys(parameters).sort()\n\n    for (var i = 0; i < params.length; i++) {\n      param = params[i]\n\n      if (!TOKEN_REGEXP.test(param)) {\n        throw new TypeError('invalid parameter name')\n      }\n\n      string += '; ' + param + '=' + qstring(parameters[param])\n    }\n  }\n\n  return string\n}\n\n/**\n * Parse media type to object.\n *\n * @param {string|object} string\n * @return {Object}\n * @public\n */\n\nfunction parse (string) {\n  if (!string) {\n    throw new TypeError('argument string is required')\n  }\n\n  // support req/res-like objects as argument\n  var header = typeof string === 'object'\n    ? getcontenttype(string)\n    : string\n\n  if (typeof header !== 'string') {\n    throw new TypeError('argument string is required to be a string')\n  }\n\n  var index = header.indexOf(';')\n  var type = index !== -1\n    ? header.substr(0, index).trim()\n    : header.trim()\n\n  if (!TYPE_REGEXP.test(type)) {\n    throw new TypeError('invalid media type')\n  }\n\n  var obj = new ContentType(type.toLowerCase())\n\n  // parse parameters\n  if (index !== -1) {\n    var key\n    var match\n    var value\n\n    PARAM_REGEXP.lastIndex = index\n\n    while ((match = PARAM_REGEXP.exec(header))) {\n      if (match.index !== index) {\n        throw new TypeError('invalid parameter format')\n      }\n\n      index += match[0].length\n      key = match[1].toLowerCase()\n      value = match[2]\n\n      if (value[0] === '\"') {\n        // remove quotes and escapes\n        value = value\n          .substr(1, value.length - 2)\n          .replace(QESC_REGEXP, '$1')\n      }\n\n      obj.parameters[key] = value\n    }\n\n    if (index !== header.length) {\n      throw new TypeError('invalid parameter format')\n    }\n  }\n\n  return obj\n}\n\n/**\n * Get content-type from req/res objects.\n *\n * @param {object}\n * @return {Object}\n * @private\n */\n\nfunction getcontenttype (obj) {\n  var header\n\n  if (typeof obj.getHeader === 'function') {\n    // res-like\n    header = obj.getHeader('content-type')\n  } else if (typeof obj.headers === 'object') {\n    // req-like\n    header = obj.headers && obj.headers['content-type']\n  }\n\n  if (typeof header !== 'string') {\n    throw new TypeError('content-type header is missing from object')\n  }\n\n  return header\n}\n\n/**\n * Quote a string if necessary.\n *\n * @param {string} val\n * @return {string}\n * @private\n */\n\nfunction qstring (val) {\n  var str = String(val)\n\n  // no need to quote tokens\n  if (TOKEN_REGEXP.test(str)) {\n    return str\n  }\n\n  if (str.length > 0 && !TEXT_REGEXP.test(str)) {\n    throw new TypeError('invalid parameter value')\n  }\n\n  return '\"' + str.replace(QUOTE_REGEXP, '\\\\$1') + '\"'\n}\n\n/**\n * Class to represent a content type.\n * @private\n */\nfunction ContentType (type) {\n  this.parameters = Object.create(null)\n  this.type = type\n}\n","/**\n * Module dependencies.\n */\n\nvar crypto = require('crypto');\n\n/**\n * Sign the given `val` with `secret`.\n *\n * @param {String} val\n * @param {String} secret\n * @return {String}\n * @api private\n */\n\nexports.sign = function(val, secret){\n  if ('string' != typeof val) throw new TypeError(\"Cookie value must be provided as a string.\");\n  if ('string' != typeof secret) throw new TypeError(\"Secret string must be provided.\");\n  return val + '.' + crypto\n    .createHmac('sha256', secret)\n    .update(val)\n    .digest('base64')\n    .replace(/\\=+$/, '');\n};\n\n/**\n * Unsign and decode the given `val` with `secret`,\n * returning `false` if the signature is invalid.\n *\n * @param {String} val\n * @param {String} secret\n * @return {String|Boolean}\n * @api private\n */\n\nexports.unsign = function(val, secret){\n  if ('string' != typeof val) throw new TypeError(\"Signed cookie string must be provided.\");\n  if ('string' != typeof secret) throw new TypeError(\"Secret string must be provided.\");\n  var str = val.slice(0, val.lastIndexOf('.'))\n    , mac = exports.sign(str, secret);\n  \n  return sha1(mac) == sha1(val) ? str : false;\n};\n\n/**\n * Private\n */\n\nfunction sha1(str){\n  return crypto.createHash('sha1').update(str).digest('hex');\n}\n","/*!\n * cookie\n * Copyright(c) 2012-2014 Roman Shtylman\n * Copyright(c) 2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict';\n\n/**\n * Module exports.\n * @public\n */\n\nexports.parse = parse;\nexports.serialize = serialize;\n\n/**\n * Module variables.\n * @private\n */\n\nvar __toString = Object.prototype.toString\n\n/**\n * RegExp to match field-content in RFC 7230 sec 3.2\n *\n * field-content = field-vchar [ 1*( SP / HTAB ) field-vchar ]\n * field-vchar   = VCHAR / obs-text\n * obs-text      = %x80-FF\n */\n\nvar fieldContentRegExp = /^[\\u0009\\u0020-\\u007e\\u0080-\\u00ff]+$/;\n\n/**\n * Parse a cookie header.\n *\n * Parse the given cookie header string into an object\n * The object has the various cookies as keys(names) => values\n *\n * @param {string} str\n * @param {object} [options]\n * @return {object}\n * @public\n */\n\nfunction parse(str, options) {\n  if (typeof str !== 'string') {\n    throw new TypeError('argument str must be a string');\n  }\n\n  var obj = {}\n  var opt = options || {};\n  var dec = opt.decode || decode;\n\n  var index = 0\n  while (index < str.length) {\n    var eqIdx = str.indexOf('=', index)\n\n    // no more cookie pairs\n    if (eqIdx === -1) {\n      break\n    }\n\n    var endIdx = str.indexOf(';', index)\n\n    if (endIdx === -1) {\n      endIdx = str.length\n    } else if (endIdx < eqIdx) {\n      // backtrack on prior semicolon\n      index = str.lastIndexOf(';', eqIdx - 1) + 1\n      continue\n    }\n\n    var key = str.slice(index, eqIdx).trim()\n\n    // only assign once\n    if (undefined === obj[key]) {\n      var val = str.slice(eqIdx + 1, endIdx).trim()\n\n      // quoted values\n      if (val.charCodeAt(0) === 0x22) {\n        val = val.slice(1, -1)\n      }\n\n      obj[key] = tryDecode(val, dec);\n    }\n\n    index = endIdx + 1\n  }\n\n  return obj;\n}\n\n/**\n * Serialize data into a cookie header.\n *\n * Serialize the a name value pair into a cookie string suitable for\n * http headers. An optional options object specified cookie parameters.\n *\n * serialize('foo', 'bar', { httpOnly: true })\n *   => \"foo=bar; httpOnly\"\n *\n * @param {string} name\n * @param {string} val\n * @param {object} [options]\n * @return {string}\n * @public\n */\n\nfunction serialize(name, val, options) {\n  var opt = options || {};\n  var enc = opt.encode || encode;\n\n  if (typeof enc !== 'function') {\n    throw new TypeError('option encode is invalid');\n  }\n\n  if (!fieldContentRegExp.test(name)) {\n    throw new TypeError('argument name is invalid');\n  }\n\n  var value = enc(val);\n\n  if (value && !fieldContentRegExp.test(value)) {\n    throw new TypeError('argument val is invalid');\n  }\n\n  var str = name + '=' + value;\n\n  if (null != opt.maxAge) {\n    var maxAge = opt.maxAge - 0;\n\n    if (isNaN(maxAge) || !isFinite(maxAge)) {\n      throw new TypeError('option maxAge is invalid')\n    }\n\n    str += '; Max-Age=' + Math.floor(maxAge);\n  }\n\n  if (opt.domain) {\n    if (!fieldContentRegExp.test(opt.domain)) {\n      throw new TypeError('option domain is invalid');\n    }\n\n    str += '; Domain=' + opt.domain;\n  }\n\n  if (opt.path) {\n    if (!fieldContentRegExp.test(opt.path)) {\n      throw new TypeError('option path is invalid');\n    }\n\n    str += '; Path=' + opt.path;\n  }\n\n  if (opt.expires) {\n    var expires = opt.expires\n\n    if (!isDate(expires) || isNaN(expires.valueOf())) {\n      throw new TypeError('option expires is invalid');\n    }\n\n    str += '; Expires=' + expires.toUTCString()\n  }\n\n  if (opt.httpOnly) {\n    str += '; HttpOnly';\n  }\n\n  if (opt.secure) {\n    str += '; Secure';\n  }\n\n  if (opt.priority) {\n    var priority = typeof opt.priority === 'string'\n      ? opt.priority.toLowerCase()\n      : opt.priority\n\n    switch (priority) {\n      case 'low':\n        str += '; Priority=Low'\n        break\n      case 'medium':\n        str += '; Priority=Medium'\n        break\n      case 'high':\n        str += '; Priority=High'\n        break\n      default:\n        throw new TypeError('option priority is invalid')\n    }\n  }\n\n  if (opt.sameSite) {\n    var sameSite = typeof opt.sameSite === 'string'\n      ? opt.sameSite.toLowerCase() : opt.sameSite;\n\n    switch (sameSite) {\n      case true:\n        str += '; SameSite=Strict';\n        break;\n      case 'lax':\n        str += '; SameSite=Lax';\n        break;\n      case 'strict':\n        str += '; SameSite=Strict';\n        break;\n      case 'none':\n        str += '; SameSite=None';\n        break;\n      default:\n        throw new TypeError('option sameSite is invalid');\n    }\n  }\n\n  return str;\n}\n\n/**\n * URL-decode string value. Optimized to skip native call when no %.\n *\n * @param {string} str\n * @returns {string}\n */\n\nfunction decode (str) {\n  return str.indexOf('%') !== -1\n    ? decodeURIComponent(str)\n    : str\n}\n\n/**\n * URL-encode value.\n *\n * @param {string} str\n * @returns {string}\n */\n\nfunction encode (val) {\n  return encodeURIComponent(val)\n}\n\n/**\n * Determine if value is a Date.\n *\n * @param {*} val\n * @private\n */\n\nfunction isDate (val) {\n  return __toString.call(val) === '[object Date]' ||\n    val instanceof Date\n}\n\n/**\n * Try decoding a string using a decoding function.\n *\n * @param {string} str\n * @param {function} decode\n * @private\n */\n\nfunction tryDecode(str, decode) {\n  try {\n    return decode(str);\n  } catch (e) {\n    return str;\n  }\n}\n","(function () {\n\n  'use strict';\n\n  var assign = require('object-assign');\n  var vary = require('vary');\n\n  var defaults = {\n    origin: '*',\n    methods: 'GET,HEAD,PUT,PATCH,POST,DELETE',\n    preflightContinue: false,\n    optionsSuccessStatus: 204\n  };\n\n  function isString(s) {\n    return typeof s === 'string' || s instanceof String;\n  }\n\n  function isOriginAllowed(origin, allowedOrigin) {\n    if (Array.isArray(allowedOrigin)) {\n      for (var i = 0; i < allowedOrigin.length; ++i) {\n        if (isOriginAllowed(origin, allowedOrigin[i])) {\n          return true;\n        }\n      }\n      return false;\n    } else if (isString(allowedOrigin)) {\n      return origin === allowedOrigin;\n    } else if (allowedOrigin instanceof RegExp) {\n      return allowedOrigin.test(origin);\n    } else {\n      return !!allowedOrigin;\n    }\n  }\n\n  function configureOrigin(options, req) {\n    var requestOrigin = req.headers.origin,\n      headers = [],\n      isAllowed;\n\n    if (!options.origin || options.origin === '*') {\n      // allow any origin\n      headers.push([{\n        key: 'Access-Control-Allow-Origin',\n        value: '*'\n      }]);\n    } else if (isString(options.origin)) {\n      // fixed origin\n      headers.push([{\n        key: 'Access-Control-Allow-Origin',\n        value: options.origin\n      }]);\n      headers.push([{\n        key: 'Vary',\n        value: 'Origin'\n      }]);\n    } else {\n      isAllowed = isOriginAllowed(requestOrigin, options.origin);\n      // reflect origin\n      headers.push([{\n        key: 'Access-Control-Allow-Origin',\n        value: isAllowed ? requestOrigin : false\n      }]);\n      headers.push([{\n        key: 'Vary',\n        value: 'Origin'\n      }]);\n    }\n\n    return headers;\n  }\n\n  function configureMethods(options) {\n    var methods = options.methods;\n    if (methods.join) {\n      methods = options.methods.join(','); // .methods is an array, so turn it into a string\n    }\n    return {\n      key: 'Access-Control-Allow-Methods',\n      value: methods\n    };\n  }\n\n  function configureCredentials(options) {\n    if (options.credentials === true) {\n      return {\n        key: 'Access-Control-Allow-Credentials',\n        value: 'true'\n      };\n    }\n    return null;\n  }\n\n  function configureAllowedHeaders(options, req) {\n    var allowedHeaders = options.allowedHeaders || options.headers;\n    var headers = [];\n\n    if (!allowedHeaders) {\n      allowedHeaders = req.headers['access-control-request-headers']; // .headers wasn't specified, so reflect the request headers\n      headers.push([{\n        key: 'Vary',\n        value: 'Access-Control-Request-Headers'\n      }]);\n    } else if (allowedHeaders.join) {\n      allowedHeaders = allowedHeaders.join(','); // .headers is an array, so turn it into a string\n    }\n    if (allowedHeaders && allowedHeaders.length) {\n      headers.push([{\n        key: 'Access-Control-Allow-Headers',\n        value: allowedHeaders\n      }]);\n    }\n\n    return headers;\n  }\n\n  function configureExposedHeaders(options) {\n    var headers = options.exposedHeaders;\n    if (!headers) {\n      return null;\n    } else if (headers.join) {\n      headers = headers.join(','); // .headers is an array, so turn it into a string\n    }\n    if (headers && headers.length) {\n      return {\n        key: 'Access-Control-Expose-Headers',\n        value: headers\n      };\n    }\n    return null;\n  }\n\n  function configureMaxAge(options) {\n    var maxAge = (typeof options.maxAge === 'number' || options.maxAge) && options.maxAge.toString()\n    if (maxAge && maxAge.length) {\n      return {\n        key: 'Access-Control-Max-Age',\n        value: maxAge\n      };\n    }\n    return null;\n  }\n\n  function applyHeaders(headers, res) {\n    for (var i = 0, n = headers.length; i < n; i++) {\n      var header = headers[i];\n      if (header) {\n        if (Array.isArray(header)) {\n          applyHeaders(header, res);\n        } else if (header.key === 'Vary' && header.value) {\n          vary(res, header.value);\n        } else if (header.value) {\n          res.setHeader(header.key, header.value);\n        }\n      }\n    }\n  }\n\n  function cors(options, req, res, next) {\n    var headers = [],\n      method = req.method && req.method.toUpperCase && req.method.toUpperCase();\n\n    if (method === 'OPTIONS') {\n      // preflight\n      headers.push(configureOrigin(options, req));\n      headers.push(configureCredentials(options, req));\n      headers.push(configureMethods(options, req));\n      headers.push(configureAllowedHeaders(options, req));\n      headers.push(configureMaxAge(options, req));\n      headers.push(configureExposedHeaders(options, req));\n      applyHeaders(headers, res);\n\n      if (options.preflightContinue) {\n        next();\n      } else {\n        // Safari (and potentially other browsers) need content-length 0,\n        //   for 204 or they just hang waiting for a body\n        res.statusCode = options.optionsSuccessStatus;\n        res.setHeader('Content-Length', '0');\n        res.end();\n      }\n    } else {\n      // actual response\n      headers.push(configureOrigin(options, req));\n      headers.push(configureCredentials(options, req));\n      headers.push(configureExposedHeaders(options, req));\n      applyHeaders(headers, res);\n      next();\n    }\n  }\n\n  function middlewareWrapper(o) {\n    // if options are static (either via defaults or custom options passed in), wrap in a function\n    var optionsCallback = null;\n    if (typeof o === 'function') {\n      optionsCallback = o;\n    } else {\n      optionsCallback = function (req, cb) {\n        cb(null, o);\n      };\n    }\n\n    return function corsMiddleware(req, res, next) {\n      optionsCallback(req, function (err, options) {\n        if (err) {\n          next(err);\n        } else {\n          var corsOptions = assign({}, defaults, options);\n          var originCallback = null;\n          if (corsOptions.origin && typeof corsOptions.origin === 'function') {\n            originCallback = corsOptions.origin;\n          } else if (corsOptions.origin) {\n            originCallback = function (origin, cb) {\n              cb(null, corsOptions.origin);\n            };\n          }\n\n          if (originCallback) {\n            originCallback(req.headers.origin, function (err2, origin) {\n              if (err2 || !origin) {\n                next(err2);\n              } else {\n                corsOptions.origin = origin;\n                cors(corsOptions, req, res, next);\n              }\n            });\n          } else {\n            next();\n          }\n        }\n      });\n    };\n  }\n\n  // can pass either an options hash, an options delegate, or nothing\n  module.exports = middlewareWrapper;\n\n}());\n","/*!\n * depd\n * Copyright(c) 2014-2018 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n/**\n * Module dependencies.\n */\n\nvar relative = require('path').relative\n\n/**\n * Module exports.\n */\n\nmodule.exports = depd\n\n/**\n * Get the path to base files on.\n */\n\nvar basePath = process.cwd()\n\n/**\n * Determine if namespace is contained in the string.\n */\n\nfunction containsNamespace (str, namespace) {\n  var vals = str.split(/[ ,]+/)\n  var ns = String(namespace).toLowerCase()\n\n  for (var i = 0; i < vals.length; i++) {\n    var val = vals[i]\n\n    // namespace contained\n    if (val && (val === '*' || val.toLowerCase() === ns)) {\n      return true\n    }\n  }\n\n  return false\n}\n\n/**\n * Convert a data descriptor to accessor descriptor.\n */\n\nfunction convertDataDescriptorToAccessor (obj, prop, message) {\n  var descriptor = Object.getOwnPropertyDescriptor(obj, prop)\n  var value = descriptor.value\n\n  descriptor.get = function getter () { return value }\n\n  if (descriptor.writable) {\n    descriptor.set = function setter (val) { return (value = val) }\n  }\n\n  delete descriptor.value\n  delete descriptor.writable\n\n  Object.defineProperty(obj, prop, descriptor)\n\n  return descriptor\n}\n\n/**\n * Create arguments string to keep arity.\n */\n\nfunction createArgumentsString (arity) {\n  var str = ''\n\n  for (var i = 0; i < arity; i++) {\n    str += ', arg' + i\n  }\n\n  return str.substr(2)\n}\n\n/**\n * Create stack string from stack.\n */\n\nfunction createStackString (stack) {\n  var str = this.name + ': ' + this.namespace\n\n  if (this.message) {\n    str += ' deprecated ' + this.message\n  }\n\n  for (var i = 0; i < stack.length; i++) {\n    str += '\\n    at ' + stack[i].toString()\n  }\n\n  return str\n}\n\n/**\n * Create deprecate for namespace in caller.\n */\n\nfunction depd (namespace) {\n  if (!namespace) {\n    throw new TypeError('argument namespace is required')\n  }\n\n  var stack = getStack()\n  var site = callSiteLocation(stack[1])\n  var file = site[0]\n\n  function deprecate (message) {\n    // call to self as log\n    log.call(deprecate, message)\n  }\n\n  deprecate._file = file\n  deprecate._ignored = isignored(namespace)\n  deprecate._namespace = namespace\n  deprecate._traced = istraced(namespace)\n  deprecate._warned = Object.create(null)\n\n  deprecate.function = wrapfunction\n  deprecate.property = wrapproperty\n\n  return deprecate\n}\n\n/**\n * Determine if event emitter has listeners of a given type.\n *\n * The way to do this check is done three different ways in Node.js >= 0.8\n * so this consolidates them into a minimal set using instance methods.\n *\n * @param {EventEmitter} emitter\n * @param {string} type\n * @returns {boolean}\n * @private\n */\n\nfunction eehaslisteners (emitter, type) {\n  var count = typeof emitter.listenerCount !== 'function'\n    ? emitter.listeners(type).length\n    : emitter.listenerCount(type)\n\n  return count > 0\n}\n\n/**\n * Determine if namespace is ignored.\n */\n\nfunction isignored (namespace) {\n  if (process.noDeprecation) {\n    // --no-deprecation support\n    return true\n  }\n\n  var str = process.env.NO_DEPRECATION || ''\n\n  // namespace ignored\n  return containsNamespace(str, namespace)\n}\n\n/**\n * Determine if namespace is traced.\n */\n\nfunction istraced (namespace) {\n  if (process.traceDeprecation) {\n    // --trace-deprecation support\n    return true\n  }\n\n  var str = process.env.TRACE_DEPRECATION || ''\n\n  // namespace traced\n  return containsNamespace(str, namespace)\n}\n\n/**\n * Display deprecation message.\n */\n\nfunction log (message, site) {\n  var haslisteners = eehaslisteners(process, 'deprecation')\n\n  // abort early if no destination\n  if (!haslisteners && this._ignored) {\n    return\n  }\n\n  var caller\n  var callFile\n  var callSite\n  var depSite\n  var i = 0\n  var seen = false\n  var stack = getStack()\n  var file = this._file\n\n  if (site) {\n    // provided site\n    depSite = site\n    callSite = callSiteLocation(stack[1])\n    callSite.name = depSite.name\n    file = callSite[0]\n  } else {\n    // get call site\n    i = 2\n    depSite = callSiteLocation(stack[i])\n    callSite = depSite\n  }\n\n  // get caller of deprecated thing in relation to file\n  for (; i < stack.length; i++) {\n    caller = callSiteLocation(stack[i])\n    callFile = caller[0]\n\n    if (callFile === file) {\n      seen = true\n    } else if (callFile === this._file) {\n      file = this._file\n    } else if (seen) {\n      break\n    }\n  }\n\n  var key = caller\n    ? depSite.join(':') + '__' + caller.join(':')\n    : undefined\n\n  if (key !== undefined && key in this._warned) {\n    // already warned\n    return\n  }\n\n  this._warned[key] = true\n\n  // generate automatic message from call site\n  var msg = message\n  if (!msg) {\n    msg = callSite === depSite || !callSite.name\n      ? defaultMessage(depSite)\n      : defaultMessage(callSite)\n  }\n\n  // emit deprecation if listeners exist\n  if (haslisteners) {\n    var err = DeprecationError(this._namespace, msg, stack.slice(i))\n    process.emit('deprecation', err)\n    return\n  }\n\n  // format and write message\n  var format = process.stderr.isTTY\n    ? formatColor\n    : formatPlain\n  var output = format.call(this, msg, caller, stack.slice(i))\n  process.stderr.write(output + '\\n', 'utf8')\n}\n\n/**\n * Get call site location as array.\n */\n\nfunction callSiteLocation (callSite) {\n  var file = callSite.getFileName() || '<anonymous>'\n  var line = callSite.getLineNumber()\n  var colm = callSite.getColumnNumber()\n\n  if (callSite.isEval()) {\n    file = callSite.getEvalOrigin() + ', ' + file\n  }\n\n  var site = [file, line, colm]\n\n  site.callSite = callSite\n  site.name = callSite.getFunctionName()\n\n  return site\n}\n\n/**\n * Generate a default message from the site.\n */\n\nfunction defaultMessage (site) {\n  var callSite = site.callSite\n  var funcName = site.name\n\n  // make useful anonymous name\n  if (!funcName) {\n    funcName = '<anonymous@' + formatLocation(site) + '>'\n  }\n\n  var context = callSite.getThis()\n  var typeName = context && callSite.getTypeName()\n\n  // ignore useless type name\n  if (typeName === 'Object') {\n    typeName = undefined\n  }\n\n  // make useful type name\n  if (typeName === 'Function') {\n    typeName = context.name || typeName\n  }\n\n  return typeName && callSite.getMethodName()\n    ? typeName + '.' + funcName\n    : funcName\n}\n\n/**\n * Format deprecation message without color.\n */\n\nfunction formatPlain (msg, caller, stack) {\n  var timestamp = new Date().toUTCString()\n\n  var formatted = timestamp +\n    ' ' + this._namespace +\n    ' deprecated ' + msg\n\n  // add stack trace\n  if (this._traced) {\n    for (var i = 0; i < stack.length; i++) {\n      formatted += '\\n    at ' + stack[i].toString()\n    }\n\n    return formatted\n  }\n\n  if (caller) {\n    formatted += ' at ' + formatLocation(caller)\n  }\n\n  return formatted\n}\n\n/**\n * Format deprecation message with color.\n */\n\nfunction formatColor (msg, caller, stack) {\n  var formatted = '\\x1b[36;1m' + this._namespace + '\\x1b[22;39m' + // bold cyan\n    ' \\x1b[33;1mdeprecated\\x1b[22;39m' + // bold yellow\n    ' \\x1b[0m' + msg + '\\x1b[39m' // reset\n\n  // add stack trace\n  if (this._traced) {\n    for (var i = 0; i < stack.length; i++) {\n      formatted += '\\n    \\x1b[36mat ' + stack[i].toString() + '\\x1b[39m' // cyan\n    }\n\n    return formatted\n  }\n\n  if (caller) {\n    formatted += ' \\x1b[36m' + formatLocation(caller) + '\\x1b[39m' // cyan\n  }\n\n  return formatted\n}\n\n/**\n * Format call site location.\n */\n\nfunction formatLocation (callSite) {\n  return relative(basePath, callSite[0]) +\n    ':' + callSite[1] +\n    ':' + callSite[2]\n}\n\n/**\n * Get the stack as array of call sites.\n */\n\nfunction getStack () {\n  var limit = Error.stackTraceLimit\n  var obj = {}\n  var prep = Error.prepareStackTrace\n\n  Error.prepareStackTrace = prepareObjectStackTrace\n  Error.stackTraceLimit = Math.max(10, limit)\n\n  // capture the stack\n  Error.captureStackTrace(obj)\n\n  // slice this function off the top\n  var stack = obj.stack.slice(1)\n\n  Error.prepareStackTrace = prep\n  Error.stackTraceLimit = limit\n\n  return stack\n}\n\n/**\n * Capture call site stack from v8.\n */\n\nfunction prepareObjectStackTrace (obj, stack) {\n  return stack\n}\n\n/**\n * Return a wrapped function in a deprecation message.\n */\n\nfunction wrapfunction (fn, message) {\n  if (typeof fn !== 'function') {\n    throw new TypeError('argument fn must be a function')\n  }\n\n  var args = createArgumentsString(fn.length)\n  var stack = getStack()\n  var site = callSiteLocation(stack[1])\n\n  site.name = fn.name\n\n  // eslint-disable-next-line no-new-func\n  var deprecatedfn = new Function('fn', 'log', 'deprecate', 'message', 'site',\n    '\"use strict\"\\n' +\n    'return function (' + args + ') {' +\n    'log.call(deprecate, message, site)\\n' +\n    'return fn.apply(this, arguments)\\n' +\n    '}')(fn, log, this, message, site)\n\n  return deprecatedfn\n}\n\n/**\n * Wrap property in a deprecation message.\n */\n\nfunction wrapproperty (obj, prop, message) {\n  if (!obj || (typeof obj !== 'object' && typeof obj !== 'function')) {\n    throw new TypeError('argument obj must be object')\n  }\n\n  var descriptor = Object.getOwnPropertyDescriptor(obj, prop)\n\n  if (!descriptor) {\n    throw new TypeError('must call property on owner object')\n  }\n\n  if (!descriptor.configurable) {\n    throw new TypeError('property must be configurable')\n  }\n\n  var deprecate = this\n  var stack = getStack()\n  var site = callSiteLocation(stack[1])\n\n  // set site name\n  site.name = prop\n\n  // convert data descriptor\n  if ('value' in descriptor) {\n    descriptor = convertDataDescriptorToAccessor(obj, prop, message)\n  }\n\n  var get = descriptor.get\n  var set = descriptor.set\n\n  // wrap getter\n  if (typeof get === 'function') {\n    descriptor.get = function getter () {\n      log.call(deprecate, message, site)\n      return get.apply(this, arguments)\n    }\n  }\n\n  // wrap setter\n  if (typeof set === 'function') {\n    descriptor.set = function setter () {\n      log.call(deprecate, message, site)\n      return set.apply(this, arguments)\n    }\n  }\n\n  Object.defineProperty(obj, prop, descriptor)\n}\n\n/**\n * Create DeprecationError for deprecation\n */\n\nfunction DeprecationError (namespace, message, stack) {\n  var error = new Error()\n  var stackString\n\n  Object.defineProperty(error, 'constructor', {\n    value: DeprecationError\n  })\n\n  Object.defineProperty(error, 'message', {\n    configurable: true,\n    enumerable: false,\n    value: message,\n    writable: true\n  })\n\n  Object.defineProperty(error, 'name', {\n    enumerable: false,\n    configurable: true,\n    value: 'DeprecationError',\n    writable: true\n  })\n\n  Object.defineProperty(error, 'namespace', {\n    configurable: true,\n    enumerable: false,\n    value: namespace,\n    writable: true\n  })\n\n  Object.defineProperty(error, 'stack', {\n    configurable: true,\n    enumerable: false,\n    get: function () {\n      if (stackString !== undefined) {\n        return stackString\n      }\n\n      // prepare stack trace\n      return (stackString = createStackString.call(this, stack))\n    },\n    set: function setter (val) {\n      stackString = val\n    }\n  })\n\n  return error\n}\n","/*!\n * destroy\n * Copyright(c) 2014 Jonathan Ong\n * Copyright(c) 2015-2022 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * Module dependencies.\n * @private\n */\n\nvar EventEmitter = require('events').EventEmitter\nvar ReadStream = require('fs').ReadStream\nvar Stream = require('stream')\nvar Zlib = require('zlib')\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = destroy\n\n/**\n * Destroy the given stream, and optionally suppress any future `error` events.\n *\n * @param {object} stream\n * @param {boolean} suppress\n * @public\n */\n\nfunction destroy (stream, suppress) {\n  if (isFsReadStream(stream)) {\n    destroyReadStream(stream)\n  } else if (isZlibStream(stream)) {\n    destroyZlibStream(stream)\n  } else if (hasDestroy(stream)) {\n    stream.destroy()\n  }\n\n  if (isEventEmitter(stream) && suppress) {\n    stream.removeAllListeners('error')\n    stream.addListener('error', noop)\n  }\n\n  return stream\n}\n\n/**\n * Destroy a ReadStream.\n *\n * @param {object} stream\n * @private\n */\n\nfunction destroyReadStream (stream) {\n  stream.destroy()\n\n  if (typeof stream.close === 'function') {\n    // node.js core bug work-around\n    stream.on('open', onOpenClose)\n  }\n}\n\n/**\n * Close a Zlib stream.\n *\n * Zlib streams below Node.js 4.5.5 have a buggy implementation\n * of .close() when zlib encountered an error.\n *\n * @param {object} stream\n * @private\n */\n\nfunction closeZlibStream (stream) {\n  if (stream._hadError === true) {\n    var prop = stream._binding === null\n      ? '_binding'\n      : '_handle'\n\n    stream[prop] = {\n      close: function () { this[prop] = null }\n    }\n  }\n\n  stream.close()\n}\n\n/**\n * Destroy a Zlib stream.\n *\n * Zlib streams don't have a destroy function in Node.js 6. On top of that\n * simply calling destroy on a zlib stream in Node.js 8+ will result in a\n * memory leak. So until that is fixed, we need to call both close AND destroy.\n *\n * PR to fix memory leak: https://github.com/nodejs/node/pull/23734\n *\n * In Node.js 6+8, it's important that destroy is called before close as the\n * stream would otherwise emit the error 'zlib binding closed'.\n *\n * @param {object} stream\n * @private\n */\n\nfunction destroyZlibStream (stream) {\n  if (typeof stream.destroy === 'function') {\n    // node.js core bug work-around\n    // istanbul ignore if: node.js 0.8\n    if (stream._binding) {\n      // node.js < 0.10.0\n      stream.destroy()\n      if (stream._processing) {\n        stream._needDrain = true\n        stream.once('drain', onDrainClearBinding)\n      } else {\n        stream._binding.clear()\n      }\n    } else if (stream._destroy && stream._destroy !== Stream.Transform.prototype._destroy) {\n      // node.js >= 12, ^11.1.0, ^10.15.1\n      stream.destroy()\n    } else if (stream._destroy && typeof stream.close === 'function') {\n      // node.js 7, 8\n      stream.destroyed = true\n      stream.close()\n    } else {\n      // fallback\n      // istanbul ignore next\n      stream.destroy()\n    }\n  } else if (typeof stream.close === 'function') {\n    // node.js < 8 fallback\n    closeZlibStream(stream)\n  }\n}\n\n/**\n * Determine if stream has destroy.\n * @private\n */\n\nfunction hasDestroy (stream) {\n  return stream instanceof Stream &&\n    typeof stream.destroy === 'function'\n}\n\n/**\n * Determine if val is EventEmitter.\n * @private\n */\n\nfunction isEventEmitter (val) {\n  return val instanceof EventEmitter\n}\n\n/**\n * Determine if stream is fs.ReadStream stream.\n * @private\n */\n\nfunction isFsReadStream (stream) {\n  return stream instanceof ReadStream\n}\n\n/**\n * Determine if stream is Zlib stream.\n * @private\n */\n\nfunction isZlibStream (stream) {\n  return stream instanceof Zlib.Gzip ||\n    stream instanceof Zlib.Gunzip ||\n    stream instanceof Zlib.Deflate ||\n    stream instanceof Zlib.DeflateRaw ||\n    stream instanceof Zlib.Inflate ||\n    stream instanceof Zlib.InflateRaw ||\n    stream instanceof Zlib.Unzip\n}\n\n/**\n * No-op function.\n * @private\n */\n\nfunction noop () {}\n\n/**\n * On drain handler to clear binding.\n * @private\n */\n\n// istanbul ignore next: node.js 0.8\nfunction onDrainClearBinding () {\n  this._binding.clear()\n}\n\n/**\n * On open handler to close stream.\n * @private\n */\n\nfunction onOpenClose () {\n  if (typeof this.fd === 'number') {\n    // actually close down the fd\n    this.close()\n  }\n}\n","const fs = require('fs')\nconst path = require('path')\nconst os = require('os')\n\nconst LINE = /(?:^|^)\\s*(?:export\\s+)?([\\w.-]+)(?:\\s*=\\s*?|:\\s+?)(\\s*'(?:\\\\'|[^'])*'|\\s*\"(?:\\\\\"|[^\"])*\"|\\s*`(?:\\\\`|[^`])*`|[^#\\r\\n]+)?\\s*(?:#.*)?(?:$|$)/mg\n\n// Parser src into an Object\nfunction parse (src) {\n  const obj = {}\n\n  // Convert buffer to string\n  let lines = src.toString()\n\n  // Convert line breaks to same format\n  lines = lines.replace(/\\r\\n?/mg, '\\n')\n\n  let match\n  while ((match = LINE.exec(lines)) != null) {\n    const key = match[1]\n\n    // Default undefined or null to empty string\n    let value = (match[2] || '')\n\n    // Remove whitespace\n    value = value.trim()\n\n    // Check if double quoted\n    const maybeQuote = value[0]\n\n    // Remove surrounding quotes\n    value = value.replace(/^(['\"`])([\\s\\S]*)\\1$/mg, '$2')\n\n    // Expand newlines if double quoted\n    if (maybeQuote === '\"') {\n      value = value.replace(/\\\\n/g, '\\n')\n      value = value.replace(/\\\\r/g, '\\r')\n    }\n\n    // Add to object\n    obj[key] = value\n  }\n\n  return obj\n}\n\nfunction _log (message) {\n  console.log(`[dotenv][DEBUG] ${message}`)\n}\n\nfunction _resolveHome (envPath) {\n  return envPath[0] === '~' ? path.join(os.homedir(), envPath.slice(1)) : envPath\n}\n\n// Populates process.env from .env file\nfunction config (options) {\n  let dotenvPath = path.resolve(process.cwd(), '.env')\n  let encoding = 'utf8'\n  const debug = Boolean(options && options.debug)\n  const override = Boolean(options && options.override)\n\n  if (options) {\n    if (options.path != null) {\n      dotenvPath = _resolveHome(options.path)\n    }\n    if (options.encoding != null) {\n      encoding = options.encoding\n    }\n  }\n\n  try {\n    // Specifying an encoding returns a string instead of a buffer\n    const parsed = DotenvModule.parse(fs.readFileSync(dotenvPath, { encoding }))\n\n    Object.keys(parsed).forEach(function (key) {\n      if (!Object.prototype.hasOwnProperty.call(process.env, key)) {\n        process.env[key] = parsed[key]\n      } else {\n        if (override === true) {\n          process.env[key] = parsed[key]\n        }\n\n        if (debug) {\n          if (override === true) {\n            _log(`\"${key}\" is already defined in \\`process.env\\` and WAS overwritten`)\n          } else {\n            _log(`\"${key}\" is already defined in \\`process.env\\` and was NOT overwritten`)\n          }\n        }\n      }\n    })\n\n    return { parsed }\n  } catch (e) {\n    if (debug) {\n      _log(`Failed to load ${dotenvPath} ${e.message}`)\n    }\n\n    return { error: e }\n  }\n}\n\nconst DotenvModule = {\n  config,\n  parse\n}\n\nmodule.exports.config = DotenvModule.config\nmodule.exports.parse = DotenvModule.parse\nmodule.exports = DotenvModule\n","/*!\n * ee-first\n * Copyright(c) 2014 Jonathan Ong\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = first\n\n/**\n * Get the first event in a set of event emitters and event pairs.\n *\n * @param {array} stuff\n * @param {function} done\n * @public\n */\n\nfunction first(stuff, done) {\n  if (!Array.isArray(stuff))\n    throw new TypeError('arg must be an array of [ee, events...] arrays')\n\n  var cleanups = []\n\n  for (var i = 0; i < stuff.length; i++) {\n    var arr = stuff[i]\n\n    if (!Array.isArray(arr) || arr.length < 2)\n      throw new TypeError('each array member must be [ee, events...]')\n\n    var ee = arr[0]\n\n    for (var j = 1; j < arr.length; j++) {\n      var event = arr[j]\n      var fn = listener(event, callback)\n\n      // listen to the event\n      ee.on(event, fn)\n      // push this listener to the list of cleanups\n      cleanups.push({\n        ee: ee,\n        event: event,\n        fn: fn,\n      })\n    }\n  }\n\n  function callback() {\n    cleanup()\n    done.apply(null, arguments)\n  }\n\n  function cleanup() {\n    var x\n    for (var i = 0; i < cleanups.length; i++) {\n      x = cleanups[i]\n      x.ee.removeListener(x.event, x.fn)\n    }\n  }\n\n  function thunk(fn) {\n    done = fn\n  }\n\n  thunk.cancel = cleanup\n\n  return thunk\n}\n\n/**\n * Create the event listener.\n * @private\n */\n\nfunction listener(event, done) {\n  return function onevent(arg1) {\n    var args = new Array(arguments.length)\n    var ee = this\n    var err = event === 'error'\n      ? arg1\n      : null\n\n    // copy args to prevent arguments escaping scope\n    for (var i = 0; i < args.length; i++) {\n      args[i] = arguments[i]\n    }\n\n    done(err, ee, event, args)\n  }\n}\n","/*!\n * encodeurl\n * Copyright(c) 2016 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = encodeUrl\n\n/**\n * RegExp to match non-URL code points, *after* encoding (i.e. not including \"%\")\n * and including invalid escape sequences.\n * @private\n */\n\nvar ENCODE_CHARS_REGEXP = /(?:[^\\x21\\x25\\x26-\\x3B\\x3D\\x3F-\\x5B\\x5D\\x5F\\x61-\\x7A\\x7E]|%(?:[^0-9A-Fa-f]|[0-9A-Fa-f][^0-9A-Fa-f]|$))+/g\n\n/**\n * RegExp to match unmatched surrogate pair.\n * @private\n */\n\nvar UNMATCHED_SURROGATE_PAIR_REGEXP = /(^|[^\\uD800-\\uDBFF])[\\uDC00-\\uDFFF]|[\\uD800-\\uDBFF]([^\\uDC00-\\uDFFF]|$)/g\n\n/**\n * String to replace unmatched surrogate pair with.\n * @private\n */\n\nvar UNMATCHED_SURROGATE_PAIR_REPLACE = '$1\\uFFFD$2'\n\n/**\n * Encode a URL to a percent-encoded form, excluding already-encoded sequences.\n *\n * This function will take an already-encoded URL and encode all the non-URL\n * code points. This function will not encode the \"%\" character unless it is\n * not part of a valid sequence (`%20` will be left as-is, but `%foo` will\n * be encoded as `%25foo`).\n *\n * This encode is meant to be \"safe\" and does not throw errors. It will try as\n * hard as it can to properly encode the given URL, including replacing any raw,\n * unpaired surrogate pairs with the Unicode replacement character prior to\n * encoding.\n *\n * @param {string} url\n * @return {string}\n * @public\n */\n\nfunction encodeUrl (url) {\n  return String(url)\n    .replace(UNMATCHED_SURROGATE_PAIR_REGEXP, UNMATCHED_SURROGATE_PAIR_REPLACE)\n    .replace(ENCODE_CHARS_REGEXP, encodeURI)\n}\n","/*!\n * escape-html\n * Copyright(c) 2012-2013 TJ Holowaychuk\n * Copyright(c) 2015 Andreas Lubbe\n * Copyright(c) 2015 Tiancheng \"Timothy\" Gu\n * MIT Licensed\n */\n\n'use strict';\n\n/**\n * Module variables.\n * @private\n */\n\nvar matchHtmlRegExp = /[\"'&<>]/;\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = escapeHtml;\n\n/**\n * Escape special characters in the given string of html.\n *\n * @param  {string} string The string to escape for inserting into HTML\n * @return {string}\n * @public\n */\n\nfunction escapeHtml(string) {\n  var str = '' + string;\n  var match = matchHtmlRegExp.exec(str);\n\n  if (!match) {\n    return str;\n  }\n\n  var escape;\n  var html = '';\n  var index = 0;\n  var lastIndex = 0;\n\n  for (index = match.index; index < str.length; index++) {\n    switch (str.charCodeAt(index)) {\n      case 34: // \"\n        escape = '&quot;';\n        break;\n      case 38: // &\n        escape = '&amp;';\n        break;\n      case 39: // '\n        escape = '&#39;';\n        break;\n      case 60: // <\n        escape = '&lt;';\n        break;\n      case 62: // >\n        escape = '&gt;';\n        break;\n      default:\n        continue;\n    }\n\n    if (lastIndex !== index) {\n      html += str.substring(lastIndex, index);\n    }\n\n    lastIndex = index + 1;\n    html += escape;\n  }\n\n  return lastIndex !== index\n    ? html + str.substring(lastIndex, index)\n    : html;\n}\n","/*!\n * etag\n * Copyright(c) 2014-2016 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = etag\n\n/**\n * Module dependencies.\n * @private\n */\n\nvar crypto = require('crypto')\nvar Stats = require('fs').Stats\n\n/**\n * Module variables.\n * @private\n */\n\nvar toString = Object.prototype.toString\n\n/**\n * Generate an entity tag.\n *\n * @param {Buffer|string} entity\n * @return {string}\n * @private\n */\n\nfunction entitytag (entity) {\n  if (entity.length === 0) {\n    // fast-path empty\n    return '\"0-2jmj7l5rSw0yVb/vlWAYkK/YBwk\"'\n  }\n\n  // compute hash of entity\n  var hash = crypto\n    .createHash('sha1')\n    .update(entity, 'utf8')\n    .digest('base64')\n    .substring(0, 27)\n\n  // compute length of entity\n  var len = typeof entity === 'string'\n    ? Buffer.byteLength(entity, 'utf8')\n    : entity.length\n\n  return '\"' + len.toString(16) + '-' + hash + '\"'\n}\n\n/**\n * Create a simple ETag.\n *\n * @param {string|Buffer|Stats} entity\n * @param {object} [options]\n * @param {boolean} [options.weak]\n * @return {String}\n * @public\n */\n\nfunction etag (entity, options) {\n  if (entity == null) {\n    throw new TypeError('argument entity is required')\n  }\n\n  // support fs.Stats object\n  var isStats = isstats(entity)\n  var weak = options && typeof options.weak === 'boolean'\n    ? options.weak\n    : isStats\n\n  // validate argument\n  if (!isStats && typeof entity !== 'string' && !Buffer.isBuffer(entity)) {\n    throw new TypeError('argument entity must be string, Buffer, or fs.Stats')\n  }\n\n  // generate entity tag\n  var tag = isStats\n    ? stattag(entity)\n    : entitytag(entity)\n\n  return weak\n    ? 'W/' + tag\n    : tag\n}\n\n/**\n * Determine if object is a Stats object.\n *\n * @param {object} obj\n * @return {boolean}\n * @api private\n */\n\nfunction isstats (obj) {\n  // genuine fs.Stats\n  if (typeof Stats === 'function' && obj instanceof Stats) {\n    return true\n  }\n\n  // quack quack\n  return obj && typeof obj === 'object' &&\n    'ctime' in obj && toString.call(obj.ctime) === '[object Date]' &&\n    'mtime' in obj && toString.call(obj.mtime) === '[object Date]' &&\n    'ino' in obj && typeof obj.ino === 'number' &&\n    'size' in obj && typeof obj.size === 'number'\n}\n\n/**\n * Generate a tag for a stat.\n *\n * @param {object} stat\n * @return {string}\n * @private\n */\n\nfunction stattag (stat) {\n  var mtime = stat.mtime.getTime().toString(16)\n  var size = stat.size.toString(16)\n\n  return '\"' + size + '-' + mtime + '\"'\n}\n","/*!\n * express\n * Copyright(c) 2009-2013 TJ Holowaychuk\n * Copyright(c) 2013 Roman Shtylman\n * Copyright(c) 2014-2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict';\n\nmodule.exports = require('./lib/express');\n","/*!\n * express\n * Copyright(c) 2009-2013 TJ Holowaychuk\n * Copyright(c) 2013 Roman Shtylman\n * Copyright(c) 2014-2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict';\n\n/**\n * Module dependencies.\n * @private\n */\n\nvar finalhandler = require('finalhandler');\nvar Router = require('./router');\nvar methods = require('methods');\nvar middleware = require('./middleware/init');\nvar query = require('./middleware/query');\nvar debug = require('debug')('express:application');\nvar View = require('./view');\nvar http = require('http');\nvar compileETag = require('./utils').compileETag;\nvar compileQueryParser = require('./utils').compileQueryParser;\nvar compileTrust = require('./utils').compileTrust;\nvar deprecate = require('depd')('express');\nvar flatten = require('array-flatten');\nvar merge = require('utils-merge');\nvar resolve = require('path').resolve;\nvar setPrototypeOf = require('setprototypeof')\n\n/**\n * Module variables.\n * @private\n */\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty\nvar slice = Array.prototype.slice;\n\n/**\n * Application prototype.\n */\n\nvar app = exports = module.exports = {};\n\n/**\n * Variable for trust proxy inheritance back-compat\n * @private\n */\n\nvar trustProxyDefaultSymbol = '@@symbol:trust_proxy_default';\n\n/**\n * Initialize the server.\n *\n *   - setup default configuration\n *   - setup default middleware\n *   - setup route reflection methods\n *\n * @private\n */\n\napp.init = function init() {\n  this.cache = {};\n  this.engines = {};\n  this.settings = {};\n\n  this.defaultConfiguration();\n};\n\n/**\n * Initialize application configuration.\n * @private\n */\n\napp.defaultConfiguration = function defaultConfiguration() {\n  var env = process.env.NODE_ENV || 'development';\n\n  // default settings\n  this.enable('x-powered-by');\n  this.set('etag', 'weak');\n  this.set('env', env);\n  this.set('query parser', 'extended');\n  this.set('subdomain offset', 2);\n  this.set('trust proxy', false);\n\n  // trust proxy inherit back-compat\n  Object.defineProperty(this.settings, trustProxyDefaultSymbol, {\n    configurable: true,\n    value: true\n  });\n\n  debug('booting in %s mode', env);\n\n  this.on('mount', function onmount(parent) {\n    // inherit trust proxy\n    if (this.settings[trustProxyDefaultSymbol] === true\n      && typeof parent.settings['trust proxy fn'] === 'function') {\n      delete this.settings['trust proxy'];\n      delete this.settings['trust proxy fn'];\n    }\n\n    // inherit protos\n    setPrototypeOf(this.request, parent.request)\n    setPrototypeOf(this.response, parent.response)\n    setPrototypeOf(this.engines, parent.engines)\n    setPrototypeOf(this.settings, parent.settings)\n  });\n\n  // setup locals\n  this.locals = Object.create(null);\n\n  // top-most app is mounted at /\n  this.mountpath = '/';\n\n  // default locals\n  this.locals.settings = this.settings;\n\n  // default configuration\n  this.set('view', View);\n  this.set('views', resolve('views'));\n  this.set('jsonp callback name', 'callback');\n\n  if (env === 'production') {\n    this.enable('view cache');\n  }\n\n  Object.defineProperty(this, 'router', {\n    get: function() {\n      throw new Error('\\'app.router\\' is deprecated!\\nPlease see the 3.x to 4.x migration guide for details on how to update your app.');\n    }\n  });\n};\n\n/**\n * lazily adds the base router if it has not yet been added.\n *\n * We cannot add the base router in the defaultConfiguration because\n * it reads app settings which might be set after that has run.\n *\n * @private\n */\napp.lazyrouter = function lazyrouter() {\n  if (!this._router) {\n    this._router = new Router({\n      caseSensitive: this.enabled('case sensitive routing'),\n      strict: this.enabled('strict routing')\n    });\n\n    this._router.use(query(this.get('query parser fn')));\n    this._router.use(middleware.init(this));\n  }\n};\n\n/**\n * Dispatch a req, res pair into the application. Starts pipeline processing.\n *\n * If no callback is provided, then default error handlers will respond\n * in the event of an error bubbling through the stack.\n *\n * @private\n */\n\napp.handle = function handle(req, res, callback) {\n  var router = this._router;\n\n  // final handler\n  var done = callback || finalhandler(req, res, {\n    env: this.get('env'),\n    onerror: logerror.bind(this)\n  });\n\n  // no routes\n  if (!router) {\n    debug('no routes defined on app');\n    done();\n    return;\n  }\n\n  router.handle(req, res, done);\n};\n\n/**\n * Proxy `Router#use()` to add middleware to the app router.\n * See Router#use() documentation for details.\n *\n * If the _fn_ parameter is an express app, then it will be\n * mounted at the _route_ specified.\n *\n * @public\n */\n\napp.use = function use(fn) {\n  var offset = 0;\n  var path = '/';\n\n  // default path to '/'\n  // disambiguate app.use([fn])\n  if (typeof fn !== 'function') {\n    var arg = fn;\n\n    while (Array.isArray(arg) && arg.length !== 0) {\n      arg = arg[0];\n    }\n\n    // first arg is the path\n    if (typeof arg !== 'function') {\n      offset = 1;\n      path = fn;\n    }\n  }\n\n  var fns = flatten(slice.call(arguments, offset));\n\n  if (fns.length === 0) {\n    throw new TypeError('app.use() requires a middleware function')\n  }\n\n  // setup router\n  this.lazyrouter();\n  var router = this._router;\n\n  fns.forEach(function (fn) {\n    // non-express app\n    if (!fn || !fn.handle || !fn.set) {\n      return router.use(path, fn);\n    }\n\n    debug('.use app under %s', path);\n    fn.mountpath = path;\n    fn.parent = this;\n\n    // restore .app property on req and res\n    router.use(path, function mounted_app(req, res, next) {\n      var orig = req.app;\n      fn.handle(req, res, function (err) {\n        setPrototypeOf(req, orig.request)\n        setPrototypeOf(res, orig.response)\n        next(err);\n      });\n    });\n\n    // mounted an app\n    fn.emit('mount', this);\n  }, this);\n\n  return this;\n};\n\n/**\n * Proxy to the app `Router#route()`\n * Returns a new `Route` instance for the _path_.\n *\n * Routes are isolated middleware stacks for specific paths.\n * See the Route api docs for details.\n *\n * @public\n */\n\napp.route = function route(path) {\n  this.lazyrouter();\n  return this._router.route(path);\n};\n\n/**\n * Register the given template engine callback `fn`\n * as `ext`.\n *\n * By default will `require()` the engine based on the\n * file extension. For example if you try to render\n * a \"foo.ejs\" file Express will invoke the following internally:\n *\n *     app.engine('ejs', require('ejs').__express);\n *\n * For engines that do not provide `.__express` out of the box,\n * or if you wish to \"map\" a different extension to the template engine\n * you may use this method. For example mapping the EJS template engine to\n * \".html\" files:\n *\n *     app.engine('html', require('ejs').renderFile);\n *\n * In this case EJS provides a `.renderFile()` method with\n * the same signature that Express expects: `(path, options, callback)`,\n * though note that it aliases this method as `ejs.__express` internally\n * so if you're using \".ejs\" extensions you don't need to do anything.\n *\n * Some template engines do not follow this convention, the\n * [Consolidate.js](https://github.com/tj/consolidate.js)\n * library was created to map all of node's popular template\n * engines to follow this convention, thus allowing them to\n * work seamlessly within Express.\n *\n * @param {String} ext\n * @param {Function} fn\n * @return {app} for chaining\n * @public\n */\n\napp.engine = function engine(ext, fn) {\n  if (typeof fn !== 'function') {\n    throw new Error('callback function required');\n  }\n\n  // get file extension\n  var extension = ext[0] !== '.'\n    ? '.' + ext\n    : ext;\n\n  // store engine\n  this.engines[extension] = fn;\n\n  return this;\n};\n\n/**\n * Proxy to `Router#param()` with one added api feature. The _name_ parameter\n * can be an array of names.\n *\n * See the Router#param() docs for more details.\n *\n * @param {String|Array} name\n * @param {Function} fn\n * @return {app} for chaining\n * @public\n */\n\napp.param = function param(name, fn) {\n  this.lazyrouter();\n\n  if (Array.isArray(name)) {\n    for (var i = 0; i < name.length; i++) {\n      this.param(name[i], fn);\n    }\n\n    return this;\n  }\n\n  this._router.param(name, fn);\n\n  return this;\n};\n\n/**\n * Assign `setting` to `val`, or return `setting`'s value.\n *\n *    app.set('foo', 'bar');\n *    app.set('foo');\n *    // => \"bar\"\n *\n * Mounted servers inherit their parent server's settings.\n *\n * @param {String} setting\n * @param {*} [val]\n * @return {Server} for chaining\n * @public\n */\n\napp.set = function set(setting, val) {\n  if (arguments.length === 1) {\n    // app.get(setting)\n    var settings = this.settings\n\n    while (settings && settings !== Object.prototype) {\n      if (hasOwnProperty.call(settings, setting)) {\n        return settings[setting]\n      }\n\n      settings = Object.getPrototypeOf(settings)\n    }\n\n    return undefined\n  }\n\n  debug('set \"%s\" to %o', setting, val);\n\n  // set value\n  this.settings[setting] = val;\n\n  // trigger matched settings\n  switch (setting) {\n    case 'etag':\n      this.set('etag fn', compileETag(val));\n      break;\n    case 'query parser':\n      this.set('query parser fn', compileQueryParser(val));\n      break;\n    case 'trust proxy':\n      this.set('trust proxy fn', compileTrust(val));\n\n      // trust proxy inherit back-compat\n      Object.defineProperty(this.settings, trustProxyDefaultSymbol, {\n        configurable: true,\n        value: false\n      });\n\n      break;\n  }\n\n  return this;\n};\n\n/**\n * Return the app's absolute pathname\n * based on the parent(s) that have\n * mounted it.\n *\n * For example if the application was\n * mounted as \"/admin\", which itself\n * was mounted as \"/blog\" then the\n * return value would be \"/blog/admin\".\n *\n * @return {String}\n * @private\n */\n\napp.path = function path() {\n  return this.parent\n    ? this.parent.path() + this.mountpath\n    : '';\n};\n\n/**\n * Check if `setting` is enabled (truthy).\n *\n *    app.enabled('foo')\n *    // => false\n *\n *    app.enable('foo')\n *    app.enabled('foo')\n *    // => true\n *\n * @param {String} setting\n * @return {Boolean}\n * @public\n */\n\napp.enabled = function enabled(setting) {\n  return Boolean(this.set(setting));\n};\n\n/**\n * Check if `setting` is disabled.\n *\n *    app.disabled('foo')\n *    // => true\n *\n *    app.enable('foo')\n *    app.disabled('foo')\n *    // => false\n *\n * @param {String} setting\n * @return {Boolean}\n * @public\n */\n\napp.disabled = function disabled(setting) {\n  return !this.set(setting);\n};\n\n/**\n * Enable `setting`.\n *\n * @param {String} setting\n * @return {app} for chaining\n * @public\n */\n\napp.enable = function enable(setting) {\n  return this.set(setting, true);\n};\n\n/**\n * Disable `setting`.\n *\n * @param {String} setting\n * @return {app} for chaining\n * @public\n */\n\napp.disable = function disable(setting) {\n  return this.set(setting, false);\n};\n\n/**\n * Delegate `.VERB(...)` calls to `router.VERB(...)`.\n */\n\nmethods.forEach(function(method){\n  app[method] = function(path){\n    if (method === 'get' && arguments.length === 1) {\n      // app.get(setting)\n      return this.set(path);\n    }\n\n    this.lazyrouter();\n\n    var route = this._router.route(path);\n    route[method].apply(route, slice.call(arguments, 1));\n    return this;\n  };\n});\n\n/**\n * Special-cased \"all\" method, applying the given route `path`,\n * middleware, and callback to _every_ HTTP method.\n *\n * @param {String} path\n * @param {Function} ...\n * @return {app} for chaining\n * @public\n */\n\napp.all = function all(path) {\n  this.lazyrouter();\n\n  var route = this._router.route(path);\n  var args = slice.call(arguments, 1);\n\n  for (var i = 0; i < methods.length; i++) {\n    route[methods[i]].apply(route, args);\n  }\n\n  return this;\n};\n\n// del -> delete alias\n\napp.del = deprecate.function(app.delete, 'app.del: Use app.delete instead');\n\n/**\n * Render the given view `name` name with `options`\n * and a callback accepting an error and the\n * rendered template string.\n *\n * Example:\n *\n *    app.render('email', { name: 'Tobi' }, function(err, html){\n *      // ...\n *    })\n *\n * @param {String} name\n * @param {Object|Function} options or fn\n * @param {Function} callback\n * @public\n */\n\napp.render = function render(name, options, callback) {\n  var cache = this.cache;\n  var done = callback;\n  var engines = this.engines;\n  var opts = options;\n  var renderOptions = {};\n  var view;\n\n  // support callback function as second arg\n  if (typeof options === 'function') {\n    done = options;\n    opts = {};\n  }\n\n  // merge app.locals\n  merge(renderOptions, this.locals);\n\n  // merge options._locals\n  if (opts._locals) {\n    merge(renderOptions, opts._locals);\n  }\n\n  // merge options\n  merge(renderOptions, opts);\n\n  // set .cache unless explicitly provided\n  if (renderOptions.cache == null) {\n    renderOptions.cache = this.enabled('view cache');\n  }\n\n  // primed cache\n  if (renderOptions.cache) {\n    view = cache[name];\n  }\n\n  // view\n  if (!view) {\n    var View = this.get('view');\n\n    view = new View(name, {\n      defaultEngine: this.get('view engine'),\n      root: this.get('views'),\n      engines: engines\n    });\n\n    if (!view.path) {\n      var dirs = Array.isArray(view.root) && view.root.length > 1\n        ? 'directories \"' + view.root.slice(0, -1).join('\", \"') + '\" or \"' + view.root[view.root.length - 1] + '\"'\n        : 'directory \"' + view.root + '\"'\n      var err = new Error('Failed to lookup view \"' + name + '\" in views ' + dirs);\n      err.view = view;\n      return done(err);\n    }\n\n    // prime the cache\n    if (renderOptions.cache) {\n      cache[name] = view;\n    }\n  }\n\n  // render\n  tryRender(view, renderOptions, done);\n};\n\n/**\n * Listen for connections.\n *\n * A node `http.Server` is returned, with this\n * application (which is a `Function`) as its\n * callback. If you wish to create both an HTTP\n * and HTTPS server you may do so with the \"http\"\n * and \"https\" modules as shown here:\n *\n *    var http = require('http')\n *      , https = require('https')\n *      , express = require('express')\n *      , app = express();\n *\n *    http.createServer(app).listen(80);\n *    https.createServer({ ... }, app).listen(443);\n *\n * @return {http.Server}\n * @public\n */\n\napp.listen = function listen() {\n  var server = http.createServer(this);\n  return server.listen.apply(server, arguments);\n};\n\n/**\n * Log error using console.error.\n *\n * @param {Error} err\n * @private\n */\n\nfunction logerror(err) {\n  /* istanbul ignore next */\n  if (this.get('env') !== 'test') console.error(err.stack || err.toString());\n}\n\n/**\n * Try rendering a view.\n * @private\n */\n\nfunction tryRender(view, options, callback) {\n  try {\n    view.render(options, callback);\n  } catch (err) {\n    callback(err);\n  }\n}\n","/*!\n * express\n * Copyright(c) 2009-2013 TJ Holowaychuk\n * Copyright(c) 2013 Roman Shtylman\n * Copyright(c) 2014-2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict';\n\n/**\n * Module dependencies.\n */\n\nvar bodyParser = require('body-parser')\nvar EventEmitter = require('events').EventEmitter;\nvar mixin = require('merge-descriptors');\nvar proto = require('./application');\nvar Route = require('./router/route');\nvar Router = require('./router');\nvar req = require('./request');\nvar res = require('./response');\n\n/**\n * Expose `createApplication()`.\n */\n\nexports = module.exports = createApplication;\n\n/**\n * Create an express application.\n *\n * @return {Function}\n * @api public\n */\n\nfunction createApplication() {\n  var app = function(req, res, next) {\n    app.handle(req, res, next);\n  };\n\n  mixin(app, EventEmitter.prototype, false);\n  mixin(app, proto, false);\n\n  // expose the prototype that will get set on requests\n  app.request = Object.create(req, {\n    app: { configurable: true, enumerable: true, writable: true, value: app }\n  })\n\n  // expose the prototype that will get set on responses\n  app.response = Object.create(res, {\n    app: { configurable: true, enumerable: true, writable: true, value: app }\n  })\n\n  app.init();\n  return app;\n}\n\n/**\n * Expose the prototypes.\n */\n\nexports.application = proto;\nexports.request = req;\nexports.response = res;\n\n/**\n * Expose constructors.\n */\n\nexports.Route = Route;\nexports.Router = Router;\n\n/**\n * Expose middleware\n */\n\nexports.json = bodyParser.json\nexports.query = require('./middleware/query');\nexports.raw = bodyParser.raw\nexports.static = require('serve-static');\nexports.text = bodyParser.text\nexports.urlencoded = bodyParser.urlencoded\n\n/**\n * Replace removed middleware with an appropriate error message.\n */\n\nvar removedMiddlewares = [\n  'bodyParser',\n  'compress',\n  'cookieSession',\n  'session',\n  'logger',\n  'cookieParser',\n  'favicon',\n  'responseTime',\n  'errorHandler',\n  'timeout',\n  'methodOverride',\n  'vhost',\n  'csrf',\n  'directory',\n  'limit',\n  'multipart',\n  'staticCache'\n]\n\nremovedMiddlewares.forEach(function (name) {\n  Object.defineProperty(exports, name, {\n    get: function () {\n      throw new Error('Most middleware (like ' + name + ') is no longer bundled with Express and must be installed separately. Please see https://github.com/senchalabs/connect#middleware.');\n    },\n    configurable: true\n  });\n});\n","/*!\n * express\n * Copyright(c) 2009-2013 TJ Holowaychuk\n * Copyright(c) 2013 Roman Shtylman\n * Copyright(c) 2014-2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict';\n\n/**\n * Module dependencies.\n * @private\n */\n\nvar setPrototypeOf = require('setprototypeof')\n\n/**\n * Initialization middleware, exposing the\n * request and response to each other, as well\n * as defaulting the X-Powered-By header field.\n *\n * @param {Function} app\n * @return {Function}\n * @api private\n */\n\nexports.init = function(app){\n  return function expressInit(req, res, next){\n    if (app.enabled('x-powered-by')) res.setHeader('X-Powered-By', 'Express');\n    req.res = res;\n    res.req = req;\n    req.next = next;\n\n    setPrototypeOf(req, app.request)\n    setPrototypeOf(res, app.response)\n\n    res.locals = res.locals || Object.create(null);\n\n    next();\n  };\n};\n\n","/*!\n * express\n * Copyright(c) 2009-2013 TJ Holowaychuk\n * Copyright(c) 2013 Roman Shtylman\n * Copyright(c) 2014-2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict';\n\n/**\n * Module dependencies.\n */\n\nvar merge = require('utils-merge')\nvar parseUrl = require('parseurl');\nvar qs = require('qs');\n\n/**\n * @param {Object} options\n * @return {Function}\n * @api public\n */\n\nmodule.exports = function query(options) {\n  var opts = merge({}, options)\n  var queryparse = qs.parse;\n\n  if (typeof options === 'function') {\n    queryparse = options;\n    opts = undefined;\n  }\n\n  if (opts !== undefined && opts.allowPrototypes === undefined) {\n    // back-compat for qs module\n    opts.allowPrototypes = true;\n  }\n\n  return function query(req, res, next){\n    if (!req.query) {\n      var val = parseUrl(req).query;\n      req.query = queryparse(val, opts);\n    }\n\n    next();\n  };\n};\n","/*!\n * express\n * Copyright(c) 2009-2013 TJ Holowaychuk\n * Copyright(c) 2013 Roman Shtylman\n * Copyright(c) 2014-2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict';\n\n/**\n * Module dependencies.\n * @private\n */\n\nvar accepts = require('accepts');\nvar deprecate = require('depd')('express');\nvar isIP = require('net').isIP;\nvar typeis = require('type-is');\nvar http = require('http');\nvar fresh = require('fresh');\nvar parseRange = require('range-parser');\nvar parse = require('parseurl');\nvar proxyaddr = require('proxy-addr');\n\n/**\n * Request prototype.\n * @public\n */\n\nvar req = Object.create(http.IncomingMessage.prototype)\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = req\n\n/**\n * Return request header.\n *\n * The `Referrer` header field is special-cased,\n * both `Referrer` and `Referer` are interchangeable.\n *\n * Examples:\n *\n *     req.get('Content-Type');\n *     // => \"text/plain\"\n *\n *     req.get('content-type');\n *     // => \"text/plain\"\n *\n *     req.get('Something');\n *     // => undefined\n *\n * Aliased as `req.header()`.\n *\n * @param {String} name\n * @return {String}\n * @public\n */\n\nreq.get =\nreq.header = function header(name) {\n  if (!name) {\n    throw new TypeError('name argument is required to req.get');\n  }\n\n  if (typeof name !== 'string') {\n    throw new TypeError('name must be a string to req.get');\n  }\n\n  var lc = name.toLowerCase();\n\n  switch (lc) {\n    case 'referer':\n    case 'referrer':\n      return this.headers.referrer\n        || this.headers.referer;\n    default:\n      return this.headers[lc];\n  }\n};\n\n/**\n * To do: update docs.\n *\n * Check if the given `type(s)` is acceptable, returning\n * the best match when true, otherwise `undefined`, in which\n * case you should respond with 406 \"Not Acceptable\".\n *\n * The `type` value may be a single MIME type string\n * such as \"application/json\", an extension name\n * such as \"json\", a comma-delimited list such as \"json, html, text/plain\",\n * an argument list such as `\"json\", \"html\", \"text/plain\"`,\n * or an array `[\"json\", \"html\", \"text/plain\"]`. When a list\n * or array is given, the _best_ match, if any is returned.\n *\n * Examples:\n *\n *     // Accept: text/html\n *     req.accepts('html');\n *     // => \"html\"\n *\n *     // Accept: text/*, application/json\n *     req.accepts('html');\n *     // => \"html\"\n *     req.accepts('text/html');\n *     // => \"text/html\"\n *     req.accepts('json, text');\n *     // => \"json\"\n *     req.accepts('application/json');\n *     // => \"application/json\"\n *\n *     // Accept: text/*, application/json\n *     req.accepts('image/png');\n *     req.accepts('png');\n *     // => undefined\n *\n *     // Accept: text/*;q=.5, application/json\n *     req.accepts(['html', 'json']);\n *     req.accepts('html', 'json');\n *     req.accepts('html, json');\n *     // => \"json\"\n *\n * @param {String|Array} type(s)\n * @return {String|Array|Boolean}\n * @public\n */\n\nreq.accepts = function(){\n  var accept = accepts(this);\n  return accept.types.apply(accept, arguments);\n};\n\n/**\n * Check if the given `encoding`s are accepted.\n *\n * @param {String} ...encoding\n * @return {String|Array}\n * @public\n */\n\nreq.acceptsEncodings = function(){\n  var accept = accepts(this);\n  return accept.encodings.apply(accept, arguments);\n};\n\nreq.acceptsEncoding = deprecate.function(req.acceptsEncodings,\n  'req.acceptsEncoding: Use acceptsEncodings instead');\n\n/**\n * Check if the given `charset`s are acceptable,\n * otherwise you should respond with 406 \"Not Acceptable\".\n *\n * @param {String} ...charset\n * @return {String|Array}\n * @public\n */\n\nreq.acceptsCharsets = function(){\n  var accept = accepts(this);\n  return accept.charsets.apply(accept, arguments);\n};\n\nreq.acceptsCharset = deprecate.function(req.acceptsCharsets,\n  'req.acceptsCharset: Use acceptsCharsets instead');\n\n/**\n * Check if the given `lang`s are acceptable,\n * otherwise you should respond with 406 \"Not Acceptable\".\n *\n * @param {String} ...lang\n * @return {String|Array}\n * @public\n */\n\nreq.acceptsLanguages = function(){\n  var accept = accepts(this);\n  return accept.languages.apply(accept, arguments);\n};\n\nreq.acceptsLanguage = deprecate.function(req.acceptsLanguages,\n  'req.acceptsLanguage: Use acceptsLanguages instead');\n\n/**\n * Parse Range header field, capping to the given `size`.\n *\n * Unspecified ranges such as \"0-\" require knowledge of your resource length. In\n * the case of a byte range this is of course the total number of bytes. If the\n * Range header field is not given `undefined` is returned, `-1` when unsatisfiable,\n * and `-2` when syntactically invalid.\n *\n * When ranges are returned, the array has a \"type\" property which is the type of\n * range that is required (most commonly, \"bytes\"). Each array element is an object\n * with a \"start\" and \"end\" property for the portion of the range.\n *\n * The \"combine\" option can be set to `true` and overlapping & adjacent ranges\n * will be combined into a single range.\n *\n * NOTE: remember that ranges are inclusive, so for example \"Range: users=0-3\"\n * should respond with 4 users when available, not 3.\n *\n * @param {number} size\n * @param {object} [options]\n * @param {boolean} [options.combine=false]\n * @return {number|array}\n * @public\n */\n\nreq.range = function range(size, options) {\n  var range = this.get('Range');\n  if (!range) return;\n  return parseRange(size, range, options);\n};\n\n/**\n * Return the value of param `name` when present or `defaultValue`.\n *\n *  - Checks route placeholders, ex: _/user/:id_\n *  - Checks body params, ex: id=12, {\"id\":12}\n *  - Checks query string params, ex: ?id=12\n *\n * To utilize request bodies, `req.body`\n * should be an object. This can be done by using\n * the `bodyParser()` middleware.\n *\n * @param {String} name\n * @param {Mixed} [defaultValue]\n * @return {String}\n * @public\n */\n\nreq.param = function param(name, defaultValue) {\n  var params = this.params || {};\n  var body = this.body || {};\n  var query = this.query || {};\n\n  var args = arguments.length === 1\n    ? 'name'\n    : 'name, default';\n  deprecate('req.param(' + args + '): Use req.params, req.body, or req.query instead');\n\n  if (null != params[name] && params.hasOwnProperty(name)) return params[name];\n  if (null != body[name]) return body[name];\n  if (null != query[name]) return query[name];\n\n  return defaultValue;\n};\n\n/**\n * Check if the incoming request contains the \"Content-Type\"\n * header field, and it contains the given mime `type`.\n *\n * Examples:\n *\n *      // With Content-Type: text/html; charset=utf-8\n *      req.is('html');\n *      req.is('text/html');\n *      req.is('text/*');\n *      // => true\n *\n *      // When Content-Type is application/json\n *      req.is('json');\n *      req.is('application/json');\n *      req.is('application/*');\n *      // => true\n *\n *      req.is('html');\n *      // => false\n *\n * @param {String|Array} types...\n * @return {String|false|null}\n * @public\n */\n\nreq.is = function is(types) {\n  var arr = types;\n\n  // support flattened arguments\n  if (!Array.isArray(types)) {\n    arr = new Array(arguments.length);\n    for (var i = 0; i < arr.length; i++) {\n      arr[i] = arguments[i];\n    }\n  }\n\n  return typeis(this, arr);\n};\n\n/**\n * Return the protocol string \"http\" or \"https\"\n * when requested with TLS. When the \"trust proxy\"\n * setting trusts the socket address, the\n * \"X-Forwarded-Proto\" header field will be trusted\n * and used if present.\n *\n * If you're running behind a reverse proxy that\n * supplies https for you this may be enabled.\n *\n * @return {String}\n * @public\n */\n\ndefineGetter(req, 'protocol', function protocol(){\n  var proto = this.connection.encrypted\n    ? 'https'\n    : 'http';\n  var trust = this.app.get('trust proxy fn');\n\n  if (!trust(this.connection.remoteAddress, 0)) {\n    return proto;\n  }\n\n  // Note: X-Forwarded-Proto is normally only ever a\n  //       single value, but this is to be safe.\n  var header = this.get('X-Forwarded-Proto') || proto\n  var index = header.indexOf(',')\n\n  return index !== -1\n    ? header.substring(0, index).trim()\n    : header.trim()\n});\n\n/**\n * Short-hand for:\n *\n *    req.protocol === 'https'\n *\n * @return {Boolean}\n * @public\n */\n\ndefineGetter(req, 'secure', function secure(){\n  return this.protocol === 'https';\n});\n\n/**\n * Return the remote address from the trusted proxy.\n *\n * The is the remote address on the socket unless\n * \"trust proxy\" is set.\n *\n * @return {String}\n * @public\n */\n\ndefineGetter(req, 'ip', function ip(){\n  var trust = this.app.get('trust proxy fn');\n  return proxyaddr(this, trust);\n});\n\n/**\n * When \"trust proxy\" is set, trusted proxy addresses + client.\n *\n * For example if the value were \"client, proxy1, proxy2\"\n * you would receive the array `[\"client\", \"proxy1\", \"proxy2\"]`\n * where \"proxy2\" is the furthest down-stream and \"proxy1\" and\n * \"proxy2\" were trusted.\n *\n * @return {Array}\n * @public\n */\n\ndefineGetter(req, 'ips', function ips() {\n  var trust = this.app.get('trust proxy fn');\n  var addrs = proxyaddr.all(this, trust);\n\n  // reverse the order (to farthest -> closest)\n  // and remove socket address\n  addrs.reverse().pop()\n\n  return addrs\n});\n\n/**\n * Return subdomains as an array.\n *\n * Subdomains are the dot-separated parts of the host before the main domain of\n * the app. By default, the domain of the app is assumed to be the last two\n * parts of the host. This can be changed by setting \"subdomain offset\".\n *\n * For example, if the domain is \"tobi.ferrets.example.com\":\n * If \"subdomain offset\" is not set, req.subdomains is `[\"ferrets\", \"tobi\"]`.\n * If \"subdomain offset\" is 3, req.subdomains is `[\"tobi\"]`.\n *\n * @return {Array}\n * @public\n */\n\ndefineGetter(req, 'subdomains', function subdomains() {\n  var hostname = this.hostname;\n\n  if (!hostname) return [];\n\n  var offset = this.app.get('subdomain offset');\n  var subdomains = !isIP(hostname)\n    ? hostname.split('.').reverse()\n    : [hostname];\n\n  return subdomains.slice(offset);\n});\n\n/**\n * Short-hand for `url.parse(req.url).pathname`.\n *\n * @return {String}\n * @public\n */\n\ndefineGetter(req, 'path', function path() {\n  return parse(this).pathname;\n});\n\n/**\n * Parse the \"Host\" header field to a hostname.\n *\n * When the \"trust proxy\" setting trusts the socket\n * address, the \"X-Forwarded-Host\" header field will\n * be trusted.\n *\n * @return {String}\n * @public\n */\n\ndefineGetter(req, 'hostname', function hostname(){\n  var trust = this.app.get('trust proxy fn');\n  var host = this.get('X-Forwarded-Host');\n\n  if (!host || !trust(this.connection.remoteAddress, 0)) {\n    host = this.get('Host');\n  } else if (host.indexOf(',') !== -1) {\n    // Note: X-Forwarded-Host is normally only ever a\n    //       single value, but this is to be safe.\n    host = host.substring(0, host.indexOf(',')).trimRight()\n  }\n\n  if (!host) return;\n\n  // IPv6 literal support\n  var offset = host[0] === '['\n    ? host.indexOf(']') + 1\n    : 0;\n  var index = host.indexOf(':', offset);\n\n  return index !== -1\n    ? host.substring(0, index)\n    : host;\n});\n\n// TODO: change req.host to return host in next major\n\ndefineGetter(req, 'host', deprecate.function(function host(){\n  return this.hostname;\n}, 'req.host: Use req.hostname instead'));\n\n/**\n * Check if the request is fresh, aka\n * Last-Modified and/or the ETag\n * still match.\n *\n * @return {Boolean}\n * @public\n */\n\ndefineGetter(req, 'fresh', function(){\n  var method = this.method;\n  var res = this.res\n  var status = res.statusCode\n\n  // GET or HEAD for weak freshness validation only\n  if ('GET' !== method && 'HEAD' !== method) return false;\n\n  // 2xx or 304 as per rfc2616 14.26\n  if ((status >= 200 && status < 300) || 304 === status) {\n    return fresh(this.headers, {\n      'etag': res.get('ETag'),\n      'last-modified': res.get('Last-Modified')\n    })\n  }\n\n  return false;\n});\n\n/**\n * Check if the request is stale, aka\n * \"Last-Modified\" and / or the \"ETag\" for the\n * resource has changed.\n *\n * @return {Boolean}\n * @public\n */\n\ndefineGetter(req, 'stale', function stale(){\n  return !this.fresh;\n});\n\n/**\n * Check if the request was an _XMLHttpRequest_.\n *\n * @return {Boolean}\n * @public\n */\n\ndefineGetter(req, 'xhr', function xhr(){\n  var val = this.get('X-Requested-With') || '';\n  return val.toLowerCase() === 'xmlhttprequest';\n});\n\n/**\n * Helper function for creating a getter on an object.\n *\n * @param {Object} obj\n * @param {String} name\n * @param {Function} getter\n * @private\n */\nfunction defineGetter(obj, name, getter) {\n  Object.defineProperty(obj, name, {\n    configurable: true,\n    enumerable: true,\n    get: getter\n  });\n}\n","/*!\n * express\n * Copyright(c) 2009-2013 TJ Holowaychuk\n * Copyright(c) 2014-2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict';\n\n/**\n * Module dependencies.\n * @private\n */\n\nvar Buffer = require('safe-buffer').Buffer\nvar contentDisposition = require('content-disposition');\nvar createError = require('http-errors')\nvar deprecate = require('depd')('express');\nvar encodeUrl = require('encodeurl');\nvar escapeHtml = require('escape-html');\nvar http = require('http');\nvar isAbsolute = require('./utils').isAbsolute;\nvar onFinished = require('on-finished');\nvar path = require('path');\nvar statuses = require('statuses')\nvar merge = require('utils-merge');\nvar sign = require('cookie-signature').sign;\nvar normalizeType = require('./utils').normalizeType;\nvar normalizeTypes = require('./utils').normalizeTypes;\nvar setCharset = require('./utils').setCharset;\nvar cookie = require('cookie');\nvar send = require('send');\nvar extname = path.extname;\nvar mime = send.mime;\nvar resolve = path.resolve;\nvar vary = require('vary');\n\n/**\n * Response prototype.\n * @public\n */\n\nvar res = Object.create(http.ServerResponse.prototype)\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = res\n\n/**\n * Module variables.\n * @private\n */\n\nvar charsetRegExp = /;\\s*charset\\s*=/;\n\n/**\n * Set status `code`.\n *\n * @param {Number} code\n * @return {ServerResponse}\n * @public\n */\n\nres.status = function status(code) {\n  if ((typeof code === 'string' || Math.floor(code) !== code) && code > 99 && code < 1000) {\n    deprecate('res.status(' + JSON.stringify(code) + '): use res.status(' + Math.floor(code) + ') instead')\n  }\n  this.statusCode = code;\n  return this;\n};\n\n/**\n * Set Link header field with the given `links`.\n *\n * Examples:\n *\n *    res.links({\n *      next: 'http://api.example.com/users?page=2',\n *      last: 'http://api.example.com/users?page=5'\n *    });\n *\n * @param {Object} links\n * @return {ServerResponse}\n * @public\n */\n\nres.links = function(links){\n  var link = this.get('Link') || '';\n  if (link) link += ', ';\n  return this.set('Link', link + Object.keys(links).map(function(rel){\n    return '<' + links[rel] + '>; rel=\"' + rel + '\"';\n  }).join(', '));\n};\n\n/**\n * Send a response.\n *\n * Examples:\n *\n *     res.send(Buffer.from('wahoo'));\n *     res.send({ some: 'json' });\n *     res.send('<p>some html</p>');\n *\n * @param {string|number|boolean|object|Buffer} body\n * @public\n */\n\nres.send = function send(body) {\n  var chunk = body;\n  var encoding;\n  var req = this.req;\n  var type;\n\n  // settings\n  var app = this.app;\n\n  // allow status / body\n  if (arguments.length === 2) {\n    // res.send(body, status) backwards compat\n    if (typeof arguments[0] !== 'number' && typeof arguments[1] === 'number') {\n      deprecate('res.send(body, status): Use res.status(status).send(body) instead');\n      this.statusCode = arguments[1];\n    } else {\n      deprecate('res.send(status, body): Use res.status(status).send(body) instead');\n      this.statusCode = arguments[0];\n      chunk = arguments[1];\n    }\n  }\n\n  // disambiguate res.send(status) and res.send(status, num)\n  if (typeof chunk === 'number' && arguments.length === 1) {\n    // res.send(status) will set status message as text string\n    if (!this.get('Content-Type')) {\n      this.type('txt');\n    }\n\n    deprecate('res.send(status): Use res.sendStatus(status) instead');\n    this.statusCode = chunk;\n    chunk = statuses.message[chunk]\n  }\n\n  switch (typeof chunk) {\n    // string defaulting to html\n    case 'string':\n      if (!this.get('Content-Type')) {\n        this.type('html');\n      }\n      break;\n    case 'boolean':\n    case 'number':\n    case 'object':\n      if (chunk === null) {\n        chunk = '';\n      } else if (Buffer.isBuffer(chunk)) {\n        if (!this.get('Content-Type')) {\n          this.type('bin');\n        }\n      } else {\n        return this.json(chunk);\n      }\n      break;\n  }\n\n  // write strings in utf-8\n  if (typeof chunk === 'string') {\n    encoding = 'utf8';\n    type = this.get('Content-Type');\n\n    // reflect this in content-type\n    if (typeof type === 'string') {\n      this.set('Content-Type', setCharset(type, 'utf-8'));\n    }\n  }\n\n  // determine if ETag should be generated\n  var etagFn = app.get('etag fn')\n  var generateETag = !this.get('ETag') && typeof etagFn === 'function'\n\n  // populate Content-Length\n  var len\n  if (chunk !== undefined) {\n    if (Buffer.isBuffer(chunk)) {\n      // get length of Buffer\n      len = chunk.length\n    } else if (!generateETag && chunk.length < 1000) {\n      // just calculate length when no ETag + small chunk\n      len = Buffer.byteLength(chunk, encoding)\n    } else {\n      // convert chunk to Buffer and calculate\n      chunk = Buffer.from(chunk, encoding)\n      encoding = undefined;\n      len = chunk.length\n    }\n\n    this.set('Content-Length', len);\n  }\n\n  // populate ETag\n  var etag;\n  if (generateETag && len !== undefined) {\n    if ((etag = etagFn(chunk, encoding))) {\n      this.set('ETag', etag);\n    }\n  }\n\n  // freshness\n  if (req.fresh) this.statusCode = 304;\n\n  // strip irrelevant headers\n  if (204 === this.statusCode || 304 === this.statusCode) {\n    this.removeHeader('Content-Type');\n    this.removeHeader('Content-Length');\n    this.removeHeader('Transfer-Encoding');\n    chunk = '';\n  }\n\n  // alter headers for 205\n  if (this.statusCode === 205) {\n    this.set('Content-Length', '0')\n    this.removeHeader('Transfer-Encoding')\n    chunk = ''\n  }\n\n  if (req.method === 'HEAD') {\n    // skip body for HEAD\n    this.end();\n  } else {\n    // respond\n    this.end(chunk, encoding);\n  }\n\n  return this;\n};\n\n/**\n * Send JSON response.\n *\n * Examples:\n *\n *     res.json(null);\n *     res.json({ user: 'tj' });\n *\n * @param {string|number|boolean|object} obj\n * @public\n */\n\nres.json = function json(obj) {\n  var val = obj;\n\n  // allow status / body\n  if (arguments.length === 2) {\n    // res.json(body, status) backwards compat\n    if (typeof arguments[1] === 'number') {\n      deprecate('res.json(obj, status): Use res.status(status).json(obj) instead');\n      this.statusCode = arguments[1];\n    } else {\n      deprecate('res.json(status, obj): Use res.status(status).json(obj) instead');\n      this.statusCode = arguments[0];\n      val = arguments[1];\n    }\n  }\n\n  // settings\n  var app = this.app;\n  var escape = app.get('json escape')\n  var replacer = app.get('json replacer');\n  var spaces = app.get('json spaces');\n  var body = stringify(val, replacer, spaces, escape)\n\n  // content-type\n  if (!this.get('Content-Type')) {\n    this.set('Content-Type', 'application/json');\n  }\n\n  return this.send(body);\n};\n\n/**\n * Send JSON response with JSONP callback support.\n *\n * Examples:\n *\n *     res.jsonp(null);\n *     res.jsonp({ user: 'tj' });\n *\n * @param {string|number|boolean|object} obj\n * @public\n */\n\nres.jsonp = function jsonp(obj) {\n  var val = obj;\n\n  // allow status / body\n  if (arguments.length === 2) {\n    // res.jsonp(body, status) backwards compat\n    if (typeof arguments[1] === 'number') {\n      deprecate('res.jsonp(obj, status): Use res.status(status).jsonp(obj) instead');\n      this.statusCode = arguments[1];\n    } else {\n      deprecate('res.jsonp(status, obj): Use res.status(status).jsonp(obj) instead');\n      this.statusCode = arguments[0];\n      val = arguments[1];\n    }\n  }\n\n  // settings\n  var app = this.app;\n  var escape = app.get('json escape')\n  var replacer = app.get('json replacer');\n  var spaces = app.get('json spaces');\n  var body = stringify(val, replacer, spaces, escape)\n  var callback = this.req.query[app.get('jsonp callback name')];\n\n  // content-type\n  if (!this.get('Content-Type')) {\n    this.set('X-Content-Type-Options', 'nosniff');\n    this.set('Content-Type', 'application/json');\n  }\n\n  // fixup callback\n  if (Array.isArray(callback)) {\n    callback = callback[0];\n  }\n\n  // jsonp\n  if (typeof callback === 'string' && callback.length !== 0) {\n    this.set('X-Content-Type-Options', 'nosniff');\n    this.set('Content-Type', 'text/javascript');\n\n    // restrict callback charset\n    callback = callback.replace(/[^\\[\\]\\w$.]/g, '');\n\n    if (body === undefined) {\n      // empty argument\n      body = ''\n    } else if (typeof body === 'string') {\n      // replace chars not allowed in JavaScript that are in JSON\n      body = body\n        .replace(/\\u2028/g, '\\\\u2028')\n        .replace(/\\u2029/g, '\\\\u2029')\n    }\n\n    // the /**/ is a specific security mitigation for \"Rosetta Flash JSONP abuse\"\n    // the typeof check is just to reduce client error noise\n    body = '/**/ typeof ' + callback + ' === \\'function\\' && ' + callback + '(' + body + ');';\n  }\n\n  return this.send(body);\n};\n\n/**\n * Send given HTTP status code.\n *\n * Sets the response status to `statusCode` and the body of the\n * response to the standard description from node's http.STATUS_CODES\n * or the statusCode number if no description.\n *\n * Examples:\n *\n *     res.sendStatus(200);\n *\n * @param {number} statusCode\n * @public\n */\n\nres.sendStatus = function sendStatus(statusCode) {\n  var body = statuses.message[statusCode] || String(statusCode)\n\n  this.statusCode = statusCode;\n  this.type('txt');\n\n  return this.send(body);\n};\n\n/**\n * Transfer the file at the given `path`.\n *\n * Automatically sets the _Content-Type_ response header field.\n * The callback `callback(err)` is invoked when the transfer is complete\n * or when an error occurs. Be sure to check `res.headersSent`\n * if you wish to attempt responding, as the header and some data\n * may have already been transferred.\n *\n * Options:\n *\n *   - `maxAge`   defaulting to 0 (can be string converted by `ms`)\n *   - `root`     root directory for relative filenames\n *   - `headers`  object of headers to serve with file\n *   - `dotfiles` serve dotfiles, defaulting to false; can be `\"allow\"` to send them\n *\n * Other options are passed along to `send`.\n *\n * Examples:\n *\n *  The following example illustrates how `res.sendFile()` may\n *  be used as an alternative for the `static()` middleware for\n *  dynamic situations. The code backing `res.sendFile()` is actually\n *  the same code, so HTTP cache support etc is identical.\n *\n *     app.get('/user/:uid/photos/:file', function(req, res){\n *       var uid = req.params.uid\n *         , file = req.params.file;\n *\n *       req.user.mayViewFilesFrom(uid, function(yes){\n *         if (yes) {\n *           res.sendFile('/uploads/' + uid + '/' + file);\n *         } else {\n *           res.send(403, 'Sorry! you cant see that.');\n *         }\n *       });\n *     });\n *\n * @public\n */\n\nres.sendFile = function sendFile(path, options, callback) {\n  var done = callback;\n  var req = this.req;\n  var res = this;\n  var next = req.next;\n  var opts = options || {};\n\n  if (!path) {\n    throw new TypeError('path argument is required to res.sendFile');\n  }\n\n  if (typeof path !== 'string') {\n    throw new TypeError('path must be a string to res.sendFile')\n  }\n\n  // support function as second arg\n  if (typeof options === 'function') {\n    done = options;\n    opts = {};\n  }\n\n  if (!opts.root && !isAbsolute(path)) {\n    throw new TypeError('path must be absolute or specify root to res.sendFile');\n  }\n\n  // create file stream\n  var pathname = encodeURI(path);\n  var file = send(req, pathname, opts);\n\n  // transfer\n  sendfile(res, file, opts, function (err) {\n    if (done) return done(err);\n    if (err && err.code === 'EISDIR') return next();\n\n    // next() all but write errors\n    if (err && err.code !== 'ECONNABORTED' && err.syscall !== 'write') {\n      next(err);\n    }\n  });\n};\n\n/**\n * Transfer the file at the given `path`.\n *\n * Automatically sets the _Content-Type_ response header field.\n * The callback `callback(err)` is invoked when the transfer is complete\n * or when an error occurs. Be sure to check `res.headersSent`\n * if you wish to attempt responding, as the header and some data\n * may have already been transferred.\n *\n * Options:\n *\n *   - `maxAge`   defaulting to 0 (can be string converted by `ms`)\n *   - `root`     root directory for relative filenames\n *   - `headers`  object of headers to serve with file\n *   - `dotfiles` serve dotfiles, defaulting to false; can be `\"allow\"` to send them\n *\n * Other options are passed along to `send`.\n *\n * Examples:\n *\n *  The following example illustrates how `res.sendfile()` may\n *  be used as an alternative for the `static()` middleware for\n *  dynamic situations. The code backing `res.sendfile()` is actually\n *  the same code, so HTTP cache support etc is identical.\n *\n *     app.get('/user/:uid/photos/:file', function(req, res){\n *       var uid = req.params.uid\n *         , file = req.params.file;\n *\n *       req.user.mayViewFilesFrom(uid, function(yes){\n *         if (yes) {\n *           res.sendfile('/uploads/' + uid + '/' + file);\n *         } else {\n *           res.send(403, 'Sorry! you cant see that.');\n *         }\n *       });\n *     });\n *\n * @public\n */\n\nres.sendfile = function (path, options, callback) {\n  var done = callback;\n  var req = this.req;\n  var res = this;\n  var next = req.next;\n  var opts = options || {};\n\n  // support function as second arg\n  if (typeof options === 'function') {\n    done = options;\n    opts = {};\n  }\n\n  // create file stream\n  var file = send(req, path, opts);\n\n  // transfer\n  sendfile(res, file, opts, function (err) {\n    if (done) return done(err);\n    if (err && err.code === 'EISDIR') return next();\n\n    // next() all but write errors\n    if (err && err.code !== 'ECONNABORTED' && err.syscall !== 'write') {\n      next(err);\n    }\n  });\n};\n\nres.sendfile = deprecate.function(res.sendfile,\n  'res.sendfile: Use res.sendFile instead');\n\n/**\n * Transfer the file at the given `path` as an attachment.\n *\n * Optionally providing an alternate attachment `filename`,\n * and optional callback `callback(err)`. The callback is invoked\n * when the data transfer is complete, or when an error has\n * occurred. Be sure to check `res.headersSent` if you plan to respond.\n *\n * Optionally providing an `options` object to use with `res.sendFile()`.\n * This function will set the `Content-Disposition` header, overriding\n * any `Content-Disposition` header passed as header options in order\n * to set the attachment and filename.\n *\n * This method uses `res.sendFile()`.\n *\n * @public\n */\n\nres.download = function download (path, filename, options, callback) {\n  var done = callback;\n  var name = filename;\n  var opts = options || null\n\n  // support function as second or third arg\n  if (typeof filename === 'function') {\n    done = filename;\n    name = null;\n    opts = null\n  } else if (typeof options === 'function') {\n    done = options\n    opts = null\n  }\n\n  // support optional filename, where options may be in it's place\n  if (typeof filename === 'object' &&\n    (typeof options === 'function' || options === undefined)) {\n    name = null\n    opts = filename\n  }\n\n  // set Content-Disposition when file is sent\n  var headers = {\n    'Content-Disposition': contentDisposition(name || path)\n  };\n\n  // merge user-provided headers\n  if (opts && opts.headers) {\n    var keys = Object.keys(opts.headers)\n    for (var i = 0; i < keys.length; i++) {\n      var key = keys[i]\n      if (key.toLowerCase() !== 'content-disposition') {\n        headers[key] = opts.headers[key]\n      }\n    }\n  }\n\n  // merge user-provided options\n  opts = Object.create(opts)\n  opts.headers = headers\n\n  // Resolve the full path for sendFile\n  var fullPath = !opts.root\n    ? resolve(path)\n    : path\n\n  // send file\n  return this.sendFile(fullPath, opts, done)\n};\n\n/**\n * Set _Content-Type_ response header with `type` through `mime.lookup()`\n * when it does not contain \"/\", or set the Content-Type to `type` otherwise.\n *\n * Examples:\n *\n *     res.type('.html');\n *     res.type('html');\n *     res.type('json');\n *     res.type('application/json');\n *     res.type('png');\n *\n * @param {String} type\n * @return {ServerResponse} for chaining\n * @public\n */\n\nres.contentType =\nres.type = function contentType(type) {\n  var ct = type.indexOf('/') === -1\n    ? mime.lookup(type)\n    : type;\n\n  return this.set('Content-Type', ct);\n};\n\n/**\n * Respond to the Acceptable formats using an `obj`\n * of mime-type callbacks.\n *\n * This method uses `req.accepted`, an array of\n * acceptable types ordered by their quality values.\n * When \"Accept\" is not present the _first_ callback\n * is invoked, otherwise the first match is used. When\n * no match is performed the server responds with\n * 406 \"Not Acceptable\".\n *\n * Content-Type is set for you, however if you choose\n * you may alter this within the callback using `res.type()`\n * or `res.set('Content-Type', ...)`.\n *\n *    res.format({\n *      'text/plain': function(){\n *        res.send('hey');\n *      },\n *\n *      'text/html': function(){\n *        res.send('<p>hey</p>');\n *      },\n *\n *      'application/json': function () {\n *        res.send({ message: 'hey' });\n *      }\n *    });\n *\n * In addition to canonicalized MIME types you may\n * also use extnames mapped to these types:\n *\n *    res.format({\n *      text: function(){\n *        res.send('hey');\n *      },\n *\n *      html: function(){\n *        res.send('<p>hey</p>');\n *      },\n *\n *      json: function(){\n *        res.send({ message: 'hey' });\n *      }\n *    });\n *\n * By default Express passes an `Error`\n * with a `.status` of 406 to `next(err)`\n * if a match is not made. If you provide\n * a `.default` callback it will be invoked\n * instead.\n *\n * @param {Object} obj\n * @return {ServerResponse} for chaining\n * @public\n */\n\nres.format = function(obj){\n  var req = this.req;\n  var next = req.next;\n\n  var keys = Object.keys(obj)\n    .filter(function (v) { return v !== 'default' })\n\n  var key = keys.length > 0\n    ? req.accepts(keys)\n    : false;\n\n  this.vary(\"Accept\");\n\n  if (key) {\n    this.set('Content-Type', normalizeType(key).value);\n    obj[key](req, this, next);\n  } else if (obj.default) {\n    obj.default(req, this, next)\n  } else {\n    next(createError(406, {\n      types: normalizeTypes(keys).map(function (o) { return o.value })\n    }))\n  }\n\n  return this;\n};\n\n/**\n * Set _Content-Disposition_ header to _attachment_ with optional `filename`.\n *\n * @param {String} filename\n * @return {ServerResponse}\n * @public\n */\n\nres.attachment = function attachment(filename) {\n  if (filename) {\n    this.type(extname(filename));\n  }\n\n  this.set('Content-Disposition', contentDisposition(filename));\n\n  return this;\n};\n\n/**\n * Append additional header `field` with value `val`.\n *\n * Example:\n *\n *    res.append('Link', ['<http://localhost/>', '<http://localhost:3000/>']);\n *    res.append('Set-Cookie', 'foo=bar; Path=/; HttpOnly');\n *    res.append('Warning', '199 Miscellaneous warning');\n *\n * @param {String} field\n * @param {String|Array} val\n * @return {ServerResponse} for chaining\n * @public\n */\n\nres.append = function append(field, val) {\n  var prev = this.get(field);\n  var value = val;\n\n  if (prev) {\n    // concat the new and prev vals\n    value = Array.isArray(prev) ? prev.concat(val)\n      : Array.isArray(val) ? [prev].concat(val)\n        : [prev, val]\n  }\n\n  return this.set(field, value);\n};\n\n/**\n * Set header `field` to `val`, or pass\n * an object of header fields.\n *\n * Examples:\n *\n *    res.set('Foo', ['bar', 'baz']);\n *    res.set('Accept', 'application/json');\n *    res.set({ Accept: 'text/plain', 'X-API-Key': 'tobi' });\n *\n * Aliased as `res.header()`.\n *\n * @param {String|Object} field\n * @param {String|Array} val\n * @return {ServerResponse} for chaining\n * @public\n */\n\nres.set =\nres.header = function header(field, val) {\n  if (arguments.length === 2) {\n    var value = Array.isArray(val)\n      ? val.map(String)\n      : String(val);\n\n    // add charset to content-type\n    if (field.toLowerCase() === 'content-type') {\n      if (Array.isArray(value)) {\n        throw new TypeError('Content-Type cannot be set to an Array');\n      }\n      if (!charsetRegExp.test(value)) {\n        var charset = mime.charsets.lookup(value.split(';')[0]);\n        if (charset) value += '; charset=' + charset.toLowerCase();\n      }\n    }\n\n    this.setHeader(field, value);\n  } else {\n    for (var key in field) {\n      this.set(key, field[key]);\n    }\n  }\n  return this;\n};\n\n/**\n * Get value for header `field`.\n *\n * @param {String} field\n * @return {String}\n * @public\n */\n\nres.get = function(field){\n  return this.getHeader(field);\n};\n\n/**\n * Clear cookie `name`.\n *\n * @param {String} name\n * @param {Object} [options]\n * @return {ServerResponse} for chaining\n * @public\n */\n\nres.clearCookie = function clearCookie(name, options) {\n  var opts = merge({ expires: new Date(1), path: '/' }, options);\n\n  return this.cookie(name, '', opts);\n};\n\n/**\n * Set cookie `name` to `value`, with the given `options`.\n *\n * Options:\n *\n *    - `maxAge`   max-age in milliseconds, converted to `expires`\n *    - `signed`   sign the cookie\n *    - `path`     defaults to \"/\"\n *\n * Examples:\n *\n *    // \"Remember Me\" for 15 minutes\n *    res.cookie('rememberme', '1', { expires: new Date(Date.now() + 900000), httpOnly: true });\n *\n *    // same as above\n *    res.cookie('rememberme', '1', { maxAge: 900000, httpOnly: true })\n *\n * @param {String} name\n * @param {String|Object} value\n * @param {Object} [options]\n * @return {ServerResponse} for chaining\n * @public\n */\n\nres.cookie = function (name, value, options) {\n  var opts = merge({}, options);\n  var secret = this.req.secret;\n  var signed = opts.signed;\n\n  if (signed && !secret) {\n    throw new Error('cookieParser(\"secret\") required for signed cookies');\n  }\n\n  var val = typeof value === 'object'\n    ? 'j:' + JSON.stringify(value)\n    : String(value);\n\n  if (signed) {\n    val = 's:' + sign(val, secret);\n  }\n\n  if (opts.maxAge != null) {\n    var maxAge = opts.maxAge - 0\n\n    if (!isNaN(maxAge)) {\n      opts.expires = new Date(Date.now() + maxAge)\n      opts.maxAge = Math.floor(maxAge / 1000)\n    }\n  }\n\n  if (opts.path == null) {\n    opts.path = '/';\n  }\n\n  this.append('Set-Cookie', cookie.serialize(name, String(val), opts));\n\n  return this;\n};\n\n/**\n * Set the location header to `url`.\n *\n * The given `url` can also be \"back\", which redirects\n * to the _Referrer_ or _Referer_ headers or \"/\".\n *\n * Examples:\n *\n *    res.location('/foo/bar').;\n *    res.location('http://example.com');\n *    res.location('../login');\n *\n * @param {String} url\n * @return {ServerResponse} for chaining\n * @public\n */\n\nres.location = function location(url) {\n  var loc = url;\n\n  // \"back\" is an alias for the referrer\n  if (url === 'back') {\n    loc = this.req.get('Referrer') || '/';\n  }\n\n  // set location\n  return this.set('Location', encodeUrl(loc));\n};\n\n/**\n * Redirect to the given `url` with optional response `status`\n * defaulting to 302.\n *\n * The resulting `url` is determined by `res.location()`, so\n * it will play nicely with mounted apps, relative paths,\n * `\"back\"` etc.\n *\n * Examples:\n *\n *    res.redirect('/foo/bar');\n *    res.redirect('http://example.com');\n *    res.redirect(301, 'http://example.com');\n *    res.redirect('../login'); // /blog/post/1 -> /blog/login\n *\n * @public\n */\n\nres.redirect = function redirect(url) {\n  var address = url;\n  var body;\n  var status = 302;\n\n  // allow status / url\n  if (arguments.length === 2) {\n    if (typeof arguments[0] === 'number') {\n      status = arguments[0];\n      address = arguments[1];\n    } else {\n      deprecate('res.redirect(url, status): Use res.redirect(status, url) instead');\n      status = arguments[1];\n    }\n  }\n\n  // Set location header\n  address = this.location(address).get('Location');\n\n  // Support text/{plain,html} by default\n  this.format({\n    text: function(){\n      body = statuses.message[status] + '. Redirecting to ' + address\n    },\n\n    html: function(){\n      var u = escapeHtml(address);\n      body = '<p>' + statuses.message[status] + '. Redirecting to <a href=\"' + u + '\">' + u + '</a></p>'\n    },\n\n    default: function(){\n      body = '';\n    }\n  });\n\n  // Respond\n  this.statusCode = status;\n  this.set('Content-Length', Buffer.byteLength(body));\n\n  if (this.req.method === 'HEAD') {\n    this.end();\n  } else {\n    this.end(body);\n  }\n};\n\n/**\n * Add `field` to Vary. If already present in the Vary set, then\n * this call is simply ignored.\n *\n * @param {Array|String} field\n * @return {ServerResponse} for chaining\n * @public\n */\n\nres.vary = function(field){\n  // checks for back-compat\n  if (!field || (Array.isArray(field) && !field.length)) {\n    deprecate('res.vary(): Provide a field name');\n    return this;\n  }\n\n  vary(this, field);\n\n  return this;\n};\n\n/**\n * Render `view` with the given `options` and optional callback `fn`.\n * When a callback function is given a response will _not_ be made\n * automatically, otherwise a response of _200_ and _text/html_ is given.\n *\n * Options:\n *\n *  - `cache`     boolean hinting to the engine it should cache\n *  - `filename`  filename of the view being rendered\n *\n * @public\n */\n\nres.render = function render(view, options, callback) {\n  var app = this.req.app;\n  var done = callback;\n  var opts = options || {};\n  var req = this.req;\n  var self = this;\n\n  // support callback function as second arg\n  if (typeof options === 'function') {\n    done = options;\n    opts = {};\n  }\n\n  // merge res.locals\n  opts._locals = self.locals;\n\n  // default callback to respond\n  done = done || function (err, str) {\n    if (err) return req.next(err);\n    self.send(str);\n  };\n\n  // render\n  app.render(view, opts, done);\n};\n\n// pipe the send file stream\nfunction sendfile(res, file, options, callback) {\n  var done = false;\n  var streaming;\n\n  // request aborted\n  function onaborted() {\n    if (done) return;\n    done = true;\n\n    var err = new Error('Request aborted');\n    err.code = 'ECONNABORTED';\n    callback(err);\n  }\n\n  // directory\n  function ondirectory() {\n    if (done) return;\n    done = true;\n\n    var err = new Error('EISDIR, read');\n    err.code = 'EISDIR';\n    callback(err);\n  }\n\n  // errors\n  function onerror(err) {\n    if (done) return;\n    done = true;\n    callback(err);\n  }\n\n  // ended\n  function onend() {\n    if (done) return;\n    done = true;\n    callback();\n  }\n\n  // file\n  function onfile() {\n    streaming = false;\n  }\n\n  // finished\n  function onfinish(err) {\n    if (err && err.code === 'ECONNRESET') return onaborted();\n    if (err) return onerror(err);\n    if (done) return;\n\n    setImmediate(function () {\n      if (streaming !== false && !done) {\n        onaborted();\n        return;\n      }\n\n      if (done) return;\n      done = true;\n      callback();\n    });\n  }\n\n  // streaming\n  function onstream() {\n    streaming = true;\n  }\n\n  file.on('directory', ondirectory);\n  file.on('end', onend);\n  file.on('error', onerror);\n  file.on('file', onfile);\n  file.on('stream', onstream);\n  onFinished(res, onfinish);\n\n  if (options.headers) {\n    // set headers on successful transfer\n    file.on('headers', function headers(res) {\n      var obj = options.headers;\n      var keys = Object.keys(obj);\n\n      for (var i = 0; i < keys.length; i++) {\n        var k = keys[i];\n        res.setHeader(k, obj[k]);\n      }\n    });\n  }\n\n  // pipe\n  file.pipe(res);\n}\n\n/**\n * Stringify JSON, like JSON.stringify, but v8 optimized, with the\n * ability to escape characters that can trigger HTML sniffing.\n *\n * @param {*} value\n * @param {function} replacer\n * @param {number} spaces\n * @param {boolean} escape\n * @returns {string}\n * @private\n */\n\nfunction stringify (value, replacer, spaces, escape) {\n  // v8 checks arguments.length for optimizing simple call\n  // https://bugs.chromium.org/p/v8/issues/detail?id=4730\n  var json = replacer || spaces\n    ? JSON.stringify(value, replacer, spaces)\n    : JSON.stringify(value);\n\n  if (escape && typeof json === 'string') {\n    json = json.replace(/[<>&]/g, function (c) {\n      switch (c.charCodeAt(0)) {\n        case 0x3c:\n          return '\\\\u003c'\n        case 0x3e:\n          return '\\\\u003e'\n        case 0x26:\n          return '\\\\u0026'\n        /* istanbul ignore next: unreachable default */\n        default:\n          return c\n      }\n    })\n  }\n\n  return json\n}\n","/*!\n * express\n * Copyright(c) 2009-2013 TJ Holowaychuk\n * Copyright(c) 2013 Roman Shtylman\n * Copyright(c) 2014-2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict';\n\n/**\n * Module dependencies.\n * @private\n */\n\nvar Route = require('./route');\nvar Layer = require('./layer');\nvar methods = require('methods');\nvar mixin = require('utils-merge');\nvar debug = require('debug')('express:router');\nvar deprecate = require('depd')('express');\nvar flatten = require('array-flatten');\nvar parseUrl = require('parseurl');\nvar setPrototypeOf = require('setprototypeof')\n\n/**\n * Module variables.\n * @private\n */\n\nvar objectRegExp = /^\\[object (\\S+)\\]$/;\nvar slice = Array.prototype.slice;\nvar toString = Object.prototype.toString;\n\n/**\n * Initialize a new `Router` with the given `options`.\n *\n * @param {Object} [options]\n * @return {Router} which is an callable function\n * @public\n */\n\nvar proto = module.exports = function(options) {\n  var opts = options || {};\n\n  function router(req, res, next) {\n    router.handle(req, res, next);\n  }\n\n  // mixin Router class functions\n  setPrototypeOf(router, proto)\n\n  router.params = {};\n  router._params = [];\n  router.caseSensitive = opts.caseSensitive;\n  router.mergeParams = opts.mergeParams;\n  router.strict = opts.strict;\n  router.stack = [];\n\n  return router;\n};\n\n/**\n * Map the given param placeholder `name`(s) to the given callback.\n *\n * Parameter mapping is used to provide pre-conditions to routes\n * which use normalized placeholders. For example a _:user_id_ parameter\n * could automatically load a user's information from the database without\n * any additional code,\n *\n * The callback uses the same signature as middleware, the only difference\n * being that the value of the placeholder is passed, in this case the _id_\n * of the user. Once the `next()` function is invoked, just like middleware\n * it will continue on to execute the route, or subsequent parameter functions.\n *\n * Just like in middleware, you must either respond to the request or call next\n * to avoid stalling the request.\n *\n *  app.param('user_id', function(req, res, next, id){\n *    User.find(id, function(err, user){\n *      if (err) {\n *        return next(err);\n *      } else if (!user) {\n *        return next(new Error('failed to load user'));\n *      }\n *      req.user = user;\n *      next();\n *    });\n *  });\n *\n * @param {String} name\n * @param {Function} fn\n * @return {app} for chaining\n * @public\n */\n\nproto.param = function param(name, fn) {\n  // param logic\n  if (typeof name === 'function') {\n    deprecate('router.param(fn): Refactor to use path params');\n    this._params.push(name);\n    return;\n  }\n\n  // apply param functions\n  var params = this._params;\n  var len = params.length;\n  var ret;\n\n  if (name[0] === ':') {\n    deprecate('router.param(' + JSON.stringify(name) + ', fn): Use router.param(' + JSON.stringify(name.slice(1)) + ', fn) instead')\n    name = name.slice(1)\n  }\n\n  for (var i = 0; i < len; ++i) {\n    if (ret = params[i](name, fn)) {\n      fn = ret;\n    }\n  }\n\n  // ensure we end up with a\n  // middleware function\n  if ('function' !== typeof fn) {\n    throw new Error('invalid param() call for ' + name + ', got ' + fn);\n  }\n\n  (this.params[name] = this.params[name] || []).push(fn);\n  return this;\n};\n\n/**\n * Dispatch a req, res into the router.\n * @private\n */\n\nproto.handle = function handle(req, res, out) {\n  var self = this;\n\n  debug('dispatching %s %s', req.method, req.url);\n\n  var idx = 0;\n  var protohost = getProtohost(req.url) || ''\n  var removed = '';\n  var slashAdded = false;\n  var sync = 0\n  var paramcalled = {};\n\n  // store options for OPTIONS request\n  // only used if OPTIONS request\n  var options = [];\n\n  // middleware and routes\n  var stack = self.stack;\n\n  // manage inter-router variables\n  var parentParams = req.params;\n  var parentUrl = req.baseUrl || '';\n  var done = restore(out, req, 'baseUrl', 'next', 'params');\n\n  // setup next layer\n  req.next = next;\n\n  // for options requests, respond with a default if nothing else responds\n  if (req.method === 'OPTIONS') {\n    done = wrap(done, function(old, err) {\n      if (err || options.length === 0) return old(err);\n      sendOptionsResponse(res, options, old);\n    });\n  }\n\n  // setup basic req values\n  req.baseUrl = parentUrl;\n  req.originalUrl = req.originalUrl || req.url;\n\n  next();\n\n  function next(err) {\n    var layerError = err === 'route'\n      ? null\n      : err;\n\n    // remove added slash\n    if (slashAdded) {\n      req.url = req.url.slice(1)\n      slashAdded = false;\n    }\n\n    // restore altered req.url\n    if (removed.length !== 0) {\n      req.baseUrl = parentUrl;\n      req.url = protohost + removed + req.url.slice(protohost.length)\n      removed = '';\n    }\n\n    // signal to exit router\n    if (layerError === 'router') {\n      setImmediate(done, null)\n      return\n    }\n\n    // no more matching layers\n    if (idx >= stack.length) {\n      setImmediate(done, layerError);\n      return;\n    }\n\n    // max sync stack\n    if (++sync > 100) {\n      return setImmediate(next, err)\n    }\n\n    // get pathname of request\n    var path = getPathname(req);\n\n    if (path == null) {\n      return done(layerError);\n    }\n\n    // find next matching layer\n    var layer;\n    var match;\n    var route;\n\n    while (match !== true && idx < stack.length) {\n      layer = stack[idx++];\n      match = matchLayer(layer, path);\n      route = layer.route;\n\n      if (typeof match !== 'boolean') {\n        // hold on to layerError\n        layerError = layerError || match;\n      }\n\n      if (match !== true) {\n        continue;\n      }\n\n      if (!route) {\n        // process non-route handlers normally\n        continue;\n      }\n\n      if (layerError) {\n        // routes do not match with a pending error\n        match = false;\n        continue;\n      }\n\n      var method = req.method;\n      var has_method = route._handles_method(method);\n\n      // build up automatic options response\n      if (!has_method && method === 'OPTIONS') {\n        appendMethods(options, route._options());\n      }\n\n      // don't even bother matching route\n      if (!has_method && method !== 'HEAD') {\n        match = false;\n      }\n    }\n\n    // no match\n    if (match !== true) {\n      return done(layerError);\n    }\n\n    // store route for dispatch on change\n    if (route) {\n      req.route = route;\n    }\n\n    // Capture one-time layer values\n    req.params = self.mergeParams\n      ? mergeParams(layer.params, parentParams)\n      : layer.params;\n    var layerPath = layer.path;\n\n    // this should be done for the layer\n    self.process_params(layer, paramcalled, req, res, function (err) {\n      if (err) {\n        next(layerError || err)\n      } else if (route) {\n        layer.handle_request(req, res, next)\n      } else {\n        trim_prefix(layer, layerError, layerPath, path)\n      }\n\n      sync = 0\n    });\n  }\n\n  function trim_prefix(layer, layerError, layerPath, path) {\n    if (layerPath.length !== 0) {\n      // Validate path is a prefix match\n      if (layerPath !== path.slice(0, layerPath.length)) {\n        next(layerError)\n        return\n      }\n\n      // Validate path breaks on a path separator\n      var c = path[layerPath.length]\n      if (c && c !== '/' && c !== '.') return next(layerError)\n\n      // Trim off the part of the url that matches the route\n      // middleware (.use stuff) needs to have the path stripped\n      debug('trim prefix (%s) from url %s', layerPath, req.url);\n      removed = layerPath;\n      req.url = protohost + req.url.slice(protohost.length + removed.length)\n\n      // Ensure leading slash\n      if (!protohost && req.url[0] !== '/') {\n        req.url = '/' + req.url;\n        slashAdded = true;\n      }\n\n      // Setup base URL (no trailing slash)\n      req.baseUrl = parentUrl + (removed[removed.length - 1] === '/'\n        ? removed.substring(0, removed.length - 1)\n        : removed);\n    }\n\n    debug('%s %s : %s', layer.name, layerPath, req.originalUrl);\n\n    if (layerError) {\n      layer.handle_error(layerError, req, res, next);\n    } else {\n      layer.handle_request(req, res, next);\n    }\n  }\n};\n\n/**\n * Process any parameters for the layer.\n * @private\n */\n\nproto.process_params = function process_params(layer, called, req, res, done) {\n  var params = this.params;\n\n  // captured parameters from the layer, keys and values\n  var keys = layer.keys;\n\n  // fast track\n  if (!keys || keys.length === 0) {\n    return done();\n  }\n\n  var i = 0;\n  var name;\n  var paramIndex = 0;\n  var key;\n  var paramVal;\n  var paramCallbacks;\n  var paramCalled;\n\n  // process params in order\n  // param callbacks can be async\n  function param(err) {\n    if (err) {\n      return done(err);\n    }\n\n    if (i >= keys.length ) {\n      return done();\n    }\n\n    paramIndex = 0;\n    key = keys[i++];\n    name = key.name;\n    paramVal = req.params[name];\n    paramCallbacks = params[name];\n    paramCalled = called[name];\n\n    if (paramVal === undefined || !paramCallbacks) {\n      return param();\n    }\n\n    // param previously called with same value or error occurred\n    if (paramCalled && (paramCalled.match === paramVal\n      || (paramCalled.error && paramCalled.error !== 'route'))) {\n      // restore value\n      req.params[name] = paramCalled.value;\n\n      // next param\n      return param(paramCalled.error);\n    }\n\n    called[name] = paramCalled = {\n      error: null,\n      match: paramVal,\n      value: paramVal\n    };\n\n    paramCallback();\n  }\n\n  // single param callbacks\n  function paramCallback(err) {\n    var fn = paramCallbacks[paramIndex++];\n\n    // store updated value\n    paramCalled.value = req.params[key.name];\n\n    if (err) {\n      // store error\n      paramCalled.error = err;\n      param(err);\n      return;\n    }\n\n    if (!fn) return param();\n\n    try {\n      fn(req, res, paramCallback, paramVal, key.name);\n    } catch (e) {\n      paramCallback(e);\n    }\n  }\n\n  param();\n};\n\n/**\n * Use the given middleware function, with optional path, defaulting to \"/\".\n *\n * Use (like `.all`) will run for any http METHOD, but it will not add\n * handlers for those methods so OPTIONS requests will not consider `.use`\n * functions even if they could respond.\n *\n * The other difference is that _route_ path is stripped and not visible\n * to the handler function. The main effect of this feature is that mounted\n * handlers can operate without any code changes regardless of the \"prefix\"\n * pathname.\n *\n * @public\n */\n\nproto.use = function use(fn) {\n  var offset = 0;\n  var path = '/';\n\n  // default path to '/'\n  // disambiguate router.use([fn])\n  if (typeof fn !== 'function') {\n    var arg = fn;\n\n    while (Array.isArray(arg) && arg.length !== 0) {\n      arg = arg[0];\n    }\n\n    // first arg is the path\n    if (typeof arg !== 'function') {\n      offset = 1;\n      path = fn;\n    }\n  }\n\n  var callbacks = flatten(slice.call(arguments, offset));\n\n  if (callbacks.length === 0) {\n    throw new TypeError('Router.use() requires a middleware function')\n  }\n\n  for (var i = 0; i < callbacks.length; i++) {\n    var fn = callbacks[i];\n\n    if (typeof fn !== 'function') {\n      throw new TypeError('Router.use() requires a middleware function but got a ' + gettype(fn))\n    }\n\n    // add the middleware\n    debug('use %o %s', path, fn.name || '<anonymous>')\n\n    var layer = new Layer(path, {\n      sensitive: this.caseSensitive,\n      strict: false,\n      end: false\n    }, fn);\n\n    layer.route = undefined;\n\n    this.stack.push(layer);\n  }\n\n  return this;\n};\n\n/**\n * Create a new Route for the given path.\n *\n * Each route contains a separate middleware stack and VERB handlers.\n *\n * See the Route api documentation for details on adding handlers\n * and middleware to routes.\n *\n * @param {String} path\n * @return {Route}\n * @public\n */\n\nproto.route = function route(path) {\n  var route = new Route(path);\n\n  var layer = new Layer(path, {\n    sensitive: this.caseSensitive,\n    strict: this.strict,\n    end: true\n  }, route.dispatch.bind(route));\n\n  layer.route = route;\n\n  this.stack.push(layer);\n  return route;\n};\n\n// create Router#VERB functions\nmethods.concat('all').forEach(function(method){\n  proto[method] = function(path){\n    var route = this.route(path)\n    route[method].apply(route, slice.call(arguments, 1));\n    return this;\n  };\n});\n\n// append methods to a list of methods\nfunction appendMethods(list, addition) {\n  for (var i = 0; i < addition.length; i++) {\n    var method = addition[i];\n    if (list.indexOf(method) === -1) {\n      list.push(method);\n    }\n  }\n}\n\n// get pathname of request\nfunction getPathname(req) {\n  try {\n    return parseUrl(req).pathname;\n  } catch (err) {\n    return undefined;\n  }\n}\n\n// Get get protocol + host for a URL\nfunction getProtohost(url) {\n  if (typeof url !== 'string' || url.length === 0 || url[0] === '/') {\n    return undefined\n  }\n\n  var searchIndex = url.indexOf('?')\n  var pathLength = searchIndex !== -1\n    ? searchIndex\n    : url.length\n  var fqdnIndex = url.slice(0, pathLength).indexOf('://')\n\n  return fqdnIndex !== -1\n    ? url.substring(0, url.indexOf('/', 3 + fqdnIndex))\n    : undefined\n}\n\n// get type for error message\nfunction gettype(obj) {\n  var type = typeof obj;\n\n  if (type !== 'object') {\n    return type;\n  }\n\n  // inspect [[Class]] for objects\n  return toString.call(obj)\n    .replace(objectRegExp, '$1');\n}\n\n/**\n * Match path to a layer.\n *\n * @param {Layer} layer\n * @param {string} path\n * @private\n */\n\nfunction matchLayer(layer, path) {\n  try {\n    return layer.match(path);\n  } catch (err) {\n    return err;\n  }\n}\n\n// merge params with parent params\nfunction mergeParams(params, parent) {\n  if (typeof parent !== 'object' || !parent) {\n    return params;\n  }\n\n  // make copy of parent for base\n  var obj = mixin({}, parent);\n\n  // simple non-numeric merging\n  if (!(0 in params) || !(0 in parent)) {\n    return mixin(obj, params);\n  }\n\n  var i = 0;\n  var o = 0;\n\n  // determine numeric gaps\n  while (i in params) {\n    i++;\n  }\n\n  while (o in parent) {\n    o++;\n  }\n\n  // offset numeric indices in params before merge\n  for (i--; i >= 0; i--) {\n    params[i + o] = params[i];\n\n    // create holes for the merge when necessary\n    if (i < o) {\n      delete params[i];\n    }\n  }\n\n  return mixin(obj, params);\n}\n\n// restore obj props after function\nfunction restore(fn, obj) {\n  var props = new Array(arguments.length - 2);\n  var vals = new Array(arguments.length - 2);\n\n  for (var i = 0; i < props.length; i++) {\n    props[i] = arguments[i + 2];\n    vals[i] = obj[props[i]];\n  }\n\n  return function () {\n    // restore vals\n    for (var i = 0; i < props.length; i++) {\n      obj[props[i]] = vals[i];\n    }\n\n    return fn.apply(this, arguments);\n  };\n}\n\n// send an OPTIONS response\nfunction sendOptionsResponse(res, options, next) {\n  try {\n    var body = options.join(',');\n    res.set('Allow', body);\n    res.send(body);\n  } catch (err) {\n    next(err);\n  }\n}\n\n// wrap a function\nfunction wrap(old, fn) {\n  return function proxy() {\n    var args = new Array(arguments.length + 1);\n\n    args[0] = old;\n    for (var i = 0, len = arguments.length; i < len; i++) {\n      args[i + 1] = arguments[i];\n    }\n\n    fn.apply(this, args);\n  };\n}\n","/*!\n * express\n * Copyright(c) 2009-2013 TJ Holowaychuk\n * Copyright(c) 2013 Roman Shtylman\n * Copyright(c) 2014-2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict';\n\n/**\n * Module dependencies.\n * @private\n */\n\nvar pathRegexp = require('path-to-regexp');\nvar debug = require('debug')('express:router:layer');\n\n/**\n * Module variables.\n * @private\n */\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = Layer;\n\nfunction Layer(path, options, fn) {\n  if (!(this instanceof Layer)) {\n    return new Layer(path, options, fn);\n  }\n\n  debug('new %o', path)\n  var opts = options || {};\n\n  this.handle = fn;\n  this.name = fn.name || '<anonymous>';\n  this.params = undefined;\n  this.path = undefined;\n  this.regexp = pathRegexp(path, this.keys = [], opts);\n\n  // set fast path flags\n  this.regexp.fast_star = path === '*'\n  this.regexp.fast_slash = path === '/' && opts.end === false\n}\n\n/**\n * Handle the error for the layer.\n *\n * @param {Error} error\n * @param {Request} req\n * @param {Response} res\n * @param {function} next\n * @api private\n */\n\nLayer.prototype.handle_error = function handle_error(error, req, res, next) {\n  var fn = this.handle;\n\n  if (fn.length !== 4) {\n    // not a standard error handler\n    return next(error);\n  }\n\n  try {\n    fn(error, req, res, next);\n  } catch (err) {\n    next(err);\n  }\n};\n\n/**\n * Handle the request for the layer.\n *\n * @param {Request} req\n * @param {Response} res\n * @param {function} next\n * @api private\n */\n\nLayer.prototype.handle_request = function handle(req, res, next) {\n  var fn = this.handle;\n\n  if (fn.length > 3) {\n    // not a standard request handler\n    return next();\n  }\n\n  try {\n    fn(req, res, next);\n  } catch (err) {\n    next(err);\n  }\n};\n\n/**\n * Check if this route matches `path`, if so\n * populate `.params`.\n *\n * @param {String} path\n * @return {Boolean}\n * @api private\n */\n\nLayer.prototype.match = function match(path) {\n  var match\n\n  if (path != null) {\n    // fast path non-ending match for / (any path matches)\n    if (this.regexp.fast_slash) {\n      this.params = {}\n      this.path = ''\n      return true\n    }\n\n    // fast path for * (everything matched in a param)\n    if (this.regexp.fast_star) {\n      this.params = {'0': decode_param(path)}\n      this.path = path\n      return true\n    }\n\n    // match the path\n    match = this.regexp.exec(path)\n  }\n\n  if (!match) {\n    this.params = undefined;\n    this.path = undefined;\n    return false;\n  }\n\n  // store values\n  this.params = {};\n  this.path = match[0]\n\n  var keys = this.keys;\n  var params = this.params;\n\n  for (var i = 1; i < match.length; i++) {\n    var key = keys[i - 1];\n    var prop = key.name;\n    var val = decode_param(match[i])\n\n    if (val !== undefined || !(hasOwnProperty.call(params, prop))) {\n      params[prop] = val;\n    }\n  }\n\n  return true;\n};\n\n/**\n * Decode param value.\n *\n * @param {string} val\n * @return {string}\n * @private\n */\n\nfunction decode_param(val) {\n  if (typeof val !== 'string' || val.length === 0) {\n    return val;\n  }\n\n  try {\n    return decodeURIComponent(val);\n  } catch (err) {\n    if (err instanceof URIError) {\n      err.message = 'Failed to decode param \\'' + val + '\\'';\n      err.status = err.statusCode = 400;\n    }\n\n    throw err;\n  }\n}\n","/*!\n * express\n * Copyright(c) 2009-2013 TJ Holowaychuk\n * Copyright(c) 2013 Roman Shtylman\n * Copyright(c) 2014-2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict';\n\n/**\n * Module dependencies.\n * @private\n */\n\nvar debug = require('debug')('express:router:route');\nvar flatten = require('array-flatten');\nvar Layer = require('./layer');\nvar methods = require('methods');\n\n/**\n * Module variables.\n * @private\n */\n\nvar slice = Array.prototype.slice;\nvar toString = Object.prototype.toString;\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = Route;\n\n/**\n * Initialize `Route` with the given `path`,\n *\n * @param {String} path\n * @public\n */\n\nfunction Route(path) {\n  this.path = path;\n  this.stack = [];\n\n  debug('new %o', path)\n\n  // route handlers for various http methods\n  this.methods = {};\n}\n\n/**\n * Determine if the route handles a given method.\n * @private\n */\n\nRoute.prototype._handles_method = function _handles_method(method) {\n  if (this.methods._all) {\n    return true;\n  }\n\n  var name = method.toLowerCase();\n\n  if (name === 'head' && !this.methods['head']) {\n    name = 'get';\n  }\n\n  return Boolean(this.methods[name]);\n};\n\n/**\n * @return {Array} supported HTTP methods\n * @private\n */\n\nRoute.prototype._options = function _options() {\n  var methods = Object.keys(this.methods);\n\n  // append automatic head\n  if (this.methods.get && !this.methods.head) {\n    methods.push('head');\n  }\n\n  for (var i = 0; i < methods.length; i++) {\n    // make upper case\n    methods[i] = methods[i].toUpperCase();\n  }\n\n  return methods;\n};\n\n/**\n * dispatch req, res into this route\n * @private\n */\n\nRoute.prototype.dispatch = function dispatch(req, res, done) {\n  var idx = 0;\n  var stack = this.stack;\n  var sync = 0\n\n  if (stack.length === 0) {\n    return done();\n  }\n\n  var method = req.method.toLowerCase();\n  if (method === 'head' && !this.methods['head']) {\n    method = 'get';\n  }\n\n  req.route = this;\n\n  next();\n\n  function next(err) {\n    // signal to exit route\n    if (err && err === 'route') {\n      return done();\n    }\n\n    // signal to exit router\n    if (err && err === 'router') {\n      return done(err)\n    }\n\n    var layer = stack[idx++];\n    if (!layer) {\n      return done(err);\n    }\n\n    // max sync stack\n    if (++sync > 100) {\n      return setImmediate(next, err)\n    }\n\n    if (layer.method && layer.method !== method) {\n      return next(err);\n    }\n\n    if (err) {\n      layer.handle_error(err, req, res, next);\n    } else {\n      layer.handle_request(req, res, next);\n    }\n\n    sync = 0\n  }\n};\n\n/**\n * Add a handler for all HTTP verbs to this route.\n *\n * Behaves just like middleware and can respond or call `next`\n * to continue processing.\n *\n * You can use multiple `.all` call to add multiple handlers.\n *\n *   function check_something(req, res, next){\n *     next();\n *   };\n *\n *   function validate_user(req, res, next){\n *     next();\n *   };\n *\n *   route\n *   .all(validate_user)\n *   .all(check_something)\n *   .get(function(req, res, next){\n *     res.send('hello world');\n *   });\n *\n * @param {function} handler\n * @return {Route} for chaining\n * @api public\n */\n\nRoute.prototype.all = function all() {\n  var handles = flatten(slice.call(arguments));\n\n  for (var i = 0; i < handles.length; i++) {\n    var handle = handles[i];\n\n    if (typeof handle !== 'function') {\n      var type = toString.call(handle);\n      var msg = 'Route.all() requires a callback function but got a ' + type\n      throw new TypeError(msg);\n    }\n\n    var layer = Layer('/', {}, handle);\n    layer.method = undefined;\n\n    this.methods._all = true;\n    this.stack.push(layer);\n  }\n\n  return this;\n};\n\nmethods.forEach(function(method){\n  Route.prototype[method] = function(){\n    var handles = flatten(slice.call(arguments));\n\n    for (var i = 0; i < handles.length; i++) {\n      var handle = handles[i];\n\n      if (typeof handle !== 'function') {\n        var type = toString.call(handle);\n        var msg = 'Route.' + method + '() requires a callback function but got a ' + type\n        throw new Error(msg);\n      }\n\n      debug('%s %o', method, this.path)\n\n      var layer = Layer('/', {}, handle);\n      layer.method = method;\n\n      this.methods[method] = true;\n      this.stack.push(layer);\n    }\n\n    return this;\n  };\n});\n","/*!\n * express\n * Copyright(c) 2009-2013 TJ Holowaychuk\n * Copyright(c) 2014-2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict';\n\n/**\n * Module dependencies.\n * @api private\n */\n\nvar Buffer = require('safe-buffer').Buffer\nvar contentDisposition = require('content-disposition');\nvar contentType = require('content-type');\nvar deprecate = require('depd')('express');\nvar flatten = require('array-flatten');\nvar mime = require('send').mime;\nvar etag = require('etag');\nvar proxyaddr = require('proxy-addr');\nvar qs = require('qs');\nvar querystring = require('querystring');\n\n/**\n * Return strong ETag for `body`.\n *\n * @param {String|Buffer} body\n * @param {String} [encoding]\n * @return {String}\n * @api private\n */\n\nexports.etag = createETagGenerator({ weak: false })\n\n/**\n * Return weak ETag for `body`.\n *\n * @param {String|Buffer} body\n * @param {String} [encoding]\n * @return {String}\n * @api private\n */\n\nexports.wetag = createETagGenerator({ weak: true })\n\n/**\n * Check if `path` looks absolute.\n *\n * @param {String} path\n * @return {Boolean}\n * @api private\n */\n\nexports.isAbsolute = function(path){\n  if ('/' === path[0]) return true;\n  if (':' === path[1] && ('\\\\' === path[2] || '/' === path[2])) return true; // Windows device path\n  if ('\\\\\\\\' === path.substring(0, 2)) return true; // Microsoft Azure absolute path\n};\n\n/**\n * Flatten the given `arr`.\n *\n * @param {Array} arr\n * @return {Array}\n * @api private\n */\n\nexports.flatten = deprecate.function(flatten,\n  'utils.flatten: use array-flatten npm module instead');\n\n/**\n * Normalize the given `type`, for example \"html\" becomes \"text/html\".\n *\n * @param {String} type\n * @return {Object}\n * @api private\n */\n\nexports.normalizeType = function(type){\n  return ~type.indexOf('/')\n    ? acceptParams(type)\n    : { value: mime.lookup(type), params: {} };\n};\n\n/**\n * Normalize `types`, for example \"html\" becomes \"text/html\".\n *\n * @param {Array} types\n * @return {Array}\n * @api private\n */\n\nexports.normalizeTypes = function(types){\n  var ret = [];\n\n  for (var i = 0; i < types.length; ++i) {\n    ret.push(exports.normalizeType(types[i]));\n  }\n\n  return ret;\n};\n\n/**\n * Generate Content-Disposition header appropriate for the filename.\n * non-ascii filenames are urlencoded and a filename* parameter is added\n *\n * @param {String} filename\n * @return {String}\n * @api private\n */\n\nexports.contentDisposition = deprecate.function(contentDisposition,\n  'utils.contentDisposition: use content-disposition npm module instead');\n\n/**\n * Parse accept params `str` returning an\n * object with `.value`, `.quality` and `.params`.\n * also includes `.originalIndex` for stable sorting\n *\n * @param {String} str\n * @param {Number} index\n * @return {Object}\n * @api private\n */\n\nfunction acceptParams(str, index) {\n  var parts = str.split(/ *; */);\n  var ret = { value: parts[0], quality: 1, params: {}, originalIndex: index };\n\n  for (var i = 1; i < parts.length; ++i) {\n    var pms = parts[i].split(/ *= */);\n    if ('q' === pms[0]) {\n      ret.quality = parseFloat(pms[1]);\n    } else {\n      ret.params[pms[0]] = pms[1];\n    }\n  }\n\n  return ret;\n}\n\n/**\n * Compile \"etag\" value to function.\n *\n * @param  {Boolean|String|Function} val\n * @return {Function}\n * @api private\n */\n\nexports.compileETag = function(val) {\n  var fn;\n\n  if (typeof val === 'function') {\n    return val;\n  }\n\n  switch (val) {\n    case true:\n    case 'weak':\n      fn = exports.wetag;\n      break;\n    case false:\n      break;\n    case 'strong':\n      fn = exports.etag;\n      break;\n    default:\n      throw new TypeError('unknown value for etag function: ' + val);\n  }\n\n  return fn;\n}\n\n/**\n * Compile \"query parser\" value to function.\n *\n * @param  {String|Function} val\n * @return {Function}\n * @api private\n */\n\nexports.compileQueryParser = function compileQueryParser(val) {\n  var fn;\n\n  if (typeof val === 'function') {\n    return val;\n  }\n\n  switch (val) {\n    case true:\n    case 'simple':\n      fn = querystring.parse;\n      break;\n    case false:\n      fn = newObject;\n      break;\n    case 'extended':\n      fn = parseExtendedQueryString;\n      break;\n    default:\n      throw new TypeError('unknown value for query parser function: ' + val);\n  }\n\n  return fn;\n}\n\n/**\n * Compile \"proxy trust\" value to function.\n *\n * @param  {Boolean|String|Number|Array|Function} val\n * @return {Function}\n * @api private\n */\n\nexports.compileTrust = function(val) {\n  if (typeof val === 'function') return val;\n\n  if (val === true) {\n    // Support plain true/false\n    return function(){ return true };\n  }\n\n  if (typeof val === 'number') {\n    // Support trusting hop count\n    return function(a, i){ return i < val };\n  }\n\n  if (typeof val === 'string') {\n    // Support comma-separated values\n    val = val.split(',')\n      .map(function (v) { return v.trim() })\n  }\n\n  return proxyaddr.compile(val || []);\n}\n\n/**\n * Set the charset in a given Content-Type string.\n *\n * @param {String} type\n * @param {String} charset\n * @return {String}\n * @api private\n */\n\nexports.setCharset = function setCharset(type, charset) {\n  if (!type || !charset) {\n    return type;\n  }\n\n  // parse type\n  var parsed = contentType.parse(type);\n\n  // set charset\n  parsed.parameters.charset = charset;\n\n  // format type\n  return contentType.format(parsed);\n};\n\n/**\n * Create an ETag generator function, generating ETags with\n * the given options.\n *\n * @param {object} options\n * @return {function}\n * @private\n */\n\nfunction createETagGenerator (options) {\n  return function generateETag (body, encoding) {\n    var buf = !Buffer.isBuffer(body)\n      ? Buffer.from(body, encoding)\n      : body\n\n    return etag(buf, options)\n  }\n}\n\n/**\n * Parse an extended query string with qs.\n *\n * @return {Object}\n * @private\n */\n\nfunction parseExtendedQueryString(str) {\n  return qs.parse(str, {\n    allowPrototypes: true\n  });\n}\n\n/**\n * Return new empty object.\n *\n * @return {Object}\n * @api private\n */\n\nfunction newObject() {\n  return {};\n}\n","/*!\n * express\n * Copyright(c) 2009-2013 TJ Holowaychuk\n * Copyright(c) 2013 Roman Shtylman\n * Copyright(c) 2014-2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict';\n\n/**\n * Module dependencies.\n * @private\n */\n\nvar debug = require('debug')('express:view');\nvar path = require('path');\nvar fs = require('fs');\n\n/**\n * Module variables.\n * @private\n */\n\nvar dirname = path.dirname;\nvar basename = path.basename;\nvar extname = path.extname;\nvar join = path.join;\nvar resolve = path.resolve;\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = View;\n\n/**\n * Initialize a new `View` with the given `name`.\n *\n * Options:\n *\n *   - `defaultEngine` the default template engine name\n *   - `engines` template engine require() cache\n *   - `root` root path for view lookup\n *\n * @param {string} name\n * @param {object} options\n * @public\n */\n\nfunction View(name, options) {\n  var opts = options || {};\n\n  this.defaultEngine = opts.defaultEngine;\n  this.ext = extname(name);\n  this.name = name;\n  this.root = opts.root;\n\n  if (!this.ext && !this.defaultEngine) {\n    throw new Error('No default engine was specified and no extension was provided.');\n  }\n\n  var fileName = name;\n\n  if (!this.ext) {\n    // get extension from default engine name\n    this.ext = this.defaultEngine[0] !== '.'\n      ? '.' + this.defaultEngine\n      : this.defaultEngine;\n\n    fileName += this.ext;\n  }\n\n  if (!opts.engines[this.ext]) {\n    // load engine\n    var mod = this.ext.slice(1)\n    debug('require \"%s\"', mod)\n\n    // default engine export\n    var fn = require(mod).__express\n\n    if (typeof fn !== 'function') {\n      throw new Error('Module \"' + mod + '\" does not provide a view engine.')\n    }\n\n    opts.engines[this.ext] = fn\n  }\n\n  // store loaded engine\n  this.engine = opts.engines[this.ext];\n\n  // lookup path\n  this.path = this.lookup(fileName);\n}\n\n/**\n * Lookup view by the given `name`\n *\n * @param {string} name\n * @private\n */\n\nView.prototype.lookup = function lookup(name) {\n  var path;\n  var roots = [].concat(this.root);\n\n  debug('lookup \"%s\"', name);\n\n  for (var i = 0; i < roots.length && !path; i++) {\n    var root = roots[i];\n\n    // resolve the path\n    var loc = resolve(root, name);\n    var dir = dirname(loc);\n    var file = basename(loc);\n\n    // resolve the file\n    path = this.resolve(dir, file);\n  }\n\n  return path;\n};\n\n/**\n * Render with the given options.\n *\n * @param {object} options\n * @param {function} callback\n * @private\n */\n\nView.prototype.render = function render(options, callback) {\n  debug('render \"%s\"', this.path);\n  this.engine(this.path, options, callback);\n};\n\n/**\n * Resolve the file within the given directory.\n *\n * @param {string} dir\n * @param {string} file\n * @private\n */\n\nView.prototype.resolve = function resolve(dir, file) {\n  var ext = this.ext;\n\n  // <path>.<ext>\n  var path = join(dir, file);\n  var stat = tryStat(path);\n\n  if (stat && stat.isFile()) {\n    return path;\n  }\n\n  // <path>/index.<ext>\n  path = join(dir, basename(file, ext), 'index' + ext);\n  stat = tryStat(path);\n\n  if (stat && stat.isFile()) {\n    return path;\n  }\n};\n\n/**\n * Return a stat, maybe.\n *\n * @param {string} path\n * @return {fs.Stats}\n * @private\n */\n\nfunction tryStat(path) {\n  debug('stat \"%s\"', path);\n\n  try {\n    return fs.statSync(path);\n  } catch (e) {\n    return undefined;\n  }\n}\n","/**\n * This is the web browser implementation of `debug()`.\n *\n * Expose `debug()` as the module.\n */\n\nexports = module.exports = require('./debug');\nexports.log = log;\nexports.formatArgs = formatArgs;\nexports.save = save;\nexports.load = load;\nexports.useColors = useColors;\nexports.storage = 'undefined' != typeof chrome\n               && 'undefined' != typeof chrome.storage\n                  ? chrome.storage.local\n                  : localstorage();\n\n/**\n * Colors.\n */\n\nexports.colors = [\n  'lightseagreen',\n  'forestgreen',\n  'goldenrod',\n  'dodgerblue',\n  'darkorchid',\n  'crimson'\n];\n\n/**\n * Currently only WebKit-based Web Inspectors, Firefox >= v31,\n * and the Firebug extension (any Firefox version) are known\n * to support \"%c\" CSS customizations.\n *\n * TODO: add a `localStorage` variable to explicitly enable/disable colors\n */\n\nfunction useColors() {\n  // NB: In an Electron preload script, document will be defined but not fully\n  // initialized. Since we know we're in Chrome, we'll just detect this case\n  // explicitly\n  if (typeof window !== 'undefined' && window.process && window.process.type === 'renderer') {\n    return true;\n  }\n\n  // is webkit? http://stackoverflow.com/a/16459606/376773\n  // document is undefined in react-native: https://github.com/facebook/react-native/pull/1632\n  return (typeof document !== 'undefined' && document.documentElement && document.documentElement.style && document.documentElement.style.WebkitAppearance) ||\n    // is firebug? http://stackoverflow.com/a/398120/376773\n    (typeof window !== 'undefined' && window.console && (window.console.firebug || (window.console.exception && window.console.table))) ||\n    // is firefox >= v31?\n    // https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages\n    (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/firefox\\/(\\d+)/) && parseInt(RegExp.$1, 10) >= 31) ||\n    // double check webkit in userAgent just in case we are in a worker\n    (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/applewebkit\\/(\\d+)/));\n}\n\n/**\n * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.\n */\n\nexports.formatters.j = function(v) {\n  try {\n    return JSON.stringify(v);\n  } catch (err) {\n    return '[UnexpectedJSONParseError]: ' + err.message;\n  }\n};\n\n\n/**\n * Colorize log arguments if enabled.\n *\n * @api public\n */\n\nfunction formatArgs(args) {\n  var useColors = this.useColors;\n\n  args[0] = (useColors ? '%c' : '')\n    + this.namespace\n    + (useColors ? ' %c' : ' ')\n    + args[0]\n    + (useColors ? '%c ' : ' ')\n    + '+' + exports.humanize(this.diff);\n\n  if (!useColors) return;\n\n  var c = 'color: ' + this.color;\n  args.splice(1, 0, c, 'color: inherit')\n\n  // the final \"%c\" is somewhat tricky, because there could be other\n  // arguments passed either before or after the %c, so we need to\n  // figure out the correct index to insert the CSS into\n  var index = 0;\n  var lastC = 0;\n  args[0].replace(/%[a-zA-Z%]/g, function(match) {\n    if ('%%' === match) return;\n    index++;\n    if ('%c' === match) {\n      // we only are interested in the *last* %c\n      // (the user may have provided their own)\n      lastC = index;\n    }\n  });\n\n  args.splice(lastC, 0, c);\n}\n\n/**\n * Invokes `console.log()` when available.\n * No-op when `console.log` is not a \"function\".\n *\n * @api public\n */\n\nfunction log() {\n  // this hackery is required for IE8/9, where\n  // the `console.log` function doesn't have 'apply'\n  return 'object' === typeof console\n    && console.log\n    && Function.prototype.apply.call(console.log, console, arguments);\n}\n\n/**\n * Save `namespaces`.\n *\n * @param {String} namespaces\n * @api private\n */\n\nfunction save(namespaces) {\n  try {\n    if (null == namespaces) {\n      exports.storage.removeItem('debug');\n    } else {\n      exports.storage.debug = namespaces;\n    }\n  } catch(e) {}\n}\n\n/**\n * Load `namespaces`.\n *\n * @return {String} returns the previously persisted debug modes\n * @api private\n */\n\nfunction load() {\n  var r;\n  try {\n    r = exports.storage.debug;\n  } catch(e) {}\n\n  // If debug isn't set in LS, and we're in Electron, try to load $DEBUG\n  if (!r && typeof process !== 'undefined' && 'env' in process) {\n    r = process.env.DEBUG;\n  }\n\n  return r;\n}\n\n/**\n * Enable namespaces listed in `localStorage.debug` initially.\n */\n\nexports.enable(load());\n\n/**\n * Localstorage attempts to return the localstorage.\n *\n * This is necessary because safari throws\n * when a user disables cookies/localstorage\n * and you attempt to access it.\n *\n * @return {LocalStorage}\n * @api private\n */\n\nfunction localstorage() {\n  try {\n    return window.localStorage;\n  } catch (e) {}\n}\n","\n/**\n * This is the common logic for both the Node.js and web browser\n * implementations of `debug()`.\n *\n * Expose `debug()` as the module.\n */\n\nexports = module.exports = createDebug.debug = createDebug['default'] = createDebug;\nexports.coerce = coerce;\nexports.disable = disable;\nexports.enable = enable;\nexports.enabled = enabled;\nexports.humanize = require('ms');\n\n/**\n * The currently active debug mode names, and names to skip.\n */\n\nexports.names = [];\nexports.skips = [];\n\n/**\n * Map of special \"%n\" handling functions, for the debug \"format\" argument.\n *\n * Valid key names are a single, lower or upper-case letter, i.e. \"n\" and \"N\".\n */\n\nexports.formatters = {};\n\n/**\n * Previous log timestamp.\n */\n\nvar prevTime;\n\n/**\n * Select a color.\n * @param {String} namespace\n * @return {Number}\n * @api private\n */\n\nfunction selectColor(namespace) {\n  var hash = 0, i;\n\n  for (i in namespace) {\n    hash  = ((hash << 5) - hash) + namespace.charCodeAt(i);\n    hash |= 0; // Convert to 32bit integer\n  }\n\n  return exports.colors[Math.abs(hash) % exports.colors.length];\n}\n\n/**\n * Create a debugger with the given `namespace`.\n *\n * @param {String} namespace\n * @return {Function}\n * @api public\n */\n\nfunction createDebug(namespace) {\n\n  function debug() {\n    // disabled?\n    if (!debug.enabled) return;\n\n    var self = debug;\n\n    // set `diff` timestamp\n    var curr = +new Date();\n    var ms = curr - (prevTime || curr);\n    self.diff = ms;\n    self.prev = prevTime;\n    self.curr = curr;\n    prevTime = curr;\n\n    // turn the `arguments` into a proper Array\n    var args = new Array(arguments.length);\n    for (var i = 0; i < args.length; i++) {\n      args[i] = arguments[i];\n    }\n\n    args[0] = exports.coerce(args[0]);\n\n    if ('string' !== typeof args[0]) {\n      // anything else let's inspect with %O\n      args.unshift('%O');\n    }\n\n    // apply any `formatters` transformations\n    var index = 0;\n    args[0] = args[0].replace(/%([a-zA-Z%])/g, function(match, format) {\n      // if we encounter an escaped % then don't increase the array index\n      if (match === '%%') return match;\n      index++;\n      var formatter = exports.formatters[format];\n      if ('function' === typeof formatter) {\n        var val = args[index];\n        match = formatter.call(self, val);\n\n        // now we need to remove `args[index]` since it's inlined in the `format`\n        args.splice(index, 1);\n        index--;\n      }\n      return match;\n    });\n\n    // apply env-specific formatting (colors, etc.)\n    exports.formatArgs.call(self, args);\n\n    var logFn = debug.log || exports.log || console.log.bind(console);\n    logFn.apply(self, args);\n  }\n\n  debug.namespace = namespace;\n  debug.enabled = exports.enabled(namespace);\n  debug.useColors = exports.useColors();\n  debug.color = selectColor(namespace);\n\n  // env-specific initialization logic for debug instances\n  if ('function' === typeof exports.init) {\n    exports.init(debug);\n  }\n\n  return debug;\n}\n\n/**\n * Enables a debug mode by namespaces. This can include modes\n * separated by a colon and wildcards.\n *\n * @param {String} namespaces\n * @api public\n */\n\nfunction enable(namespaces) {\n  exports.save(namespaces);\n\n  exports.names = [];\n  exports.skips = [];\n\n  var split = (typeof namespaces === 'string' ? namespaces : '').split(/[\\s,]+/);\n  var len = split.length;\n\n  for (var i = 0; i < len; i++) {\n    if (!split[i]) continue; // ignore empty strings\n    namespaces = split[i].replace(/\\*/g, '.*?');\n    if (namespaces[0] === '-') {\n      exports.skips.push(new RegExp('^' + namespaces.substr(1) + '$'));\n    } else {\n      exports.names.push(new RegExp('^' + namespaces + '$'));\n    }\n  }\n}\n\n/**\n * Disable debug output.\n *\n * @api public\n */\n\nfunction disable() {\n  exports.enable('');\n}\n\n/**\n * Returns true if the given mode name is enabled, false otherwise.\n *\n * @param {String} name\n * @return {Boolean}\n * @api public\n */\n\nfunction enabled(name) {\n  var i, len;\n  for (i = 0, len = exports.skips.length; i < len; i++) {\n    if (exports.skips[i].test(name)) {\n      return false;\n    }\n  }\n  for (i = 0, len = exports.names.length; i < len; i++) {\n    if (exports.names[i].test(name)) {\n      return true;\n    }\n  }\n  return false;\n}\n\n/**\n * Coerce `val`.\n *\n * @param {Mixed} val\n * @return {Mixed}\n * @api private\n */\n\nfunction coerce(val) {\n  if (val instanceof Error) return val.stack || val.message;\n  return val;\n}\n","/**\n * Detect Electron renderer process, which is node, but we should\n * treat as a browser.\n */\n\nif (typeof process !== 'undefined' && process.type === 'renderer') {\n  module.exports = require('./browser.js');\n} else {\n  module.exports = require('./node.js');\n}\n","/**\n * Module dependencies.\n */\n\nvar tty = require('tty');\nvar util = require('util');\n\n/**\n * This is the Node.js implementation of `debug()`.\n *\n * Expose `debug()` as the module.\n */\n\nexports = module.exports = require('./debug');\nexports.init = init;\nexports.log = log;\nexports.formatArgs = formatArgs;\nexports.save = save;\nexports.load = load;\nexports.useColors = useColors;\n\n/**\n * Colors.\n */\n\nexports.colors = [6, 2, 3, 4, 5, 1];\n\n/**\n * Build up the default `inspectOpts` object from the environment variables.\n *\n *   $ DEBUG_COLORS=no DEBUG_DEPTH=10 DEBUG_SHOW_HIDDEN=enabled node script.js\n */\n\nexports.inspectOpts = Object.keys(process.env).filter(function (key) {\n  return /^debug_/i.test(key);\n}).reduce(function (obj, key) {\n  // camel-case\n  var prop = key\n    .substring(6)\n    .toLowerCase()\n    .replace(/_([a-z])/g, function (_, k) { return k.toUpperCase() });\n\n  // coerce string value into JS value\n  var val = process.env[key];\n  if (/^(yes|on|true|enabled)$/i.test(val)) val = true;\n  else if (/^(no|off|false|disabled)$/i.test(val)) val = false;\n  else if (val === 'null') val = null;\n  else val = Number(val);\n\n  obj[prop] = val;\n  return obj;\n}, {});\n\n/**\n * The file descriptor to write the `debug()` calls to.\n * Set the `DEBUG_FD` env variable to override with another value. i.e.:\n *\n *   $ DEBUG_FD=3 node script.js 3>debug.log\n */\n\nvar fd = parseInt(process.env.DEBUG_FD, 10) || 2;\n\nif (1 !== fd && 2 !== fd) {\n  util.deprecate(function(){}, 'except for stderr(2) and stdout(1), any other usage of DEBUG_FD is deprecated. Override debug.log if you want to use a different log function (https://git.io/debug_fd)')()\n}\n\nvar stream = 1 === fd ? process.stdout :\n             2 === fd ? process.stderr :\n             createWritableStdioStream(fd);\n\n/**\n * Is stdout a TTY? Colored output is enabled when `true`.\n */\n\nfunction useColors() {\n  return 'colors' in exports.inspectOpts\n    ? Boolean(exports.inspectOpts.colors)\n    : tty.isatty(fd);\n}\n\n/**\n * Map %o to `util.inspect()`, all on a single line.\n */\n\nexports.formatters.o = function(v) {\n  this.inspectOpts.colors = this.useColors;\n  return util.inspect(v, this.inspectOpts)\n    .split('\\n').map(function(str) {\n      return str.trim()\n    }).join(' ');\n};\n\n/**\n * Map %o to `util.inspect()`, allowing multiple lines if needed.\n */\n\nexports.formatters.O = function(v) {\n  this.inspectOpts.colors = this.useColors;\n  return util.inspect(v, this.inspectOpts);\n};\n\n/**\n * Adds ANSI color escape codes if enabled.\n *\n * @api public\n */\n\nfunction formatArgs(args) {\n  var name = this.namespace;\n  var useColors = this.useColors;\n\n  if (useColors) {\n    var c = this.color;\n    var prefix = '  \\u001b[3' + c + ';1m' + name + ' ' + '\\u001b[0m';\n\n    args[0] = prefix + args[0].split('\\n').join('\\n' + prefix);\n    args.push('\\u001b[3' + c + 'm+' + exports.humanize(this.diff) + '\\u001b[0m');\n  } else {\n    args[0] = new Date().toUTCString()\n      + ' ' + name + ' ' + args[0];\n  }\n}\n\n/**\n * Invokes `util.format()` with the specified arguments and writes to `stream`.\n */\n\nfunction log() {\n  return stream.write(util.format.apply(util, arguments) + '\\n');\n}\n\n/**\n * Save `namespaces`.\n *\n * @param {String} namespaces\n * @api private\n */\n\nfunction save(namespaces) {\n  if (null == namespaces) {\n    // If you set a process.env field to null or undefined, it gets cast to the\n    // string 'null' or 'undefined'. Just delete instead.\n    delete process.env.DEBUG;\n  } else {\n    process.env.DEBUG = namespaces;\n  }\n}\n\n/**\n * Load `namespaces`.\n *\n * @return {String} returns the previously persisted debug modes\n * @api private\n */\n\nfunction load() {\n  return process.env.DEBUG;\n}\n\n/**\n * Copied from `node/src/node.js`.\n *\n * XXX: It's lame that node doesn't expose this API out-of-the-box. It also\n * relies on the undocumented `tty_wrap.guessHandleType()` which is also lame.\n */\n\nfunction createWritableStdioStream (fd) {\n  var stream;\n  var tty_wrap = process.binding('tty_wrap');\n\n  // Note stream._type is used for test-module-load-list.js\n\n  switch (tty_wrap.guessHandleType(fd)) {\n    case 'TTY':\n      stream = new tty.WriteStream(fd);\n      stream._type = 'tty';\n\n      // Hack to have stream not keep the event loop alive.\n      // See https://github.com/joyent/node/issues/1726\n      if (stream._handle && stream._handle.unref) {\n        stream._handle.unref();\n      }\n      break;\n\n    case 'FILE':\n      var fs = require('fs');\n      stream = new fs.SyncWriteStream(fd, { autoClose: false });\n      stream._type = 'fs';\n      break;\n\n    case 'PIPE':\n    case 'TCP':\n      var net = require('net');\n      stream = new net.Socket({\n        fd: fd,\n        readable: false,\n        writable: true\n      });\n\n      // FIXME Should probably have an option in net.Socket to create a\n      // stream from an existing fd which is writable only. But for now\n      // we'll just add this hack and set the `readable` member to false.\n      // Test: ./node test/fixtures/echo.js < /etc/passwd\n      stream.readable = false;\n      stream.read = null;\n      stream._type = 'pipe';\n\n      // FIXME Hack to have stream not keep the event loop alive.\n      // See https://github.com/joyent/node/issues/1726\n      if (stream._handle && stream._handle.unref) {\n        stream._handle.unref();\n      }\n      break;\n\n    default:\n      // Probably an error on in uv_guess_handle()\n      throw new Error('Implement me. Unknown stream file type!');\n  }\n\n  // For supporting legacy API we put the FD here.\n  stream.fd = fd;\n\n  stream._isStdio = true;\n\n  return stream;\n}\n\n/**\n * Init logic for `debug` instances.\n *\n * Create a new `inspectOpts` object in case `useColors` is set\n * differently for a particular `debug` instance.\n */\n\nfunction init (debug) {\n  debug.inspectOpts = {};\n\n  var keys = Object.keys(exports.inspectOpts);\n  for (var i = 0; i < keys.length; i++) {\n    debug.inspectOpts[keys[i]] = exports.inspectOpts[keys[i]];\n  }\n}\n\n/**\n * Enable namespaces listed in `process.env.DEBUG` initially.\n */\n\nexports.enable(load());\n","/**\n * Helpers.\n */\n\nvar s = 1000;\nvar m = s * 60;\nvar h = m * 60;\nvar d = h * 24;\nvar y = d * 365.25;\n\n/**\n * Parse or format the given `val`.\n *\n * Options:\n *\n *  - `long` verbose formatting [false]\n *\n * @param {String|Number} val\n * @param {Object} [options]\n * @throws {Error} throw an error if val is not a non-empty string or a number\n * @return {String|Number}\n * @api public\n */\n\nmodule.exports = function(val, options) {\n  options = options || {};\n  var type = typeof val;\n  if (type === 'string' && val.length > 0) {\n    return parse(val);\n  } else if (type === 'number' && isNaN(val) === false) {\n    return options.long ? fmtLong(val) : fmtShort(val);\n  }\n  throw new Error(\n    'val is not a non-empty string or a valid number. val=' +\n      JSON.stringify(val)\n  );\n};\n\n/**\n * Parse the given `str` and return milliseconds.\n *\n * @param {String} str\n * @return {Number}\n * @api private\n */\n\nfunction parse(str) {\n  str = String(str);\n  if (str.length > 100) {\n    return;\n  }\n  var match = /^((?:\\d+)?\\.?\\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|years?|yrs?|y)?$/i.exec(\n    str\n  );\n  if (!match) {\n    return;\n  }\n  var n = parseFloat(match[1]);\n  var type = (match[2] || 'ms').toLowerCase();\n  switch (type) {\n    case 'years':\n    case 'year':\n    case 'yrs':\n    case 'yr':\n    case 'y':\n      return n * y;\n    case 'days':\n    case 'day':\n    case 'd':\n      return n * d;\n    case 'hours':\n    case 'hour':\n    case 'hrs':\n    case 'hr':\n    case 'h':\n      return n * h;\n    case 'minutes':\n    case 'minute':\n    case 'mins':\n    case 'min':\n    case 'm':\n      return n * m;\n    case 'seconds':\n    case 'second':\n    case 'secs':\n    case 'sec':\n    case 's':\n      return n * s;\n    case 'milliseconds':\n    case 'millisecond':\n    case 'msecs':\n    case 'msec':\n    case 'ms':\n      return n;\n    default:\n      return undefined;\n  }\n}\n\n/**\n * Short format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtShort(ms) {\n  if (ms >= d) {\n    return Math.round(ms / d) + 'd';\n  }\n  if (ms >= h) {\n    return Math.round(ms / h) + 'h';\n  }\n  if (ms >= m) {\n    return Math.round(ms / m) + 'm';\n  }\n  if (ms >= s) {\n    return Math.round(ms / s) + 's';\n  }\n  return ms + 'ms';\n}\n\n/**\n * Long format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtLong(ms) {\n  return plural(ms, d, 'day') ||\n    plural(ms, h, 'hour') ||\n    plural(ms, m, 'minute') ||\n    plural(ms, s, 'second') ||\n    ms + ' ms';\n}\n\n/**\n * Pluralization helper.\n */\n\nfunction plural(ms, n, name) {\n  if (ms < n) {\n    return;\n  }\n  if (ms < n * 1.5) {\n    return Math.floor(ms / n) + ' ' + name;\n  }\n  return Math.ceil(ms / n) + ' ' + name + 's';\n}\n","/*! safe-buffer. MIT License. Feross Aboukhadijeh <https://feross.org/opensource> */\n/* eslint-disable node/no-deprecated-api */\nvar buffer = require('buffer')\nvar Buffer = buffer.Buffer\n\n// alternative to using Object.keys for old browsers\nfunction copyProps (src, dst) {\n  for (var key in src) {\n    dst[key] = src[key]\n  }\n}\nif (Buffer.from && Buffer.alloc && Buffer.allocUnsafe && Buffer.allocUnsafeSlow) {\n  module.exports = buffer\n} else {\n  // Copy properties from require('buffer')\n  copyProps(buffer, exports)\n  exports.Buffer = SafeBuffer\n}\n\nfunction SafeBuffer (arg, encodingOrOffset, length) {\n  return Buffer(arg, encodingOrOffset, length)\n}\n\nSafeBuffer.prototype = Object.create(Buffer.prototype)\n\n// Copy static methods from Buffer\ncopyProps(Buffer, SafeBuffer)\n\nSafeBuffer.from = function (arg, encodingOrOffset, length) {\n  if (typeof arg === 'number') {\n    throw new TypeError('Argument must not be a number')\n  }\n  return Buffer(arg, encodingOrOffset, length)\n}\n\nSafeBuffer.alloc = function (size, fill, encoding) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  var buf = Buffer(size)\n  if (fill !== undefined) {\n    if (typeof encoding === 'string') {\n      buf.fill(fill, encoding)\n    } else {\n      buf.fill(fill)\n    }\n  } else {\n    buf.fill(0)\n  }\n  return buf\n}\n\nSafeBuffer.allocUnsafe = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return Buffer(size)\n}\n\nSafeBuffer.allocUnsafeSlow = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return buffer.SlowBuffer(size)\n}\n","/*!\n * finalhandler\n * Copyright(c) 2014-2022 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * Module dependencies.\n * @private\n */\n\nvar debug = require('debug')('finalhandler')\nvar encodeUrl = require('encodeurl')\nvar escapeHtml = require('escape-html')\nvar onFinished = require('on-finished')\nvar parseUrl = require('parseurl')\nvar statuses = require('statuses')\nvar unpipe = require('unpipe')\n\n/**\n * Module variables.\n * @private\n */\n\nvar DOUBLE_SPACE_REGEXP = /\\x20{2}/g\nvar NEWLINE_REGEXP = /\\n/g\n\n/* istanbul ignore next */\nvar defer = typeof setImmediate === 'function'\n  ? setImmediate\n  : function (fn) { process.nextTick(fn.bind.apply(fn, arguments)) }\nvar isFinished = onFinished.isFinished\n\n/**\n * Create a minimal HTML document.\n *\n * @param {string} message\n * @private\n */\n\nfunction createHtmlDocument (message) {\n  var body = escapeHtml(message)\n    .replace(NEWLINE_REGEXP, '<br>')\n    .replace(DOUBLE_SPACE_REGEXP, ' &nbsp;')\n\n  return '<!DOCTYPE html>\\n' +\n    '<html lang=\"en\">\\n' +\n    '<head>\\n' +\n    '<meta charset=\"utf-8\">\\n' +\n    '<title>Error</title>\\n' +\n    '</head>\\n' +\n    '<body>\\n' +\n    '<pre>' + body + '</pre>\\n' +\n    '</body>\\n' +\n    '</html>\\n'\n}\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = finalhandler\n\n/**\n * Create a function to handle the final response.\n *\n * @param {Request} req\n * @param {Response} res\n * @param {Object} [options]\n * @return {Function}\n * @public\n */\n\nfunction finalhandler (req, res, options) {\n  var opts = options || {}\n\n  // get environment\n  var env = opts.env || process.env.NODE_ENV || 'development'\n\n  // get error callback\n  var onerror = opts.onerror\n\n  return function (err) {\n    var headers\n    var msg\n    var status\n\n    // ignore 404 on in-flight response\n    if (!err && headersSent(res)) {\n      debug('cannot 404 after headers sent')\n      return\n    }\n\n    // unhandled error\n    if (err) {\n      // respect status code from error\n      status = getErrorStatusCode(err)\n\n      if (status === undefined) {\n        // fallback to status code on response\n        status = getResponseStatusCode(res)\n      } else {\n        // respect headers from error\n        headers = getErrorHeaders(err)\n      }\n\n      // get error message\n      msg = getErrorMessage(err, status, env)\n    } else {\n      // not found\n      status = 404\n      msg = 'Cannot ' + req.method + ' ' + encodeUrl(getResourceName(req))\n    }\n\n    debug('default %s', status)\n\n    // schedule onerror callback\n    if (err && onerror) {\n      defer(onerror, err, req, res)\n    }\n\n    // cannot actually respond\n    if (headersSent(res)) {\n      debug('cannot %d after headers sent', status)\n      req.socket.destroy()\n      return\n    }\n\n    // send response\n    send(req, res, status, headers, msg)\n  }\n}\n\n/**\n * Get headers from Error object.\n *\n * @param {Error} err\n * @return {object}\n * @private\n */\n\nfunction getErrorHeaders (err) {\n  if (!err.headers || typeof err.headers !== 'object') {\n    return undefined\n  }\n\n  var headers = Object.create(null)\n  var keys = Object.keys(err.headers)\n\n  for (var i = 0; i < keys.length; i++) {\n    var key = keys[i]\n    headers[key] = err.headers[key]\n  }\n\n  return headers\n}\n\n/**\n * Get message from Error object, fallback to status message.\n *\n * @param {Error} err\n * @param {number} status\n * @param {string} env\n * @return {string}\n * @private\n */\n\nfunction getErrorMessage (err, status, env) {\n  var msg\n\n  if (env !== 'production') {\n    // use err.stack, which typically includes err.message\n    msg = err.stack\n\n    // fallback to err.toString() when possible\n    if (!msg && typeof err.toString === 'function') {\n      msg = err.toString()\n    }\n  }\n\n  return msg || statuses.message[status]\n}\n\n/**\n * Get status code from Error object.\n *\n * @param {Error} err\n * @return {number}\n * @private\n */\n\nfunction getErrorStatusCode (err) {\n  // check err.status\n  if (typeof err.status === 'number' && err.status >= 400 && err.status < 600) {\n    return err.status\n  }\n\n  // check err.statusCode\n  if (typeof err.statusCode === 'number' && err.statusCode >= 400 && err.statusCode < 600) {\n    return err.statusCode\n  }\n\n  return undefined\n}\n\n/**\n * Get resource name for the request.\n *\n * This is typically just the original pathname of the request\n * but will fallback to \"resource\" is that cannot be determined.\n *\n * @param {IncomingMessage} req\n * @return {string}\n * @private\n */\n\nfunction getResourceName (req) {\n  try {\n    return parseUrl.original(req).pathname\n  } catch (e) {\n    return 'resource'\n  }\n}\n\n/**\n * Get status code from response.\n *\n * @param {OutgoingMessage} res\n * @return {number}\n * @private\n */\n\nfunction getResponseStatusCode (res) {\n  var status = res.statusCode\n\n  // default status code to 500 if outside valid range\n  if (typeof status !== 'number' || status < 400 || status > 599) {\n    status = 500\n  }\n\n  return status\n}\n\n/**\n * Determine if the response headers have been sent.\n *\n * @param {object} res\n * @returns {boolean}\n * @private\n */\n\nfunction headersSent (res) {\n  return typeof res.headersSent !== 'boolean'\n    ? Boolean(res._header)\n    : res.headersSent\n}\n\n/**\n * Send response.\n *\n * @param {IncomingMessage} req\n * @param {OutgoingMessage} res\n * @param {number} status\n * @param {object} headers\n * @param {string} message\n * @private\n */\n\nfunction send (req, res, status, headers, message) {\n  function write () {\n    // response body\n    var body = createHtmlDocument(message)\n\n    // response status\n    res.statusCode = status\n    res.statusMessage = statuses.message[status]\n\n    // remove any content headers\n    res.removeHeader('Content-Encoding')\n    res.removeHeader('Content-Language')\n    res.removeHeader('Content-Range')\n\n    // response headers\n    setHeaders(res, headers)\n\n    // security headers\n    res.setHeader('Content-Security-Policy', \"default-src 'none'\")\n    res.setHeader('X-Content-Type-Options', 'nosniff')\n\n    // standard headers\n    res.setHeader('Content-Type', 'text/html; charset=utf-8')\n    res.setHeader('Content-Length', Buffer.byteLength(body, 'utf8'))\n\n    if (req.method === 'HEAD') {\n      res.end()\n      return\n    }\n\n    res.end(body, 'utf8')\n  }\n\n  if (isFinished(req)) {\n    write()\n    return\n  }\n\n  // unpipe everything from the request\n  unpipe(req)\n\n  // flush the request\n  onFinished(req, write)\n  req.resume()\n}\n\n/**\n * Set response headers from an object.\n *\n * @param {OutgoingMessage} res\n * @param {object} headers\n * @private\n */\n\nfunction setHeaders (res, headers) {\n  if (!headers) {\n    return\n  }\n\n  var keys = Object.keys(headers)\n  for (var i = 0; i < keys.length; i++) {\n    var key = keys[i]\n    res.setHeader(key, headers[key])\n  }\n}\n","/**\n * This is the web browser implementation of `debug()`.\n *\n * Expose `debug()` as the module.\n */\n\nexports = module.exports = require('./debug');\nexports.log = log;\nexports.formatArgs = formatArgs;\nexports.save = save;\nexports.load = load;\nexports.useColors = useColors;\nexports.storage = 'undefined' != typeof chrome\n               && 'undefined' != typeof chrome.storage\n                  ? chrome.storage.local\n                  : localstorage();\n\n/**\n * Colors.\n */\n\nexports.colors = [\n  'lightseagreen',\n  'forestgreen',\n  'goldenrod',\n  'dodgerblue',\n  'darkorchid',\n  'crimson'\n];\n\n/**\n * Currently only WebKit-based Web Inspectors, Firefox >= v31,\n * and the Firebug extension (any Firefox version) are known\n * to support \"%c\" CSS customizations.\n *\n * TODO: add a `localStorage` variable to explicitly enable/disable colors\n */\n\nfunction useColors() {\n  // NB: In an Electron preload script, document will be defined but not fully\n  // initialized. Since we know we're in Chrome, we'll just detect this case\n  // explicitly\n  if (typeof window !== 'undefined' && window.process && window.process.type === 'renderer') {\n    return true;\n  }\n\n  // is webkit? http://stackoverflow.com/a/16459606/376773\n  // document is undefined in react-native: https://github.com/facebook/react-native/pull/1632\n  return (typeof document !== 'undefined' && document.documentElement && document.documentElement.style && document.documentElement.style.WebkitAppearance) ||\n    // is firebug? http://stackoverflow.com/a/398120/376773\n    (typeof window !== 'undefined' && window.console && (window.console.firebug || (window.console.exception && window.console.table))) ||\n    // is firefox >= v31?\n    // https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages\n    (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/firefox\\/(\\d+)/) && parseInt(RegExp.$1, 10) >= 31) ||\n    // double check webkit in userAgent just in case we are in a worker\n    (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/applewebkit\\/(\\d+)/));\n}\n\n/**\n * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.\n */\n\nexports.formatters.j = function(v) {\n  try {\n    return JSON.stringify(v);\n  } catch (err) {\n    return '[UnexpectedJSONParseError]: ' + err.message;\n  }\n};\n\n\n/**\n * Colorize log arguments if enabled.\n *\n * @api public\n */\n\nfunction formatArgs(args) {\n  var useColors = this.useColors;\n\n  args[0] = (useColors ? '%c' : '')\n    + this.namespace\n    + (useColors ? ' %c' : ' ')\n    + args[0]\n    + (useColors ? '%c ' : ' ')\n    + '+' + exports.humanize(this.diff);\n\n  if (!useColors) return;\n\n  var c = 'color: ' + this.color;\n  args.splice(1, 0, c, 'color: inherit')\n\n  // the final \"%c\" is somewhat tricky, because there could be other\n  // arguments passed either before or after the %c, so we need to\n  // figure out the correct index to insert the CSS into\n  var index = 0;\n  var lastC = 0;\n  args[0].replace(/%[a-zA-Z%]/g, function(match) {\n    if ('%%' === match) return;\n    index++;\n    if ('%c' === match) {\n      // we only are interested in the *last* %c\n      // (the user may have provided their own)\n      lastC = index;\n    }\n  });\n\n  args.splice(lastC, 0, c);\n}\n\n/**\n * Invokes `console.log()` when available.\n * No-op when `console.log` is not a \"function\".\n *\n * @api public\n */\n\nfunction log() {\n  // this hackery is required for IE8/9, where\n  // the `console.log` function doesn't have 'apply'\n  return 'object' === typeof console\n    && console.log\n    && Function.prototype.apply.call(console.log, console, arguments);\n}\n\n/**\n * Save `namespaces`.\n *\n * @param {String} namespaces\n * @api private\n */\n\nfunction save(namespaces) {\n  try {\n    if (null == namespaces) {\n      exports.storage.removeItem('debug');\n    } else {\n      exports.storage.debug = namespaces;\n    }\n  } catch(e) {}\n}\n\n/**\n * Load `namespaces`.\n *\n * @return {String} returns the previously persisted debug modes\n * @api private\n */\n\nfunction load() {\n  var r;\n  try {\n    r = exports.storage.debug;\n  } catch(e) {}\n\n  // If debug isn't set in LS, and we're in Electron, try to load $DEBUG\n  if (!r && typeof process !== 'undefined' && 'env' in process) {\n    r = process.env.DEBUG;\n  }\n\n  return r;\n}\n\n/**\n * Enable namespaces listed in `localStorage.debug` initially.\n */\n\nexports.enable(load());\n\n/**\n * Localstorage attempts to return the localstorage.\n *\n * This is necessary because safari throws\n * when a user disables cookies/localstorage\n * and you attempt to access it.\n *\n * @return {LocalStorage}\n * @api private\n */\n\nfunction localstorage() {\n  try {\n    return window.localStorage;\n  } catch (e) {}\n}\n","\n/**\n * This is the common logic for both the Node.js and web browser\n * implementations of `debug()`.\n *\n * Expose `debug()` as the module.\n */\n\nexports = module.exports = createDebug.debug = createDebug['default'] = createDebug;\nexports.coerce = coerce;\nexports.disable = disable;\nexports.enable = enable;\nexports.enabled = enabled;\nexports.humanize = require('ms');\n\n/**\n * The currently active debug mode names, and names to skip.\n */\n\nexports.names = [];\nexports.skips = [];\n\n/**\n * Map of special \"%n\" handling functions, for the debug \"format\" argument.\n *\n * Valid key names are a single, lower or upper-case letter, i.e. \"n\" and \"N\".\n */\n\nexports.formatters = {};\n\n/**\n * Previous log timestamp.\n */\n\nvar prevTime;\n\n/**\n * Select a color.\n * @param {String} namespace\n * @return {Number}\n * @api private\n */\n\nfunction selectColor(namespace) {\n  var hash = 0, i;\n\n  for (i in namespace) {\n    hash  = ((hash << 5) - hash) + namespace.charCodeAt(i);\n    hash |= 0; // Convert to 32bit integer\n  }\n\n  return exports.colors[Math.abs(hash) % exports.colors.length];\n}\n\n/**\n * Create a debugger with the given `namespace`.\n *\n * @param {String} namespace\n * @return {Function}\n * @api public\n */\n\nfunction createDebug(namespace) {\n\n  function debug() {\n    // disabled?\n    if (!debug.enabled) return;\n\n    var self = debug;\n\n    // set `diff` timestamp\n    var curr = +new Date();\n    var ms = curr - (prevTime || curr);\n    self.diff = ms;\n    self.prev = prevTime;\n    self.curr = curr;\n    prevTime = curr;\n\n    // turn the `arguments` into a proper Array\n    var args = new Array(arguments.length);\n    for (var i = 0; i < args.length; i++) {\n      args[i] = arguments[i];\n    }\n\n    args[0] = exports.coerce(args[0]);\n\n    if ('string' !== typeof args[0]) {\n      // anything else let's inspect with %O\n      args.unshift('%O');\n    }\n\n    // apply any `formatters` transformations\n    var index = 0;\n    args[0] = args[0].replace(/%([a-zA-Z%])/g, function(match, format) {\n      // if we encounter an escaped % then don't increase the array index\n      if (match === '%%') return match;\n      index++;\n      var formatter = exports.formatters[format];\n      if ('function' === typeof formatter) {\n        var val = args[index];\n        match = formatter.call(self, val);\n\n        // now we need to remove `args[index]` since it's inlined in the `format`\n        args.splice(index, 1);\n        index--;\n      }\n      return match;\n    });\n\n    // apply env-specific formatting (colors, etc.)\n    exports.formatArgs.call(self, args);\n\n    var logFn = debug.log || exports.log || console.log.bind(console);\n    logFn.apply(self, args);\n  }\n\n  debug.namespace = namespace;\n  debug.enabled = exports.enabled(namespace);\n  debug.useColors = exports.useColors();\n  debug.color = selectColor(namespace);\n\n  // env-specific initialization logic for debug instances\n  if ('function' === typeof exports.init) {\n    exports.init(debug);\n  }\n\n  return debug;\n}\n\n/**\n * Enables a debug mode by namespaces. This can include modes\n * separated by a colon and wildcards.\n *\n * @param {String} namespaces\n * @api public\n */\n\nfunction enable(namespaces) {\n  exports.save(namespaces);\n\n  exports.names = [];\n  exports.skips = [];\n\n  var split = (typeof namespaces === 'string' ? namespaces : '').split(/[\\s,]+/);\n  var len = split.length;\n\n  for (var i = 0; i < len; i++) {\n    if (!split[i]) continue; // ignore empty strings\n    namespaces = split[i].replace(/\\*/g, '.*?');\n    if (namespaces[0] === '-') {\n      exports.skips.push(new RegExp('^' + namespaces.substr(1) + '$'));\n    } else {\n      exports.names.push(new RegExp('^' + namespaces + '$'));\n    }\n  }\n}\n\n/**\n * Disable debug output.\n *\n * @api public\n */\n\nfunction disable() {\n  exports.enable('');\n}\n\n/**\n * Returns true if the given mode name is enabled, false otherwise.\n *\n * @param {String} name\n * @return {Boolean}\n * @api public\n */\n\nfunction enabled(name) {\n  var i, len;\n  for (i = 0, len = exports.skips.length; i < len; i++) {\n    if (exports.skips[i].test(name)) {\n      return false;\n    }\n  }\n  for (i = 0, len = exports.names.length; i < len; i++) {\n    if (exports.names[i].test(name)) {\n      return true;\n    }\n  }\n  return false;\n}\n\n/**\n * Coerce `val`.\n *\n * @param {Mixed} val\n * @return {Mixed}\n * @api private\n */\n\nfunction coerce(val) {\n  if (val instanceof Error) return val.stack || val.message;\n  return val;\n}\n","/**\n * Detect Electron renderer process, which is node, but we should\n * treat as a browser.\n */\n\nif (typeof process !== 'undefined' && process.type === 'renderer') {\n  module.exports = require('./browser.js');\n} else {\n  module.exports = require('./node.js');\n}\n","/**\n * Module dependencies.\n */\n\nvar tty = require('tty');\nvar util = require('util');\n\n/**\n * This is the Node.js implementation of `debug()`.\n *\n * Expose `debug()` as the module.\n */\n\nexports = module.exports = require('./debug');\nexports.init = init;\nexports.log = log;\nexports.formatArgs = formatArgs;\nexports.save = save;\nexports.load = load;\nexports.useColors = useColors;\n\n/**\n * Colors.\n */\n\nexports.colors = [6, 2, 3, 4, 5, 1];\n\n/**\n * Build up the default `inspectOpts` object from the environment variables.\n *\n *   $ DEBUG_COLORS=no DEBUG_DEPTH=10 DEBUG_SHOW_HIDDEN=enabled node script.js\n */\n\nexports.inspectOpts = Object.keys(process.env).filter(function (key) {\n  return /^debug_/i.test(key);\n}).reduce(function (obj, key) {\n  // camel-case\n  var prop = key\n    .substring(6)\n    .toLowerCase()\n    .replace(/_([a-z])/g, function (_, k) { return k.toUpperCase() });\n\n  // coerce string value into JS value\n  var val = process.env[key];\n  if (/^(yes|on|true|enabled)$/i.test(val)) val = true;\n  else if (/^(no|off|false|disabled)$/i.test(val)) val = false;\n  else if (val === 'null') val = null;\n  else val = Number(val);\n\n  obj[prop] = val;\n  return obj;\n}, {});\n\n/**\n * The file descriptor to write the `debug()` calls to.\n * Set the `DEBUG_FD` env variable to override with another value. i.e.:\n *\n *   $ DEBUG_FD=3 node script.js 3>debug.log\n */\n\nvar fd = parseInt(process.env.DEBUG_FD, 10) || 2;\n\nif (1 !== fd && 2 !== fd) {\n  util.deprecate(function(){}, 'except for stderr(2) and stdout(1), any other usage of DEBUG_FD is deprecated. Override debug.log if you want to use a different log function (https://git.io/debug_fd)')()\n}\n\nvar stream = 1 === fd ? process.stdout :\n             2 === fd ? process.stderr :\n             createWritableStdioStream(fd);\n\n/**\n * Is stdout a TTY? Colored output is enabled when `true`.\n */\n\nfunction useColors() {\n  return 'colors' in exports.inspectOpts\n    ? Boolean(exports.inspectOpts.colors)\n    : tty.isatty(fd);\n}\n\n/**\n * Map %o to `util.inspect()`, all on a single line.\n */\n\nexports.formatters.o = function(v) {\n  this.inspectOpts.colors = this.useColors;\n  return util.inspect(v, this.inspectOpts)\n    .split('\\n').map(function(str) {\n      return str.trim()\n    }).join(' ');\n};\n\n/**\n * Map %o to `util.inspect()`, allowing multiple lines if needed.\n */\n\nexports.formatters.O = function(v) {\n  this.inspectOpts.colors = this.useColors;\n  return util.inspect(v, this.inspectOpts);\n};\n\n/**\n * Adds ANSI color escape codes if enabled.\n *\n * @api public\n */\n\nfunction formatArgs(args) {\n  var name = this.namespace;\n  var useColors = this.useColors;\n\n  if (useColors) {\n    var c = this.color;\n    var prefix = '  \\u001b[3' + c + ';1m' + name + ' ' + '\\u001b[0m';\n\n    args[0] = prefix + args[0].split('\\n').join('\\n' + prefix);\n    args.push('\\u001b[3' + c + 'm+' + exports.humanize(this.diff) + '\\u001b[0m');\n  } else {\n    args[0] = new Date().toUTCString()\n      + ' ' + name + ' ' + args[0];\n  }\n}\n\n/**\n * Invokes `util.format()` with the specified arguments and writes to `stream`.\n */\n\nfunction log() {\n  return stream.write(util.format.apply(util, arguments) + '\\n');\n}\n\n/**\n * Save `namespaces`.\n *\n * @param {String} namespaces\n * @api private\n */\n\nfunction save(namespaces) {\n  if (null == namespaces) {\n    // If you set a process.env field to null or undefined, it gets cast to the\n    // string 'null' or 'undefined'. Just delete instead.\n    delete process.env.DEBUG;\n  } else {\n    process.env.DEBUG = namespaces;\n  }\n}\n\n/**\n * Load `namespaces`.\n *\n * @return {String} returns the previously persisted debug modes\n * @api private\n */\n\nfunction load() {\n  return process.env.DEBUG;\n}\n\n/**\n * Copied from `node/src/node.js`.\n *\n * XXX: It's lame that node doesn't expose this API out-of-the-box. It also\n * relies on the undocumented `tty_wrap.guessHandleType()` which is also lame.\n */\n\nfunction createWritableStdioStream (fd) {\n  var stream;\n  var tty_wrap = process.binding('tty_wrap');\n\n  // Note stream._type is used for test-module-load-list.js\n\n  switch (tty_wrap.guessHandleType(fd)) {\n    case 'TTY':\n      stream = new tty.WriteStream(fd);\n      stream._type = 'tty';\n\n      // Hack to have stream not keep the event loop alive.\n      // See https://github.com/joyent/node/issues/1726\n      if (stream._handle && stream._handle.unref) {\n        stream._handle.unref();\n      }\n      break;\n\n    case 'FILE':\n      var fs = require('fs');\n      stream = new fs.SyncWriteStream(fd, { autoClose: false });\n      stream._type = 'fs';\n      break;\n\n    case 'PIPE':\n    case 'TCP':\n      var net = require('net');\n      stream = new net.Socket({\n        fd: fd,\n        readable: false,\n        writable: true\n      });\n\n      // FIXME Should probably have an option in net.Socket to create a\n      // stream from an existing fd which is writable only. But for now\n      // we'll just add this hack and set the `readable` member to false.\n      // Test: ./node test/fixtures/echo.js < /etc/passwd\n      stream.readable = false;\n      stream.read = null;\n      stream._type = 'pipe';\n\n      // FIXME Hack to have stream not keep the event loop alive.\n      // See https://github.com/joyent/node/issues/1726\n      if (stream._handle && stream._handle.unref) {\n        stream._handle.unref();\n      }\n      break;\n\n    default:\n      // Probably an error on in uv_guess_handle()\n      throw new Error('Implement me. Unknown stream file type!');\n  }\n\n  // For supporting legacy API we put the FD here.\n  stream.fd = fd;\n\n  stream._isStdio = true;\n\n  return stream;\n}\n\n/**\n * Init logic for `debug` instances.\n *\n * Create a new `inspectOpts` object in case `useColors` is set\n * differently for a particular `debug` instance.\n */\n\nfunction init (debug) {\n  debug.inspectOpts = {};\n\n  var keys = Object.keys(exports.inspectOpts);\n  for (var i = 0; i < keys.length; i++) {\n    debug.inspectOpts[keys[i]] = exports.inspectOpts[keys[i]];\n  }\n}\n\n/**\n * Enable namespaces listed in `process.env.DEBUG` initially.\n */\n\nexports.enable(load());\n","/**\n * Helpers.\n */\n\nvar s = 1000;\nvar m = s * 60;\nvar h = m * 60;\nvar d = h * 24;\nvar y = d * 365.25;\n\n/**\n * Parse or format the given `val`.\n *\n * Options:\n *\n *  - `long` verbose formatting [false]\n *\n * @param {String|Number} val\n * @param {Object} [options]\n * @throws {Error} throw an error if val is not a non-empty string or a number\n * @return {String|Number}\n * @api public\n */\n\nmodule.exports = function(val, options) {\n  options = options || {};\n  var type = typeof val;\n  if (type === 'string' && val.length > 0) {\n    return parse(val);\n  } else if (type === 'number' && isNaN(val) === false) {\n    return options.long ? fmtLong(val) : fmtShort(val);\n  }\n  throw new Error(\n    'val is not a non-empty string or a valid number. val=' +\n      JSON.stringify(val)\n  );\n};\n\n/**\n * Parse the given `str` and return milliseconds.\n *\n * @param {String} str\n * @return {Number}\n * @api private\n */\n\nfunction parse(str) {\n  str = String(str);\n  if (str.length > 100) {\n    return;\n  }\n  var match = /^((?:\\d+)?\\.?\\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|years?|yrs?|y)?$/i.exec(\n    str\n  );\n  if (!match) {\n    return;\n  }\n  var n = parseFloat(match[1]);\n  var type = (match[2] || 'ms').toLowerCase();\n  switch (type) {\n    case 'years':\n    case 'year':\n    case 'yrs':\n    case 'yr':\n    case 'y':\n      return n * y;\n    case 'days':\n    case 'day':\n    case 'd':\n      return n * d;\n    case 'hours':\n    case 'hour':\n    case 'hrs':\n    case 'hr':\n    case 'h':\n      return n * h;\n    case 'minutes':\n    case 'minute':\n    case 'mins':\n    case 'min':\n    case 'm':\n      return n * m;\n    case 'seconds':\n    case 'second':\n    case 'secs':\n    case 'sec':\n    case 's':\n      return n * s;\n    case 'milliseconds':\n    case 'millisecond':\n    case 'msecs':\n    case 'msec':\n    case 'ms':\n      return n;\n    default:\n      return undefined;\n  }\n}\n\n/**\n * Short format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtShort(ms) {\n  if (ms >= d) {\n    return Math.round(ms / d) + 'd';\n  }\n  if (ms >= h) {\n    return Math.round(ms / h) + 'h';\n  }\n  if (ms >= m) {\n    return Math.round(ms / m) + 'm';\n  }\n  if (ms >= s) {\n    return Math.round(ms / s) + 's';\n  }\n  return ms + 'ms';\n}\n\n/**\n * Long format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtLong(ms) {\n  return plural(ms, d, 'day') ||\n    plural(ms, h, 'hour') ||\n    plural(ms, m, 'minute') ||\n    plural(ms, s, 'second') ||\n    ms + ' ms';\n}\n\n/**\n * Pluralization helper.\n */\n\nfunction plural(ms, n, name) {\n  if (ms < n) {\n    return;\n  }\n  if (ms < n * 1.5) {\n    return Math.floor(ms / n) + ' ' + name;\n  }\n  return Math.ceil(ms / n) + ' ' + name + 's';\n}\n","/*!\n * forwarded\n * Copyright(c) 2014-2017 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = forwarded\n\n/**\n * Get all addresses in the request, using the `X-Forwarded-For` header.\n *\n * @param {object} req\n * @return {array}\n * @public\n */\n\nfunction forwarded (req) {\n  if (!req) {\n    throw new TypeError('argument req is required')\n  }\n\n  // simple header parsing\n  var proxyAddrs = parse(req.headers['x-forwarded-for'] || '')\n  var socketAddr = getSocketAddr(req)\n  var addrs = [socketAddr].concat(proxyAddrs)\n\n  // return all addresses\n  return addrs\n}\n\n/**\n * Get the socket address for a request.\n *\n * @param {object} req\n * @return {string}\n * @private\n */\n\nfunction getSocketAddr (req) {\n  return req.socket\n    ? req.socket.remoteAddress\n    : req.connection.remoteAddress\n}\n\n/**\n * Parse the X-Forwarded-For header.\n *\n * @param {string} header\n * @private\n */\n\nfunction parse (header) {\n  var end = header.length\n  var list = []\n  var start = header.length\n\n  // gather addresses, backwards\n  for (var i = header.length - 1; i >= 0; i--) {\n    switch (header.charCodeAt(i)) {\n      case 0x20: /*   */\n        if (start === end) {\n          start = end = i\n        }\n        break\n      case 0x2c: /* , */\n        if (start !== end) {\n          list.push(header.substring(start, end))\n        }\n        start = end = i\n        break\n      default:\n        start = i\n        break\n    }\n  }\n\n  // final address\n  if (start !== end) {\n    list.push(header.substring(start, end))\n  }\n\n  return list\n}\n","/*!\n * fresh\n * Copyright(c) 2012 TJ Holowaychuk\n * Copyright(c) 2016-2017 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * RegExp to check for no-cache token in Cache-Control.\n * @private\n */\n\nvar CACHE_CONTROL_NO_CACHE_REGEXP = /(?:^|,)\\s*?no-cache\\s*?(?:,|$)/\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = fresh\n\n/**\n * Check freshness of the response using request and response headers.\n *\n * @param {Object} reqHeaders\n * @param {Object} resHeaders\n * @return {Boolean}\n * @public\n */\n\nfunction fresh (reqHeaders, resHeaders) {\n  // fields\n  var modifiedSince = reqHeaders['if-modified-since']\n  var noneMatch = reqHeaders['if-none-match']\n\n  // unconditional request\n  if (!modifiedSince && !noneMatch) {\n    return false\n  }\n\n  // Always return stale when Cache-Control: no-cache\n  // to support end-to-end reload requests\n  // https://tools.ietf.org/html/rfc2616#section-14.9.4\n  var cacheControl = reqHeaders['cache-control']\n  if (cacheControl && CACHE_CONTROL_NO_CACHE_REGEXP.test(cacheControl)) {\n    return false\n  }\n\n  // if-none-match\n  if (noneMatch && noneMatch !== '*') {\n    var etag = resHeaders['etag']\n\n    if (!etag) {\n      return false\n    }\n\n    var etagStale = true\n    var matches = parseTokenList(noneMatch)\n    for (var i = 0; i < matches.length; i++) {\n      var match = matches[i]\n      if (match === etag || match === 'W/' + etag || 'W/' + match === etag) {\n        etagStale = false\n        break\n      }\n    }\n\n    if (etagStale) {\n      return false\n    }\n  }\n\n  // if-modified-since\n  if (modifiedSince) {\n    var lastModified = resHeaders['last-modified']\n    var modifiedStale = !lastModified || !(parseHttpDate(lastModified) <= parseHttpDate(modifiedSince))\n\n    if (modifiedStale) {\n      return false\n    }\n  }\n\n  return true\n}\n\n/**\n * Parse an HTTP Date into a number.\n *\n * @param {string} date\n * @private\n */\n\nfunction parseHttpDate (date) {\n  var timestamp = date && Date.parse(date)\n\n  // istanbul ignore next: guard against date.js Date.parse patching\n  return typeof timestamp === 'number'\n    ? timestamp\n    : NaN\n}\n\n/**\n * Parse a HTTP token list.\n *\n * @param {string} str\n * @private\n */\n\nfunction parseTokenList (str) {\n  var end = 0\n  var list = []\n  var start = 0\n\n  // gather tokens\n  for (var i = 0, len = str.length; i < len; i++) {\n    switch (str.charCodeAt(i)) {\n      case 0x20: /*   */\n        if (start === end) {\n          start = end = i + 1\n        }\n        break\n      case 0x2c: /* , */\n        list.push(str.substring(start, end))\n        start = end = i + 1\n        break\n      default:\n        end = i + 1\n        break\n    }\n  }\n\n  // final token\n  list.push(str.substring(start, end))\n\n  return list\n}\n","'use strict';\n\n/* eslint no-invalid-this: 1 */\n\nvar ERROR_MESSAGE = 'Function.prototype.bind called on incompatible ';\nvar slice = Array.prototype.slice;\nvar toStr = Object.prototype.toString;\nvar funcType = '[object Function]';\n\nmodule.exports = function bind(that) {\n    var target = this;\n    if (typeof target !== 'function' || toStr.call(target) !== funcType) {\n        throw new TypeError(ERROR_MESSAGE + target);\n    }\n    var args = slice.call(arguments, 1);\n\n    var bound;\n    var binder = function () {\n        if (this instanceof bound) {\n            var result = target.apply(\n                this,\n                args.concat(slice.call(arguments))\n            );\n            if (Object(result) === result) {\n                return result;\n            }\n            return this;\n        } else {\n            return target.apply(\n                that,\n                args.concat(slice.call(arguments))\n            );\n        }\n    };\n\n    var boundLength = Math.max(0, target.length - args.length);\n    var boundArgs = [];\n    for (var i = 0; i < boundLength; i++) {\n        boundArgs.push('$' + i);\n    }\n\n    bound = Function('binder', 'return function (' + boundArgs.join(',') + '){ return binder.apply(this,arguments); }')(binder);\n\n    if (target.prototype) {\n        var Empty = function Empty() {};\n        Empty.prototype = target.prototype;\n        bound.prototype = new Empty();\n        Empty.prototype = null;\n    }\n\n    return bound;\n};\n","'use strict';\n\nvar implementation = require('./implementation');\n\nmodule.exports = Function.prototype.bind || implementation;\n","'use strict';\n\nvar undefined;\n\nvar $SyntaxError = SyntaxError;\nvar $Function = Function;\nvar $TypeError = TypeError;\n\n// eslint-disable-next-line consistent-return\nvar getEvalledConstructor = function (expressionSyntax) {\n\ttry {\n\t\treturn $Function('\"use strict\"; return (' + expressionSyntax + ').constructor;')();\n\t} catch (e) {}\n};\n\nvar $gOPD = Object.getOwnPropertyDescriptor;\nif ($gOPD) {\n\ttry {\n\t\t$gOPD({}, '');\n\t} catch (e) {\n\t\t$gOPD = null; // this is IE 8, which has a broken gOPD\n\t}\n}\n\nvar throwTypeError = function () {\n\tthrow new $TypeError();\n};\nvar ThrowTypeError = $gOPD\n\t? (function () {\n\t\ttry {\n\t\t\t// eslint-disable-next-line no-unused-expressions, no-caller, no-restricted-properties\n\t\t\targuments.callee; // IE 8 does not throw here\n\t\t\treturn throwTypeError;\n\t\t} catch (calleeThrows) {\n\t\t\ttry {\n\t\t\t\t// IE 8 throws on Object.getOwnPropertyDescriptor(arguments, '')\n\t\t\t\treturn $gOPD(arguments, 'callee').get;\n\t\t\t} catch (gOPDthrows) {\n\t\t\t\treturn throwTypeError;\n\t\t\t}\n\t\t}\n\t}())\n\t: throwTypeError;\n\nvar hasSymbols = require('has-symbols')();\n\nvar getProto = Object.getPrototypeOf || function (x) { return x.__proto__; }; // eslint-disable-line no-proto\n\nvar needsEval = {};\n\nvar TypedArray = typeof Uint8Array === 'undefined' ? undefined : getProto(Uint8Array);\n\nvar INTRINSICS = {\n\t'%AggregateError%': typeof AggregateError === 'undefined' ? undefined : AggregateError,\n\t'%Array%': Array,\n\t'%ArrayBuffer%': typeof ArrayBuffer === 'undefined' ? undefined : ArrayBuffer,\n\t'%ArrayIteratorPrototype%': hasSymbols ? getProto([][Symbol.iterator]()) : undefined,\n\t'%AsyncFromSyncIteratorPrototype%': undefined,\n\t'%AsyncFunction%': needsEval,\n\t'%AsyncGenerator%': needsEval,\n\t'%AsyncGeneratorFunction%': needsEval,\n\t'%AsyncIteratorPrototype%': needsEval,\n\t'%Atomics%': typeof Atomics === 'undefined' ? undefined : Atomics,\n\t'%BigInt%': typeof BigInt === 'undefined' ? undefined : BigInt,\n\t'%Boolean%': Boolean,\n\t'%DataView%': typeof DataView === 'undefined' ? undefined : DataView,\n\t'%Date%': Date,\n\t'%decodeURI%': decodeURI,\n\t'%decodeURIComponent%': decodeURIComponent,\n\t'%encodeURI%': encodeURI,\n\t'%encodeURIComponent%': encodeURIComponent,\n\t'%Error%': Error,\n\t'%eval%': eval, // eslint-disable-line no-eval\n\t'%EvalError%': EvalError,\n\t'%Float32Array%': typeof Float32Array === 'undefined' ? undefined : Float32Array,\n\t'%Float64Array%': typeof Float64Array === 'undefined' ? undefined : Float64Array,\n\t'%FinalizationRegistry%': typeof FinalizationRegistry === 'undefined' ? undefined : FinalizationRegistry,\n\t'%Function%': $Function,\n\t'%GeneratorFunction%': needsEval,\n\t'%Int8Array%': typeof Int8Array === 'undefined' ? undefined : Int8Array,\n\t'%Int16Array%': typeof Int16Array === 'undefined' ? undefined : Int16Array,\n\t'%Int32Array%': typeof Int32Array === 'undefined' ? undefined : Int32Array,\n\t'%isFinite%': isFinite,\n\t'%isNaN%': isNaN,\n\t'%IteratorPrototype%': hasSymbols ? getProto(getProto([][Symbol.iterator]())) : undefined,\n\t'%JSON%': typeof JSON === 'object' ? JSON : undefined,\n\t'%Map%': typeof Map === 'undefined' ? undefined : Map,\n\t'%MapIteratorPrototype%': typeof Map === 'undefined' || !hasSymbols ? undefined : getProto(new Map()[Symbol.iterator]()),\n\t'%Math%': Math,\n\t'%Number%': Number,\n\t'%Object%': Object,\n\t'%parseFloat%': parseFloat,\n\t'%parseInt%': parseInt,\n\t'%Promise%': typeof Promise === 'undefined' ? undefined : Promise,\n\t'%Proxy%': typeof Proxy === 'undefined' ? undefined : Proxy,\n\t'%RangeError%': RangeError,\n\t'%ReferenceError%': ReferenceError,\n\t'%Reflect%': typeof Reflect === 'undefined' ? undefined : Reflect,\n\t'%RegExp%': RegExp,\n\t'%Set%': typeof Set === 'undefined' ? undefined : Set,\n\t'%SetIteratorPrototype%': typeof Set === 'undefined' || !hasSymbols ? undefined : getProto(new Set()[Symbol.iterator]()),\n\t'%SharedArrayBuffer%': typeof SharedArrayBuffer === 'undefined' ? undefined : SharedArrayBuffer,\n\t'%String%': String,\n\t'%StringIteratorPrototype%': hasSymbols ? getProto(''[Symbol.iterator]()) : undefined,\n\t'%Symbol%': hasSymbols ? Symbol : undefined,\n\t'%SyntaxError%': $SyntaxError,\n\t'%ThrowTypeError%': ThrowTypeError,\n\t'%TypedArray%': TypedArray,\n\t'%TypeError%': $TypeError,\n\t'%Uint8Array%': typeof Uint8Array === 'undefined' ? undefined : Uint8Array,\n\t'%Uint8ClampedArray%': typeof Uint8ClampedArray === 'undefined' ? undefined : Uint8ClampedArray,\n\t'%Uint16Array%': typeof Uint16Array === 'undefined' ? undefined : Uint16Array,\n\t'%Uint32Array%': typeof Uint32Array === 'undefined' ? undefined : Uint32Array,\n\t'%URIError%': URIError,\n\t'%WeakMap%': typeof WeakMap === 'undefined' ? undefined : WeakMap,\n\t'%WeakRef%': typeof WeakRef === 'undefined' ? undefined : WeakRef,\n\t'%WeakSet%': typeof WeakSet === 'undefined' ? undefined : WeakSet\n};\n\nvar doEval = function doEval(name) {\n\tvar value;\n\tif (name === '%AsyncFunction%') {\n\t\tvalue = getEvalledConstructor('async function () {}');\n\t} else if (name === '%GeneratorFunction%') {\n\t\tvalue = getEvalledConstructor('function* () {}');\n\t} else if (name === '%AsyncGeneratorFunction%') {\n\t\tvalue = getEvalledConstructor('async function* () {}');\n\t} else if (name === '%AsyncGenerator%') {\n\t\tvar fn = doEval('%AsyncGeneratorFunction%');\n\t\tif (fn) {\n\t\t\tvalue = fn.prototype;\n\t\t}\n\t} else if (name === '%AsyncIteratorPrototype%') {\n\t\tvar gen = doEval('%AsyncGenerator%');\n\t\tif (gen) {\n\t\t\tvalue = getProto(gen.prototype);\n\t\t}\n\t}\n\n\tINTRINSICS[name] = value;\n\n\treturn value;\n};\n\nvar LEGACY_ALIASES = {\n\t'%ArrayBufferPrototype%': ['ArrayBuffer', 'prototype'],\n\t'%ArrayPrototype%': ['Array', 'prototype'],\n\t'%ArrayProto_entries%': ['Array', 'prototype', 'entries'],\n\t'%ArrayProto_forEach%': ['Array', 'prototype', 'forEach'],\n\t'%ArrayProto_keys%': ['Array', 'prototype', 'keys'],\n\t'%ArrayProto_values%': ['Array', 'prototype', 'values'],\n\t'%AsyncFunctionPrototype%': ['AsyncFunction', 'prototype'],\n\t'%AsyncGenerator%': ['AsyncGeneratorFunction', 'prototype'],\n\t'%AsyncGeneratorPrototype%': ['AsyncGeneratorFunction', 'prototype', 'prototype'],\n\t'%BooleanPrototype%': ['Boolean', 'prototype'],\n\t'%DataViewPrototype%': ['DataView', 'prototype'],\n\t'%DatePrototype%': ['Date', 'prototype'],\n\t'%ErrorPrototype%': ['Error', 'prototype'],\n\t'%EvalErrorPrototype%': ['EvalError', 'prototype'],\n\t'%Float32ArrayPrototype%': ['Float32Array', 'prototype'],\n\t'%Float64ArrayPrototype%': ['Float64Array', 'prototype'],\n\t'%FunctionPrototype%': ['Function', 'prototype'],\n\t'%Generator%': ['GeneratorFunction', 'prototype'],\n\t'%GeneratorPrototype%': ['GeneratorFunction', 'prototype', 'prototype'],\n\t'%Int8ArrayPrototype%': ['Int8Array', 'prototype'],\n\t'%Int16ArrayPrototype%': ['Int16Array', 'prototype'],\n\t'%Int32ArrayPrototype%': ['Int32Array', 'prototype'],\n\t'%JSONParse%': ['JSON', 'parse'],\n\t'%JSONStringify%': ['JSON', 'stringify'],\n\t'%MapPrototype%': ['Map', 'prototype'],\n\t'%NumberPrototype%': ['Number', 'prototype'],\n\t'%ObjectPrototype%': ['Object', 'prototype'],\n\t'%ObjProto_toString%': ['Object', 'prototype', 'toString'],\n\t'%ObjProto_valueOf%': ['Object', 'prototype', 'valueOf'],\n\t'%PromisePrototype%': ['Promise', 'prototype'],\n\t'%PromiseProto_then%': ['Promise', 'prototype', 'then'],\n\t'%Promise_all%': ['Promise', 'all'],\n\t'%Promise_reject%': ['Promise', 'reject'],\n\t'%Promise_resolve%': ['Promise', 'resolve'],\n\t'%RangeErrorPrototype%': ['RangeError', 'prototype'],\n\t'%ReferenceErrorPrototype%': ['ReferenceError', 'prototype'],\n\t'%RegExpPrototype%': ['RegExp', 'prototype'],\n\t'%SetPrototype%': ['Set', 'prototype'],\n\t'%SharedArrayBufferPrototype%': ['SharedArrayBuffer', 'prototype'],\n\t'%StringPrototype%': ['String', 'prototype'],\n\t'%SymbolPrototype%': ['Symbol', 'prototype'],\n\t'%SyntaxErrorPrototype%': ['SyntaxError', 'prototype'],\n\t'%TypedArrayPrototype%': ['TypedArray', 'prototype'],\n\t'%TypeErrorPrototype%': ['TypeError', 'prototype'],\n\t'%Uint8ArrayPrototype%': ['Uint8Array', 'prototype'],\n\t'%Uint8ClampedArrayPrototype%': ['Uint8ClampedArray', 'prototype'],\n\t'%Uint16ArrayPrototype%': ['Uint16Array', 'prototype'],\n\t'%Uint32ArrayPrototype%': ['Uint32Array', 'prototype'],\n\t'%URIErrorPrototype%': ['URIError', 'prototype'],\n\t'%WeakMapPrototype%': ['WeakMap', 'prototype'],\n\t'%WeakSetPrototype%': ['WeakSet', 'prototype']\n};\n\nvar bind = require('function-bind');\nvar hasOwn = require('has');\nvar $concat = bind.call(Function.call, Array.prototype.concat);\nvar $spliceApply = bind.call(Function.apply, Array.prototype.splice);\nvar $replace = bind.call(Function.call, String.prototype.replace);\nvar $strSlice = bind.call(Function.call, String.prototype.slice);\nvar $exec = bind.call(Function.call, RegExp.prototype.exec);\n\n/* adapted from https://github.com/lodash/lodash/blob/4.17.15/dist/lodash.js#L6735-L6744 */\nvar rePropName = /[^%.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]|(?=(?:\\.|\\[\\])(?:\\.|\\[\\]|%$))/g;\nvar reEscapeChar = /\\\\(\\\\)?/g; /** Used to match backslashes in property paths. */\nvar stringToPath = function stringToPath(string) {\n\tvar first = $strSlice(string, 0, 1);\n\tvar last = $strSlice(string, -1);\n\tif (first === '%' && last !== '%') {\n\t\tthrow new $SyntaxError('invalid intrinsic syntax, expected closing `%`');\n\t} else if (last === '%' && first !== '%') {\n\t\tthrow new $SyntaxError('invalid intrinsic syntax, expected opening `%`');\n\t}\n\tvar result = [];\n\t$replace(string, rePropName, function (match, number, quote, subString) {\n\t\tresult[result.length] = quote ? $replace(subString, reEscapeChar, '$1') : number || match;\n\t});\n\treturn result;\n};\n/* end adaptation */\n\nvar getBaseIntrinsic = function getBaseIntrinsic(name, allowMissing) {\n\tvar intrinsicName = name;\n\tvar alias;\n\tif (hasOwn(LEGACY_ALIASES, intrinsicName)) {\n\t\talias = LEGACY_ALIASES[intrinsicName];\n\t\tintrinsicName = '%' + alias[0] + '%';\n\t}\n\n\tif (hasOwn(INTRINSICS, intrinsicName)) {\n\t\tvar value = INTRINSICS[intrinsicName];\n\t\tif (value === needsEval) {\n\t\t\tvalue = doEval(intrinsicName);\n\t\t}\n\t\tif (typeof value === 'undefined' && !allowMissing) {\n\t\t\tthrow new $TypeError('intrinsic ' + name + ' exists, but is not available. Please file an issue!');\n\t\t}\n\n\t\treturn {\n\t\t\talias: alias,\n\t\t\tname: intrinsicName,\n\t\t\tvalue: value\n\t\t};\n\t}\n\n\tthrow new $SyntaxError('intrinsic ' + name + ' does not exist!');\n};\n\nmodule.exports = function GetIntrinsic(name, allowMissing) {\n\tif (typeof name !== 'string' || name.length === 0) {\n\t\tthrow new $TypeError('intrinsic name must be a non-empty string');\n\t}\n\tif (arguments.length > 1 && typeof allowMissing !== 'boolean') {\n\t\tthrow new $TypeError('\"allowMissing\" argument must be a boolean');\n\t}\n\n\tif ($exec(/^%?[^%]*%?$/g, name) === null) {\n\t\tthrow new $SyntaxError('`%` may not be present anywhere but at the beginning and end of the intrinsic name');\n\t}\n\tvar parts = stringToPath(name);\n\tvar intrinsicBaseName = parts.length > 0 ? parts[0] : '';\n\n\tvar intrinsic = getBaseIntrinsic('%' + intrinsicBaseName + '%', allowMissing);\n\tvar intrinsicRealName = intrinsic.name;\n\tvar value = intrinsic.value;\n\tvar skipFurtherCaching = false;\n\n\tvar alias = intrinsic.alias;\n\tif (alias) {\n\t\tintrinsicBaseName = alias[0];\n\t\t$spliceApply(parts, $concat([0, 1], alias));\n\t}\n\n\tfor (var i = 1, isOwn = true; i < parts.length; i += 1) {\n\t\tvar part = parts[i];\n\t\tvar first = $strSlice(part, 0, 1);\n\t\tvar last = $strSlice(part, -1);\n\t\tif (\n\t\t\t(\n\t\t\t\t(first === '\"' || first === \"'\" || first === '`')\n\t\t\t\t|| (last === '\"' || last === \"'\" || last === '`')\n\t\t\t)\n\t\t\t&& first !== last\n\t\t) {\n\t\t\tthrow new $SyntaxError('property names with quotes must have matching quotes');\n\t\t}\n\t\tif (part === 'constructor' || !isOwn) {\n\t\t\tskipFurtherCaching = true;\n\t\t}\n\n\t\tintrinsicBaseName += '.' + part;\n\t\tintrinsicRealName = '%' + intrinsicBaseName + '%';\n\n\t\tif (hasOwn(INTRINSICS, intrinsicRealName)) {\n\t\t\tvalue = INTRINSICS[intrinsicRealName];\n\t\t} else if (value != null) {\n\t\t\tif (!(part in value)) {\n\t\t\t\tif (!allowMissing) {\n\t\t\t\t\tthrow new $TypeError('base intrinsic for ' + name + ' exists, but the property is not available.');\n\t\t\t\t}\n\t\t\t\treturn void undefined;\n\t\t\t}\n\t\t\tif ($gOPD && (i + 1) >= parts.length) {\n\t\t\t\tvar desc = $gOPD(value, part);\n\t\t\t\tisOwn = !!desc;\n\n\t\t\t\t// By convention, when a data property is converted to an accessor\n\t\t\t\t// property to emulate a data property that does not suffer from\n\t\t\t\t// the override mistake, that accessor's getter is marked with\n\t\t\t\t// an `originalValue` property. Here, when we detect this, we\n\t\t\t\t// uphold the illusion by pretending to see that original data\n\t\t\t\t// property, i.e., returning the value rather than the getter\n\t\t\t\t// itself.\n\t\t\t\tif (isOwn && 'get' in desc && !('originalValue' in desc.get)) {\n\t\t\t\t\tvalue = desc.get;\n\t\t\t\t} else {\n\t\t\t\t\tvalue = value[part];\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tisOwn = hasOwn(value, part);\n\t\t\t\tvalue = value[part];\n\t\t\t}\n\n\t\t\tif (isOwn && !skipFurtherCaching) {\n\t\t\t\tINTRINSICS[intrinsicRealName] = value;\n\t\t\t}\n\t\t}\n\t}\n\treturn value;\n};\n","'use strict';\n\nvar origSymbol = typeof Symbol !== 'undefined' && Symbol;\nvar hasSymbolSham = require('./shams');\n\nmodule.exports = function hasNativeSymbols() {\n\tif (typeof origSymbol !== 'function') { return false; }\n\tif (typeof Symbol !== 'function') { return false; }\n\tif (typeof origSymbol('foo') !== 'symbol') { return false; }\n\tif (typeof Symbol('bar') !== 'symbol') { return false; }\n\n\treturn hasSymbolSham();\n};\n","'use strict';\n\n/* eslint complexity: [2, 18], max-statements: [2, 33] */\nmodule.exports = function hasSymbols() {\n\tif (typeof Symbol !== 'function' || typeof Object.getOwnPropertySymbols !== 'function') { return false; }\n\tif (typeof Symbol.iterator === 'symbol') { return true; }\n\n\tvar obj = {};\n\tvar sym = Symbol('test');\n\tvar symObj = Object(sym);\n\tif (typeof sym === 'string') { return false; }\n\n\tif (Object.prototype.toString.call(sym) !== '[object Symbol]') { return false; }\n\tif (Object.prototype.toString.call(symObj) !== '[object Symbol]') { return false; }\n\n\t// temp disabled per https://github.com/ljharb/object.assign/issues/17\n\t// if (sym instanceof Symbol) { return false; }\n\t// temp disabled per https://github.com/WebReflection/get-own-property-symbols/issues/4\n\t// if (!(symObj instanceof Symbol)) { return false; }\n\n\t// if (typeof Symbol.prototype.toString !== 'function') { return false; }\n\t// if (String(sym) !== Symbol.prototype.toString.call(sym)) { return false; }\n\n\tvar symVal = 42;\n\tobj[sym] = symVal;\n\tfor (sym in obj) { return false; } // eslint-disable-line no-restricted-syntax, no-unreachable-loop\n\tif (typeof Object.keys === 'function' && Object.keys(obj).length !== 0) { return false; }\n\n\tif (typeof Object.getOwnPropertyNames === 'function' && Object.getOwnPropertyNames(obj).length !== 0) { return false; }\n\n\tvar syms = Object.getOwnPropertySymbols(obj);\n\tif (syms.length !== 1 || syms[0] !== sym) { return false; }\n\n\tif (!Object.prototype.propertyIsEnumerable.call(obj, sym)) { return false; }\n\n\tif (typeof Object.getOwnPropertyDescriptor === 'function') {\n\t\tvar descriptor = Object.getOwnPropertyDescriptor(obj, sym);\n\t\tif (descriptor.value !== symVal || descriptor.enumerable !== true) { return false; }\n\t}\n\n\treturn true;\n};\n","'use strict';\n\nvar bind = require('function-bind');\n\nmodule.exports = bind.call(Function.call, Object.prototype.hasOwnProperty);\n","/*!\n * http-errors\n * Copyright(c) 2014 Jonathan Ong\n * Copyright(c) 2016 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * Module dependencies.\n * @private\n */\n\nvar deprecate = require('depd')('http-errors')\nvar setPrototypeOf = require('setprototypeof')\nvar statuses = require('statuses')\nvar inherits = require('inherits')\nvar toIdentifier = require('toidentifier')\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = createError\nmodule.exports.HttpError = createHttpErrorConstructor()\nmodule.exports.isHttpError = createIsHttpErrorFunction(module.exports.HttpError)\n\n// Populate exports for all constructors\npopulateConstructorExports(module.exports, statuses.codes, module.exports.HttpError)\n\n/**\n * Get the code class of a status code.\n * @private\n */\n\nfunction codeClass (status) {\n  return Number(String(status).charAt(0) + '00')\n}\n\n/**\n * Create a new HTTP Error.\n *\n * @returns {Error}\n * @public\n */\n\nfunction createError () {\n  // so much arity going on ~_~\n  var err\n  var msg\n  var status = 500\n  var props = {}\n  for (var i = 0; i < arguments.length; i++) {\n    var arg = arguments[i]\n    var type = typeof arg\n    if (type === 'object' && arg instanceof Error) {\n      err = arg\n      status = err.status || err.statusCode || status\n    } else if (type === 'number' && i === 0) {\n      status = arg\n    } else if (type === 'string') {\n      msg = arg\n    } else if (type === 'object') {\n      props = arg\n    } else {\n      throw new TypeError('argument #' + (i + 1) + ' unsupported type ' + type)\n    }\n  }\n\n  if (typeof status === 'number' && (status < 400 || status >= 600)) {\n    deprecate('non-error status code; use only 4xx or 5xx status codes')\n  }\n\n  if (typeof status !== 'number' ||\n    (!statuses.message[status] && (status < 400 || status >= 600))) {\n    status = 500\n  }\n\n  // constructor\n  var HttpError = createError[status] || createError[codeClass(status)]\n\n  if (!err) {\n    // create error\n    err = HttpError\n      ? new HttpError(msg)\n      : new Error(msg || statuses.message[status])\n    Error.captureStackTrace(err, createError)\n  }\n\n  if (!HttpError || !(err instanceof HttpError) || err.status !== status) {\n    // add properties to generic error\n    err.expose = status < 500\n    err.status = err.statusCode = status\n  }\n\n  for (var key in props) {\n    if (key !== 'status' && key !== 'statusCode') {\n      err[key] = props[key]\n    }\n  }\n\n  return err\n}\n\n/**\n * Create HTTP error abstract base class.\n * @private\n */\n\nfunction createHttpErrorConstructor () {\n  function HttpError () {\n    throw new TypeError('cannot construct abstract class')\n  }\n\n  inherits(HttpError, Error)\n\n  return HttpError\n}\n\n/**\n * Create a constructor for a client error.\n * @private\n */\n\nfunction createClientErrorConstructor (HttpError, name, code) {\n  var className = toClassName(name)\n\n  function ClientError (message) {\n    // create the error object\n    var msg = message != null ? message : statuses.message[code]\n    var err = new Error(msg)\n\n    // capture a stack trace to the construction point\n    Error.captureStackTrace(err, ClientError)\n\n    // adjust the [[Prototype]]\n    setPrototypeOf(err, ClientError.prototype)\n\n    // redefine the error message\n    Object.defineProperty(err, 'message', {\n      enumerable: true,\n      configurable: true,\n      value: msg,\n      writable: true\n    })\n\n    // redefine the error name\n    Object.defineProperty(err, 'name', {\n      enumerable: false,\n      configurable: true,\n      value: className,\n      writable: true\n    })\n\n    return err\n  }\n\n  inherits(ClientError, HttpError)\n  nameFunc(ClientError, className)\n\n  ClientError.prototype.status = code\n  ClientError.prototype.statusCode = code\n  ClientError.prototype.expose = true\n\n  return ClientError\n}\n\n/**\n * Create function to test is a value is a HttpError.\n * @private\n */\n\nfunction createIsHttpErrorFunction (HttpError) {\n  return function isHttpError (val) {\n    if (!val || typeof val !== 'object') {\n      return false\n    }\n\n    if (val instanceof HttpError) {\n      return true\n    }\n\n    return val instanceof Error &&\n      typeof val.expose === 'boolean' &&\n      typeof val.statusCode === 'number' && val.status === val.statusCode\n  }\n}\n\n/**\n * Create a constructor for a server error.\n * @private\n */\n\nfunction createServerErrorConstructor (HttpError, name, code) {\n  var className = toClassName(name)\n\n  function ServerError (message) {\n    // create the error object\n    var msg = message != null ? message : statuses.message[code]\n    var err = new Error(msg)\n\n    // capture a stack trace to the construction point\n    Error.captureStackTrace(err, ServerError)\n\n    // adjust the [[Prototype]]\n    setPrototypeOf(err, ServerError.prototype)\n\n    // redefine the error message\n    Object.defineProperty(err, 'message', {\n      enumerable: true,\n      configurable: true,\n      value: msg,\n      writable: true\n    })\n\n    // redefine the error name\n    Object.defineProperty(err, 'name', {\n      enumerable: false,\n      configurable: true,\n      value: className,\n      writable: true\n    })\n\n    return err\n  }\n\n  inherits(ServerError, HttpError)\n  nameFunc(ServerError, className)\n\n  ServerError.prototype.status = code\n  ServerError.prototype.statusCode = code\n  ServerError.prototype.expose = false\n\n  return ServerError\n}\n\n/**\n * Set the name of a function, if possible.\n * @private\n */\n\nfunction nameFunc (func, name) {\n  var desc = Object.getOwnPropertyDescriptor(func, 'name')\n\n  if (desc && desc.configurable) {\n    desc.value = name\n    Object.defineProperty(func, 'name', desc)\n  }\n}\n\n/**\n * Populate the exports object with constructors for every error class.\n * @private\n */\n\nfunction populateConstructorExports (exports, codes, HttpError) {\n  codes.forEach(function forEachCode (code) {\n    var CodeError\n    var name = toIdentifier(statuses.message[code])\n\n    switch (codeClass(code)) {\n      case 400:\n        CodeError = createClientErrorConstructor(HttpError, name, code)\n        break\n      case 500:\n        CodeError = createServerErrorConstructor(HttpError, name, code)\n        break\n    }\n\n    if (CodeError) {\n      // export the constructor\n      exports[code] = CodeError\n      exports[name] = CodeError\n    }\n  })\n}\n\n/**\n * Get a class name from a name identifier.\n * @private\n */\n\nfunction toClassName (name) {\n  return name.substr(-5) !== 'Error'\n    ? name + 'Error'\n    : name\n}\n","\"use strict\";\nvar Buffer = require(\"safer-buffer\").Buffer;\n\n// Multibyte codec. In this scheme, a character is represented by 1 or more bytes.\n// Our codec supports UTF-16 surrogates, extensions for GB18030 and unicode sequences.\n// To save memory and loading time, we read table files only when requested.\n\nexports._dbcs = DBCSCodec;\n\nvar UNASSIGNED = -1,\n    GB18030_CODE = -2,\n    SEQ_START  = -10,\n    NODE_START = -1000,\n    UNASSIGNED_NODE = new Array(0x100),\n    DEF_CHAR = -1;\n\nfor (var i = 0; i < 0x100; i++)\n    UNASSIGNED_NODE[i] = UNASSIGNED;\n\n\n// Class DBCSCodec reads and initializes mapping tables.\nfunction DBCSCodec(codecOptions, iconv) {\n    this.encodingName = codecOptions.encodingName;\n    if (!codecOptions)\n        throw new Error(\"DBCS codec is called without the data.\")\n    if (!codecOptions.table)\n        throw new Error(\"Encoding '\" + this.encodingName + \"' has no data.\");\n\n    // Load tables.\n    var mappingTable = codecOptions.table();\n\n\n    // Decode tables: MBCS -> Unicode.\n\n    // decodeTables is a trie, encoded as an array of arrays of integers. Internal arrays are trie nodes and all have len = 256.\n    // Trie root is decodeTables[0].\n    // Values: >=  0 -> unicode character code. can be > 0xFFFF\n    //         == UNASSIGNED -> unknown/unassigned sequence.\n    //         == GB18030_CODE -> this is the end of a GB18030 4-byte sequence.\n    //         <= NODE_START -> index of the next node in our trie to process next byte.\n    //         <= SEQ_START  -> index of the start of a character code sequence, in decodeTableSeq.\n    this.decodeTables = [];\n    this.decodeTables[0] = UNASSIGNED_NODE.slice(0); // Create root node.\n\n    // Sometimes a MBCS char corresponds to a sequence of unicode chars. We store them as arrays of integers here. \n    this.decodeTableSeq = [];\n\n    // Actual mapping tables consist of chunks. Use them to fill up decode tables.\n    for (var i = 0; i < mappingTable.length; i++)\n        this._addDecodeChunk(mappingTable[i]);\n\n    this.defaultCharUnicode = iconv.defaultCharUnicode;\n\n    \n    // Encode tables: Unicode -> DBCS.\n\n    // `encodeTable` is array mapping from unicode char to encoded char. All its values are integers for performance.\n    // Because it can be sparse, it is represented as array of buckets by 256 chars each. Bucket can be null.\n    // Values: >=  0 -> it is a normal char. Write the value (if <=256 then 1 byte, if <=65536 then 2 bytes, etc.).\n    //         == UNASSIGNED -> no conversion found. Output a default char.\n    //         <= SEQ_START  -> it's an index in encodeTableSeq, see below. The character starts a sequence.\n    this.encodeTable = [];\n    \n    // `encodeTableSeq` is used when a sequence of unicode characters is encoded as a single code. We use a tree of\n    // objects where keys correspond to characters in sequence and leafs are the encoded dbcs values. A special DEF_CHAR key\n    // means end of sequence (needed when one sequence is a strict subsequence of another).\n    // Objects are kept separately from encodeTable to increase performance.\n    this.encodeTableSeq = [];\n\n    // Some chars can be decoded, but need not be encoded.\n    var skipEncodeChars = {};\n    if (codecOptions.encodeSkipVals)\n        for (var i = 0; i < codecOptions.encodeSkipVals.length; i++) {\n            var val = codecOptions.encodeSkipVals[i];\n            if (typeof val === 'number')\n                skipEncodeChars[val] = true;\n            else\n                for (var j = val.from; j <= val.to; j++)\n                    skipEncodeChars[j] = true;\n        }\n        \n    // Use decode trie to recursively fill out encode tables.\n    this._fillEncodeTable(0, 0, skipEncodeChars);\n\n    // Add more encoding pairs when needed.\n    if (codecOptions.encodeAdd) {\n        for (var uChar in codecOptions.encodeAdd)\n            if (Object.prototype.hasOwnProperty.call(codecOptions.encodeAdd, uChar))\n                this._setEncodeChar(uChar.charCodeAt(0), codecOptions.encodeAdd[uChar]);\n    }\n\n    this.defCharSB  = this.encodeTable[0][iconv.defaultCharSingleByte.charCodeAt(0)];\n    if (this.defCharSB === UNASSIGNED) this.defCharSB = this.encodeTable[0]['?'];\n    if (this.defCharSB === UNASSIGNED) this.defCharSB = \"?\".charCodeAt(0);\n\n\n    // Load & create GB18030 tables when needed.\n    if (typeof codecOptions.gb18030 === 'function') {\n        this.gb18030 = codecOptions.gb18030(); // Load GB18030 ranges.\n\n        // Add GB18030 decode tables.\n        var thirdByteNodeIdx = this.decodeTables.length;\n        var thirdByteNode = this.decodeTables[thirdByteNodeIdx] = UNASSIGNED_NODE.slice(0);\n\n        var fourthByteNodeIdx = this.decodeTables.length;\n        var fourthByteNode = this.decodeTables[fourthByteNodeIdx] = UNASSIGNED_NODE.slice(0);\n\n        for (var i = 0x81; i <= 0xFE; i++) {\n            var secondByteNodeIdx = NODE_START - this.decodeTables[0][i];\n            var secondByteNode = this.decodeTables[secondByteNodeIdx];\n            for (var j = 0x30; j <= 0x39; j++)\n                secondByteNode[j] = NODE_START - thirdByteNodeIdx;\n        }\n        for (var i = 0x81; i <= 0xFE; i++)\n            thirdByteNode[i] = NODE_START - fourthByteNodeIdx;\n        for (var i = 0x30; i <= 0x39; i++)\n            fourthByteNode[i] = GB18030_CODE\n    }        \n}\n\nDBCSCodec.prototype.encoder = DBCSEncoder;\nDBCSCodec.prototype.decoder = DBCSDecoder;\n\n// Decoder helpers\nDBCSCodec.prototype._getDecodeTrieNode = function(addr) {\n    var bytes = [];\n    for (; addr > 0; addr >>= 8)\n        bytes.push(addr & 0xFF);\n    if (bytes.length == 0)\n        bytes.push(0);\n\n    var node = this.decodeTables[0];\n    for (var i = bytes.length-1; i > 0; i--) { // Traverse nodes deeper into the trie.\n        var val = node[bytes[i]];\n\n        if (val == UNASSIGNED) { // Create new node.\n            node[bytes[i]] = NODE_START - this.decodeTables.length;\n            this.decodeTables.push(node = UNASSIGNED_NODE.slice(0));\n        }\n        else if (val <= NODE_START) { // Existing node.\n            node = this.decodeTables[NODE_START - val];\n        }\n        else\n            throw new Error(\"Overwrite byte in \" + this.encodingName + \", addr: \" + addr.toString(16));\n    }\n    return node;\n}\n\n\nDBCSCodec.prototype._addDecodeChunk = function(chunk) {\n    // First element of chunk is the hex mbcs code where we start.\n    var curAddr = parseInt(chunk[0], 16);\n\n    // Choose the decoding node where we'll write our chars.\n    var writeTable = this._getDecodeTrieNode(curAddr);\n    curAddr = curAddr & 0xFF;\n\n    // Write all other elements of the chunk to the table.\n    for (var k = 1; k < chunk.length; k++) {\n        var part = chunk[k];\n        if (typeof part === \"string\") { // String, write as-is.\n            for (var l = 0; l < part.length;) {\n                var code = part.charCodeAt(l++);\n                if (0xD800 <= code && code < 0xDC00) { // Decode surrogate\n                    var codeTrail = part.charCodeAt(l++);\n                    if (0xDC00 <= codeTrail && codeTrail < 0xE000)\n                        writeTable[curAddr++] = 0x10000 + (code - 0xD800) * 0x400 + (codeTrail - 0xDC00);\n                    else\n                        throw new Error(\"Incorrect surrogate pair in \"  + this.encodingName + \" at chunk \" + chunk[0]);\n                }\n                else if (0x0FF0 < code && code <= 0x0FFF) { // Character sequence (our own encoding used)\n                    var len = 0xFFF - code + 2;\n                    var seq = [];\n                    for (var m = 0; m < len; m++)\n                        seq.push(part.charCodeAt(l++)); // Simple variation: don't support surrogates or subsequences in seq.\n\n                    writeTable[curAddr++] = SEQ_START - this.decodeTableSeq.length;\n                    this.decodeTableSeq.push(seq);\n                }\n                else\n                    writeTable[curAddr++] = code; // Basic char\n            }\n        } \n        else if (typeof part === \"number\") { // Integer, meaning increasing sequence starting with prev character.\n            var charCode = writeTable[curAddr - 1] + 1;\n            for (var l = 0; l < part; l++)\n                writeTable[curAddr++] = charCode++;\n        }\n        else\n            throw new Error(\"Incorrect type '\" + typeof part + \"' given in \"  + this.encodingName + \" at chunk \" + chunk[0]);\n    }\n    if (curAddr > 0xFF)\n        throw new Error(\"Incorrect chunk in \"  + this.encodingName + \" at addr \" + chunk[0] + \": too long\" + curAddr);\n}\n\n// Encoder helpers\nDBCSCodec.prototype._getEncodeBucket = function(uCode) {\n    var high = uCode >> 8; // This could be > 0xFF because of astral characters.\n    if (this.encodeTable[high] === undefined)\n        this.encodeTable[high] = UNASSIGNED_NODE.slice(0); // Create bucket on demand.\n    return this.encodeTable[high];\n}\n\nDBCSCodec.prototype._setEncodeChar = function(uCode, dbcsCode) {\n    var bucket = this._getEncodeBucket(uCode);\n    var low = uCode & 0xFF;\n    if (bucket[low] <= SEQ_START)\n        this.encodeTableSeq[SEQ_START-bucket[low]][DEF_CHAR] = dbcsCode; // There's already a sequence, set a single-char subsequence of it.\n    else if (bucket[low] == UNASSIGNED)\n        bucket[low] = dbcsCode;\n}\n\nDBCSCodec.prototype._setEncodeSequence = function(seq, dbcsCode) {\n    \n    // Get the root of character tree according to first character of the sequence.\n    var uCode = seq[0];\n    var bucket = this._getEncodeBucket(uCode);\n    var low = uCode & 0xFF;\n\n    var node;\n    if (bucket[low] <= SEQ_START) {\n        // There's already a sequence with  - use it.\n        node = this.encodeTableSeq[SEQ_START-bucket[low]];\n    }\n    else {\n        // There was no sequence object - allocate a new one.\n        node = {};\n        if (bucket[low] !== UNASSIGNED) node[DEF_CHAR] = bucket[low]; // If a char was set before - make it a single-char subsequence.\n        bucket[low] = SEQ_START - this.encodeTableSeq.length;\n        this.encodeTableSeq.push(node);\n    }\n\n    // Traverse the character tree, allocating new nodes as needed.\n    for (var j = 1; j < seq.length-1; j++) {\n        var oldVal = node[uCode];\n        if (typeof oldVal === 'object')\n            node = oldVal;\n        else {\n            node = node[uCode] = {}\n            if (oldVal !== undefined)\n                node[DEF_CHAR] = oldVal\n        }\n    }\n\n    // Set the leaf to given dbcsCode.\n    uCode = seq[seq.length-1];\n    node[uCode] = dbcsCode;\n}\n\nDBCSCodec.prototype._fillEncodeTable = function(nodeIdx, prefix, skipEncodeChars) {\n    var node = this.decodeTables[nodeIdx];\n    for (var i = 0; i < 0x100; i++) {\n        var uCode = node[i];\n        var mbCode = prefix + i;\n        if (skipEncodeChars[mbCode])\n            continue;\n\n        if (uCode >= 0)\n            this._setEncodeChar(uCode, mbCode);\n        else if (uCode <= NODE_START)\n            this._fillEncodeTable(NODE_START - uCode, mbCode << 8, skipEncodeChars);\n        else if (uCode <= SEQ_START)\n            this._setEncodeSequence(this.decodeTableSeq[SEQ_START - uCode], mbCode);\n    }\n}\n\n\n\n// == Encoder ==================================================================\n\nfunction DBCSEncoder(options, codec) {\n    // Encoder state\n    this.leadSurrogate = -1;\n    this.seqObj = undefined;\n    \n    // Static data\n    this.encodeTable = codec.encodeTable;\n    this.encodeTableSeq = codec.encodeTableSeq;\n    this.defaultCharSingleByte = codec.defCharSB;\n    this.gb18030 = codec.gb18030;\n}\n\nDBCSEncoder.prototype.write = function(str) {\n    var newBuf = Buffer.alloc(str.length * (this.gb18030 ? 4 : 3)),\n        leadSurrogate = this.leadSurrogate,\n        seqObj = this.seqObj, nextChar = -1,\n        i = 0, j = 0;\n\n    while (true) {\n        // 0. Get next character.\n        if (nextChar === -1) {\n            if (i == str.length) break;\n            var uCode = str.charCodeAt(i++);\n        }\n        else {\n            var uCode = nextChar;\n            nextChar = -1;    \n        }\n\n        // 1. Handle surrogates.\n        if (0xD800 <= uCode && uCode < 0xE000) { // Char is one of surrogates.\n            if (uCode < 0xDC00) { // We've got lead surrogate.\n                if (leadSurrogate === -1) {\n                    leadSurrogate = uCode;\n                    continue;\n                } else {\n                    leadSurrogate = uCode;\n                    // Double lead surrogate found.\n                    uCode = UNASSIGNED;\n                }\n            } else { // We've got trail surrogate.\n                if (leadSurrogate !== -1) {\n                    uCode = 0x10000 + (leadSurrogate - 0xD800) * 0x400 + (uCode - 0xDC00);\n                    leadSurrogate = -1;\n                } else {\n                    // Incomplete surrogate pair - only trail surrogate found.\n                    uCode = UNASSIGNED;\n                }\n                \n            }\n        }\n        else if (leadSurrogate !== -1) {\n            // Incomplete surrogate pair - only lead surrogate found.\n            nextChar = uCode; uCode = UNASSIGNED; // Write an error, then current char.\n            leadSurrogate = -1;\n        }\n\n        // 2. Convert uCode character.\n        var dbcsCode = UNASSIGNED;\n        if (seqObj !== undefined && uCode != UNASSIGNED) { // We are in the middle of the sequence\n            var resCode = seqObj[uCode];\n            if (typeof resCode === 'object') { // Sequence continues.\n                seqObj = resCode;\n                continue;\n\n            } else if (typeof resCode == 'number') { // Sequence finished. Write it.\n                dbcsCode = resCode;\n\n            } else if (resCode == undefined) { // Current character is not part of the sequence.\n\n                // Try default character for this sequence\n                resCode = seqObj[DEF_CHAR];\n                if (resCode !== undefined) {\n                    dbcsCode = resCode; // Found. Write it.\n                    nextChar = uCode; // Current character will be written too in the next iteration.\n\n                } else {\n                    // TODO: What if we have no default? (resCode == undefined)\n                    // Then, we should write first char of the sequence as-is and try the rest recursively.\n                    // Didn't do it for now because no encoding has this situation yet.\n                    // Currently, just skip the sequence and write current char.\n                }\n            }\n            seqObj = undefined;\n        }\n        else if (uCode >= 0) {  // Regular character\n            var subtable = this.encodeTable[uCode >> 8];\n            if (subtable !== undefined)\n                dbcsCode = subtable[uCode & 0xFF];\n            \n            if (dbcsCode <= SEQ_START) { // Sequence start\n                seqObj = this.encodeTableSeq[SEQ_START-dbcsCode];\n                continue;\n            }\n\n            if (dbcsCode == UNASSIGNED && this.gb18030) {\n                // Use GB18030 algorithm to find character(s) to write.\n                var idx = findIdx(this.gb18030.uChars, uCode);\n                if (idx != -1) {\n                    var dbcsCode = this.gb18030.gbChars[idx] + (uCode - this.gb18030.uChars[idx]);\n                    newBuf[j++] = 0x81 + Math.floor(dbcsCode / 12600); dbcsCode = dbcsCode % 12600;\n                    newBuf[j++] = 0x30 + Math.floor(dbcsCode / 1260); dbcsCode = dbcsCode % 1260;\n                    newBuf[j++] = 0x81 + Math.floor(dbcsCode / 10); dbcsCode = dbcsCode % 10;\n                    newBuf[j++] = 0x30 + dbcsCode;\n                    continue;\n                }\n            }\n        }\n\n        // 3. Write dbcsCode character.\n        if (dbcsCode === UNASSIGNED)\n            dbcsCode = this.defaultCharSingleByte;\n        \n        if (dbcsCode < 0x100) {\n            newBuf[j++] = dbcsCode;\n        }\n        else if (dbcsCode < 0x10000) {\n            newBuf[j++] = dbcsCode >> 8;   // high byte\n            newBuf[j++] = dbcsCode & 0xFF; // low byte\n        }\n        else {\n            newBuf[j++] = dbcsCode >> 16;\n            newBuf[j++] = (dbcsCode >> 8) & 0xFF;\n            newBuf[j++] = dbcsCode & 0xFF;\n        }\n    }\n\n    this.seqObj = seqObj;\n    this.leadSurrogate = leadSurrogate;\n    return newBuf.slice(0, j);\n}\n\nDBCSEncoder.prototype.end = function() {\n    if (this.leadSurrogate === -1 && this.seqObj === undefined)\n        return; // All clean. Most often case.\n\n    var newBuf = Buffer.alloc(10), j = 0;\n\n    if (this.seqObj) { // We're in the sequence.\n        var dbcsCode = this.seqObj[DEF_CHAR];\n        if (dbcsCode !== undefined) { // Write beginning of the sequence.\n            if (dbcsCode < 0x100) {\n                newBuf[j++] = dbcsCode;\n            }\n            else {\n                newBuf[j++] = dbcsCode >> 8;   // high byte\n                newBuf[j++] = dbcsCode & 0xFF; // low byte\n            }\n        } else {\n            // See todo above.\n        }\n        this.seqObj = undefined;\n    }\n\n    if (this.leadSurrogate !== -1) {\n        // Incomplete surrogate pair - only lead surrogate found.\n        newBuf[j++] = this.defaultCharSingleByte;\n        this.leadSurrogate = -1;\n    }\n    \n    return newBuf.slice(0, j);\n}\n\n// Export for testing\nDBCSEncoder.prototype.findIdx = findIdx;\n\n\n// == Decoder ==================================================================\n\nfunction DBCSDecoder(options, codec) {\n    // Decoder state\n    this.nodeIdx = 0;\n    this.prevBuf = Buffer.alloc(0);\n\n    // Static data\n    this.decodeTables = codec.decodeTables;\n    this.decodeTableSeq = codec.decodeTableSeq;\n    this.defaultCharUnicode = codec.defaultCharUnicode;\n    this.gb18030 = codec.gb18030;\n}\n\nDBCSDecoder.prototype.write = function(buf) {\n    var newBuf = Buffer.alloc(buf.length*2),\n        nodeIdx = this.nodeIdx, \n        prevBuf = this.prevBuf, prevBufOffset = this.prevBuf.length,\n        seqStart = -this.prevBuf.length, // idx of the start of current parsed sequence.\n        uCode;\n\n    if (prevBufOffset > 0) // Make prev buf overlap a little to make it easier to slice later.\n        prevBuf = Buffer.concat([prevBuf, buf.slice(0, 10)]);\n    \n    for (var i = 0, j = 0; i < buf.length; i++) {\n        var curByte = (i >= 0) ? buf[i] : prevBuf[i + prevBufOffset];\n\n        // Lookup in current trie node.\n        var uCode = this.decodeTables[nodeIdx][curByte];\n\n        if (uCode >= 0) { \n            // Normal character, just use it.\n        }\n        else if (uCode === UNASSIGNED) { // Unknown char.\n            // TODO: Callback with seq.\n            //var curSeq = (seqStart >= 0) ? buf.slice(seqStart, i+1) : prevBuf.slice(seqStart + prevBufOffset, i+1 + prevBufOffset);\n            i = seqStart; // Try to parse again, after skipping first byte of the sequence ('i' will be incremented by 'for' cycle).\n            uCode = this.defaultCharUnicode.charCodeAt(0);\n        }\n        else if (uCode === GB18030_CODE) {\n            var curSeq = (seqStart >= 0) ? buf.slice(seqStart, i+1) : prevBuf.slice(seqStart + prevBufOffset, i+1 + prevBufOffset);\n            var ptr = (curSeq[0]-0x81)*12600 + (curSeq[1]-0x30)*1260 + (curSeq[2]-0x81)*10 + (curSeq[3]-0x30);\n            var idx = findIdx(this.gb18030.gbChars, ptr);\n            uCode = this.gb18030.uChars[idx] + ptr - this.gb18030.gbChars[idx];\n        }\n        else if (uCode <= NODE_START) { // Go to next trie node.\n            nodeIdx = NODE_START - uCode;\n            continue;\n        }\n        else if (uCode <= SEQ_START) { // Output a sequence of chars.\n            var seq = this.decodeTableSeq[SEQ_START - uCode];\n            for (var k = 0; k < seq.length - 1; k++) {\n                uCode = seq[k];\n                newBuf[j++] = uCode & 0xFF;\n                newBuf[j++] = uCode >> 8;\n            }\n            uCode = seq[seq.length-1];\n        }\n        else\n            throw new Error(\"iconv-lite internal error: invalid decoding table value \" + uCode + \" at \" + nodeIdx + \"/\" + curByte);\n\n        // Write the character to buffer, handling higher planes using surrogate pair.\n        if (uCode > 0xFFFF) { \n            uCode -= 0x10000;\n            var uCodeLead = 0xD800 + Math.floor(uCode / 0x400);\n            newBuf[j++] = uCodeLead & 0xFF;\n            newBuf[j++] = uCodeLead >> 8;\n\n            uCode = 0xDC00 + uCode % 0x400;\n        }\n        newBuf[j++] = uCode & 0xFF;\n        newBuf[j++] = uCode >> 8;\n\n        // Reset trie node.\n        nodeIdx = 0; seqStart = i+1;\n    }\n\n    this.nodeIdx = nodeIdx;\n    this.prevBuf = (seqStart >= 0) ? buf.slice(seqStart) : prevBuf.slice(seqStart + prevBufOffset);\n    return newBuf.slice(0, j).toString('ucs2');\n}\n\nDBCSDecoder.prototype.end = function() {\n    var ret = '';\n\n    // Try to parse all remaining chars.\n    while (this.prevBuf.length > 0) {\n        // Skip 1 character in the buffer.\n        ret += this.defaultCharUnicode;\n        var buf = this.prevBuf.slice(1);\n\n        // Parse remaining as usual.\n        this.prevBuf = Buffer.alloc(0);\n        this.nodeIdx = 0;\n        if (buf.length > 0)\n            ret += this.write(buf);\n    }\n\n    this.nodeIdx = 0;\n    return ret;\n}\n\n// Binary search for GB18030. Returns largest i such that table[i] <= val.\nfunction findIdx(table, val) {\n    if (table[0] > val)\n        return -1;\n\n    var l = 0, r = table.length;\n    while (l < r-1) { // always table[l] <= val < table[r]\n        var mid = l + Math.floor((r-l+1)/2);\n        if (table[mid] <= val)\n            l = mid;\n        else\n            r = mid;\n    }\n    return l;\n}\n\n","\"use strict\";\n\n// Description of supported double byte encodings and aliases.\n// Tables are not require()-d until they are needed to speed up library load.\n// require()-s are direct to support Browserify.\n\nmodule.exports = {\n    \n    // == Japanese/ShiftJIS ====================================================\n    // All japanese encodings are based on JIS X set of standards:\n    // JIS X 0201 - Single-byte encoding of ASCII + ¥ + Kana chars at 0xA1-0xDF.\n    // JIS X 0208 - Main set of 6879 characters, placed in 94x94 plane, to be encoded by 2 bytes. \n    //              Has several variations in 1978, 1983, 1990 and 1997.\n    // JIS X 0212 - Supplementary plane of 6067 chars in 94x94 plane. 1990. Effectively dead.\n    // JIS X 0213 - Extension and modern replacement of 0208 and 0212. Total chars: 11233.\n    //              2 planes, first is superset of 0208, second - revised 0212.\n    //              Introduced in 2000, revised 2004. Some characters are in Unicode Plane 2 (0x2xxxx)\n\n    // Byte encodings are:\n    //  * Shift_JIS: Compatible with 0201, uses not defined chars in top half as lead bytes for double-byte\n    //               encoding of 0208. Lead byte ranges: 0x81-0x9F, 0xE0-0xEF; Trail byte ranges: 0x40-0x7E, 0x80-0x9E, 0x9F-0xFC.\n    //               Windows CP932 is a superset of Shift_JIS. Some companies added more chars, notably KDDI.\n    //  * EUC-JP:    Up to 3 bytes per character. Used mostly on *nixes.\n    //               0x00-0x7F       - lower part of 0201\n    //               0x8E, 0xA1-0xDF - upper part of 0201\n    //               (0xA1-0xFE)x2   - 0208 plane (94x94).\n    //               0x8F, (0xA1-0xFE)x2 - 0212 plane (94x94).\n    //  * JIS X 208: 7-bit, direct encoding of 0208. Byte ranges: 0x21-0x7E (94 values). Uncommon.\n    //               Used as-is in ISO2022 family.\n    //  * ISO2022-JP: Stateful encoding, with escape sequences to switch between ASCII, \n    //                0201-1976 Roman, 0208-1978, 0208-1983.\n    //  * ISO2022-JP-1: Adds esc seq for 0212-1990.\n    //  * ISO2022-JP-2: Adds esc seq for GB2313-1980, KSX1001-1992, ISO8859-1, ISO8859-7.\n    //  * ISO2022-JP-3: Adds esc seq for 0201-1976 Kana set, 0213-2000 Planes 1, 2.\n    //  * ISO2022-JP-2004: Adds 0213-2004 Plane 1.\n    //\n    // After JIS X 0213 appeared, Shift_JIS-2004, EUC-JISX0213 and ISO2022-JP-2004 followed, with just changing the planes.\n    //\n    // Overall, it seems that it's a mess :( http://www8.plala.or.jp/tkubota1/unicode-symbols-map2.html\n\n    'shiftjis': {\n        type: '_dbcs',\n        table: function() { return require('./tables/shiftjis.json') },\n        encodeAdd: {'\\u00a5': 0x5C, '\\u203E': 0x7E},\n        encodeSkipVals: [{from: 0xED40, to: 0xF940}],\n    },\n    'csshiftjis': 'shiftjis',\n    'mskanji': 'shiftjis',\n    'sjis': 'shiftjis',\n    'windows31j': 'shiftjis',\n    'ms31j': 'shiftjis',\n    'xsjis': 'shiftjis',\n    'windows932': 'shiftjis',\n    'ms932': 'shiftjis',\n    '932': 'shiftjis',\n    'cp932': 'shiftjis',\n\n    'eucjp': {\n        type: '_dbcs',\n        table: function() { return require('./tables/eucjp.json') },\n        encodeAdd: {'\\u00a5': 0x5C, '\\u203E': 0x7E},\n    },\n\n    // TODO: KDDI extension to Shift_JIS\n    // TODO: IBM CCSID 942 = CP932, but F0-F9 custom chars and other char changes.\n    // TODO: IBM CCSID 943 = Shift_JIS = CP932 with original Shift_JIS lower 128 chars.\n\n\n    // == Chinese/GBK ==========================================================\n    // http://en.wikipedia.org/wiki/GBK\n    // We mostly implement W3C recommendation: https://www.w3.org/TR/encoding/#gbk-encoder\n\n    // Oldest GB2312 (1981, ~7600 chars) is a subset of CP936\n    'gb2312': 'cp936',\n    'gb231280': 'cp936',\n    'gb23121980': 'cp936',\n    'csgb2312': 'cp936',\n    'csiso58gb231280': 'cp936',\n    'euccn': 'cp936',\n\n    // Microsoft's CP936 is a subset and approximation of GBK.\n    'windows936': 'cp936',\n    'ms936': 'cp936',\n    '936': 'cp936',\n    'cp936': {\n        type: '_dbcs',\n        table: function() { return require('./tables/cp936.json') },\n    },\n\n    // GBK (~22000 chars) is an extension of CP936 that added user-mapped chars and some other.\n    'gbk': {\n        type: '_dbcs',\n        table: function() { return require('./tables/cp936.json').concat(require('./tables/gbk-added.json')) },\n    },\n    'xgbk': 'gbk',\n    'isoir58': 'gbk',\n\n    // GB18030 is an algorithmic extension of GBK.\n    // Main source: https://www.w3.org/TR/encoding/#gbk-encoder\n    // http://icu-project.org/docs/papers/gb18030.html\n    // http://source.icu-project.org/repos/icu/data/trunk/charset/data/xml/gb-18030-2000.xml\n    // http://www.khngai.com/chinese/charmap/tblgbk.php?page=0\n    'gb18030': {\n        type: '_dbcs',\n        table: function() { return require('./tables/cp936.json').concat(require('./tables/gbk-added.json')) },\n        gb18030: function() { return require('./tables/gb18030-ranges.json') },\n        encodeSkipVals: [0x80],\n        encodeAdd: {'€': 0xA2E3},\n    },\n\n    'chinese': 'gb18030',\n\n\n    // == Korean ===============================================================\n    // EUC-KR, KS_C_5601 and KS X 1001 are exactly the same.\n    'windows949': 'cp949',\n    'ms949': 'cp949',\n    '949': 'cp949',\n    'cp949': {\n        type: '_dbcs',\n        table: function() { return require('./tables/cp949.json') },\n    },\n\n    'cseuckr': 'cp949',\n    'csksc56011987': 'cp949',\n    'euckr': 'cp949',\n    'isoir149': 'cp949',\n    'korean': 'cp949',\n    'ksc56011987': 'cp949',\n    'ksc56011989': 'cp949',\n    'ksc5601': 'cp949',\n\n\n    // == Big5/Taiwan/Hong Kong ================================================\n    // There are lots of tables for Big5 and cp950. Please see the following links for history:\n    // http://moztw.org/docs/big5/  http://www.haible.de/bruno/charsets/conversion-tables/Big5.html\n    // Variations, in roughly number of defined chars:\n    //  * Windows CP 950: Microsoft variant of Big5. Canonical: http://www.unicode.org/Public/MAPPINGS/VENDORS/MICSFT/WINDOWS/CP950.TXT\n    //  * Windows CP 951: Microsoft variant of Big5-HKSCS-2001. Seems to be never public. http://me.abelcheung.org/articles/research/what-is-cp951/\n    //  * Big5-2003 (Taiwan standard) almost superset of cp950.\n    //  * Unicode-at-on (UAO) / Mozilla 1.8. Falling out of use on the Web. Not supported by other browsers.\n    //  * Big5-HKSCS (-2001, -2004, -2008). Hong Kong standard. \n    //    many unicode code points moved from PUA to Supplementary plane (U+2XXXX) over the years.\n    //    Plus, it has 4 combining sequences.\n    //    Seems that Mozilla refused to support it for 10 yrs. https://bugzilla.mozilla.org/show_bug.cgi?id=162431 https://bugzilla.mozilla.org/show_bug.cgi?id=310299\n    //    because big5-hkscs is the only encoding to include astral characters in non-algorithmic way.\n    //    Implementations are not consistent within browsers; sometimes labeled as just big5.\n    //    MS Internet Explorer switches from big5 to big5-hkscs when a patch applied.\n    //    Great discussion & recap of what's going on https://bugzilla.mozilla.org/show_bug.cgi?id=912470#c31\n    //    In the encoder, it might make sense to support encoding old PUA mappings to Big5 bytes seq-s.\n    //    Official spec: http://www.ogcio.gov.hk/en/business/tech_promotion/ccli/terms/doc/2003cmp_2008.txt\n    //                   http://www.ogcio.gov.hk/tc/business/tech_promotion/ccli/terms/doc/hkscs-2008-big5-iso.txt\n    // \n    // Current understanding of how to deal with Big5(-HKSCS) is in the Encoding Standard, http://encoding.spec.whatwg.org/#big5-encoder\n    // Unicode mapping (http://www.unicode.org/Public/MAPPINGS/OBSOLETE/EASTASIA/OTHER/BIG5.TXT) is said to be wrong.\n\n    'windows950': 'cp950',\n    'ms950': 'cp950',\n    '950': 'cp950',\n    'cp950': {\n        type: '_dbcs',\n        table: function() { return require('./tables/cp950.json') },\n    },\n\n    // Big5 has many variations and is an extension of cp950. We use Encoding Standard's as a consensus.\n    'big5': 'big5hkscs',\n    'big5hkscs': {\n        type: '_dbcs',\n        table: function() { return require('./tables/cp950.json').concat(require('./tables/big5-added.json')) },\n        encodeSkipVals: [0xa2cc],\n    },\n\n    'cnbig5': 'big5hkscs',\n    'csbig5': 'big5hkscs',\n    'xxbig5': 'big5hkscs',\n};\n","\"use strict\";\n\n// Update this array if you add/rename/remove files in this directory.\n// We support Browserify by skipping automatic module discovery and requiring modules directly.\nvar modules = [\n    require(\"./internal\"),\n    require(\"./utf16\"),\n    require(\"./utf7\"),\n    require(\"./sbcs-codec\"),\n    require(\"./sbcs-data\"),\n    require(\"./sbcs-data-generated\"),\n    require(\"./dbcs-codec\"),\n    require(\"./dbcs-data\"),\n];\n\n// Put all encoding/alias/codec definitions to single object and export it. \nfor (var i = 0; i < modules.length; i++) {\n    var module = modules[i];\n    for (var enc in module)\n        if (Object.prototype.hasOwnProperty.call(module, enc))\n            exports[enc] = module[enc];\n}\n","\"use strict\";\nvar Buffer = require(\"safer-buffer\").Buffer;\n\n// Export Node.js internal encodings.\n\nmodule.exports = {\n    // Encodings\n    utf8:   { type: \"_internal\", bomAware: true},\n    cesu8:  { type: \"_internal\", bomAware: true},\n    unicode11utf8: \"utf8\",\n\n    ucs2:   { type: \"_internal\", bomAware: true},\n    utf16le: \"ucs2\",\n\n    binary: { type: \"_internal\" },\n    base64: { type: \"_internal\" },\n    hex:    { type: \"_internal\" },\n\n    // Codec.\n    _internal: InternalCodec,\n};\n\n//------------------------------------------------------------------------------\n\nfunction InternalCodec(codecOptions, iconv) {\n    this.enc = codecOptions.encodingName;\n    this.bomAware = codecOptions.bomAware;\n\n    if (this.enc === \"base64\")\n        this.encoder = InternalEncoderBase64;\n    else if (this.enc === \"cesu8\") {\n        this.enc = \"utf8\"; // Use utf8 for decoding.\n        this.encoder = InternalEncoderCesu8;\n\n        // Add decoder for versions of Node not supporting CESU-8\n        if (Buffer.from('eda0bdedb2a9', 'hex').toString() !== '💩') {\n            this.decoder = InternalDecoderCesu8;\n            this.defaultCharUnicode = iconv.defaultCharUnicode;\n        }\n    }\n}\n\nInternalCodec.prototype.encoder = InternalEncoder;\nInternalCodec.prototype.decoder = InternalDecoder;\n\n//------------------------------------------------------------------------------\n\n// We use node.js internal decoder. Its signature is the same as ours.\nvar StringDecoder = require('string_decoder').StringDecoder;\n\nif (!StringDecoder.prototype.end) // Node v0.8 doesn't have this method.\n    StringDecoder.prototype.end = function() {};\n\n\nfunction InternalDecoder(options, codec) {\n    StringDecoder.call(this, codec.enc);\n}\n\nInternalDecoder.prototype = StringDecoder.prototype;\n\n\n//------------------------------------------------------------------------------\n// Encoder is mostly trivial\n\nfunction InternalEncoder(options, codec) {\n    this.enc = codec.enc;\n}\n\nInternalEncoder.prototype.write = function(str) {\n    return Buffer.from(str, this.enc);\n}\n\nInternalEncoder.prototype.end = function() {\n}\n\n\n//------------------------------------------------------------------------------\n// Except base64 encoder, which must keep its state.\n\nfunction InternalEncoderBase64(options, codec) {\n    this.prevStr = '';\n}\n\nInternalEncoderBase64.prototype.write = function(str) {\n    str = this.prevStr + str;\n    var completeQuads = str.length - (str.length % 4);\n    this.prevStr = str.slice(completeQuads);\n    str = str.slice(0, completeQuads);\n\n    return Buffer.from(str, \"base64\");\n}\n\nInternalEncoderBase64.prototype.end = function() {\n    return Buffer.from(this.prevStr, \"base64\");\n}\n\n\n//------------------------------------------------------------------------------\n// CESU-8 encoder is also special.\n\nfunction InternalEncoderCesu8(options, codec) {\n}\n\nInternalEncoderCesu8.prototype.write = function(str) {\n    var buf = Buffer.alloc(str.length * 3), bufIdx = 0;\n    for (var i = 0; i < str.length; i++) {\n        var charCode = str.charCodeAt(i);\n        // Naive implementation, but it works because CESU-8 is especially easy\n        // to convert from UTF-16 (which all JS strings are encoded in).\n        if (charCode < 0x80)\n            buf[bufIdx++] = charCode;\n        else if (charCode < 0x800) {\n            buf[bufIdx++] = 0xC0 + (charCode >>> 6);\n            buf[bufIdx++] = 0x80 + (charCode & 0x3f);\n        }\n        else { // charCode will always be < 0x10000 in javascript.\n            buf[bufIdx++] = 0xE0 + (charCode >>> 12);\n            buf[bufIdx++] = 0x80 + ((charCode >>> 6) & 0x3f);\n            buf[bufIdx++] = 0x80 + (charCode & 0x3f);\n        }\n    }\n    return buf.slice(0, bufIdx);\n}\n\nInternalEncoderCesu8.prototype.end = function() {\n}\n\n//------------------------------------------------------------------------------\n// CESU-8 decoder is not implemented in Node v4.0+\n\nfunction InternalDecoderCesu8(options, codec) {\n    this.acc = 0;\n    this.contBytes = 0;\n    this.accBytes = 0;\n    this.defaultCharUnicode = codec.defaultCharUnicode;\n}\n\nInternalDecoderCesu8.prototype.write = function(buf) {\n    var acc = this.acc, contBytes = this.contBytes, accBytes = this.accBytes, \n        res = '';\n    for (var i = 0; i < buf.length; i++) {\n        var curByte = buf[i];\n        if ((curByte & 0xC0) !== 0x80) { // Leading byte\n            if (contBytes > 0) { // Previous code is invalid\n                res += this.defaultCharUnicode;\n                contBytes = 0;\n            }\n\n            if (curByte < 0x80) { // Single-byte code\n                res += String.fromCharCode(curByte);\n            } else if (curByte < 0xE0) { // Two-byte code\n                acc = curByte & 0x1F;\n                contBytes = 1; accBytes = 1;\n            } else if (curByte < 0xF0) { // Three-byte code\n                acc = curByte & 0x0F;\n                contBytes = 2; accBytes = 1;\n            } else { // Four or more are not supported for CESU-8.\n                res += this.defaultCharUnicode;\n            }\n        } else { // Continuation byte\n            if (contBytes > 0) { // We're waiting for it.\n                acc = (acc << 6) | (curByte & 0x3f);\n                contBytes--; accBytes++;\n                if (contBytes === 0) {\n                    // Check for overlong encoding, but support Modified UTF-8 (encoding NULL as C0 80)\n                    if (accBytes === 2 && acc < 0x80 && acc > 0)\n                        res += this.defaultCharUnicode;\n                    else if (accBytes === 3 && acc < 0x800)\n                        res += this.defaultCharUnicode;\n                    else\n                        // Actually add character.\n                        res += String.fromCharCode(acc);\n                }\n            } else { // Unexpected continuation byte\n                res += this.defaultCharUnicode;\n            }\n        }\n    }\n    this.acc = acc; this.contBytes = contBytes; this.accBytes = accBytes;\n    return res;\n}\n\nInternalDecoderCesu8.prototype.end = function() {\n    var res = 0;\n    if (this.contBytes > 0)\n        res += this.defaultCharUnicode;\n    return res;\n}\n","\"use strict\";\nvar Buffer = require(\"safer-buffer\").Buffer;\n\n// Single-byte codec. Needs a 'chars' string parameter that contains 256 or 128 chars that\n// correspond to encoded bytes (if 128 - then lower half is ASCII). \n\nexports._sbcs = SBCSCodec;\nfunction SBCSCodec(codecOptions, iconv) {\n    if (!codecOptions)\n        throw new Error(\"SBCS codec is called without the data.\")\n    \n    // Prepare char buffer for decoding.\n    if (!codecOptions.chars || (codecOptions.chars.length !== 128 && codecOptions.chars.length !== 256))\n        throw new Error(\"Encoding '\"+codecOptions.type+\"' has incorrect 'chars' (must be of len 128 or 256)\");\n    \n    if (codecOptions.chars.length === 128) {\n        var asciiString = \"\";\n        for (var i = 0; i < 128; i++)\n            asciiString += String.fromCharCode(i);\n        codecOptions.chars = asciiString + codecOptions.chars;\n    }\n\n    this.decodeBuf = Buffer.from(codecOptions.chars, 'ucs2');\n    \n    // Encoding buffer.\n    var encodeBuf = Buffer.alloc(65536, iconv.defaultCharSingleByte.charCodeAt(0));\n\n    for (var i = 0; i < codecOptions.chars.length; i++)\n        encodeBuf[codecOptions.chars.charCodeAt(i)] = i;\n\n    this.encodeBuf = encodeBuf;\n}\n\nSBCSCodec.prototype.encoder = SBCSEncoder;\nSBCSCodec.prototype.decoder = SBCSDecoder;\n\n\nfunction SBCSEncoder(options, codec) {\n    this.encodeBuf = codec.encodeBuf;\n}\n\nSBCSEncoder.prototype.write = function(str) {\n    var buf = Buffer.alloc(str.length);\n    for (var i = 0; i < str.length; i++)\n        buf[i] = this.encodeBuf[str.charCodeAt(i)];\n    \n    return buf;\n}\n\nSBCSEncoder.prototype.end = function() {\n}\n\n\nfunction SBCSDecoder(options, codec) {\n    this.decodeBuf = codec.decodeBuf;\n}\n\nSBCSDecoder.prototype.write = function(buf) {\n    // Strings are immutable in JS -> we use ucs2 buffer to speed up computations.\n    var decodeBuf = this.decodeBuf;\n    var newBuf = Buffer.alloc(buf.length*2);\n    var idx1 = 0, idx2 = 0;\n    for (var i = 0; i < buf.length; i++) {\n        idx1 = buf[i]*2; idx2 = i*2;\n        newBuf[idx2] = decodeBuf[idx1];\n        newBuf[idx2+1] = decodeBuf[idx1+1];\n    }\n    return newBuf.toString('ucs2');\n}\n\nSBCSDecoder.prototype.end = function() {\n}\n","\"use strict\";\n\n// Generated data for sbcs codec. Don't edit manually. Regenerate using generation/gen-sbcs.js script.\nmodule.exports = {\n  \"437\": \"cp437\",\n  \"737\": \"cp737\",\n  \"775\": \"cp775\",\n  \"850\": \"cp850\",\n  \"852\": \"cp852\",\n  \"855\": \"cp855\",\n  \"856\": \"cp856\",\n  \"857\": \"cp857\",\n  \"858\": \"cp858\",\n  \"860\": \"cp860\",\n  \"861\": \"cp861\",\n  \"862\": \"cp862\",\n  \"863\": \"cp863\",\n  \"864\": \"cp864\",\n  \"865\": \"cp865\",\n  \"866\": \"cp866\",\n  \"869\": \"cp869\",\n  \"874\": \"windows874\",\n  \"922\": \"cp922\",\n  \"1046\": \"cp1046\",\n  \"1124\": \"cp1124\",\n  \"1125\": \"cp1125\",\n  \"1129\": \"cp1129\",\n  \"1133\": \"cp1133\",\n  \"1161\": \"cp1161\",\n  \"1162\": \"cp1162\",\n  \"1163\": \"cp1163\",\n  \"1250\": \"windows1250\",\n  \"1251\": \"windows1251\",\n  \"1252\": \"windows1252\",\n  \"1253\": \"windows1253\",\n  \"1254\": \"windows1254\",\n  \"1255\": \"windows1255\",\n  \"1256\": \"windows1256\",\n  \"1257\": \"windows1257\",\n  \"1258\": \"windows1258\",\n  \"28591\": \"iso88591\",\n  \"28592\": \"iso88592\",\n  \"28593\": \"iso88593\",\n  \"28594\": \"iso88594\",\n  \"28595\": \"iso88595\",\n  \"28596\": \"iso88596\",\n  \"28597\": \"iso88597\",\n  \"28598\": \"iso88598\",\n  \"28599\": \"iso88599\",\n  \"28600\": \"iso885910\",\n  \"28601\": \"iso885911\",\n  \"28603\": \"iso885913\",\n  \"28604\": \"iso885914\",\n  \"28605\": \"iso885915\",\n  \"28606\": \"iso885916\",\n  \"windows874\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"€����…�����������‘’“”•–—�������� กขฃคฅฆงจฉชซฌญฎฏฐฑฒณดตถทธนบปผฝพฟภมยรฤลฦวศษสหฬอฮฯะัาำิีึืฺุู����฿เแโใไๅๆ็่้๊๋์ํ๎๏๐๑๒๓๔๕๖๗๘๙๚๛����\"\n  },\n  \"win874\": \"windows874\",\n  \"cp874\": \"windows874\",\n  \"windows1250\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"€�‚�„…†‡�‰Š‹ŚŤŽŹ�‘’“”•–—�™š›śťžź ˇ˘Ł¤Ą¦§¨©Ş«¬­®Ż°±˛ł´µ¶·¸ąş»Ľ˝ľżŔÁÂĂÄĹĆÇČÉĘËĚÍÎĎĐŃŇÓÔŐÖ×ŘŮÚŰÜÝŢßŕáâăäĺćçčéęëěíîďđńňóôőö÷řůúűüýţ˙\"\n  },\n  \"win1250\": \"windows1250\",\n  \"cp1250\": \"windows1250\",\n  \"windows1251\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ЂЃ‚ѓ„…†‡€‰Љ‹ЊЌЋЏђ‘’“”•–—�™љ›њќћџ ЎўЈ¤Ґ¦§Ё©Є«¬­®Ї°±Ііґµ¶·ё№є»јЅѕїАБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯабвгдежзийклмнопрстуфхцчшщъыьэюя\"\n  },\n  \"win1251\": \"windows1251\",\n  \"cp1251\": \"windows1251\",\n  \"windows1252\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"€�‚ƒ„…†‡ˆ‰Š‹Œ�Ž��‘’“”•–—˜™š›œ�žŸ ¡¢£¤¥¦§¨©ª«¬­®¯°±²³´µ¶·¸¹º»¼½¾¿ÀÁÂÃÄÅÆÇÈÉÊËÌÍÎÏÐÑÒÓÔÕÖ×ØÙÚÛÜÝÞßàáâãäåæçèéêëìíîïðñòóôõö÷øùúûüýþÿ\"\n  },\n  \"win1252\": \"windows1252\",\n  \"cp1252\": \"windows1252\",\n  \"windows1253\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"€�‚ƒ„…†‡�‰�‹�����‘’“”•–—�™�›���� ΅Ά£¤¥¦§¨©�«¬­®―°±²³΄µ¶·ΈΉΊ»Ό½ΎΏΐΑΒΓΔΕΖΗΘΙΚΛΜΝΞΟΠΡ�ΣΤΥΦΧΨΩΪΫάέήίΰαβγδεζηθικλμνξοπρςστυφχψωϊϋόύώ�\"\n  },\n  \"win1253\": \"windows1253\",\n  \"cp1253\": \"windows1253\",\n  \"windows1254\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"€�‚ƒ„…†‡ˆ‰Š‹Œ����‘’“”•–—˜™š›œ��Ÿ ¡¢£¤¥¦§¨©ª«¬­®¯°±²³´µ¶·¸¹º»¼½¾¿ÀÁÂÃÄÅÆÇÈÉÊËÌÍÎÏĞÑÒÓÔÕÖ×ØÙÚÛÜİŞßàáâãäåæçèéêëìíîïğñòóôõö÷øùúûüışÿ\"\n  },\n  \"win1254\": \"windows1254\",\n  \"cp1254\": \"windows1254\",\n  \"windows1255\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"€�‚ƒ„…†‡ˆ‰�‹�����‘’“”•–—˜™�›���� ¡¢£₪¥¦§¨©×«¬­®¯°±²³´µ¶·¸¹÷»¼½¾¿ְֱֲֳִֵֶַָֹֺֻּֽ־ֿ׀ׁׂ׃װױײ׳״�������אבגדהוזחטיךכלםמןנסעףפץצקרשת��‎‏�\"\n  },\n  \"win1255\": \"windows1255\",\n  \"cp1255\": \"windows1255\",\n  \"windows1256\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"€پ‚ƒ„…†‡ˆ‰ٹ‹Œچژڈگ‘’“”•–—ک™ڑ›œ‌‍ں ،¢£¤¥¦§¨©ھ«¬­®¯°±²³´µ¶·¸¹؛»¼½¾؟ہءآأؤإئابةتثجحخدذرزسشصض×طظعغـفقكàلâمنهوçèéêëىيîïًٌٍَôُِ÷ّùْûü‎‏ے\"\n  },\n  \"win1256\": \"windows1256\",\n  \"cp1256\": \"windows1256\",\n  \"windows1257\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"€�‚�„…†‡�‰�‹�¨ˇ¸�‘’“”•–—�™�›�¯˛� �¢£¤�¦§Ø©Ŗ«¬­®Æ°±²³´µ¶·ø¹ŗ»¼½¾æĄĮĀĆÄÅĘĒČÉŹĖĢĶĪĻŠŃŅÓŌÕÖ×ŲŁŚŪÜŻŽßąįāćäåęēčéźėģķīļšńņóōõö÷ųłśūüżž˙\"\n  },\n  \"win1257\": \"windows1257\",\n  \"cp1257\": \"windows1257\",\n  \"windows1258\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"€�‚ƒ„…†‡ˆ‰�‹Œ����‘’“”•–—˜™�›œ��Ÿ ¡¢£¤¥¦§¨©ª«¬­®¯°±²³´µ¶·¸¹º»¼½¾¿ÀÁÂĂÄÅÆÇÈÉÊË̀ÍÎÏĐÑ̉ÓÔƠÖ×ØÙÚÛÜỮßàáâăäåæçèéêë́íîïđṇ̃óôơö÷øùúûüư₫ÿ\"\n  },\n  \"win1258\": \"windows1258\",\n  \"cp1258\": \"windows1258\",\n  \"iso88591\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" ¡¢£¤¥¦§¨©ª«¬­®¯°±²³´µ¶·¸¹º»¼½¾¿ÀÁÂÃÄÅÆÇÈÉÊËÌÍÎÏÐÑÒÓÔÕÖ×ØÙÚÛÜÝÞßàáâãäåæçèéêëìíîïðñòóôõö÷øùúûüýþÿ\"\n  },\n  \"cp28591\": \"iso88591\",\n  \"iso88592\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" Ą˘Ł¤ĽŚ§¨ŠŞŤŹ­ŽŻ°ą˛ł´ľśˇ¸šşťź˝žżŔÁÂĂÄĹĆÇČÉĘËĚÍÎĎĐŃŇÓÔŐÖ×ŘŮÚŰÜÝŢßŕáâăäĺćçčéęëěíîďđńňóôőö÷řůúűüýţ˙\"\n  },\n  \"cp28592\": \"iso88592\",\n  \"iso88593\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" Ħ˘£¤�Ĥ§¨İŞĞĴ­�Ż°ħ²³´µĥ·¸ışğĵ½�żÀÁÂ�ÄĊĈÇÈÉÊËÌÍÎÏ�ÑÒÓÔĠÖ×ĜÙÚÛÜŬŜßàáâ�äċĉçèéêëìíîï�ñòóôġö÷ĝùúûüŭŝ˙\"\n  },\n  \"cp28593\": \"iso88593\",\n  \"iso88594\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" ĄĸŖ¤ĨĻ§¨ŠĒĢŦ­Ž¯°ą˛ŗ´ĩļˇ¸šēģŧŊžŋĀÁÂÃÄÅÆĮČÉĘËĖÍÎĪĐŅŌĶÔÕÖ×ØŲÚÛÜŨŪßāáâãäåæįčéęëėíîīđņōķôõö÷øųúûüũū˙\"\n  },\n  \"cp28594\": \"iso88594\",\n  \"iso88595\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" ЁЂЃЄЅІЇЈЉЊЋЌ­ЎЏАБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯабвгдежзийклмнопрстуфхцчшщъыьэюя№ёђѓєѕіїјљњћќ§ўџ\"\n  },\n  \"cp28595\": \"iso88595\",\n  \"iso88596\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" ���¤�������،­�������������؛���؟�ءآأؤإئابةتثجحخدذرزسشصضطظعغ�����ـفقكلمنهوىيًٌٍَُِّْ�������������\"\n  },\n  \"cp28596\": \"iso88596\",\n  \"iso88597\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" ‘’£€₯¦§¨©ͺ«¬­�―°±²³΄΅Ά·ΈΉΊ»Ό½ΎΏΐΑΒΓΔΕΖΗΘΙΚΛΜΝΞΟΠΡ�ΣΤΥΦΧΨΩΪΫάέήίΰαβγδεζηθικλμνξοπρςστυφχψωϊϋόύώ�\"\n  },\n  \"cp28597\": \"iso88597\",\n  \"iso88598\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" �¢£¤¥¦§¨©×«¬­®¯°±²³´µ¶·¸¹÷»¼½¾��������������������������������‗אבגדהוזחטיךכלםמןנסעףפץצקרשת��‎‏�\"\n  },\n  \"cp28598\": \"iso88598\",\n  \"iso88599\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" ¡¢£¤¥¦§¨©ª«¬­®¯°±²³´µ¶·¸¹º»¼½¾¿ÀÁÂÃÄÅÆÇÈÉÊËÌÍÎÏĞÑÒÓÔÕÖ×ØÙÚÛÜİŞßàáâãäåæçèéêëìíîïğñòóôõö÷øùúûüışÿ\"\n  },\n  \"cp28599\": \"iso88599\",\n  \"iso885910\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" ĄĒĢĪĨĶ§ĻĐŠŦŽ­ŪŊ°ąēģīĩķ·ļđšŧž―ūŋĀÁÂÃÄÅÆĮČÉĘËĖÍÎÏÐŅŌÓÔÕÖŨØŲÚÛÜÝÞßāáâãäåæįčéęëėíîïðņōóôõöũøųúûüýþĸ\"\n  },\n  \"cp28600\": \"iso885910\",\n  \"iso885911\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" กขฃคฅฆงจฉชซฌญฎฏฐฑฒณดตถทธนบปผฝพฟภมยรฤลฦวศษสหฬอฮฯะัาำิีึืฺุู����฿เแโใไๅๆ็่้๊๋์ํ๎๏๐๑๒๓๔๕๖๗๘๙๚๛����\"\n  },\n  \"cp28601\": \"iso885911\",\n  \"iso885913\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" ”¢£¤„¦§Ø©Ŗ«¬­®Æ°±²³“µ¶·ø¹ŗ»¼½¾æĄĮĀĆÄÅĘĒČÉŹĖĢĶĪĻŠŃŅÓŌÕÖ×ŲŁŚŪÜŻŽßąįāćäåęēčéźėģķīļšńņóōõö÷ųłśūüżž’\"\n  },\n  \"cp28603\": \"iso885913\",\n  \"iso885914\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" Ḃḃ£ĊċḊ§Ẁ©ẂḋỲ­®ŸḞḟĠġṀṁ¶ṖẁṗẃṠỳẄẅṡÀÁÂÃÄÅÆÇÈÉÊËÌÍÎÏŴÑÒÓÔÕÖṪØÙÚÛÜÝŶßàáâãäåæçèéêëìíîïŵñòóôõöṫøùúûüýŷÿ\"\n  },\n  \"cp28604\": \"iso885914\",\n  \"iso885915\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" ¡¢£€¥Š§š©ª«¬­®¯°±²³Žµ¶·ž¹º»ŒœŸ¿ÀÁÂÃÄÅÆÇÈÉÊËÌÍÎÏÐÑÒÓÔÕÖ×ØÙÚÛÜÝÞßàáâãäåæçèéêëìíîïðñòóôõö÷øùúûüýþÿ\"\n  },\n  \"cp28605\": \"iso885915\",\n  \"iso885916\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" ĄąŁ€„Š§š©Ș«Ź­źŻ°±ČłŽ”¶·žčș»ŒœŸżÀÁÂĂÄĆÆÇÈÉÊËÌÍÎÏĐŃÒÓÔŐÖŚŰÙÚÛÜĘȚßàáâăäćæçèéêëìíîïđńòóôőöśűùúûüęțÿ\"\n  },\n  \"cp28606\": \"iso885916\",\n  \"cp437\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ÇüéâäàåçêëèïîìÄÅÉæÆôöòûùÿÖÜ¢£¥₧ƒáíóúñÑªº¿⌐¬½¼¡«»░▒▓│┤╡╢╖╕╣║╗╝╜╛┐└┴┬├─┼╞╟╚╔╩╦╠═╬╧╨╤╥╙╘╒╓╫╪┘┌█▄▌▐▀αßΓπΣσµτΦΘΩδ∞φε∩≡±≥≤⌠⌡÷≈°∙·√ⁿ²■ \"\n  },\n  \"ibm437\": \"cp437\",\n  \"csibm437\": \"cp437\",\n  \"cp737\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ΑΒΓΔΕΖΗΘΙΚΛΜΝΞΟΠΡΣΤΥΦΧΨΩαβγδεζηθικλμνξοπρσςτυφχψ░▒▓│┤╡╢╖╕╣║╗╝╜╛┐└┴┬├─┼╞╟╚╔╩╦╠═╬╧╨╤╥╙╘╒╓╫╪┘┌█▄▌▐▀ωάέήϊίόύϋώΆΈΉΊΌΎΏ±≥≤ΪΫ÷≈°∙·√ⁿ²■ \"\n  },\n  \"ibm737\": \"cp737\",\n  \"csibm737\": \"cp737\",\n  \"cp775\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ĆüéāäģåćłēŖŗīŹÄÅÉæÆōöĢ¢ŚśÖÜø£Ø×¤ĀĪóŻżź”¦©®¬½¼Ł«»░▒▓│┤ĄČĘĖ╣║╗╝ĮŠ┐└┴┬├─┼ŲŪ╚╔╩╦╠═╬Žąčęėįšųūž┘┌█▄▌▐▀ÓßŌŃõÕµńĶķĻļņĒŅ’­±“¾¶§÷„°∙·¹³²■ \"\n  },\n  \"ibm775\": \"cp775\",\n  \"csibm775\": \"cp775\",\n  \"cp850\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ÇüéâäàåçêëèïîìÄÅÉæÆôöòûùÿÖÜø£Ø×ƒáíóúñÑªº¿®¬½¼¡«»░▒▓│┤ÁÂÀ©╣║╗╝¢¥┐└┴┬├─┼ãÃ╚╔╩╦╠═╬¤ðÐÊËÈıÍÎÏ┘┌█▄¦Ì▀ÓßÔÒõÕµþÞÚÛÙýÝ¯´­±‗¾¶§÷¸°¨·¹³²■ \"\n  },\n  \"ibm850\": \"cp850\",\n  \"csibm850\": \"cp850\",\n  \"cp852\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ÇüéâäůćçłëŐőîŹÄĆÉĹĺôöĽľŚśÖÜŤťŁ×čáíóúĄąŽžĘę¬źČş«»░▒▓│┤ÁÂĚŞ╣║╗╝Żż┐└┴┬├─┼Ăă╚╔╩╦╠═╬¤đĐĎËďŇÍÎě┘┌█▄ŢŮ▀ÓßÔŃńňŠšŔÚŕŰýÝţ´­˝˛ˇ˘§÷¸°¨˙űŘř■ \"\n  },\n  \"ibm852\": \"cp852\",\n  \"csibm852\": \"cp852\",\n  \"cp855\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ђЂѓЃёЁєЄѕЅіІїЇјЈљЉњЊћЋќЌўЎџЏюЮъЪаАбБцЦдДеЕфФгГ«»░▒▓│┤хХиИ╣║╗╝йЙ┐└┴┬├─┼кК╚╔╩╦╠═╬¤лЛмМнНоОп┘┌█▄Пя▀ЯрРсСтТуУжЖвВьЬ№­ыЫзЗшШэЭщЩчЧ§■ \"\n  },\n  \"ibm855\": \"cp855\",\n  \"csibm855\": \"cp855\",\n  \"cp856\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"אבגדהוזחטיךכלםמןנסעףפץצקרשת�£�×����������®¬½¼�«»░▒▓│┤���©╣║╗╝¢¥┐└┴┬├─┼��╚╔╩╦╠═╬¤���������┘┌█▄¦�▀������µ�������¯´­±‗¾¶§÷¸°¨·¹³²■ \"\n  },\n  \"ibm856\": \"cp856\",\n  \"csibm856\": \"cp856\",\n  \"cp857\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ÇüéâäàåçêëèïîıÄÅÉæÆôöòûùİÖÜø£ØŞşáíóúñÑĞğ¿®¬½¼¡«»░▒▓│┤ÁÂÀ©╣║╗╝¢¥┐└┴┬├─┼ãÃ╚╔╩╦╠═╬¤ºªÊËÈ�ÍÎÏ┘┌█▄¦Ì▀ÓßÔÒõÕµ�×ÚÛÙìÿ¯´­±�¾¶§÷¸°¨·¹³²■ \"\n  },\n  \"ibm857\": \"cp857\",\n  \"csibm857\": \"cp857\",\n  \"cp858\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ÇüéâäàåçêëèïîìÄÅÉæÆôöòûùÿÖÜø£Ø×ƒáíóúñÑªº¿®¬½¼¡«»░▒▓│┤ÁÂÀ©╣║╗╝¢¥┐└┴┬├─┼ãÃ╚╔╩╦╠═╬¤ðÐÊËÈ€ÍÎÏ┘┌█▄¦Ì▀ÓßÔÒõÕµþÞÚÛÙýÝ¯´­±‗¾¶§÷¸°¨·¹³²■ \"\n  },\n  \"ibm858\": \"cp858\",\n  \"csibm858\": \"cp858\",\n  \"cp860\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ÇüéâãàÁçêÊèÍÔìÃÂÉÀÈôõòÚùÌÕÜ¢£Ù₧ÓáíóúñÑªº¿Ò¬½¼¡«»░▒▓│┤╡╢╖╕╣║╗╝╜╛┐└┴┬├─┼╞╟╚╔╩╦╠═╬╧╨╤╥╙╘╒╓╫╪┘┌█▄▌▐▀αßΓπΣσµτΦΘΩδ∞φε∩≡±≥≤⌠⌡÷≈°∙·√ⁿ²■ \"\n  },\n  \"ibm860\": \"cp860\",\n  \"csibm860\": \"cp860\",\n  \"cp861\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ÇüéâäàåçêëèÐðÞÄÅÉæÆôöþûÝýÖÜø£Ø₧ƒáíóúÁÍÓÚ¿⌐¬½¼¡«»░▒▓│┤╡╢╖╕╣║╗╝╜╛┐└┴┬├─┼╞╟╚╔╩╦╠═╬╧╨╤╥╙╘╒╓╫╪┘┌█▄▌▐▀αßΓπΣσµτΦΘΩδ∞φε∩≡±≥≤⌠⌡÷≈°∙·√ⁿ²■ \"\n  },\n  \"ibm861\": \"cp861\",\n  \"csibm861\": \"cp861\",\n  \"cp862\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"אבגדהוזחטיךכלםמןנסעףפץצקרשת¢£¥₧ƒáíóúñÑªº¿⌐¬½¼¡«»░▒▓│┤╡╢╖╕╣║╗╝╜╛┐└┴┬├─┼╞╟╚╔╩╦╠═╬╧╨╤╥╙╘╒╓╫╪┘┌█▄▌▐▀αßΓπΣσµτΦΘΩδ∞φε∩≡±≥≤⌠⌡÷≈°∙·√ⁿ²■ \"\n  },\n  \"ibm862\": \"cp862\",\n  \"csibm862\": \"cp862\",\n  \"cp863\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ÇüéâÂà¶çêëèïî‗À§ÉÈÊôËÏûù¤ÔÜ¢£ÙÛƒ¦´óú¨¸³¯Î⌐¬½¼¾«»░▒▓│┤╡╢╖╕╣║╗╝╜╛┐└┴┬├─┼╞╟╚╔╩╦╠═╬╧╨╤╥╙╘╒╓╫╪┘┌█▄▌▐▀αßΓπΣσµτΦΘΩδ∞φε∩≡±≥≤⌠⌡÷≈°∙·√ⁿ²■ \"\n  },\n  \"ibm863\": \"cp863\",\n  \"csibm863\": \"cp863\",\n  \"cp864\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\\u0000\\u0001\\u0002\\u0003\\u0004\\u0005\\u0006\\u0007\\b\\t\\n\\u000b\\f\\r\\u000e\\u000f\\u0010\\u0011\\u0012\\u0013\\u0014\\u0015\\u0016\\u0017\\u0018\\u0019\\u001a\\u001b\\u001c\\u001d\\u001e\\u001f !\\\"#$٪&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\\\]^_`abcdefghijklmnopqrstuvwxyz{|}~°·∙√▒─│┼┤┬├┴┐┌└┘β∞φ±½¼≈«»ﻷﻸ��ﻻﻼ� ­ﺂ£¤ﺄ��ﺎﺏﺕﺙ،ﺝﺡﺥ٠١٢٣٤٥٦٧٨٩ﻑ؛ﺱﺵﺹ؟¢ﺀﺁﺃﺅﻊﺋﺍﺑﺓﺗﺛﺟﺣﺧﺩﺫﺭﺯﺳﺷﺻﺿﻁﻅﻋﻏ¦¬÷×ﻉـﻓﻗﻛﻟﻣﻧﻫﻭﻯﻳﺽﻌﻎﻍﻡﹽّﻥﻩﻬﻰﻲﻐﻕﻵﻶﻝﻙﻱ■�\"\n  },\n  \"ibm864\": \"cp864\",\n  \"csibm864\": \"cp864\",\n  \"cp865\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ÇüéâäàåçêëèïîìÄÅÉæÆôöòûùÿÖÜø£Ø₧ƒáíóúñÑªº¿⌐¬½¼¡«¤░▒▓│┤╡╢╖╕╣║╗╝╜╛┐└┴┬├─┼╞╟╚╔╩╦╠═╬╧╨╤╥╙╘╒╓╫╪┘┌█▄▌▐▀αßΓπΣσµτΦΘΩδ∞φε∩≡±≥≤⌠⌡÷≈°∙·√ⁿ²■ \"\n  },\n  \"ibm865\": \"cp865\",\n  \"csibm865\": \"cp865\",\n  \"cp866\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"АБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯабвгдежзийклмноп░▒▓│┤╡╢╖╕╣║╗╝╜╛┐└┴┬├─┼╞╟╚╔╩╦╠═╬╧╨╤╥╙╘╒╓╫╪┘┌█▄▌▐▀рстуфхцчшщъыьэюяЁёЄєЇїЎў°∙·√№¤■ \"\n  },\n  \"ibm866\": \"cp866\",\n  \"csibm866\": \"cp866\",\n  \"cp869\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"������Ά�·¬¦‘’Έ―ΉΊΪΌ��ΎΫ©Ώ²³ά£έήίϊΐόύΑΒΓΔΕΖΗ½ΘΙ«»░▒▓│┤ΚΛΜΝ╣║╗╝ΞΟ┐└┴┬├─┼ΠΡ╚╔╩╦╠═╬ΣΤΥΦΧΨΩαβγ┘┌█▄δε▀ζηθικλμνξοπρσςτ΄­±υφχ§ψ΅°¨ωϋΰώ■ \"\n  },\n  \"ibm869\": \"cp869\",\n  \"csibm869\": \"cp869\",\n  \"cp922\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" ¡¢£¤¥¦§¨©ª«¬­®‾°±²³´µ¶·¸¹º»¼½¾¿ÀÁÂÃÄÅÆÇÈÉÊËÌÍÎÏŠÑÒÓÔÕÖ×ØÙÚÛÜÝŽßàáâãäåæçèéêëìíîïšñòóôõö÷øùúûüýžÿ\"\n  },\n  \"ibm922\": \"cp922\",\n  \"csibm922\": \"cp922\",\n  \"cp1046\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ﺈ×÷ﹱ■│─┐┌└┘ﹹﹻﹽﹿﹷﺊﻰﻳﻲﻎﻏﻐﻶﻸﻺﻼ ¤ﺋﺑﺗﺛﺟﺣ،­ﺧﺳ٠١٢٣٤٥٦٧٨٩ﺷ؛ﺻﺿﻊ؟ﻋءآأؤإئابةتثجحخدذرزسشصضطﻇعغﻌﺂﺄﺎﻓـفقكلمنهوىيًٌٍَُِّْﻗﻛﻟﻵﻷﻹﻻﻣﻧﻬﻩ�\"\n  },\n  \"ibm1046\": \"cp1046\",\n  \"csibm1046\": \"cp1046\",\n  \"cp1124\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" ЁЂҐЄЅІЇЈЉЊЋЌ­ЎЏАБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯабвгдежзийклмнопрстуфхцчшщъыьэюя№ёђґєѕіїјљњћќ§ўџ\"\n  },\n  \"ibm1124\": \"cp1124\",\n  \"csibm1124\": \"cp1124\",\n  \"cp1125\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"АБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯабвгдежзийклмноп░▒▓│┤╡╢╖╕╣║╗╝╜╛┐└┴┬├─┼╞╟╚╔╩╦╠═╬╧╨╤╥╙╘╒╓╫╪┘┌█▄▌▐▀рстуфхцчшщъыьэюяЁёҐґЄєІіЇї·√№¤■ \"\n  },\n  \"ibm1125\": \"cp1125\",\n  \"csibm1125\": \"cp1125\",\n  \"cp1129\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" ¡¢£¤¥¦§œ©ª«¬­®¯°±²³Ÿµ¶·Œ¹º»¼½¾¿ÀÁÂĂÄÅÆÇÈÉÊË̀ÍÎÏĐÑ̉ÓÔƠÖ×ØÙÚÛÜỮßàáâăäåæçèéêë́íîïđṇ̃óôơö÷øùúûüư₫ÿ\"\n  },\n  \"ibm1129\": \"cp1129\",\n  \"csibm1129\": \"cp1129\",\n  \"cp1133\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" ກຂຄງຈສຊຍດຕຖທນບປຜຝພຟມຢຣລວຫອຮ���ຯະາຳິີຶືຸູຼັົຽ���ເແໂໃໄ່້໊໋໌ໍໆ�ໜໝ₭����������������໐໑໒໓໔໕໖໗໘໙��¢¬¦�\"\n  },\n  \"ibm1133\": \"cp1133\",\n  \"csibm1133\": \"cp1133\",\n  \"cp1161\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"��������������������������������่กขฃคฅฆงจฉชซฌญฎฏฐฑฒณดตถทธนบปผฝพฟภมยรฤลฦวศษสหฬอฮฯะัาำิีึืฺุู้๊๋€฿เแโใไๅๆ็่้๊๋์ํ๎๏๐๑๒๓๔๕๖๗๘๙๚๛¢¬¦ \"\n  },\n  \"ibm1161\": \"cp1161\",\n  \"csibm1161\": \"cp1161\",\n  \"cp1162\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"€…‘’“”•–— กขฃคฅฆงจฉชซฌญฎฏฐฑฒณดตถทธนบปผฝพฟภมยรฤลฦวศษสหฬอฮฯะัาำิีึืฺุู����฿เแโใไๅๆ็่้๊๋์ํ๎๏๐๑๒๓๔๕๖๗๘๙๚๛����\"\n  },\n  \"ibm1162\": \"cp1162\",\n  \"csibm1162\": \"cp1162\",\n  \"cp1163\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" ¡¢£€¥¦§œ©ª«¬­®¯°±²³Ÿµ¶·Œ¹º»¼½¾¿ÀÁÂĂÄÅÆÇÈÉÊË̀ÍÎÏĐÑ̉ÓÔƠÖ×ØÙÚÛÜỮßàáâăäåæçèéêë́íîïđṇ̃óôơö÷øùúûüư₫ÿ\"\n  },\n  \"ibm1163\": \"cp1163\",\n  \"csibm1163\": \"cp1163\",\n  \"maccroatian\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ÄÅÇÉÑÖÜáàâäãåçéèêëíìîïñóòôöõúùûü†°¢£§•¶ß®Š™´¨≠ŽØ∞±≤≥∆µ∂∑∏š∫ªºΩžø¿¡¬√ƒ≈Ć«Č… ÀÃÕŒœĐ—“”‘’÷◊�©⁄¤‹›Æ»–·‚„‰ÂćÁčÈÍÎÏÌÓÔđÒÚÛÙıˆ˜¯πË˚¸Êæˇ\"\n  },\n  \"maccyrillic\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"АБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯ†°¢£§•¶І®©™Ђђ≠Ѓѓ∞±≤≥іµ∂ЈЄєЇїЉљЊњјЅ¬√ƒ≈∆«»… ЋћЌќѕ–—“”‘’÷„ЎўЏџ№Ёёяабвгдежзийклмнопрстуфхцчшщъыьэю¤\"\n  },\n  \"macgreek\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"Ä¹²É³ÖÜ΅àâä΄¨çéèêë£™îï•½‰ôö¦­ùûü†ΓΔΘΛΞΠß®©ΣΪ§≠°·Α±≤≥¥ΒΕΖΗΙΚΜΦΫΨΩάΝ¬ΟΡ≈Τ«»… ΥΧΆΈœ–―“”‘’÷ΉΊΌΎέήίόΏύαβψδεφγηιξκλμνοπώρστθωςχυζϊϋΐΰ�\"\n  },\n  \"maciceland\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ÄÅÇÉÑÖÜáàâäãåçéèêëíìîïñóòôöõúùûüÝ°¢£§•¶ß®©™´¨≠ÆØ∞±≤≥¥µ∂∑∏π∫ªºΩæø¿¡¬√ƒ≈∆«»… ÀÃÕŒœ–—“”‘’÷◊ÿŸ⁄¤ÐðÞþý·‚„‰ÂÊÁËÈÍÎÏÌÓÔ�ÒÚÛÙıˆ˜¯˘˙˚¸˝˛ˇ\"\n  },\n  \"macroman\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ÄÅÇÉÑÖÜáàâäãåçéèêëíìîïñóòôöõúùûü†°¢£§•¶ß®©™´¨≠ÆØ∞±≤≥¥µ∂∑∏π∫ªºΩæø¿¡¬√ƒ≈∆«»… ÀÃÕŒœ–—“”‘’÷◊ÿŸ⁄¤‹›ﬁﬂ‡·‚„‰ÂÊÁËÈÍÎÏÌÓÔ�ÒÚÛÙıˆ˜¯˘˙˚¸˝˛ˇ\"\n  },\n  \"macromania\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ÄÅÇÉÑÖÜáàâäãåçéèêëíìîïñóòôöõúùûü†°¢£§•¶ß®©™´¨≠ĂŞ∞±≤≥¥µ∂∑∏π∫ªºΩăş¿¡¬√ƒ≈∆«»… ÀÃÕŒœ–—“”‘’÷◊ÿŸ⁄¤‹›Ţţ‡·‚„‰ÂÊÁËÈÍÎÏÌÓÔ�ÒÚÛÙıˆ˜¯˘˙˚¸˝˛ˇ\"\n  },\n  \"macthai\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"«»…“”�•‘’� กขฃคฅฆงจฉชซฌญฎฏฐฑฒณดตถทธนบปผฝพฟภมยรฤลฦวศษสหฬอฮฯะัาำิีึืฺุู﻿​–—฿เแโใไๅๆ็่้๊๋์ํ™๏๐๑๒๓๔๕๖๗๘๙®©����\"\n  },\n  \"macturkish\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ÄÅÇÉÑÖÜáàâäãåçéèêëíìîïñóòôöõúùûü†°¢£§•¶ß®©™´¨≠ÆØ∞±≤≥¥µ∂∑∏π∫ªºΩæø¿¡¬√ƒ≈∆«»… ÀÃÕŒœ–—“”‘’÷◊ÿŸĞğİıŞş‡·‚„‰ÂÊÁËÈÍÎÏÌÓÔ�ÒÚÛÙ�ˆ˜¯˘˙˚¸˝˛ˇ\"\n  },\n  \"macukraine\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"АБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯ†°Ґ£§•¶І®©™Ђђ≠Ѓѓ∞±≤≥іµґЈЄєЇїЉљЊњјЅ¬√ƒ≈∆«»… ЋћЌќѕ–—“”‘’÷„ЎўЏџ№Ёёяабвгдежзийклмнопрстуфхцчшщъыьэю¤\"\n  },\n  \"koi8r\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"─│┌┐└┘├┤┬┴┼▀▄█▌▐░▒▓⌠■∙√≈≤≥ ⌡°²·÷═║╒ё╓╔╕╖╗╘╙╚╛╜╝╞╟╠╡Ё╢╣╤╥╦╧╨╩╪╫╬©юабцдефгхийклмнопярстужвьызшэщчъЮАБЦДЕФГХИЙКЛМНОПЯРСТУЖВЬЫЗШЭЩЧЪ\"\n  },\n  \"koi8u\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"─│┌┐└┘├┤┬┴┼▀▄█▌▐░▒▓⌠■∙√≈≤≥ ⌡°²·÷═║╒ёє╔ії╗╘╙╚╛ґ╝╞╟╠╡ЁЄ╣ІЇ╦╧╨╩╪Ґ╬©юабцдефгхийклмнопярстужвьызшэщчъЮАБЦДЕФГХИЙКЛМНОПЯРСТУЖВЬЫЗШЭЩЧЪ\"\n  },\n  \"koi8ru\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"─│┌┐└┘├┤┬┴┼▀▄█▌▐░▒▓⌠■∙√≈≤≥ ⌡°²·÷═║╒ёє╔ії╗╘╙╚╛ґў╞╟╠╡ЁЄ╣ІЇ╦╧╨╩╪ҐЎ©юабцдефгхийклмнопярстужвьызшэщчъЮАБЦДЕФГХИЙКЛМНОПЯРСТУЖВЬЫЗШЭЩЧЪ\"\n  },\n  \"koi8t\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"қғ‚Ғ„…†‡�‰ҳ‹ҲҷҶ�Қ‘’“”•–—�™�›�����ӯӮё¤ӣ¦§���«¬­®�°±²Ё�Ӣ¶·�№�»���©юабцдефгхийклмнопярстужвьызшэщчъЮАБЦДЕФГХИЙКЛМНОПЯРСТУЖВЬЫЗШЭЩЧЪ\"\n  },\n  \"armscii8\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" �և։)(»«—.՝,-֊…՜՛՞ԱաԲբԳգԴդԵեԶզԷէԸըԹթԺժԻիԼլԽխԾծԿկՀհՁձՂղՃճՄմՅյՆնՇշՈոՉչՊպՋջՌռՍսՎվՏտՐրՑցՒւՓփՔքՕօՖֆ՚�\"\n  },\n  \"rk1048\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ЂЃ‚ѓ„…†‡€‰Љ‹ЊҚҺЏђ‘’“”•–—�™љ›њқһџ ҰұӘ¤Ө¦§Ё©Ғ«¬­®Ү°±Ііөµ¶·ё№ғ»әҢңүАБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯабвгдежзийклмнопрстуфхцчшщъыьэюя\"\n  },\n  \"tcvn\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\\u0000ÚỤ\\u0003ỪỬỮ\\u0007\\b\\t\\n\\u000b\\f\\r\\u000e\\u000f\\u0010ỨỰỲỶỸÝỴ\\u0018\\u0019\\u001a\\u001b\\u001c\\u001d\\u001e\\u001f !\\\"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\\\]^_`abcdefghijklmnopqrstuvwxyz{|}~ÀẢÃÁẠẶẬÈẺẼÉẸỆÌỈĨÍỊÒỎÕÓỌỘỜỞỠỚỢÙỦŨ ĂÂÊÔƠƯĐăâêôơưđẶ̀̀̉̃́àảãáạẲằẳẵắẴẮẦẨẪẤỀặầẩẫấậèỂẻẽéẹềểễếệìỉỄẾỒĩíịòỔỏõóọồổỗốộờởỡớợùỖủũúụừửữứựỳỷỹýỵỐ\"\n  },\n  \"georgianacademy\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"‚ƒ„…†‡ˆ‰Š‹Œ‘’“”•–—˜™š›œŸ ¡¢£¤¥¦§¨©ª«¬­®¯°±²³´µ¶·¸¹º»¼½¾¿აბგდევზთიკლმნოპჟრსტუფქღყშჩცძწჭხჯჰჱჲჳჴჵჶçèéêëìíîïðñòóôõö÷øùúûüýþÿ\"\n  },\n  \"georgianps\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"‚ƒ„…†‡ˆ‰Š‹Œ‘’“”•–—˜™š›œŸ ¡¢£¤¥¦§¨©ª«¬­®¯°±²³´µ¶·¸¹º»¼½¾¿აბგდევზჱთიკლმნჲოპჟრსტჳუფქღყშჩცძწჭხჴჯჰჵæçèéêëìíîïðñòóôõö÷øùúûüýþÿ\"\n  },\n  \"pt154\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ҖҒӮғ„…ҶҮҲүҠӢҢҚҺҸҗ‘’“”•–—ҳҷҡӣңқһҹ ЎўЈӨҘҰ§Ё©Ә«¬ӯ®Ҝ°ұІіҙө¶·ё№ә»јҪҫҝАБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯабвгдежзийклмнопрстуфхцчшщъыьэюя\"\n  },\n  \"viscii\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\\u0000\\u0001Ẳ\\u0003\\u0004ẴẪ\\u0007\\b\\t\\n\\u000b\\f\\r\\u000e\\u000f\\u0010\\u0011\\u0012\\u0013Ỷ\\u0015\\u0016\\u0017\\u0018Ỹ\\u001a\\u001b\\u001c\\u001dỴ\\u001f !\\\"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\\\]^_`abcdefghijklmnopqrstuvwxyz{|}~ẠẮẰẶẤẦẨẬẼẸẾỀỂỄỆỐỒỔỖỘỢỚỜỞỊỎỌỈỦŨỤỲÕắằặấầẩậẽẹếềểễệốồổỗỠƠộờởịỰỨỪỬơớƯÀÁÂÃẢĂẳẵÈÉÊẺÌÍĨỳĐứÒÓÔạỷừửÙÚỹỵÝỡưàáâãảăữẫèéêẻìíĩỉđựòóôõỏọụùúũủýợỮ\"\n  },\n  \"iso646cn\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\\u0000\\u0001\\u0002\\u0003\\u0004\\u0005\\u0006\\u0007\\b\\t\\n\\u000b\\f\\r\\u000e\\u000f\\u0010\\u0011\\u0012\\u0013\\u0014\\u0015\\u0016\\u0017\\u0018\\u0019\\u001a\\u001b\\u001c\\u001d\\u001e\\u001f !\\\"#¥%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\\\]^_`abcdefghijklmnopqrstuvwxyz{|}‾��������������������������������������������������������������������������������������������������������������������������������\"\n  },\n  \"iso646jp\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\\u0000\\u0001\\u0002\\u0003\\u0004\\u0005\\u0006\\u0007\\b\\t\\n\\u000b\\f\\r\\u000e\\u000f\\u0010\\u0011\\u0012\\u0013\\u0014\\u0015\\u0016\\u0017\\u0018\\u0019\\u001a\\u001b\\u001c\\u001d\\u001e\\u001f !\\\"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[¥]^_`abcdefghijklmnopqrstuvwxyz{|}‾��������������������������������������������������������������������������������������������������������������������������������\"\n  },\n  \"hproman8\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" ÀÂÈÊËÎÏ´ˋˆ¨˜ÙÛ₤¯Ýý°ÇçÑñ¡¿¤£¥§ƒ¢âêôûáéóúàèòùäëöüÅîØÆåíøæÄìÖÜÉïßÔÁÃãÐðÍÌÓÒÕõŠšÚŸÿÞþ·µ¶¾—¼½ªº«■»±�\"\n  },\n  \"macintosh\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ÄÅÇÉÑÖÜáàâäãåçéèêëíìîïñóòôöõúùûü†°¢£§•¶ß®©™´¨≠ÆØ∞±≤≥¥µ∂∑∏π∫ªºΩæø¿¡¬√ƒ≈∆«»… ÀÃÕŒœ–—“”‘’÷◊ÿŸ⁄¤‹›ﬁﬂ‡·‚„‰ÂÊÁËÈÍÎÏÌÓÔ�ÒÚÛÙıˆ˜¯˘˙˚¸˝˛ˇ\"\n  },\n  \"ascii\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"��������������������������������������������������������������������������������������������������������������������������������\"\n  },\n  \"tis620\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"���������������������������������กขฃคฅฆงจฉชซฌญฎฏฐฑฒณดตถทธนบปผฝพฟภมยรฤลฦวศษสหฬอฮฯะัาำิีึืฺุู����฿เแโใไๅๆ็่้๊๋์ํ๎๏๐๑๒๓๔๕๖๗๘๙๚๛����\"\n  }\n}","\"use strict\";\n\n// Manually added data to be used by sbcs codec in addition to generated one.\n\nmodule.exports = {\n    // Not supported by iconv, not sure why.\n    \"10029\": \"maccenteuro\",\n    \"maccenteuro\": {\n        \"type\": \"_sbcs\",\n        \"chars\": \"ÄĀāÉĄÖÜáąČäčĆćéŹźĎíďĒēĖóėôöõúĚěü†°Ę£§•¶ß®©™ę¨≠ģĮįĪ≤≥īĶ∂∑łĻļĽľĹĺŅņŃ¬√ńŇ∆«»… ňŐÕőŌ–—“”‘’÷◊ōŔŕŘ‹›řŖŗŠ‚„šŚśÁŤťÍŽžŪÓÔūŮÚůŰűŲųÝýķŻŁżĢˇ\"\n    },\n\n    \"808\": \"cp808\",\n    \"ibm808\": \"cp808\",\n    \"cp808\": {\n        \"type\": \"_sbcs\",\n        \"chars\": \"АБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯабвгдежзийклмноп░▒▓│┤╡╢╖╕╣║╗╝╜╛┐└┴┬├─┼╞╟╚╔╩╦╠═╬╧╨╤╥╙╘╒╓╫╪┘┌█▄▌▐▀рстуфхцчшщъыьэюяЁёЄєЇїЎў°∙·√№€■ \"\n    },\n\n    \"mik\": {\n        \"type\": \"_sbcs\",\n        \"chars\": \"АБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯабвгдежзийклмнопрстуфхцчшщъыьэюя└┴┬├─┼╣║╚╔╩╦╠═╬┐░▒▓│┤№§╗╝┘┌█▄▌▐▀αßΓπΣσµτΦΘΩδ∞φε∩≡±≥≤⌠⌡÷≈°∙·√ⁿ²■ \"\n    },\n\n    // Aliases of generated encodings.\n    \"ascii8bit\": \"ascii\",\n    \"usascii\": \"ascii\",\n    \"ansix34\": \"ascii\",\n    \"ansix341968\": \"ascii\",\n    \"ansix341986\": \"ascii\",\n    \"csascii\": \"ascii\",\n    \"cp367\": \"ascii\",\n    \"ibm367\": \"ascii\",\n    \"isoir6\": \"ascii\",\n    \"iso646us\": \"ascii\",\n    \"iso646irv\": \"ascii\",\n    \"us\": \"ascii\",\n\n    \"latin1\": \"iso88591\",\n    \"latin2\": \"iso88592\",\n    \"latin3\": \"iso88593\",\n    \"latin4\": \"iso88594\",\n    \"latin5\": \"iso88599\",\n    \"latin6\": \"iso885910\",\n    \"latin7\": \"iso885913\",\n    \"latin8\": \"iso885914\",\n    \"latin9\": \"iso885915\",\n    \"latin10\": \"iso885916\",\n\n    \"csisolatin1\": \"iso88591\",\n    \"csisolatin2\": \"iso88592\",\n    \"csisolatin3\": \"iso88593\",\n    \"csisolatin4\": \"iso88594\",\n    \"csisolatincyrillic\": \"iso88595\",\n    \"csisolatinarabic\": \"iso88596\",\n    \"csisolatingreek\" : \"iso88597\",\n    \"csisolatinhebrew\": \"iso88598\",\n    \"csisolatin5\": \"iso88599\",\n    \"csisolatin6\": \"iso885910\",\n\n    \"l1\": \"iso88591\",\n    \"l2\": \"iso88592\",\n    \"l3\": \"iso88593\",\n    \"l4\": \"iso88594\",\n    \"l5\": \"iso88599\",\n    \"l6\": \"iso885910\",\n    \"l7\": \"iso885913\",\n    \"l8\": \"iso885914\",\n    \"l9\": \"iso885915\",\n    \"l10\": \"iso885916\",\n\n    \"isoir14\": \"iso646jp\",\n    \"isoir57\": \"iso646cn\",\n    \"isoir100\": \"iso88591\",\n    \"isoir101\": \"iso88592\",\n    \"isoir109\": \"iso88593\",\n    \"isoir110\": \"iso88594\",\n    \"isoir144\": \"iso88595\",\n    \"isoir127\": \"iso88596\",\n    \"isoir126\": \"iso88597\",\n    \"isoir138\": \"iso88598\",\n    \"isoir148\": \"iso88599\",\n    \"isoir157\": \"iso885910\",\n    \"isoir166\": \"tis620\",\n    \"isoir179\": \"iso885913\",\n    \"isoir199\": \"iso885914\",\n    \"isoir203\": \"iso885915\",\n    \"isoir226\": \"iso885916\",\n\n    \"cp819\": \"iso88591\",\n    \"ibm819\": \"iso88591\",\n\n    \"cyrillic\": \"iso88595\",\n\n    \"arabic\": \"iso88596\",\n    \"arabic8\": \"iso88596\",\n    \"ecma114\": \"iso88596\",\n    \"asmo708\": \"iso88596\",\n\n    \"greek\" : \"iso88597\",\n    \"greek8\" : \"iso88597\",\n    \"ecma118\" : \"iso88597\",\n    \"elot928\" : \"iso88597\",\n\n    \"hebrew\": \"iso88598\",\n    \"hebrew8\": \"iso88598\",\n\n    \"turkish\": \"iso88599\",\n    \"turkish8\": \"iso88599\",\n\n    \"thai\": \"iso885911\",\n    \"thai8\": \"iso885911\",\n\n    \"celtic\": \"iso885914\",\n    \"celtic8\": \"iso885914\",\n    \"isoceltic\": \"iso885914\",\n\n    \"tis6200\": \"tis620\",\n    \"tis62025291\": \"tis620\",\n    \"tis62025330\": \"tis620\",\n\n    \"10000\": \"macroman\",\n    \"10006\": \"macgreek\",\n    \"10007\": \"maccyrillic\",\n    \"10079\": \"maciceland\",\n    \"10081\": \"macturkish\",\n\n    \"cspc8codepage437\": \"cp437\",\n    \"cspc775baltic\": \"cp775\",\n    \"cspc850multilingual\": \"cp850\",\n    \"cspcp852\": \"cp852\",\n    \"cspc862latinhebrew\": \"cp862\",\n    \"cpgr\": \"cp869\",\n\n    \"msee\": \"cp1250\",\n    \"mscyrl\": \"cp1251\",\n    \"msansi\": \"cp1252\",\n    \"msgreek\": \"cp1253\",\n    \"msturk\": \"cp1254\",\n    \"mshebr\": \"cp1255\",\n    \"msarab\": \"cp1256\",\n    \"winbaltrim\": \"cp1257\",\n\n    \"cp20866\": \"koi8r\",\n    \"20866\": \"koi8r\",\n    \"ibm878\": \"koi8r\",\n    \"cskoi8r\": \"koi8r\",\n\n    \"cp21866\": \"koi8u\",\n    \"21866\": \"koi8u\",\n    \"ibm1168\": \"koi8u\",\n\n    \"strk10482002\": \"rk1048\",\n\n    \"tcvn5712\": \"tcvn\",\n    \"tcvn57121\": \"tcvn\",\n\n    \"gb198880\": \"iso646cn\",\n    \"cn\": \"iso646cn\",\n\n    \"csiso14jisc6220ro\": \"iso646jp\",\n    \"jisc62201969ro\": \"iso646jp\",\n    \"jp\": \"iso646jp\",\n\n    \"cshproman8\": \"hproman8\",\n    \"r8\": \"hproman8\",\n    \"roman8\": \"hproman8\",\n    \"xroman8\": \"hproman8\",\n    \"ibm1051\": \"hproman8\",\n\n    \"mac\": \"macintosh\",\n    \"csmacintosh\": \"macintosh\",\n};\n\n","\"use strict\";\nvar Buffer = require(\"safer-buffer\").Buffer;\n\n// Note: UTF16-LE (or UCS2) codec is Node.js native. See encodings/internal.js\n\n// == UTF16-BE codec. ==========================================================\n\nexports.utf16be = Utf16BECodec;\nfunction Utf16BECodec() {\n}\n\nUtf16BECodec.prototype.encoder = Utf16BEEncoder;\nUtf16BECodec.prototype.decoder = Utf16BEDecoder;\nUtf16BECodec.prototype.bomAware = true;\n\n\n// -- Encoding\n\nfunction Utf16BEEncoder() {\n}\n\nUtf16BEEncoder.prototype.write = function(str) {\n    var buf = Buffer.from(str, 'ucs2');\n    for (var i = 0; i < buf.length; i += 2) {\n        var tmp = buf[i]; buf[i] = buf[i+1]; buf[i+1] = tmp;\n    }\n    return buf;\n}\n\nUtf16BEEncoder.prototype.end = function() {\n}\n\n\n// -- Decoding\n\nfunction Utf16BEDecoder() {\n    this.overflowByte = -1;\n}\n\nUtf16BEDecoder.prototype.write = function(buf) {\n    if (buf.length == 0)\n        return '';\n\n    var buf2 = Buffer.alloc(buf.length + 1),\n        i = 0, j = 0;\n\n    if (this.overflowByte !== -1) {\n        buf2[0] = buf[0];\n        buf2[1] = this.overflowByte;\n        i = 1; j = 2;\n    }\n\n    for (; i < buf.length-1; i += 2, j+= 2) {\n        buf2[j] = buf[i+1];\n        buf2[j+1] = buf[i];\n    }\n\n    this.overflowByte = (i == buf.length-1) ? buf[buf.length-1] : -1;\n\n    return buf2.slice(0, j).toString('ucs2');\n}\n\nUtf16BEDecoder.prototype.end = function() {\n}\n\n\n// == UTF-16 codec =============================================================\n// Decoder chooses automatically from UTF-16LE and UTF-16BE using BOM and space-based heuristic.\n// Defaults to UTF-16LE, as it's prevalent and default in Node.\n// http://en.wikipedia.org/wiki/UTF-16 and http://encoding.spec.whatwg.org/#utf-16le\n// Decoder default can be changed: iconv.decode(buf, 'utf16', {defaultEncoding: 'utf-16be'});\n\n// Encoder uses UTF-16LE and prepends BOM (which can be overridden with addBOM: false).\n\nexports.utf16 = Utf16Codec;\nfunction Utf16Codec(codecOptions, iconv) {\n    this.iconv = iconv;\n}\n\nUtf16Codec.prototype.encoder = Utf16Encoder;\nUtf16Codec.prototype.decoder = Utf16Decoder;\n\n\n// -- Encoding (pass-through)\n\nfunction Utf16Encoder(options, codec) {\n    options = options || {};\n    if (options.addBOM === undefined)\n        options.addBOM = true;\n    this.encoder = codec.iconv.getEncoder('utf-16le', options);\n}\n\nUtf16Encoder.prototype.write = function(str) {\n    return this.encoder.write(str);\n}\n\nUtf16Encoder.prototype.end = function() {\n    return this.encoder.end();\n}\n\n\n// -- Decoding\n\nfunction Utf16Decoder(options, codec) {\n    this.decoder = null;\n    this.initialBytes = [];\n    this.initialBytesLen = 0;\n\n    this.options = options || {};\n    this.iconv = codec.iconv;\n}\n\nUtf16Decoder.prototype.write = function(buf) {\n    if (!this.decoder) {\n        // Codec is not chosen yet. Accumulate initial bytes.\n        this.initialBytes.push(buf);\n        this.initialBytesLen += buf.length;\n        \n        if (this.initialBytesLen < 16) // We need more bytes to use space heuristic (see below)\n            return '';\n\n        // We have enough bytes -> detect endianness.\n        var buf = Buffer.concat(this.initialBytes),\n            encoding = detectEncoding(buf, this.options.defaultEncoding);\n        this.decoder = this.iconv.getDecoder(encoding, this.options);\n        this.initialBytes.length = this.initialBytesLen = 0;\n    }\n\n    return this.decoder.write(buf);\n}\n\nUtf16Decoder.prototype.end = function() {\n    if (!this.decoder) {\n        var buf = Buffer.concat(this.initialBytes),\n            encoding = detectEncoding(buf, this.options.defaultEncoding);\n        this.decoder = this.iconv.getDecoder(encoding, this.options);\n\n        var res = this.decoder.write(buf),\n            trail = this.decoder.end();\n\n        return trail ? (res + trail) : res;\n    }\n    return this.decoder.end();\n}\n\nfunction detectEncoding(buf, defaultEncoding) {\n    var enc = defaultEncoding || 'utf-16le';\n\n    if (buf.length >= 2) {\n        // Check BOM.\n        if (buf[0] == 0xFE && buf[1] == 0xFF) // UTF-16BE BOM\n            enc = 'utf-16be';\n        else if (buf[0] == 0xFF && buf[1] == 0xFE) // UTF-16LE BOM\n            enc = 'utf-16le';\n        else {\n            // No BOM found. Try to deduce encoding from initial content.\n            // Most of the time, the content has ASCII chars (U+00**), but the opposite (U+**00) is uncommon.\n            // So, we count ASCII as if it was LE or BE, and decide from that.\n            var asciiCharsLE = 0, asciiCharsBE = 0, // Counts of chars in both positions\n                _len = Math.min(buf.length - (buf.length % 2), 64); // Len is always even.\n\n            for (var i = 0; i < _len; i += 2) {\n                if (buf[i] === 0 && buf[i+1] !== 0) asciiCharsBE++;\n                if (buf[i] !== 0 && buf[i+1] === 0) asciiCharsLE++;\n            }\n\n            if (asciiCharsBE > asciiCharsLE)\n                enc = 'utf-16be';\n            else if (asciiCharsBE < asciiCharsLE)\n                enc = 'utf-16le';\n        }\n    }\n\n    return enc;\n}\n\n\n","\"use strict\";\nvar Buffer = require(\"safer-buffer\").Buffer;\n\n// UTF-7 codec, according to https://tools.ietf.org/html/rfc2152\n// See also below a UTF-7-IMAP codec, according to http://tools.ietf.org/html/rfc3501#section-5.1.3\n\nexports.utf7 = Utf7Codec;\nexports.unicode11utf7 = 'utf7'; // Alias UNICODE-1-1-UTF-7\nfunction Utf7Codec(codecOptions, iconv) {\n    this.iconv = iconv;\n};\n\nUtf7Codec.prototype.encoder = Utf7Encoder;\nUtf7Codec.prototype.decoder = Utf7Decoder;\nUtf7Codec.prototype.bomAware = true;\n\n\n// -- Encoding\n\nvar nonDirectChars = /[^A-Za-z0-9'\\(\\),-\\.\\/:\\? \\n\\r\\t]+/g;\n\nfunction Utf7Encoder(options, codec) {\n    this.iconv = codec.iconv;\n}\n\nUtf7Encoder.prototype.write = function(str) {\n    // Naive implementation.\n    // Non-direct chars are encoded as \"+<base64>-\"; single \"+\" char is encoded as \"+-\".\n    return Buffer.from(str.replace(nonDirectChars, function(chunk) {\n        return \"+\" + (chunk === '+' ? '' : \n            this.iconv.encode(chunk, 'utf16-be').toString('base64').replace(/=+$/, '')) \n            + \"-\";\n    }.bind(this)));\n}\n\nUtf7Encoder.prototype.end = function() {\n}\n\n\n// -- Decoding\n\nfunction Utf7Decoder(options, codec) {\n    this.iconv = codec.iconv;\n    this.inBase64 = false;\n    this.base64Accum = '';\n}\n\nvar base64Regex = /[A-Za-z0-9\\/+]/;\nvar base64Chars = [];\nfor (var i = 0; i < 256; i++)\n    base64Chars[i] = base64Regex.test(String.fromCharCode(i));\n\nvar plusChar = '+'.charCodeAt(0), \n    minusChar = '-'.charCodeAt(0),\n    andChar = '&'.charCodeAt(0);\n\nUtf7Decoder.prototype.write = function(buf) {\n    var res = \"\", lastI = 0,\n        inBase64 = this.inBase64,\n        base64Accum = this.base64Accum;\n\n    // The decoder is more involved as we must handle chunks in stream.\n\n    for (var i = 0; i < buf.length; i++) {\n        if (!inBase64) { // We're in direct mode.\n            // Write direct chars until '+'\n            if (buf[i] == plusChar) {\n                res += this.iconv.decode(buf.slice(lastI, i), \"ascii\"); // Write direct chars.\n                lastI = i+1;\n                inBase64 = true;\n            }\n        } else { // We decode base64.\n            if (!base64Chars[buf[i]]) { // Base64 ended.\n                if (i == lastI && buf[i] == minusChar) {// \"+-\" -> \"+\"\n                    res += \"+\";\n                } else {\n                    var b64str = base64Accum + buf.slice(lastI, i).toString();\n                    res += this.iconv.decode(Buffer.from(b64str, 'base64'), \"utf16-be\");\n                }\n\n                if (buf[i] != minusChar) // Minus is absorbed after base64.\n                    i--;\n\n                lastI = i+1;\n                inBase64 = false;\n                base64Accum = '';\n            }\n        }\n    }\n\n    if (!inBase64) {\n        res += this.iconv.decode(buf.slice(lastI), \"ascii\"); // Write direct chars.\n    } else {\n        var b64str = base64Accum + buf.slice(lastI).toString();\n\n        var canBeDecoded = b64str.length - (b64str.length % 8); // Minimal chunk: 2 quads -> 2x3 bytes -> 3 chars.\n        base64Accum = b64str.slice(canBeDecoded); // The rest will be decoded in future.\n        b64str = b64str.slice(0, canBeDecoded);\n\n        res += this.iconv.decode(Buffer.from(b64str, 'base64'), \"utf16-be\");\n    }\n\n    this.inBase64 = inBase64;\n    this.base64Accum = base64Accum;\n\n    return res;\n}\n\nUtf7Decoder.prototype.end = function() {\n    var res = \"\";\n    if (this.inBase64 && this.base64Accum.length > 0)\n        res = this.iconv.decode(Buffer.from(this.base64Accum, 'base64'), \"utf16-be\");\n\n    this.inBase64 = false;\n    this.base64Accum = '';\n    return res;\n}\n\n\n// UTF-7-IMAP codec.\n// RFC3501 Sec. 5.1.3 Modified UTF-7 (http://tools.ietf.org/html/rfc3501#section-5.1.3)\n// Differences:\n//  * Base64 part is started by \"&\" instead of \"+\"\n//  * Direct characters are 0x20-0x7E, except \"&\" (0x26)\n//  * In Base64, \",\" is used instead of \"/\"\n//  * Base64 must not be used to represent direct characters.\n//  * No implicit shift back from Base64 (should always end with '-')\n//  * String must end in non-shifted position.\n//  * \"-&\" while in base64 is not allowed.\n\n\nexports.utf7imap = Utf7IMAPCodec;\nfunction Utf7IMAPCodec(codecOptions, iconv) {\n    this.iconv = iconv;\n};\n\nUtf7IMAPCodec.prototype.encoder = Utf7IMAPEncoder;\nUtf7IMAPCodec.prototype.decoder = Utf7IMAPDecoder;\nUtf7IMAPCodec.prototype.bomAware = true;\n\n\n// -- Encoding\n\nfunction Utf7IMAPEncoder(options, codec) {\n    this.iconv = codec.iconv;\n    this.inBase64 = false;\n    this.base64Accum = Buffer.alloc(6);\n    this.base64AccumIdx = 0;\n}\n\nUtf7IMAPEncoder.prototype.write = function(str) {\n    var inBase64 = this.inBase64,\n        base64Accum = this.base64Accum,\n        base64AccumIdx = this.base64AccumIdx,\n        buf = Buffer.alloc(str.length*5 + 10), bufIdx = 0;\n\n    for (var i = 0; i < str.length; i++) {\n        var uChar = str.charCodeAt(i);\n        if (0x20 <= uChar && uChar <= 0x7E) { // Direct character or '&'.\n            if (inBase64) {\n                if (base64AccumIdx > 0) {\n                    bufIdx += buf.write(base64Accum.slice(0, base64AccumIdx).toString('base64').replace(/\\//g, ',').replace(/=+$/, ''), bufIdx);\n                    base64AccumIdx = 0;\n                }\n\n                buf[bufIdx++] = minusChar; // Write '-', then go to direct mode.\n                inBase64 = false;\n            }\n\n            if (!inBase64) {\n                buf[bufIdx++] = uChar; // Write direct character\n\n                if (uChar === andChar)  // Ampersand -> '&-'\n                    buf[bufIdx++] = minusChar;\n            }\n\n        } else { // Non-direct character\n            if (!inBase64) {\n                buf[bufIdx++] = andChar; // Write '&', then go to base64 mode.\n                inBase64 = true;\n            }\n            if (inBase64) {\n                base64Accum[base64AccumIdx++] = uChar >> 8;\n                base64Accum[base64AccumIdx++] = uChar & 0xFF;\n\n                if (base64AccumIdx == base64Accum.length) {\n                    bufIdx += buf.write(base64Accum.toString('base64').replace(/\\//g, ','), bufIdx);\n                    base64AccumIdx = 0;\n                }\n            }\n        }\n    }\n\n    this.inBase64 = inBase64;\n    this.base64AccumIdx = base64AccumIdx;\n\n    return buf.slice(0, bufIdx);\n}\n\nUtf7IMAPEncoder.prototype.end = function() {\n    var buf = Buffer.alloc(10), bufIdx = 0;\n    if (this.inBase64) {\n        if (this.base64AccumIdx > 0) {\n            bufIdx += buf.write(this.base64Accum.slice(0, this.base64AccumIdx).toString('base64').replace(/\\//g, ',').replace(/=+$/, ''), bufIdx);\n            this.base64AccumIdx = 0;\n        }\n\n        buf[bufIdx++] = minusChar; // Write '-', then go to direct mode.\n        this.inBase64 = false;\n    }\n\n    return buf.slice(0, bufIdx);\n}\n\n\n// -- Decoding\n\nfunction Utf7IMAPDecoder(options, codec) {\n    this.iconv = codec.iconv;\n    this.inBase64 = false;\n    this.base64Accum = '';\n}\n\nvar base64IMAPChars = base64Chars.slice();\nbase64IMAPChars[','.charCodeAt(0)] = true;\n\nUtf7IMAPDecoder.prototype.write = function(buf) {\n    var res = \"\", lastI = 0,\n        inBase64 = this.inBase64,\n        base64Accum = this.base64Accum;\n\n    // The decoder is more involved as we must handle chunks in stream.\n    // It is forgiving, closer to standard UTF-7 (for example, '-' is optional at the end).\n\n    for (var i = 0; i < buf.length; i++) {\n        if (!inBase64) { // We're in direct mode.\n            // Write direct chars until '&'\n            if (buf[i] == andChar) {\n                res += this.iconv.decode(buf.slice(lastI, i), \"ascii\"); // Write direct chars.\n                lastI = i+1;\n                inBase64 = true;\n            }\n        } else { // We decode base64.\n            if (!base64IMAPChars[buf[i]]) { // Base64 ended.\n                if (i == lastI && buf[i] == minusChar) { // \"&-\" -> \"&\"\n                    res += \"&\";\n                } else {\n                    var b64str = base64Accum + buf.slice(lastI, i).toString().replace(/,/g, '/');\n                    res += this.iconv.decode(Buffer.from(b64str, 'base64'), \"utf16-be\");\n                }\n\n                if (buf[i] != minusChar) // Minus may be absorbed after base64.\n                    i--;\n\n                lastI = i+1;\n                inBase64 = false;\n                base64Accum = '';\n            }\n        }\n    }\n\n    if (!inBase64) {\n        res += this.iconv.decode(buf.slice(lastI), \"ascii\"); // Write direct chars.\n    } else {\n        var b64str = base64Accum + buf.slice(lastI).toString().replace(/,/g, '/');\n\n        var canBeDecoded = b64str.length - (b64str.length % 8); // Minimal chunk: 2 quads -> 2x3 bytes -> 3 chars.\n        base64Accum = b64str.slice(canBeDecoded); // The rest will be decoded in future.\n        b64str = b64str.slice(0, canBeDecoded);\n\n        res += this.iconv.decode(Buffer.from(b64str, 'base64'), \"utf16-be\");\n    }\n\n    this.inBase64 = inBase64;\n    this.base64Accum = base64Accum;\n\n    return res;\n}\n\nUtf7IMAPDecoder.prototype.end = function() {\n    var res = \"\";\n    if (this.inBase64 && this.base64Accum.length > 0)\n        res = this.iconv.decode(Buffer.from(this.base64Accum, 'base64'), \"utf16-be\");\n\n    this.inBase64 = false;\n    this.base64Accum = '';\n    return res;\n}\n\n\n","\"use strict\";\n\nvar BOMChar = '\\uFEFF';\n\nexports.PrependBOM = PrependBOMWrapper\nfunction PrependBOMWrapper(encoder, options) {\n    this.encoder = encoder;\n    this.addBOM = true;\n}\n\nPrependBOMWrapper.prototype.write = function(str) {\n    if (this.addBOM) {\n        str = BOMChar + str;\n        this.addBOM = false;\n    }\n\n    return this.encoder.write(str);\n}\n\nPrependBOMWrapper.prototype.end = function() {\n    return this.encoder.end();\n}\n\n\n//------------------------------------------------------------------------------\n\nexports.StripBOM = StripBOMWrapper;\nfunction StripBOMWrapper(decoder, options) {\n    this.decoder = decoder;\n    this.pass = false;\n    this.options = options || {};\n}\n\nStripBOMWrapper.prototype.write = function(buf) {\n    var res = this.decoder.write(buf);\n    if (this.pass || !res)\n        return res;\n\n    if (res[0] === BOMChar) {\n        res = res.slice(1);\n        if (typeof this.options.stripBOM === 'function')\n            this.options.stripBOM();\n    }\n\n    this.pass = true;\n    return res;\n}\n\nStripBOMWrapper.prototype.end = function() {\n    return this.decoder.end();\n}\n\n","\"use strict\";\nvar Buffer = require(\"buffer\").Buffer;\n// Note: not polyfilled with safer-buffer on a purpose, as overrides Buffer\n\n// == Extend Node primitives to use iconv-lite =================================\n\nmodule.exports = function (iconv) {\n    var original = undefined; // Place to keep original methods.\n\n    // Node authors rewrote Buffer internals to make it compatible with\n    // Uint8Array and we cannot patch key functions since then.\n    // Note: this does use older Buffer API on a purpose\n    iconv.supportsNodeEncodingsExtension = !(Buffer.from || new Buffer(0) instanceof Uint8Array);\n\n    iconv.extendNodeEncodings = function extendNodeEncodings() {\n        if (original) return;\n        original = {};\n\n        if (!iconv.supportsNodeEncodingsExtension) {\n            console.error(\"ACTION NEEDED: require('iconv-lite').extendNodeEncodings() is not supported in your version of Node\");\n            console.error(\"See more info at https://github.com/ashtuchkin/iconv-lite/wiki/Node-v4-compatibility\");\n            return;\n        }\n\n        var nodeNativeEncodings = {\n            'hex': true, 'utf8': true, 'utf-8': true, 'ascii': true, 'binary': true, \n            'base64': true, 'ucs2': true, 'ucs-2': true, 'utf16le': true, 'utf-16le': true,\n        };\n\n        Buffer.isNativeEncoding = function(enc) {\n            return enc && nodeNativeEncodings[enc.toLowerCase()];\n        }\n\n        // -- SlowBuffer -----------------------------------------------------------\n        var SlowBuffer = require('buffer').SlowBuffer;\n\n        original.SlowBufferToString = SlowBuffer.prototype.toString;\n        SlowBuffer.prototype.toString = function(encoding, start, end) {\n            encoding = String(encoding || 'utf8').toLowerCase();\n\n            // Use native conversion when possible\n            if (Buffer.isNativeEncoding(encoding))\n                return original.SlowBufferToString.call(this, encoding, start, end);\n\n            // Otherwise, use our decoding method.\n            if (typeof start == 'undefined') start = 0;\n            if (typeof end == 'undefined') end = this.length;\n            return iconv.decode(this.slice(start, end), encoding);\n        }\n\n        original.SlowBufferWrite = SlowBuffer.prototype.write;\n        SlowBuffer.prototype.write = function(string, offset, length, encoding) {\n            // Support both (string, offset, length, encoding)\n            // and the legacy (string, encoding, offset, length)\n            if (isFinite(offset)) {\n                if (!isFinite(length)) {\n                    encoding = length;\n                    length = undefined;\n                }\n            } else {  // legacy\n                var swap = encoding;\n                encoding = offset;\n                offset = length;\n                length = swap;\n            }\n\n            offset = +offset || 0;\n            var remaining = this.length - offset;\n            if (!length) {\n                length = remaining;\n            } else {\n                length = +length;\n                if (length > remaining) {\n                    length = remaining;\n                }\n            }\n            encoding = String(encoding || 'utf8').toLowerCase();\n\n            // Use native conversion when possible\n            if (Buffer.isNativeEncoding(encoding))\n                return original.SlowBufferWrite.call(this, string, offset, length, encoding);\n\n            if (string.length > 0 && (length < 0 || offset < 0))\n                throw new RangeError('attempt to write beyond buffer bounds');\n\n            // Otherwise, use our encoding method.\n            var buf = iconv.encode(string, encoding);\n            if (buf.length < length) length = buf.length;\n            buf.copy(this, offset, 0, length);\n            return length;\n        }\n\n        // -- Buffer ---------------------------------------------------------------\n\n        original.BufferIsEncoding = Buffer.isEncoding;\n        Buffer.isEncoding = function(encoding) {\n            return Buffer.isNativeEncoding(encoding) || iconv.encodingExists(encoding);\n        }\n\n        original.BufferByteLength = Buffer.byteLength;\n        Buffer.byteLength = SlowBuffer.byteLength = function(str, encoding) {\n            encoding = String(encoding || 'utf8').toLowerCase();\n\n            // Use native conversion when possible\n            if (Buffer.isNativeEncoding(encoding))\n                return original.BufferByteLength.call(this, str, encoding);\n\n            // Slow, I know, but we don't have a better way yet.\n            return iconv.encode(str, encoding).length;\n        }\n\n        original.BufferToString = Buffer.prototype.toString;\n        Buffer.prototype.toString = function(encoding, start, end) {\n            encoding = String(encoding || 'utf8').toLowerCase();\n\n            // Use native conversion when possible\n            if (Buffer.isNativeEncoding(encoding))\n                return original.BufferToString.call(this, encoding, start, end);\n\n            // Otherwise, use our decoding method.\n            if (typeof start == 'undefined') start = 0;\n            if (typeof end == 'undefined') end = this.length;\n            return iconv.decode(this.slice(start, end), encoding);\n        }\n\n        original.BufferWrite = Buffer.prototype.write;\n        Buffer.prototype.write = function(string, offset, length, encoding) {\n            var _offset = offset, _length = length, _encoding = encoding;\n            // Support both (string, offset, length, encoding)\n            // and the legacy (string, encoding, offset, length)\n            if (isFinite(offset)) {\n                if (!isFinite(length)) {\n                    encoding = length;\n                    length = undefined;\n                }\n            } else {  // legacy\n                var swap = encoding;\n                encoding = offset;\n                offset = length;\n                length = swap;\n            }\n\n            encoding = String(encoding || 'utf8').toLowerCase();\n\n            // Use native conversion when possible\n            if (Buffer.isNativeEncoding(encoding))\n                return original.BufferWrite.call(this, string, _offset, _length, _encoding);\n\n            offset = +offset || 0;\n            var remaining = this.length - offset;\n            if (!length) {\n                length = remaining;\n            } else {\n                length = +length;\n                if (length > remaining) {\n                    length = remaining;\n                }\n            }\n\n            if (string.length > 0 && (length < 0 || offset < 0))\n                throw new RangeError('attempt to write beyond buffer bounds');\n\n            // Otherwise, use our encoding method.\n            var buf = iconv.encode(string, encoding);\n            if (buf.length < length) length = buf.length;\n            buf.copy(this, offset, 0, length);\n            return length;\n\n            // TODO: Set _charsWritten.\n        }\n\n\n        // -- Readable -------------------------------------------------------------\n        if (iconv.supportsStreams) {\n            var Readable = require('stream').Readable;\n\n            original.ReadableSetEncoding = Readable.prototype.setEncoding;\n            Readable.prototype.setEncoding = function setEncoding(enc, options) {\n                // Use our own decoder, it has the same interface.\n                // We cannot use original function as it doesn't handle BOM-s.\n                this._readableState.decoder = iconv.getDecoder(enc, options);\n                this._readableState.encoding = enc;\n            }\n\n            Readable.prototype.collect = iconv._collect;\n        }\n    }\n\n    // Remove iconv-lite Node primitive extensions.\n    iconv.undoExtendNodeEncodings = function undoExtendNodeEncodings() {\n        if (!iconv.supportsNodeEncodingsExtension)\n            return;\n        if (!original)\n            throw new Error(\"require('iconv-lite').undoExtendNodeEncodings(): Nothing to undo; extendNodeEncodings() is not called.\")\n\n        delete Buffer.isNativeEncoding;\n\n        var SlowBuffer = require('buffer').SlowBuffer;\n\n        SlowBuffer.prototype.toString = original.SlowBufferToString;\n        SlowBuffer.prototype.write = original.SlowBufferWrite;\n\n        Buffer.isEncoding = original.BufferIsEncoding;\n        Buffer.byteLength = original.BufferByteLength;\n        Buffer.prototype.toString = original.BufferToString;\n        Buffer.prototype.write = original.BufferWrite;\n\n        if (iconv.supportsStreams) {\n            var Readable = require('stream').Readable;\n\n            Readable.prototype.setEncoding = original.ReadableSetEncoding;\n            delete Readable.prototype.collect;\n        }\n\n        original = undefined;\n    }\n}\n","\"use strict\";\n\n// Some environments don't have global Buffer (e.g. React Native).\n// Solution would be installing npm modules \"buffer\" and \"stream\" explicitly.\nvar Buffer = require(\"safer-buffer\").Buffer;\n\nvar bomHandling = require(\"./bom-handling\"),\n    iconv = module.exports;\n\n// All codecs and aliases are kept here, keyed by encoding name/alias.\n// They are lazy loaded in `iconv.getCodec` from `encodings/index.js`.\niconv.encodings = null;\n\n// Characters emitted in case of error.\niconv.defaultCharUnicode = '�';\niconv.defaultCharSingleByte = '?';\n\n// Public API.\niconv.encode = function encode(str, encoding, options) {\n    str = \"\" + (str || \"\"); // Ensure string.\n\n    var encoder = iconv.getEncoder(encoding, options);\n\n    var res = encoder.write(str);\n    var trail = encoder.end();\n    \n    return (trail && trail.length > 0) ? Buffer.concat([res, trail]) : res;\n}\n\niconv.decode = function decode(buf, encoding, options) {\n    if (typeof buf === 'string') {\n        if (!iconv.skipDecodeWarning) {\n            console.error('Iconv-lite warning: decode()-ing strings is deprecated. Refer to https://github.com/ashtuchkin/iconv-lite/wiki/Use-Buffers-when-decoding');\n            iconv.skipDecodeWarning = true;\n        }\n\n        buf = Buffer.from(\"\" + (buf || \"\"), \"binary\"); // Ensure buffer.\n    }\n\n    var decoder = iconv.getDecoder(encoding, options);\n\n    var res = decoder.write(buf);\n    var trail = decoder.end();\n\n    return trail ? (res + trail) : res;\n}\n\niconv.encodingExists = function encodingExists(enc) {\n    try {\n        iconv.getCodec(enc);\n        return true;\n    } catch (e) {\n        return false;\n    }\n}\n\n// Legacy aliases to convert functions\niconv.toEncoding = iconv.encode;\niconv.fromEncoding = iconv.decode;\n\n// Search for a codec in iconv.encodings. Cache codec data in iconv._codecDataCache.\niconv._codecDataCache = {};\niconv.getCodec = function getCodec(encoding) {\n    if (!iconv.encodings)\n        iconv.encodings = require(\"../encodings\"); // Lazy load all encoding definitions.\n    \n    // Canonicalize encoding name: strip all non-alphanumeric chars and appended year.\n    var enc = iconv._canonicalizeEncoding(encoding);\n\n    // Traverse iconv.encodings to find actual codec.\n    var codecOptions = {};\n    while (true) {\n        var codec = iconv._codecDataCache[enc];\n        if (codec)\n            return codec;\n\n        var codecDef = iconv.encodings[enc];\n\n        switch (typeof codecDef) {\n            case \"string\": // Direct alias to other encoding.\n                enc = codecDef;\n                break;\n\n            case \"object\": // Alias with options. Can be layered.\n                for (var key in codecDef)\n                    codecOptions[key] = codecDef[key];\n\n                if (!codecOptions.encodingName)\n                    codecOptions.encodingName = enc;\n                \n                enc = codecDef.type;\n                break;\n\n            case \"function\": // Codec itself.\n                if (!codecOptions.encodingName)\n                    codecOptions.encodingName = enc;\n\n                // The codec function must load all tables and return object with .encoder and .decoder methods.\n                // It'll be called only once (for each different options object).\n                codec = new codecDef(codecOptions, iconv);\n\n                iconv._codecDataCache[codecOptions.encodingName] = codec; // Save it to be reused later.\n                return codec;\n\n            default:\n                throw new Error(\"Encoding not recognized: '\" + encoding + \"' (searched as: '\"+enc+\"')\");\n        }\n    }\n}\n\niconv._canonicalizeEncoding = function(encoding) {\n    // Canonicalize encoding name: strip all non-alphanumeric chars and appended year.\n    return (''+encoding).toLowerCase().replace(/:\\d{4}$|[^0-9a-z]/g, \"\");\n}\n\niconv.getEncoder = function getEncoder(encoding, options) {\n    var codec = iconv.getCodec(encoding),\n        encoder = new codec.encoder(options, codec);\n\n    if (codec.bomAware && options && options.addBOM)\n        encoder = new bomHandling.PrependBOM(encoder, options);\n\n    return encoder;\n}\n\niconv.getDecoder = function getDecoder(encoding, options) {\n    var codec = iconv.getCodec(encoding),\n        decoder = new codec.decoder(options, codec);\n\n    if (codec.bomAware && !(options && options.stripBOM === false))\n        decoder = new bomHandling.StripBOM(decoder, options);\n\n    return decoder;\n}\n\n\n// Load extensions in Node. All of them are omitted in Browserify build via 'browser' field in package.json.\nvar nodeVer = typeof process !== 'undefined' && process.versions && process.versions.node;\nif (nodeVer) {\n\n    // Load streaming support in Node v0.10+\n    var nodeVerArr = nodeVer.split(\".\").map(Number);\n    if (nodeVerArr[0] > 0 || nodeVerArr[1] >= 10) {\n        require(\"./streams\")(iconv);\n    }\n\n    // Load Node primitive extensions.\n    require(\"./extend-node\")(iconv);\n}\n\nif (\"Ā\" != \"\\u0100\") {\n    console.error(\"iconv-lite warning: javascript files use encoding different from utf-8. See https://github.com/ashtuchkin/iconv-lite/wiki/Javascript-source-file-encodings for more info.\");\n}\n","\"use strict\";\n\nvar Buffer = require(\"buffer\").Buffer,\n    Transform = require(\"stream\").Transform;\n\n\n// == Exports ==================================================================\nmodule.exports = function(iconv) {\n    \n    // Additional Public API.\n    iconv.encodeStream = function encodeStream(encoding, options) {\n        return new IconvLiteEncoderStream(iconv.getEncoder(encoding, options), options);\n    }\n\n    iconv.decodeStream = function decodeStream(encoding, options) {\n        return new IconvLiteDecoderStream(iconv.getDecoder(encoding, options), options);\n    }\n\n    iconv.supportsStreams = true;\n\n\n    // Not published yet.\n    iconv.IconvLiteEncoderStream = IconvLiteEncoderStream;\n    iconv.IconvLiteDecoderStream = IconvLiteDecoderStream;\n    iconv._collect = IconvLiteDecoderStream.prototype.collect;\n};\n\n\n// == Encoder stream =======================================================\nfunction IconvLiteEncoderStream(conv, options) {\n    this.conv = conv;\n    options = options || {};\n    options.decodeStrings = false; // We accept only strings, so we don't need to decode them.\n    Transform.call(this, options);\n}\n\nIconvLiteEncoderStream.prototype = Object.create(Transform.prototype, {\n    constructor: { value: IconvLiteEncoderStream }\n});\n\nIconvLiteEncoderStream.prototype._transform = function(chunk, encoding, done) {\n    if (typeof chunk != 'string')\n        return done(new Error(\"Iconv encoding stream needs strings as its input.\"));\n    try {\n        var res = this.conv.write(chunk);\n        if (res && res.length) this.push(res);\n        done();\n    }\n    catch (e) {\n        done(e);\n    }\n}\n\nIconvLiteEncoderStream.prototype._flush = function(done) {\n    try {\n        var res = this.conv.end();\n        if (res && res.length) this.push(res);\n        done();\n    }\n    catch (e) {\n        done(e);\n    }\n}\n\nIconvLiteEncoderStream.prototype.collect = function(cb) {\n    var chunks = [];\n    this.on('error', cb);\n    this.on('data', function(chunk) { chunks.push(chunk); });\n    this.on('end', function() {\n        cb(null, Buffer.concat(chunks));\n    });\n    return this;\n}\n\n\n// == Decoder stream =======================================================\nfunction IconvLiteDecoderStream(conv, options) {\n    this.conv = conv;\n    options = options || {};\n    options.encoding = this.encoding = 'utf8'; // We output strings.\n    Transform.call(this, options);\n}\n\nIconvLiteDecoderStream.prototype = Object.create(Transform.prototype, {\n    constructor: { value: IconvLiteDecoderStream }\n});\n\nIconvLiteDecoderStream.prototype._transform = function(chunk, encoding, done) {\n    if (!Buffer.isBuffer(chunk))\n        return done(new Error(\"Iconv decoding stream needs buffers as its input.\"));\n    try {\n        var res = this.conv.write(chunk);\n        if (res && res.length) this.push(res, this.encoding);\n        done();\n    }\n    catch (e) {\n        done(e);\n    }\n}\n\nIconvLiteDecoderStream.prototype._flush = function(done) {\n    try {\n        var res = this.conv.end();\n        if (res && res.length) this.push(res, this.encoding);                \n        done();\n    }\n    catch (e) {\n        done(e);\n    }\n}\n\nIconvLiteDecoderStream.prototype.collect = function(cb) {\n    var res = '';\n    this.on('error', cb);\n    this.on('data', function(chunk) { res += chunk; });\n    this.on('end', function() {\n        cb(null, res);\n    });\n    return this;\n}\n\n","try {\n  var util = require('util');\n  /* istanbul ignore next */\n  if (typeof util.inherits !== 'function') throw '';\n  module.exports = util.inherits;\n} catch (e) {\n  /* istanbul ignore next */\n  module.exports = require('./inherits_browser.js');\n}\n","if (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    if (superCtor) {\n      ctor.super_ = superCtor\n      ctor.prototype = Object.create(superCtor.prototype, {\n        constructor: {\n          value: ctor,\n          enumerable: false,\n          writable: true,\n          configurable: true\n        }\n      })\n    }\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    if (superCtor) {\n      ctor.super_ = superCtor\n      var TempCtor = function () {}\n      TempCtor.prototype = superCtor.prototype\n      ctor.prototype = new TempCtor()\n      ctor.prototype.constructor = ctor\n    }\n  }\n}\n","(function() {\n  var expandIPv6, ipaddr, ipv4Part, ipv4Regexes, ipv6Part, ipv6Regexes, matchCIDR, root, zoneIndex;\n\n  ipaddr = {};\n\n  root = this;\n\n  if ((typeof module !== \"undefined\" && module !== null) && module.exports) {\n    module.exports = ipaddr;\n  } else {\n    root['ipaddr'] = ipaddr;\n  }\n\n  matchCIDR = function(first, second, partSize, cidrBits) {\n    var part, shift;\n    if (first.length !== second.length) {\n      throw new Error(\"ipaddr: cannot match CIDR for objects with different lengths\");\n    }\n    part = 0;\n    while (cidrBits > 0) {\n      shift = partSize - cidrBits;\n      if (shift < 0) {\n        shift = 0;\n      }\n      if (first[part] >> shift !== second[part] >> shift) {\n        return false;\n      }\n      cidrBits -= partSize;\n      part += 1;\n    }\n    return true;\n  };\n\n  ipaddr.subnetMatch = function(address, rangeList, defaultName) {\n    var k, len, rangeName, rangeSubnets, subnet;\n    if (defaultName == null) {\n      defaultName = 'unicast';\n    }\n    for (rangeName in rangeList) {\n      rangeSubnets = rangeList[rangeName];\n      if (rangeSubnets[0] && !(rangeSubnets[0] instanceof Array)) {\n        rangeSubnets = [rangeSubnets];\n      }\n      for (k = 0, len = rangeSubnets.length; k < len; k++) {\n        subnet = rangeSubnets[k];\n        if (address.kind() === subnet[0].kind()) {\n          if (address.match.apply(address, subnet)) {\n            return rangeName;\n          }\n        }\n      }\n    }\n    return defaultName;\n  };\n\n  ipaddr.IPv4 = (function() {\n    function IPv4(octets) {\n      var k, len, octet;\n      if (octets.length !== 4) {\n        throw new Error(\"ipaddr: ipv4 octet count should be 4\");\n      }\n      for (k = 0, len = octets.length; k < len; k++) {\n        octet = octets[k];\n        if (!((0 <= octet && octet <= 255))) {\n          throw new Error(\"ipaddr: ipv4 octet should fit in 8 bits\");\n        }\n      }\n      this.octets = octets;\n    }\n\n    IPv4.prototype.kind = function() {\n      return 'ipv4';\n    };\n\n    IPv4.prototype.toString = function() {\n      return this.octets.join(\".\");\n    };\n\n    IPv4.prototype.toNormalizedString = function() {\n      return this.toString();\n    };\n\n    IPv4.prototype.toByteArray = function() {\n      return this.octets.slice(0);\n    };\n\n    IPv4.prototype.match = function(other, cidrRange) {\n      var ref;\n      if (cidrRange === void 0) {\n        ref = other, other = ref[0], cidrRange = ref[1];\n      }\n      if (other.kind() !== 'ipv4') {\n        throw new Error(\"ipaddr: cannot match ipv4 address with non-ipv4 one\");\n      }\n      return matchCIDR(this.octets, other.octets, 8, cidrRange);\n    };\n\n    IPv4.prototype.SpecialRanges = {\n      unspecified: [[new IPv4([0, 0, 0, 0]), 8]],\n      broadcast: [[new IPv4([255, 255, 255, 255]), 32]],\n      multicast: [[new IPv4([224, 0, 0, 0]), 4]],\n      linkLocal: [[new IPv4([169, 254, 0, 0]), 16]],\n      loopback: [[new IPv4([127, 0, 0, 0]), 8]],\n      carrierGradeNat: [[new IPv4([100, 64, 0, 0]), 10]],\n      \"private\": [[new IPv4([10, 0, 0, 0]), 8], [new IPv4([172, 16, 0, 0]), 12], [new IPv4([192, 168, 0, 0]), 16]],\n      reserved: [[new IPv4([192, 0, 0, 0]), 24], [new IPv4([192, 0, 2, 0]), 24], [new IPv4([192, 88, 99, 0]), 24], [new IPv4([198, 51, 100, 0]), 24], [new IPv4([203, 0, 113, 0]), 24], [new IPv4([240, 0, 0, 0]), 4]]\n    };\n\n    IPv4.prototype.range = function() {\n      return ipaddr.subnetMatch(this, this.SpecialRanges);\n    };\n\n    IPv4.prototype.toIPv4MappedAddress = function() {\n      return ipaddr.IPv6.parse(\"::ffff:\" + (this.toString()));\n    };\n\n    IPv4.prototype.prefixLengthFromSubnetMask = function() {\n      var cidr, i, k, octet, stop, zeros, zerotable;\n      zerotable = {\n        0: 8,\n        128: 7,\n        192: 6,\n        224: 5,\n        240: 4,\n        248: 3,\n        252: 2,\n        254: 1,\n        255: 0\n      };\n      cidr = 0;\n      stop = false;\n      for (i = k = 3; k >= 0; i = k += -1) {\n        octet = this.octets[i];\n        if (octet in zerotable) {\n          zeros = zerotable[octet];\n          if (stop && zeros !== 0) {\n            return null;\n          }\n          if (zeros !== 8) {\n            stop = true;\n          }\n          cidr += zeros;\n        } else {\n          return null;\n        }\n      }\n      return 32 - cidr;\n    };\n\n    return IPv4;\n\n  })();\n\n  ipv4Part = \"(0?\\\\d+|0x[a-f0-9]+)\";\n\n  ipv4Regexes = {\n    fourOctet: new RegExp(\"^\" + ipv4Part + \"\\\\.\" + ipv4Part + \"\\\\.\" + ipv4Part + \"\\\\.\" + ipv4Part + \"$\", 'i'),\n    longValue: new RegExp(\"^\" + ipv4Part + \"$\", 'i')\n  };\n\n  ipaddr.IPv4.parser = function(string) {\n    var match, parseIntAuto, part, shift, value;\n    parseIntAuto = function(string) {\n      if (string[0] === \"0\" && string[1] !== \"x\") {\n        return parseInt(string, 8);\n      } else {\n        return parseInt(string);\n      }\n    };\n    if (match = string.match(ipv4Regexes.fourOctet)) {\n      return (function() {\n        var k, len, ref, results;\n        ref = match.slice(1, 6);\n        results = [];\n        for (k = 0, len = ref.length; k < len; k++) {\n          part = ref[k];\n          results.push(parseIntAuto(part));\n        }\n        return results;\n      })();\n    } else if (match = string.match(ipv4Regexes.longValue)) {\n      value = parseIntAuto(match[1]);\n      if (value > 0xffffffff || value < 0) {\n        throw new Error(\"ipaddr: address outside defined range\");\n      }\n      return ((function() {\n        var k, results;\n        results = [];\n        for (shift = k = 0; k <= 24; shift = k += 8) {\n          results.push((value >> shift) & 0xff);\n        }\n        return results;\n      })()).reverse();\n    } else {\n      return null;\n    }\n  };\n\n  ipaddr.IPv6 = (function() {\n    function IPv6(parts, zoneId) {\n      var i, k, l, len, part, ref;\n      if (parts.length === 16) {\n        this.parts = [];\n        for (i = k = 0; k <= 14; i = k += 2) {\n          this.parts.push((parts[i] << 8) | parts[i + 1]);\n        }\n      } else if (parts.length === 8) {\n        this.parts = parts;\n      } else {\n        throw new Error(\"ipaddr: ipv6 part count should be 8 or 16\");\n      }\n      ref = this.parts;\n      for (l = 0, len = ref.length; l < len; l++) {\n        part = ref[l];\n        if (!((0 <= part && part <= 0xffff))) {\n          throw new Error(\"ipaddr: ipv6 part should fit in 16 bits\");\n        }\n      }\n      if (zoneId) {\n        this.zoneId = zoneId;\n      }\n    }\n\n    IPv6.prototype.kind = function() {\n      return 'ipv6';\n    };\n\n    IPv6.prototype.toString = function() {\n      return this.toNormalizedString().replace(/((^|:)(0(:|$))+)/, '::');\n    };\n\n    IPv6.prototype.toRFC5952String = function() {\n      var bestMatchIndex, bestMatchLength, match, regex, string;\n      regex = /((^|:)(0(:|$)){2,})/g;\n      string = this.toNormalizedString();\n      bestMatchIndex = 0;\n      bestMatchLength = -1;\n      while ((match = regex.exec(string))) {\n        if (match[0].length > bestMatchLength) {\n          bestMatchIndex = match.index;\n          bestMatchLength = match[0].length;\n        }\n      }\n      if (bestMatchLength < 0) {\n        return string;\n      }\n      return string.substring(0, bestMatchIndex) + '::' + string.substring(bestMatchIndex + bestMatchLength);\n    };\n\n    IPv6.prototype.toByteArray = function() {\n      var bytes, k, len, part, ref;\n      bytes = [];\n      ref = this.parts;\n      for (k = 0, len = ref.length; k < len; k++) {\n        part = ref[k];\n        bytes.push(part >> 8);\n        bytes.push(part & 0xff);\n      }\n      return bytes;\n    };\n\n    IPv6.prototype.toNormalizedString = function() {\n      var addr, part, suffix;\n      addr = ((function() {\n        var k, len, ref, results;\n        ref = this.parts;\n        results = [];\n        for (k = 0, len = ref.length; k < len; k++) {\n          part = ref[k];\n          results.push(part.toString(16));\n        }\n        return results;\n      }).call(this)).join(\":\");\n      suffix = '';\n      if (this.zoneId) {\n        suffix = '%' + this.zoneId;\n      }\n      return addr + suffix;\n    };\n\n    IPv6.prototype.toFixedLengthString = function() {\n      var addr, part, suffix;\n      addr = ((function() {\n        var k, len, ref, results;\n        ref = this.parts;\n        results = [];\n        for (k = 0, len = ref.length; k < len; k++) {\n          part = ref[k];\n          results.push(part.toString(16).padStart(4, '0'));\n        }\n        return results;\n      }).call(this)).join(\":\");\n      suffix = '';\n      if (this.zoneId) {\n        suffix = '%' + this.zoneId;\n      }\n      return addr + suffix;\n    };\n\n    IPv6.prototype.match = function(other, cidrRange) {\n      var ref;\n      if (cidrRange === void 0) {\n        ref = other, other = ref[0], cidrRange = ref[1];\n      }\n      if (other.kind() !== 'ipv6') {\n        throw new Error(\"ipaddr: cannot match ipv6 address with non-ipv6 one\");\n      }\n      return matchCIDR(this.parts, other.parts, 16, cidrRange);\n    };\n\n    IPv6.prototype.SpecialRanges = {\n      unspecified: [new IPv6([0, 0, 0, 0, 0, 0, 0, 0]), 128],\n      linkLocal: [new IPv6([0xfe80, 0, 0, 0, 0, 0, 0, 0]), 10],\n      multicast: [new IPv6([0xff00, 0, 0, 0, 0, 0, 0, 0]), 8],\n      loopback: [new IPv6([0, 0, 0, 0, 0, 0, 0, 1]), 128],\n      uniqueLocal: [new IPv6([0xfc00, 0, 0, 0, 0, 0, 0, 0]), 7],\n      ipv4Mapped: [new IPv6([0, 0, 0, 0, 0, 0xffff, 0, 0]), 96],\n      rfc6145: [new IPv6([0, 0, 0, 0, 0xffff, 0, 0, 0]), 96],\n      rfc6052: [new IPv6([0x64, 0xff9b, 0, 0, 0, 0, 0, 0]), 96],\n      '6to4': [new IPv6([0x2002, 0, 0, 0, 0, 0, 0, 0]), 16],\n      teredo: [new IPv6([0x2001, 0, 0, 0, 0, 0, 0, 0]), 32],\n      reserved: [[new IPv6([0x2001, 0xdb8, 0, 0, 0, 0, 0, 0]), 32]]\n    };\n\n    IPv6.prototype.range = function() {\n      return ipaddr.subnetMatch(this, this.SpecialRanges);\n    };\n\n    IPv6.prototype.isIPv4MappedAddress = function() {\n      return this.range() === 'ipv4Mapped';\n    };\n\n    IPv6.prototype.toIPv4Address = function() {\n      var high, low, ref;\n      if (!this.isIPv4MappedAddress()) {\n        throw new Error(\"ipaddr: trying to convert a generic ipv6 address to ipv4\");\n      }\n      ref = this.parts.slice(-2), high = ref[0], low = ref[1];\n      return new ipaddr.IPv4([high >> 8, high & 0xff, low >> 8, low & 0xff]);\n    };\n\n    IPv6.prototype.prefixLengthFromSubnetMask = function() {\n      var cidr, i, k, part, stop, zeros, zerotable;\n      zerotable = {\n        0: 16,\n        32768: 15,\n        49152: 14,\n        57344: 13,\n        61440: 12,\n        63488: 11,\n        64512: 10,\n        65024: 9,\n        65280: 8,\n        65408: 7,\n        65472: 6,\n        65504: 5,\n        65520: 4,\n        65528: 3,\n        65532: 2,\n        65534: 1,\n        65535: 0\n      };\n      cidr = 0;\n      stop = false;\n      for (i = k = 7; k >= 0; i = k += -1) {\n        part = this.parts[i];\n        if (part in zerotable) {\n          zeros = zerotable[part];\n          if (stop && zeros !== 0) {\n            return null;\n          }\n          if (zeros !== 16) {\n            stop = true;\n          }\n          cidr += zeros;\n        } else {\n          return null;\n        }\n      }\n      return 128 - cidr;\n    };\n\n    return IPv6;\n\n  })();\n\n  ipv6Part = \"(?:[0-9a-f]+::?)+\";\n\n  zoneIndex = \"%[0-9a-z]{1,}\";\n\n  ipv6Regexes = {\n    zoneIndex: new RegExp(zoneIndex, 'i'),\n    \"native\": new RegExp(\"^(::)?(\" + ipv6Part + \")?([0-9a-f]+)?(::)?(\" + zoneIndex + \")?$\", 'i'),\n    transitional: new RegExp((\"^((?:\" + ipv6Part + \")|(?:::)(?:\" + ipv6Part + \")?)\") + (ipv4Part + \"\\\\.\" + ipv4Part + \"\\\\.\" + ipv4Part + \"\\\\.\" + ipv4Part) + (\"(\" + zoneIndex + \")?$\"), 'i')\n  };\n\n  expandIPv6 = function(string, parts) {\n    var colonCount, lastColon, part, replacement, replacementCount, zoneId;\n    if (string.indexOf('::') !== string.lastIndexOf('::')) {\n      return null;\n    }\n    zoneId = (string.match(ipv6Regexes['zoneIndex']) || [])[0];\n    if (zoneId) {\n      zoneId = zoneId.substring(1);\n      string = string.replace(/%.+$/, '');\n    }\n    colonCount = 0;\n    lastColon = -1;\n    while ((lastColon = string.indexOf(':', lastColon + 1)) >= 0) {\n      colonCount++;\n    }\n    if (string.substr(0, 2) === '::') {\n      colonCount--;\n    }\n    if (string.substr(-2, 2) === '::') {\n      colonCount--;\n    }\n    if (colonCount > parts) {\n      return null;\n    }\n    replacementCount = parts - colonCount;\n    replacement = ':';\n    while (replacementCount--) {\n      replacement += '0:';\n    }\n    string = string.replace('::', replacement);\n    if (string[0] === ':') {\n      string = string.slice(1);\n    }\n    if (string[string.length - 1] === ':') {\n      string = string.slice(0, -1);\n    }\n    parts = (function() {\n      var k, len, ref, results;\n      ref = string.split(\":\");\n      results = [];\n      for (k = 0, len = ref.length; k < len; k++) {\n        part = ref[k];\n        results.push(parseInt(part, 16));\n      }\n      return results;\n    })();\n    return {\n      parts: parts,\n      zoneId: zoneId\n    };\n  };\n\n  ipaddr.IPv6.parser = function(string) {\n    var addr, k, len, match, octet, octets, zoneId;\n    if (ipv6Regexes['native'].test(string)) {\n      return expandIPv6(string, 8);\n    } else if (match = string.match(ipv6Regexes['transitional'])) {\n      zoneId = match[6] || '';\n      addr = expandIPv6(match[1].slice(0, -1) + zoneId, 6);\n      if (addr.parts) {\n        octets = [parseInt(match[2]), parseInt(match[3]), parseInt(match[4]), parseInt(match[5])];\n        for (k = 0, len = octets.length; k < len; k++) {\n          octet = octets[k];\n          if (!((0 <= octet && octet <= 255))) {\n            return null;\n          }\n        }\n        addr.parts.push(octets[0] << 8 | octets[1]);\n        addr.parts.push(octets[2] << 8 | octets[3]);\n        return {\n          parts: addr.parts,\n          zoneId: addr.zoneId\n        };\n      }\n    }\n    return null;\n  };\n\n  ipaddr.IPv4.isIPv4 = ipaddr.IPv6.isIPv6 = function(string) {\n    return this.parser(string) !== null;\n  };\n\n  ipaddr.IPv4.isValid = function(string) {\n    var e;\n    try {\n      new this(this.parser(string));\n      return true;\n    } catch (error1) {\n      e = error1;\n      return false;\n    }\n  };\n\n  ipaddr.IPv4.isValidFourPartDecimal = function(string) {\n    if (ipaddr.IPv4.isValid(string) && string.match(/^(0|[1-9]\\d*)(\\.(0|[1-9]\\d*)){3}$/)) {\n      return true;\n    } else {\n      return false;\n    }\n  };\n\n  ipaddr.IPv6.isValid = function(string) {\n    var addr, e;\n    if (typeof string === \"string\" && string.indexOf(\":\") === -1) {\n      return false;\n    }\n    try {\n      addr = this.parser(string);\n      new this(addr.parts, addr.zoneId);\n      return true;\n    } catch (error1) {\n      e = error1;\n      return false;\n    }\n  };\n\n  ipaddr.IPv4.parse = function(string) {\n    var parts;\n    parts = this.parser(string);\n    if (parts === null) {\n      throw new Error(\"ipaddr: string is not formatted like ip address\");\n    }\n    return new this(parts);\n  };\n\n  ipaddr.IPv6.parse = function(string) {\n    var addr;\n    addr = this.parser(string);\n    if (addr.parts === null) {\n      throw new Error(\"ipaddr: string is not formatted like ip address\");\n    }\n    return new this(addr.parts, addr.zoneId);\n  };\n\n  ipaddr.IPv4.parseCIDR = function(string) {\n    var maskLength, match, parsed;\n    if (match = string.match(/^(.+)\\/(\\d+)$/)) {\n      maskLength = parseInt(match[2]);\n      if (maskLength >= 0 && maskLength <= 32) {\n        parsed = [this.parse(match[1]), maskLength];\n        Object.defineProperty(parsed, 'toString', {\n          value: function() {\n            return this.join('/');\n          }\n        });\n        return parsed;\n      }\n    }\n    throw new Error(\"ipaddr: string is not formatted like an IPv4 CIDR range\");\n  };\n\n  ipaddr.IPv4.subnetMaskFromPrefixLength = function(prefix) {\n    var filledOctetCount, j, octets;\n    prefix = parseInt(prefix);\n    if (prefix < 0 || prefix > 32) {\n      throw new Error('ipaddr: invalid IPv4 prefix length');\n    }\n    octets = [0, 0, 0, 0];\n    j = 0;\n    filledOctetCount = Math.floor(prefix / 8);\n    while (j < filledOctetCount) {\n      octets[j] = 255;\n      j++;\n    }\n    if (filledOctetCount < 4) {\n      octets[filledOctetCount] = Math.pow(2, prefix % 8) - 1 << 8 - (prefix % 8);\n    }\n    return new this(octets);\n  };\n\n  ipaddr.IPv4.broadcastAddressFromCIDR = function(string) {\n    var cidr, error, i, ipInterfaceOctets, octets, subnetMaskOctets;\n    try {\n      cidr = this.parseCIDR(string);\n      ipInterfaceOctets = cidr[0].toByteArray();\n      subnetMaskOctets = this.subnetMaskFromPrefixLength(cidr[1]).toByteArray();\n      octets = [];\n      i = 0;\n      while (i < 4) {\n        octets.push(parseInt(ipInterfaceOctets[i], 10) | parseInt(subnetMaskOctets[i], 10) ^ 255);\n        i++;\n      }\n      return new this(octets);\n    } catch (error1) {\n      error = error1;\n      throw new Error('ipaddr: the address does not have IPv4 CIDR format');\n    }\n  };\n\n  ipaddr.IPv4.networkAddressFromCIDR = function(string) {\n    var cidr, error, i, ipInterfaceOctets, octets, subnetMaskOctets;\n    try {\n      cidr = this.parseCIDR(string);\n      ipInterfaceOctets = cidr[0].toByteArray();\n      subnetMaskOctets = this.subnetMaskFromPrefixLength(cidr[1]).toByteArray();\n      octets = [];\n      i = 0;\n      while (i < 4) {\n        octets.push(parseInt(ipInterfaceOctets[i], 10) & parseInt(subnetMaskOctets[i], 10));\n        i++;\n      }\n      return new this(octets);\n    } catch (error1) {\n      error = error1;\n      throw new Error('ipaddr: the address does not have IPv4 CIDR format');\n    }\n  };\n\n  ipaddr.IPv6.parseCIDR = function(string) {\n    var maskLength, match, parsed;\n    if (match = string.match(/^(.+)\\/(\\d+)$/)) {\n      maskLength = parseInt(match[2]);\n      if (maskLength >= 0 && maskLength <= 128) {\n        parsed = [this.parse(match[1]), maskLength];\n        Object.defineProperty(parsed, 'toString', {\n          value: function() {\n            return this.join('/');\n          }\n        });\n        return parsed;\n      }\n    }\n    throw new Error(\"ipaddr: string is not formatted like an IPv6 CIDR range\");\n  };\n\n  ipaddr.isValid = function(string) {\n    return ipaddr.IPv6.isValid(string) || ipaddr.IPv4.isValid(string);\n  };\n\n  ipaddr.parse = function(string) {\n    if (ipaddr.IPv6.isValid(string)) {\n      return ipaddr.IPv6.parse(string);\n    } else if (ipaddr.IPv4.isValid(string)) {\n      return ipaddr.IPv4.parse(string);\n    } else {\n      throw new Error(\"ipaddr: the address has neither IPv6 nor IPv4 format\");\n    }\n  };\n\n  ipaddr.parseCIDR = function(string) {\n    var e;\n    try {\n      return ipaddr.IPv6.parseCIDR(string);\n    } catch (error1) {\n      e = error1;\n      try {\n        return ipaddr.IPv4.parseCIDR(string);\n      } catch (error1) {\n        e = error1;\n        throw new Error(\"ipaddr: the address has neither IPv6 nor IPv4 CIDR format\");\n      }\n    }\n  };\n\n  ipaddr.fromByteArray = function(bytes) {\n    var length;\n    length = bytes.length;\n    if (length === 4) {\n      return new ipaddr.IPv4(bytes);\n    } else if (length === 16) {\n      return new ipaddr.IPv6(bytes);\n    } else {\n      throw new Error(\"ipaddr: the binary input is neither an IPv6 nor IPv4 address\");\n    }\n  };\n\n  ipaddr.process = function(string) {\n    var addr;\n    addr = this.parse(string);\n    if (addr.kind() === 'ipv6' && addr.isIPv4MappedAddress()) {\n      return addr.toIPv4Address();\n    } else {\n      return addr;\n    }\n  };\n\n}).call(this);\n","/*!\n * media-typer\n * Copyright(c) 2014 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n/**\n * RegExp to match *( \";\" parameter ) in RFC 2616 sec 3.7\n *\n * parameter     = token \"=\" ( token | quoted-string )\n * token         = 1*<any CHAR except CTLs or separators>\n * separators    = \"(\" | \")\" | \"<\" | \">\" | \"@\"\n *               | \",\" | \";\" | \":\" | \"\\\" | <\">\n *               | \"/\" | \"[\" | \"]\" | \"?\" | \"=\"\n *               | \"{\" | \"}\" | SP | HT\n * quoted-string = ( <\"> *(qdtext | quoted-pair ) <\"> )\n * qdtext        = <any TEXT except <\">>\n * quoted-pair   = \"\\\" CHAR\n * CHAR          = <any US-ASCII character (octets 0 - 127)>\n * TEXT          = <any OCTET except CTLs, but including LWS>\n * LWS           = [CRLF] 1*( SP | HT )\n * CRLF          = CR LF\n * CR            = <US-ASCII CR, carriage return (13)>\n * LF            = <US-ASCII LF, linefeed (10)>\n * SP            = <US-ASCII SP, space (32)>\n * SHT           = <US-ASCII HT, horizontal-tab (9)>\n * CTL           = <any US-ASCII control character (octets 0 - 31) and DEL (127)>\n * OCTET         = <any 8-bit sequence of data>\n */\nvar paramRegExp = /; *([!#$%&'\\*\\+\\-\\.0-9A-Z\\^_`a-z\\|~]+) *= *(\"(?:[ !\\u0023-\\u005b\\u005d-\\u007e\\u0080-\\u00ff]|\\\\[\\u0020-\\u007e])*\"|[!#$%&'\\*\\+\\-\\.0-9A-Z\\^_`a-z\\|~]+) */g;\nvar textRegExp = /^[\\u0020-\\u007e\\u0080-\\u00ff]+$/\nvar tokenRegExp = /^[!#$%&'\\*\\+\\-\\.0-9A-Z\\^_`a-z\\|~]+$/\n\n/**\n * RegExp to match quoted-pair in RFC 2616\n *\n * quoted-pair = \"\\\" CHAR\n * CHAR        = <any US-ASCII character (octets 0 - 127)>\n */\nvar qescRegExp = /\\\\([\\u0000-\\u007f])/g;\n\n/**\n * RegExp to match chars that must be quoted-pair in RFC 2616\n */\nvar quoteRegExp = /([\\\\\"])/g;\n\n/**\n * RegExp to match type in RFC 6838\n *\n * type-name = restricted-name\n * subtype-name = restricted-name\n * restricted-name = restricted-name-first *126restricted-name-chars\n * restricted-name-first  = ALPHA / DIGIT\n * restricted-name-chars  = ALPHA / DIGIT / \"!\" / \"#\" /\n *                          \"$\" / \"&\" / \"-\" / \"^\" / \"_\"\n * restricted-name-chars =/ \".\" ; Characters before first dot always\n *                              ; specify a facet name\n * restricted-name-chars =/ \"+\" ; Characters after last plus always\n *                              ; specify a structured syntax suffix\n * ALPHA =  %x41-5A / %x61-7A   ; A-Z / a-z\n * DIGIT =  %x30-39             ; 0-9\n */\nvar subtypeNameRegExp = /^[A-Za-z0-9][A-Za-z0-9!#$&^_.-]{0,126}$/\nvar typeNameRegExp = /^[A-Za-z0-9][A-Za-z0-9!#$&^_-]{0,126}$/\nvar typeRegExp = /^ *([A-Za-z0-9][A-Za-z0-9!#$&^_-]{0,126})\\/([A-Za-z0-9][A-Za-z0-9!#$&^_.+-]{0,126}) *$/;\n\n/**\n * Module exports.\n */\n\nexports.format = format\nexports.parse = parse\n\n/**\n * Format object to media type.\n *\n * @param {object} obj\n * @return {string}\n * @api public\n */\n\nfunction format(obj) {\n  if (!obj || typeof obj !== 'object') {\n    throw new TypeError('argument obj is required')\n  }\n\n  var parameters = obj.parameters\n  var subtype = obj.subtype\n  var suffix = obj.suffix\n  var type = obj.type\n\n  if (!type || !typeNameRegExp.test(type)) {\n    throw new TypeError('invalid type')\n  }\n\n  if (!subtype || !subtypeNameRegExp.test(subtype)) {\n    throw new TypeError('invalid subtype')\n  }\n\n  // format as type/subtype\n  var string = type + '/' + subtype\n\n  // append +suffix\n  if (suffix) {\n    if (!typeNameRegExp.test(suffix)) {\n      throw new TypeError('invalid suffix')\n    }\n\n    string += '+' + suffix\n  }\n\n  // append parameters\n  if (parameters && typeof parameters === 'object') {\n    var param\n    var params = Object.keys(parameters).sort()\n\n    for (var i = 0; i < params.length; i++) {\n      param = params[i]\n\n      if (!tokenRegExp.test(param)) {\n        throw new TypeError('invalid parameter name')\n      }\n\n      string += '; ' + param + '=' + qstring(parameters[param])\n    }\n  }\n\n  return string\n}\n\n/**\n * Parse media type to object.\n *\n * @param {string|object} string\n * @return {Object}\n * @api public\n */\n\nfunction parse(string) {\n  if (!string) {\n    throw new TypeError('argument string is required')\n  }\n\n  // support req/res-like objects as argument\n  if (typeof string === 'object') {\n    string = getcontenttype(string)\n  }\n\n  if (typeof string !== 'string') {\n    throw new TypeError('argument string is required to be a string')\n  }\n\n  var index = string.indexOf(';')\n  var type = index !== -1\n    ? string.substr(0, index)\n    : string\n\n  var key\n  var match\n  var obj = splitType(type)\n  var params = {}\n  var value\n\n  paramRegExp.lastIndex = index\n\n  while (match = paramRegExp.exec(string)) {\n    if (match.index !== index) {\n      throw new TypeError('invalid parameter format')\n    }\n\n    index += match[0].length\n    key = match[1].toLowerCase()\n    value = match[2]\n\n    if (value[0] === '\"') {\n      // remove quotes and escapes\n      value = value\n        .substr(1, value.length - 2)\n        .replace(qescRegExp, '$1')\n    }\n\n    params[key] = value\n  }\n\n  if (index !== -1 && index !== string.length) {\n    throw new TypeError('invalid parameter format')\n  }\n\n  obj.parameters = params\n\n  return obj\n}\n\n/**\n * Get content-type from req/res objects.\n *\n * @param {object}\n * @return {Object}\n * @api private\n */\n\nfunction getcontenttype(obj) {\n  if (typeof obj.getHeader === 'function') {\n    // res-like\n    return obj.getHeader('content-type')\n  }\n\n  if (typeof obj.headers === 'object') {\n    // req-like\n    return obj.headers && obj.headers['content-type']\n  }\n}\n\n/**\n * Quote a string if necessary.\n *\n * @param {string} val\n * @return {string}\n * @api private\n */\n\nfunction qstring(val) {\n  var str = String(val)\n\n  // no need to quote tokens\n  if (tokenRegExp.test(str)) {\n    return str\n  }\n\n  if (str.length > 0 && !textRegExp.test(str)) {\n    throw new TypeError('invalid parameter value')\n  }\n\n  return '\"' + str.replace(quoteRegExp, '\\\\$1') + '\"'\n}\n\n/**\n * Simply \"type/subtype+siffx\" into parts.\n *\n * @param {string} string\n * @return {Object}\n * @api private\n */\n\nfunction splitType(string) {\n  var match = typeRegExp.exec(string.toLowerCase())\n\n  if (!match) {\n    throw new TypeError('invalid media type')\n  }\n\n  var type = match[1]\n  var subtype = match[2]\n  var suffix\n\n  // suffix after last +\n  var index = subtype.lastIndexOf('+')\n  if (index !== -1) {\n    suffix = subtype.substr(index + 1)\n    subtype = subtype.substr(0, index)\n  }\n\n  var obj = {\n    type: type,\n    subtype: subtype,\n    suffix: suffix\n  }\n\n  return obj\n}\n","/*!\n * merge-descriptors\n * Copyright(c) 2014 Jonathan Ong\n * Copyright(c) 2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = merge\n\n/**\n * Module variables.\n * @private\n */\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty\n\n/**\n * Merge the property descriptors of `src` into `dest`\n *\n * @param {object} dest Object to add descriptors to\n * @param {object} src Object to clone descriptors from\n * @param {boolean} [redefine=true] Redefine `dest` properties with `src` properties\n * @returns {object} Reference to dest\n * @public\n */\n\nfunction merge(dest, src, redefine) {\n  if (!dest) {\n    throw new TypeError('argument dest is required')\n  }\n\n  if (!src) {\n    throw new TypeError('argument src is required')\n  }\n\n  if (redefine === undefined) {\n    // Default to true\n    redefine = true\n  }\n\n  Object.getOwnPropertyNames(src).forEach(function forEachOwnPropertyName(name) {\n    if (!redefine && hasOwnProperty.call(dest, name)) {\n      // Skip desriptor\n      return\n    }\n\n    // Copy descriptor\n    var descriptor = Object.getOwnPropertyDescriptor(src, name)\n    Object.defineProperty(dest, name, descriptor)\n  })\n\n  return dest\n}\n","/*!\n * methods\n * Copyright(c) 2013-2014 TJ Holowaychuk\n * Copyright(c) 2015-2016 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict';\n\n/**\n * Module dependencies.\n * @private\n */\n\nvar http = require('http');\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = getCurrentNodeMethods() || getBasicNodeMethods();\n\n/**\n * Get the current Node.js methods.\n * @private\n */\n\nfunction getCurrentNodeMethods() {\n  return http.METHODS && http.METHODS.map(function lowerCaseMethod(method) {\n    return method.toLowerCase();\n  });\n}\n\n/**\n * Get the \"basic\" Node.js methods, a snapshot from Node.js 0.10.\n * @private\n */\n\nfunction getBasicNodeMethods() {\n  return [\n    'get',\n    'post',\n    'put',\n    'head',\n    'delete',\n    'options',\n    'trace',\n    'copy',\n    'lock',\n    'mkcol',\n    'move',\n    'purge',\n    'propfind',\n    'proppatch',\n    'unlock',\n    'report',\n    'mkactivity',\n    'checkout',\n    'merge',\n    'm-search',\n    'notify',\n    'subscribe',\n    'unsubscribe',\n    'patch',\n    'search',\n    'connect'\n  ];\n}\n","/*!\n * mime-db\n * Copyright(c) 2014 Jonathan Ong\n * Copyright(c) 2015-2022 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n/**\n * Module exports.\n */\n\nmodule.exports = require('./db.json')\n","/*!\n * mime-types\n * Copyright(c) 2014 Jonathan Ong\n * Copyright(c) 2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * Module dependencies.\n * @private\n */\n\nvar db = require('mime-db')\nvar extname = require('path').extname\n\n/**\n * Module variables.\n * @private\n */\n\nvar EXTRACT_TYPE_REGEXP = /^\\s*([^;\\s]*)(?:;|\\s|$)/\nvar TEXT_TYPE_REGEXP = /^text\\//i\n\n/**\n * Module exports.\n * @public\n */\n\nexports.charset = charset\nexports.charsets = { lookup: charset }\nexports.contentType = contentType\nexports.extension = extension\nexports.extensions = Object.create(null)\nexports.lookup = lookup\nexports.types = Object.create(null)\n\n// Populate the extensions/types maps\npopulateMaps(exports.extensions, exports.types)\n\n/**\n * Get the default charset for a MIME type.\n *\n * @param {string} type\n * @return {boolean|string}\n */\n\nfunction charset (type) {\n  if (!type || typeof type !== 'string') {\n    return false\n  }\n\n  // TODO: use media-typer\n  var match = EXTRACT_TYPE_REGEXP.exec(type)\n  var mime = match && db[match[1].toLowerCase()]\n\n  if (mime && mime.charset) {\n    return mime.charset\n  }\n\n  // default text/* to utf-8\n  if (match && TEXT_TYPE_REGEXP.test(match[1])) {\n    return 'UTF-8'\n  }\n\n  return false\n}\n\n/**\n * Create a full Content-Type header given a MIME type or extension.\n *\n * @param {string} str\n * @return {boolean|string}\n */\n\nfunction contentType (str) {\n  // TODO: should this even be in this module?\n  if (!str || typeof str !== 'string') {\n    return false\n  }\n\n  var mime = str.indexOf('/') === -1\n    ? exports.lookup(str)\n    : str\n\n  if (!mime) {\n    return false\n  }\n\n  // TODO: use content-type or other module\n  if (mime.indexOf('charset') === -1) {\n    var charset = exports.charset(mime)\n    if (charset) mime += '; charset=' + charset.toLowerCase()\n  }\n\n  return mime\n}\n\n/**\n * Get the default extension for a MIME type.\n *\n * @param {string} type\n * @return {boolean|string}\n */\n\nfunction extension (type) {\n  if (!type || typeof type !== 'string') {\n    return false\n  }\n\n  // TODO: use media-typer\n  var match = EXTRACT_TYPE_REGEXP.exec(type)\n\n  // get extensions\n  var exts = match && exports.extensions[match[1].toLowerCase()]\n\n  if (!exts || !exts.length) {\n    return false\n  }\n\n  return exts[0]\n}\n\n/**\n * Lookup the MIME type for a file path/extension.\n *\n * @param {string} path\n * @return {boolean|string}\n */\n\nfunction lookup (path) {\n  if (!path || typeof path !== 'string') {\n    return false\n  }\n\n  // get the extension (\"ext\" or \".ext\" or full path)\n  var extension = extname('x.' + path)\n    .toLowerCase()\n    .substr(1)\n\n  if (!extension) {\n    return false\n  }\n\n  return exports.types[extension] || false\n}\n\n/**\n * Populate the extensions and types maps.\n * @private\n */\n\nfunction populateMaps (extensions, types) {\n  // source preference (least -> most)\n  var preference = ['nginx', 'apache', undefined, 'iana']\n\n  Object.keys(db).forEach(function forEachMimeType (type) {\n    var mime = db[type]\n    var exts = mime.extensions\n\n    if (!exts || !exts.length) {\n      return\n    }\n\n    // mime -> extensions\n    extensions[type] = exts\n\n    // extension -> mime\n    for (var i = 0; i < exts.length; i++) {\n      var extension = exts[i]\n\n      if (types[extension]) {\n        var from = preference.indexOf(db[types[extension]].source)\n        var to = preference.indexOf(mime.source)\n\n        if (types[extension] !== 'application/octet-stream' &&\n          (from > to || (from === to && types[extension].substr(0, 12) === 'application/'))) {\n          // skip the remapping\n          continue\n        }\n      }\n\n      // set the extension -> mime\n      types[extension] = type\n    }\n  })\n}\n","var path = require('path');\nvar fs = require('fs');\n\nfunction Mime() {\n  // Map of extension -> mime type\n  this.types = Object.create(null);\n\n  // Map of mime type -> extension\n  this.extensions = Object.create(null);\n}\n\n/**\n * Define mimetype -> extension mappings.  Each key is a mime-type that maps\n * to an array of extensions associated with the type.  The first extension is\n * used as the default extension for the type.\n *\n * e.g. mime.define({'audio/ogg', ['oga', 'ogg', 'spx']});\n *\n * @param map (Object) type definitions\n */\nMime.prototype.define = function (map) {\n  for (var type in map) {\n    var exts = map[type];\n    for (var i = 0; i < exts.length; i++) {\n      if (process.env.DEBUG_MIME && this.types[exts[i]]) {\n        console.warn((this._loading || \"define()\").replace(/.*\\//, ''), 'changes \"' + exts[i] + '\" extension type from ' +\n          this.types[exts[i]] + ' to ' + type);\n      }\n\n      this.types[exts[i]] = type;\n    }\n\n    // Default extension is the first one we encounter\n    if (!this.extensions[type]) {\n      this.extensions[type] = exts[0];\n    }\n  }\n};\n\n/**\n * Load an Apache2-style \".types\" file\n *\n * This may be called multiple times (it's expected).  Where files declare\n * overlapping types/extensions, the last file wins.\n *\n * @param file (String) path of file to load.\n */\nMime.prototype.load = function(file) {\n  this._loading = file;\n  // Read file and split into lines\n  var map = {},\n      content = fs.readFileSync(file, 'ascii'),\n      lines = content.split(/[\\r\\n]+/);\n\n  lines.forEach(function(line) {\n    // Clean up whitespace/comments, and split into fields\n    var fields = line.replace(/\\s*#.*|^\\s*|\\s*$/g, '').split(/\\s+/);\n    map[fields.shift()] = fields;\n  });\n\n  this.define(map);\n\n  this._loading = null;\n};\n\n/**\n * Lookup a mime type based on extension\n */\nMime.prototype.lookup = function(path, fallback) {\n  var ext = path.replace(/^.*[\\.\\/\\\\]/, '').toLowerCase();\n\n  return this.types[ext] || fallback || this.default_type;\n};\n\n/**\n * Return file extension associated with a mime type\n */\nMime.prototype.extension = function(mimeType) {\n  var type = mimeType.match(/^\\s*([^;\\s]*)(?:;|\\s|$)/)[1].toLowerCase();\n  return this.extensions[type];\n};\n\n// Default instance\nvar mime = new Mime();\n\n// Define built-in types\nmime.define(require('./types.json'));\n\n// Default type\nmime.default_type = mime.lookup('bin');\n\n//\n// Additional API specific to the default instance\n//\n\nmime.Mime = Mime;\n\n/**\n * Lookup a charset based on mime type.\n */\nmime.charsets = {\n  lookup: function(mimeType, fallback) {\n    // Assume text types are utf8\n    return (/^text\\/|^application\\/(javascript|json)/).test(mimeType) ? 'UTF-8' : fallback;\n  }\n};\n\nmodule.exports = mime;\n","/*!\n * negotiator\n * Copyright(c) 2012 Federico Romero\n * Copyright(c) 2012-2014 Isaac Z. Schlueter\n * Copyright(c) 2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict';\n\nvar preferredCharsets = require('./lib/charset')\nvar preferredEncodings = require('./lib/encoding')\nvar preferredLanguages = require('./lib/language')\nvar preferredMediaTypes = require('./lib/mediaType')\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = Negotiator;\nmodule.exports.Negotiator = Negotiator;\n\n/**\n * Create a Negotiator instance from a request.\n * @param {object} request\n * @public\n */\n\nfunction Negotiator(request) {\n  if (!(this instanceof Negotiator)) {\n    return new Negotiator(request);\n  }\n\n  this.request = request;\n}\n\nNegotiator.prototype.charset = function charset(available) {\n  var set = this.charsets(available);\n  return set && set[0];\n};\n\nNegotiator.prototype.charsets = function charsets(available) {\n  return preferredCharsets(this.request.headers['accept-charset'], available);\n};\n\nNegotiator.prototype.encoding = function encoding(available) {\n  var set = this.encodings(available);\n  return set && set[0];\n};\n\nNegotiator.prototype.encodings = function encodings(available) {\n  return preferredEncodings(this.request.headers['accept-encoding'], available);\n};\n\nNegotiator.prototype.language = function language(available) {\n  var set = this.languages(available);\n  return set && set[0];\n};\n\nNegotiator.prototype.languages = function languages(available) {\n  return preferredLanguages(this.request.headers['accept-language'], available);\n};\n\nNegotiator.prototype.mediaType = function mediaType(available) {\n  var set = this.mediaTypes(available);\n  return set && set[0];\n};\n\nNegotiator.prototype.mediaTypes = function mediaTypes(available) {\n  return preferredMediaTypes(this.request.headers.accept, available);\n};\n\n// Backwards compatibility\nNegotiator.prototype.preferredCharset = Negotiator.prototype.charset;\nNegotiator.prototype.preferredCharsets = Negotiator.prototype.charsets;\nNegotiator.prototype.preferredEncoding = Negotiator.prototype.encoding;\nNegotiator.prototype.preferredEncodings = Negotiator.prototype.encodings;\nNegotiator.prototype.preferredLanguage = Negotiator.prototype.language;\nNegotiator.prototype.preferredLanguages = Negotiator.prototype.languages;\nNegotiator.prototype.preferredMediaType = Negotiator.prototype.mediaType;\nNegotiator.prototype.preferredMediaTypes = Negotiator.prototype.mediaTypes;\n","/**\n * negotiator\n * Copyright(c) 2012 Isaac Z. Schlueter\n * Copyright(c) 2014 Federico Romero\n * Copyright(c) 2014-2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict';\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = preferredCharsets;\nmodule.exports.preferredCharsets = preferredCharsets;\n\n/**\n * Module variables.\n * @private\n */\n\nvar simpleCharsetRegExp = /^\\s*([^\\s;]+)\\s*(?:;(.*))?$/;\n\n/**\n * Parse the Accept-Charset header.\n * @private\n */\n\nfunction parseAcceptCharset(accept) {\n  var accepts = accept.split(',');\n\n  for (var i = 0, j = 0; i < accepts.length; i++) {\n    var charset = parseCharset(accepts[i].trim(), i);\n\n    if (charset) {\n      accepts[j++] = charset;\n    }\n  }\n\n  // trim accepts\n  accepts.length = j;\n\n  return accepts;\n}\n\n/**\n * Parse a charset from the Accept-Charset header.\n * @private\n */\n\nfunction parseCharset(str, i) {\n  var match = simpleCharsetRegExp.exec(str);\n  if (!match) return null;\n\n  var charset = match[1];\n  var q = 1;\n  if (match[2]) {\n    var params = match[2].split(';')\n    for (var j = 0; j < params.length; j++) {\n      var p = params[j].trim().split('=');\n      if (p[0] === 'q') {\n        q = parseFloat(p[1]);\n        break;\n      }\n    }\n  }\n\n  return {\n    charset: charset,\n    q: q,\n    i: i\n  };\n}\n\n/**\n * Get the priority of a charset.\n * @private\n */\n\nfunction getCharsetPriority(charset, accepted, index) {\n  var priority = {o: -1, q: 0, s: 0};\n\n  for (var i = 0; i < accepted.length; i++) {\n    var spec = specify(charset, accepted[i], index);\n\n    if (spec && (priority.s - spec.s || priority.q - spec.q || priority.o - spec.o) < 0) {\n      priority = spec;\n    }\n  }\n\n  return priority;\n}\n\n/**\n * Get the specificity of the charset.\n * @private\n */\n\nfunction specify(charset, spec, index) {\n  var s = 0;\n  if(spec.charset.toLowerCase() === charset.toLowerCase()){\n    s |= 1;\n  } else if (spec.charset !== '*' ) {\n    return null\n  }\n\n  return {\n    i: index,\n    o: spec.i,\n    q: spec.q,\n    s: s\n  }\n}\n\n/**\n * Get the preferred charsets from an Accept-Charset header.\n * @public\n */\n\nfunction preferredCharsets(accept, provided) {\n  // RFC 2616 sec 14.2: no header = *\n  var accepts = parseAcceptCharset(accept === undefined ? '*' : accept || '');\n\n  if (!provided) {\n    // sorted list of all charsets\n    return accepts\n      .filter(isQuality)\n      .sort(compareSpecs)\n      .map(getFullCharset);\n  }\n\n  var priorities = provided.map(function getPriority(type, index) {\n    return getCharsetPriority(type, accepts, index);\n  });\n\n  // sorted list of accepted charsets\n  return priorities.filter(isQuality).sort(compareSpecs).map(function getCharset(priority) {\n    return provided[priorities.indexOf(priority)];\n  });\n}\n\n/**\n * Compare two specs.\n * @private\n */\n\nfunction compareSpecs(a, b) {\n  return (b.q - a.q) || (b.s - a.s) || (a.o - b.o) || (a.i - b.i) || 0;\n}\n\n/**\n * Get full charset string.\n * @private\n */\n\nfunction getFullCharset(spec) {\n  return spec.charset;\n}\n\n/**\n * Check if a spec has any quality.\n * @private\n */\n\nfunction isQuality(spec) {\n  return spec.q > 0;\n}\n","/**\n * negotiator\n * Copyright(c) 2012 Isaac Z. Schlueter\n * Copyright(c) 2014 Federico Romero\n * Copyright(c) 2014-2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict';\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = preferredEncodings;\nmodule.exports.preferredEncodings = preferredEncodings;\n\n/**\n * Module variables.\n * @private\n */\n\nvar simpleEncodingRegExp = /^\\s*([^\\s;]+)\\s*(?:;(.*))?$/;\n\n/**\n * Parse the Accept-Encoding header.\n * @private\n */\n\nfunction parseAcceptEncoding(accept) {\n  var accepts = accept.split(',');\n  var hasIdentity = false;\n  var minQuality = 1;\n\n  for (var i = 0, j = 0; i < accepts.length; i++) {\n    var encoding = parseEncoding(accepts[i].trim(), i);\n\n    if (encoding) {\n      accepts[j++] = encoding;\n      hasIdentity = hasIdentity || specify('identity', encoding);\n      minQuality = Math.min(minQuality, encoding.q || 1);\n    }\n  }\n\n  if (!hasIdentity) {\n    /*\n     * If identity doesn't explicitly appear in the accept-encoding header,\n     * it's added to the list of acceptable encoding with the lowest q\n     */\n    accepts[j++] = {\n      encoding: 'identity',\n      q: minQuality,\n      i: i\n    };\n  }\n\n  // trim accepts\n  accepts.length = j;\n\n  return accepts;\n}\n\n/**\n * Parse an encoding from the Accept-Encoding header.\n * @private\n */\n\nfunction parseEncoding(str, i) {\n  var match = simpleEncodingRegExp.exec(str);\n  if (!match) return null;\n\n  var encoding = match[1];\n  var q = 1;\n  if (match[2]) {\n    var params = match[2].split(';');\n    for (var j = 0; j < params.length; j++) {\n      var p = params[j].trim().split('=');\n      if (p[0] === 'q') {\n        q = parseFloat(p[1]);\n        break;\n      }\n    }\n  }\n\n  return {\n    encoding: encoding,\n    q: q,\n    i: i\n  };\n}\n\n/**\n * Get the priority of an encoding.\n * @private\n */\n\nfunction getEncodingPriority(encoding, accepted, index) {\n  var priority = {o: -1, q: 0, s: 0};\n\n  for (var i = 0; i < accepted.length; i++) {\n    var spec = specify(encoding, accepted[i], index);\n\n    if (spec && (priority.s - spec.s || priority.q - spec.q || priority.o - spec.o) < 0) {\n      priority = spec;\n    }\n  }\n\n  return priority;\n}\n\n/**\n * Get the specificity of the encoding.\n * @private\n */\n\nfunction specify(encoding, spec, index) {\n  var s = 0;\n  if(spec.encoding.toLowerCase() === encoding.toLowerCase()){\n    s |= 1;\n  } else if (spec.encoding !== '*' ) {\n    return null\n  }\n\n  return {\n    i: index,\n    o: spec.i,\n    q: spec.q,\n    s: s\n  }\n};\n\n/**\n * Get the preferred encodings from an Accept-Encoding header.\n * @public\n */\n\nfunction preferredEncodings(accept, provided) {\n  var accepts = parseAcceptEncoding(accept || '');\n\n  if (!provided) {\n    // sorted list of all encodings\n    return accepts\n      .filter(isQuality)\n      .sort(compareSpecs)\n      .map(getFullEncoding);\n  }\n\n  var priorities = provided.map(function getPriority(type, index) {\n    return getEncodingPriority(type, accepts, index);\n  });\n\n  // sorted list of accepted encodings\n  return priorities.filter(isQuality).sort(compareSpecs).map(function getEncoding(priority) {\n    return provided[priorities.indexOf(priority)];\n  });\n}\n\n/**\n * Compare two specs.\n * @private\n */\n\nfunction compareSpecs(a, b) {\n  return (b.q - a.q) || (b.s - a.s) || (a.o - b.o) || (a.i - b.i) || 0;\n}\n\n/**\n * Get full encoding string.\n * @private\n */\n\nfunction getFullEncoding(spec) {\n  return spec.encoding;\n}\n\n/**\n * Check if a spec has any quality.\n * @private\n */\n\nfunction isQuality(spec) {\n  return spec.q > 0;\n}\n","/**\n * negotiator\n * Copyright(c) 2012 Isaac Z. Schlueter\n * Copyright(c) 2014 Federico Romero\n * Copyright(c) 2014-2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict';\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = preferredLanguages;\nmodule.exports.preferredLanguages = preferredLanguages;\n\n/**\n * Module variables.\n * @private\n */\n\nvar simpleLanguageRegExp = /^\\s*([^\\s\\-;]+)(?:-([^\\s;]+))?\\s*(?:;(.*))?$/;\n\n/**\n * Parse the Accept-Language header.\n * @private\n */\n\nfunction parseAcceptLanguage(accept) {\n  var accepts = accept.split(',');\n\n  for (var i = 0, j = 0; i < accepts.length; i++) {\n    var language = parseLanguage(accepts[i].trim(), i);\n\n    if (language) {\n      accepts[j++] = language;\n    }\n  }\n\n  // trim accepts\n  accepts.length = j;\n\n  return accepts;\n}\n\n/**\n * Parse a language from the Accept-Language header.\n * @private\n */\n\nfunction parseLanguage(str, i) {\n  var match = simpleLanguageRegExp.exec(str);\n  if (!match) return null;\n\n  var prefix = match[1]\n  var suffix = match[2]\n  var full = prefix\n\n  if (suffix) full += \"-\" + suffix;\n\n  var q = 1;\n  if (match[3]) {\n    var params = match[3].split(';')\n    for (var j = 0; j < params.length; j++) {\n      var p = params[j].split('=');\n      if (p[0] === 'q') q = parseFloat(p[1]);\n    }\n  }\n\n  return {\n    prefix: prefix,\n    suffix: suffix,\n    q: q,\n    i: i,\n    full: full\n  };\n}\n\n/**\n * Get the priority of a language.\n * @private\n */\n\nfunction getLanguagePriority(language, accepted, index) {\n  var priority = {o: -1, q: 0, s: 0};\n\n  for (var i = 0; i < accepted.length; i++) {\n    var spec = specify(language, accepted[i], index);\n\n    if (spec && (priority.s - spec.s || priority.q - spec.q || priority.o - spec.o) < 0) {\n      priority = spec;\n    }\n  }\n\n  return priority;\n}\n\n/**\n * Get the specificity of the language.\n * @private\n */\n\nfunction specify(language, spec, index) {\n  var p = parseLanguage(language)\n  if (!p) return null;\n  var s = 0;\n  if(spec.full.toLowerCase() === p.full.toLowerCase()){\n    s |= 4;\n  } else if (spec.prefix.toLowerCase() === p.full.toLowerCase()) {\n    s |= 2;\n  } else if (spec.full.toLowerCase() === p.prefix.toLowerCase()) {\n    s |= 1;\n  } else if (spec.full !== '*' ) {\n    return null\n  }\n\n  return {\n    i: index,\n    o: spec.i,\n    q: spec.q,\n    s: s\n  }\n};\n\n/**\n * Get the preferred languages from an Accept-Language header.\n * @public\n */\n\nfunction preferredLanguages(accept, provided) {\n  // RFC 2616 sec 14.4: no header = *\n  var accepts = parseAcceptLanguage(accept === undefined ? '*' : accept || '');\n\n  if (!provided) {\n    // sorted list of all languages\n    return accepts\n      .filter(isQuality)\n      .sort(compareSpecs)\n      .map(getFullLanguage);\n  }\n\n  var priorities = provided.map(function getPriority(type, index) {\n    return getLanguagePriority(type, accepts, index);\n  });\n\n  // sorted list of accepted languages\n  return priorities.filter(isQuality).sort(compareSpecs).map(function getLanguage(priority) {\n    return provided[priorities.indexOf(priority)];\n  });\n}\n\n/**\n * Compare two specs.\n * @private\n */\n\nfunction compareSpecs(a, b) {\n  return (b.q - a.q) || (b.s - a.s) || (a.o - b.o) || (a.i - b.i) || 0;\n}\n\n/**\n * Get full language string.\n * @private\n */\n\nfunction getFullLanguage(spec) {\n  return spec.full;\n}\n\n/**\n * Check if a spec has any quality.\n * @private\n */\n\nfunction isQuality(spec) {\n  return spec.q > 0;\n}\n","/**\n * negotiator\n * Copyright(c) 2012 Isaac Z. Schlueter\n * Copyright(c) 2014 Federico Romero\n * Copyright(c) 2014-2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict';\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = preferredMediaTypes;\nmodule.exports.preferredMediaTypes = preferredMediaTypes;\n\n/**\n * Module variables.\n * @private\n */\n\nvar simpleMediaTypeRegExp = /^\\s*([^\\s\\/;]+)\\/([^;\\s]+)\\s*(?:;(.*))?$/;\n\n/**\n * Parse the Accept header.\n * @private\n */\n\nfunction parseAccept(accept) {\n  var accepts = splitMediaTypes(accept);\n\n  for (var i = 0, j = 0; i < accepts.length; i++) {\n    var mediaType = parseMediaType(accepts[i].trim(), i);\n\n    if (mediaType) {\n      accepts[j++] = mediaType;\n    }\n  }\n\n  // trim accepts\n  accepts.length = j;\n\n  return accepts;\n}\n\n/**\n * Parse a media type from the Accept header.\n * @private\n */\n\nfunction parseMediaType(str, i) {\n  var match = simpleMediaTypeRegExp.exec(str);\n  if (!match) return null;\n\n  var params = Object.create(null);\n  var q = 1;\n  var subtype = match[2];\n  var type = match[1];\n\n  if (match[3]) {\n    var kvps = splitParameters(match[3]).map(splitKeyValuePair);\n\n    for (var j = 0; j < kvps.length; j++) {\n      var pair = kvps[j];\n      var key = pair[0].toLowerCase();\n      var val = pair[1];\n\n      // get the value, unwrapping quotes\n      var value = val && val[0] === '\"' && val[val.length - 1] === '\"'\n        ? val.substr(1, val.length - 2)\n        : val;\n\n      if (key === 'q') {\n        q = parseFloat(value);\n        break;\n      }\n\n      // store parameter\n      params[key] = value;\n    }\n  }\n\n  return {\n    type: type,\n    subtype: subtype,\n    params: params,\n    q: q,\n    i: i\n  };\n}\n\n/**\n * Get the priority of a media type.\n * @private\n */\n\nfunction getMediaTypePriority(type, accepted, index) {\n  var priority = {o: -1, q: 0, s: 0};\n\n  for (var i = 0; i < accepted.length; i++) {\n    var spec = specify(type, accepted[i], index);\n\n    if (spec && (priority.s - spec.s || priority.q - spec.q || priority.o - spec.o) < 0) {\n      priority = spec;\n    }\n  }\n\n  return priority;\n}\n\n/**\n * Get the specificity of the media type.\n * @private\n */\n\nfunction specify(type, spec, index) {\n  var p = parseMediaType(type);\n  var s = 0;\n\n  if (!p) {\n    return null;\n  }\n\n  if(spec.type.toLowerCase() == p.type.toLowerCase()) {\n    s |= 4\n  } else if(spec.type != '*') {\n    return null;\n  }\n\n  if(spec.subtype.toLowerCase() == p.subtype.toLowerCase()) {\n    s |= 2\n  } else if(spec.subtype != '*') {\n    return null;\n  }\n\n  var keys = Object.keys(spec.params);\n  if (keys.length > 0) {\n    if (keys.every(function (k) {\n      return spec.params[k] == '*' || (spec.params[k] || '').toLowerCase() == (p.params[k] || '').toLowerCase();\n    })) {\n      s |= 1\n    } else {\n      return null\n    }\n  }\n\n  return {\n    i: index,\n    o: spec.i,\n    q: spec.q,\n    s: s,\n  }\n}\n\n/**\n * Get the preferred media types from an Accept header.\n * @public\n */\n\nfunction preferredMediaTypes(accept, provided) {\n  // RFC 2616 sec 14.2: no header = */*\n  var accepts = parseAccept(accept === undefined ? '*/*' : accept || '');\n\n  if (!provided) {\n    // sorted list of all types\n    return accepts\n      .filter(isQuality)\n      .sort(compareSpecs)\n      .map(getFullType);\n  }\n\n  var priorities = provided.map(function getPriority(type, index) {\n    return getMediaTypePriority(type, accepts, index);\n  });\n\n  // sorted list of accepted types\n  return priorities.filter(isQuality).sort(compareSpecs).map(function getType(priority) {\n    return provided[priorities.indexOf(priority)];\n  });\n}\n\n/**\n * Compare two specs.\n * @private\n */\n\nfunction compareSpecs(a, b) {\n  return (b.q - a.q) || (b.s - a.s) || (a.o - b.o) || (a.i - b.i) || 0;\n}\n\n/**\n * Get full type string.\n * @private\n */\n\nfunction getFullType(spec) {\n  return spec.type + '/' + spec.subtype;\n}\n\n/**\n * Check if a spec has any quality.\n * @private\n */\n\nfunction isQuality(spec) {\n  return spec.q > 0;\n}\n\n/**\n * Count the number of quotes in a string.\n * @private\n */\n\nfunction quoteCount(string) {\n  var count = 0;\n  var index = 0;\n\n  while ((index = string.indexOf('\"', index)) !== -1) {\n    count++;\n    index++;\n  }\n\n  return count;\n}\n\n/**\n * Split a key value pair.\n * @private\n */\n\nfunction splitKeyValuePair(str) {\n  var index = str.indexOf('=');\n  var key;\n  var val;\n\n  if (index === -1) {\n    key = str;\n  } else {\n    key = str.substr(0, index);\n    val = str.substr(index + 1);\n  }\n\n  return [key, val];\n}\n\n/**\n * Split an Accept header into media types.\n * @private\n */\n\nfunction splitMediaTypes(accept) {\n  var accepts = accept.split(',');\n\n  for (var i = 1, j = 0; i < accepts.length; i++) {\n    if (quoteCount(accepts[j]) % 2 == 0) {\n      accepts[++j] = accepts[i];\n    } else {\n      accepts[j] += ',' + accepts[i];\n    }\n  }\n\n  // trim accepts\n  accepts.length = j + 1;\n\n  return accepts;\n}\n\n/**\n * Split a string of parameters.\n * @private\n */\n\nfunction splitParameters(str) {\n  var parameters = str.split(';');\n\n  for (var i = 1, j = 0; i < parameters.length; i++) {\n    if (quoteCount(parameters[j]) % 2 == 0) {\n      parameters[++j] = parameters[i];\n    } else {\n      parameters[j] += ';' + parameters[i];\n    }\n  }\n\n  // trim parameters\n  parameters.length = j + 1;\n\n  for (var i = 0; i < parameters.length; i++) {\n    parameters[i] = parameters[i].trim();\n  }\n\n  return parameters;\n}\n","var fs = require('fs')\nvar path = require('path')\nvar os = require('os')\n\n// Workaround to fix webpack's build warnings: 'the request of a dependency is an expression'\nvar runtimeRequire = typeof __webpack_require__ === 'function' ? __non_webpack_require__ : require // eslint-disable-line\n\nvar vars = (process.config && process.config.variables) || {}\nvar prebuildsOnly = !!process.env.PREBUILDS_ONLY\nvar abi = process.versions.modules // TODO: support old node where this is undef\nvar runtime = isElectron() ? 'electron' : (isNwjs() ? 'node-webkit' : 'node')\n\nvar arch = process.env.npm_config_arch || os.arch()\nvar platform = process.env.npm_config_platform || os.platform()\nvar libc = process.env.LIBC || (isAlpine(platform) ? 'musl' : 'glibc')\nvar armv = process.env.ARM_VERSION || (arch === 'arm64' ? '8' : vars.arm_version) || ''\nvar uv = (process.versions.uv || '').split('.')[0]\n\nmodule.exports = load\n\nfunction load (dir) {\n  return runtimeRequire(load.path(dir))\n}\n\nload.path = function (dir) {\n  dir = path.resolve(dir || '.')\n\n  try {\n    var name = runtimeRequire(path.join(dir, 'package.json')).name.toUpperCase().replace(/-/g, '_')\n    if (process.env[name + '_PREBUILD']) dir = process.env[name + '_PREBUILD']\n  } catch (err) {}\n\n  if (!prebuildsOnly) {\n    var release = getFirst(path.join(dir, 'build/Release'), matchBuild)\n    if (release) return release\n\n    var debug = getFirst(path.join(dir, 'build/Debug'), matchBuild)\n    if (debug) return debug\n  }\n\n  var prebuild = resolve(dir)\n  if (prebuild) return prebuild\n\n  var nearby = resolve(path.dirname(process.execPath))\n  if (nearby) return nearby\n\n  var target = [\n    'platform=' + platform,\n    'arch=' + arch,\n    'runtime=' + runtime,\n    'abi=' + abi,\n    'uv=' + uv,\n    armv ? 'armv=' + armv : '',\n    'libc=' + libc,\n    'node=' + process.versions.node,\n    process.versions.electron ? 'electron=' + process.versions.electron : '',\n    typeof __webpack_require__ === 'function' ? 'webpack=true' : '' // eslint-disable-line\n  ].filter(Boolean).join(' ')\n\n  throw new Error('No native build was found for ' + target + '\\n    loaded from: ' + dir + '\\n')\n\n  function resolve (dir) {\n    // Find matching \"prebuilds/<platform>-<arch>\" directory\n    var tuples = readdirSync(path.join(dir, 'prebuilds')).map(parseTuple)\n    var tuple = tuples.filter(matchTuple(platform, arch)).sort(compareTuples)[0]\n    if (!tuple) return\n\n    // Find most specific flavor first\n    var prebuilds = path.join(dir, 'prebuilds', tuple.name)\n    var parsed = readdirSync(prebuilds).map(parseTags)\n    var candidates = parsed.filter(matchTags(runtime, abi))\n    var winner = candidates.sort(compareTags(runtime))[0]\n    if (winner) return path.join(prebuilds, winner.file)\n  }\n}\n\nfunction readdirSync (dir) {\n  try {\n    return fs.readdirSync(dir)\n  } catch (err) {\n    return []\n  }\n}\n\nfunction getFirst (dir, filter) {\n  var files = readdirSync(dir).filter(filter)\n  return files[0] && path.join(dir, files[0])\n}\n\nfunction matchBuild (name) {\n  return /\\.node$/.test(name)\n}\n\nfunction parseTuple (name) {\n  // Example: darwin-x64+arm64\n  var arr = name.split('-')\n  if (arr.length !== 2) return\n\n  var platform = arr[0]\n  var architectures = arr[1].split('+')\n\n  if (!platform) return\n  if (!architectures.length) return\n  if (!architectures.every(Boolean)) return\n\n  return { name, platform, architectures }\n}\n\nfunction matchTuple (platform, arch) {\n  return function (tuple) {\n    if (tuple == null) return false\n    if (tuple.platform !== platform) return false\n    return tuple.architectures.includes(arch)\n  }\n}\n\nfunction compareTuples (a, b) {\n  // Prefer single-arch prebuilds over multi-arch\n  return a.architectures.length - b.architectures.length\n}\n\nfunction parseTags (file) {\n  var arr = file.split('.')\n  var extension = arr.pop()\n  var tags = { file: file, specificity: 0 }\n\n  if (extension !== 'node') return\n\n  for (var i = 0; i < arr.length; i++) {\n    var tag = arr[i]\n\n    if (tag === 'node' || tag === 'electron' || tag === 'node-webkit') {\n      tags.runtime = tag\n    } else if (tag === 'napi') {\n      tags.napi = true\n    } else if (tag.slice(0, 3) === 'abi') {\n      tags.abi = tag.slice(3)\n    } else if (tag.slice(0, 2) === 'uv') {\n      tags.uv = tag.slice(2)\n    } else if (tag.slice(0, 4) === 'armv') {\n      tags.armv = tag.slice(4)\n    } else if (tag === 'glibc' || tag === 'musl') {\n      tags.libc = tag\n    } else {\n      continue\n    }\n\n    tags.specificity++\n  }\n\n  return tags\n}\n\nfunction matchTags (runtime, abi) {\n  return function (tags) {\n    if (tags == null) return false\n    if (tags.runtime !== runtime && !runtimeAgnostic(tags)) return false\n    if (tags.abi !== abi && !tags.napi) return false\n    if (tags.uv && tags.uv !== uv) return false\n    if (tags.armv && tags.armv !== armv) return false\n    if (tags.libc && tags.libc !== libc) return false\n\n    return true\n  }\n}\n\nfunction runtimeAgnostic (tags) {\n  return tags.runtime === 'node' && tags.napi\n}\n\nfunction compareTags (runtime) {\n  // Precedence: non-agnostic runtime, abi over napi, then by specificity.\n  return function (a, b) {\n    if (a.runtime !== b.runtime) {\n      return a.runtime === runtime ? -1 : 1\n    } else if (a.abi !== b.abi) {\n      return a.abi ? -1 : 1\n    } else if (a.specificity !== b.specificity) {\n      return a.specificity > b.specificity ? -1 : 1\n    } else {\n      return 0\n    }\n  }\n}\n\nfunction isNwjs () {\n  return !!(process.versions && process.versions.nw)\n}\n\nfunction isElectron () {\n  if (process.versions && process.versions.electron) return true\n  if (process.env.ELECTRON_RUN_AS_NODE) return true\n  return typeof window !== 'undefined' && window.process && window.process.type === 'renderer'\n}\n\nfunction isAlpine (platform) {\n  return platform === 'linux' && fs.existsSync('/etc/alpine-release')\n}\n\n// Exposed for unit tests\n// TODO: move to lib\nload.parseTags = parseTags\nload.matchTags = matchTags\nload.compareTags = compareTags\nload.parseTuple = parseTuple\nload.matchTuple = matchTuple\nload.compareTuples = compareTuples\n","/*\nobject-assign\n(c) Sindre Sorhus\n@license MIT\n*/\n\n'use strict';\n/* eslint-disable no-unused-vars */\nvar getOwnPropertySymbols = Object.getOwnPropertySymbols;\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nvar propIsEnumerable = Object.prototype.propertyIsEnumerable;\n\nfunction toObject(val) {\n\tif (val === null || val === undefined) {\n\t\tthrow new TypeError('Object.assign cannot be called with null or undefined');\n\t}\n\n\treturn Object(val);\n}\n\nfunction shouldUseNative() {\n\ttry {\n\t\tif (!Object.assign) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Detect buggy property enumeration order in older V8 versions.\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=4118\n\t\tvar test1 = new String('abc');  // eslint-disable-line no-new-wrappers\n\t\ttest1[5] = 'de';\n\t\tif (Object.getOwnPropertyNames(test1)[0] === '5') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test2 = {};\n\t\tfor (var i = 0; i < 10; i++) {\n\t\t\ttest2['_' + String.fromCharCode(i)] = i;\n\t\t}\n\t\tvar order2 = Object.getOwnPropertyNames(test2).map(function (n) {\n\t\t\treturn test2[n];\n\t\t});\n\t\tif (order2.join('') !== '0123456789') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test3 = {};\n\t\t'abcdefghijklmnopqrst'.split('').forEach(function (letter) {\n\t\t\ttest3[letter] = letter;\n\t\t});\n\t\tif (Object.keys(Object.assign({}, test3)).join('') !==\n\t\t\t\t'abcdefghijklmnopqrst') {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t} catch (err) {\n\t\t// We don't expect any of the above to throw, but better to be safe.\n\t\treturn false;\n\t}\n}\n\nmodule.exports = shouldUseNative() ? Object.assign : function (target, source) {\n\tvar from;\n\tvar to = toObject(target);\n\tvar symbols;\n\n\tfor (var s = 1; s < arguments.length; s++) {\n\t\tfrom = Object(arguments[s]);\n\n\t\tfor (var key in from) {\n\t\t\tif (hasOwnProperty.call(from, key)) {\n\t\t\t\tto[key] = from[key];\n\t\t\t}\n\t\t}\n\n\t\tif (getOwnPropertySymbols) {\n\t\t\tsymbols = getOwnPropertySymbols(from);\n\t\t\tfor (var i = 0; i < symbols.length; i++) {\n\t\t\t\tif (propIsEnumerable.call(from, symbols[i])) {\n\t\t\t\t\tto[symbols[i]] = from[symbols[i]];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn to;\n};\n","var hasMap = typeof Map === 'function' && Map.prototype;\nvar mapSizeDescriptor = Object.getOwnPropertyDescriptor && hasMap ? Object.getOwnPropertyDescriptor(Map.prototype, 'size') : null;\nvar mapSize = hasMap && mapSizeDescriptor && typeof mapSizeDescriptor.get === 'function' ? mapSizeDescriptor.get : null;\nvar mapForEach = hasMap && Map.prototype.forEach;\nvar hasSet = typeof Set === 'function' && Set.prototype;\nvar setSizeDescriptor = Object.getOwnPropertyDescriptor && hasSet ? Object.getOwnPropertyDescriptor(Set.prototype, 'size') : null;\nvar setSize = hasSet && setSizeDescriptor && typeof setSizeDescriptor.get === 'function' ? setSizeDescriptor.get : null;\nvar setForEach = hasSet && Set.prototype.forEach;\nvar hasWeakMap = typeof WeakMap === 'function' && WeakMap.prototype;\nvar weakMapHas = hasWeakMap ? WeakMap.prototype.has : null;\nvar hasWeakSet = typeof WeakSet === 'function' && WeakSet.prototype;\nvar weakSetHas = hasWeakSet ? WeakSet.prototype.has : null;\nvar hasWeakRef = typeof WeakRef === 'function' && WeakRef.prototype;\nvar weakRefDeref = hasWeakRef ? WeakRef.prototype.deref : null;\nvar booleanValueOf = Boolean.prototype.valueOf;\nvar objectToString = Object.prototype.toString;\nvar functionToString = Function.prototype.toString;\nvar $match = String.prototype.match;\nvar $slice = String.prototype.slice;\nvar $replace = String.prototype.replace;\nvar $toUpperCase = String.prototype.toUpperCase;\nvar $toLowerCase = String.prototype.toLowerCase;\nvar $test = RegExp.prototype.test;\nvar $concat = Array.prototype.concat;\nvar $join = Array.prototype.join;\nvar $arrSlice = Array.prototype.slice;\nvar $floor = Math.floor;\nvar bigIntValueOf = typeof BigInt === 'function' ? BigInt.prototype.valueOf : null;\nvar gOPS = Object.getOwnPropertySymbols;\nvar symToString = typeof Symbol === 'function' && typeof Symbol.iterator === 'symbol' ? Symbol.prototype.toString : null;\nvar hasShammedSymbols = typeof Symbol === 'function' && typeof Symbol.iterator === 'object';\n// ie, `has-tostringtag/shams\nvar toStringTag = typeof Symbol === 'function' && Symbol.toStringTag && (typeof Symbol.toStringTag === hasShammedSymbols ? 'object' : 'symbol')\n    ? Symbol.toStringTag\n    : null;\nvar isEnumerable = Object.prototype.propertyIsEnumerable;\n\nvar gPO = (typeof Reflect === 'function' ? Reflect.getPrototypeOf : Object.getPrototypeOf) || (\n    [].__proto__ === Array.prototype // eslint-disable-line no-proto\n        ? function (O) {\n            return O.__proto__; // eslint-disable-line no-proto\n        }\n        : null\n);\n\nfunction addNumericSeparator(num, str) {\n    if (\n        num === Infinity\n        || num === -Infinity\n        || num !== num\n        || (num && num > -1000 && num < 1000)\n        || $test.call(/e/, str)\n    ) {\n        return str;\n    }\n    var sepRegex = /[0-9](?=(?:[0-9]{3})+(?![0-9]))/g;\n    if (typeof num === 'number') {\n        var int = num < 0 ? -$floor(-num) : $floor(num); // trunc(num)\n        if (int !== num) {\n            var intStr = String(int);\n            var dec = $slice.call(str, intStr.length + 1);\n            return $replace.call(intStr, sepRegex, '$&_') + '.' + $replace.call($replace.call(dec, /([0-9]{3})/g, '$&_'), /_$/, '');\n        }\n    }\n    return $replace.call(str, sepRegex, '$&_');\n}\n\nvar utilInspect = require('./util.inspect');\nvar inspectCustom = utilInspect.custom;\nvar inspectSymbol = isSymbol(inspectCustom) ? inspectCustom : null;\n\nmodule.exports = function inspect_(obj, options, depth, seen) {\n    var opts = options || {};\n\n    if (has(opts, 'quoteStyle') && (opts.quoteStyle !== 'single' && opts.quoteStyle !== 'double')) {\n        throw new TypeError('option \"quoteStyle\" must be \"single\" or \"double\"');\n    }\n    if (\n        has(opts, 'maxStringLength') && (typeof opts.maxStringLength === 'number'\n            ? opts.maxStringLength < 0 && opts.maxStringLength !== Infinity\n            : opts.maxStringLength !== null\n        )\n    ) {\n        throw new TypeError('option \"maxStringLength\", if provided, must be a positive integer, Infinity, or `null`');\n    }\n    var customInspect = has(opts, 'customInspect') ? opts.customInspect : true;\n    if (typeof customInspect !== 'boolean' && customInspect !== 'symbol') {\n        throw new TypeError('option \"customInspect\", if provided, must be `true`, `false`, or `\\'symbol\\'`');\n    }\n\n    if (\n        has(opts, 'indent')\n        && opts.indent !== null\n        && opts.indent !== '\\t'\n        && !(parseInt(opts.indent, 10) === opts.indent && opts.indent > 0)\n    ) {\n        throw new TypeError('option \"indent\" must be \"\\\\t\", an integer > 0, or `null`');\n    }\n    if (has(opts, 'numericSeparator') && typeof opts.numericSeparator !== 'boolean') {\n        throw new TypeError('option \"numericSeparator\", if provided, must be `true` or `false`');\n    }\n    var numericSeparator = opts.numericSeparator;\n\n    if (typeof obj === 'undefined') {\n        return 'undefined';\n    }\n    if (obj === null) {\n        return 'null';\n    }\n    if (typeof obj === 'boolean') {\n        return obj ? 'true' : 'false';\n    }\n\n    if (typeof obj === 'string') {\n        return inspectString(obj, opts);\n    }\n    if (typeof obj === 'number') {\n        if (obj === 0) {\n            return Infinity / obj > 0 ? '0' : '-0';\n        }\n        var str = String(obj);\n        return numericSeparator ? addNumericSeparator(obj, str) : str;\n    }\n    if (typeof obj === 'bigint') {\n        var bigIntStr = String(obj) + 'n';\n        return numericSeparator ? addNumericSeparator(obj, bigIntStr) : bigIntStr;\n    }\n\n    var maxDepth = typeof opts.depth === 'undefined' ? 5 : opts.depth;\n    if (typeof depth === 'undefined') { depth = 0; }\n    if (depth >= maxDepth && maxDepth > 0 && typeof obj === 'object') {\n        return isArray(obj) ? '[Array]' : '[Object]';\n    }\n\n    var indent = getIndent(opts, depth);\n\n    if (typeof seen === 'undefined') {\n        seen = [];\n    } else if (indexOf(seen, obj) >= 0) {\n        return '[Circular]';\n    }\n\n    function inspect(value, from, noIndent) {\n        if (from) {\n            seen = $arrSlice.call(seen);\n            seen.push(from);\n        }\n        if (noIndent) {\n            var newOpts = {\n                depth: opts.depth\n            };\n            if (has(opts, 'quoteStyle')) {\n                newOpts.quoteStyle = opts.quoteStyle;\n            }\n            return inspect_(value, newOpts, depth + 1, seen);\n        }\n        return inspect_(value, opts, depth + 1, seen);\n    }\n\n    if (typeof obj === 'function' && !isRegExp(obj)) { // in older engines, regexes are callable\n        var name = nameOf(obj);\n        var keys = arrObjKeys(obj, inspect);\n        return '[Function' + (name ? ': ' + name : ' (anonymous)') + ']' + (keys.length > 0 ? ' { ' + $join.call(keys, ', ') + ' }' : '');\n    }\n    if (isSymbol(obj)) {\n        var symString = hasShammedSymbols ? $replace.call(String(obj), /^(Symbol\\(.*\\))_[^)]*$/, '$1') : symToString.call(obj);\n        return typeof obj === 'object' && !hasShammedSymbols ? markBoxed(symString) : symString;\n    }\n    if (isElement(obj)) {\n        var s = '<' + $toLowerCase.call(String(obj.nodeName));\n        var attrs = obj.attributes || [];\n        for (var i = 0; i < attrs.length; i++) {\n            s += ' ' + attrs[i].name + '=' + wrapQuotes(quote(attrs[i].value), 'double', opts);\n        }\n        s += '>';\n        if (obj.childNodes && obj.childNodes.length) { s += '...'; }\n        s += '</' + $toLowerCase.call(String(obj.nodeName)) + '>';\n        return s;\n    }\n    if (isArray(obj)) {\n        if (obj.length === 0) { return '[]'; }\n        var xs = arrObjKeys(obj, inspect);\n        if (indent && !singleLineValues(xs)) {\n            return '[' + indentedJoin(xs, indent) + ']';\n        }\n        return '[ ' + $join.call(xs, ', ') + ' ]';\n    }\n    if (isError(obj)) {\n        var parts = arrObjKeys(obj, inspect);\n        if (!('cause' in Error.prototype) && 'cause' in obj && !isEnumerable.call(obj, 'cause')) {\n            return '{ [' + String(obj) + '] ' + $join.call($concat.call('[cause]: ' + inspect(obj.cause), parts), ', ') + ' }';\n        }\n        if (parts.length === 0) { return '[' + String(obj) + ']'; }\n        return '{ [' + String(obj) + '] ' + $join.call(parts, ', ') + ' }';\n    }\n    if (typeof obj === 'object' && customInspect) {\n        if (inspectSymbol && typeof obj[inspectSymbol] === 'function' && utilInspect) {\n            return utilInspect(obj, { depth: maxDepth - depth });\n        } else if (customInspect !== 'symbol' && typeof obj.inspect === 'function') {\n            return obj.inspect();\n        }\n    }\n    if (isMap(obj)) {\n        var mapParts = [];\n        mapForEach.call(obj, function (value, key) {\n            mapParts.push(inspect(key, obj, true) + ' => ' + inspect(value, obj));\n        });\n        return collectionOf('Map', mapSize.call(obj), mapParts, indent);\n    }\n    if (isSet(obj)) {\n        var setParts = [];\n        setForEach.call(obj, function (value) {\n            setParts.push(inspect(value, obj));\n        });\n        return collectionOf('Set', setSize.call(obj), setParts, indent);\n    }\n    if (isWeakMap(obj)) {\n        return weakCollectionOf('WeakMap');\n    }\n    if (isWeakSet(obj)) {\n        return weakCollectionOf('WeakSet');\n    }\n    if (isWeakRef(obj)) {\n        return weakCollectionOf('WeakRef');\n    }\n    if (isNumber(obj)) {\n        return markBoxed(inspect(Number(obj)));\n    }\n    if (isBigInt(obj)) {\n        return markBoxed(inspect(bigIntValueOf.call(obj)));\n    }\n    if (isBoolean(obj)) {\n        return markBoxed(booleanValueOf.call(obj));\n    }\n    if (isString(obj)) {\n        return markBoxed(inspect(String(obj)));\n    }\n    if (!isDate(obj) && !isRegExp(obj)) {\n        var ys = arrObjKeys(obj, inspect);\n        var isPlainObject = gPO ? gPO(obj) === Object.prototype : obj instanceof Object || obj.constructor === Object;\n        var protoTag = obj instanceof Object ? '' : 'null prototype';\n        var stringTag = !isPlainObject && toStringTag && Object(obj) === obj && toStringTag in obj ? $slice.call(toStr(obj), 8, -1) : protoTag ? 'Object' : '';\n        var constructorTag = isPlainObject || typeof obj.constructor !== 'function' ? '' : obj.constructor.name ? obj.constructor.name + ' ' : '';\n        var tag = constructorTag + (stringTag || protoTag ? '[' + $join.call($concat.call([], stringTag || [], protoTag || []), ': ') + '] ' : '');\n        if (ys.length === 0) { return tag + '{}'; }\n        if (indent) {\n            return tag + '{' + indentedJoin(ys, indent) + '}';\n        }\n        return tag + '{ ' + $join.call(ys, ', ') + ' }';\n    }\n    return String(obj);\n};\n\nfunction wrapQuotes(s, defaultStyle, opts) {\n    var quoteChar = (opts.quoteStyle || defaultStyle) === 'double' ? '\"' : \"'\";\n    return quoteChar + s + quoteChar;\n}\n\nfunction quote(s) {\n    return $replace.call(String(s), /\"/g, '&quot;');\n}\n\nfunction isArray(obj) { return toStr(obj) === '[object Array]' && (!toStringTag || !(typeof obj === 'object' && toStringTag in obj)); }\nfunction isDate(obj) { return toStr(obj) === '[object Date]' && (!toStringTag || !(typeof obj === 'object' && toStringTag in obj)); }\nfunction isRegExp(obj) { return toStr(obj) === '[object RegExp]' && (!toStringTag || !(typeof obj === 'object' && toStringTag in obj)); }\nfunction isError(obj) { return toStr(obj) === '[object Error]' && (!toStringTag || !(typeof obj === 'object' && toStringTag in obj)); }\nfunction isString(obj) { return toStr(obj) === '[object String]' && (!toStringTag || !(typeof obj === 'object' && toStringTag in obj)); }\nfunction isNumber(obj) { return toStr(obj) === '[object Number]' && (!toStringTag || !(typeof obj === 'object' && toStringTag in obj)); }\nfunction isBoolean(obj) { return toStr(obj) === '[object Boolean]' && (!toStringTag || !(typeof obj === 'object' && toStringTag in obj)); }\n\n// Symbol and BigInt do have Symbol.toStringTag by spec, so that can't be used to eliminate false positives\nfunction isSymbol(obj) {\n    if (hasShammedSymbols) {\n        return obj && typeof obj === 'object' && obj instanceof Symbol;\n    }\n    if (typeof obj === 'symbol') {\n        return true;\n    }\n    if (!obj || typeof obj !== 'object' || !symToString) {\n        return false;\n    }\n    try {\n        symToString.call(obj);\n        return true;\n    } catch (e) {}\n    return false;\n}\n\nfunction isBigInt(obj) {\n    if (!obj || typeof obj !== 'object' || !bigIntValueOf) {\n        return false;\n    }\n    try {\n        bigIntValueOf.call(obj);\n        return true;\n    } catch (e) {}\n    return false;\n}\n\nvar hasOwn = Object.prototype.hasOwnProperty || function (key) { return key in this; };\nfunction has(obj, key) {\n    return hasOwn.call(obj, key);\n}\n\nfunction toStr(obj) {\n    return objectToString.call(obj);\n}\n\nfunction nameOf(f) {\n    if (f.name) { return f.name; }\n    var m = $match.call(functionToString.call(f), /^function\\s*([\\w$]+)/);\n    if (m) { return m[1]; }\n    return null;\n}\n\nfunction indexOf(xs, x) {\n    if (xs.indexOf) { return xs.indexOf(x); }\n    for (var i = 0, l = xs.length; i < l; i++) {\n        if (xs[i] === x) { return i; }\n    }\n    return -1;\n}\n\nfunction isMap(x) {\n    if (!mapSize || !x || typeof x !== 'object') {\n        return false;\n    }\n    try {\n        mapSize.call(x);\n        try {\n            setSize.call(x);\n        } catch (s) {\n            return true;\n        }\n        return x instanceof Map; // core-js workaround, pre-v2.5.0\n    } catch (e) {}\n    return false;\n}\n\nfunction isWeakMap(x) {\n    if (!weakMapHas || !x || typeof x !== 'object') {\n        return false;\n    }\n    try {\n        weakMapHas.call(x, weakMapHas);\n        try {\n            weakSetHas.call(x, weakSetHas);\n        } catch (s) {\n            return true;\n        }\n        return x instanceof WeakMap; // core-js workaround, pre-v2.5.0\n    } catch (e) {}\n    return false;\n}\n\nfunction isWeakRef(x) {\n    if (!weakRefDeref || !x || typeof x !== 'object') {\n        return false;\n    }\n    try {\n        weakRefDeref.call(x);\n        return true;\n    } catch (e) {}\n    return false;\n}\n\nfunction isSet(x) {\n    if (!setSize || !x || typeof x !== 'object') {\n        return false;\n    }\n    try {\n        setSize.call(x);\n        try {\n            mapSize.call(x);\n        } catch (m) {\n            return true;\n        }\n        return x instanceof Set; // core-js workaround, pre-v2.5.0\n    } catch (e) {}\n    return false;\n}\n\nfunction isWeakSet(x) {\n    if (!weakSetHas || !x || typeof x !== 'object') {\n        return false;\n    }\n    try {\n        weakSetHas.call(x, weakSetHas);\n        try {\n            weakMapHas.call(x, weakMapHas);\n        } catch (s) {\n            return true;\n        }\n        return x instanceof WeakSet; // core-js workaround, pre-v2.5.0\n    } catch (e) {}\n    return false;\n}\n\nfunction isElement(x) {\n    if (!x || typeof x !== 'object') { return false; }\n    if (typeof HTMLElement !== 'undefined' && x instanceof HTMLElement) {\n        return true;\n    }\n    return typeof x.nodeName === 'string' && typeof x.getAttribute === 'function';\n}\n\nfunction inspectString(str, opts) {\n    if (str.length > opts.maxStringLength) {\n        var remaining = str.length - opts.maxStringLength;\n        var trailer = '... ' + remaining + ' more character' + (remaining > 1 ? 's' : '');\n        return inspectString($slice.call(str, 0, opts.maxStringLength), opts) + trailer;\n    }\n    // eslint-disable-next-line no-control-regex\n    var s = $replace.call($replace.call(str, /(['\\\\])/g, '\\\\$1'), /[\\x00-\\x1f]/g, lowbyte);\n    return wrapQuotes(s, 'single', opts);\n}\n\nfunction lowbyte(c) {\n    var n = c.charCodeAt(0);\n    var x = {\n        8: 'b',\n        9: 't',\n        10: 'n',\n        12: 'f',\n        13: 'r'\n    }[n];\n    if (x) { return '\\\\' + x; }\n    return '\\\\x' + (n < 0x10 ? '0' : '') + $toUpperCase.call(n.toString(16));\n}\n\nfunction markBoxed(str) {\n    return 'Object(' + str + ')';\n}\n\nfunction weakCollectionOf(type) {\n    return type + ' { ? }';\n}\n\nfunction collectionOf(type, size, entries, indent) {\n    var joinedEntries = indent ? indentedJoin(entries, indent) : $join.call(entries, ', ');\n    return type + ' (' + size + ') {' + joinedEntries + '}';\n}\n\nfunction singleLineValues(xs) {\n    for (var i = 0; i < xs.length; i++) {\n        if (indexOf(xs[i], '\\n') >= 0) {\n            return false;\n        }\n    }\n    return true;\n}\n\nfunction getIndent(opts, depth) {\n    var baseIndent;\n    if (opts.indent === '\\t') {\n        baseIndent = '\\t';\n    } else if (typeof opts.indent === 'number' && opts.indent > 0) {\n        baseIndent = $join.call(Array(opts.indent + 1), ' ');\n    } else {\n        return null;\n    }\n    return {\n        base: baseIndent,\n        prev: $join.call(Array(depth + 1), baseIndent)\n    };\n}\n\nfunction indentedJoin(xs, indent) {\n    if (xs.length === 0) { return ''; }\n    var lineJoiner = '\\n' + indent.prev + indent.base;\n    return lineJoiner + $join.call(xs, ',' + lineJoiner) + '\\n' + indent.prev;\n}\n\nfunction arrObjKeys(obj, inspect) {\n    var isArr = isArray(obj);\n    var xs = [];\n    if (isArr) {\n        xs.length = obj.length;\n        for (var i = 0; i < obj.length; i++) {\n            xs[i] = has(obj, i) ? inspect(obj[i], obj) : '';\n        }\n    }\n    var syms = typeof gOPS === 'function' ? gOPS(obj) : [];\n    var symMap;\n    if (hasShammedSymbols) {\n        symMap = {};\n        for (var k = 0; k < syms.length; k++) {\n            symMap['$' + syms[k]] = syms[k];\n        }\n    }\n\n    for (var key in obj) { // eslint-disable-line no-restricted-syntax\n        if (!has(obj, key)) { continue; } // eslint-disable-line no-restricted-syntax, no-continue\n        if (isArr && String(Number(key)) === key && key < obj.length) { continue; } // eslint-disable-line no-restricted-syntax, no-continue\n        if (hasShammedSymbols && symMap['$' + key] instanceof Symbol) {\n            // this is to prevent shammed Symbols, which are stored as strings, from being included in the string key section\n            continue; // eslint-disable-line no-restricted-syntax, no-continue\n        } else if ($test.call(/[^\\w$]/, key)) {\n            xs.push(inspect(key, obj) + ': ' + inspect(obj[key], obj));\n        } else {\n            xs.push(key + ': ' + inspect(obj[key], obj));\n        }\n    }\n    if (typeof gOPS === 'function') {\n        for (var j = 0; j < syms.length; j++) {\n            if (isEnumerable.call(obj, syms[j])) {\n                xs.push('[' + inspect(syms[j]) + ']: ' + inspect(obj[syms[j]], obj));\n            }\n        }\n    }\n    return xs;\n}\n","module.exports = require('util').inspect;\n","/*!\n * on-finished\n * Copyright(c) 2013 Jonathan Ong\n * Copyright(c) 2014 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = onFinished\nmodule.exports.isFinished = isFinished\n\n/**\n * Module dependencies.\n * @private\n */\n\nvar asyncHooks = tryRequireAsyncHooks()\nvar first = require('ee-first')\n\n/**\n * Variables.\n * @private\n */\n\n/* istanbul ignore next */\nvar defer = typeof setImmediate === 'function'\n  ? setImmediate\n  : function (fn) { process.nextTick(fn.bind.apply(fn, arguments)) }\n\n/**\n * Invoke callback when the response has finished, useful for\n * cleaning up resources afterwards.\n *\n * @param {object} msg\n * @param {function} listener\n * @return {object}\n * @public\n */\n\nfunction onFinished (msg, listener) {\n  if (isFinished(msg) !== false) {\n    defer(listener, null, msg)\n    return msg\n  }\n\n  // attach the listener to the message\n  attachListener(msg, wrap(listener))\n\n  return msg\n}\n\n/**\n * Determine if message is already finished.\n *\n * @param {object} msg\n * @return {boolean}\n * @public\n */\n\nfunction isFinished (msg) {\n  var socket = msg.socket\n\n  if (typeof msg.finished === 'boolean') {\n    // OutgoingMessage\n    return Boolean(msg.finished || (socket && !socket.writable))\n  }\n\n  if (typeof msg.complete === 'boolean') {\n    // IncomingMessage\n    return Boolean(msg.upgrade || !socket || !socket.readable || (msg.complete && !msg.readable))\n  }\n\n  // don't know\n  return undefined\n}\n\n/**\n * Attach a finished listener to the message.\n *\n * @param {object} msg\n * @param {function} callback\n * @private\n */\n\nfunction attachFinishedListener (msg, callback) {\n  var eeMsg\n  var eeSocket\n  var finished = false\n\n  function onFinish (error) {\n    eeMsg.cancel()\n    eeSocket.cancel()\n\n    finished = true\n    callback(error)\n  }\n\n  // finished on first message event\n  eeMsg = eeSocket = first([[msg, 'end', 'finish']], onFinish)\n\n  function onSocket (socket) {\n    // remove listener\n    msg.removeListener('socket', onSocket)\n\n    if (finished) return\n    if (eeMsg !== eeSocket) return\n\n    // finished on first socket event\n    eeSocket = first([[socket, 'error', 'close']], onFinish)\n  }\n\n  if (msg.socket) {\n    // socket already assigned\n    onSocket(msg.socket)\n    return\n  }\n\n  // wait for socket to be assigned\n  msg.on('socket', onSocket)\n\n  if (msg.socket === undefined) {\n    // istanbul ignore next: node.js 0.8 patch\n    patchAssignSocket(msg, onSocket)\n  }\n}\n\n/**\n * Attach the listener to the message.\n *\n * @param {object} msg\n * @return {function}\n * @private\n */\n\nfunction attachListener (msg, listener) {\n  var attached = msg.__onFinished\n\n  // create a private single listener with queue\n  if (!attached || !attached.queue) {\n    attached = msg.__onFinished = createListener(msg)\n    attachFinishedListener(msg, attached)\n  }\n\n  attached.queue.push(listener)\n}\n\n/**\n * Create listener on message.\n *\n * @param {object} msg\n * @return {function}\n * @private\n */\n\nfunction createListener (msg) {\n  function listener (err) {\n    if (msg.__onFinished === listener) msg.__onFinished = null\n    if (!listener.queue) return\n\n    var queue = listener.queue\n    listener.queue = null\n\n    for (var i = 0; i < queue.length; i++) {\n      queue[i](err, msg)\n    }\n  }\n\n  listener.queue = []\n\n  return listener\n}\n\n/**\n * Patch ServerResponse.prototype.assignSocket for node.js 0.8.\n *\n * @param {ServerResponse} res\n * @param {function} callback\n * @private\n */\n\n// istanbul ignore next: node.js 0.8 patch\nfunction patchAssignSocket (res, callback) {\n  var assignSocket = res.assignSocket\n\n  if (typeof assignSocket !== 'function') return\n\n  // res.on('socket', callback) is broken in 0.8\n  res.assignSocket = function _assignSocket (socket) {\n    assignSocket.call(this, socket)\n    callback(socket)\n  }\n}\n\n/**\n * Try to require async_hooks\n * @private\n */\n\nfunction tryRequireAsyncHooks () {\n  try {\n    return require('async_hooks')\n  } catch (e) {\n    return {}\n  }\n}\n\n/**\n * Wrap function with async resource, if possible.\n * AsyncResource.bind static method backported.\n * @private\n */\n\nfunction wrap (fn) {\n  var res\n\n  // create anonymous resource\n  if (asyncHooks.AsyncResource) {\n    res = new asyncHooks.AsyncResource(fn.name || 'bound-anonymous-fn')\n  }\n\n  // incompatible node.js\n  if (!res || !res.runInAsyncScope) {\n    return fn\n  }\n\n  // return bound function\n  return res.runInAsyncScope.bind(res, fn, null)\n}\n","/*!\n * parseurl\n * Copyright(c) 2014 Jonathan Ong\n * Copyright(c) 2014-2017 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * Module dependencies.\n * @private\n */\n\nvar url = require('url')\nvar parse = url.parse\nvar Url = url.Url\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = parseurl\nmodule.exports.original = originalurl\n\n/**\n * Parse the `req` url with memoization.\n *\n * @param {ServerRequest} req\n * @return {Object}\n * @public\n */\n\nfunction parseurl (req) {\n  var url = req.url\n\n  if (url === undefined) {\n    // URL is undefined\n    return undefined\n  }\n\n  var parsed = req._parsedUrl\n\n  if (fresh(url, parsed)) {\n    // Return cached URL parse\n    return parsed\n  }\n\n  // Parse the URL\n  parsed = fastparse(url)\n  parsed._raw = url\n\n  return (req._parsedUrl = parsed)\n};\n\n/**\n * Parse the `req` original url with fallback and memoization.\n *\n * @param {ServerRequest} req\n * @return {Object}\n * @public\n */\n\nfunction originalurl (req) {\n  var url = req.originalUrl\n\n  if (typeof url !== 'string') {\n    // Fallback\n    return parseurl(req)\n  }\n\n  var parsed = req._parsedOriginalUrl\n\n  if (fresh(url, parsed)) {\n    // Return cached URL parse\n    return parsed\n  }\n\n  // Parse the URL\n  parsed = fastparse(url)\n  parsed._raw = url\n\n  return (req._parsedOriginalUrl = parsed)\n};\n\n/**\n * Parse the `str` url with fast-path short-cut.\n *\n * @param {string} str\n * @return {Object}\n * @private\n */\n\nfunction fastparse (str) {\n  if (typeof str !== 'string' || str.charCodeAt(0) !== 0x2f /* / */) {\n    return parse(str)\n  }\n\n  var pathname = str\n  var query = null\n  var search = null\n\n  // This takes the regexp from https://github.com/joyent/node/pull/7878\n  // Which is /^(\\/[^?#\\s]*)(\\?[^#\\s]*)?$/\n  // And unrolls it into a for loop\n  for (var i = 1; i < str.length; i++) {\n    switch (str.charCodeAt(i)) {\n      case 0x3f: /* ?  */\n        if (search === null) {\n          pathname = str.substring(0, i)\n          query = str.substring(i + 1)\n          search = str.substring(i)\n        }\n        break\n      case 0x09: /* \\t */\n      case 0x0a: /* \\n */\n      case 0x0c: /* \\f */\n      case 0x0d: /* \\r */\n      case 0x20: /*    */\n      case 0x23: /* #  */\n      case 0xa0:\n      case 0xfeff:\n        return parse(str)\n    }\n  }\n\n  var url = Url !== undefined\n    ? new Url()\n    : {}\n\n  url.path = str\n  url.href = str\n  url.pathname = pathname\n\n  if (search !== null) {\n    url.query = query\n    url.search = search\n  }\n\n  return url\n}\n\n/**\n * Determine if parsed is still fresh for url.\n *\n * @param {string} url\n * @param {object} parsedUrl\n * @return {boolean}\n * @private\n */\n\nfunction fresh (url, parsedUrl) {\n  return typeof parsedUrl === 'object' &&\n    parsedUrl !== null &&\n    (Url === undefined || parsedUrl instanceof Url) &&\n    parsedUrl._raw === url\n}\n","/**\n * Expose `pathtoRegexp`.\n */\n\nmodule.exports = pathtoRegexp;\n\n/**\n * Match matching groups in a regular expression.\n */\nvar MATCHING_GROUP_REGEXP = /\\((?!\\?)/g;\n\n/**\n * Normalize the given path string,\n * returning a regular expression.\n *\n * An empty array should be passed,\n * which will contain the placeholder\n * key names. For example \"/user/:id\" will\n * then contain [\"id\"].\n *\n * @param  {String|RegExp|Array} path\n * @param  {Array} keys\n * @param  {Object} options\n * @return {RegExp}\n * @api private\n */\n\nfunction pathtoRegexp(path, keys, options) {\n  options = options || {};\n  keys = keys || [];\n  var strict = options.strict;\n  var end = options.end !== false;\n  var flags = options.sensitive ? '' : 'i';\n  var extraOffset = 0;\n  var keysOffset = keys.length;\n  var i = 0;\n  var name = 0;\n  var m;\n\n  if (path instanceof RegExp) {\n    while (m = MATCHING_GROUP_REGEXP.exec(path.source)) {\n      keys.push({\n        name: name++,\n        optional: false,\n        offset: m.index\n      });\n    }\n\n    return path;\n  }\n\n  if (Array.isArray(path)) {\n    // Map array parts into regexps and return their source. We also pass\n    // the same keys and options instance into every generation to get\n    // consistent matching groups before we join the sources together.\n    path = path.map(function (value) {\n      return pathtoRegexp(value, keys, options).source;\n    });\n\n    return new RegExp('(?:' + path.join('|') + ')', flags);\n  }\n\n  path = ('^' + path + (strict ? '' : path[path.length - 1] === '/' ? '?' : '/?'))\n    .replace(/\\/\\(/g, '/(?:')\n    .replace(/([\\/\\.])/g, '\\\\$1')\n    .replace(/(\\\\\\/)?(\\\\\\.)?:(\\w+)(\\(.*?\\))?(\\*)?(\\?)?/g, function (match, slash, format, key, capture, star, optional, offset) {\n      slash = slash || '';\n      format = format || '';\n      capture = capture || '([^\\\\/' + format + ']+?)';\n      optional = optional || '';\n\n      keys.push({\n        name: key,\n        optional: !!optional,\n        offset: offset + extraOffset\n      });\n\n      var result = ''\n        + (optional ? '' : slash)\n        + '(?:'\n        + format + (optional ? slash : '') + capture\n        + (star ? '((?:[\\\\/' + format + '].+?)?)' : '')\n        + ')'\n        + optional;\n\n      extraOffset += result.length - match.length;\n\n      return result;\n    })\n    .replace(/\\*/g, function (star, index) {\n      var len = keys.length\n\n      while (len-- > keysOffset && keys[len].offset > index) {\n        keys[len].offset += 3; // Replacement length minus asterisk length.\n      }\n\n      return '(.*)';\n    });\n\n  // This is a workaround for handling unnamed matching groups.\n  while (m = MATCHING_GROUP_REGEXP.exec(path)) {\n    var escapeCount = 0;\n    var index = m.index;\n\n    while (path.charAt(--index) === '\\\\') {\n      escapeCount++;\n    }\n\n    // It's possible to escape the bracket.\n    if (escapeCount % 2 === 1) {\n      continue;\n    }\n\n    if (keysOffset + i === keys.length || keys[keysOffset + i].offset > m.index) {\n      keys.splice(keysOffset + i, 0, {\n        name: name++, // Unnamed matching groups must be consistently linear.\n        optional: false,\n        offset: m.index\n      });\n    }\n\n    i++;\n  }\n\n  // If the path is non-ending, match until the end or a slash.\n  path += (end ? '$' : (path[path.length - 1] === '/' ? '' : '(?=\\\\/|$)'));\n\n  return new RegExp(path, flags);\n};\n","/*!\n * proxy-addr\n * Copyright(c) 2014-2016 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = proxyaddr\nmodule.exports.all = alladdrs\nmodule.exports.compile = compile\n\n/**\n * Module dependencies.\n * @private\n */\n\nvar forwarded = require('forwarded')\nvar ipaddr = require('ipaddr.js')\n\n/**\n * Variables.\n * @private\n */\n\nvar DIGIT_REGEXP = /^[0-9]+$/\nvar isip = ipaddr.isValid\nvar parseip = ipaddr.parse\n\n/**\n * Pre-defined IP ranges.\n * @private\n */\n\nvar IP_RANGES = {\n  linklocal: ['169.254.0.0/16', 'fe80::/10'],\n  loopback: ['127.0.0.1/8', '::1/128'],\n  uniquelocal: ['10.0.0.0/8', '172.16.0.0/12', '192.168.0.0/16', 'fc00::/7']\n}\n\n/**\n * Get all addresses in the request, optionally stopping\n * at the first untrusted.\n *\n * @param {Object} request\n * @param {Function|Array|String} [trust]\n * @public\n */\n\nfunction alladdrs (req, trust) {\n  // get addresses\n  var addrs = forwarded(req)\n\n  if (!trust) {\n    // Return all addresses\n    return addrs\n  }\n\n  if (typeof trust !== 'function') {\n    trust = compile(trust)\n  }\n\n  for (var i = 0; i < addrs.length - 1; i++) {\n    if (trust(addrs[i], i)) continue\n\n    addrs.length = i + 1\n  }\n\n  return addrs\n}\n\n/**\n * Compile argument into trust function.\n *\n * @param {Array|String} val\n * @private\n */\n\nfunction compile (val) {\n  if (!val) {\n    throw new TypeError('argument is required')\n  }\n\n  var trust\n\n  if (typeof val === 'string') {\n    trust = [val]\n  } else if (Array.isArray(val)) {\n    trust = val.slice()\n  } else {\n    throw new TypeError('unsupported trust argument')\n  }\n\n  for (var i = 0; i < trust.length; i++) {\n    val = trust[i]\n\n    if (!Object.prototype.hasOwnProperty.call(IP_RANGES, val)) {\n      continue\n    }\n\n    // Splice in pre-defined range\n    val = IP_RANGES[val]\n    trust.splice.apply(trust, [i, 1].concat(val))\n    i += val.length - 1\n  }\n\n  return compileTrust(compileRangeSubnets(trust))\n}\n\n/**\n * Compile `arr` elements into range subnets.\n *\n * @param {Array} arr\n * @private\n */\n\nfunction compileRangeSubnets (arr) {\n  var rangeSubnets = new Array(arr.length)\n\n  for (var i = 0; i < arr.length; i++) {\n    rangeSubnets[i] = parseipNotation(arr[i])\n  }\n\n  return rangeSubnets\n}\n\n/**\n * Compile range subnet array into trust function.\n *\n * @param {Array} rangeSubnets\n * @private\n */\n\nfunction compileTrust (rangeSubnets) {\n  // Return optimized function based on length\n  var len = rangeSubnets.length\n  return len === 0\n    ? trustNone\n    : len === 1\n      ? trustSingle(rangeSubnets[0])\n      : trustMulti(rangeSubnets)\n}\n\n/**\n * Parse IP notation string into range subnet.\n *\n * @param {String} note\n * @private\n */\n\nfunction parseipNotation (note) {\n  var pos = note.lastIndexOf('/')\n  var str = pos !== -1\n    ? note.substring(0, pos)\n    : note\n\n  if (!isip(str)) {\n    throw new TypeError('invalid IP address: ' + str)\n  }\n\n  var ip = parseip(str)\n\n  if (pos === -1 && ip.kind() === 'ipv6' && ip.isIPv4MappedAddress()) {\n    // Store as IPv4\n    ip = ip.toIPv4Address()\n  }\n\n  var max = ip.kind() === 'ipv6'\n    ? 128\n    : 32\n\n  var range = pos !== -1\n    ? note.substring(pos + 1, note.length)\n    : null\n\n  if (range === null) {\n    range = max\n  } else if (DIGIT_REGEXP.test(range)) {\n    range = parseInt(range, 10)\n  } else if (ip.kind() === 'ipv4' && isip(range)) {\n    range = parseNetmask(range)\n  } else {\n    range = null\n  }\n\n  if (range <= 0 || range > max) {\n    throw new TypeError('invalid range on address: ' + note)\n  }\n\n  return [ip, range]\n}\n\n/**\n * Parse netmask string into CIDR range.\n *\n * @param {String} netmask\n * @private\n */\n\nfunction parseNetmask (netmask) {\n  var ip = parseip(netmask)\n  var kind = ip.kind()\n\n  return kind === 'ipv4'\n    ? ip.prefixLengthFromSubnetMask()\n    : null\n}\n\n/**\n * Determine address of proxied request.\n *\n * @param {Object} request\n * @param {Function|Array|String} trust\n * @public\n */\n\nfunction proxyaddr (req, trust) {\n  if (!req) {\n    throw new TypeError('req argument is required')\n  }\n\n  if (!trust) {\n    throw new TypeError('trust argument is required')\n  }\n\n  var addrs = alladdrs(req, trust)\n  var addr = addrs[addrs.length - 1]\n\n  return addr\n}\n\n/**\n * Static trust function to trust nothing.\n *\n * @private\n */\n\nfunction trustNone () {\n  return false\n}\n\n/**\n * Compile trust function for multiple subnets.\n *\n * @param {Array} subnets\n * @private\n */\n\nfunction trustMulti (subnets) {\n  return function trust (addr) {\n    if (!isip(addr)) return false\n\n    var ip = parseip(addr)\n    var ipconv\n    var kind = ip.kind()\n\n    for (var i = 0; i < subnets.length; i++) {\n      var subnet = subnets[i]\n      var subnetip = subnet[0]\n      var subnetkind = subnetip.kind()\n      var subnetrange = subnet[1]\n      var trusted = ip\n\n      if (kind !== subnetkind) {\n        if (subnetkind === 'ipv4' && !ip.isIPv4MappedAddress()) {\n          // Incompatible IP addresses\n          continue\n        }\n\n        if (!ipconv) {\n          // Convert IP to match subnet IP kind\n          ipconv = subnetkind === 'ipv4'\n            ? ip.toIPv4Address()\n            : ip.toIPv4MappedAddress()\n        }\n\n        trusted = ipconv\n      }\n\n      if (trusted.match(subnetip, subnetrange)) {\n        return true\n      }\n    }\n\n    return false\n  }\n}\n\n/**\n * Compile trust function for single subnet.\n *\n * @param {Object} subnet\n * @private\n */\n\nfunction trustSingle (subnet) {\n  var subnetip = subnet[0]\n  var subnetkind = subnetip.kind()\n  var subnetisipv4 = subnetkind === 'ipv4'\n  var subnetrange = subnet[1]\n\n  return function trust (addr) {\n    if (!isip(addr)) return false\n\n    var ip = parseip(addr)\n    var kind = ip.kind()\n\n    if (kind !== subnetkind) {\n      if (subnetisipv4 && !ip.isIPv4MappedAddress()) {\n        // Incompatible IP addresses\n        return false\n      }\n\n      // Convert IP to match subnet IP kind\n      ip = subnetisipv4\n        ? ip.toIPv4Address()\n        : ip.toIPv4MappedAddress()\n    }\n\n    return ip.match(subnetip, subnetrange)\n  }\n}\n","'use strict';\n\nvar replace = String.prototype.replace;\nvar percentTwenties = /%20/g;\n\nvar Format = {\n    RFC1738: 'RFC1738',\n    RFC3986: 'RFC3986'\n};\n\nmodule.exports = {\n    'default': Format.RFC3986,\n    formatters: {\n        RFC1738: function (value) {\n            return replace.call(value, percentTwenties, '+');\n        },\n        RFC3986: function (value) {\n            return String(value);\n        }\n    },\n    RFC1738: Format.RFC1738,\n    RFC3986: Format.RFC3986\n};\n","'use strict';\n\nvar stringify = require('./stringify');\nvar parse = require('./parse');\nvar formats = require('./formats');\n\nmodule.exports = {\n    formats: formats,\n    parse: parse,\n    stringify: stringify\n};\n","'use strict';\n\nvar utils = require('./utils');\n\nvar has = Object.prototype.hasOwnProperty;\nvar isArray = Array.isArray;\n\nvar defaults = {\n    allowDots: false,\n    allowPrototypes: false,\n    allowSparse: false,\n    arrayLimit: 20,\n    charset: 'utf-8',\n    charsetSentinel: false,\n    comma: false,\n    decoder: utils.decode,\n    delimiter: '&',\n    depth: 5,\n    ignoreQueryPrefix: false,\n    interpretNumericEntities: false,\n    parameterLimit: 1000,\n    parseArrays: true,\n    plainObjects: false,\n    strictNullHandling: false\n};\n\nvar interpretNumericEntities = function (str) {\n    return str.replace(/&#(\\d+);/g, function ($0, numberStr) {\n        return String.fromCharCode(parseInt(numberStr, 10));\n    });\n};\n\nvar parseArrayValue = function (val, options) {\n    if (val && typeof val === 'string' && options.comma && val.indexOf(',') > -1) {\n        return val.split(',');\n    }\n\n    return val;\n};\n\n// This is what browsers will submit when the ✓ character occurs in an\n// application/x-www-form-urlencoded body and the encoding of the page containing\n// the form is iso-8859-1, or when the submitted form has an accept-charset\n// attribute of iso-8859-1. Presumably also with other charsets that do not contain\n// the ✓ character, such as us-ascii.\nvar isoSentinel = 'utf8=%26%2310003%3B'; // encodeURIComponent('&#10003;')\n\n// These are the percent-encoded utf-8 octets representing a checkmark, indicating that the request actually is utf-8 encoded.\nvar charsetSentinel = 'utf8=%E2%9C%93'; // encodeURIComponent('✓')\n\nvar parseValues = function parseQueryStringValues(str, options) {\n    var obj = {};\n    var cleanStr = options.ignoreQueryPrefix ? str.replace(/^\\?/, '') : str;\n    var limit = options.parameterLimit === Infinity ? undefined : options.parameterLimit;\n    var parts = cleanStr.split(options.delimiter, limit);\n    var skipIndex = -1; // Keep track of where the utf8 sentinel was found\n    var i;\n\n    var charset = options.charset;\n    if (options.charsetSentinel) {\n        for (i = 0; i < parts.length; ++i) {\n            if (parts[i].indexOf('utf8=') === 0) {\n                if (parts[i] === charsetSentinel) {\n                    charset = 'utf-8';\n                } else if (parts[i] === isoSentinel) {\n                    charset = 'iso-8859-1';\n                }\n                skipIndex = i;\n                i = parts.length; // The eslint settings do not allow break;\n            }\n        }\n    }\n\n    for (i = 0; i < parts.length; ++i) {\n        if (i === skipIndex) {\n            continue;\n        }\n        var part = parts[i];\n\n        var bracketEqualsPos = part.indexOf(']=');\n        var pos = bracketEqualsPos === -1 ? part.indexOf('=') : bracketEqualsPos + 1;\n\n        var key, val;\n        if (pos === -1) {\n            key = options.decoder(part, defaults.decoder, charset, 'key');\n            val = options.strictNullHandling ? null : '';\n        } else {\n            key = options.decoder(part.slice(0, pos), defaults.decoder, charset, 'key');\n            val = utils.maybeMap(\n                parseArrayValue(part.slice(pos + 1), options),\n                function (encodedVal) {\n                    return options.decoder(encodedVal, defaults.decoder, charset, 'value');\n                }\n            );\n        }\n\n        if (val && options.interpretNumericEntities && charset === 'iso-8859-1') {\n            val = interpretNumericEntities(val);\n        }\n\n        if (part.indexOf('[]=') > -1) {\n            val = isArray(val) ? [val] : val;\n        }\n\n        if (has.call(obj, key)) {\n            obj[key] = utils.combine(obj[key], val);\n        } else {\n            obj[key] = val;\n        }\n    }\n\n    return obj;\n};\n\nvar parseObject = function (chain, val, options, valuesParsed) {\n    var leaf = valuesParsed ? val : parseArrayValue(val, options);\n\n    for (var i = chain.length - 1; i >= 0; --i) {\n        var obj;\n        var root = chain[i];\n\n        if (root === '[]' && options.parseArrays) {\n            obj = [].concat(leaf);\n        } else {\n            obj = options.plainObjects ? Object.create(null) : {};\n            var cleanRoot = root.charAt(0) === '[' && root.charAt(root.length - 1) === ']' ? root.slice(1, -1) : root;\n            var index = parseInt(cleanRoot, 10);\n            if (!options.parseArrays && cleanRoot === '') {\n                obj = { 0: leaf };\n            } else if (\n                !isNaN(index)\n                && root !== cleanRoot\n                && String(index) === cleanRoot\n                && index >= 0\n                && (options.parseArrays && index <= options.arrayLimit)\n            ) {\n                obj = [];\n                obj[index] = leaf;\n            } else if (cleanRoot !== '__proto__') {\n                obj[cleanRoot] = leaf;\n            }\n        }\n\n        leaf = obj;\n    }\n\n    return leaf;\n};\n\nvar parseKeys = function parseQueryStringKeys(givenKey, val, options, valuesParsed) {\n    if (!givenKey) {\n        return;\n    }\n\n    // Transform dot notation to bracket notation\n    var key = options.allowDots ? givenKey.replace(/\\.([^.[]+)/g, '[$1]') : givenKey;\n\n    // The regex chunks\n\n    var brackets = /(\\[[^[\\]]*])/;\n    var child = /(\\[[^[\\]]*])/g;\n\n    // Get the parent\n\n    var segment = options.depth > 0 && brackets.exec(key);\n    var parent = segment ? key.slice(0, segment.index) : key;\n\n    // Stash the parent if it exists\n\n    var keys = [];\n    if (parent) {\n        // If we aren't using plain objects, optionally prefix keys that would overwrite object prototype properties\n        if (!options.plainObjects && has.call(Object.prototype, parent)) {\n            if (!options.allowPrototypes) {\n                return;\n            }\n        }\n\n        keys.push(parent);\n    }\n\n    // Loop through children appending to the array until we hit depth\n\n    var i = 0;\n    while (options.depth > 0 && (segment = child.exec(key)) !== null && i < options.depth) {\n        i += 1;\n        if (!options.plainObjects && has.call(Object.prototype, segment[1].slice(1, -1))) {\n            if (!options.allowPrototypes) {\n                return;\n            }\n        }\n        keys.push(segment[1]);\n    }\n\n    // If there's a remainder, just add whatever is left\n\n    if (segment) {\n        keys.push('[' + key.slice(segment.index) + ']');\n    }\n\n    return parseObject(keys, val, options, valuesParsed);\n};\n\nvar normalizeParseOptions = function normalizeParseOptions(opts) {\n    if (!opts) {\n        return defaults;\n    }\n\n    if (opts.decoder !== null && opts.decoder !== undefined && typeof opts.decoder !== 'function') {\n        throw new TypeError('Decoder has to be a function.');\n    }\n\n    if (typeof opts.charset !== 'undefined' && opts.charset !== 'utf-8' && opts.charset !== 'iso-8859-1') {\n        throw new TypeError('The charset option must be either utf-8, iso-8859-1, or undefined');\n    }\n    var charset = typeof opts.charset === 'undefined' ? defaults.charset : opts.charset;\n\n    return {\n        allowDots: typeof opts.allowDots === 'undefined' ? defaults.allowDots : !!opts.allowDots,\n        allowPrototypes: typeof opts.allowPrototypes === 'boolean' ? opts.allowPrototypes : defaults.allowPrototypes,\n        allowSparse: typeof opts.allowSparse === 'boolean' ? opts.allowSparse : defaults.allowSparse,\n        arrayLimit: typeof opts.arrayLimit === 'number' ? opts.arrayLimit : defaults.arrayLimit,\n        charset: charset,\n        charsetSentinel: typeof opts.charsetSentinel === 'boolean' ? opts.charsetSentinel : defaults.charsetSentinel,\n        comma: typeof opts.comma === 'boolean' ? opts.comma : defaults.comma,\n        decoder: typeof opts.decoder === 'function' ? opts.decoder : defaults.decoder,\n        delimiter: typeof opts.delimiter === 'string' || utils.isRegExp(opts.delimiter) ? opts.delimiter : defaults.delimiter,\n        // eslint-disable-next-line no-implicit-coercion, no-extra-parens\n        depth: (typeof opts.depth === 'number' || opts.depth === false) ? +opts.depth : defaults.depth,\n        ignoreQueryPrefix: opts.ignoreQueryPrefix === true,\n        interpretNumericEntities: typeof opts.interpretNumericEntities === 'boolean' ? opts.interpretNumericEntities : defaults.interpretNumericEntities,\n        parameterLimit: typeof opts.parameterLimit === 'number' ? opts.parameterLimit : defaults.parameterLimit,\n        parseArrays: opts.parseArrays !== false,\n        plainObjects: typeof opts.plainObjects === 'boolean' ? opts.plainObjects : defaults.plainObjects,\n        strictNullHandling: typeof opts.strictNullHandling === 'boolean' ? opts.strictNullHandling : defaults.strictNullHandling\n    };\n};\n\nmodule.exports = function (str, opts) {\n    var options = normalizeParseOptions(opts);\n\n    if (str === '' || str === null || typeof str === 'undefined') {\n        return options.plainObjects ? Object.create(null) : {};\n    }\n\n    var tempObj = typeof str === 'string' ? parseValues(str, options) : str;\n    var obj = options.plainObjects ? Object.create(null) : {};\n\n    // Iterate over the keys and setup the new object\n\n    var keys = Object.keys(tempObj);\n    for (var i = 0; i < keys.length; ++i) {\n        var key = keys[i];\n        var newObj = parseKeys(key, tempObj[key], options, typeof str === 'string');\n        obj = utils.merge(obj, newObj, options);\n    }\n\n    if (options.allowSparse === true) {\n        return obj;\n    }\n\n    return utils.compact(obj);\n};\n","'use strict';\n\nvar getSideChannel = require('side-channel');\nvar utils = require('./utils');\nvar formats = require('./formats');\nvar has = Object.prototype.hasOwnProperty;\n\nvar arrayPrefixGenerators = {\n    brackets: function brackets(prefix) {\n        return prefix + '[]';\n    },\n    comma: 'comma',\n    indices: function indices(prefix, key) {\n        return prefix + '[' + key + ']';\n    },\n    repeat: function repeat(prefix) {\n        return prefix;\n    }\n};\n\nvar isArray = Array.isArray;\nvar split = String.prototype.split;\nvar push = Array.prototype.push;\nvar pushToArray = function (arr, valueOrArray) {\n    push.apply(arr, isArray(valueOrArray) ? valueOrArray : [valueOrArray]);\n};\n\nvar toISO = Date.prototype.toISOString;\n\nvar defaultFormat = formats['default'];\nvar defaults = {\n    addQueryPrefix: false,\n    allowDots: false,\n    charset: 'utf-8',\n    charsetSentinel: false,\n    delimiter: '&',\n    encode: true,\n    encoder: utils.encode,\n    encodeValuesOnly: false,\n    format: defaultFormat,\n    formatter: formats.formatters[defaultFormat],\n    // deprecated\n    indices: false,\n    serializeDate: function serializeDate(date) {\n        return toISO.call(date);\n    },\n    skipNulls: false,\n    strictNullHandling: false\n};\n\nvar isNonNullishPrimitive = function isNonNullishPrimitive(v) {\n    return typeof v === 'string'\n        || typeof v === 'number'\n        || typeof v === 'boolean'\n        || typeof v === 'symbol'\n        || typeof v === 'bigint';\n};\n\nvar sentinel = {};\n\nvar stringify = function stringify(\n    object,\n    prefix,\n    generateArrayPrefix,\n    strictNullHandling,\n    skipNulls,\n    encoder,\n    filter,\n    sort,\n    allowDots,\n    serializeDate,\n    format,\n    formatter,\n    encodeValuesOnly,\n    charset,\n    sideChannel\n) {\n    var obj = object;\n\n    var tmpSc = sideChannel;\n    var step = 0;\n    var findFlag = false;\n    while ((tmpSc = tmpSc.get(sentinel)) !== void undefined && !findFlag) {\n        // Where object last appeared in the ref tree\n        var pos = tmpSc.get(object);\n        step += 1;\n        if (typeof pos !== 'undefined') {\n            if (pos === step) {\n                throw new RangeError('Cyclic object value');\n            } else {\n                findFlag = true; // Break while\n            }\n        }\n        if (typeof tmpSc.get(sentinel) === 'undefined') {\n            step = 0;\n        }\n    }\n\n    if (typeof filter === 'function') {\n        obj = filter(prefix, obj);\n    } else if (obj instanceof Date) {\n        obj = serializeDate(obj);\n    } else if (generateArrayPrefix === 'comma' && isArray(obj)) {\n        obj = utils.maybeMap(obj, function (value) {\n            if (value instanceof Date) {\n                return serializeDate(value);\n            }\n            return value;\n        });\n    }\n\n    if (obj === null) {\n        if (strictNullHandling) {\n            return encoder && !encodeValuesOnly ? encoder(prefix, defaults.encoder, charset, 'key', format) : prefix;\n        }\n\n        obj = '';\n    }\n\n    if (isNonNullishPrimitive(obj) || utils.isBuffer(obj)) {\n        if (encoder) {\n            var keyValue = encodeValuesOnly ? prefix : encoder(prefix, defaults.encoder, charset, 'key', format);\n            if (generateArrayPrefix === 'comma' && encodeValuesOnly) {\n                var valuesArray = split.call(String(obj), ',');\n                var valuesJoined = '';\n                for (var i = 0; i < valuesArray.length; ++i) {\n                    valuesJoined += (i === 0 ? '' : ',') + formatter(encoder(valuesArray[i], defaults.encoder, charset, 'value', format));\n                }\n                return [formatter(keyValue) + '=' + valuesJoined];\n            }\n            return [formatter(keyValue) + '=' + formatter(encoder(obj, defaults.encoder, charset, 'value', format))];\n        }\n        return [formatter(prefix) + '=' + formatter(String(obj))];\n    }\n\n    var values = [];\n\n    if (typeof obj === 'undefined') {\n        return values;\n    }\n\n    var objKeys;\n    if (generateArrayPrefix === 'comma' && isArray(obj)) {\n        // we need to join elements in\n        objKeys = [{ value: obj.length > 0 ? obj.join(',') || null : void undefined }];\n    } else if (isArray(filter)) {\n        objKeys = filter;\n    } else {\n        var keys = Object.keys(obj);\n        objKeys = sort ? keys.sort(sort) : keys;\n    }\n\n    for (var j = 0; j < objKeys.length; ++j) {\n        var key = objKeys[j];\n        var value = typeof key === 'object' && typeof key.value !== 'undefined' ? key.value : obj[key];\n\n        if (skipNulls && value === null) {\n            continue;\n        }\n\n        var keyPrefix = isArray(obj)\n            ? typeof generateArrayPrefix === 'function' ? generateArrayPrefix(prefix, key) : prefix\n            : prefix + (allowDots ? '.' + key : '[' + key + ']');\n\n        sideChannel.set(object, step);\n        var valueSideChannel = getSideChannel();\n        valueSideChannel.set(sentinel, sideChannel);\n        pushToArray(values, stringify(\n            value,\n            keyPrefix,\n            generateArrayPrefix,\n            strictNullHandling,\n            skipNulls,\n            encoder,\n            filter,\n            sort,\n            allowDots,\n            serializeDate,\n            format,\n            formatter,\n            encodeValuesOnly,\n            charset,\n            valueSideChannel\n        ));\n    }\n\n    return values;\n};\n\nvar normalizeStringifyOptions = function normalizeStringifyOptions(opts) {\n    if (!opts) {\n        return defaults;\n    }\n\n    if (opts.encoder !== null && typeof opts.encoder !== 'undefined' && typeof opts.encoder !== 'function') {\n        throw new TypeError('Encoder has to be a function.');\n    }\n\n    var charset = opts.charset || defaults.charset;\n    if (typeof opts.charset !== 'undefined' && opts.charset !== 'utf-8' && opts.charset !== 'iso-8859-1') {\n        throw new TypeError('The charset option must be either utf-8, iso-8859-1, or undefined');\n    }\n\n    var format = formats['default'];\n    if (typeof opts.format !== 'undefined') {\n        if (!has.call(formats.formatters, opts.format)) {\n            throw new TypeError('Unknown format option provided.');\n        }\n        format = opts.format;\n    }\n    var formatter = formats.formatters[format];\n\n    var filter = defaults.filter;\n    if (typeof opts.filter === 'function' || isArray(opts.filter)) {\n        filter = opts.filter;\n    }\n\n    return {\n        addQueryPrefix: typeof opts.addQueryPrefix === 'boolean' ? opts.addQueryPrefix : defaults.addQueryPrefix,\n        allowDots: typeof opts.allowDots === 'undefined' ? defaults.allowDots : !!opts.allowDots,\n        charset: charset,\n        charsetSentinel: typeof opts.charsetSentinel === 'boolean' ? opts.charsetSentinel : defaults.charsetSentinel,\n        delimiter: typeof opts.delimiter === 'undefined' ? defaults.delimiter : opts.delimiter,\n        encode: typeof opts.encode === 'boolean' ? opts.encode : defaults.encode,\n        encoder: typeof opts.encoder === 'function' ? opts.encoder : defaults.encoder,\n        encodeValuesOnly: typeof opts.encodeValuesOnly === 'boolean' ? opts.encodeValuesOnly : defaults.encodeValuesOnly,\n        filter: filter,\n        format: format,\n        formatter: formatter,\n        serializeDate: typeof opts.serializeDate === 'function' ? opts.serializeDate : defaults.serializeDate,\n        skipNulls: typeof opts.skipNulls === 'boolean' ? opts.skipNulls : defaults.skipNulls,\n        sort: typeof opts.sort === 'function' ? opts.sort : null,\n        strictNullHandling: typeof opts.strictNullHandling === 'boolean' ? opts.strictNullHandling : defaults.strictNullHandling\n    };\n};\n\nmodule.exports = function (object, opts) {\n    var obj = object;\n    var options = normalizeStringifyOptions(opts);\n\n    var objKeys;\n    var filter;\n\n    if (typeof options.filter === 'function') {\n        filter = options.filter;\n        obj = filter('', obj);\n    } else if (isArray(options.filter)) {\n        filter = options.filter;\n        objKeys = filter;\n    }\n\n    var keys = [];\n\n    if (typeof obj !== 'object' || obj === null) {\n        return '';\n    }\n\n    var arrayFormat;\n    if (opts && opts.arrayFormat in arrayPrefixGenerators) {\n        arrayFormat = opts.arrayFormat;\n    } else if (opts && 'indices' in opts) {\n        arrayFormat = opts.indices ? 'indices' : 'repeat';\n    } else {\n        arrayFormat = 'indices';\n    }\n\n    var generateArrayPrefix = arrayPrefixGenerators[arrayFormat];\n\n    if (!objKeys) {\n        objKeys = Object.keys(obj);\n    }\n\n    if (options.sort) {\n        objKeys.sort(options.sort);\n    }\n\n    var sideChannel = getSideChannel();\n    for (var i = 0; i < objKeys.length; ++i) {\n        var key = objKeys[i];\n\n        if (options.skipNulls && obj[key] === null) {\n            continue;\n        }\n        pushToArray(keys, stringify(\n            obj[key],\n            key,\n            generateArrayPrefix,\n            options.strictNullHandling,\n            options.skipNulls,\n            options.encode ? options.encoder : null,\n            options.filter,\n            options.sort,\n            options.allowDots,\n            options.serializeDate,\n            options.format,\n            options.formatter,\n            options.encodeValuesOnly,\n            options.charset,\n            sideChannel\n        ));\n    }\n\n    var joined = keys.join(options.delimiter);\n    var prefix = options.addQueryPrefix === true ? '?' : '';\n\n    if (options.charsetSentinel) {\n        if (options.charset === 'iso-8859-1') {\n            // encodeURIComponent('&#10003;'), the \"numeric entity\" representation of a checkmark\n            prefix += 'utf8=%26%2310003%3B&';\n        } else {\n            // encodeURIComponent('✓')\n            prefix += 'utf8=%E2%9C%93&';\n        }\n    }\n\n    return joined.length > 0 ? prefix + joined : '';\n};\n","'use strict';\n\nvar formats = require('./formats');\n\nvar has = Object.prototype.hasOwnProperty;\nvar isArray = Array.isArray;\n\nvar hexTable = (function () {\n    var array = [];\n    for (var i = 0; i < 256; ++i) {\n        array.push('%' + ((i < 16 ? '0' : '') + i.toString(16)).toUpperCase());\n    }\n\n    return array;\n}());\n\nvar compactQueue = function compactQueue(queue) {\n    while (queue.length > 1) {\n        var item = queue.pop();\n        var obj = item.obj[item.prop];\n\n        if (isArray(obj)) {\n            var compacted = [];\n\n            for (var j = 0; j < obj.length; ++j) {\n                if (typeof obj[j] !== 'undefined') {\n                    compacted.push(obj[j]);\n                }\n            }\n\n            item.obj[item.prop] = compacted;\n        }\n    }\n};\n\nvar arrayToObject = function arrayToObject(source, options) {\n    var obj = options && options.plainObjects ? Object.create(null) : {};\n    for (var i = 0; i < source.length; ++i) {\n        if (typeof source[i] !== 'undefined') {\n            obj[i] = source[i];\n        }\n    }\n\n    return obj;\n};\n\nvar merge = function merge(target, source, options) {\n    /* eslint no-param-reassign: 0 */\n    if (!source) {\n        return target;\n    }\n\n    if (typeof source !== 'object') {\n        if (isArray(target)) {\n            target.push(source);\n        } else if (target && typeof target === 'object') {\n            if ((options && (options.plainObjects || options.allowPrototypes)) || !has.call(Object.prototype, source)) {\n                target[source] = true;\n            }\n        } else {\n            return [target, source];\n        }\n\n        return target;\n    }\n\n    if (!target || typeof target !== 'object') {\n        return [target].concat(source);\n    }\n\n    var mergeTarget = target;\n    if (isArray(target) && !isArray(source)) {\n        mergeTarget = arrayToObject(target, options);\n    }\n\n    if (isArray(target) && isArray(source)) {\n        source.forEach(function (item, i) {\n            if (has.call(target, i)) {\n                var targetItem = target[i];\n                if (targetItem && typeof targetItem === 'object' && item && typeof item === 'object') {\n                    target[i] = merge(targetItem, item, options);\n                } else {\n                    target.push(item);\n                }\n            } else {\n                target[i] = item;\n            }\n        });\n        return target;\n    }\n\n    return Object.keys(source).reduce(function (acc, key) {\n        var value = source[key];\n\n        if (has.call(acc, key)) {\n            acc[key] = merge(acc[key], value, options);\n        } else {\n            acc[key] = value;\n        }\n        return acc;\n    }, mergeTarget);\n};\n\nvar assign = function assignSingleSource(target, source) {\n    return Object.keys(source).reduce(function (acc, key) {\n        acc[key] = source[key];\n        return acc;\n    }, target);\n};\n\nvar decode = function (str, decoder, charset) {\n    var strWithoutPlus = str.replace(/\\+/g, ' ');\n    if (charset === 'iso-8859-1') {\n        // unescape never throws, no try...catch needed:\n        return strWithoutPlus.replace(/%[0-9a-f]{2}/gi, unescape);\n    }\n    // utf-8\n    try {\n        return decodeURIComponent(strWithoutPlus);\n    } catch (e) {\n        return strWithoutPlus;\n    }\n};\n\nvar encode = function encode(str, defaultEncoder, charset, kind, format) {\n    // This code was originally written by Brian White (mscdex) for the io.js core querystring library.\n    // It has been adapted here for stricter adherence to RFC 3986\n    if (str.length === 0) {\n        return str;\n    }\n\n    var string = str;\n    if (typeof str === 'symbol') {\n        string = Symbol.prototype.toString.call(str);\n    } else if (typeof str !== 'string') {\n        string = String(str);\n    }\n\n    if (charset === 'iso-8859-1') {\n        return escape(string).replace(/%u[0-9a-f]{4}/gi, function ($0) {\n            return '%26%23' + parseInt($0.slice(2), 16) + '%3B';\n        });\n    }\n\n    var out = '';\n    for (var i = 0; i < string.length; ++i) {\n        var c = string.charCodeAt(i);\n\n        if (\n            c === 0x2D // -\n            || c === 0x2E // .\n            || c === 0x5F // _\n            || c === 0x7E // ~\n            || (c >= 0x30 && c <= 0x39) // 0-9\n            || (c >= 0x41 && c <= 0x5A) // a-z\n            || (c >= 0x61 && c <= 0x7A) // A-Z\n            || (format === formats.RFC1738 && (c === 0x28 || c === 0x29)) // ( )\n        ) {\n            out += string.charAt(i);\n            continue;\n        }\n\n        if (c < 0x80) {\n            out = out + hexTable[c];\n            continue;\n        }\n\n        if (c < 0x800) {\n            out = out + (hexTable[0xC0 | (c >> 6)] + hexTable[0x80 | (c & 0x3F)]);\n            continue;\n        }\n\n        if (c < 0xD800 || c >= 0xE000) {\n            out = out + (hexTable[0xE0 | (c >> 12)] + hexTable[0x80 | ((c >> 6) & 0x3F)] + hexTable[0x80 | (c & 0x3F)]);\n            continue;\n        }\n\n        i += 1;\n        c = 0x10000 + (((c & 0x3FF) << 10) | (string.charCodeAt(i) & 0x3FF));\n        /* eslint operator-linebreak: [2, \"before\"] */\n        out += hexTable[0xF0 | (c >> 18)]\n            + hexTable[0x80 | ((c >> 12) & 0x3F)]\n            + hexTable[0x80 | ((c >> 6) & 0x3F)]\n            + hexTable[0x80 | (c & 0x3F)];\n    }\n\n    return out;\n};\n\nvar compact = function compact(value) {\n    var queue = [{ obj: { o: value }, prop: 'o' }];\n    var refs = [];\n\n    for (var i = 0; i < queue.length; ++i) {\n        var item = queue[i];\n        var obj = item.obj[item.prop];\n\n        var keys = Object.keys(obj);\n        for (var j = 0; j < keys.length; ++j) {\n            var key = keys[j];\n            var val = obj[key];\n            if (typeof val === 'object' && val !== null && refs.indexOf(val) === -1) {\n                queue.push({ obj: obj, prop: key });\n                refs.push(val);\n            }\n        }\n    }\n\n    compactQueue(queue);\n\n    return value;\n};\n\nvar isRegExp = function isRegExp(obj) {\n    return Object.prototype.toString.call(obj) === '[object RegExp]';\n};\n\nvar isBuffer = function isBuffer(obj) {\n    if (!obj || typeof obj !== 'object') {\n        return false;\n    }\n\n    return !!(obj.constructor && obj.constructor.isBuffer && obj.constructor.isBuffer(obj));\n};\n\nvar combine = function combine(a, b) {\n    return [].concat(a, b);\n};\n\nvar maybeMap = function maybeMap(val, fn) {\n    if (isArray(val)) {\n        var mapped = [];\n        for (var i = 0; i < val.length; i += 1) {\n            mapped.push(fn(val[i]));\n        }\n        return mapped;\n    }\n    return fn(val);\n};\n\nmodule.exports = {\n    arrayToObject: arrayToObject,\n    assign: assign,\n    combine: combine,\n    compact: compact,\n    decode: decode,\n    encode: encode,\n    isBuffer: isBuffer,\n    isRegExp: isRegExp,\n    maybeMap: maybeMap,\n    merge: merge\n};\n","/*!\n * range-parser\n * Copyright(c) 2012-2014 TJ Holowaychuk\n * Copyright(c) 2015-2016 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = rangeParser\n\n/**\n * Parse \"Range\" header `str` relative to the given file `size`.\n *\n * @param {Number} size\n * @param {String} str\n * @param {Object} [options]\n * @return {Array}\n * @public\n */\n\nfunction rangeParser (size, str, options) {\n  if (typeof str !== 'string') {\n    throw new TypeError('argument str must be a string')\n  }\n\n  var index = str.indexOf('=')\n\n  if (index === -1) {\n    return -2\n  }\n\n  // split the range string\n  var arr = str.slice(index + 1).split(',')\n  var ranges = []\n\n  // add ranges type\n  ranges.type = str.slice(0, index)\n\n  // parse all ranges\n  for (var i = 0; i < arr.length; i++) {\n    var range = arr[i].split('-')\n    var start = parseInt(range[0], 10)\n    var end = parseInt(range[1], 10)\n\n    // -nnn\n    if (isNaN(start)) {\n      start = size - end\n      end = size - 1\n    // nnn-\n    } else if (isNaN(end)) {\n      end = size - 1\n    }\n\n    // limit last-byte-pos to current length\n    if (end > size - 1) {\n      end = size - 1\n    }\n\n    // invalid or unsatisifiable\n    if (isNaN(start) || isNaN(end) || start > end || start < 0) {\n      continue\n    }\n\n    // add range\n    ranges.push({\n      start: start,\n      end: end\n    })\n  }\n\n  if (ranges.length < 1) {\n    // unsatisifiable\n    return -1\n  }\n\n  return options && options.combine\n    ? combineRanges(ranges)\n    : ranges\n}\n\n/**\n * Combine overlapping & adjacent ranges.\n * @private\n */\n\nfunction combineRanges (ranges) {\n  var ordered = ranges.map(mapWithIndex).sort(sortByRangeStart)\n\n  for (var j = 0, i = 1; i < ordered.length; i++) {\n    var range = ordered[i]\n    var current = ordered[j]\n\n    if (range.start > current.end + 1) {\n      // next range\n      ordered[++j] = range\n    } else if (range.end > current.end) {\n      // extend range\n      current.end = range.end\n      current.index = Math.min(current.index, range.index)\n    }\n  }\n\n  // trim ordered array\n  ordered.length = j + 1\n\n  // generate combined range\n  var combined = ordered.sort(sortByRangeIndex).map(mapWithoutIndex)\n\n  // copy ranges type\n  combined.type = ranges.type\n\n  return combined\n}\n\n/**\n * Map function to add index value to ranges.\n * @private\n */\n\nfunction mapWithIndex (range, index) {\n  return {\n    start: range.start,\n    end: range.end,\n    index: index\n  }\n}\n\n/**\n * Map function to remove index value from ranges.\n * @private\n */\n\nfunction mapWithoutIndex (range) {\n  return {\n    start: range.start,\n    end: range.end\n  }\n}\n\n/**\n * Sort function to sort ranges by index.\n * @private\n */\n\nfunction sortByRangeIndex (a, b) {\n  return a.index - b.index\n}\n\n/**\n * Sort function to sort ranges by start position.\n * @private\n */\n\nfunction sortByRangeStart (a, b) {\n  return a.start - b.start\n}\n","/*!\n * raw-body\n * Copyright(c) 2013-2014 Jonathan Ong\n * Copyright(c) 2014-2022 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * Module dependencies.\n * @private\n */\n\nvar asyncHooks = tryRequireAsyncHooks()\nvar bytes = require('bytes')\nvar createError = require('http-errors')\nvar iconv = require('iconv-lite')\nvar unpipe = require('unpipe')\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = getRawBody\n\n/**\n * Module variables.\n * @private\n */\n\nvar ICONV_ENCODING_MESSAGE_REGEXP = /^Encoding not recognized: /\n\n/**\n * Get the decoder for a given encoding.\n *\n * @param {string} encoding\n * @private\n */\n\nfunction getDecoder (encoding) {\n  if (!encoding) return null\n\n  try {\n    return iconv.getDecoder(encoding)\n  } catch (e) {\n    // error getting decoder\n    if (!ICONV_ENCODING_MESSAGE_REGEXP.test(e.message)) throw e\n\n    // the encoding was not found\n    throw createError(415, 'specified encoding unsupported', {\n      encoding: encoding,\n      type: 'encoding.unsupported'\n    })\n  }\n}\n\n/**\n * Get the raw body of a stream (typically HTTP).\n *\n * @param {object} stream\n * @param {object|string|function} [options]\n * @param {function} [callback]\n * @public\n */\n\nfunction getRawBody (stream, options, callback) {\n  var done = callback\n  var opts = options || {}\n\n  if (options === true || typeof options === 'string') {\n    // short cut for encoding\n    opts = {\n      encoding: options\n    }\n  }\n\n  if (typeof options === 'function') {\n    done = options\n    opts = {}\n  }\n\n  // validate callback is a function, if provided\n  if (done !== undefined && typeof done !== 'function') {\n    throw new TypeError('argument callback must be a function')\n  }\n\n  // require the callback without promises\n  if (!done && !global.Promise) {\n    throw new TypeError('argument callback is required')\n  }\n\n  // get encoding\n  var encoding = opts.encoding !== true\n    ? opts.encoding\n    : 'utf-8'\n\n  // convert the limit to an integer\n  var limit = bytes.parse(opts.limit)\n\n  // convert the expected length to an integer\n  var length = opts.length != null && !isNaN(opts.length)\n    ? parseInt(opts.length, 10)\n    : null\n\n  if (done) {\n    // classic callback style\n    return readStream(stream, encoding, length, limit, wrap(done))\n  }\n\n  return new Promise(function executor (resolve, reject) {\n    readStream(stream, encoding, length, limit, function onRead (err, buf) {\n      if (err) return reject(err)\n      resolve(buf)\n    })\n  })\n}\n\n/**\n * Halt a stream.\n *\n * @param {Object} stream\n * @private\n */\n\nfunction halt (stream) {\n  // unpipe everything from the stream\n  unpipe(stream)\n\n  // pause stream\n  if (typeof stream.pause === 'function') {\n    stream.pause()\n  }\n}\n\n/**\n * Read the data from the stream.\n *\n * @param {object} stream\n * @param {string} encoding\n * @param {number} length\n * @param {number} limit\n * @param {function} callback\n * @public\n */\n\nfunction readStream (stream, encoding, length, limit, callback) {\n  var complete = false\n  var sync = true\n\n  // check the length and limit options.\n  // note: we intentionally leave the stream paused,\n  // so users should handle the stream themselves.\n  if (limit !== null && length !== null && length > limit) {\n    return done(createError(413, 'request entity too large', {\n      expected: length,\n      length: length,\n      limit: limit,\n      type: 'entity.too.large'\n    }))\n  }\n\n  // streams1: assert request encoding is buffer.\n  // streams2+: assert the stream encoding is buffer.\n  //   stream._decoder: streams1\n  //   state.encoding: streams2\n  //   state.decoder: streams2, specifically < 0.10.6\n  var state = stream._readableState\n  if (stream._decoder || (state && (state.encoding || state.decoder))) {\n    // developer error\n    return done(createError(500, 'stream encoding should not be set', {\n      type: 'stream.encoding.set'\n    }))\n  }\n\n  if (typeof stream.readable !== 'undefined' && !stream.readable) {\n    return done(createError(500, 'stream is not readable', {\n      type: 'stream.not.readable'\n    }))\n  }\n\n  var received = 0\n  var decoder\n\n  try {\n    decoder = getDecoder(encoding)\n  } catch (err) {\n    return done(err)\n  }\n\n  var buffer = decoder\n    ? ''\n    : []\n\n  // attach listeners\n  stream.on('aborted', onAborted)\n  stream.on('close', cleanup)\n  stream.on('data', onData)\n  stream.on('end', onEnd)\n  stream.on('error', onEnd)\n\n  // mark sync section complete\n  sync = false\n\n  function done () {\n    var args = new Array(arguments.length)\n\n    // copy arguments\n    for (var i = 0; i < args.length; i++) {\n      args[i] = arguments[i]\n    }\n\n    // mark complete\n    complete = true\n\n    if (sync) {\n      process.nextTick(invokeCallback)\n    } else {\n      invokeCallback()\n    }\n\n    function invokeCallback () {\n      cleanup()\n\n      if (args[0]) {\n        // halt the stream on error\n        halt(stream)\n      }\n\n      callback.apply(null, args)\n    }\n  }\n\n  function onAborted () {\n    if (complete) return\n\n    done(createError(400, 'request aborted', {\n      code: 'ECONNABORTED',\n      expected: length,\n      length: length,\n      received: received,\n      type: 'request.aborted'\n    }))\n  }\n\n  function onData (chunk) {\n    if (complete) return\n\n    received += chunk.length\n\n    if (limit !== null && received > limit) {\n      done(createError(413, 'request entity too large', {\n        limit: limit,\n        received: received,\n        type: 'entity.too.large'\n      }))\n    } else if (decoder) {\n      buffer += decoder.write(chunk)\n    } else {\n      buffer.push(chunk)\n    }\n  }\n\n  function onEnd (err) {\n    if (complete) return\n    if (err) return done(err)\n\n    if (length !== null && received !== length) {\n      done(createError(400, 'request size did not match content length', {\n        expected: length,\n        length: length,\n        received: received,\n        type: 'request.size.invalid'\n      }))\n    } else {\n      var string = decoder\n        ? buffer + (decoder.end() || '')\n        : Buffer.concat(buffer)\n      done(null, string)\n    }\n  }\n\n  function cleanup () {\n    buffer = null\n\n    stream.removeListener('aborted', onAborted)\n    stream.removeListener('data', onData)\n    stream.removeListener('end', onEnd)\n    stream.removeListener('error', onEnd)\n    stream.removeListener('close', cleanup)\n  }\n}\n\n/**\n * Try to require async_hooks\n * @private\n */\n\nfunction tryRequireAsyncHooks () {\n  try {\n    return require('async_hooks')\n  } catch (e) {\n    return {}\n  }\n}\n\n/**\n * Wrap function with async resource, if possible.\n * AsyncResource.bind static method backported.\n * @private\n */\n\nfunction wrap (fn) {\n  var res\n\n  // create anonymous resource\n  if (asyncHooks.AsyncResource) {\n    res = new asyncHooks.AsyncResource(fn.name || 'bound-anonymous-fn')\n  }\n\n  // incompatible node.js\n  if (!res || !res.runInAsyncScope) {\n    return fn\n  }\n\n  // return bound function\n  return res.runInAsyncScope.bind(res, fn, null)\n}\n","//////////////////////////////////////////////////////////\n// Here we need to reference our other deep imports\n// so VS code will figure out where they are\n// see conversation here:\n// https://github.com/microsoft/TypeScript/issues/43034\n//////////////////////////////////////////////////////////\n\n// tslint:disable: no-reference\n// It's tempting to add references to all of the deep-import locations, but\n// adding references to those that require DOM types breaks Node projects.\n/// <reference path=\"./operators/index.ts\" />\n/// <reference path=\"./testing/index.ts\" />\n// tslint:enable: no-reference\n\n/* Observable */\nexport { Observable } from './internal/Observable';\nexport { ConnectableObservable } from './internal/observable/ConnectableObservable';\nexport { GroupedObservable } from './internal/operators/groupBy';\nexport { Operator } from './internal/Operator';\nexport { observable } from './internal/symbol/observable';\nexport { animationFrames } from './internal/observable/dom/animationFrames';\n\n/* Subjects */\nexport { Subject } from './internal/Subject';\nexport { BehaviorSubject } from './internal/BehaviorSubject';\nexport { ReplaySubject } from './internal/ReplaySubject';\nexport { AsyncSubject } from './internal/AsyncSubject';\n\n/* Schedulers */\nexport { asap, asapScheduler } from './internal/scheduler/asap';\nexport { async, asyncScheduler } from './internal/scheduler/async';\nexport { queue, queueScheduler } from './internal/scheduler/queue';\nexport { animationFrame, animationFrameScheduler } from './internal/scheduler/animationFrame';\nexport { VirtualTimeScheduler, VirtualAction } from './internal/scheduler/VirtualTimeScheduler';\nexport { Scheduler } from './internal/Scheduler';\n\n/* Subscription */\nexport { Subscription } from './internal/Subscription';\nexport { Subscriber } from './internal/Subscriber';\n\n/* Notification */\nexport { Notification, NotificationKind } from './internal/Notification';\n\n/* Utils */\nexport { pipe } from './internal/util/pipe';\nexport { noop } from './internal/util/noop';\nexport { identity } from './internal/util/identity';\nexport { isObservable } from './internal/util/isObservable';\n\n/* Promise Conversion */\nexport { lastValueFrom } from './internal/lastValueFrom';\nexport { firstValueFrom } from './internal/firstValueFrom';\n\n/* Error types */\nexport { ArgumentOutOfRangeError } from './internal/util/ArgumentOutOfRangeError';\nexport { EmptyError } from './internal/util/EmptyError';\nexport { NotFoundError } from './internal/util/NotFoundError';\nexport { ObjectUnsubscribedError } from './internal/util/ObjectUnsubscribedError';\nexport { SequenceError } from './internal/util/SequenceError';\nexport { TimeoutError } from './internal/operators/timeout';\nexport { UnsubscriptionError } from './internal/util/UnsubscriptionError';\n\n/* Static observable creation exports */\nexport { bindCallback } from './internal/observable/bindCallback';\nexport { bindNodeCallback } from './internal/observable/bindNodeCallback';\nexport { combineLatest } from './internal/observable/combineLatest';\nexport { concat } from './internal/observable/concat';\nexport { connectable } from './internal/observable/connectable';\nexport { defer } from './internal/observable/defer';\nexport { empty } from './internal/observable/empty';\nexport { forkJoin } from './internal/observable/forkJoin';\nexport { from } from './internal/observable/from';\nexport { fromEvent } from './internal/observable/fromEvent';\nexport { fromEventPattern } from './internal/observable/fromEventPattern';\nexport { generate } from './internal/observable/generate';\nexport { iif } from './internal/observable/iif';\nexport { interval } from './internal/observable/interval';\nexport { merge } from './internal/observable/merge';\nexport { never } from './internal/observable/never';\nexport { of } from './internal/observable/of';\nexport { onErrorResumeNext } from './internal/observable/onErrorResumeNext';\nexport { pairs } from './internal/observable/pairs';\nexport { partition } from './internal/observable/partition';\nexport { race } from './internal/observable/race';\nexport { range } from './internal/observable/range';\nexport { throwError } from './internal/observable/throwError';\nexport { timer } from './internal/observable/timer';\nexport { using } from './internal/observable/using';\nexport { zip } from './internal/observable/zip';\nexport { scheduled } from './internal/scheduled/scheduled';\n\n/* Constants */\nexport { EMPTY } from './internal/observable/empty';\nexport { NEVER } from './internal/observable/never';\n\n/* Types */\nexport * from './internal/types';\n\n/* Config */\nexport { config, GlobalConfig } from './internal/config';\n\n/* Operators */\nexport { audit } from './internal/operators/audit';\nexport { auditTime } from './internal/operators/auditTime';\nexport { buffer } from './internal/operators/buffer';\nexport { bufferCount } from './internal/operators/bufferCount';\nexport { bufferTime } from './internal/operators/bufferTime';\nexport { bufferToggle } from './internal/operators/bufferToggle';\nexport { bufferWhen } from './internal/operators/bufferWhen';\nexport { catchError } from './internal/operators/catchError';\nexport { combineAll } from './internal/operators/combineAll';\nexport { combineLatestAll } from './internal/operators/combineLatestAll';\nexport { combineLatestWith } from './internal/operators/combineLatestWith';\nexport { concatAll } from './internal/operators/concatAll';\nexport { concatMap } from './internal/operators/concatMap';\nexport { concatMapTo } from './internal/operators/concatMapTo';\nexport { concatWith } from './internal/operators/concatWith';\nexport { connect, ConnectConfig } from './internal/operators/connect';\nexport { count } from './internal/operators/count';\nexport { debounce } from './internal/operators/debounce';\nexport { debounceTime } from './internal/operators/debounceTime';\nexport { defaultIfEmpty } from './internal/operators/defaultIfEmpty';\nexport { delay } from './internal/operators/delay';\nexport { delayWhen } from './internal/operators/delayWhen';\nexport { dematerialize } from './internal/operators/dematerialize';\nexport { distinct } from './internal/operators/distinct';\nexport { distinctUntilChanged } from './internal/operators/distinctUntilChanged';\nexport { distinctUntilKeyChanged } from './internal/operators/distinctUntilKeyChanged';\nexport { elementAt } from './internal/operators/elementAt';\nexport { endWith } from './internal/operators/endWith';\nexport { every } from './internal/operators/every';\nexport { exhaust } from './internal/operators/exhaust';\nexport { exhaustAll } from './internal/operators/exhaustAll';\nexport { exhaustMap } from './internal/operators/exhaustMap';\nexport { expand } from './internal/operators/expand';\nexport { filter } from './internal/operators/filter';\nexport { finalize } from './internal/operators/finalize';\nexport { find } from './internal/operators/find';\nexport { findIndex } from './internal/operators/findIndex';\nexport { first } from './internal/operators/first';\nexport { groupBy, BasicGroupByOptions, GroupByOptionsWithElement } from './internal/operators/groupBy';\nexport { ignoreElements } from './internal/operators/ignoreElements';\nexport { isEmpty } from './internal/operators/isEmpty';\nexport { last } from './internal/operators/last';\nexport { map } from './internal/operators/map';\nexport { mapTo } from './internal/operators/mapTo';\nexport { materialize } from './internal/operators/materialize';\nexport { max } from './internal/operators/max';\nexport { mergeAll } from './internal/operators/mergeAll';\nexport { flatMap } from './internal/operators/flatMap';\nexport { mergeMap } from './internal/operators/mergeMap';\nexport { mergeMapTo } from './internal/operators/mergeMapTo';\nexport { mergeScan } from './internal/operators/mergeScan';\nexport { mergeWith } from './internal/operators/mergeWith';\nexport { min } from './internal/operators/min';\nexport { multicast } from './internal/operators/multicast';\nexport { observeOn } from './internal/operators/observeOn';\nexport { pairwise } from './internal/operators/pairwise';\nexport { pluck } from './internal/operators/pluck';\nexport { publish } from './internal/operators/publish';\nexport { publishBehavior } from './internal/operators/publishBehavior';\nexport { publishLast } from './internal/operators/publishLast';\nexport { publishReplay } from './internal/operators/publishReplay';\nexport { raceWith } from './internal/operators/raceWith';\nexport { reduce } from './internal/operators/reduce';\nexport { repeat } from './internal/operators/repeat';\nexport { repeatWhen } from './internal/operators/repeatWhen';\nexport { retry, RetryConfig } from './internal/operators/retry';\nexport { retryWhen } from './internal/operators/retryWhen';\nexport { refCount } from './internal/operators/refCount';\nexport { sample } from './internal/operators/sample';\nexport { sampleTime } from './internal/operators/sampleTime';\nexport { scan } from './internal/operators/scan';\nexport { sequenceEqual } from './internal/operators/sequenceEqual';\nexport { share, ShareConfig } from './internal/operators/share';\nexport { shareReplay, ShareReplayConfig } from './internal/operators/shareReplay';\nexport { single } from './internal/operators/single';\nexport { skip } from './internal/operators/skip';\nexport { skipLast } from './internal/operators/skipLast';\nexport { skipUntil } from './internal/operators/skipUntil';\nexport { skipWhile } from './internal/operators/skipWhile';\nexport { startWith } from './internal/operators/startWith';\nexport { subscribeOn } from './internal/operators/subscribeOn';\nexport { switchAll } from './internal/operators/switchAll';\nexport { switchMap } from './internal/operators/switchMap';\nexport { switchMapTo } from './internal/operators/switchMapTo';\nexport { switchScan } from './internal/operators/switchScan';\nexport { take } from './internal/operators/take';\nexport { takeLast } from './internal/operators/takeLast';\nexport { takeUntil } from './internal/operators/takeUntil';\nexport { takeWhile } from './internal/operators/takeWhile';\nexport { tap } from './internal/operators/tap';\nexport { throttle, ThrottleConfig } from './internal/operators/throttle';\nexport { throttleTime } from './internal/operators/throttleTime';\nexport { throwIfEmpty } from './internal/operators/throwIfEmpty';\nexport { timeInterval } from './internal/operators/timeInterval';\nexport { timeout, TimeoutConfig, TimeoutInfo } from './internal/operators/timeout';\nexport { timeoutWith } from './internal/operators/timeoutWith';\nexport { timestamp } from './internal/operators/timestamp';\nexport { toArray } from './internal/operators/toArray';\nexport { window } from './internal/operators/window';\nexport { windowCount } from './internal/operators/windowCount';\nexport { windowTime } from './internal/operators/windowTime';\nexport { windowToggle } from './internal/operators/windowToggle';\nexport { windowWhen } from './internal/operators/windowWhen';\nexport { withLatestFrom } from './internal/operators/withLatestFrom';\nexport { zipAll } from './internal/operators/zipAll';\nexport { zipWith } from './internal/operators/zipWith';\n","import { Subject } from './Subject';\nimport { Subscriber } from './Subscriber';\n\n/**\n * A variant of Subject that only emits a value when it completes. It will emit\n * its latest value to all its observers on completion.\n *\n * @class AsyncSubject<T>\n */\nexport class AsyncSubject<T> extends Subject<T> {\n  private _value: T | null = null;\n  private _hasValue = false;\n  private _isComplete = false;\n\n  /** @internal */\n  protected _checkFinalizedStatuses(subscriber: Subscriber<T>) {\n    const { hasError, _hasValue, _value, thrownError, isStopped, _isComplete } = this;\n    if (hasError) {\n      subscriber.error(thrownError);\n    } else if (isStopped || _isComplete) {\n      _hasValue && subscriber.next(_value!);\n      subscriber.complete();\n    }\n  }\n\n  next(value: T): void {\n    if (!this.isStopped) {\n      this._value = value;\n      this._hasValue = true;\n    }\n  }\n\n  complete(): void {\n    const { _hasValue, _value, _isComplete } = this;\n    if (!_isComplete) {\n      this._isComplete = true;\n      _hasValue && super.next(_value!);\n      super.complete();\n    }\n  }\n}\n","import { Subject } from './Subject';\nimport { Subscriber } from './Subscriber';\nimport { Subscription } from './Subscription';\n\n/**\n * A variant of Subject that requires an initial value and emits its current\n * value whenever it is subscribed to.\n *\n * @class BehaviorSubject<T>\n */\nexport class BehaviorSubject<T> extends Subject<T> {\n  constructor(private _value: T) {\n    super();\n  }\n\n  get value(): T {\n    return this.getValue();\n  }\n\n  /** @internal */\n  protected _subscribe(subscriber: Subscriber<T>): Subscription {\n    const subscription = super._subscribe(subscriber);\n    !subscription.closed && subscriber.next(this._value);\n    return subscription;\n  }\n\n  getValue(): T {\n    const { hasError, thrownError, _value } = this;\n    if (hasError) {\n      throw thrownError;\n    }\n    this._throwIfClosed();\n    return _value;\n  }\n\n  next(value: T): void {\n    super.next((this._value = value));\n  }\n}\n","import { PartialObserver, ObservableNotification, CompleteNotification, NextNotification, ErrorNotification } from './types';\nimport { Observable } from './Observable';\nimport { EMPTY } from './observable/empty';\nimport { of } from './observable/of';\nimport { throwError } from './observable/throwError';\nimport { isFunction } from './util/isFunction';\n\n// TODO: When this enum is removed, replace it with a type alias. See #4556.\n/**\n * @deprecated Use a string literal instead. `NotificationKind` will be replaced with a type alias in v8.\n * It will not be replaced with a const enum as those are not compatible with isolated modules.\n */\nexport enum NotificationKind {\n  NEXT = 'N',\n  ERROR = 'E',\n  COMPLETE = 'C',\n}\n\n/**\n * Represents a push-based event or value that an {@link Observable} can emit.\n * This class is particularly useful for operators that manage notifications,\n * like {@link materialize}, {@link dematerialize}, {@link observeOn}, and\n * others. Besides wrapping the actual delivered value, it also annotates it\n * with metadata of, for instance, what type of push message it is (`next`,\n * `error`, or `complete`).\n *\n * @see {@link materialize}\n * @see {@link dematerialize}\n * @see {@link observeOn}\n * @deprecated It is NOT recommended to create instances of `Notification` directly.\n * Rather, try to create POJOs matching the signature outlined in {@link ObservableNotification}.\n * For example: `{ kind: 'N', value: 1 }`, `{ kind: 'E', error: new Error('bad') }`, or `{ kind: 'C' }`.\n * Will be removed in v8.\n */\nexport class Notification<T> {\n  /**\n   * A value signifying that the notification will \"next\" if observed. In truth,\n   * This is really synonymous with just checking `kind === \"N\"`.\n   * @deprecated Will be removed in v8. Instead, just check to see if the value of `kind` is `\"N\"`.\n   */\n  readonly hasValue: boolean;\n\n  /**\n   * Creates a \"Next\" notification object.\n   * @param kind Always `'N'`\n   * @param value The value to notify with if observed.\n   * @deprecated Internal implementation detail. Use {@link Notification#createNext createNext} instead.\n   */\n  constructor(kind: 'N', value?: T);\n  /**\n   * Creates an \"Error\" notification object.\n   * @param kind Always `'E'`\n   * @param value Always `undefined`\n   * @param error The error to notify with if observed.\n   * @deprecated Internal implementation detail. Use {@link Notification#createError createError} instead.\n   */\n  constructor(kind: 'E', value: undefined, error: any);\n  /**\n   * Creates a \"completion\" notification object.\n   * @param kind Always `'C'`\n   * @deprecated Internal implementation detail. Use {@link Notification#createComplete createComplete} instead.\n   */\n  constructor(kind: 'C');\n  constructor(public readonly kind: 'N' | 'E' | 'C', public readonly value?: T, public readonly error?: any) {\n    this.hasValue = kind === 'N';\n  }\n\n  /**\n   * Executes the appropriate handler on a passed `observer` given the `kind` of notification.\n   * If the handler is missing it will do nothing. Even if the notification is an error, if\n   * there is no error handler on the observer, an error will not be thrown, it will noop.\n   * @param observer The observer to notify.\n   */\n  observe(observer: PartialObserver<T>): void {\n    return observeNotification(this as ObservableNotification<T>, observer);\n  }\n\n  /**\n   * Executes a notification on the appropriate handler from a list provided.\n   * If a handler is missing for the kind of notification, nothing is called\n   * and no error is thrown, it will be a noop.\n   * @param next A next handler\n   * @param error An error handler\n   * @param complete A complete handler\n   * @deprecated Replaced with {@link Notification#observe observe}. Will be removed in v8.\n   */\n  do(next: (value: T) => void, error: (err: any) => void, complete: () => void): void;\n  /**\n   * Executes a notification on the appropriate handler from a list provided.\n   * If a handler is missing for the kind of notification, nothing is called\n   * and no error is thrown, it will be a noop.\n   * @param next A next handler\n   * @param error An error handler\n   * @deprecated Replaced with {@link Notification#observe observe}. Will be removed in v8.\n   */\n  do(next: (value: T) => void, error: (err: any) => void): void;\n  /**\n   * Executes the next handler if the Notification is of `kind` `\"N\"`. Otherwise\n   * this will not error, and it will be a noop.\n   * @param next The next handler\n   * @deprecated Replaced with {@link Notification#observe observe}. Will be removed in v8.\n   */\n  do(next: (value: T) => void): void;\n  do(nextHandler: (value: T) => void, errorHandler?: (err: any) => void, completeHandler?: () => void): void {\n    const { kind, value, error } = this;\n    return kind === 'N' ? nextHandler?.(value!) : kind === 'E' ? errorHandler?.(error) : completeHandler?.();\n  }\n\n  /**\n   * Executes a notification on the appropriate handler from a list provided.\n   * If a handler is missing for the kind of notification, nothing is called\n   * and no error is thrown, it will be a noop.\n   * @param next A next handler\n   * @param error An error handler\n   * @param complete A complete handler\n   * @deprecated Replaced with {@link Notification#observe observe}. Will be removed in v8.\n   */\n  accept(next: (value: T) => void, error: (err: any) => void, complete: () => void): void;\n  /**\n   * Executes a notification on the appropriate handler from a list provided.\n   * If a handler is missing for the kind of notification, nothing is called\n   * and no error is thrown, it will be a noop.\n   * @param next A next handler\n   * @param error An error handler\n   * @deprecated Replaced with {@link Notification#observe observe}. Will be removed in v8.\n   */\n  accept(next: (value: T) => void, error: (err: any) => void): void;\n  /**\n   * Executes the next handler if the Notification is of `kind` `\"N\"`. Otherwise\n   * this will not error, and it will be a noop.\n   * @param next The next handler\n   * @deprecated Replaced with {@link Notification#observe observe}. Will be removed in v8.\n   */\n  accept(next: (value: T) => void): void;\n\n  /**\n   * Executes the appropriate handler on a passed `observer` given the `kind` of notification.\n   * If the handler is missing it will do nothing. Even if the notification is an error, if\n   * there is no error handler on the observer, an error will not be thrown, it will noop.\n   * @param observer The observer to notify.\n   * @deprecated Replaced with {@link Notification#observe observe}. Will be removed in v8.\n   */\n  accept(observer: PartialObserver<T>): void;\n  accept(nextOrObserver: PartialObserver<T> | ((value: T) => void), error?: (err: any) => void, complete?: () => void) {\n    return isFunction((nextOrObserver as any)?.next)\n      ? this.observe(nextOrObserver as PartialObserver<T>)\n      : this.do(nextOrObserver as (value: T) => void, error as any, complete as any);\n  }\n\n  /**\n   * Returns a simple Observable that just delivers the notification represented\n   * by this Notification instance.\n   *\n   * @deprecated Will be removed in v8. To convert a `Notification` to an {@link Observable},\n   * use {@link of} and {@link dematerialize}: `of(notification).pipe(dematerialize())`.\n   */\n  toObservable(): Observable<T> {\n    const { kind, value, error } = this;\n    // Select the observable to return by `kind`\n    const result =\n      kind === 'N'\n        ? // Next kind. Return an observable of that value.\n          of(value!)\n        : //\n        kind === 'E'\n        ? // Error kind. Return an observable that emits the error.\n          throwError(() => error)\n        : //\n        kind === 'C'\n        ? // Completion kind. Kind is \"C\", return an observable that just completes.\n          EMPTY\n        : // Unknown kind, return falsy, so we error below.\n          0;\n    if (!result) {\n      // TODO: consider removing this check. The only way to cause this would be to\n      // use the Notification constructor directly in a way that is not type-safe.\n      // and direct use of the Notification constructor is deprecated.\n      throw new TypeError(`Unexpected notification kind ${kind}`);\n    }\n    return result;\n  }\n\n  private static completeNotification = new Notification('C') as Notification<never> & CompleteNotification;\n  /**\n   * A shortcut to create a Notification instance of the type `next` from a\n   * given value.\n   * @param {T} value The `next` value.\n   * @return {Notification<T>} The \"next\" Notification representing the\n   * argument.\n   * @nocollapse\n   * @deprecated It is NOT recommended to create instances of `Notification` directly.\n   * Rather, try to create POJOs matching the signature outlined in {@link ObservableNotification}.\n   * For example: `{ kind: 'N', value: 1 }`, `{ kind: 'E', error: new Error('bad') }`, or `{ kind: 'C' }`.\n   * Will be removed in v8.\n   */\n  static createNext<T>(value: T) {\n    return new Notification('N', value) as Notification<T> & NextNotification<T>;\n  }\n\n  /**\n   * A shortcut to create a Notification instance of the type `error` from a\n   * given error.\n   * @param {any} [err] The `error` error.\n   * @return {Notification<T>} The \"error\" Notification representing the\n   * argument.\n   * @nocollapse\n   * @deprecated It is NOT recommended to create instances of `Notification` directly.\n   * Rather, try to create POJOs matching the signature outlined in {@link ObservableNotification}.\n   * For example: `{ kind: 'N', value: 1 }`, `{ kind: 'E', error: new Error('bad') }`, or `{ kind: 'C' }`.\n   * Will be removed in v8.\n   */\n  static createError(err?: any) {\n    return new Notification('E', undefined, err) as Notification<never> & ErrorNotification;\n  }\n\n  /**\n   * A shortcut to create a Notification instance of the type `complete`.\n   * @return {Notification<any>} The valueless \"complete\" Notification.\n   * @nocollapse\n   * @deprecated It is NOT recommended to create instances of `Notification` directly.\n   * Rather, try to create POJOs matching the signature outlined in {@link ObservableNotification}.\n   * For example: `{ kind: 'N', value: 1 }`, `{ kind: 'E', error: new Error('bad') }`, or `{ kind: 'C' }`.\n   * Will be removed in v8.\n   */\n  static createComplete(): Notification<never> & CompleteNotification {\n    return Notification.completeNotification;\n  }\n}\n\n/**\n * Executes the appropriate handler on a passed `observer` given the `kind` of notification.\n * If the handler is missing it will do nothing. Even if the notification is an error, if\n * there is no error handler on the observer, an error will not be thrown, it will noop.\n * @param notification The notification object to observe.\n * @param observer The observer to notify.\n */\nexport function observeNotification<T>(notification: ObservableNotification<T>, observer: PartialObserver<T>) {\n  const { kind, value, error } = notification as any;\n  if (typeof kind !== 'string') {\n    throw new TypeError('Invalid notification, missing \"kind\"');\n  }\n  kind === 'N' ? observer.next?.(value!) : kind === 'E' ? observer.error?.(error) : observer.complete?.();\n}\n","import { CompleteNotification, NextNotification, ErrorNotification } from './types';\n\n/**\n * A completion object optimized for memory use and created to be the\n * same \"shape\" as other notifications in v8.\n * @internal\n */\nexport const COMPLETE_NOTIFICATION = (() => createNotification('C', undefined, undefined) as CompleteNotification)();\n\n/**\n * Internal use only. Creates an optimized error notification that is the same \"shape\"\n * as other notifications.\n * @internal\n */\nexport function errorNotification(error: any): ErrorNotification {\n  return createNotification('E', undefined, error) as any;\n}\n\n/**\n * Internal use only. Creates an optimized next notification that is the same \"shape\"\n * as other notifications.\n * @internal\n */\nexport function nextNotification<T>(value: T) {\n  return createNotification('N', value, undefined) as NextNotification<T>;\n}\n\n/**\n * Ensures that all notifications created internally have the same \"shape\" in v8.\n *\n * TODO: This is only exported to support a crazy legacy test in `groupBy`.\n * @internal\n */\nexport function createNotification(kind: 'N' | 'E' | 'C', value: any, error: any) {\n  return {\n    kind,\n    value,\n    error,\n  };\n}\n","import { Operator } from './Operator';\nimport { SafeSubscriber, Subscriber } from './Subscriber';\nimport { isSubscription, Subscription } from './Subscription';\nimport { TeardownLogic, OperatorFunction, Subscribable, Observer } from './types';\nimport { observable as Symbol_observable } from './symbol/observable';\nimport { pipeFromArray } from './util/pipe';\nimport { config } from './config';\nimport { isFunction } from './util/isFunction';\nimport { errorContext } from './util/errorContext';\n\n/**\n * A representation of any set of values over any amount of time. This is the most basic building block\n * of RxJS.\n *\n * @class Observable<T>\n */\nexport class Observable<T> implements Subscribable<T> {\n  /**\n   * @deprecated Internal implementation detail, do not use directly. Will be made internal in v8.\n   */\n  source: Observable<any> | undefined;\n\n  /**\n   * @deprecated Internal implementation detail, do not use directly. Will be made internal in v8.\n   */\n  operator: Operator<any, T> | undefined;\n\n  /**\n   * @constructor\n   * @param {Function} subscribe the function that is called when the Observable is\n   * initially subscribed to. This function is given a Subscriber, to which new values\n   * can be `next`ed, or an `error` method can be called to raise an error, or\n   * `complete` can be called to notify of a successful completion.\n   */\n  constructor(subscribe?: (this: Observable<T>, subscriber: Subscriber<T>) => TeardownLogic) {\n    if (subscribe) {\n      this._subscribe = subscribe;\n    }\n  }\n\n  // HACK: Since TypeScript inherits static properties too, we have to\n  // fight against TypeScript here so Subject can have a different static create signature\n  /**\n   * Creates a new Observable by calling the Observable constructor\n   * @owner Observable\n   * @method create\n   * @param {Function} subscribe? the subscriber function to be passed to the Observable constructor\n   * @return {Observable} a new observable\n   * @nocollapse\n   * @deprecated Use `new Observable()` instead. Will be removed in v8.\n   */\n  static create: (...args: any[]) => any = <T>(subscribe?: (subscriber: Subscriber<T>) => TeardownLogic) => {\n    return new Observable<T>(subscribe);\n  };\n\n  /**\n   * Creates a new Observable, with this Observable instance as the source, and the passed\n   * operator defined as the new observable's operator.\n   * @method lift\n   * @param operator the operator defining the operation to take on the observable\n   * @return a new observable with the Operator applied\n   * @deprecated Internal implementation detail, do not use directly. Will be made internal in v8.\n   * If you have implemented an operator using `lift`, it is recommended that you create an\n   * operator by simply returning `new Observable()` directly. See \"Creating new operators from\n   * scratch\" section here: https://rxjs.dev/guide/operators\n   */\n  lift<R>(operator?: Operator<T, R>): Observable<R> {\n    const observable = new Observable<R>();\n    observable.source = this;\n    observable.operator = operator;\n    return observable;\n  }\n\n  subscribe(observer?: Partial<Observer<T>>): Subscription;\n  subscribe(next: (value: T) => void): Subscription;\n  /** @deprecated Instead of passing separate callback arguments, use an observer argument. Signatures taking separate callback arguments will be removed in v8. Details: https://rxjs.dev/deprecations/subscribe-arguments */\n  subscribe(next?: ((value: T) => void) | null, error?: ((error: any) => void) | null, complete?: (() => void) | null): Subscription;\n  /**\n   * Invokes an execution of an Observable and registers Observer handlers for notifications it will emit.\n   *\n   * <span class=\"informal\">Use it when you have all these Observables, but still nothing is happening.</span>\n   *\n   * `subscribe` is not a regular operator, but a method that calls Observable's internal `subscribe` function. It\n   * might be for example a function that you passed to Observable's constructor, but most of the time it is\n   * a library implementation, which defines what will be emitted by an Observable, and when it be will emitted. This means\n   * that calling `subscribe` is actually the moment when Observable starts its work, not when it is created, as it is often\n   * the thought.\n   *\n   * Apart from starting the execution of an Observable, this method allows you to listen for values\n   * that an Observable emits, as well as for when it completes or errors. You can achieve this in two\n   * of the following ways.\n   *\n   * The first way is creating an object that implements {@link Observer} interface. It should have methods\n   * defined by that interface, but note that it should be just a regular JavaScript object, which you can create\n   * yourself in any way you want (ES6 class, classic function constructor, object literal etc.). In particular, do\n   * not attempt to use any RxJS implementation details to create Observers - you don't need them. Remember also\n   * that your object does not have to implement all methods. If you find yourself creating a method that doesn't\n   * do anything, you can simply omit it. Note however, if the `error` method is not provided and an error happens,\n   * it will be thrown asynchronously. Errors thrown asynchronously cannot be caught using `try`/`catch`. Instead,\n   * use the {@link onUnhandledError} configuration option or use a runtime handler (like `window.onerror` or\n   * `process.on('error)`) to be notified of unhandled errors. Because of this, it's recommended that you provide\n   * an `error` method to avoid missing thrown errors.\n   *\n   * The second way is to give up on Observer object altogether and simply provide callback functions in place of its methods.\n   * This means you can provide three functions as arguments to `subscribe`, where the first function is equivalent\n   * of a `next` method, the second of an `error` method and the third of a `complete` method. Just as in case of an Observer,\n   * if you do not need to listen for something, you can omit a function by passing `undefined` or `null`,\n   * since `subscribe` recognizes these functions by where they were placed in function call. When it comes\n   * to the `error` function, as with an Observer, if not provided, errors emitted by an Observable will be thrown asynchronously.\n   *\n   * You can, however, subscribe with no parameters at all. This may be the case where you're not interested in terminal events\n   * and you also handled emissions internally by using operators (e.g. using `tap`).\n   *\n   * Whichever style of calling `subscribe` you use, in both cases it returns a Subscription object.\n   * This object allows you to call `unsubscribe` on it, which in turn will stop the work that an Observable does and will clean\n   * up all resources that an Observable used. Note that cancelling a subscription will not call `complete` callback\n   * provided to `subscribe` function, which is reserved for a regular completion signal that comes from an Observable.\n   *\n   * Remember that callbacks provided to `subscribe` are not guaranteed to be called asynchronously.\n   * It is an Observable itself that decides when these functions will be called. For example {@link of}\n   * by default emits all its values synchronously. Always check documentation for how given Observable\n   * will behave when subscribed and if its default behavior can be modified with a `scheduler`.\n   *\n   * #### Examples\n   *\n   * Subscribe with an {@link guide/observer Observer}\n   *\n   * ```ts\n   * import { of } from 'rxjs';\n   *\n   * const sumObserver = {\n   *   sum: 0,\n   *   next(value) {\n   *     console.log('Adding: ' + value);\n   *     this.sum = this.sum + value;\n   *   },\n   *   error() {\n   *     // We actually could just remove this method,\n   *     // since we do not really care about errors right now.\n   *   },\n   *   complete() {\n   *     console.log('Sum equals: ' + this.sum);\n   *   }\n   * };\n   *\n   * of(1, 2, 3) // Synchronously emits 1, 2, 3 and then completes.\n   *   .subscribe(sumObserver);\n   *\n   * // Logs:\n   * // 'Adding: 1'\n   * // 'Adding: 2'\n   * // 'Adding: 3'\n   * // 'Sum equals: 6'\n   * ```\n   *\n   * Subscribe with functions ({@link deprecations/subscribe-arguments deprecated})\n   *\n   * ```ts\n   * import { of } from 'rxjs'\n   *\n   * let sum = 0;\n   *\n   * of(1, 2, 3).subscribe(\n   *   value => {\n   *     console.log('Adding: ' + value);\n   *     sum = sum + value;\n   *   },\n   *   undefined,\n   *   () => console.log('Sum equals: ' + sum)\n   * );\n   *\n   * // Logs:\n   * // 'Adding: 1'\n   * // 'Adding: 2'\n   * // 'Adding: 3'\n   * // 'Sum equals: 6'\n   * ```\n   *\n   * Cancel a subscription\n   *\n   * ```ts\n   * import { interval } from 'rxjs';\n   *\n   * const subscription = interval(1000).subscribe({\n   *   next(num) {\n   *     console.log(num)\n   *   },\n   *   complete() {\n   *     // Will not be called, even when cancelling subscription.\n   *     console.log('completed!');\n   *   }\n   * });\n   *\n   * setTimeout(() => {\n   *   subscription.unsubscribe();\n   *   console.log('unsubscribed!');\n   * }, 2500);\n   *\n   * // Logs:\n   * // 0 after 1s\n   * // 1 after 2s\n   * // 'unsubscribed!' after 2.5s\n   * ```\n   *\n   * @param {Observer|Function} observerOrNext (optional) Either an observer with methods to be called,\n   * or the first of three possible handlers, which is the handler for each value emitted from the subscribed\n   * Observable.\n   * @param {Function} error (optional) A handler for a terminal event resulting from an error. If no error handler is provided,\n   * the error will be thrown asynchronously as unhandled.\n   * @param {Function} complete (optional) A handler for a terminal event resulting from successful completion.\n   * @return {Subscription} a subscription reference to the registered handlers\n   * @method subscribe\n   */\n  subscribe(\n    observerOrNext?: Partial<Observer<T>> | ((value: T) => void) | null,\n    error?: ((error: any) => void) | null,\n    complete?: (() => void) | null\n  ): Subscription {\n    const subscriber = isSubscriber(observerOrNext) ? observerOrNext : new SafeSubscriber(observerOrNext, error, complete);\n\n    errorContext(() => {\n      const { operator, source } = this;\n      subscriber.add(\n        operator\n          ? // We're dealing with a subscription in the\n            // operator chain to one of our lifted operators.\n            operator.call(subscriber, source)\n          : source\n          ? // If `source` has a value, but `operator` does not, something that\n            // had intimate knowledge of our API, like our `Subject`, must have\n            // set it. We're going to just call `_subscribe` directly.\n            this._subscribe(subscriber)\n          : // In all other cases, we're likely wrapping a user-provided initializer\n            // function, so we need to catch errors and handle them appropriately.\n            this._trySubscribe(subscriber)\n      );\n    });\n\n    return subscriber;\n  }\n\n  /** @internal */\n  protected _trySubscribe(sink: Subscriber<T>): TeardownLogic {\n    try {\n      return this._subscribe(sink);\n    } catch (err) {\n      // We don't need to return anything in this case,\n      // because it's just going to try to `add()` to a subscription\n      // above.\n      sink.error(err);\n    }\n  }\n\n  /**\n   * Used as a NON-CANCELLABLE means of subscribing to an observable, for use with\n   * APIs that expect promises, like `async/await`. You cannot unsubscribe from this.\n   *\n   * **WARNING**: Only use this with observables you *know* will complete. If the source\n   * observable does not complete, you will end up with a promise that is hung up, and\n   * potentially all of the state of an async function hanging out in memory. To avoid\n   * this situation, look into adding something like {@link timeout}, {@link take},\n   * {@link takeWhile}, or {@link takeUntil} amongst others.\n   *\n   * #### Example\n   *\n   * ```ts\n   * import { interval, take } from 'rxjs';\n   *\n   * const source$ = interval(1000).pipe(take(4));\n   *\n   * async function getTotal() {\n   *   let total = 0;\n   *\n   *   await source$.forEach(value => {\n   *     total += value;\n   *     console.log('observable -> ' + value);\n   *   });\n   *\n   *   return total;\n   * }\n   *\n   * getTotal().then(\n   *   total => console.log('Total: ' + total)\n   * );\n   *\n   * // Expected:\n   * // 'observable -> 0'\n   * // 'observable -> 1'\n   * // 'observable -> 2'\n   * // 'observable -> 3'\n   * // 'Total: 6'\n   * ```\n   *\n   * @param next a handler for each value emitted by the observable\n   * @return a promise that either resolves on observable completion or\n   *  rejects with the handled error\n   */\n  forEach(next: (value: T) => void): Promise<void>;\n\n  /**\n   * @param next a handler for each value emitted by the observable\n   * @param promiseCtor a constructor function used to instantiate the Promise\n   * @return a promise that either resolves on observable completion or\n   *  rejects with the handled error\n   * @deprecated Passing a Promise constructor will no longer be available\n   * in upcoming versions of RxJS. This is because it adds weight to the library, for very\n   * little benefit. If you need this functionality, it is recommended that you either\n   * polyfill Promise, or you create an adapter to convert the returned native promise\n   * to whatever promise implementation you wanted. Will be removed in v8.\n   */\n  forEach(next: (value: T) => void, promiseCtor: PromiseConstructorLike): Promise<void>;\n\n  forEach(next: (value: T) => void, promiseCtor?: PromiseConstructorLike): Promise<void> {\n    promiseCtor = getPromiseCtor(promiseCtor);\n\n    return new promiseCtor<void>((resolve, reject) => {\n      const subscriber = new SafeSubscriber<T>({\n        next: (value) => {\n          try {\n            next(value);\n          } catch (err) {\n            reject(err);\n            subscriber.unsubscribe();\n          }\n        },\n        error: reject,\n        complete: resolve,\n      });\n      this.subscribe(subscriber);\n    }) as Promise<void>;\n  }\n\n  /** @internal */\n  protected _subscribe(subscriber: Subscriber<any>): TeardownLogic {\n    return this.source?.subscribe(subscriber);\n  }\n\n  /**\n   * An interop point defined by the es7-observable spec https://github.com/zenparsing/es-observable\n   * @method Symbol.observable\n   * @return {Observable} this instance of the observable\n   */\n  [Symbol_observable]() {\n    return this;\n  }\n\n  /* tslint:disable:max-line-length */\n  pipe(): Observable<T>;\n  pipe<A>(op1: OperatorFunction<T, A>): Observable<A>;\n  pipe<A, B>(op1: OperatorFunction<T, A>, op2: OperatorFunction<A, B>): Observable<B>;\n  pipe<A, B, C>(op1: OperatorFunction<T, A>, op2: OperatorFunction<A, B>, op3: OperatorFunction<B, C>): Observable<C>;\n  pipe<A, B, C, D>(\n    op1: OperatorFunction<T, A>,\n    op2: OperatorFunction<A, B>,\n    op3: OperatorFunction<B, C>,\n    op4: OperatorFunction<C, D>\n  ): Observable<D>;\n  pipe<A, B, C, D, E>(\n    op1: OperatorFunction<T, A>,\n    op2: OperatorFunction<A, B>,\n    op3: OperatorFunction<B, C>,\n    op4: OperatorFunction<C, D>,\n    op5: OperatorFunction<D, E>\n  ): Observable<E>;\n  pipe<A, B, C, D, E, F>(\n    op1: OperatorFunction<T, A>,\n    op2: OperatorFunction<A, B>,\n    op3: OperatorFunction<B, C>,\n    op4: OperatorFunction<C, D>,\n    op5: OperatorFunction<D, E>,\n    op6: OperatorFunction<E, F>\n  ): Observable<F>;\n  pipe<A, B, C, D, E, F, G>(\n    op1: OperatorFunction<T, A>,\n    op2: OperatorFunction<A, B>,\n    op3: OperatorFunction<B, C>,\n    op4: OperatorFunction<C, D>,\n    op5: OperatorFunction<D, E>,\n    op6: OperatorFunction<E, F>,\n    op7: OperatorFunction<F, G>\n  ): Observable<G>;\n  pipe<A, B, C, D, E, F, G, H>(\n    op1: OperatorFunction<T, A>,\n    op2: OperatorFunction<A, B>,\n    op3: OperatorFunction<B, C>,\n    op4: OperatorFunction<C, D>,\n    op5: OperatorFunction<D, E>,\n    op6: OperatorFunction<E, F>,\n    op7: OperatorFunction<F, G>,\n    op8: OperatorFunction<G, H>\n  ): Observable<H>;\n  pipe<A, B, C, D, E, F, G, H, I>(\n    op1: OperatorFunction<T, A>,\n    op2: OperatorFunction<A, B>,\n    op3: OperatorFunction<B, C>,\n    op4: OperatorFunction<C, D>,\n    op5: OperatorFunction<D, E>,\n    op6: OperatorFunction<E, F>,\n    op7: OperatorFunction<F, G>,\n    op8: OperatorFunction<G, H>,\n    op9: OperatorFunction<H, I>\n  ): Observable<I>;\n  pipe<A, B, C, D, E, F, G, H, I>(\n    op1: OperatorFunction<T, A>,\n    op2: OperatorFunction<A, B>,\n    op3: OperatorFunction<B, C>,\n    op4: OperatorFunction<C, D>,\n    op5: OperatorFunction<D, E>,\n    op6: OperatorFunction<E, F>,\n    op7: OperatorFunction<F, G>,\n    op8: OperatorFunction<G, H>,\n    op9: OperatorFunction<H, I>,\n    ...operations: OperatorFunction<any, any>[]\n  ): Observable<unknown>;\n  /* tslint:enable:max-line-length */\n\n  /**\n   * Used to stitch together functional operators into a chain.\n   * @method pipe\n   * @return {Observable} the Observable result of all of the operators having\n   * been called in the order they were passed in.\n   *\n   * ## Example\n   *\n   * ```ts\n   * import { interval, filter, map, scan } from 'rxjs';\n   *\n   * interval(1000)\n   *   .pipe(\n   *     filter(x => x % 2 === 0),\n   *     map(x => x + x),\n   *     scan((acc, x) => acc + x)\n   *   )\n   *   .subscribe(x => console.log(x));\n   * ```\n   */\n  pipe(...operations: OperatorFunction<any, any>[]): Observable<any> {\n    return pipeFromArray(operations)(this);\n  }\n\n  /* tslint:disable:max-line-length */\n  /** @deprecated Replaced with {@link firstValueFrom} and {@link lastValueFrom}. Will be removed in v8. Details: https://rxjs.dev/deprecations/to-promise */\n  toPromise(): Promise<T | undefined>;\n  /** @deprecated Replaced with {@link firstValueFrom} and {@link lastValueFrom}. Will be removed in v8. Details: https://rxjs.dev/deprecations/to-promise */\n  toPromise(PromiseCtor: typeof Promise): Promise<T | undefined>;\n  /** @deprecated Replaced with {@link firstValueFrom} and {@link lastValueFrom}. Will be removed in v8. Details: https://rxjs.dev/deprecations/to-promise */\n  toPromise(PromiseCtor: PromiseConstructorLike): Promise<T | undefined>;\n  /* tslint:enable:max-line-length */\n\n  /**\n   * Subscribe to this Observable and get a Promise resolving on\n   * `complete` with the last emission (if any).\n   *\n   * **WARNING**: Only use this with observables you *know* will complete. If the source\n   * observable does not complete, you will end up with a promise that is hung up, and\n   * potentially all of the state of an async function hanging out in memory. To avoid\n   * this situation, look into adding something like {@link timeout}, {@link take},\n   * {@link takeWhile}, or {@link takeUntil} amongst others.\n   *\n   * @method toPromise\n   * @param [promiseCtor] a constructor function used to instantiate\n   * the Promise\n   * @return A Promise that resolves with the last value emit, or\n   * rejects on an error. If there were no emissions, Promise\n   * resolves with undefined.\n   * @deprecated Replaced with {@link firstValueFrom} and {@link lastValueFrom}. Will be removed in v8. Details: https://rxjs.dev/deprecations/to-promise\n   */\n  toPromise(promiseCtor?: PromiseConstructorLike): Promise<T | undefined> {\n    promiseCtor = getPromiseCtor(promiseCtor);\n\n    return new promiseCtor((resolve, reject) => {\n      let value: T | undefined;\n      this.subscribe(\n        (x: T) => (value = x),\n        (err: any) => reject(err),\n        () => resolve(value)\n      );\n    }) as Promise<T | undefined>;\n  }\n}\n\n/**\n * Decides between a passed promise constructor from consuming code,\n * A default configured promise constructor, and the native promise\n * constructor and returns it. If nothing can be found, it will throw\n * an error.\n * @param promiseCtor The optional promise constructor to passed by consuming code\n */\nfunction getPromiseCtor(promiseCtor: PromiseConstructorLike | undefined) {\n  return promiseCtor ?? config.Promise ?? Promise;\n}\n\nfunction isObserver<T>(value: any): value is Observer<T> {\n  return value && isFunction(value.next) && isFunction(value.error) && isFunction(value.complete);\n}\n\nfunction isSubscriber<T>(value: any): value is Subscriber<T> {\n  return (value && value instanceof Subscriber) || (isObserver(value) && isSubscription(value));\n}\n","import { Subject } from './Subject';\nimport { TimestampProvider } from './types';\nimport { Subscriber } from './Subscriber';\nimport { Subscription } from './Subscription';\nimport { dateTimestampProvider } from './scheduler/dateTimestampProvider';\n\n/**\n * A variant of {@link Subject} that \"replays\" old values to new subscribers by emitting them when they first subscribe.\n *\n * `ReplaySubject` has an internal buffer that will store a specified number of values that it has observed. Like `Subject`,\n * `ReplaySubject` \"observes\" values by having them passed to its `next` method. When it observes a value, it will store that\n * value for a time determined by the configuration of the `ReplaySubject`, as passed to its constructor.\n *\n * When a new subscriber subscribes to the `ReplaySubject` instance, it will synchronously emit all values in its buffer in\n * a First-In-First-Out (FIFO) manner. The `ReplaySubject` will also complete, if it has observed completion; and it will\n * error if it has observed an error.\n *\n * There are two main configuration items to be concerned with:\n *\n * 1. `bufferSize` - This will determine how many items are stored in the buffer, defaults to infinite.\n * 2. `windowTime` - The amount of time to hold a value in the buffer before removing it from the buffer.\n *\n * Both configurations may exist simultaneously. So if you would like to buffer a maximum of 3 values, as long as the values\n * are less than 2 seconds old, you could do so with a `new ReplaySubject(3, 2000)`.\n *\n * ### Differences with BehaviorSubject\n *\n * `BehaviorSubject` is similar to `new ReplaySubject(1)`, with a couple fo exceptions:\n *\n * 1. `BehaviorSubject` comes \"primed\" with a single value upon construction.\n * 2. `ReplaySubject` will replay values, even after observing an error, where `BehaviorSubject` will not.\n *\n * @see {@link Subject}\n * @see {@link BehaviorSubject}\n * @see {@link shareReplay}\n */\nexport class ReplaySubject<T> extends Subject<T> {\n  private _buffer: (T | number)[] = [];\n  private _infiniteTimeWindow = true;\n\n  /**\n   * @param bufferSize The size of the buffer to replay on subscription\n   * @param windowTime The amount of time the buffered items will say buffered\n   * @param timestampProvider An object with a `now()` method that provides the current timestamp. This is used to\n   * calculate the amount of time something has been buffered.\n   */\n  constructor(\n    private _bufferSize = Infinity,\n    private _windowTime = Infinity,\n    private _timestampProvider: TimestampProvider = dateTimestampProvider\n  ) {\n    super();\n    this._infiniteTimeWindow = _windowTime === Infinity;\n    this._bufferSize = Math.max(1, _bufferSize);\n    this._windowTime = Math.max(1, _windowTime);\n  }\n\n  next(value: T): void {\n    const { isStopped, _buffer, _infiniteTimeWindow, _timestampProvider, _windowTime } = this;\n    if (!isStopped) {\n      _buffer.push(value);\n      !_infiniteTimeWindow && _buffer.push(_timestampProvider.now() + _windowTime);\n    }\n    this._trimBuffer();\n    super.next(value);\n  }\n\n  /** @internal */\n  protected _subscribe(subscriber: Subscriber<T>): Subscription {\n    this._throwIfClosed();\n    this._trimBuffer();\n\n    const subscription = this._innerSubscribe(subscriber);\n\n    const { _infiniteTimeWindow, _buffer } = this;\n    // We use a copy here, so reentrant code does not mutate our array while we're\n    // emitting it to a new subscriber.\n    const copy = _buffer.slice();\n    for (let i = 0; i < copy.length && !subscriber.closed; i += _infiniteTimeWindow ? 1 : 2) {\n      subscriber.next(copy[i] as T);\n    }\n\n    this._checkFinalizedStatuses(subscriber);\n\n    return subscription;\n  }\n\n  private _trimBuffer() {\n    const { _bufferSize, _timestampProvider, _buffer, _infiniteTimeWindow } = this;\n    // If we don't have an infinite buffer size, and we're over the length,\n    // use splice to truncate the old buffer values off. Note that we have to\n    // double the size for instances where we're not using an infinite time window\n    // because we're storing the values and the timestamps in the same array.\n    const adjustedBufferSize = (_infiniteTimeWindow ? 1 : 2) * _bufferSize;\n    _bufferSize < Infinity && adjustedBufferSize < _buffer.length && _buffer.splice(0, _buffer.length - adjustedBufferSize);\n\n    // Now, if we're not in an infinite time window, remove all values where the time is\n    // older than what is allowed.\n    if (!_infiniteTimeWindow) {\n      const now = _timestampProvider.now();\n      let last = 0;\n      // Search the array for the first timestamp that isn't expired and\n      // truncate the buffer up to that point.\n      for (let i = 1; i < _buffer.length && (_buffer[i] as number) <= now; i += 2) {\n        last = i;\n      }\n      last && _buffer.splice(0, last + 1);\n    }\n  }\n}\n","import { Action } from './scheduler/Action';\nimport { Subscription } from './Subscription';\nimport { SchedulerLike, SchedulerAction } from './types';\nimport { dateTimestampProvider } from './scheduler/dateTimestampProvider';\n\n/**\n * An execution context and a data structure to order tasks and schedule their\n * execution. Provides a notion of (potentially virtual) time, through the\n * `now()` getter method.\n *\n * Each unit of work in a Scheduler is called an `Action`.\n *\n * ```ts\n * class Scheduler {\n *   now(): number;\n *   schedule(work, delay?, state?): Subscription;\n * }\n * ```\n *\n * @class Scheduler\n * @deprecated Scheduler is an internal implementation detail of RxJS, and\n * should not be used directly. Rather, create your own class and implement\n * {@link SchedulerLike}. Will be made internal in v8.\n */\nexport class Scheduler implements SchedulerLike {\n  public static now: () => number = dateTimestampProvider.now;\n\n  constructor(private schedulerActionCtor: typeof Action, now: () => number = Scheduler.now) {\n    this.now = now;\n  }\n\n  /**\n   * A getter method that returns a number representing the current time\n   * (at the time this function was called) according to the scheduler's own\n   * internal clock.\n   * @return {number} A number that represents the current time. May or may not\n   * have a relation to wall-clock time. May or may not refer to a time unit\n   * (e.g. milliseconds).\n   */\n  public now: () => number;\n\n  /**\n   * Schedules a function, `work`, for execution. May happen at some point in\n   * the future, according to the `delay` parameter, if specified. May be passed\n   * some context object, `state`, which will be passed to the `work` function.\n   *\n   * The given arguments will be processed an stored as an Action object in a\n   * queue of actions.\n   *\n   * @param {function(state: ?T): ?Subscription} work A function representing a\n   * task, or some unit of work to be executed by the Scheduler.\n   * @param {number} [delay] Time to wait before executing the work, where the\n   * time unit is implicit and defined by the Scheduler itself.\n   * @param {T} [state] Some contextual data that the `work` function uses when\n   * called by the Scheduler.\n   * @return {Subscription} A subscription in order to be able to unsubscribe\n   * the scheduled work.\n   */\n  public schedule<T>(work: (this: SchedulerAction<T>, state?: T) => void, delay: number = 0, state?: T): Subscription {\n    return new this.schedulerActionCtor<T>(this, work).schedule(state, delay);\n  }\n}\n","import { Operator } from './Operator';\nimport { Observable } from './Observable';\nimport { Subscriber } from './Subscriber';\nimport { Subscription, EMPTY_SUBSCRIPTION } from './Subscription';\nimport { Observer, SubscriptionLike, TeardownLogic } from './types';\nimport { ObjectUnsubscribedError } from './util/ObjectUnsubscribedError';\nimport { arrRemove } from './util/arrRemove';\nimport { errorContext } from './util/errorContext';\n\n/**\n * A Subject is a special type of Observable that allows values to be\n * multicasted to many Observers. Subjects are like EventEmitters.\n *\n * Every Subject is an Observable and an Observer. You can subscribe to a\n * Subject, and you can call next to feed values as well as error and complete.\n */\nexport class Subject<T> extends Observable<T> implements SubscriptionLike {\n  closed = false;\n\n  private currentObservers: Observer<T>[] | null = null;\n\n  /** @deprecated Internal implementation detail, do not use directly. Will be made internal in v8. */\n  observers: Observer<T>[] = [];\n  /** @deprecated Internal implementation detail, do not use directly. Will be made internal in v8. */\n  isStopped = false;\n  /** @deprecated Internal implementation detail, do not use directly. Will be made internal in v8. */\n  hasError = false;\n  /** @deprecated Internal implementation detail, do not use directly. Will be made internal in v8. */\n  thrownError: any = null;\n\n  /**\n   * Creates a \"subject\" by basically gluing an observer to an observable.\n   *\n   * @nocollapse\n   * @deprecated Recommended you do not use. Will be removed at some point in the future. Plans for replacement still under discussion.\n   */\n  static create: (...args: any[]) => any = <T>(destination: Observer<T>, source: Observable<T>): AnonymousSubject<T> => {\n    return new AnonymousSubject<T>(destination, source);\n  };\n\n  constructor() {\n    // NOTE: This must be here to obscure Observable's constructor.\n    super();\n  }\n\n  /** @deprecated Internal implementation detail, do not use directly. Will be made internal in v8. */\n  lift<R>(operator: Operator<T, R>): Observable<R> {\n    const subject = new AnonymousSubject(this, this);\n    subject.operator = operator as any;\n    return subject as any;\n  }\n\n  /** @internal */\n  protected _throwIfClosed() {\n    if (this.closed) {\n      throw new ObjectUnsubscribedError();\n    }\n  }\n\n  next(value: T) {\n    errorContext(() => {\n      this._throwIfClosed();\n      if (!this.isStopped) {\n        if (!this.currentObservers) {\n          this.currentObservers = Array.from(this.observers);\n        }\n        for (const observer of this.currentObservers) {\n          observer.next(value);\n        }\n      }\n    });\n  }\n\n  error(err: any) {\n    errorContext(() => {\n      this._throwIfClosed();\n      if (!this.isStopped) {\n        this.hasError = this.isStopped = true;\n        this.thrownError = err;\n        const { observers } = this;\n        while (observers.length) {\n          observers.shift()!.error(err);\n        }\n      }\n    });\n  }\n\n  complete() {\n    errorContext(() => {\n      this._throwIfClosed();\n      if (!this.isStopped) {\n        this.isStopped = true;\n        const { observers } = this;\n        while (observers.length) {\n          observers.shift()!.complete();\n        }\n      }\n    });\n  }\n\n  unsubscribe() {\n    this.isStopped = this.closed = true;\n    this.observers = this.currentObservers = null!;\n  }\n\n  get observed() {\n    return this.observers?.length > 0;\n  }\n\n  /** @internal */\n  protected _trySubscribe(subscriber: Subscriber<T>): TeardownLogic {\n    this._throwIfClosed();\n    return super._trySubscribe(subscriber);\n  }\n\n  /** @internal */\n  protected _subscribe(subscriber: Subscriber<T>): Subscription {\n    this._throwIfClosed();\n    this._checkFinalizedStatuses(subscriber);\n    return this._innerSubscribe(subscriber);\n  }\n\n  /** @internal */\n  protected _innerSubscribe(subscriber: Subscriber<any>) {\n    const { hasError, isStopped, observers } = this;\n    if (hasError || isStopped) {\n      return EMPTY_SUBSCRIPTION;\n    }\n    this.currentObservers = null;\n    observers.push(subscriber);\n    return new Subscription(() => {\n      this.currentObservers = null;\n      arrRemove(observers, subscriber);\n    });\n  }\n\n  /** @internal */\n  protected _checkFinalizedStatuses(subscriber: Subscriber<any>) {\n    const { hasError, thrownError, isStopped } = this;\n    if (hasError) {\n      subscriber.error(thrownError);\n    } else if (isStopped) {\n      subscriber.complete();\n    }\n  }\n\n  /**\n   * Creates a new Observable with this Subject as the source. You can do this\n   * to create customize Observer-side logic of the Subject and conceal it from\n   * code that uses the Observable.\n   * @return {Observable} Observable that the Subject casts to\n   */\n  asObservable(): Observable<T> {\n    const observable: any = new Observable<T>();\n    observable.source = this;\n    return observable;\n  }\n}\n\n/**\n * @class AnonymousSubject<T>\n */\nexport class AnonymousSubject<T> extends Subject<T> {\n  constructor(\n    /** @deprecated Internal implementation detail, do not use directly. Will be made internal in v8. */\n    public destination?: Observer<T>,\n    source?: Observable<T>\n  ) {\n    super();\n    this.source = source;\n  }\n\n  next(value: T) {\n    this.destination?.next?.(value);\n  }\n\n  error(err: any) {\n    this.destination?.error?.(err);\n  }\n\n  complete() {\n    this.destination?.complete?.();\n  }\n\n  /** @internal */\n  protected _subscribe(subscriber: Subscriber<T>): Subscription {\n    return this.source?.subscribe(subscriber) ?? EMPTY_SUBSCRIPTION;\n  }\n}\n","import { isFunction } from './util/isFunction';\nimport { Observer, ObservableNotification } from './types';\nimport { isSubscription, Subscription } from './Subscription';\nimport { config } from './config';\nimport { reportUnhandledError } from './util/reportUnhandledError';\nimport { noop } from './util/noop';\nimport { nextNotification, errorNotification, COMPLETE_NOTIFICATION } from './NotificationFactories';\nimport { timeoutProvider } from './scheduler/timeoutProvider';\nimport { captureError } from './util/errorContext';\n\n/**\n * Implements the {@link Observer} interface and extends the\n * {@link Subscription} class. While the {@link Observer} is the public API for\n * consuming the values of an {@link Observable}, all Observers get converted to\n * a Subscriber, in order to provide Subscription-like capabilities such as\n * `unsubscribe`. Subscriber is a common type in RxJS, and crucial for\n * implementing operators, but it is rarely used as a public API.\n *\n * @class Subscriber<T>\n */\nexport class Subscriber<T> extends Subscription implements Observer<T> {\n  /**\n   * A static factory for a Subscriber, given a (potentially partial) definition\n   * of an Observer.\n   * @param next The `next` callback of an Observer.\n   * @param error The `error` callback of an\n   * Observer.\n   * @param complete The `complete` callback of an\n   * Observer.\n   * @return A Subscriber wrapping the (partially defined)\n   * Observer represented by the given arguments.\n   * @nocollapse\n   * @deprecated Do not use. Will be removed in v8. There is no replacement for this\n   * method, and there is no reason to be creating instances of `Subscriber` directly.\n   * If you have a specific use case, please file an issue.\n   */\n  static create<T>(next?: (x?: T) => void, error?: (e?: any) => void, complete?: () => void): Subscriber<T> {\n    return new SafeSubscriber(next, error, complete);\n  }\n\n  /** @deprecated Internal implementation detail, do not use directly. Will be made internal in v8. */\n  protected isStopped: boolean = false;\n  /** @deprecated Internal implementation detail, do not use directly. Will be made internal in v8. */\n  protected destination: Subscriber<any> | Observer<any>; // this `any` is the escape hatch to erase extra type param (e.g. R)\n\n  /**\n   * @deprecated Internal implementation detail, do not use directly. Will be made internal in v8.\n   * There is no reason to directly create an instance of Subscriber. This type is exported for typings reasons.\n   */\n  constructor(destination?: Subscriber<any> | Observer<any>) {\n    super();\n    if (destination) {\n      this.destination = destination;\n      // Automatically chain subscriptions together here.\n      // if destination is a Subscription, then it is a Subscriber.\n      if (isSubscription(destination)) {\n        destination.add(this);\n      }\n    } else {\n      this.destination = EMPTY_OBSERVER;\n    }\n  }\n\n  /**\n   * The {@link Observer} callback to receive notifications of type `next` from\n   * the Observable, with a value. The Observable may call this method 0 or more\n   * times.\n   * @param {T} [value] The `next` value.\n   * @return {void}\n   */\n  next(value?: T): void {\n    if (this.isStopped) {\n      handleStoppedNotification(nextNotification(value), this);\n    } else {\n      this._next(value!);\n    }\n  }\n\n  /**\n   * The {@link Observer} callback to receive notifications of type `error` from\n   * the Observable, with an attached `Error`. Notifies the Observer that\n   * the Observable has experienced an error condition.\n   * @param {any} [err] The `error` exception.\n   * @return {void}\n   */\n  error(err?: any): void {\n    if (this.isStopped) {\n      handleStoppedNotification(errorNotification(err), this);\n    } else {\n      this.isStopped = true;\n      this._error(err);\n    }\n  }\n\n  /**\n   * The {@link Observer} callback to receive a valueless notification of type\n   * `complete` from the Observable. Notifies the Observer that the Observable\n   * has finished sending push-based notifications.\n   * @return {void}\n   */\n  complete(): void {\n    if (this.isStopped) {\n      handleStoppedNotification(COMPLETE_NOTIFICATION, this);\n    } else {\n      this.isStopped = true;\n      this._complete();\n    }\n  }\n\n  unsubscribe(): void {\n    if (!this.closed) {\n      this.isStopped = true;\n      super.unsubscribe();\n      this.destination = null!;\n    }\n  }\n\n  protected _next(value: T): void {\n    this.destination.next(value);\n  }\n\n  protected _error(err: any): void {\n    try {\n      this.destination.error(err);\n    } finally {\n      this.unsubscribe();\n    }\n  }\n\n  protected _complete(): void {\n    try {\n      this.destination.complete();\n    } finally {\n      this.unsubscribe();\n    }\n  }\n}\n\n/**\n * This bind is captured here because we want to be able to have\n * compatibility with monoid libraries that tend to use a method named\n * `bind`. In particular, a library called Monio requires this.\n */\nconst _bind = Function.prototype.bind;\n\nfunction bind<Fn extends (...args: any[]) => any>(fn: Fn, thisArg: any): Fn {\n  return _bind.call(fn, thisArg);\n}\n\n/**\n * Internal optimization only, DO NOT EXPOSE.\n * @internal\n */\nclass ConsumerObserver<T> implements Observer<T> {\n  constructor(private partialObserver: Partial<Observer<T>>) {}\n\n  next(value: T): void {\n    const { partialObserver } = this;\n    if (partialObserver.next) {\n      try {\n        partialObserver.next(value);\n      } catch (error) {\n        handleUnhandledError(error);\n      }\n    }\n  }\n\n  error(err: any): void {\n    const { partialObserver } = this;\n    if (partialObserver.error) {\n      try {\n        partialObserver.error(err);\n      } catch (error) {\n        handleUnhandledError(error);\n      }\n    } else {\n      handleUnhandledError(err);\n    }\n  }\n\n  complete(): void {\n    const { partialObserver } = this;\n    if (partialObserver.complete) {\n      try {\n        partialObserver.complete();\n      } catch (error) {\n        handleUnhandledError(error);\n      }\n    }\n  }\n}\n\nexport class SafeSubscriber<T> extends Subscriber<T> {\n  constructor(\n    observerOrNext?: Partial<Observer<T>> | ((value: T) => void) | null,\n    error?: ((e?: any) => void) | null,\n    complete?: (() => void) | null\n  ) {\n    super();\n\n    let partialObserver: Partial<Observer<T>>;\n    if (isFunction(observerOrNext) || !observerOrNext) {\n      // The first argument is a function, not an observer. The next\n      // two arguments *could* be observers, or they could be empty.\n      partialObserver = {\n        next: (observerOrNext ?? undefined) as (((value: T) => void) | undefined),\n        error: error ?? undefined,\n        complete: complete ?? undefined,\n      };\n    } else {\n      // The first argument is a partial observer.\n      let context: any;\n      if (this && config.useDeprecatedNextContext) {\n        // This is a deprecated path that made `this.unsubscribe()` available in\n        // next handler functions passed to subscribe. This only exists behind a flag\n        // now, as it is *very* slow.\n        context = Object.create(observerOrNext);\n        context.unsubscribe = () => this.unsubscribe();\n        partialObserver = {\n          next: observerOrNext.next && bind(observerOrNext.next, context),\n          error: observerOrNext.error && bind(observerOrNext.error, context),\n          complete: observerOrNext.complete && bind(observerOrNext.complete, context),\n        };\n      } else {\n        // The \"normal\" path. Just use the partial observer directly.\n        partialObserver = observerOrNext;\n      }\n    }\n\n    // Wrap the partial observer to ensure it's a full observer, and\n    // make sure proper error handling is accounted for.\n    this.destination = new ConsumerObserver(partialObserver);\n  }\n}\n\nfunction handleUnhandledError(error: any) {\n  if (config.useDeprecatedSynchronousErrorHandling) {\n    captureError(error);\n  } else {\n    // Ideal path, we report this as an unhandled error,\n    // which is thrown on a new call stack.\n    reportUnhandledError(error);\n  }\n}\n\n/**\n * An error handler used when no error handler was supplied\n * to the SafeSubscriber -- meaning no error handler was supplied\n * do the `subscribe` call on our observable.\n * @param err The error to handle\n */\nfunction defaultErrorHandler(err: any) {\n  throw err;\n}\n\n/**\n * A handler for notifications that cannot be sent to a stopped subscriber.\n * @param notification The notification being sent\n * @param subscriber The stopped subscriber\n */\nfunction handleStoppedNotification(notification: ObservableNotification<any>, subscriber: Subscriber<any>) {\n  const { onStoppedNotification } = config;\n  onStoppedNotification && timeoutProvider.setTimeout(() => onStoppedNotification(notification, subscriber));\n}\n\n/**\n * The observer used as a stub for subscriptions where the user did not\n * pass any arguments to `subscribe`. Comes with the default error handling\n * behavior.\n */\nexport const EMPTY_OBSERVER: Readonly<Observer<any>> & { closed: true } = {\n  closed: true,\n  next: noop,\n  error: defaultErrorHandler,\n  complete: noop,\n};\n","import { isFunction } from './util/isFunction';\nimport { UnsubscriptionError } from './util/UnsubscriptionError';\nimport { SubscriptionLike, TeardownLogic, Unsubscribable } from './types';\nimport { arrRemove } from './util/arrRemove';\n\n/**\n * Represents a disposable resource, such as the execution of an Observable. A\n * Subscription has one important method, `unsubscribe`, that takes no argument\n * and just disposes the resource held by the subscription.\n *\n * Additionally, subscriptions may be grouped together through the `add()`\n * method, which will attach a child Subscription to the current Subscription.\n * When a Subscription is unsubscribed, all its children (and its grandchildren)\n * will be unsubscribed as well.\n *\n * @class Subscription\n */\nexport class Subscription implements SubscriptionLike {\n  /** @nocollapse */\n  public static EMPTY = (() => {\n    const empty = new Subscription();\n    empty.closed = true;\n    return empty;\n  })();\n\n  /**\n   * A flag to indicate whether this Subscription has already been unsubscribed.\n   */\n  public closed = false;\n\n  private _parentage: Subscription[] | Subscription | null = null;\n\n  /**\n   * The list of registered finalizers to execute upon unsubscription. Adding and removing from this\n   * list occurs in the {@link #add} and {@link #remove} methods.\n   */\n  private _finalizers: Exclude<TeardownLogic, void>[] | null = null;\n\n  /**\n   * @param initialTeardown A function executed first as part of the finalization\n   * process that is kicked off when {@link #unsubscribe} is called.\n   */\n  constructor(private initialTeardown?: () => void) {}\n\n  /**\n   * Disposes the resources held by the subscription. May, for instance, cancel\n   * an ongoing Observable execution or cancel any other type of work that\n   * started when the Subscription was created.\n   * @return {void}\n   */\n  unsubscribe(): void {\n    let errors: any[] | undefined;\n\n    if (!this.closed) {\n      this.closed = true;\n\n      // Remove this from it's parents.\n      const { _parentage } = this;\n      if (_parentage) {\n        this._parentage = null;\n        if (Array.isArray(_parentage)) {\n          for (const parent of _parentage) {\n            parent.remove(this);\n          }\n        } else {\n          _parentage.remove(this);\n        }\n      }\n\n      const { initialTeardown: initialFinalizer } = this;\n      if (isFunction(initialFinalizer)) {\n        try {\n          initialFinalizer();\n        } catch (e) {\n          errors = e instanceof UnsubscriptionError ? e.errors : [e];\n        }\n      }\n\n      const { _finalizers } = this;\n      if (_finalizers) {\n        this._finalizers = null;\n        for (const finalizer of _finalizers) {\n          try {\n            execFinalizer(finalizer);\n          } catch (err) {\n            errors = errors ?? [];\n            if (err instanceof UnsubscriptionError) {\n              errors = [...errors, ...err.errors];\n            } else {\n              errors.push(err);\n            }\n          }\n        }\n      }\n\n      if (errors) {\n        throw new UnsubscriptionError(errors);\n      }\n    }\n  }\n\n  /**\n   * Adds a finalizer to this subscription, so that finalization will be unsubscribed/called\n   * when this subscription is unsubscribed. If this subscription is already {@link #closed},\n   * because it has already been unsubscribed, then whatever finalizer is passed to it\n   * will automatically be executed (unless the finalizer itself is also a closed subscription).\n   *\n   * Closed Subscriptions cannot be added as finalizers to any subscription. Adding a closed\n   * subscription to a any subscription will result in no operation. (A noop).\n   *\n   * Adding a subscription to itself, or adding `null` or `undefined` will not perform any\n   * operation at all. (A noop).\n   *\n   * `Subscription` instances that are added to this instance will automatically remove themselves\n   * if they are unsubscribed. Functions and {@link Unsubscribable} objects that you wish to remove\n   * will need to be removed manually with {@link #remove}\n   *\n   * @param teardown The finalization logic to add to this subscription.\n   */\n  add(teardown: TeardownLogic): void {\n    // Only add the finalizer if it's not undefined\n    // and don't add a subscription to itself.\n    if (teardown && teardown !== this) {\n      if (this.closed) {\n        // If this subscription is already closed,\n        // execute whatever finalizer is handed to it automatically.\n        execFinalizer(teardown);\n      } else {\n        if (teardown instanceof Subscription) {\n          // We don't add closed subscriptions, and we don't add the same subscription\n          // twice. Subscription unsubscribe is idempotent.\n          if (teardown.closed || teardown._hasParent(this)) {\n            return;\n          }\n          teardown._addParent(this);\n        }\n        (this._finalizers = this._finalizers ?? []).push(teardown);\n      }\n    }\n  }\n\n  /**\n   * Checks to see if a this subscription already has a particular parent.\n   * This will signal that this subscription has already been added to the parent in question.\n   * @param parent the parent to check for\n   */\n  private _hasParent(parent: Subscription) {\n    const { _parentage } = this;\n    return _parentage === parent || (Array.isArray(_parentage) && _parentage.includes(parent));\n  }\n\n  /**\n   * Adds a parent to this subscription so it can be removed from the parent if it\n   * unsubscribes on it's own.\n   *\n   * NOTE: THIS ASSUMES THAT {@link _hasParent} HAS ALREADY BEEN CHECKED.\n   * @param parent The parent subscription to add\n   */\n  private _addParent(parent: Subscription) {\n    const { _parentage } = this;\n    this._parentage = Array.isArray(_parentage) ? (_parentage.push(parent), _parentage) : _parentage ? [_parentage, parent] : parent;\n  }\n\n  /**\n   * Called on a child when it is removed via {@link #remove}.\n   * @param parent The parent to remove\n   */\n  private _removeParent(parent: Subscription) {\n    const { _parentage } = this;\n    if (_parentage === parent) {\n      this._parentage = null;\n    } else if (Array.isArray(_parentage)) {\n      arrRemove(_parentage, parent);\n    }\n  }\n\n  /**\n   * Removes a finalizer from this subscription that was previously added with the {@link #add} method.\n   *\n   * Note that `Subscription` instances, when unsubscribed, will automatically remove themselves\n   * from every other `Subscription` they have been added to. This means that using the `remove` method\n   * is not a common thing and should be used thoughtfully.\n   *\n   * If you add the same finalizer instance of a function or an unsubscribable object to a `Subcription` instance\n   * more than once, you will need to call `remove` the same number of times to remove all instances.\n   *\n   * All finalizer instances are removed to free up memory upon unsubscription.\n   *\n   * @param teardown The finalizer to remove from this subscription\n   */\n  remove(teardown: Exclude<TeardownLogic, void>): void {\n    const { _finalizers } = this;\n    _finalizers && arrRemove(_finalizers, teardown);\n\n    if (teardown instanceof Subscription) {\n      teardown._removeParent(this);\n    }\n  }\n}\n\nexport const EMPTY_SUBSCRIPTION = Subscription.EMPTY;\n\nexport function isSubscription(value: any): value is Subscription {\n  return (\n    value instanceof Subscription ||\n    (value && 'closed' in value && isFunction(value.remove) && isFunction(value.add) && isFunction(value.unsubscribe))\n  );\n}\n\nfunction execFinalizer(finalizer: Unsubscribable | (() => void)) {\n  if (isFunction(finalizer)) {\n    finalizer();\n  } else {\n    finalizer.unsubscribe();\n  }\n}\n","import { Subscriber } from './Subscriber';\nimport { ObservableNotification } from './types';\n\n/**\n * The {@link GlobalConfig} object for RxJS. It is used to configure things\n * like how to react on unhandled errors.\n */\nexport const config: GlobalConfig = {\n  onUnhandledError: null,\n  onStoppedNotification: null,\n  Promise: undefined,\n  useDeprecatedSynchronousErrorHandling: false,\n  useDeprecatedNextContext: false,\n};\n\n/**\n * The global configuration object for RxJS, used to configure things\n * like how to react on unhandled errors. Accessible via {@link config}\n * object.\n */\nexport interface GlobalConfig {\n  /**\n   * A registration point for unhandled errors from RxJS. These are errors that\n   * cannot were not handled by consuming code in the usual subscription path. For\n   * example, if you have this configured, and you subscribe to an observable without\n   * providing an error handler, errors from that subscription will end up here. This\n   * will _always_ be called asynchronously on another job in the runtime. This is because\n   * we do not want errors thrown in this user-configured handler to interfere with the\n   * behavior of the library.\n   */\n  onUnhandledError: ((err: any) => void) | null;\n\n  /**\n   * A registration point for notifications that cannot be sent to subscribers because they\n   * have completed, errored or have been explicitly unsubscribed. By default, next, complete\n   * and error notifications sent to stopped subscribers are noops. However, sometimes callers\n   * might want a different behavior. For example, with sources that attempt to report errors\n   * to stopped subscribers, a caller can configure RxJS to throw an unhandled error instead.\n   * This will _always_ be called asynchronously on another job in the runtime. This is because\n   * we do not want errors thrown in this user-configured handler to interfere with the\n   * behavior of the library.\n   */\n  onStoppedNotification: ((notification: ObservableNotification<any>, subscriber: Subscriber<any>) => void) | null;\n\n  /**\n   * The promise constructor used by default for {@link Observable#toPromise toPromise} and {@link Observable#forEach forEach}\n   * methods.\n   *\n   * @deprecated As of version 8, RxJS will no longer support this sort of injection of a\n   * Promise constructor. If you need a Promise implementation other than native promises,\n   * please polyfill/patch Promise as you see appropriate. Will be removed in v8.\n   */\n  Promise?: PromiseConstructorLike;\n\n  /**\n   * If true, turns on synchronous error rethrowing, which is a deprecated behavior\n   * in v6 and higher. This behavior enables bad patterns like wrapping a subscribe\n   * call in a try/catch block. It also enables producer interference, a nasty bug\n   * where a multicast can be broken for all observers by a downstream consumer with\n   * an unhandled error. DO NOT USE THIS FLAG UNLESS IT'S NEEDED TO BUY TIME\n   * FOR MIGRATION REASONS.\n   *\n   * @deprecated As of version 8, RxJS will no longer support synchronous throwing\n   * of unhandled errors. All errors will be thrown on a separate call stack to prevent bad\n   * behaviors described above. Will be removed in v8.\n   */\n  useDeprecatedSynchronousErrorHandling: boolean;\n\n  /**\n   * If true, enables an as-of-yet undocumented feature from v5: The ability to access\n   * `unsubscribe()` via `this` context in `next` functions created in observers passed\n   * to `subscribe`.\n   *\n   * This is being removed because the performance was severely problematic, and it could also cause\n   * issues when types other than POJOs are passed to subscribe as subscribers, as they will likely have\n   * their `this` context overwritten.\n   *\n   * @deprecated As of version 8, RxJS will no longer support altering the\n   * context of next functions provided as part of an observer to Subscribe. Instead,\n   * you will have access to a subscription or a signal or token that will allow you to do things like\n   * unsubscribe and test closed status. Will be removed in v8.\n   */\n  useDeprecatedNextContext: boolean;\n}\n","import { Observable } from './Observable';\nimport { EmptyError } from './util/EmptyError';\nimport { SafeSubscriber } from './Subscriber';\n\nexport interface FirstValueFromConfig<T> {\n  defaultValue: T;\n}\n\nexport function firstValueFrom<T, D>(source: Observable<T>, config: FirstValueFromConfig<D>): Promise<T | D>;\nexport function firstValueFrom<T>(source: Observable<T>): Promise<T>;\n\n/**\n * Converts an observable to a promise by subscribing to the observable,\n * and returning a promise that will resolve as soon as the first value\n * arrives from the observable. The subscription will then be closed.\n *\n * If the observable stream completes before any values were emitted, the\n * returned promise will reject with {@link EmptyError} or will resolve\n * with the default value if a default was specified.\n *\n * If the observable stream emits an error, the returned promise will reject\n * with that error.\n *\n * **WARNING**: Only use this with observables you *know* will emit at least one value,\n * *OR* complete. If the source observable does not emit one value or complete, you will\n * end up with a promise that is hung up, and potentially all of the state of an\n * async function hanging out in memory. To avoid this situation, look into adding\n * something like {@link timeout}, {@link take}, {@link takeWhile}, or {@link takeUntil}\n * amongst others.\n *\n * ## Example\n *\n * Wait for the first value from a stream and emit it from a promise in\n * an async function\n *\n * ```ts\n * import { interval, firstValueFrom } from 'rxjs';\n *\n * async function execute() {\n *   const source$ = interval(2000);\n *   const firstNumber = await firstValueFrom(source$);\n *   console.log(`The first number is ${ firstNumber }`);\n * }\n *\n * execute();\n *\n * // Expected output:\n * // 'The first number is 0'\n * ```\n *\n * @see {@link lastValueFrom}\n *\n * @param source the observable to convert to a promise\n * @param config a configuration object to define the `defaultValue` to use if the source completes without emitting a value\n */\nexport function firstValueFrom<T, D>(source: Observable<T>, config?: FirstValueFromConfig<D>): Promise<T | D> {\n  const hasConfig = typeof config === 'object';\n  return new Promise<T | D>((resolve, reject) => {\n    const subscriber = new SafeSubscriber<T>({\n      next: (value) => {\n        resolve(value);\n        subscriber.unsubscribe();\n      },\n      error: reject,\n      complete: () => {\n        if (hasConfig) {\n          resolve(config!.defaultValue);\n        } else {\n          reject(new EmptyError());\n        }\n      },\n    });\n    source.subscribe(subscriber);\n  });\n}\n","import { Observable } from './Observable';\nimport { EmptyError } from './util/EmptyError';\n\nexport interface LastValueFromConfig<T> {\n  defaultValue: T;\n}\n\nexport function lastValueFrom<T, D>(source: Observable<T>, config: LastValueFromConfig<D>): Promise<T | D>;\nexport function lastValueFrom<T>(source: Observable<T>): Promise<T>;\n\n/**\n * Converts an observable to a promise by subscribing to the observable,\n * waiting for it to complete, and resolving the returned promise with the\n * last value from the observed stream.\n *\n * If the observable stream completes before any values were emitted, the\n * returned promise will reject with {@link EmptyError} or will resolve\n * with the default value if a default was specified.\n *\n * If the observable stream emits an error, the returned promise will reject\n * with that error.\n *\n * **WARNING**: Only use this with observables you *know* will complete. If the source\n * observable does not complete, you will end up with a promise that is hung up, and\n * potentially all of the state of an async function hanging out in memory. To avoid\n * this situation, look into adding something like {@link timeout}, {@link take},\n * {@link takeWhile}, or {@link takeUntil} amongst others.\n *\n * ## Example\n *\n * Wait for the last value from a stream and emit it from a promise in\n * an async function\n *\n * ```ts\n * import { interval, take, lastValueFrom } from 'rxjs';\n *\n * async function execute() {\n *   const source$ = interval(2000).pipe(take(10));\n *   const finalNumber = await lastValueFrom(source$);\n *   console.log(`The final number is ${ finalNumber }`);\n * }\n *\n * execute();\n *\n * // Expected output:\n * // 'The final number is 9'\n * ```\n *\n * @see {@link firstValueFrom}\n *\n * @param source the observable to convert to a promise\n * @param config a configuration object to define the `defaultValue` to use if the source completes without emitting a value\n */\nexport function lastValueFrom<T, D>(source: Observable<T>, config?: LastValueFromConfig<D>): Promise<T | D> {\n  const hasConfig = typeof config === 'object';\n  return new Promise<T | D>((resolve, reject) => {\n    let _hasValue = false;\n    let _value: T;\n    source.subscribe({\n      next: (value) => {\n        _value = value;\n        _hasValue = true;\n      },\n      error: reject,\n      complete: () => {\n        if (_hasValue) {\n          resolve(_value);\n        } else if (hasConfig) {\n          resolve(config!.defaultValue);\n        } else {\n          reject(new EmptyError());\n        }\n      },\n    });\n  });\n}\n","import { Subject } from '../Subject';\nimport { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { Subscription } from '../Subscription';\nimport { refCount as higherOrderRefCount } from '../operators/refCount';\nimport { createOperatorSubscriber } from '../operators/OperatorSubscriber';\nimport { hasLift } from '../util/lift';\n\n/**\n * @class ConnectableObservable<T>\n * @deprecated Will be removed in v8. Use {@link connectable} to create a connectable observable.\n * If you are using the `refCount` method of `ConnectableObservable`, use the {@link share} operator\n * instead.\n * Details: https://rxjs.dev/deprecations/multicasting\n */\nexport class ConnectableObservable<T> extends Observable<T> {\n  protected _subject: Subject<T> | null = null;\n  protected _refCount: number = 0;\n  protected _connection: Subscription | null = null;\n\n  /**\n   * @param source The source observable\n   * @param subjectFactory The factory that creates the subject used internally.\n   * @deprecated Will be removed in v8. Use {@link connectable} to create a connectable observable.\n   * `new ConnectableObservable(source, factory)` is equivalent to\n   * `connectable(source, { connector: factory })`.\n   * When the `refCount()` method is needed, the {@link share} operator should be used instead:\n   * `new ConnectableObservable(source, factory).refCount()` is equivalent to\n   * `source.pipe(share({ connector: factory }))`.\n   * Details: https://rxjs.dev/deprecations/multicasting\n   */\n  constructor(public source: Observable<T>, protected subjectFactory: () => Subject<T>) {\n    super();\n    // If we have lift, monkey patch that here. This is done so custom observable\n    // types will compose through multicast. Otherwise the resulting observable would\n    // simply be an instance of `ConnectableObservable`.\n    if (hasLift(source)) {\n      this.lift = source.lift;\n    }\n  }\n\n  /** @internal */\n  protected _subscribe(subscriber: Subscriber<T>) {\n    return this.getSubject().subscribe(subscriber);\n  }\n\n  protected getSubject(): Subject<T> {\n    const subject = this._subject;\n    if (!subject || subject.isStopped) {\n      this._subject = this.subjectFactory();\n    }\n    return this._subject!;\n  }\n\n  protected _teardown() {\n    this._refCount = 0;\n    const { _connection } = this;\n    this._subject = this._connection = null;\n    _connection?.unsubscribe();\n  }\n\n  /**\n   * @deprecated {@link ConnectableObservable} will be removed in v8. Use {@link connectable} instead.\n   * Details: https://rxjs.dev/deprecations/multicasting\n   */\n  connect(): Subscription {\n    let connection = this._connection;\n    if (!connection) {\n      connection = this._connection = new Subscription();\n      const subject = this.getSubject();\n      connection.add(\n        this.source.subscribe(\n          createOperatorSubscriber(\n            subject as any,\n            undefined,\n            () => {\n              this._teardown();\n              subject.complete();\n            },\n            (err) => {\n              this._teardown();\n              subject.error(err);\n            },\n            () => this._teardown()\n          )\n        )\n      );\n\n      if (connection.closed) {\n        this._connection = null;\n        connection = Subscription.EMPTY;\n      }\n    }\n    return connection;\n  }\n\n  /**\n   * @deprecated {@link ConnectableObservable} will be removed in v8. Use the {@link share} operator instead.\n   * Details: https://rxjs.dev/deprecations/multicasting\n   */\n  refCount(): Observable<T> {\n    return higherOrderRefCount()(this) as Observable<T>;\n  }\n}\n","/* @prettier */\nimport { SchedulerLike } from '../types';\nimport { Observable } from '../Observable';\nimport { bindCallbackInternals } from './bindCallbackInternals';\n\nexport function bindCallback(\n  callbackFunc: (...args: any[]) => void,\n  resultSelector: (...args: any[]) => any,\n  scheduler?: SchedulerLike\n): (...args: any[]) => Observable<any>;\n\n// args is the arguments array and we push the callback on the rest tuple since the rest parameter must be last (only item) in a parameter list\nexport function bindCallback<A extends readonly unknown[], R extends readonly unknown[]>(\n  callbackFunc: (...args: [...A, (...res: R) => void]) => void,\n  schedulerLike?: SchedulerLike\n): (...arg: A) => Observable<R extends [] ? void : R extends [any] ? R[0] : R>;\n\n/**\n * Converts a callback API to a function that returns an Observable.\n *\n * <span class=\"informal\">Give it a function `f` of type `f(x, callback)` and\n * it will return a function `g` that when called as `g(x)` will output an\n * Observable.</span>\n *\n * `bindCallback` is not an operator because its input and output are not\n * Observables. The input is a function `func` with some parameters. The\n * last parameter must be a callback function that `func` calls when it is\n * done.\n *\n * The output of `bindCallback` is a function that takes the same parameters\n * as `func`, except the last one (the callback). When the output function\n * is called with arguments it will return an Observable. If function `func`\n * calls its callback with one argument, the Observable will emit that value.\n * If on the other hand the callback is called with multiple values the resulting\n * Observable will emit an array with said values as arguments.\n *\n * It is **very important** to remember that input function `func` is not called\n * when the output function is, but rather when the Observable returned by the output\n * function is subscribed. This means if `func` makes an AJAX request, that request\n * will be made every time someone subscribes to the resulting Observable, but not before.\n *\n * The last optional parameter - `scheduler` - can be used to control when the call\n * to `func` happens after someone subscribes to Observable, as well as when results\n * passed to callback will be emitted. By default, the subscription to an Observable calls `func`\n * synchronously, but using {@link asyncScheduler} as the last parameter will defer the call to `func`,\n * just like wrapping the call in `setTimeout` with a timeout of `0` would. If you were to use the async Scheduler\n * and call `subscribe` on the output Observable, all function calls that are currently executing\n * will end before `func` is invoked.\n *\n * By default, results passed to the callback are emitted immediately after `func` invokes the callback.\n * In particular, if the callback is called synchronously, then the subscription of the resulting Observable\n * will call the `next` function synchronously as well.  If you want to defer that call,\n * you may use {@link asyncScheduler} just as before.  This means that by using `Scheduler.async` you can\n * ensure that `func` always calls its callback asynchronously, thus avoiding terrifying Zalgo.\n *\n * Note that the Observable created by the output function will always emit a single value\n * and then complete immediately. If `func` calls the callback multiple times, values from subsequent\n * calls will not appear in the stream. If you need to listen for multiple calls,\n *  you probably want to use {@link fromEvent} or {@link fromEventPattern} instead.\n *\n * If `func` depends on some context (`this` property) and is not already bound, the context of `func`\n * will be the context that the output function has at call time. In particular, if `func`\n * is called as a method of some objec and if `func` is not already bound, in order to preserve the context\n * it is recommended that the context of the output function is set to that object as well.\n *\n * If the input function calls its callback in the \"node style\" (i.e. first argument to callback is\n * optional error parameter signaling whether the call failed or not), {@link bindNodeCallback}\n * provides convenient error handling and probably is a better choice.\n * `bindCallback` will treat such functions the same as any other and error parameters\n * (whether passed or not) will always be interpreted as regular callback argument.\n *\n * ## Examples\n *\n * ### Convert jQuery's getJSON to an Observable API\n * ```ts\n * import { bindCallback } from 'rxjs';\n * import * as jQuery from 'jquery';\n *\n * // Suppose we have jQuery.getJSON('/my/url', callback)\n * const getJSONAsObservable = bindCallback(jQuery.getJSON);\n * const result = getJSONAsObservable('/my/url');\n * result.subscribe(x => console.log(x), e => console.error(e));\n * ```\n *\n * ### Receive an array of arguments passed to a callback\n * ```ts\n * import { bindCallback } from 'rxjs';\n *\n * const someFunction = (cb) => {\n *   cb(5, 'some string', {someProperty: 'someValue'})\n * };\n *\n * const boundSomeFunction = bindCallback(someFunction);\n * boundSomeFunction(12, 10).subscribe(values => {\n *   console.log(values); // [22, 2]\n * });\n * ```\n *\n * ### Compare behaviour with and without async Scheduler\n * ```ts\n * import { bindCallback, asyncScheduler } from 'rxjs';\n *\n * function iCallMyCallbackSynchronously(cb) {\n *   cb();\n * }\n *\n * const boundSyncFn = bindCallback(iCallMyCallbackSynchronously);\n * const boundAsyncFn = bindCallback(iCallMyCallbackSynchronously, null, asyncScheduler);\n *\n * boundSyncFn().subscribe(() => console.log('I was sync!'));\n * boundAsyncFn().subscribe(() => console.log('I was async!'));\n * console.log('This happened...');\n *\n * // Logs:\n * // I was sync!\n * // This happened...\n * // I was async!\n * ```\n *\n * ### Use bindCallback on an object method\n * ```ts\n * import { bindCallback } from 'rxjs';\n *\n * const boundMethod = bindCallback(someObject.methodWithCallback);\n * boundMethod\n *   .call(someObject) // make sure methodWithCallback has access to someObject\n *   .subscribe(subscriber);\n * ```\n *\n * @see {@link bindNodeCallback}\n * @see {@link from}\n *\n * @param {function} func A function with a callback as the last parameter.\n * @param {SchedulerLike} [scheduler] The scheduler on which to schedule the\n * callbacks.\n * @return {function(...params: *): Observable} A function which returns the\n * Observable that delivers the same values the callback would deliver.\n */\nexport function bindCallback(\n  callbackFunc: (...args: [...any[], (...res: any) => void]) => void,\n  resultSelector?: ((...args: any[]) => any) | SchedulerLike,\n  scheduler?: SchedulerLike\n): (...args: any[]) => Observable<unknown> {\n  return bindCallbackInternals(false, callbackFunc, resultSelector, scheduler);\n}\n","import { SchedulerLike } from '../types';\nimport { isScheduler } from '../util/isScheduler';\nimport { Observable } from '../Observable';\nimport { subscribeOn } from '../operators/subscribeOn';\nimport { mapOneOrManyArgs } from '../util/mapOneOrManyArgs';\nimport { observeOn } from '../operators/observeOn';\nimport { AsyncSubject } from '../AsyncSubject';\n\nexport function bindCallbackInternals(\n  isNodeStyle: boolean,\n  callbackFunc: any,\n  resultSelector?: any,\n  scheduler?: SchedulerLike\n): (...args: any[]) => Observable<unknown> {\n  if (resultSelector) {\n    if (isScheduler(resultSelector)) {\n      scheduler = resultSelector;\n    } else {\n      // The user provided a result selector.\n      return function (this: any, ...args: any[]) {\n        return (bindCallbackInternals(isNodeStyle, callbackFunc, scheduler) as any)\n          .apply(this, args)\n          .pipe(mapOneOrManyArgs(resultSelector as any));\n      };\n    }\n  }\n\n  // If a scheduler was passed, use our `subscribeOn` and `observeOn` operators\n  // to compose that behavior for the user.\n  if (scheduler) {\n    return function (this: any, ...args: any[]) {\n      return (bindCallbackInternals(isNodeStyle, callbackFunc) as any)\n        .apply(this, args)\n        .pipe(subscribeOn(scheduler!), observeOn(scheduler!));\n    };\n  }\n\n  return function (this: any, ...args: any[]): Observable<any> {\n    // We're using AsyncSubject, because it emits when it completes,\n    // and it will play the value to all late-arriving subscribers.\n    const subject = new AsyncSubject<any>();\n\n    // If this is true, then we haven't called our function yet.\n    let uninitialized = true;\n    return new Observable((subscriber) => {\n      // Add our subscriber to the subject.\n      const subs = subject.subscribe(subscriber);\n\n      if (uninitialized) {\n        uninitialized = false;\n        // We're going to execute the bound function\n        // This bit is to signal that we are hitting the callback asychronously.\n        // Because we don't have any anti-\"Zalgo\" gaurantees with whatever\n        // function we are handed, we use this bit to figure out whether or not\n        // we are getting hit in a callback synchronously during our call.\n        let isAsync = false;\n\n        // This is used to signal that the callback completed synchronously.\n        let isComplete = false;\n\n        // Call our function that has a callback. If at any time during this\n        // call, an error is thrown, it will be caught by the Observable\n        // subscription process and sent to the consumer.\n        callbackFunc.apply(\n          // Pass the appropriate `this` context.\n          this,\n          [\n            // Pass the arguments.\n            ...args,\n            // And our callback handler.\n            (...results: any[]) => {\n              if (isNodeStyle) {\n                // If this is a node callback, shift the first value off of the\n                // results and check it, as it is the error argument. By shifting,\n                // we leave only the argument(s) we want to pass to the consumer.\n                const err = results.shift();\n                if (err != null) {\n                  subject.error(err);\n                  // If we've errored, we can stop processing this function\n                  // as there's nothing else to do. Just return to escape.\n                  return;\n                }\n              }\n              // If we have one argument, notify the consumer\n              // of it as a single value, otherwise, if there's more than one, pass\n              // them as an array. Note that if there are no arguments, `undefined`\n              // will be emitted.\n              subject.next(1 < results.length ? results : results[0]);\n              // Flip this flag, so we know we can complete it in the synchronous\n              // case below.\n              isComplete = true;\n              // If we're not asynchronous, we need to defer the `complete` call\n              // until after the call to the function is over. This is because an\n              // error could be thrown in the function after it calls our callback,\n              // and if that is the case, if we complete here, we are unable to notify\n              // the consumer than an error occured.\n              if (isAsync) {\n                subject.complete();\n              }\n            },\n          ]\n        );\n        // If we flipped `isComplete` during the call, we resolved synchronously,\n        // notify complete, because we skipped it in the callback to wait\n        // to make sure there were no errors during the call.\n        if (isComplete) {\n          subject.complete();\n        }\n\n        // We're no longer synchronous. If the callback is called at this point\n        // we can notify complete on the spot.\n        isAsync = true;\n      }\n\n      // Return the subscription fron adding our subscriber to the subject.\n      return subs;\n    });\n  };\n}\n","/* @prettier */\nimport { Observable } from '../Observable';\nimport { SchedulerLike } from '../types';\nimport { bindCallbackInternals } from './bindCallbackInternals';\n\nexport function bindNodeCallback(\n  callbackFunc: (...args: any[]) => void,\n  resultSelector: (...args: any[]) => any,\n  scheduler?: SchedulerLike\n): (...args: any[]) => Observable<any>;\n\n// args is the arguments array and we push the callback on the rest tuple since the rest parameter must be last (only item) in a parameter list\nexport function bindNodeCallback<A extends readonly unknown[], R extends readonly unknown[]>(\n  callbackFunc: (...args: [...A, (err: any, ...res: R) => void]) => void,\n  schedulerLike?: SchedulerLike\n): (...arg: A) => Observable<R extends [] ? void : R extends [any] ? R[0] : R>;\n\n/**\n * Converts a Node.js-style callback API to a function that returns an\n * Observable.\n *\n * <span class=\"informal\">It's just like {@link bindCallback}, but the\n * callback is expected to be of type `callback(error, result)`.</span>\n *\n * `bindNodeCallback` is not an operator because its input and output are not\n * Observables. The input is a function `func` with some parameters, but the\n * last parameter must be a callback function that `func` calls when it is\n * done. The callback function is expected to follow Node.js conventions,\n * where the first argument to the callback is an error object, signaling\n * whether call was successful. If that object is passed to callback, it means\n * something went wrong.\n *\n * The output of `bindNodeCallback` is a function that takes the same\n * parameters as `func`, except the last one (the callback). When the output\n * function is called with arguments, it will return an Observable.\n * If `func` calls its callback with error parameter present, Observable will\n * error with that value as well. If error parameter is not passed, Observable will emit\n * second parameter. If there are more parameters (third and so on),\n * Observable will emit an array with all arguments, except first error argument.\n *\n * Note that `func` will not be called at the same time output function is,\n * but rather whenever resulting Observable is subscribed. By default call to\n * `func` will happen synchronously after subscription, but that can be changed\n * with proper `scheduler` provided as optional third parameter. {@link SchedulerLike}\n * can also control when values from callback will be emitted by Observable.\n * To find out more, check out documentation for {@link bindCallback}, where\n * {@link SchedulerLike} works exactly the same.\n *\n * As in {@link bindCallback}, context (`this` property) of input function will be set to context\n * of returned function, when it is called.\n *\n * After Observable emits value, it will complete immediately. This means\n * even if `func` calls callback again, values from second and consecutive\n * calls will never appear on the stream. If you need to handle functions\n * that call callbacks multiple times, check out {@link fromEvent} or\n * {@link fromEventPattern} instead.\n *\n * Note that `bindNodeCallback` can be used in non-Node.js environments as well.\n * \"Node.js-style\" callbacks are just a convention, so if you write for\n * browsers or any other environment and API you use implements that callback style,\n * `bindNodeCallback` can be safely used on that API functions as well.\n *\n * Remember that Error object passed to callback does not have to be an instance\n * of JavaScript built-in `Error` object. In fact, it does not even have to an object.\n * Error parameter of callback function is interpreted as \"present\", when value\n * of that parameter is truthy. It could be, for example, non-zero number, non-empty\n * string or boolean `true`. In all of these cases resulting Observable would error\n * with that value. This means usually regular style callbacks will fail very often when\n * `bindNodeCallback` is used. If your Observable errors much more often then you\n * would expect, check if callback really is called in Node.js-style and, if not,\n * switch to {@link bindCallback} instead.\n *\n * Note that even if error parameter is technically present in callback, but its value\n * is falsy, it still won't appear in array emitted by Observable.\n *\n * ## Examples\n * ###  Read a file from the filesystem and get the data as an Observable\n * ```ts\n * import * as fs from 'fs';\n * const readFileAsObservable = bindNodeCallback(fs.readFile);\n * const result = readFileAsObservable('./roadNames.txt', 'utf8');\n * result.subscribe(x => console.log(x), e => console.error(e));\n * ```\n *\n * ### Use on function calling callback with multiple arguments\n * ```ts\n * someFunction((err, a, b) => {\n *   console.log(err); // null\n *   console.log(a); // 5\n *   console.log(b); // \"some string\"\n * });\n * const boundSomeFunction = bindNodeCallback(someFunction);\n * boundSomeFunction()\n * .subscribe(value => {\n *   console.log(value); // [5, \"some string\"]\n * });\n * ```\n *\n * ### Use on function calling callback in regular style\n * ```ts\n * someFunction(a => {\n *   console.log(a); // 5\n * });\n * const boundSomeFunction = bindNodeCallback(someFunction);\n * boundSomeFunction()\n * .subscribe(\n *   value => {}             // never gets called\n *   err => console.log(err) // 5\n * );\n * ```\n *\n * @see {@link bindCallback}\n * @see {@link from}\n *\n * @param {function} func Function with a Node.js-style callback as the last parameter.\n * @param {SchedulerLike} [scheduler] The scheduler on which to schedule the\n * callbacks.\n * @return {function(...params: *): Observable} A function which returns the\n * Observable that delivers the same values the Node.js callback would\n * deliver.\n */\nexport function bindNodeCallback(\n  callbackFunc: (...args: [...any[], (err: any, ...res: any) => void]) => void,\n  resultSelector?: ((...args: any[]) => any) | SchedulerLike,\n  scheduler?: SchedulerLike\n): (...args: any[]) => Observable<any> {\n  return bindCallbackInternals(true, callbackFunc, resultSelector, scheduler);\n}\n","import { Observable } from '../Observable';\nimport { ObservableInput, SchedulerLike, ObservedValueOf, ObservableInputTuple } from '../types';\nimport { argsArgArrayOrObject } from '../util/argsArgArrayOrObject';\nimport { Subscriber } from '../Subscriber';\nimport { from } from './from';\nimport { identity } from '../util/identity';\nimport { Subscription } from '../Subscription';\nimport { mapOneOrManyArgs } from '../util/mapOneOrManyArgs';\nimport { popResultSelector, popScheduler } from '../util/args';\nimport { createObject } from '../util/createObject';\nimport { createOperatorSubscriber } from '../operators/OperatorSubscriber';\nimport { AnyCatcher } from '../AnyCatcher';\nimport { executeSchedule } from '../util/executeSchedule';\n\n// combineLatest(any)\n// We put this first because we need to catch cases where the user has supplied\n// _exactly `any`_ as the argument. Since `any` literally matches _anything_,\n// we don't want it to randomly hit one of the other type signatures below,\n// as we have no idea at build-time what type we should be returning when given an any.\n\n/**\n * You have passed `any` here, we can't figure out if it is\n * an array or an object, so you're getting `unknown`. Use better types.\n * @param arg Something typed as `any`\n */\nexport function combineLatest<T extends AnyCatcher>(arg: T): Observable<unknown>;\n\n// combineLatest([a, b, c])\nexport function combineLatest(sources: []): Observable<never>;\nexport function combineLatest<A extends readonly unknown[]>(sources: readonly [...ObservableInputTuple<A>]): Observable<A>;\n/** @deprecated The `scheduler` parameter will be removed in v8. Use `scheduled` and `combineLatestAll`. Details: https://rxjs.dev/deprecations/scheduler-argument */\nexport function combineLatest<A extends readonly unknown[], R>(\n  sources: readonly [...ObservableInputTuple<A>],\n  resultSelector: (...values: A) => R,\n  scheduler: SchedulerLike\n): Observable<R>;\nexport function combineLatest<A extends readonly unknown[], R>(\n  sources: readonly [...ObservableInputTuple<A>],\n  resultSelector: (...values: A) => R\n): Observable<R>;\n/** @deprecated The `scheduler` parameter will be removed in v8. Use `scheduled` and `combineLatestAll`. Details: https://rxjs.dev/deprecations/scheduler-argument */\nexport function combineLatest<A extends readonly unknown[]>(\n  sources: readonly [...ObservableInputTuple<A>],\n  scheduler: SchedulerLike\n): Observable<A>;\n\n// combineLatest(a, b, c)\n/** @deprecated Pass an array of sources instead. The rest-parameters signature will be removed in v8. Details: https://rxjs.dev/deprecations/array-argument */\nexport function combineLatest<A extends readonly unknown[]>(...sources: [...ObservableInputTuple<A>]): Observable<A>;\n/** @deprecated The `scheduler` parameter will be removed in v8. Use `scheduled` and `combineLatestAll`. Details: https://rxjs.dev/deprecations/scheduler-argument */\nexport function combineLatest<A extends readonly unknown[], R>(\n  ...sourcesAndResultSelectorAndScheduler: [...ObservableInputTuple<A>, (...values: A) => R, SchedulerLike]\n): Observable<R>;\n/** @deprecated Pass an array of sources instead. The rest-parameters signature will be removed in v8. Details: https://rxjs.dev/deprecations/array-argument */\nexport function combineLatest<A extends readonly unknown[], R>(\n  ...sourcesAndResultSelector: [...ObservableInputTuple<A>, (...values: A) => R]\n): Observable<R>;\n/** @deprecated The `scheduler` parameter will be removed in v8. Use `scheduled` and `combineLatestAll`. Details: https://rxjs.dev/deprecations/scheduler-argument */\nexport function combineLatest<A extends readonly unknown[]>(\n  ...sourcesAndScheduler: [...ObservableInputTuple<A>, SchedulerLike]\n): Observable<A>;\n\n// combineLatest({a, b, c})\nexport function combineLatest(sourcesObject: { [K in any]: never }): Observable<never>;\nexport function combineLatest<T extends Record<string, ObservableInput<any>>>(\n  sourcesObject: T\n): Observable<{ [K in keyof T]: ObservedValueOf<T[K]> }>;\n\n/**\n * Combines multiple Observables to create an Observable whose values are\n * calculated from the latest values of each of its input Observables.\n *\n * <span class=\"informal\">Whenever any input Observable emits a value, it\n * computes a formula using the latest values from all the inputs, then emits\n * the output of that formula.</span>\n *\n * ![](combineLatest.png)\n *\n * `combineLatest` combines the values from all the Observables passed in the\n * observables array. This is done by subscribing to each Observable in order and,\n * whenever any Observable emits, collecting an array of the most recent\n * values from each Observable. So if you pass `n` Observables to this operator,\n * the returned Observable will always emit an array of `n` values, in an order\n * corresponding to the order of the passed Observables (the value from the first Observable\n * will be at index 0 of the array and so on).\n *\n * Static version of `combineLatest` accepts an array of Observables. Note that an array of\n * Observables is a good choice, if you don't know beforehand how many Observables\n * you will combine. Passing an empty array will result in an Observable that\n * completes immediately.\n *\n * To ensure the output array always has the same length, `combineLatest` will\n * actually wait for all input Observables to emit at least once,\n * before it starts emitting results. This means if some Observable emits\n * values before other Observables started emitting, all these values but the last\n * will be lost. On the other hand, if some Observable does not emit a value but\n * completes, resulting Observable will complete at the same moment without\n * emitting anything, since it will now be impossible to include a value from the\n * completed Observable in the resulting array. Also, if some input Observable does\n * not emit any value and never completes, `combineLatest` will also never emit\n * and never complete, since, again, it will wait for all streams to emit some\n * value.\n *\n * If at least one Observable was passed to `combineLatest` and all passed Observables\n * emitted something, the resulting Observable will complete when all combined\n * streams complete. So even if some Observable completes, the result of\n * `combineLatest` will still emit values when other Observables do. In case\n * of a completed Observable, its value from now on will always be the last\n * emitted value. On the other hand, if any Observable errors, `combineLatest`\n * will error immediately as well, and all other Observables will be unsubscribed.\n *\n * ## Examples\n *\n * Combine two timer Observables\n *\n * ```ts\n * import { timer, combineLatest } from 'rxjs';\n *\n * const firstTimer = timer(0, 1000); // emit 0, 1, 2... after every second, starting from now\n * const secondTimer = timer(500, 1000); // emit 0, 1, 2... after every second, starting 0,5s from now\n * const combinedTimers = combineLatest([firstTimer, secondTimer]);\n * combinedTimers.subscribe(value => console.log(value));\n * // Logs\n * // [0, 0] after 0.5s\n * // [1, 0] after 1s\n * // [1, 1] after 1.5s\n * // [2, 1] after 2s\n * ```\n *\n * Combine a dictionary of Observables\n *\n * ```ts\n * import { of, delay, startWith, combineLatest } from 'rxjs';\n *\n * const observables = {\n *   a: of(1).pipe(delay(1000), startWith(0)),\n *   b: of(5).pipe(delay(5000), startWith(0)),\n *   c: of(10).pipe(delay(10000), startWith(0))\n * };\n * const combined = combineLatest(observables);\n * combined.subscribe(value => console.log(value));\n * // Logs\n * // { a: 0, b: 0, c: 0 } immediately\n * // { a: 1, b: 0, c: 0 } after 1s\n * // { a: 1, b: 5, c: 0 } after 5s\n * // { a: 1, b: 5, c: 10 } after 10s\n * ```\n *\n * Combine an array of Observables\n *\n * ```ts\n * import { of, delay, startWith, combineLatest } from 'rxjs';\n *\n * const observables = [1, 5, 10].map(\n *   n => of(n).pipe(\n *     delay(n * 1000), // emit 0 and then emit n after n seconds\n *     startWith(0)\n *   )\n * );\n * const combined = combineLatest(observables);\n * combined.subscribe(value => console.log(value));\n * // Logs\n * // [0, 0, 0] immediately\n * // [1, 0, 0] after 1s\n * // [1, 5, 0] after 5s\n * // [1, 5, 10] after 10s\n * ```\n *\n * Use map operator to dynamically calculate the Body-Mass Index\n *\n * ```ts\n * import { of, combineLatest, map } from 'rxjs';\n *\n * const weight = of(70, 72, 76, 79, 75);\n * const height = of(1.76, 1.77, 1.78);\n * const bmi = combineLatest([weight, height]).pipe(\n *   map(([w, h]) => w / (h * h)),\n * );\n * bmi.subscribe(x => console.log('BMI is ' + x));\n *\n * // With output to console:\n * // BMI is 24.212293388429753\n * // BMI is 23.93948099205209\n * // BMI is 23.671253629592222\n * ```\n *\n * @see {@link combineLatestAll}\n * @see {@link merge}\n * @see {@link withLatestFrom}\n *\n * @param {ObservableInput} [observables] An array of input Observables to combine with each other.\n * An array of Observables must be given as the first argument.\n * @param {function} [project] An optional function to project the values from\n * the combined latest values into a new value on the output Observable.\n * @param {SchedulerLike} [scheduler=null] The {@link SchedulerLike} to use for subscribing to\n * each input Observable.\n * @return {Observable} An Observable of projected values from the most recent\n * values from each input Observable, or an array of the most recent values from\n * each input Observable.\n */\nexport function combineLatest<O extends ObservableInput<any>, R>(...args: any[]): Observable<R> | Observable<ObservedValueOf<O>[]> {\n  const scheduler = popScheduler(args);\n  const resultSelector = popResultSelector(args);\n\n  const { args: observables, keys } = argsArgArrayOrObject(args);\n\n  if (observables.length === 0) {\n    // If no observables are passed, or someone has passed an ampty array\n    // of observables, or even an empty object POJO, we need to just\n    // complete (EMPTY), but we have to honor the scheduler provided if any.\n    return from([], scheduler as any);\n  }\n\n  const result = new Observable<ObservedValueOf<O>[]>(\n    combineLatestInit(\n      observables as ObservableInput<ObservedValueOf<O>>[],\n      scheduler,\n      keys\n        ? // A handler for scrubbing the array of args into a dictionary.\n          (values) => createObject(keys, values)\n        : // A passthrough to just return the array\n          identity\n    )\n  );\n\n  return resultSelector ? (result.pipe(mapOneOrManyArgs(resultSelector)) as Observable<R>) : result;\n}\n\nexport function combineLatestInit(\n  observables: ObservableInput<any>[],\n  scheduler?: SchedulerLike,\n  valueTransform: (values: any[]) => any = identity\n) {\n  return (subscriber: Subscriber<any>) => {\n    // The outer subscription. We're capturing this in a function\n    // because we may have to schedule it.\n    maybeSchedule(\n      scheduler,\n      () => {\n        const { length } = observables;\n        // A store for the values each observable has emitted so far. We match observable to value on index.\n        const values = new Array(length);\n        // The number of currently active subscriptions, as they complete, we decrement this number to see if\n        // we are all done combining values, so we can complete the result.\n        let active = length;\n        // The number of inner sources that still haven't emitted the first value\n        // We need to track this because all sources need to emit one value in order\n        // to start emitting values.\n        let remainingFirstValues = length;\n        // The loop to kick off subscription. We're keying everything on index `i` to relate the observables passed\n        // in to the slot in the output array or the key in the array of keys in the output dictionary.\n        for (let i = 0; i < length; i++) {\n          maybeSchedule(\n            scheduler,\n            () => {\n              const source = from(observables[i], scheduler as any);\n              let hasFirstValue = false;\n              source.subscribe(\n                createOperatorSubscriber(\n                  subscriber,\n                  (value) => {\n                    // When we get a value, record it in our set of values.\n                    values[i] = value;\n                    if (!hasFirstValue) {\n                      // If this is our first value, record that.\n                      hasFirstValue = true;\n                      remainingFirstValues--;\n                    }\n                    if (!remainingFirstValues) {\n                      // We're not waiting for any more\n                      // first values, so we can emit!\n                      subscriber.next(valueTransform(values.slice()));\n                    }\n                  },\n                  () => {\n                    if (!--active) {\n                      // We only complete the result if we have no more active\n                      // inner observables.\n                      subscriber.complete();\n                    }\n                  }\n                )\n              );\n            },\n            subscriber\n          );\n        }\n      },\n      subscriber\n    );\n  };\n}\n\n/**\n * A small utility to handle the couple of locations where we want to schedule if a scheduler was provided,\n * but we don't if there was no scheduler.\n */\nfunction maybeSchedule(scheduler: SchedulerLike | undefined, execute: () => void, subscription: Subscription) {\n  if (scheduler) {\n    executeSchedule(subscription, scheduler, execute);\n  } else {\n    execute();\n  }\n}\n","import { Observable } from '../Observable';\nimport { ObservableInputTuple, SchedulerLike } from '../types';\nimport { concatAll } from '../operators/concatAll';\nimport { popScheduler } from '../util/args';\nimport { from } from './from';\n\nexport function concat<T extends readonly unknown[]>(...inputs: [...ObservableInputTuple<T>]): Observable<T[number]>;\nexport function concat<T extends readonly unknown[]>(\n  ...inputsAndScheduler: [...ObservableInputTuple<T>, SchedulerLike]\n): Observable<T[number]>;\n\n/**\n * Creates an output Observable which sequentially emits all values from the first given\n * Observable and then moves on to the next.\n *\n * <span class=\"informal\">Concatenates multiple Observables together by\n * sequentially emitting their values, one Observable after the other.</span>\n *\n * ![](concat.png)\n *\n * `concat` joins multiple Observables together, by subscribing to them one at a time and\n * merging their results into the output Observable. You can pass either an array of\n * Observables, or put them directly as arguments. Passing an empty array will result\n * in Observable that completes immediately.\n *\n * `concat` will subscribe to first input Observable and emit all its values, without\n * changing or affecting them in any way. When that Observable completes, it will\n * subscribe to then next Observable passed and, again, emit its values. This will be\n * repeated, until the operator runs out of Observables. When last input Observable completes,\n * `concat` will complete as well. At any given moment only one Observable passed to operator\n * emits values. If you would like to emit values from passed Observables concurrently, check out\n * {@link merge} instead, especially with optional `concurrent` parameter. As a matter of fact,\n * `concat` is an equivalent of `merge` operator with `concurrent` parameter set to `1`.\n *\n * Note that if some input Observable never completes, `concat` will also never complete\n * and Observables following the one that did not complete will never be subscribed. On the other\n * hand, if some Observable simply completes immediately after it is subscribed, it will be\n * invisible for `concat`, which will just move on to the next Observable.\n *\n * If any Observable in chain errors, instead of passing control to the next Observable,\n * `concat` will error immediately as well. Observables that would be subscribed after\n * the one that emitted error, never will.\n *\n * If you pass to `concat` the same Observable many times, its stream of values\n * will be \"replayed\" on every subscription, which means you can repeat given Observable\n * as many times as you like. If passing the same Observable to `concat` 1000 times becomes tedious,\n * you can always use {@link repeat}.\n *\n * ## Examples\n *\n * Concatenate a timer counting from 0 to 3 with a synchronous sequence from 1 to 10\n *\n * ```ts\n * import { interval, take, range, concat } from 'rxjs';\n *\n * const timer = interval(1000).pipe(take(4));\n * const sequence = range(1, 10);\n * const result = concat(timer, sequence);\n * result.subscribe(x => console.log(x));\n *\n * // results in:\n * // 0 -1000ms-> 1 -1000ms-> 2 -1000ms-> 3 -immediate-> 1 ... 10\n * ```\n *\n * Concatenate 3 Observables\n *\n * ```ts\n * import { interval, take, concat } from 'rxjs';\n *\n * const timer1 = interval(1000).pipe(take(10));\n * const timer2 = interval(2000).pipe(take(6));\n * const timer3 = interval(500).pipe(take(10));\n *\n * const result = concat(timer1, timer2, timer3);\n * result.subscribe(x => console.log(x));\n *\n * // results in the following:\n * // (Prints to console sequentially)\n * // -1000ms-> 0 -1000ms-> 1 -1000ms-> ... 9\n * // -2000ms-> 0 -2000ms-> 1 -2000ms-> ... 5\n * // -500ms-> 0 -500ms-> 1 -500ms-> ... 9\n * ```\n *\n * Concatenate the same Observable to repeat it\n *\n * ```ts\n * import { interval, take, concat } from 'rxjs';\n *\n * const timer = interval(1000).pipe(take(2));\n *\n * concat(timer, timer) // concatenating the same Observable!\n *   .subscribe({\n *     next: value => console.log(value),\n *     complete: () => console.log('...and it is done!')\n *   });\n *\n * // Logs:\n * // 0 after 1s\n * // 1 after 2s\n * // 0 after 3s\n * // 1 after 4s\n * // '...and it is done!' also after 4s\n * ```\n *\n * @see {@link concatAll}\n * @see {@link concatMap}\n * @see {@link concatMapTo}\n * @see {@link startWith}\n * @see {@link endWith}\n *\n * @param args Input Observables to concatenate.\n */\nexport function concat(...args: any[]): Observable<unknown> {\n  return concatAll()(from(args, popScheduler(args)));\n}\n","import { Connectable, ObservableInput, SubjectLike } from '../types';\nimport { Subject } from '../Subject';\nimport { Subscription } from '../Subscription';\nimport { Observable } from '../Observable';\nimport { defer } from './defer';\n\nexport interface ConnectableConfig<T> {\n  /**\n   * A factory function used to create the Subject through which the source\n   * is multicast. By default this creates a {@link Subject}.\n   */\n  connector: () => SubjectLike<T>;\n  /**\n   * If true, the resulting observable will reset internal state upon disconnetion\n   * and return to a \"cold\" state. This allows the resulting observable to be\n   * reconnected.\n   * If false, upon disconnection, the connecting subject will remain the\n   * connecting subject, meaning the resulting observable will not go \"cold\" again,\n   * and subsequent repeats or resubscriptions will resubscribe to that same subject.\n   */\n  resetOnDisconnect?: boolean;\n}\n\n/**\n * The default configuration for `connectable`.\n */\nconst DEFAULT_CONFIG: ConnectableConfig<unknown> = {\n  connector: () => new Subject<unknown>(),\n  resetOnDisconnect: true,\n};\n\n/**\n * Creates an observable that multicasts once `connect()` is called on it.\n *\n * @param source The observable source to make connectable.\n * @param config The configuration object for `connectable`.\n * @returns A \"connectable\" observable, that has a `connect()` method, that you must call to\n * connect the source to all consumers through the subject provided as the connector.\n */\nexport function connectable<T>(source: ObservableInput<T>, config: ConnectableConfig<T> = DEFAULT_CONFIG): Connectable<T> {\n  // The subscription representing the connection.\n  let connection: Subscription | null = null;\n  const { connector, resetOnDisconnect = true } = config;\n  let subject = connector();\n\n  const result: any = new Observable<T>((subscriber) => {\n    return subject.subscribe(subscriber);\n  });\n\n  // Define the `connect` function. This is what users must call\n  // in order to \"connect\" the source to the subject that is\n  // multicasting it.\n  result.connect = () => {\n    if (!connection || connection.closed) {\n      connection = defer(() => source).subscribe(subject);\n      if (resetOnDisconnect) {\n        connection.add(() => (subject = connector()));\n      }\n    }\n    return connection;\n  };\n\n  return result;\n}\n","import { Observable } from '../Observable';\nimport { ObservedValueOf, ObservableInput } from '../types';\nimport { innerFrom } from './innerFrom';\n\n/**\n * Creates an Observable that, on subscribe, calls an Observable factory to\n * make an Observable for each new Observer.\n *\n * <span class=\"informal\">Creates the Observable lazily, that is, only when it\n * is subscribed.\n * </span>\n *\n * ![](defer.png)\n *\n * `defer` allows you to create an Observable only when the Observer\n * subscribes. It waits until an Observer subscribes to it, calls the given\n * factory function to get an Observable -- where a factory function typically\n * generates a new Observable -- and subscribes the Observer to this Observable.\n * In case the factory function returns a falsy value, then EMPTY is used as\n * Observable instead. Last but not least, an exception during the factory\n * function call is transferred to the Observer by calling `error`.\n *\n * ## Example\n *\n * Subscribe to either an Observable of clicks or an Observable of interval, at random\n *\n * ```ts\n * import { defer, fromEvent, interval } from 'rxjs';\n *\n * const clicksOrInterval = defer(() => {\n *   return Math.random() > 0.5\n *     ? fromEvent(document, 'click')\n *     : interval(1000);\n * });\n * clicksOrInterval.subscribe(x => console.log(x));\n *\n * // Results in the following behavior:\n * // If the result of Math.random() is greater than 0.5 it will listen\n * // for clicks anywhere on the \"document\"; when document is clicked it\n * // will log a MouseEvent object to the console. If the result is less\n * // than 0.5 it will emit ascending numbers, one every second(1000ms).\n * ```\n *\n * @see {@link Observable}\n *\n * @param {function(): ObservableInput} observableFactory The Observable\n * factory function to invoke for each Observer that subscribes to the output\n * Observable. May also return a Promise, which will be converted on the fly\n * to an Observable.\n * @return {Observable} An Observable whose Observers' subscriptions trigger\n * an invocation of the given Observable factory function.\n */\nexport function defer<R extends ObservableInput<any>>(observableFactory: () => R): Observable<ObservedValueOf<R>> {\n  return new Observable<ObservedValueOf<R>>((subscriber) => {\n    innerFrom(observableFactory()).subscribe(subscriber);\n  });\n}\n","import { Subject, AnonymousSubject } from '../../Subject';\nimport { Subscriber } from '../../Subscriber';\nimport { Observable } from '../../Observable';\nimport { Subscription } from '../../Subscription';\nimport { Operator } from '../../Operator';\nimport { ReplaySubject } from '../../ReplaySubject';\nimport { Observer, NextObserver } from '../../types';\n\n/**\n * WebSocketSubjectConfig is a plain Object that allows us to make our\n * webSocket configurable.\n *\n * <span class=\"informal\">Provides flexibility to {@link webSocket}</span>\n *\n * It defines a set of properties to provide custom behavior in specific\n * moments of the socket's lifecycle. When the connection opens we can\n * use `openObserver`, when the connection is closed `closeObserver`, if we\n * are interested in listening for data coming from server: `deserializer`,\n * which allows us to customize the deserialization strategy of data before passing it\n * to the socket client. By default, `deserializer` is going to apply `JSON.parse` to each message coming\n * from the Server.\n *\n * ## Examples\n *\n * **deserializer**, the default for this property is `JSON.parse` but since there are just two options\n * for incoming data, either be text or binarydata. We can apply a custom deserialization strategy\n * or just simply skip the default behaviour.\n *\n * ```ts\n * import { webSocket } from 'rxjs/webSocket';\n *\n * const wsSubject = webSocket({\n *   url: 'ws://localhost:8081',\n *   //Apply any transformation of your choice.\n *   deserializer: ({ data }) => data\n * });\n *\n * wsSubject.subscribe(console.log);\n *\n * // Let's suppose we have this on the Server: ws.send('This is a msg from the server')\n * //output\n * //\n * // This is a msg from the server\n * ```\n *\n * **serializer** allows us to apply custom serialization strategy but for the outgoing messages.\n *\n * ```ts\n * import { webSocket } from 'rxjs/webSocket';\n *\n * const wsSubject = webSocket({\n *   url: 'ws://localhost:8081',\n *   // Apply any transformation of your choice.\n *   serializer: msg => JSON.stringify({ channel: 'webDevelopment', msg: msg })\n * });\n *\n * wsSubject.subscribe(() => subject.next('msg to the server'));\n *\n * // Let's suppose we have this on the Server:\n * //   ws.on('message', msg => console.log);\n * //   ws.send('This is a msg from the server');\n * // output at server side:\n * //\n * // {\"channel\":\"webDevelopment\",\"msg\":\"msg to the server\"}\n * ```\n *\n * **closeObserver** allows us to set a custom error when an error raises up.\n *\n * ```ts\n * import { webSocket } from 'rxjs/webSocket';\n *\n * const wsSubject = webSocket({\n *   url: 'ws://localhost:8081',\n *   closeObserver: {\n *     next() {\n *       const customError = { code: 6666, reason: 'Custom evil reason' }\n *       console.log(`code: ${ customError.code }, reason: ${ customError.reason }`);\n *     }\n *   }\n * });\n *\n * // output\n * // code: 6666, reason: Custom evil reason\n * ```\n *\n * **openObserver**, Let's say we need to make some kind of init task before sending/receiving msgs to the\n * webSocket or sending notification that the connection was successful, this is when\n * openObserver is useful for.\n *\n * ```ts\n * import { webSocket } from 'rxjs/webSocket';\n *\n * const wsSubject = webSocket({\n *   url: 'ws://localhost:8081',\n *   openObserver: {\n *     next: () => {\n *       console.log('Connection ok');\n *     }\n *   }\n * });\n *\n * // output\n * // Connection ok\n * ```\n */\nexport interface WebSocketSubjectConfig<T> {\n  /** The url of the socket server to connect to */\n  url: string;\n  /** The protocol to use to connect */\n  protocol?: string | Array<string>;\n  /** @deprecated Will be removed in v8. Use {@link deserializer} instead. */\n  resultSelector?: (e: MessageEvent) => T;\n  /**\n   * A serializer used to create messages from passed values before the\n   * messages are sent to the server. Defaults to JSON.stringify.\n   */\n  serializer?: (value: T) => WebSocketMessage;\n  /**\n   * A deserializer used for messages arriving on the socket from the\n   * server. Defaults to JSON.parse.\n   */\n  deserializer?: (e: MessageEvent) => T;\n  /**\n   * An Observer that watches when open events occur on the underlying web socket.\n   */\n  openObserver?: NextObserver<Event>;\n  /**\n   * An Observer that watches when close events occur on the underlying web socket\n   */\n  closeObserver?: NextObserver<CloseEvent>;\n  /**\n   * An Observer that watches when a close is about to occur due to\n   * unsubscription.\n   */\n  closingObserver?: NextObserver<void>;\n  /**\n   * A WebSocket constructor to use. This is useful for situations like using a\n   * WebSocket impl in Node (WebSocket is a DOM API), or for mocking a WebSocket\n   * for testing purposes\n   */\n  WebSocketCtor?: { new (url: string, protocols?: string | string[]): WebSocket };\n  /** Sets the `binaryType` property of the underlying WebSocket. */\n  binaryType?: 'blob' | 'arraybuffer';\n}\n\nconst DEFAULT_WEBSOCKET_CONFIG: WebSocketSubjectConfig<any> = {\n  url: '',\n  deserializer: (e: MessageEvent) => JSON.parse(e.data),\n  serializer: (value: any) => JSON.stringify(value),\n};\n\nconst WEBSOCKETSUBJECT_INVALID_ERROR_OBJECT =\n  'WebSocketSubject.error must be called with an object with an error code, and an optional reason: { code: number, reason: string }';\n\nexport type WebSocketMessage = string | ArrayBuffer | Blob | ArrayBufferView;\n\nexport class WebSocketSubject<T> extends AnonymousSubject<T> {\n  // @ts-ignore: Property has no initializer and is not definitely assigned\n  private _config: WebSocketSubjectConfig<T>;\n\n  /** @internal */\n  // @ts-ignore: Property has no initializer and is not definitely assigned\n  _output: Subject<T>;\n\n  private _socket: WebSocket | null = null;\n\n  constructor(urlConfigOrSource: string | WebSocketSubjectConfig<T> | Observable<T>, destination?: Observer<T>) {\n    super();\n    if (urlConfigOrSource instanceof Observable) {\n      this.destination = destination;\n      this.source = urlConfigOrSource as Observable<T>;\n    } else {\n      const config = (this._config = { ...DEFAULT_WEBSOCKET_CONFIG });\n      this._output = new Subject<T>();\n      if (typeof urlConfigOrSource === 'string') {\n        config.url = urlConfigOrSource;\n      } else {\n        for (const key in urlConfigOrSource) {\n          if (urlConfigOrSource.hasOwnProperty(key)) {\n            (config as any)[key] = (urlConfigOrSource as any)[key];\n          }\n        }\n      }\n\n      if (!config.WebSocketCtor && WebSocket) {\n        config.WebSocketCtor = WebSocket;\n      } else if (!config.WebSocketCtor) {\n        throw new Error('no WebSocket constructor can be found');\n      }\n      this.destination = new ReplaySubject();\n    }\n  }\n\n  /** @deprecated Internal implementation detail, do not use directly. Will be made internal in v8. */\n  lift<R>(operator: Operator<T, R>): WebSocketSubject<R> {\n    const sock = new WebSocketSubject<R>(this._config as WebSocketSubjectConfig<any>, this.destination as any);\n    sock.operator = operator;\n    sock.source = this;\n    return sock;\n  }\n\n  private _resetState() {\n    this._socket = null;\n    if (!this.source) {\n      this.destination = new ReplaySubject();\n    }\n    this._output = new Subject<T>();\n  }\n\n  /**\n   * Creates an {@link Observable}, that when subscribed to, sends a message,\n   * defined by the `subMsg` function, to the server over the socket to begin a\n   * subscription to data over that socket. Once data arrives, the\n   * `messageFilter` argument will be used to select the appropriate data for\n   * the resulting Observable. When finalization occurs, either due to\n   * unsubscription, completion, or error, a message defined by the `unsubMsg`\n   * argument will be sent to the server over the WebSocketSubject.\n   *\n   * @param subMsg A function to generate the subscription message to be sent to\n   * the server. This will still be processed by the serializer in the\n   * WebSocketSubject's config. (Which defaults to JSON serialization)\n   * @param unsubMsg A function to generate the unsubscription message to be\n   * sent to the server at finalization. This will still be processed by the\n   * serializer in the WebSocketSubject's config.\n   * @param messageFilter A predicate for selecting the appropriate messages\n   * from the server for the output stream.\n   */\n  multiplex(subMsg: () => any, unsubMsg: () => any, messageFilter: (value: T) => boolean) {\n    const self = this;\n    return new Observable((observer: Observer<T>) => {\n      try {\n        self.next(subMsg());\n      } catch (err) {\n        observer.error(err);\n      }\n\n      const subscription = self.subscribe({\n        next: (x) => {\n          try {\n            if (messageFilter(x)) {\n              observer.next(x);\n            }\n          } catch (err) {\n            observer.error(err);\n          }\n        },\n        error: (err) => observer.error(err),\n        complete: () => observer.complete(),\n      });\n\n      return () => {\n        try {\n          self.next(unsubMsg());\n        } catch (err) {\n          observer.error(err);\n        }\n        subscription.unsubscribe();\n      };\n    });\n  }\n\n  private _connectSocket() {\n    const { WebSocketCtor, protocol, url, binaryType } = this._config;\n    const observer = this._output;\n\n    let socket: WebSocket | null = null;\n    try {\n      socket = protocol ? new WebSocketCtor!(url, protocol) : new WebSocketCtor!(url);\n      this._socket = socket;\n      if (binaryType) {\n        this._socket.binaryType = binaryType;\n      }\n    } catch (e) {\n      observer.error(e);\n      return;\n    }\n\n    const subscription = new Subscription(() => {\n      this._socket = null;\n      if (socket && socket.readyState === 1) {\n        socket.close();\n      }\n    });\n\n    socket.onopen = (evt: Event) => {\n      const { _socket } = this;\n      if (!_socket) {\n        socket!.close();\n        this._resetState();\n        return;\n      }\n      const { openObserver } = this._config;\n      if (openObserver) {\n        openObserver.next(evt);\n      }\n\n      const queue = this.destination;\n\n      this.destination = Subscriber.create<T>(\n        (x) => {\n          if (socket!.readyState === 1) {\n            try {\n              const { serializer } = this._config;\n              socket!.send(serializer!(x!));\n            } catch (e) {\n              this.destination!.error(e);\n            }\n          }\n        },\n        (err) => {\n          const { closingObserver } = this._config;\n          if (closingObserver) {\n            closingObserver.next(undefined);\n          }\n          if (err && err.code) {\n            socket!.close(err.code, err.reason);\n          } else {\n            observer.error(new TypeError(WEBSOCKETSUBJECT_INVALID_ERROR_OBJECT));\n          }\n          this._resetState();\n        },\n        () => {\n          const { closingObserver } = this._config;\n          if (closingObserver) {\n            closingObserver.next(undefined);\n          }\n          socket!.close();\n          this._resetState();\n        }\n      ) as Subscriber<any>;\n\n      if (queue && queue instanceof ReplaySubject) {\n        subscription.add((queue as ReplaySubject<T>).subscribe(this.destination));\n      }\n    };\n\n    socket.onerror = (e: Event) => {\n      this._resetState();\n      observer.error(e);\n    };\n\n    socket.onclose = (e: CloseEvent) => {\n      if (socket === this._socket) {\n        this._resetState();\n      }\n      const { closeObserver } = this._config;\n      if (closeObserver) {\n        closeObserver.next(e);\n      }\n      if (e.wasClean) {\n        observer.complete();\n      } else {\n        observer.error(e);\n      }\n    };\n\n    socket.onmessage = (e: MessageEvent) => {\n      try {\n        const { deserializer } = this._config;\n        observer.next(deserializer!(e));\n      } catch (err) {\n        observer.error(err);\n      }\n    };\n  }\n\n  /** @internal */\n  protected _subscribe(subscriber: Subscriber<T>): Subscription {\n    const { source } = this;\n    if (source) {\n      return source.subscribe(subscriber);\n    }\n    if (!this._socket) {\n      this._connectSocket();\n    }\n    this._output.subscribe(subscriber);\n    subscriber.add(() => {\n      const { _socket } = this;\n      if (this._output.observers.length === 0) {\n        if (_socket && (_socket.readyState === 1 || _socket.readyState === 0)) {\n          _socket.close();\n        }\n        this._resetState();\n      }\n    });\n    return subscriber;\n  }\n\n  unsubscribe() {\n    const { _socket } = this;\n    if (_socket && (_socket.readyState === 1 || _socket.readyState === 0)) {\n      _socket.close();\n    }\n    this._resetState();\n    super.unsubscribe();\n  }\n}\n","import { Observable } from '../../Observable';\nimport { Subscription } from '../../Subscription';\nimport { TimestampProvider } from '../../types';\nimport { performanceTimestampProvider } from '../../scheduler/performanceTimestampProvider';\nimport { animationFrameProvider } from '../../scheduler/animationFrameProvider';\n\n/**\n * An observable of animation frames\n *\n * Emits the amount of time elapsed since subscription and the timestamp on each animation frame.\n * Defaults to milliseconds provided to the requestAnimationFrame's callback. Does not end on its own.\n *\n * Every subscription will start a separate animation loop. Since animation frames are always scheduled\n * by the browser to occur directly before a repaint, scheduling more than one animation frame synchronously\n * should not be much different or have more overhead than looping over an array of events during\n * a single animation frame. However, if for some reason the developer would like to ensure the\n * execution of animation-related handlers are all executed during the same task by the engine,\n * the `share` operator can be used.\n *\n * This is useful for setting up animations with RxJS.\n *\n * ## Examples\n *\n * Tweening a div to move it on the screen\n *\n * ```ts\n * import { animationFrames, map, takeWhile, endWith } from 'rxjs';\n *\n * function tween(start: number, end: number, duration: number) {\n *   const diff = end - start;\n *   return animationFrames().pipe(\n *     // Figure out what percentage of time has passed\n *     map(({ elapsed }) => elapsed / duration),\n *     // Take the vector while less than 100%\n *     takeWhile(v => v < 1),\n *     // Finish with 100%\n *     endWith(1),\n *     // Calculate the distance traveled between start and end\n *     map(v => v * diff + start)\n *   );\n * }\n *\n * // Setup a div for us to move around\n * const div = document.createElement('div');\n * document.body.appendChild(div);\n * div.style.position = 'absolute';\n * div.style.width = '40px';\n * div.style.height = '40px';\n * div.style.backgroundColor = 'lime';\n * div.style.transform = 'translate3d(10px, 0, 0)';\n *\n * tween(10, 200, 4000).subscribe(x => {\n *   div.style.transform = `translate3d(${ x }px, 0, 0)`;\n * });\n * ```\n *\n * Providing a custom timestamp provider\n *\n * ```ts\n * import { animationFrames, TimestampProvider } from 'rxjs';\n *\n * // A custom timestamp provider\n * let now = 0;\n * const customTSProvider: TimestampProvider = {\n *   now() { return now++; }\n * };\n *\n * const source$ = animationFrames(customTSProvider);\n *\n * // Log increasing numbers 0...1...2... on every animation frame.\n * source$.subscribe(({ elapsed }) => console.log(elapsed));\n * ```\n *\n * @param timestampProvider An object with a `now` method that provides a numeric timestamp\n */\nexport function animationFrames(timestampProvider?: TimestampProvider) {\n  return timestampProvider ? animationFramesFactory(timestampProvider) : DEFAULT_ANIMATION_FRAMES;\n}\n\n/**\n * Does the work of creating the observable for `animationFrames`.\n * @param timestampProvider The timestamp provider to use to create the observable\n */\nfunction animationFramesFactory(timestampProvider?: TimestampProvider) {\n  const { schedule } = animationFrameProvider;\n  return new Observable<{ timestamp: number; elapsed: number }>((subscriber) => {\n    const subscription = new Subscription();\n    // If no timestamp provider is specified, use performance.now() - as it\n    // will return timestamps 'compatible' with those passed to the run\n    // callback and won't be affected by NTP adjustments, etc.\n    const provider = timestampProvider || performanceTimestampProvider;\n    // Capture the start time upon subscription, as the run callback can remain\n    // queued for a considerable period of time and the elapsed time should\n    // represent the time elapsed since subscription - not the time since the\n    // first rendered animation frame.\n    const start = provider.now();\n    const run = (timestamp: DOMHighResTimeStamp | number) => {\n      // Use the provider's timestamp to calculate the elapsed time. Note that\n      // this means - if the caller hasn't passed a provider - that\n      // performance.now() will be used instead of the timestamp that was\n      // passed to the run callback. The reason for this is that the timestamp\n      // passed to the callback can be earlier than the start time, as it\n      // represents the time at which the browser decided it would render any\n      // queued frames - and that time can be earlier the captured start time.\n      const now = provider.now();\n      subscriber.next({\n        timestamp: timestampProvider ? now : timestamp,\n        elapsed: now - start,\n      });\n      if (!subscriber.closed) {\n        subscription.add(schedule(run));\n      }\n    };\n    subscription.add(schedule(run));\n    return subscription;\n  });\n}\n\n/**\n * In the common case, where the timestamp provided by the rAF API is used,\n * we use this shared observable to reduce overhead.\n */\nconst DEFAULT_ANIMATION_FRAMES = animationFramesFactory();\n","import { WebSocketSubject, WebSocketSubjectConfig } from './WebSocketSubject';\n\n/**\n * Wrapper around the w3c-compatible WebSocket object provided by the browser.\n *\n * <span class=\"informal\">{@link Subject} that communicates with a server via WebSocket</span>\n *\n * `webSocket` is a factory function that produces a `WebSocketSubject`,\n * which can be used to make WebSocket connection with an arbitrary endpoint.\n * `webSocket` accepts as an argument either a string with url of WebSocket endpoint, or an\n * {@link WebSocketSubjectConfig} object for providing additional configuration, as\n * well as Observers for tracking lifecycle of WebSocket connection.\n *\n * When `WebSocketSubject` is subscribed, it attempts to make a socket connection,\n * unless there is one made already. This means that many subscribers will always listen\n * on the same socket, thus saving resources. If however, two instances are made of `WebSocketSubject`,\n * even if these two were provided with the same url, they will attempt to make separate\n * connections. When consumer of a `WebSocketSubject` unsubscribes, socket connection is closed,\n * only if there are no more subscribers still listening. If after some time a consumer starts\n * subscribing again, connection is reestablished.\n *\n * Once connection is made, whenever a new message comes from the server, `WebSocketSubject` will emit that\n * message as a value in the stream. By default, a message from the socket is parsed via `JSON.parse`. If you\n * want to customize how deserialization is handled (if at all), you can provide custom `resultSelector`\n * function in {@link WebSocketSubject}. When connection closes, stream will complete, provided it happened without\n * any errors. If at any point (starting, maintaining or closing a connection) there is an error,\n * stream will also error with whatever WebSocket API has thrown.\n *\n * By virtue of being a {@link Subject}, `WebSocketSubject` allows for receiving and sending messages from the server. In order\n * to communicate with a connected endpoint, use `next`, `error` and `complete` methods. `next` sends a value to the server, so bear in mind\n * that this value will not be serialized beforehand. Because of This, `JSON.stringify` will have to be called on a value by hand,\n * before calling `next` with a result. Note also that if at the moment of nexting value\n * there is no socket connection (for example no one is subscribing), those values will be buffered, and sent when connection\n * is finally established. `complete` method closes socket connection. `error` does the same,\n * as well as notifying the server that something went wrong via status code and string with details of what happened.\n * Since status code is required in WebSocket API, `WebSocketSubject` does not allow, like regular `Subject`,\n * arbitrary values being passed to the `error` method. It needs to be called with an object that has `code`\n * property with status code number and optional `reason` property with string describing details\n * of an error.\n *\n * Calling `next` does not affect subscribers of `WebSocketSubject` - they have no\n * information that something was sent to the server (unless of course the server\n * responds somehow to a message). On the other hand, since calling `complete` triggers\n * an attempt to close socket connection. If that connection is closed without any errors, stream will\n * complete, thus notifying all subscribers. And since calling `error` closes\n * socket connection as well, just with a different status code for the server, if closing itself proceeds\n * without errors, subscribed Observable will not error, as one might expect, but complete as usual. In both cases\n * (calling `complete` or `error`), if process of closing socket connection results in some errors, *then* stream\n * will error.\n *\n * **Multiplexing**\n *\n * `WebSocketSubject` has an additional operator, not found in other Subjects. It is called `multiplex` and it is\n * used to simulate opening several socket connections, while in reality maintaining only one.\n * For example, an application has both chat panel and real-time notifications about sport news. Since these are two distinct functions,\n * it would make sense to have two separate connections for each. Perhaps there could even be two separate services with WebSocket\n * endpoints, running on separate machines with only GUI combining them together. Having a socket connection\n * for each functionality could become too resource expensive. It is a common pattern to have single\n * WebSocket endpoint that acts as a gateway for the other services (in this case chat and sport news services).\n * Even though there is a single connection in a client app, having the ability to manipulate streams as if it\n * were two separate sockets is desirable. This eliminates manually registering and unregistering in a gateway for\n * given service and filter out messages of interest. This is exactly what `multiplex` method is for.\n *\n * Method accepts three parameters. First two are functions returning subscription and unsubscription messages\n * respectively. These are messages that will be sent to the server, whenever consumer of resulting Observable\n * subscribes and unsubscribes. Server can use them to verify that some kind of messages should start or stop\n * being forwarded to the client. In case of the above example application, after getting subscription message with proper identifier,\n * gateway server can decide that it should connect to real sport news service and start forwarding messages from it.\n * Note that both messages will be sent as returned by the functions, they are by default serialized using JSON.stringify, just\n * as messages pushed via `next`. Also bear in mind that these messages will be sent on *every* subscription and\n * unsubscription. This is potentially dangerous, because one consumer of an Observable may unsubscribe and the server\n * might stop sending messages, since it got unsubscription message. This needs to be handled\n * on the server or using {@link publish} on a Observable returned from 'multiplex'.\n *\n * Last argument to `multiplex` is a `messageFilter` function which should return a boolean. It is used to filter out messages\n * sent by the server to only those that belong to simulated WebSocket stream. For example, server might mark these\n * messages with some kind of string identifier on a message object and `messageFilter` would return `true`\n * if there is such identifier on an object emitted by the socket. Messages which returns `false` in `messageFilter` are simply skipped,\n * and are not passed down the stream.\n *\n * Return value of `multiplex` is an Observable with messages incoming from emulated socket connection. Note that this\n * is not a `WebSocketSubject`, so calling `next` or `multiplex` again will fail. For pushing values to the\n * server, use root `WebSocketSubject`.\n *\n * ## Examples\n *\n * Listening for messages from the server\n *\n * ```ts\n * import { webSocket } from 'rxjs/webSocket';\n *\n * const subject = webSocket('ws://localhost:8081');\n *\n * subject.subscribe({\n *   next: msg => console.log('message received: ' + msg), // Called whenever there is a message from the server.\n *   error: err => console.log(err), // Called if at any point WebSocket API signals some kind of error.\n *   complete: () => console.log('complete') // Called when connection is closed (for whatever reason).\n *  });\n * ```\n *\n * Pushing messages to the server\n *\n * ```ts\n * import { webSocket } from 'rxjs/webSocket';\n *\n * const subject = webSocket('ws://localhost:8081');\n *\n * subject.subscribe();\n * // Note that at least one consumer has to subscribe to the created subject - otherwise \"nexted\" values will be just buffered and not sent,\n * // since no connection was established!\n *\n * subject.next({ message: 'some message' });\n * // This will send a message to the server once a connection is made. Remember value is serialized with JSON.stringify by default!\n *\n * subject.complete(); // Closes the connection.\n *\n * subject.error({ code: 4000, reason: 'I think our app just broke!' });\n * // Also closes the connection, but let's the server know that this closing is caused by some error.\n * ```\n *\n * Multiplexing WebSocket\n *\n * ```ts\n * import { webSocket } from 'rxjs/webSocket';\n *\n * const subject = webSocket('ws://localhost:8081');\n *\n * const observableA = subject.multiplex(\n *   () => ({ subscribe: 'A' }), // When server gets this message, it will start sending messages for 'A'...\n *   () => ({ unsubscribe: 'A' }), // ...and when gets this one, it will stop.\n *   message => message.type === 'A' // If the function returns `true` message is passed down the stream. Skipped if the function returns false.\n * );\n *\n * const observableB = subject.multiplex( // And the same goes for 'B'.\n *   () => ({ subscribe: 'B' }),\n *   () => ({ unsubscribe: 'B' }),\n *   message => message.type === 'B'\n * );\n *\n * const subA = observableA.subscribe(messageForA => console.log(messageForA));\n * // At this moment WebSocket connection is established. Server gets '{\"subscribe\": \"A\"}' message and starts sending messages for 'A',\n * // which we log here.\n *\n * const subB = observableB.subscribe(messageForB => console.log(messageForB));\n * // Since we already have a connection, we just send '{\"subscribe\": \"B\"}' message to the server. It starts sending messages for 'B',\n * // which we log here.\n *\n * subB.unsubscribe();\n * // Message '{\"unsubscribe\": \"B\"}' is sent to the server, which stops sending 'B' messages.\n *\n * subA.unsubscribe();\n * // Message '{\"unsubscribe\": \"A\"}' makes the server stop sending messages for 'A'. Since there is no more subscribers to root Subject,\n * // socket connection closes.\n * ```\n *\n * @param {string|WebSocketSubjectConfig} urlConfigOrSource The WebSocket endpoint as an url or an object with\n * configuration and additional Observers.\n * @return {WebSocketSubject} Subject which allows to both send and receive messages via WebSocket connection.\n */\nexport function webSocket<T>(urlConfigOrSource: string | WebSocketSubjectConfig<T>): WebSocketSubject<T> {\n  return new WebSocketSubject<T>(urlConfigOrSource);\n}\n","import { Observable } from '../Observable';\nimport { SchedulerLike } from '../types';\n\n/**\n * A simple Observable that emits no items to the Observer and immediately\n * emits a complete notification.\n *\n * <span class=\"informal\">Just emits 'complete', and nothing else.</span>\n *\n * ![](empty.png)\n *\n * A simple Observable that only emits the complete notification. It can be used\n * for composing with other Observables, such as in a {@link mergeMap}.\n *\n * ## Examples\n *\n * Log complete notification\n *\n * ```ts\n * import { EMPTY } from 'rxjs';\n *\n * EMPTY.subscribe({\n *   next: () => console.log('Next'),\n *   complete: () => console.log('Complete!')\n * });\n *\n * // Outputs\n * // Complete!\n * ```\n *\n * Emit the number 7, then complete\n *\n * ```ts\n * import { EMPTY, startWith } from 'rxjs';\n *\n * const result = EMPTY.pipe(startWith(7));\n * result.subscribe(x => console.log(x));\n *\n * // Outputs\n * // 7\n * ```\n *\n * Map and flatten only odd numbers to the sequence `'a'`, `'b'`, `'c'`\n *\n * ```ts\n * import { interval, mergeMap, of, EMPTY } from 'rxjs';\n *\n * const interval$ = interval(1000);\n * const result = interval$.pipe(\n *   mergeMap(x => x % 2 === 1 ? of('a', 'b', 'c') : EMPTY),\n * );\n * result.subscribe(x => console.log(x));\n *\n * // Results in the following to the console:\n * // x is equal to the count on the interval, e.g. (0, 1, 2, 3, ...)\n * // x will occur every 1000ms\n * // if x % 2 is equal to 1, print a, b, c (each on its own)\n * // if x % 2 is not equal to 1, nothing will be output\n * ```\n *\n * @see {@link Observable}\n * @see {@link NEVER}\n * @see {@link of}\n * @see {@link throwError}\n */\nexport const EMPTY = new Observable<never>((subscriber) => subscriber.complete());\n\n/**\n * @param scheduler A {@link SchedulerLike} to use for scheduling\n * the emission of the complete notification.\n * @deprecated Replaced with the {@link EMPTY} constant or {@link scheduled} (e.g. `scheduled([], scheduler)`). Will be removed in v8.\n */\nexport function empty(scheduler?: SchedulerLike) {\n  return scheduler ? emptyScheduled(scheduler) : EMPTY;\n}\n\nfunction emptyScheduled(scheduler: SchedulerLike) {\n  return new Observable<never>((subscriber) => scheduler.schedule(() => subscriber.complete()));\n}\n","import { Observable } from '../Observable';\nimport { ObservedValueOf, ObservableInputTuple, ObservableInput } from '../types';\nimport { argsArgArrayOrObject } from '../util/argsArgArrayOrObject';\nimport { innerFrom } from './innerFrom';\nimport { popResultSelector } from '../util/args';\nimport { createOperatorSubscriber } from '../operators/OperatorSubscriber';\nimport { mapOneOrManyArgs } from '../util/mapOneOrManyArgs';\nimport { createObject } from '../util/createObject';\nimport { AnyCatcher } from '../AnyCatcher';\n\n// forkJoin(any)\n// We put this first because we need to catch cases where the user has supplied\n// _exactly `any`_ as the argument. Since `any` literally matches _anything_,\n// we don't want it to randomly hit one of the other type signatures below,\n// as we have no idea at build-time what type we should be returning when given an any.\n\n/**\n * You have passed `any` here, we can't figure out if it is\n * an array or an object, so you're getting `unknown`. Use better types.\n * @param arg Something typed as `any`\n */\nexport function forkJoin<T extends AnyCatcher>(arg: T): Observable<unknown>;\n\n// forkJoin(null | undefined)\nexport function forkJoin(scheduler: null | undefined): Observable<never>;\n\n// forkJoin([a, b, c])\nexport function forkJoin(sources: readonly []): Observable<never>;\nexport function forkJoin<A extends readonly unknown[]>(sources: readonly [...ObservableInputTuple<A>]): Observable<A>;\nexport function forkJoin<A extends readonly unknown[], R>(\n  sources: readonly [...ObservableInputTuple<A>],\n  resultSelector: (...values: A) => R\n): Observable<R>;\n\n// forkJoin(a, b, c)\n/** @deprecated Pass an array of sources instead. The rest-parameters signature will be removed in v8. Details: https://rxjs.dev/deprecations/array-argument */\nexport function forkJoin<A extends readonly unknown[]>(...sources: [...ObservableInputTuple<A>]): Observable<A>;\n/** @deprecated Pass an array of sources instead. The rest-parameters signature will be removed in v8. Details: https://rxjs.dev/deprecations/array-argument */\nexport function forkJoin<A extends readonly unknown[], R>(\n  ...sourcesAndResultSelector: [...ObservableInputTuple<A>, (...values: A) => R]\n): Observable<R>;\n\n// forkJoin({a, b, c})\nexport function forkJoin(sourcesObject: { [K in any]: never }): Observable<never>;\nexport function forkJoin<T extends Record<string, ObservableInput<any>>>(\n  sourcesObject: T\n): Observable<{ [K in keyof T]: ObservedValueOf<T[K]> }>;\n\n/**\n * Accepts an `Array` of {@link ObservableInput} or a dictionary `Object` of {@link ObservableInput} and returns\n * an {@link Observable} that emits either an array of values in the exact same order as the passed array,\n * or a dictionary of values in the same shape as the passed dictionary.\n *\n * <span class=\"informal\">Wait for Observables to complete and then combine last values they emitted;\n * complete immediately if an empty array is passed.</span>\n *\n * ![](forkJoin.png)\n *\n * `forkJoin` is an operator that takes any number of input observables which can be passed either as an array\n * or a dictionary of input observables. If no input observables are provided (e.g. an empty array is passed),\n * then the resulting stream will complete immediately.\n *\n * `forkJoin` will wait for all passed observables to emit and complete and then it will emit an array or an object with last\n * values from corresponding observables.\n *\n * If you pass an array of `n` observables to the operator, then the resulting\n * array will have `n` values, where the first value is the last one emitted by the first observable,\n * second value is the last one emitted by the second observable and so on.\n *\n * If you pass a dictionary of observables to the operator, then the resulting\n * objects will have the same keys as the dictionary passed, with their last values they have emitted\n * located at the corresponding key.\n *\n * That means `forkJoin` will not emit more than once and it will complete after that. If you need to emit combined\n * values not only at the end of the lifecycle of passed observables, but also throughout it, try out {@link combineLatest}\n * or {@link zip} instead.\n *\n * In order for the resulting array to have the same length as the number of input observables, whenever any of\n * the given observables completes without emitting any value, `forkJoin` will complete at that moment as well\n * and it will not emit anything either, even if it already has some last values from other observables.\n * Conversely, if there is an observable that never completes, `forkJoin` will never complete either,\n * unless at any point some other observable completes without emitting a value, which brings us back to\n * the previous case. Overall, in order for `forkJoin` to emit a value, all given observables\n * have to emit something at least once and complete.\n *\n * If any given observable errors at some point, `forkJoin` will error as well and immediately unsubscribe\n * from the other observables.\n *\n * Optionally `forkJoin` accepts a `resultSelector` function, that will be called with values which normally\n * would land in the emitted array. Whatever is returned by the `resultSelector`, will appear in the output\n * observable instead. This means that the default `resultSelector` can be thought of as a function that takes\n * all its arguments and puts them into an array. Note that the `resultSelector` will be called only\n * when `forkJoin` is supposed to emit a result.\n *\n * ## Examples\n *\n * Use `forkJoin` with a dictionary of observable inputs\n *\n * ```ts\n * import { forkJoin, of, timer } from 'rxjs';\n *\n * const observable = forkJoin({\n *   foo: of(1, 2, 3, 4),\n *   bar: Promise.resolve(8),\n *   baz: timer(4000)\n * });\n * observable.subscribe({\n *  next: value => console.log(value),\n *  complete: () => console.log('This is how it ends!'),\n * });\n *\n * // Logs:\n * // { foo: 4, bar: 8, baz: 0 } after 4 seconds\n * // 'This is how it ends!' immediately after\n * ```\n *\n * Use `forkJoin` with an array of observable inputs\n *\n * ```ts\n * import { forkJoin, of, timer } from 'rxjs';\n *\n * const observable = forkJoin([\n *   of(1, 2, 3, 4),\n *   Promise.resolve(8),\n *   timer(4000)\n * ]);\n * observable.subscribe({\n *  next: value => console.log(value),\n *  complete: () => console.log('This is how it ends!'),\n * });\n *\n * // Logs:\n * // [4, 8, 0] after 4 seconds\n * // 'This is how it ends!' immediately after\n * ```\n *\n * @see {@link combineLatest}\n * @see {@link zip}\n *\n * @param {...ObservableInput} args Any number of Observables provided either as an array or as an arguments\n * passed directly to the operator.\n * @param {function} [project] Function that takes values emitted by input Observables and returns value\n * that will appear in resulting Observable instead of default array.\n * @return {Observable} Observable emitting either an array of last values emitted by passed Observables\n * or value from project function.\n */\nexport function forkJoin(...args: any[]): Observable<any> {\n  const resultSelector = popResultSelector(args);\n  const { args: sources, keys } = argsArgArrayOrObject(args);\n  const result = new Observable((subscriber) => {\n    const { length } = sources;\n    if (!length) {\n      subscriber.complete();\n      return;\n    }\n    const values = new Array(length);\n    let remainingCompletions = length;\n    let remainingEmissions = length;\n    for (let sourceIndex = 0; sourceIndex < length; sourceIndex++) {\n      let hasValue = false;\n      innerFrom(sources[sourceIndex]).subscribe(\n        createOperatorSubscriber(\n          subscriber,\n          (value) => {\n            if (!hasValue) {\n              hasValue = true;\n              remainingEmissions--;\n            }\n            values[sourceIndex] = value;\n          },\n          () => remainingCompletions--,\n          undefined,\n          () => {\n            if (!remainingCompletions || !hasValue) {\n              if (!remainingEmissions) {\n                subscriber.next(keys ? createObject(keys, values) : values);\n              }\n              subscriber.complete();\n            }\n          }\n        )\n      );\n    }\n  });\n  return resultSelector ? result.pipe(mapOneOrManyArgs(resultSelector)) : result;\n}\n","import { Observable } from '../Observable';\nimport { ObservableInput, SchedulerLike, ObservedValueOf } from '../types';\nimport { scheduled } from '../scheduled/scheduled';\nimport { innerFrom } from './innerFrom';\n\nexport function from<O extends ObservableInput<any>>(input: O): Observable<ObservedValueOf<O>>;\n/** @deprecated The `scheduler` parameter will be removed in v8. Use `scheduled`. Details: https://rxjs.dev/deprecations/scheduler-argument */\nexport function from<O extends ObservableInput<any>>(input: O, scheduler: SchedulerLike | undefined): Observable<ObservedValueOf<O>>;\n\n/**\n * Creates an Observable from an Array, an array-like object, a Promise, an iterable object, or an Observable-like object.\n *\n * <span class=\"informal\">Converts almost anything to an Observable.</span>\n *\n * ![](from.png)\n *\n * `from` converts various other objects and data types into Observables. It also converts a Promise, an array-like, or an\n * <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols#iterable\" target=\"_blank\">iterable</a>\n * object into an Observable that emits the items in that promise, array, or iterable. A String, in this context, is treated\n * as an array of characters. Observable-like objects (contains a function named with the ES2015 Symbol for Observable) can also be\n * converted through this operator.\n *\n * ## Examples\n *\n * Converts an array to an Observable\n *\n * ```ts\n * import { from } from 'rxjs';\n *\n * const array = [10, 20, 30];\n * const result = from(array);\n *\n * result.subscribe(x => console.log(x));\n *\n * // Logs:\n * // 10\n * // 20\n * // 30\n * ```\n *\n * Convert an infinite iterable (from a generator) to an Observable\n *\n * ```ts\n * import { from, take } from 'rxjs';\n *\n * function* generateDoubles(seed) {\n *    let i = seed;\n *    while (true) {\n *      yield i;\n *      i = 2 * i; // double it\n *    }\n * }\n *\n * const iterator = generateDoubles(3);\n * const result = from(iterator).pipe(take(10));\n *\n * result.subscribe(x => console.log(x));\n *\n * // Logs:\n * // 3\n * // 6\n * // 12\n * // 24\n * // 48\n * // 96\n * // 192\n * // 384\n * // 768\n * // 1536\n * ```\n *\n * With `asyncScheduler`\n *\n * ```ts\n * import { from, asyncScheduler } from 'rxjs';\n *\n * console.log('start');\n *\n * const array = [10, 20, 30];\n * const result = from(array, asyncScheduler);\n *\n * result.subscribe(x => console.log(x));\n *\n * console.log('end');\n *\n * // Logs:\n * // 'start'\n * // 'end'\n * // 10\n * // 20\n * // 30\n * ```\n *\n * @see {@link fromEvent}\n * @see {@link fromEventPattern}\n *\n * @param {ObservableInput<T>} A subscription object, a Promise, an Observable-like,\n * an Array, an iterable, or an array-like object to be converted.\n * @param {SchedulerLike} An optional {@link SchedulerLike} on which to schedule the emission of values.\n * @return {Observable<T>}\n */\nexport function from<T>(input: ObservableInput<T>, scheduler?: SchedulerLike): Observable<T> {\n  return scheduler ? scheduled(input, scheduler) : innerFrom(input);\n}\n","import { innerFrom } from '../observable/innerFrom';\nimport { Observable } from '../Observable';\nimport { mergeMap } from '../operators/mergeMap';\nimport { isArrayLike } from '../util/isArrayLike';\nimport { isFunction } from '../util/isFunction';\nimport { mapOneOrManyArgs } from '../util/mapOneOrManyArgs';\n\n// These constants are used to create handler registry functions using array mapping below.\nconst nodeEventEmitterMethods = ['addListener', 'removeListener'] as const;\nconst eventTargetMethods = ['addEventListener', 'removeEventListener'] as const;\nconst jqueryMethods = ['on', 'off'] as const;\n\nexport interface NodeStyleEventEmitter {\n  addListener(eventName: string | symbol, handler: NodeEventHandler): this;\n  removeListener(eventName: string | symbol, handler: NodeEventHandler): this;\n}\n\nexport type NodeEventHandler = (...args: any[]) => void;\n\n// For APIs that implement `addListener` and `removeListener` methods that may\n// not use the same arguments or return EventEmitter values\n// such as React Native\nexport interface NodeCompatibleEventEmitter {\n  addListener(eventName: string, handler: NodeEventHandler): void | {};\n  removeListener(eventName: string, handler: NodeEventHandler): void | {};\n}\n\n// Use handler types like those in @types/jquery. See:\n// https://github.com/DefinitelyTyped/DefinitelyTyped/blob/847731ba1d7fa6db6b911c0e43aa0afe596e7723/types/jquery/misc.d.ts#L6395\nexport interface JQueryStyleEventEmitter<TContext, T> {\n  on(eventName: string, handler: (this: TContext, t: T, ...args: any[]) => any): void;\n  off(eventName: string, handler: (this: TContext, t: T, ...args: any[]) => any): void;\n}\n\nexport interface EventListenerObject<E> {\n  handleEvent(evt: E): void;\n}\n\nexport interface HasEventTargetAddRemove<E> {\n  addEventListener(\n    type: string,\n    listener: ((evt: E) => void) | EventListenerObject<E> | null,\n    options?: boolean | AddEventListenerOptions\n  ): void;\n  removeEventListener(\n    type: string,\n    listener: ((evt: E) => void) | EventListenerObject<E> | null,\n    options?: EventListenerOptions | boolean\n  ): void;\n}\n\nexport interface EventListenerOptions {\n  capture?: boolean;\n  passive?: boolean;\n  once?: boolean;\n}\n\nexport interface AddEventListenerOptions extends EventListenerOptions {\n  once?: boolean;\n  passive?: boolean;\n}\n\nexport function fromEvent<T>(target: HasEventTargetAddRemove<T> | ArrayLike<HasEventTargetAddRemove<T>>, eventName: string): Observable<T>;\nexport function fromEvent<T, R>(\n  target: HasEventTargetAddRemove<T> | ArrayLike<HasEventTargetAddRemove<T>>,\n  eventName: string,\n  resultSelector: (event: T) => R\n): Observable<R>;\nexport function fromEvent<T>(\n  target: HasEventTargetAddRemove<T> | ArrayLike<HasEventTargetAddRemove<T>>,\n  eventName: string,\n  options: EventListenerOptions\n): Observable<T>;\nexport function fromEvent<T, R>(\n  target: HasEventTargetAddRemove<T> | ArrayLike<HasEventTargetAddRemove<T>>,\n  eventName: string,\n  options: EventListenerOptions,\n  resultSelector: (event: T) => R\n): Observable<R>;\n\nexport function fromEvent(target: NodeStyleEventEmitter | ArrayLike<NodeStyleEventEmitter>, eventName: string): Observable<unknown>;\n/** @deprecated Do not specify explicit type parameters. Signatures with type parameters that cannot be inferred will be removed in v8. */\nexport function fromEvent<T>(target: NodeStyleEventEmitter | ArrayLike<NodeStyleEventEmitter>, eventName: string): Observable<T>;\nexport function fromEvent<R>(\n  target: NodeStyleEventEmitter | ArrayLike<NodeStyleEventEmitter>,\n  eventName: string,\n  resultSelector: (...args: any[]) => R\n): Observable<R>;\n\nexport function fromEvent(\n  target: NodeCompatibleEventEmitter | ArrayLike<NodeCompatibleEventEmitter>,\n  eventName: string\n): Observable<unknown>;\n/** @deprecated Do not specify explicit type parameters. Signatures with type parameters that cannot be inferred will be removed in v8. */\nexport function fromEvent<T>(target: NodeCompatibleEventEmitter | ArrayLike<NodeCompatibleEventEmitter>, eventName: string): Observable<T>;\nexport function fromEvent<R>(\n  target: NodeCompatibleEventEmitter | ArrayLike<NodeCompatibleEventEmitter>,\n  eventName: string,\n  resultSelector: (...args: any[]) => R\n): Observable<R>;\n\nexport function fromEvent<T>(\n  target: JQueryStyleEventEmitter<any, T> | ArrayLike<JQueryStyleEventEmitter<any, T>>,\n  eventName: string\n): Observable<T>;\nexport function fromEvent<T, R>(\n  target: JQueryStyleEventEmitter<any, T> | ArrayLike<JQueryStyleEventEmitter<any, T>>,\n  eventName: string,\n  resultSelector: (value: T, ...args: any[]) => R\n): Observable<R>;\n\n/**\n * Creates an Observable that emits events of a specific type coming from the\n * given event target.\n *\n * <span class=\"informal\">Creates an Observable from DOM events, or Node.js\n * EventEmitter events or others.</span>\n *\n * ![](fromEvent.png)\n *\n * `fromEvent` accepts as a first argument event target, which is an object with methods\n * for registering event handler functions. As a second argument it takes string that indicates\n * type of event we want to listen for. `fromEvent` supports selected types of event targets,\n * which are described in detail below. If your event target does not match any of the ones listed,\n * you should use {@link fromEventPattern}, which can be used on arbitrary APIs.\n * When it comes to APIs supported by `fromEvent`, their methods for adding and removing event\n * handler functions have different names, but they all accept a string describing event type\n * and function itself, which will be called whenever said event happens.\n *\n * Every time resulting Observable is subscribed, event handler function will be registered\n * to event target on given event type. When that event fires, value\n * passed as a first argument to registered function will be emitted by output Observable.\n * When Observable is unsubscribed, function will be unregistered from event target.\n *\n * Note that if event target calls registered function with more than one argument, second\n * and following arguments will not appear in resulting stream. In order to get access to them,\n * you can pass to `fromEvent` optional project function, which will be called with all arguments\n * passed to event handler. Output Observable will then emit value returned by project function,\n * instead of the usual value.\n *\n * Remember that event targets listed below are checked via duck typing. It means that\n * no matter what kind of object you have and no matter what environment you work in,\n * you can safely use `fromEvent` on that object if it exposes described methods (provided\n * of course they behave as was described above). So for example if Node.js library exposes\n * event target which has the same method names as DOM EventTarget, `fromEvent` is still\n * a good choice.\n *\n * If the API you use is more callback then event handler oriented (subscribed\n * callback function fires only once and thus there is no need to manually\n * unregister it), you should use {@link bindCallback} or {@link bindNodeCallback}\n * instead.\n *\n * `fromEvent` supports following types of event targets:\n *\n * **DOM EventTarget**\n *\n * This is an object with `addEventListener` and `removeEventListener` methods.\n *\n * In the browser, `addEventListener` accepts - apart from event type string and event\n * handler function arguments - optional third parameter, which is either an object or boolean,\n * both used for additional configuration how and when passed function will be called. When\n * `fromEvent` is used with event target of that type, you can provide this values\n * as third parameter as well.\n *\n * **Node.js EventEmitter**\n *\n * An object with `addListener` and `removeListener` methods.\n *\n * **JQuery-style event target**\n *\n * An object with `on` and `off` methods\n *\n * **DOM NodeList**\n *\n * List of DOM Nodes, returned for example by `document.querySelectorAll` or `Node.childNodes`.\n *\n * Although this collection is not event target in itself, `fromEvent` will iterate over all Nodes\n * it contains and install event handler function in every of them. When returned Observable\n * is unsubscribed, function will be removed from all Nodes.\n *\n * **DOM HtmlCollection**\n *\n * Just as in case of NodeList it is a collection of DOM nodes. Here as well event handler function is\n * installed and removed in each of elements.\n *\n *\n * ## Examples\n *\n * Emit clicks happening on the DOM document\n *\n * ```ts\n * import { fromEvent } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * clicks.subscribe(x => console.log(x));\n *\n * // Results in:\n * // MouseEvent object logged to console every time a click\n * // occurs on the document.\n * ```\n *\n * Use `addEventListener` with capture option\n *\n * ```ts\n * import { fromEvent } from 'rxjs';\n *\n * const clicksInDocument = fromEvent(document, 'click', true); // note optional configuration parameter\n *                                                              // which will be passed to addEventListener\n * const clicksInDiv = fromEvent(someDivInDocument, 'click');\n *\n * clicksInDocument.subscribe(() => console.log('document'));\n * clicksInDiv.subscribe(() => console.log('div'));\n *\n * // By default events bubble UP in DOM tree, so normally\n * // when we would click on div in document\n * // \"div\" would be logged first and then \"document\".\n * // Since we specified optional `capture` option, document\n * // will catch event when it goes DOWN DOM tree, so console\n * // will log \"document\" and then \"div\".\n * ```\n *\n * @see {@link bindCallback}\n * @see {@link bindNodeCallback}\n * @see {@link fromEventPattern}\n *\n * @param {FromEventTarget<T>} target The DOM EventTarget, Node.js\n * EventEmitter, JQuery-like event target, NodeList or HTMLCollection to attach the event handler to.\n * @param {string} eventName The event name of interest, being emitted by the\n * `target`.\n * @param {EventListenerOptions} [options] Options to pass through to addEventListener\n * @return {Observable<T>}\n */\nexport function fromEvent<T>(\n  target: any,\n  eventName: string,\n  options?: EventListenerOptions | ((...args: any[]) => T),\n  resultSelector?: (...args: any[]) => T\n): Observable<T> {\n  if (isFunction(options)) {\n    resultSelector = options;\n    options = undefined;\n  }\n  if (resultSelector) {\n    return fromEvent<T>(target, eventName, options as EventListenerOptions).pipe(mapOneOrManyArgs(resultSelector));\n  }\n\n  // Figure out our add and remove methods. In order to do this,\n  // we are going to analyze the target in a preferred order, if\n  // the target matches a given signature, we take the two \"add\" and \"remove\"\n  // method names and apply them to a map to create opposite versions of the\n  // same function. This is because they all operate in duplicate pairs,\n  // `addListener(name, handler)`, `removeListener(name, handler)`, for example.\n  // The call only differs by method name, as to whether or not you're adding or removing.\n  const [add, remove] =\n    // If it is an EventTarget, we need to use a slightly different method than the other two patterns.\n    isEventTarget(target)\n      ? eventTargetMethods.map((methodName) => (handler: any) => target[methodName](eventName, handler, options as EventListenerOptions))\n      : // In all other cases, the call pattern is identical with the exception of the method names.\n      isNodeStyleEventEmitter(target)\n      ? nodeEventEmitterMethods.map(toCommonHandlerRegistry(target, eventName))\n      : isJQueryStyleEventEmitter(target)\n      ? jqueryMethods.map(toCommonHandlerRegistry(target, eventName))\n      : [];\n\n  // If add is falsy, it's because we didn't match a pattern above.\n  // Check to see if it is an ArrayLike, because if it is, we want to\n  // try to apply fromEvent to all of it's items. We do this check last,\n  // because there are may be some types that are both ArrayLike *and* implement\n  // event registry points, and we'd rather delegate to that when possible.\n  if (!add) {\n    if (isArrayLike(target)) {\n      return mergeMap((subTarget: any) => fromEvent(subTarget, eventName, options as EventListenerOptions))(\n        innerFrom(target)\n      ) as Observable<T>;\n    }\n  }\n\n  // If add is falsy and we made it here, it's because we didn't\n  // match any valid target objects above.\n  if (!add) {\n    throw new TypeError('Invalid event target');\n  }\n\n  return new Observable<T>((subscriber) => {\n    // The handler we are going to register. Forwards the event object, by itself, or\n    // an array of arguments to the event handler, if there is more than one argument,\n    // to the consumer.\n    const handler = (...args: any[]) => subscriber.next(1 < args.length ? args : args[0]);\n    // Do the work of adding the handler to the target.\n    add(handler);\n    // When we finalize, we want to remove the handler and free up memory.\n    return () => remove!(handler);\n  });\n}\n\n/**\n * Used to create `add` and `remove` functions to register and unregister event handlers\n * from a target in the most common handler pattern, where there are only two arguments.\n * (e.g.  `on(name, fn)`, `off(name, fn)`, `addListener(name, fn)`, or `removeListener(name, fn)`)\n * @param target The target we're calling methods on\n * @param eventName The event name for the event we're creating register or unregister functions for\n */\nfunction toCommonHandlerRegistry(target: any, eventName: string) {\n  return (methodName: string) => (handler: any) => target[methodName](eventName, handler);\n}\n\n/**\n * Checks to see if the target implements the required node-style EventEmitter methods\n * for adding and removing event handlers.\n * @param target the object to check\n */\nfunction isNodeStyleEventEmitter(target: any): target is NodeStyleEventEmitter {\n  return isFunction(target.addListener) && isFunction(target.removeListener);\n}\n\n/**\n * Checks to see if the target implements the required jQuery-style EventEmitter methods\n * for adding and removing event handlers.\n * @param target the object to check\n */\nfunction isJQueryStyleEventEmitter(target: any): target is JQueryStyleEventEmitter<any, any> {\n  return isFunction(target.on) && isFunction(target.off);\n}\n\n/**\n * Checks to see if the target implements the required EventTarget methods\n * for adding and removing event handlers.\n * @param target the object to check\n */\nfunction isEventTarget(target: any): target is HasEventTargetAddRemove<any> {\n  return isFunction(target.addEventListener) && isFunction(target.removeEventListener);\n}\n","import { Observable } from '../Observable';\nimport { isFunction } from '../util/isFunction';\nimport { NodeEventHandler } from './fromEvent';\nimport { mapOneOrManyArgs } from '../util/mapOneOrManyArgs';\n\n/* tslint:disable:max-line-length */\nexport function fromEventPattern<T>(\n  addHandler: (handler: NodeEventHandler) => any,\n  removeHandler?: (handler: NodeEventHandler, signal?: any) => void\n): Observable<T>;\nexport function fromEventPattern<T>(\n  addHandler: (handler: NodeEventHandler) => any,\n  removeHandler?: (handler: NodeEventHandler, signal?: any) => void,\n  resultSelector?: (...args: any[]) => T\n): Observable<T>;\n/* tslint:enable:max-line-length */\n\n/**\n * Creates an Observable from an arbitrary API for registering event handlers.\n *\n * <span class=\"informal\">When that method for adding event handler was something {@link fromEvent}\n * was not prepared for.</span>\n *\n * ![](fromEventPattern.png)\n *\n * `fromEventPattern` allows you to convert into an Observable any API that supports registering handler functions\n * for events. It is similar to {@link fromEvent}, but far\n * more flexible. In fact, all use cases of {@link fromEvent} could be easily handled by\n * `fromEventPattern` (although in slightly more verbose way).\n *\n * This operator accepts as a first argument an `addHandler` function, which will be injected with\n * handler parameter. That handler is actually an event handler function that you now can pass\n * to API expecting it. `addHandler` will be called whenever Observable\n * returned by the operator is subscribed, so registering handler in API will not\n * necessarily happen when `fromEventPattern` is called.\n *\n * After registration, every time an event that we listen to happens,\n * Observable returned by `fromEventPattern` will emit value that event handler\n * function was called with. Note that if event handler was called with more\n * than one argument, second and following arguments will not appear in the Observable.\n *\n * If API you are using allows to unregister event handlers as well, you can pass to `fromEventPattern`\n * another function - `removeHandler` - as a second parameter. It will be injected\n * with the same handler function as before, which now you can use to unregister\n * it from the API. `removeHandler` will be called when consumer of resulting Observable\n * unsubscribes from it.\n *\n * In some APIs unregistering is actually handled differently. Method registering an event handler\n * returns some kind of token, which is later used to identify which function should\n * be unregistered or it itself has method that unregisters event handler.\n * If that is the case with your API, make sure token returned\n * by registering method is returned by `addHandler`. Then it will be passed\n * as a second argument to `removeHandler`, where you will be able to use it.\n *\n * If you need access to all event handler parameters (not only the first one),\n * or you need to transform them in any way, you can call `fromEventPattern` with optional\n * third parameter - project function which will accept all arguments passed to\n * event handler when it is called. Whatever is returned from project function will appear on\n * resulting stream instead of usual event handlers first argument. This means\n * that default project can be thought of as function that takes its first parameter\n * and ignores the rest.\n *\n * ## Examples\n *\n * Emits clicks happening on the DOM document\n *\n * ```ts\n * import { fromEventPattern } from 'rxjs';\n *\n * function addClickHandler(handler) {\n *   document.addEventListener('click', handler);\n * }\n *\n * function removeClickHandler(handler) {\n *   document.removeEventListener('click', handler);\n * }\n *\n * const clicks = fromEventPattern(\n *   addClickHandler,\n *   removeClickHandler\n * );\n * clicks.subscribe(x => console.log(x));\n *\n * // Whenever you click anywhere in the browser, DOM MouseEvent\n * // object will be logged.\n * ```\n *\n * Use with API that returns cancellation token\n *\n * ```ts\n * import { fromEventPattern } from 'rxjs';\n *\n * const token = someAPI.registerEventHandler(function() {});\n * someAPI.unregisterEventHandler(token); // this APIs cancellation method accepts\n *                                        // not handler itself, but special token.\n *\n * const someAPIObservable = fromEventPattern(\n *   function(handler) { return someAPI.registerEventHandler(handler); }, // Note that we return the token here...\n *   function(handler, token) { someAPI.unregisterEventHandler(token); }  // ...to then use it here.\n * );\n * ```\n *\n * Use with project function\n *\n * ```ts\n * import { fromEventPattern } from 'rxjs';\n *\n * someAPI.registerEventHandler((eventType, eventMessage) => {\n *   console.log(eventType, eventMessage); // Logs 'EVENT_TYPE' 'EVENT_MESSAGE' to console.\n * });\n *\n * const someAPIObservable = fromEventPattern(\n *   handler => someAPI.registerEventHandler(handler),\n *   handler => someAPI.unregisterEventHandler(handler)\n *   (eventType, eventMessage) => eventType + ' --- ' + eventMessage // without that function only 'EVENT_TYPE'\n * );                                                                // would be emitted by the Observable\n *\n * someAPIObservable.subscribe(value => console.log(value));\n *\n * // Logs:\n * // 'EVENT_TYPE --- EVENT_MESSAGE'\n * ```\n *\n * @see {@link fromEvent}\n * @see {@link bindCallback}\n * @see {@link bindNodeCallback}\n *\n * @param {function(handler: Function): any} addHandler A function that takes\n * a `handler` function as argument and attaches it somehow to the actual\n * source of events.\n * @param {function(handler: Function, token?: any): void} [removeHandler] A function that\n * takes a `handler` function as an argument and removes it from the event source. If `addHandler`\n * returns some kind of token, `removeHandler` function will have it as a second parameter.\n * @param {function(...args: any): T} [project] A function to\n * transform results. It takes the arguments from the event handler and\n * should return a single value.\n * @return {Observable<T>} Observable which, when an event happens, emits first parameter\n * passed to registered event handler. Alternatively it emits whatever project function returns\n * at that moment.\n */\nexport function fromEventPattern<T>(\n  addHandler: (handler: NodeEventHandler) => any,\n  removeHandler?: (handler: NodeEventHandler, signal?: any) => void,\n  resultSelector?: (...args: any[]) => T\n): Observable<T | T[]> {\n  if (resultSelector) {\n    return fromEventPattern<T>(addHandler, removeHandler).pipe(mapOneOrManyArgs(resultSelector));\n  }\n\n  return new Observable<T | T[]>((subscriber) => {\n    const handler = (...e: T[]) => subscriber.next(e.length === 1 ? e[0] : e);\n    const retValue = addHandler(handler);\n    return isFunction(removeHandler) ? () => removeHandler(handler, retValue) : undefined;\n  });\n}\n","import { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { Subscribable } from '../types';\n\n/**\n * Used to convert a subscribable to an observable.\n *\n * Currently, this is only used within internals.\n *\n * TODO: Discuss ObservableInput supporting \"Subscribable\".\n * https://github.com/ReactiveX/rxjs/issues/5909\n *\n * @param subscribable A subscribable\n */\nexport function fromSubscribable<T>(subscribable: Subscribable<T>) {\n  return new Observable((subscriber: Subscriber<T>) => subscribable.subscribe(subscriber));\n}\n","import { Observable } from '../Observable';\nimport { identity } from '../util/identity';\nimport { ObservableInput, SchedulerLike } from '../types';\nimport { isScheduler } from '../util/isScheduler';\nimport { defer } from './defer';\nimport { scheduleIterable } from '../scheduled/scheduleIterable';\n\ntype ConditionFunc<S> = (state: S) => boolean;\ntype IterateFunc<S> = (state: S) => S;\ntype ResultFunc<S, T> = (state: S) => T;\n\nexport interface GenerateBaseOptions<S> {\n  /**\n   * Initial state.\n   */\n  initialState: S;\n  /**\n   * Condition function that accepts state and returns boolean.\n   * When it returns false, the generator stops.\n   * If not specified, a generator never stops.\n   */\n  condition?: ConditionFunc<S>;\n  /**\n   * Iterate function that accepts state and returns new state.\n   */\n  iterate: IterateFunc<S>;\n  /**\n   * SchedulerLike to use for generation process.\n   * By default, a generator starts immediately.\n   */\n  scheduler?: SchedulerLike;\n}\n\nexport interface GenerateOptions<T, S> extends GenerateBaseOptions<S> {\n  /**\n   * Result selection function that accepts state and returns a value to emit.\n   */\n  resultSelector: ResultFunc<S, T>;\n}\n\n/**\n * Generates an observable sequence by running a state-driven loop\n * producing the sequence's elements, using the specified scheduler\n * to send out observer messages.\n *\n * ![](generate.png)\n *\n * ## Examples\n *\n * Produces sequence of numbers\n *\n * ```ts\n * import { generate } from 'rxjs';\n *\n * const result = generate(0, x => x < 3, x => x + 1, x => x);\n *\n * result.subscribe(x => console.log(x));\n *\n * // Logs:\n * // 0\n * // 1\n * // 2\n * ```\n *\n * Use `asapScheduler`\n *\n * ```ts\n * import { generate, asapScheduler } from 'rxjs';\n *\n * const result = generate(1, x => x < 5, x => x * 2, x => x + 1, asapScheduler);\n *\n * result.subscribe(x => console.log(x));\n *\n * // Logs:\n * // 2\n * // 3\n * // 5\n * ```\n *\n * @see {@link from}\n * @see {@link Observable}\n *\n * @param {S} initialState Initial state.\n * @param {function (state: S): boolean} condition Condition to terminate generation (upon returning false).\n * @param {function (state: S): S} iterate Iteration step function.\n * @param {function (state: S): T} resultSelector Selector function for results produced in the sequence. (deprecated)\n * @param {SchedulerLike} [scheduler] A {@link SchedulerLike} on which to run the generator loop. If not provided, defaults to emit immediately.\n * @returns {Observable<T>} The generated sequence.\n * @deprecated Instead of passing separate arguments, use the options argument. Signatures taking separate arguments will be removed in v8.\n */\nexport function generate<T, S>(\n  initialState: S,\n  condition: ConditionFunc<S>,\n  iterate: IterateFunc<S>,\n  resultSelector: ResultFunc<S, T>,\n  scheduler?: SchedulerLike\n): Observable<T>;\n\n/**\n * Generates an Observable by running a state-driven loop\n * that emits an element on each iteration.\n *\n * <span class=\"informal\">Use it instead of nexting values in a for loop.</span>\n *\n * ![](generate.png)\n *\n * `generate` allows you to create a stream of values generated with a loop very similar to\n * a traditional for loop. The first argument of `generate` is a beginning value. The second argument\n * is a function that accepts this value and tests if some condition still holds. If it does,\n * then the loop continues, if not, it stops. The third value is a function which takes the\n * previously defined value and modifies it in some way on each iteration. Note how these three parameters\n * are direct equivalents of three expressions in a traditional for loop: the first expression\n * initializes some state (for example, a numeric index), the second tests if the loop can perform the next\n * iteration (for example, if the index is lower than 10) and the third states how the defined value\n * will be modified on every step (for example, the index will be incremented by one).\n *\n * Return value of a `generate` operator is an Observable that on each loop iteration\n * emits a value. First of all, the condition function is ran. If it returns true, then the Observable\n * emits the currently stored value (initial value at the first iteration) and finally updates\n * that value with iterate function. If at some point the condition returns false, then the Observable\n * completes at that moment.\n *\n * Optionally you can pass a fourth parameter to `generate` - a result selector function which allows you\n * to immediately map the value that would normally be emitted by an Observable.\n *\n * If you find three anonymous functions in `generate` call hard to read, you can provide\n * a single object to the operator instead where the object has the properties: `initialState`,\n * `condition`, `iterate` and `resultSelector`, which should have respective values that you\n * would normally pass to `generate`. `resultSelector` is still optional, but that form\n * of calling `generate` allows you to omit `condition` as well. If you omit it, that means\n * condition always holds, or in other words the resulting Observable will never complete.\n *\n * Both forms of `generate` can optionally accept a scheduler. In case of a multi-parameter call,\n * scheduler simply comes as a last argument (no matter if there is a `resultSelector`\n * function or not). In case of a single-parameter call, you can provide it as a\n * `scheduler` property on the object passed to the operator. In both cases, a scheduler decides when\n * the next iteration of the loop will happen and therefore when the next value will be emitted\n * by the Observable. For example, to ensure that each value is pushed to the Observer\n * on a separate task in the event loop, you could use the `async` scheduler. Note that\n * by default (when no scheduler is passed) values are simply emitted synchronously.\n *\n *\n * ## Examples\n *\n * Use with condition and iterate functions\n *\n * ```ts\n * import { generate } from 'rxjs';\n *\n * const result = generate(0, x => x < 3, x => x + 1);\n *\n * result.subscribe({\n *   next: value => console.log(value),\n *   complete: () => console.log('Complete!')\n * });\n *\n * // Logs:\n * // 0\n * // 1\n * // 2\n * // 'Complete!'\n * ```\n *\n * Use with condition, iterate and resultSelector functions\n *\n * ```ts\n * import { generate } from 'rxjs';\n *\n * const result = generate(0, x => x < 3, x => x + 1, x => x * 1000);\n *\n * result.subscribe({\n *   next: value => console.log(value),\n *   complete: () => console.log('Complete!')\n * });\n *\n * // Logs:\n * // 0\n * // 1000\n * // 2000\n * // 'Complete!'\n * ```\n *\n * Use with options object\n *\n * ```ts\n * import { generate } from 'rxjs';\n *\n * const result = generate({\n *   initialState: 0,\n *   condition(value) { return value < 3; },\n *   iterate(value) { return value + 1; },\n *   resultSelector(value) { return value * 1000; }\n * });\n *\n * result.subscribe({\n *   next: value => console.log(value),\n *   complete: () => console.log('Complete!')\n * });\n *\n * // Logs:\n * // 0\n * // 1000\n * // 2000\n * // 'Complete!'\n * ```\n *\n * Use options object without condition function\n *\n * ```ts\n * import { generate } from 'rxjs';\n *\n * const result = generate({\n *   initialState: 0,\n *   iterate(value) { return value + 1; },\n *   resultSelector(value) { return value * 1000; }\n * });\n *\n * result.subscribe({\n *   next: value => console.log(value),\n *   complete: () => console.log('Complete!') // This will never run\n * });\n *\n * // Logs:\n * // 0\n * // 1000\n * // 2000\n * // 3000\n * // ...and never stops.\n * ```\n *\n * @see {@link from}\n *\n * @param {S} initialState Initial state.\n * @param {function (state: S): boolean} condition Condition to terminate generation (upon returning false).\n * @param {function (state: S): S} iterate Iteration step function.\n * @param {function (state: S): T} [resultSelector] Selector function for results produced in the sequence.\n * @param {Scheduler} [scheduler] A {@link Scheduler} on which to run the generator loop. If not provided, defaults to emitting immediately.\n * @return {Observable<T>} The generated sequence.\n * @deprecated Instead of passing separate arguments, use the options argument. Signatures taking separate arguments will be removed in v8.\n */\nexport function generate<S>(\n  initialState: S,\n  condition: ConditionFunc<S>,\n  iterate: IterateFunc<S>,\n  scheduler?: SchedulerLike\n): Observable<S>;\n\n/**\n * Generates an observable sequence by running a state-driven loop\n * producing the sequence's elements, using the specified scheduler\n * to send out observer messages.\n * The overload accepts options object that might contain initial state, iterate,\n * condition and scheduler.\n *\n * ![](generate.png)\n *\n * ## Examples\n *\n * Use options object with condition function\n *\n * ```ts\n * import { generate } from 'rxjs';\n *\n * const result = generate({\n *   initialState: 0,\n *   condition: x => x < 3,\n *   iterate: x => x + 1\n * });\n *\n * result.subscribe({\n *   next: value => console.log(value),\n *   complete: () => console.log('Complete!')\n * });\n *\n * // Logs:\n * // 0\n * // 1\n * // 2\n * // 'Complete!'\n * ```\n *\n * @see {@link from}\n * @see {@link Observable}\n *\n * @param {GenerateBaseOptions<S>} options Object that must contain initialState, iterate and might contain condition and scheduler.\n * @returns {Observable<S>} The generated sequence.\n */\nexport function generate<S>(options: GenerateBaseOptions<S>): Observable<S>;\n\n/**\n * Generates an observable sequence by running a state-driven loop\n * producing the sequence's elements, using the specified scheduler\n * to send out observer messages.\n * The overload accepts options object that might contain initial state, iterate,\n * condition, result selector and scheduler.\n *\n * ![](generate.png)\n *\n * ## Examples\n *\n * Use options object with condition and iterate function\n *\n * ```ts\n * import { generate } from 'rxjs';\n *\n * const result = generate({\n *   initialState: 0,\n *   condition: x => x < 3,\n *   iterate: x => x + 1,\n *   resultSelector: x => x\n * });\n *\n * result.subscribe({\n *   next: value => console.log(value),\n *   complete: () => console.log('Complete!')\n * });\n *\n * // Logs:\n * // 0\n * // 1\n * // 2\n * // 'Complete!'\n * ```\n *\n * @see {@link from}\n * @see {@link Observable}\n *\n * @param {GenerateOptions<T, S>} options Object that must contain initialState, iterate, resultSelector and might contain condition and scheduler.\n * @returns {Observable<T>} The generated sequence.\n */\nexport function generate<T, S>(options: GenerateOptions<T, S>): Observable<T>;\n\nexport function generate<T, S>(\n  initialStateOrOptions: S | GenerateOptions<T, S>,\n  condition?: ConditionFunc<S>,\n  iterate?: IterateFunc<S>,\n  resultSelectorOrScheduler?: ResultFunc<S, T> | SchedulerLike,\n  scheduler?: SchedulerLike\n): Observable<T> {\n  let resultSelector: ResultFunc<S, T>;\n  let initialState: S;\n\n  // TODO: Remove this as we move away from deprecated signatures\n  // and move towards a configuration object argument.\n  if (arguments.length === 1) {\n    // If we only have one argument, we can assume it is a configuration object.\n    // Note that folks not using TypeScript may trip over this.\n    ({\n      initialState,\n      condition,\n      iterate,\n      resultSelector = identity as ResultFunc<S, T>,\n      scheduler,\n    } = initialStateOrOptions as GenerateOptions<T, S>);\n  } else {\n    // Deprecated arguments path. Figure out what the user\n    // passed and set it here.\n    initialState = initialStateOrOptions as S;\n    if (!resultSelectorOrScheduler || isScheduler(resultSelectorOrScheduler)) {\n      resultSelector = identity as ResultFunc<S, T>;\n      scheduler = resultSelectorOrScheduler as SchedulerLike;\n    } else {\n      resultSelector = resultSelectorOrScheduler as ResultFunc<S, T>;\n    }\n  }\n\n  // The actual generator used to \"generate\" values.\n  function* gen() {\n    for (let state = initialState; !condition || condition(state); state = iterate!(state)) {\n      yield resultSelector(state);\n    }\n  }\n\n  // We use `defer` because we want to defer the creation of the iterator from the iterable.\n  return defer(\n    (scheduler\n      ? // If a scheduler was provided, use `scheduleIterable` to ensure that iteration/generation\n        // happens on the scheduler.\n        () => scheduleIterable(gen(), scheduler!)\n      : // Otherwise, if there's no scheduler, we can just use the generator function directly in\n        // `defer` and executing it will return the generator (which is iterable).\n        gen) as () => ObservableInput<T>\n  );\n}\n","import { Observable } from '../Observable';\nimport { defer } from './defer';\nimport { ObservableInput } from '../types';\n\n/**\n * Checks a boolean at subscription time, and chooses between one of two observable sources\n *\n * `iif` expects a function that returns a boolean (the `condition` function), and two sources,\n * the `trueResult` and the `falseResult`, and returns an Observable.\n *\n * At the moment of subscription, the `condition` function is called. If the result is `true`, the\n * subscription will be to the source passed as the `trueResult`, otherwise, the subscription will be\n * to the source passed as the `falseResult`.\n *\n * If you need to check more than two options to choose between more than one observable, have a look at the {@link defer} creation method.\n *\n * ## Examples\n *\n * Change at runtime which Observable will be subscribed\n *\n * ```ts\n * import { iif, of } from 'rxjs';\n *\n * let subscribeToFirst;\n * const firstOrSecond = iif(\n *   () => subscribeToFirst,\n *   of('first'),\n *   of('second')\n * );\n *\n * subscribeToFirst = true;\n * firstOrSecond.subscribe(value => console.log(value));\n *\n * // Logs:\n * // 'first'\n *\n * subscribeToFirst = false;\n * firstOrSecond.subscribe(value => console.log(value));\n *\n * // Logs:\n * // 'second'\n * ```\n *\n * Control access to an Observable\n *\n * ```ts\n * import { iif, of, EMPTY } from 'rxjs';\n *\n * let accessGranted;\n * const observableIfYouHaveAccess = iif(\n *   () => accessGranted,\n *   of('It seems you have an access...'),\n *   EMPTY\n * );\n *\n * accessGranted = true;\n * observableIfYouHaveAccess.subscribe({\n *   next: value => console.log(value),\n *   complete: () => console.log('The end')\n * });\n *\n * // Logs:\n * // 'It seems you have an access...'\n * // 'The end'\n *\n * accessGranted = false;\n * observableIfYouHaveAccess.subscribe({\n *   next: value => console.log(value),\n *   complete: () => console.log('The end')\n * });\n *\n * // Logs:\n * // 'The end'\n * ```\n *\n * @see {@link defer}\n *\n * @param condition Condition which Observable should be chosen.\n * @param trueResult An Observable that will be subscribed if condition is true.\n * @param falseResult An Observable that will be subscribed if condition is false.\n * @return An observable that proxies to `trueResult` or `falseResult`, depending on the result of the `condition` function.\n */\nexport function iif<T, F>(condition: () => boolean, trueResult: ObservableInput<T>, falseResult: ObservableInput<F>): Observable<T | F> {\n  return defer(() => (condition() ? trueResult : falseResult));\n}\n","import { isArrayLike } from '../util/isArrayLike';\nimport { isPromise } from '../util/isPromise';\nimport { Observable } from '../Observable';\nimport { ObservableInput, ObservedValueOf, ReadableStreamLike } from '../types';\nimport { isInteropObservable } from '../util/isInteropObservable';\nimport { isAsyncIterable } from '../util/isAsyncIterable';\nimport { createInvalidObservableTypeError } from '../util/throwUnobservableError';\nimport { isIterable } from '../util/isIterable';\nimport { isReadableStreamLike, readableStreamLikeToAsyncGenerator } from '../util/isReadableStreamLike';\nimport { Subscriber } from '../Subscriber';\nimport { isFunction } from '../util/isFunction';\nimport { reportUnhandledError } from '../util/reportUnhandledError';\nimport { observable as Symbol_observable } from '../symbol/observable';\n\nexport function innerFrom<O extends ObservableInput<any>>(input: O): Observable<ObservedValueOf<O>>;\nexport function innerFrom<T>(input: ObservableInput<T>): Observable<T> {\n  if (input instanceof Observable) {\n    return input;\n  }\n  if (input != null) {\n    if (isInteropObservable(input)) {\n      return fromInteropObservable(input);\n    }\n    if (isArrayLike(input)) {\n      return fromArrayLike(input);\n    }\n    if (isPromise(input)) {\n      return fromPromise(input);\n    }\n    if (isAsyncIterable(input)) {\n      return fromAsyncIterable(input);\n    }\n    if (isIterable(input)) {\n      return fromIterable(input);\n    }\n    if (isReadableStreamLike(input)) {\n      return fromReadableStreamLike(input);\n    }\n  }\n\n  throw createInvalidObservableTypeError(input);\n}\n\n/**\n * Creates an RxJS Observable from an object that implements `Symbol.observable`.\n * @param obj An object that properly implements `Symbol.observable`.\n */\nexport function fromInteropObservable<T>(obj: any) {\n  return new Observable((subscriber: Subscriber<T>) => {\n    const obs = obj[Symbol_observable]();\n    if (isFunction(obs.subscribe)) {\n      return obs.subscribe(subscriber);\n    }\n    // Should be caught by observable subscribe function error handling.\n    throw new TypeError('Provided object does not correctly implement Symbol.observable');\n  });\n}\n\n/**\n * Synchronously emits the values of an array like and completes.\n * This is exported because there are creation functions and operators that need to\n * make direct use of the same logic, and there's no reason to make them run through\n * `from` conditionals because we *know* they're dealing with an array.\n * @param array The array to emit values from\n */\nexport function fromArrayLike<T>(array: ArrayLike<T>) {\n  return new Observable((subscriber: Subscriber<T>) => {\n    // Loop over the array and emit each value. Note two things here:\n    // 1. We're making sure that the subscriber is not closed on each loop.\n    //    This is so we don't continue looping over a very large array after\n    //    something like a `take`, `takeWhile`, or other synchronous unsubscription\n    //    has already unsubscribed.\n    // 2. In this form, reentrant code can alter that array we're looping over.\n    //    This is a known issue, but considered an edge case. The alternative would\n    //    be to copy the array before executing the loop, but this has\n    //    performance implications.\n    for (let i = 0; i < array.length && !subscriber.closed; i++) {\n      subscriber.next(array[i]);\n    }\n    subscriber.complete();\n  });\n}\n\nexport function fromPromise<T>(promise: PromiseLike<T>) {\n  return new Observable((subscriber: Subscriber<T>) => {\n    promise\n      .then(\n        (value) => {\n          if (!subscriber.closed) {\n            subscriber.next(value);\n            subscriber.complete();\n          }\n        },\n        (err: any) => subscriber.error(err)\n      )\n      .then(null, reportUnhandledError);\n  });\n}\n\nexport function fromIterable<T>(iterable: Iterable<T>) {\n  return new Observable((subscriber: Subscriber<T>) => {\n    for (const value of iterable) {\n      subscriber.next(value);\n      if (subscriber.closed) {\n        return;\n      }\n    }\n    subscriber.complete();\n  });\n}\n\nexport function fromAsyncIterable<T>(asyncIterable: AsyncIterable<T>) {\n  return new Observable((subscriber: Subscriber<T>) => {\n    process(asyncIterable, subscriber).catch((err) => subscriber.error(err));\n  });\n}\n\nexport function fromReadableStreamLike<T>(readableStream: ReadableStreamLike<T>) {\n  return fromAsyncIterable(readableStreamLikeToAsyncGenerator(readableStream));\n}\n\nasync function process<T>(asyncIterable: AsyncIterable<T>, subscriber: Subscriber<T>) {\n  for await (const value of asyncIterable) {\n    subscriber.next(value);\n    // A side-effect may have closed our subscriber,\n    // check before the next iteration.\n    if (subscriber.closed) {\n      return;\n    }\n  }\n  subscriber.complete();\n}\n","import { Observable } from '../Observable';\nimport { asyncScheduler } from '../scheduler/async';\nimport { SchedulerLike } from '../types';\nimport { timer } from './timer';\n\n/**\n * Creates an Observable that emits sequential numbers every specified\n * interval of time, on a specified {@link SchedulerLike}.\n *\n * <span class=\"informal\">Emits incremental numbers periodically in time.</span>\n *\n * ![](interval.png)\n *\n * `interval` returns an Observable that emits an infinite sequence of\n * ascending integers, with a constant interval of time of your choosing\n * between those emissions. The first emission is not sent immediately, but\n * only after the first period has passed. By default, this operator uses the\n * `async` {@link SchedulerLike} to provide a notion of time, but you may pass any\n * {@link SchedulerLike} to it.\n *\n * ## Example\n *\n * Emits ascending numbers, one every second (1000ms) up to the number 3\n *\n * ```ts\n * import { interval, take } from 'rxjs';\n *\n * const numbers = interval(1000);\n *\n * const takeFourNumbers = numbers.pipe(take(4));\n *\n * takeFourNumbers.subscribe(x => console.log('Next: ', x));\n *\n * // Logs:\n * // Next: 0\n * // Next: 1\n * // Next: 2\n * // Next: 3\n * ```\n *\n * @see {@link timer}\n * @see {@link delay}\n *\n * @param {number} [period=0] The interval size in milliseconds (by default)\n * or the time unit determined by the scheduler's clock.\n * @param {SchedulerLike} [scheduler=async] The {@link SchedulerLike} to use for scheduling\n * the emission of values, and providing a notion of \"time\".\n * @return {Observable} An Observable that emits a sequential number each time\n * interval.\n */\nexport function interval(period = 0, scheduler: SchedulerLike = asyncScheduler): Observable<number> {\n  if (period < 0) {\n    // We cannot schedule an interval in the past.\n    period = 0;\n  }\n\n  return timer(period, period, scheduler);\n}\n","import { Observable } from '../Observable';\nimport { ObservableInput, ObservableInputTuple, SchedulerLike } from '../types';\nimport { mergeAll } from '../operators/mergeAll';\nimport { innerFrom } from './innerFrom';\nimport { EMPTY } from './empty';\nimport { popNumber, popScheduler } from '../util/args';\nimport { from } from './from';\n\nexport function merge<A extends readonly unknown[]>(...sources: [...ObservableInputTuple<A>]): Observable<A[number]>;\nexport function merge<A extends readonly unknown[]>(...sourcesAndConcurrency: [...ObservableInputTuple<A>, number?]): Observable<A[number]>;\n/** @deprecated The `scheduler` parameter will be removed in v8. Use `scheduled` and `mergeAll`. Details: https://rxjs.dev/deprecations/scheduler-argument */\nexport function merge<A extends readonly unknown[]>(\n  ...sourcesAndScheduler: [...ObservableInputTuple<A>, SchedulerLike?]\n): Observable<A[number]>;\n/** @deprecated The `scheduler` parameter will be removed in v8. Use `scheduled` and `mergeAll`. Details: https://rxjs.dev/deprecations/scheduler-argument */\nexport function merge<A extends readonly unknown[]>(\n  ...sourcesAndConcurrencyAndScheduler: [...ObservableInputTuple<A>, number?, SchedulerLike?]\n): Observable<A[number]>;\n\n/**\n * Creates an output Observable which concurrently emits all values from every\n * given input Observable.\n *\n * <span class=\"informal\">Flattens multiple Observables together by blending\n * their values into one Observable.</span>\n *\n * ![](merge.png)\n *\n * `merge` subscribes to each given input Observable (as arguments), and simply\n * forwards (without doing any transformation) all the values from all the input\n * Observables to the output Observable. The output Observable only completes\n * once all input Observables have completed. Any error delivered by an input\n * Observable will be immediately emitted on the output Observable.\n *\n * ## Examples\n *\n * Merge together two Observables: 1s interval and clicks\n *\n * ```ts\n * import { merge, fromEvent, interval } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const timer = interval(1000);\n * const clicksOrTimer = merge(clicks, timer);\n * clicksOrTimer.subscribe(x => console.log(x));\n *\n * // Results in the following:\n * // timer will emit ascending values, one every second(1000ms) to console\n * // clicks logs MouseEvents to console everytime the \"document\" is clicked\n * // Since the two streams are merged you see these happening\n * // as they occur.\n * ```\n *\n * Merge together 3 Observables, but run only 2 concurrently\n *\n * ```ts\n * import { interval, take, merge } from 'rxjs';\n *\n * const timer1 = interval(1000).pipe(take(10));\n * const timer2 = interval(2000).pipe(take(6));\n * const timer3 = interval(500).pipe(take(10));\n *\n * const concurrent = 2; // the argument\n * const merged = merge(timer1, timer2, timer3, concurrent);\n * merged.subscribe(x => console.log(x));\n *\n * // Results in the following:\n * // - First timer1 and timer2 will run concurrently\n * // - timer1 will emit a value every 1000ms for 10 iterations\n * // - timer2 will emit a value every 2000ms for 6 iterations\n * // - after timer1 hits its max iteration, timer2 will\n * //   continue, and timer3 will start to run concurrently with timer2\n * // - when timer2 hits its max iteration it terminates, and\n * //   timer3 will continue to emit a value every 500ms until it is complete\n * ```\n *\n * @see {@link mergeAll}\n * @see {@link mergeMap}\n * @see {@link mergeMapTo}\n * @see {@link mergeScan}\n *\n * @param {...ObservableInput} observables Input Observables to merge together.\n * @param {number} [concurrent=Infinity] Maximum number of input\n * Observables being subscribed to concurrently.\n * @param {SchedulerLike} [scheduler=null] The {@link SchedulerLike} to use for managing\n * concurrency of input Observables.\n * @return {Observable} an Observable that emits items that are the result of\n * every input Observable.\n */\nexport function merge(...args: (ObservableInput<unknown> | number | SchedulerLike)[]): Observable<unknown> {\n  const scheduler = popScheduler(args);\n  const concurrent = popNumber(args, Infinity);\n  const sources = args as ObservableInput<unknown>[];\n  return !sources.length\n    ? // No source provided\n      EMPTY\n    : sources.length === 1\n    ? // One source? Just return it.\n      innerFrom(sources[0])\n    : // Merge all sources\n      mergeAll(concurrent)(from(sources, scheduler));\n}\n","import { Observable } from '../Observable';\nimport { noop } from '../util/noop';\n\n/**\n * An Observable that emits no items to the Observer and never completes.\n *\n * ![](never.png)\n *\n * A simple Observable that emits neither values nor errors nor the completion\n * notification. It can be used for testing purposes or for composing with other\n * Observables. Please note that by never emitting a complete notification, this\n * Observable keeps the subscription from being disposed automatically.\n * Subscriptions need to be manually disposed.\n *\n * ##  Example\n *\n * Emit the number 7, then never emit anything else (not even complete)\n *\n * ```ts\n * import { NEVER, startWith } from 'rxjs';\n *\n * const info = () => console.log('Will not be called');\n *\n * const result = NEVER.pipe(startWith(7));\n * result.subscribe({\n *   next: x => console.log(x),\n *   error: info,\n *   complete: info\n * });\n * ```\n *\n * @see {@link Observable}\n * @see {@link EMPTY}\n * @see {@link of}\n * @see {@link throwError}\n */\nexport const NEVER = new Observable<never>(noop);\n\n/**\n * @deprecated Replaced with the {@link NEVER} constant. Will be removed in v8.\n */\nexport function never() {\n  return NEVER;\n}\n","import { SchedulerLike, ValueFromArray } from '../types';\nimport { Observable } from '../Observable';\nimport { popScheduler } from '../util/args';\nimport { from } from './from';\n\n// Devs are more likely to pass null or undefined than they are a scheduler\n// without accompanying values. To make things easier for (naughty) devs who\n// use the `strictNullChecks: false` TypeScript compiler option, these\n// overloads with explicit null and undefined values are included.\n\nexport function of(value: null): Observable<null>;\nexport function of(value: undefined): Observable<undefined>;\n\n/** @deprecated The `scheduler` parameter will be removed in v8. Use `scheduled`. Details: https://rxjs.dev/deprecations/scheduler-argument */\nexport function of(scheduler: SchedulerLike): Observable<never>;\n/** @deprecated The `scheduler` parameter will be removed in v8. Use `scheduled`. Details: https://rxjs.dev/deprecations/scheduler-argument */\nexport function of<A extends readonly unknown[]>(...valuesAndScheduler: [...A, SchedulerLike]): Observable<ValueFromArray<A>>;\n\nexport function of(): Observable<never>;\n/** @deprecated Do not specify explicit type parameters. Signatures with type parameters that cannot be inferred will be removed in v8. */\nexport function of<T>(): Observable<T>;\nexport function of<T>(value: T): Observable<T>;\nexport function of<A extends readonly unknown[]>(...values: A): Observable<ValueFromArray<A>>;\n\n/**\n * Converts the arguments to an observable sequence.\n *\n * <span class=\"informal\">Each argument becomes a `next` notification.</span>\n *\n * ![](of.png)\n *\n * Unlike {@link from}, it does not do any flattening and emits each argument in whole\n * as a separate `next` notification.\n *\n * ## Examples\n *\n * Emit the values `10, 20, 30`\n *\n * ```ts\n * import { of } from 'rxjs';\n *\n * of(10, 20, 30)\n *   .subscribe({\n *     next: value => console.log('next:', value),\n *     error: err => console.log('error:', err),\n *     complete: () => console.log('the end'),\n *   });\n *\n * // Outputs\n * // next: 10\n * // next: 20\n * // next: 30\n * // the end\n * ```\n *\n * Emit the array `[1, 2, 3]`\n *\n * ```ts\n * import { of } from 'rxjs';\n *\n * of([1, 2, 3])\n *   .subscribe({\n *     next: value => console.log('next:', value),\n *     error: err => console.log('error:', err),\n *     complete: () => console.log('the end'),\n *   });\n *\n * // Outputs\n * // next: [1, 2, 3]\n * // the end\n * ```\n *\n * @see {@link from}\n * @see {@link range}\n *\n * @param {...T} values A comma separated list of arguments you want to be emitted\n * @return {Observable} An Observable that emits the arguments\n * described above and then completes.\n */\nexport function of<T>(...args: Array<T | SchedulerLike>): Observable<T> {\n  const scheduler = popScheduler(args);\n  return from(args as T[], scheduler);\n}\n","import { Observable } from '../Observable';\nimport { ObservableInputTuple } from '../types';\nimport { EMPTY } from './empty';\nimport { onErrorResumeNext as onErrorResumeNextWith } from '../operators/onErrorResumeNext';\nimport { argsOrArgArray } from '../util/argsOrArgArray';\n\n/* tslint:disable:max-line-length */\nexport function onErrorResumeNext<A extends readonly unknown[]>(sources: [...ObservableInputTuple<A>]): Observable<A[number]>;\nexport function onErrorResumeNext<A extends readonly unknown[]>(...sources: [...ObservableInputTuple<A>]): Observable<A[number]>;\n\n/* tslint:enable:max-line-length */\n\n/**\n * When any of the provided Observable emits a complete or an error notification, it immediately subscribes to the next one\n * that was passed.\n *\n * <span class=\"informal\">Execute series of Observables no matter what, even if it means swallowing errors.</span>\n *\n * ![](onErrorResumeNext.png)\n *\n * `onErrorResumeNext` will subscribe to each observable source it is provided, in order.\n * If the source it's subscribed to emits an error or completes, it will move to the next source\n * without error.\n *\n * If `onErrorResumeNext` is provided no arguments, or a single, empty array, it will return {@link EMPTY}.\n *\n * `onErrorResumeNext` is basically {@link concat}, only it will continue, even if one of its\n * sources emits an error.\n *\n * Note that there is no way to handle any errors thrown by sources via the result of\n * `onErrorResumeNext`. If you want to handle errors thrown in any given source, you can\n * always use the {@link catchError} operator on them before passing them into `onErrorResumeNext`.\n *\n * ## Example\n *\n * Subscribe to the next Observable after map fails\n *\n * ```ts\n * import { onErrorResumeNext, of, map } from 'rxjs';\n *\n * onErrorResumeNext(\n *   of(1, 2, 3, 0).pipe(\n *     map(x => {\n *       if (x === 0) {\n *         throw Error();\n *       }\n *       return 10 / x;\n *     })\n *   ),\n *   of(1, 2, 3)\n * )\n * .subscribe({\n *   next: value => console.log(value),\n *   error: err => console.log(err),     // Will never be called.\n *   complete: () => console.log('done')\n * });\n *\n * // Logs:\n * // 10\n * // 5\n * // 3.3333333333333335\n * // 1\n * // 2\n * // 3\n * // 'done'\n * ```\n *\n * @see {@link concat}\n * @see {@link catchError}\n *\n * @param {...ObservableInput} sources Observables (or anything that *is* observable) passed either directly or as an array.\n * @return {Observable} An Observable that concatenates all sources, one after the other,\n * ignoring all errors, such that any error causes it to move on to the next source.\n */\nexport function onErrorResumeNext<A extends readonly unknown[]>(\n  ...sources: [[...ObservableInputTuple<A>]] | [...ObservableInputTuple<A>]\n): Observable<A[number]> {\n  return onErrorResumeNextWith(argsOrArgArray(sources))(EMPTY);\n}\n","import { Observable } from '../Observable';\nimport { SchedulerLike } from '../types';\nimport { from } from './from';\n\n/**\n * @deprecated Use `from(Object.entries(obj))` instead. Will be removed in v8.\n */\nexport function pairs<T>(arr: readonly T[], scheduler?: SchedulerLike): Observable<[string, T]>;\n/**\n * @deprecated Use `from(Object.entries(obj))` instead. Will be removed in v8.\n */\nexport function pairs<O extends Record<string, unknown>>(obj: O, scheduler?: SchedulerLike): Observable<[keyof O, O[keyof O]]>;\n/**\n * @deprecated Use `from(Object.entries(obj))` instead. Will be removed in v8.\n */\nexport function pairs<T>(iterable: Iterable<T>, scheduler?: SchedulerLike): Observable<[string, T]>;\n/**\n * @deprecated Use `from(Object.entries(obj))` instead. Will be removed in v8.\n */\nexport function pairs(\n  n: number | bigint | boolean | ((...args: any[]) => any) | symbol,\n  scheduler?: SchedulerLike\n): Observable<[never, never]>;\n\n/**\n * Convert an object into an Observable of `[key, value]` pairs.\n *\n * <span class=\"informal\">Turn entries of an object into a stream.</span>\n *\n * ![](pairs.png)\n *\n * `pairs` takes an arbitrary object and returns an Observable that emits arrays. Each\n * emitted array has exactly two elements - the first is a key from the object\n * and the second is a value corresponding to that key. Keys are extracted from\n * an object via `Object.keys` function, which means that they will be only\n * enumerable keys that are present on an object directly - not ones inherited\n * via prototype chain.\n *\n * By default, these arrays are emitted synchronously. To change that you can\n * pass a {@link SchedulerLike} as a second argument to `pairs`.\n *\n * ## Example\n *\n * Converts an object to an Observable\n *\n * ```ts\n * import { pairs } from 'rxjs';\n *\n * const obj = {\n *   foo: 42,\n *   bar: 56,\n *   baz: 78\n * };\n *\n * pairs(obj).subscribe({\n *   next: value => console.log(value),\n *   complete: () => console.log('Complete!')\n * });\n *\n * // Logs:\n * // ['foo', 42]\n * // ['bar', 56]\n * // ['baz', 78]\n * // 'Complete!'\n * ```\n *\n * ### Object.entries required\n *\n * In IE, you will need to polyfill `Object.entries` in order to use this.\n * [MDN has a polyfill here](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/entries)\n *\n * @param {Object} obj The object to inspect and turn into an\n * Observable sequence.\n * @param {Scheduler} [scheduler] An optional IScheduler to schedule\n * when resulting Observable will emit values.\n * @returns {(Observable<Array<string|T>>)} An observable sequence of\n * [key, value] pairs from the object.\n * @deprecated Use `from(Object.entries(obj))` instead. Will be removed in v8.\n */\nexport function pairs(obj: any, scheduler?: SchedulerLike) {\n  return from(Object.entries(obj), scheduler as any);\n}\n","import { not } from '../util/not';\nimport { filter } from '../operators/filter';\nimport { ObservableInput } from '../types';\nimport { Observable } from '../Observable';\nimport { innerFrom } from './innerFrom';\n\n/** @deprecated Use a closure instead of a `thisArg`. Signatures accepting a `thisArg` will be removed in v8. */\nexport function partition<T, U extends T, A>(\n  source: ObservableInput<T>,\n  predicate: (this: A, value: T, index: number) => value is U,\n  thisArg: A\n): [Observable<U>, Observable<Exclude<T, U>>];\nexport function partition<T, U extends T>(\n  source: ObservableInput<T>,\n  predicate: (value: T, index: number) => value is U\n): [Observable<U>, Observable<Exclude<T, U>>];\n\n/** @deprecated Use a closure instead of a `thisArg`. Signatures accepting a `thisArg` will be removed in v8. */\nexport function partition<T, A>(\n  source: ObservableInput<T>,\n  predicate: (this: A, value: T, index: number) => boolean,\n  thisArg: A\n): [Observable<T>, Observable<T>];\nexport function partition<T>(source: ObservableInput<T>, predicate: (value: T, index: number) => boolean): [Observable<T>, Observable<T>];\n\n/**\n * Splits the source Observable into two, one with values that satisfy a\n * predicate, and another with values that don't satisfy the predicate.\n *\n * <span class=\"informal\">It's like {@link filter}, but returns two Observables:\n * one like the output of {@link filter}, and the other with values that did not\n * pass the condition.</span>\n *\n * ![](partition.png)\n *\n * `partition` outputs an array with two Observables that partition the values\n * from the source Observable through the given `predicate` function. The first\n * Observable in that array emits source values for which the predicate argument\n * returns true. The second Observable emits source values for which the\n * predicate returns false. The first behaves like {@link filter} and the second\n * behaves like {@link filter} with the predicate negated.\n *\n * ## Example\n *\n * Partition a set of numbers into odds and evens observables\n *\n * ```ts\n * import { of, partition } from 'rxjs';\n *\n * const observableValues = of(1, 2, 3, 4, 5, 6);\n * const [evens$, odds$] = partition(observableValues, value => value % 2 === 0);\n *\n * odds$.subscribe(x => console.log('odds', x));\n * evens$.subscribe(x => console.log('evens', x));\n *\n * // Logs:\n * // odds 1\n * // odds 3\n * // odds 5\n * // evens 2\n * // evens 4\n * // evens 6\n * ```\n *\n * @see {@link filter}\n *\n * @param {function(value: T, index: number): boolean} predicate A function that\n * evaluates each value emitted by the source Observable. If it returns `true`,\n * the value is emitted on the first Observable in the returned array, if\n * `false` the value is emitted on the second Observable in the array. The\n * `index` parameter is the number `i` for the i-th source emission that has\n * happened since the subscription, starting from the number `0`.\n * @param {any} [thisArg] An optional argument to determine the value of `this`\n * in the `predicate` function.\n * @return {[Observable<T>, Observable<T>]} An array with two Observables: one\n * with values that passed the predicate, and another with values that did not\n * pass the predicate.\n */\nexport function partition<T>(\n  source: ObservableInput<T>,\n  predicate: (this: any, value: T, index: number) => boolean,\n  thisArg?: any\n): [Observable<T>, Observable<T>] {\n  return [filter(predicate, thisArg)(innerFrom(source)), filter(not(predicate, thisArg))(innerFrom(source))] as [\n    Observable<T>,\n    Observable<T>\n  ];\n}\n","import { Observable } from '../Observable';\nimport { innerFrom } from './innerFrom';\nimport { Subscription } from '../Subscription';\nimport { ObservableInput, ObservableInputTuple } from '../types';\nimport { argsOrArgArray } from '../util/argsOrArgArray';\nimport { createOperatorSubscriber } from '../operators/OperatorSubscriber';\nimport { Subscriber } from '../Subscriber';\n\nexport function race<T extends readonly unknown[]>(inputs: [...ObservableInputTuple<T>]): Observable<T[number]>;\nexport function race<T extends readonly unknown[]>(...inputs: [...ObservableInputTuple<T>]): Observable<T[number]>;\n\n/**\n * Returns an observable that mirrors the first source observable to emit an item.\n *\n * ![](race.png)\n *\n * `race` returns an observable, that when subscribed to, subscribes to all source observables immediately.\n * As soon as one of the source observables emits a value, the result unsubscribes from the other sources.\n * The resulting observable will forward all notifications, including error and completion, from the \"winning\"\n * source observable.\n *\n * If one of the used source observable throws an errors before a first notification\n * the race operator will also throw an error, no matter if another source observable\n * could potentially win the race.\n *\n * `race` can be useful for selecting the response from the fastest network connection for\n * HTTP or WebSockets. `race` can also be useful for switching observable context based on user\n * input.\n *\n * ## Example\n *\n * Subscribes to the observable that was the first to start emitting.\n *\n * ```ts\n * import { interval, map, race } from 'rxjs';\n *\n * const obs1 = interval(7000).pipe(map(() => 'slow one'));\n * const obs2 = interval(3000).pipe(map(() => 'fast one'));\n * const obs3 = interval(5000).pipe(map(() => 'medium one'));\n *\n * race(obs1, obs2, obs3)\n *   .subscribe(winner => console.log(winner));\n *\n * // Outputs\n * // a series of 'fast one'\n * ```\n *\n * @param {...Observables} ...observables sources used to race for which Observable emits first.\n * @return {Observable} an Observable that mirrors the output of the first Observable to emit an item.\n */\nexport function race<T>(...sources: (ObservableInput<T> | ObservableInput<T>[])[]): Observable<any> {\n  sources = argsOrArgArray(sources);\n  // If only one source was passed, just return it. Otherwise return the race.\n  return sources.length === 1 ? innerFrom(sources[0] as ObservableInput<T>) : new Observable<T>(raceInit(sources as ObservableInput<T>[]));\n}\n\n/**\n * An observable initializer function for both the static version and the\n * operator version of race.\n * @param sources The sources to race\n */\nexport function raceInit<T>(sources: ObservableInput<T>[]) {\n  return (subscriber: Subscriber<T>) => {\n    let subscriptions: Subscription[] = [];\n\n    // Subscribe to all of the sources. Note that we are checking `subscriptions` here\n    // Is is an array of all actively \"racing\" subscriptions, and it is `null` after the\n    // race has been won. So, if we have racer that synchronously \"wins\", this loop will\n    // stop before it subscribes to any more.\n    for (let i = 0; subscriptions && !subscriber.closed && i < sources.length; i++) {\n      subscriptions.push(\n        innerFrom(sources[i] as ObservableInput<T>).subscribe(\n          createOperatorSubscriber(subscriber, (value) => {\n            if (subscriptions) {\n              // We're still racing, but we won! So unsubscribe\n              // all other subscriptions that we have, except this one.\n              for (let s = 0; s < subscriptions.length; s++) {\n                s !== i && subscriptions[s].unsubscribe();\n              }\n              subscriptions = null!;\n            }\n            subscriber.next(value);\n          })\n        )\n      );\n    }\n  };\n}\n","import { SchedulerLike } from '../types';\nimport { Observable } from '../Observable';\nimport { EMPTY } from './empty';\n\nexport function range(start: number, count?: number): Observable<number>;\n\n/**\n * @deprecated The `scheduler` parameter will be removed in v8. Use `range(start, count).pipe(observeOn(scheduler))` instead. Details: Details: https://rxjs.dev/deprecations/scheduler-argument\n */\nexport function range(start: number, count: number | undefined, scheduler: SchedulerLike): Observable<number>;\n\n/**\n * Creates an Observable that emits a sequence of numbers within a specified\n * range.\n *\n * <span class=\"informal\">Emits a sequence of numbers in a range.</span>\n *\n * ![](range.png)\n *\n * `range` operator emits a range of sequential integers, in order, where you\n * select the `start` of the range and its `length`. By default, uses no\n * {@link SchedulerLike} and just delivers the notifications synchronously, but may use\n * an optional {@link SchedulerLike} to regulate those deliveries.\n *\n * ## Example\n *\n * Produce a range of numbers\n *\n * ```ts\n * import { range } from 'rxjs';\n *\n * const numbers = range(1, 3);\n *\n * numbers.subscribe({\n *   next: value => console.log(value),\n *   complete: () => console.log('Complete!')\n * });\n *\n * // Logs:\n * // 1\n * // 2\n * // 3\n * // 'Complete!'\n * ```\n *\n * @see {@link timer}\n * @see {@link interval}\n *\n * @param {number} [start=0] The value of the first integer in the sequence.\n * @param {number} count The number of sequential integers to generate.\n * @param {SchedulerLike} [scheduler] A {@link SchedulerLike} to use for scheduling\n * the emissions of the notifications.\n * @return {Observable} An Observable of numbers that emits a finite range of\n * sequential integers.\n */\nexport function range(start: number, count?: number, scheduler?: SchedulerLike): Observable<number> {\n  if (count == null) {\n    // If one argument was passed, it's the count, not the start.\n    count = start;\n    start = 0;\n  }\n\n  if (count <= 0) {\n    // No count? We're going nowhere. Return EMPTY.\n    return EMPTY;\n  }\n\n  // Where the range should stop.\n  const end = count + start;\n\n  return new Observable(\n    scheduler\n      ? // The deprecated scheduled path.\n        (subscriber) => {\n          let n = start;\n          return scheduler.schedule(function () {\n            if (n < end) {\n              subscriber.next(n++);\n              this.schedule();\n            } else {\n              subscriber.complete();\n            }\n          });\n        }\n      : // Standard synchronous range.\n        (subscriber) => {\n          let n = start;\n          while (n < end && !subscriber.closed) {\n            subscriber.next(n++);\n          }\n          subscriber.complete();\n        }\n  );\n}\n","import { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { SchedulerLike } from '../types';\nimport { isFunction } from '../util/isFunction';\n\n/**\n * Creates an observable that will create an error instance and push it to the consumer as an error\n * immediately upon subscription.\n *\n * <span class=\"informal\">Just errors and does nothing else</span>\n *\n * ![](throw.png)\n *\n * This creation function is useful for creating an observable that will create an error and error every\n * time it is subscribed to. Generally, inside of most operators when you might want to return an errored\n * observable, this is unnecessary. In most cases, such as in the inner return of {@link concatMap},\n * {@link mergeMap}, {@link defer}, and many others, you can simply throw the error, and RxJS will pick\n * that up and notify the consumer of the error.\n *\n * ## Example\n *\n * Create a simple observable that will create a new error with a timestamp and log it\n * and the message every time you subscribe to it\n *\n * ```ts\n * import { throwError } from 'rxjs';\n *\n * let errorCount = 0;\n *\n * const errorWithTimestamp$ = throwError(() => {\n *   const error: any = new Error(`This is error number ${ ++errorCount }`);\n *   error.timestamp = Date.now();\n *   return error;\n * });\n *\n * errorWithTimestamp$.subscribe({\n *   error: err => console.log(err.timestamp, err.message)\n * });\n *\n * errorWithTimestamp$.subscribe({\n *   error: err => console.log(err.timestamp, err.message)\n * });\n *\n * // Logs the timestamp and a new error message for each subscription\n * ```\n *\n * ### Unnecessary usage\n *\n * Using `throwError` inside of an operator or creation function\n * with a callback, is usually not necessary\n *\n * ```ts\n * import { of, concatMap, timer, throwError } from 'rxjs';\n *\n * const delays$ = of(1000, 2000, Infinity, 3000);\n *\n * delays$.pipe(\n *   concatMap(ms => {\n *     if (ms < 10000) {\n *       return timer(ms);\n *     } else {\n *       // This is probably overkill.\n *       return throwError(() => new Error(`Invalid time ${ ms }`));\n *     }\n *   })\n * )\n * .subscribe({\n *   next: console.log,\n *   error: console.error\n * });\n * ```\n *\n * You can just throw the error instead\n *\n * ```ts\n * import { of, concatMap, timer } from 'rxjs';\n *\n * const delays$ = of(1000, 2000, Infinity, 3000);\n *\n * delays$.pipe(\n *   concatMap(ms => {\n *     if (ms < 10000) {\n *       return timer(ms);\n *     } else {\n *       // Cleaner and easier to read for most folks.\n *       throw new Error(`Invalid time ${ ms }`);\n *     }\n *   })\n * )\n * .subscribe({\n *   next: console.log,\n *   error: console.error\n * });\n * ```\n *\n * @param errorFactory A factory function that will create the error instance that is pushed.\n */\nexport function throwError(errorFactory: () => any): Observable<never>;\n\n/**\n * Returns an observable that will error with the specified error immediately upon subscription.\n *\n * @param error The error instance to emit\n * @deprecated Support for passing an error value will be removed in v8. Instead, pass a factory function to `throwError(() => new Error('test'))`. This is\n * because it will create the error at the moment it should be created and capture a more appropriate stack trace. If\n * for some reason you need to create the error ahead of time, you can still do that: `const err = new Error('test'); throwError(() => err);`.\n */\nexport function throwError(error: any): Observable<never>;\n\n/**\n * Notifies the consumer of an error using a given scheduler by scheduling it at delay `0` upon subscription.\n *\n * @param errorOrErrorFactory An error instance or error factory\n * @param scheduler A scheduler to use to schedule the error notification\n * @deprecated The `scheduler` parameter will be removed in v8.\n * Use `throwError` in combination with {@link observeOn}: `throwError(() => new Error('test')).pipe(observeOn(scheduler));`.\n * Details: https://rxjs.dev/deprecations/scheduler-argument\n */\nexport function throwError(errorOrErrorFactory: any, scheduler: SchedulerLike): Observable<never>;\n\nexport function throwError(errorOrErrorFactory: any, scheduler?: SchedulerLike): Observable<never> {\n  const errorFactory = isFunction(errorOrErrorFactory) ? errorOrErrorFactory : () => errorOrErrorFactory;\n  const init = (subscriber: Subscriber<never>) => subscriber.error(errorFactory());\n  return new Observable(scheduler ? (subscriber) => scheduler.schedule(init as any, 0, subscriber) : init);\n}\n","import { Observable } from '../Observable';\nimport { SchedulerLike } from '../types';\nimport { async as asyncScheduler } from '../scheduler/async';\nimport { isScheduler } from '../util/isScheduler';\nimport { isValidDate } from '../util/isDate';\n\n/**\n * Creates an observable that will wait for a specified time period, or exact date, before\n * emitting the number 0.\n *\n * <span class=\"informal\">Used to emit a notification after a delay.</span>\n *\n * This observable is useful for creating delays in code, or racing against other values\n * for ad-hoc timeouts.\n *\n * The `delay` is specified by default in milliseconds, however providing a custom scheduler could\n * create a different behavior.\n *\n * ## Examples\n *\n * Wait 3 seconds and start another observable\n *\n * You might want to use `timer` to delay subscription to an\n * observable by a set amount of time. Here we use a timer with\n * {@link concatMapTo} or {@link concatMap} in order to wait\n * a few seconds and start a subscription to a source.\n *\n * ```ts\n * import { of, timer, concatMap } from 'rxjs';\n *\n * // This could be any observable\n * const source = of(1, 2, 3);\n *\n * timer(3000)\n *   .pipe(concatMap(() => source))\n *   .subscribe(console.log);\n * ```\n *\n * Take all values until the start of the next minute\n *\n * Using a `Date` as the trigger for the first emission, you can\n * do things like wait until midnight to fire an event, or in this case,\n * wait until a new minute starts (chosen so the example wouldn't take\n * too long to run) in order to stop watching a stream. Leveraging\n * {@link takeUntil}.\n *\n * ```ts\n * import { interval, takeUntil, timer } from 'rxjs';\n *\n * // Build a Date object that marks the\n * // next minute.\n * const currentDate = new Date();\n * const startOfNextMinute = new Date(\n *   currentDate.getFullYear(),\n *   currentDate.getMonth(),\n *   currentDate.getDate(),\n *   currentDate.getHours(),\n *   currentDate.getMinutes() + 1\n * );\n *\n * // This could be any observable stream\n * const source = interval(1000);\n *\n * const result = source.pipe(\n *   takeUntil(timer(startOfNextMinute))\n * );\n *\n * result.subscribe(console.log);\n * ```\n *\n * ### Known Limitations\n *\n * - The {@link asyncScheduler} uses `setTimeout` which has limitations for how far in the future it can be scheduled.\n *\n * - If a `scheduler` is provided that returns a timestamp other than an epoch from `now()`, and\n * a `Date` object is passed to the `dueTime` argument, the calculation for when the first emission\n * should occur will be incorrect. In this case, it would be best to do your own calculations\n * ahead of time, and pass a `number` in as the `dueTime`.\n *\n * @param due If a `number`, the amount of time in milliseconds to wait before emitting.\n * If a `Date`, the exact time at which to emit.\n * @param scheduler The scheduler to use to schedule the delay. Defaults to {@link asyncScheduler}.\n */\nexport function timer(due: number | Date, scheduler?: SchedulerLike): Observable<0>;\n\n/**\n * Creates an observable that starts an interval after a specified delay, emitting incrementing numbers -- starting at `0` --\n * on each interval after words.\n *\n * The `delay` and `intervalDuration` are specified by default in milliseconds, however providing a custom scheduler could\n * create a different behavior.\n *\n * ## Example\n *\n * ### Start an interval that starts right away\n *\n * Since {@link interval} waits for the passed delay before starting,\n * sometimes that's not ideal. You may want to start an interval immediately.\n * `timer` works well for this. Here we have both side-by-side so you can\n * see them in comparison.\n *\n * Note that this observable will never complete.\n *\n * ```ts\n * import { timer, interval } from 'rxjs';\n *\n * timer(0, 1000).subscribe(n => console.log('timer', n));\n * interval(1000).subscribe(n => console.log('interval', n));\n * ```\n *\n * ### Known Limitations\n *\n * - The {@link asyncScheduler} uses `setTimeout` which has limitations for how far in the future it can be scheduled.\n *\n * - If a `scheduler` is provided that returns a timestamp other than an epoch from `now()`, and\n * a `Date` object is passed to the `dueTime` argument, the calculation for when the first emission\n * should occur will be incorrect. In this case, it would be best to do your own calculations\n * ahead of time, and pass a `number` in as the `startDue`.\n * @param startDue If a `number`, is the time to wait before starting the interval.\n * If a `Date`, is the exact time at which to start the interval.\n * @param intervalDuration The delay between each value emitted in the interval. Passing a\n * negative number here will result in immediate completion after the first value is emitted, as though\n * no `intervalDuration` was passed at all.\n * @param scheduler The scheduler to use to schedule the delay. Defaults to {@link asyncScheduler}.\n */\nexport function timer(startDue: number | Date, intervalDuration: number, scheduler?: SchedulerLike): Observable<number>;\n\n/**\n * @deprecated The signature allowing `undefined` to be passed for `intervalDuration` will be removed in v8. Use the `timer(dueTime, scheduler?)` signature instead.\n */\nexport function timer(dueTime: number | Date, unused: undefined, scheduler?: SchedulerLike): Observable<0>;\n\nexport function timer(\n  dueTime: number | Date = 0,\n  intervalOrScheduler?: number | SchedulerLike,\n  scheduler: SchedulerLike = asyncScheduler\n): Observable<number> {\n  // Since negative intervalDuration is treated as though no\n  // interval was specified at all, we start with a negative number.\n  let intervalDuration = -1;\n\n  if (intervalOrScheduler != null) {\n    // If we have a second argument, and it's a scheduler,\n    // override the scheduler we had defaulted. Otherwise,\n    // it must be an interval.\n    if (isScheduler(intervalOrScheduler)) {\n      scheduler = intervalOrScheduler;\n    } else {\n      // Note that this *could* be negative, in which case\n      // it's like not passing an intervalDuration at all.\n      intervalDuration = intervalOrScheduler;\n    }\n  }\n\n  return new Observable((subscriber) => {\n    // If a valid date is passed, calculate how long to wait before\n    // executing the first value... otherwise, if it's a number just schedule\n    // that many milliseconds (or scheduler-specified unit size) in the future.\n    let due = isValidDate(dueTime) ? +dueTime - scheduler!.now() : dueTime;\n\n    if (due < 0) {\n      // Ensure we don't schedule in the future.\n      due = 0;\n    }\n\n    // The incrementing value we emit.\n    let n = 0;\n\n    // Start the timer.\n    return scheduler.schedule(function () {\n      if (!subscriber.closed) {\n        // Emit the next value and increment.\n        subscriber.next(n++);\n\n        if (0 <= intervalDuration) {\n          // If we have a interval after the initial timer,\n          // reschedule with the period.\n          this.schedule(undefined, intervalDuration);\n        } else {\n          // We didn't have an interval. So just complete.\n          subscriber.complete();\n        }\n      }\n    }, due);\n  });\n}\n","import { Observable } from '../Observable';\nimport { Unsubscribable, ObservableInput, ObservedValueOf } from '../types';\nimport { innerFrom } from './innerFrom';\nimport { EMPTY } from './empty';\n\n/**\n * Creates an Observable that uses a resource which will be disposed at the same time as the Observable.\n *\n * <span class=\"informal\">Use it when you catch yourself cleaning up after an Observable.</span>\n *\n * `using` is a factory operator, which accepts two functions. First function returns a disposable resource.\n * It can be an arbitrary object that implements `unsubscribe` method. Second function will be injected with\n * that object and should return an Observable. That Observable can use resource object during its execution.\n * Both functions passed to `using` will be called every time someone subscribes - neither an Observable nor\n * resource object will be shared in any way between subscriptions.\n *\n * When Observable returned by `using` is subscribed, Observable returned from the second function will be subscribed\n * as well. All its notifications (nexted values, completion and error events) will be emitted unchanged by the output\n * Observable. If however someone unsubscribes from the Observable or source Observable completes or errors by itself,\n * the `unsubscribe` method on resource object will be called. This can be used to do any necessary clean up, which\n * otherwise would have to be handled by hand. Note that complete or error notifications are not emitted when someone\n * cancels subscription to an Observable via `unsubscribe`, so `using` can be used as a hook, allowing you to make\n * sure that all resources which need to exist during an Observable execution will be disposed at appropriate time.\n *\n * @see {@link defer}\n *\n * @param {function(): ISubscription} resourceFactory A function which creates any resource object\n * that implements `unsubscribe` method.\n * @param {function(resource: ISubscription): Observable<T>} observableFactory A function which\n * creates an Observable, that can use injected resource object.\n * @return {Observable<T>} An Observable that behaves the same as Observable returned by `observableFactory`, but\n * which - when completed, errored or unsubscribed - will also call `unsubscribe` on created resource object.\n */\nexport function using<T extends ObservableInput<any>>(\n  resourceFactory: () => Unsubscribable | void,\n  observableFactory: (resource: Unsubscribable | void) => T | void\n): Observable<ObservedValueOf<T>> {\n  return new Observable<ObservedValueOf<T>>((subscriber) => {\n    const resource = resourceFactory();\n    const result = observableFactory(resource);\n    const source = result ? innerFrom(result) : EMPTY;\n    source.subscribe(subscriber);\n    return () => {\n      // NOTE: Optional chaining did not work here.\n      // Related TS Issue: https://github.com/microsoft/TypeScript/issues/40818\n      if (resource) {\n        resource.unsubscribe();\n      }\n    };\n  });\n}\n","import { Observable } from '../Observable';\nimport { ObservableInputTuple } from '../types';\nimport { innerFrom } from './innerFrom';\nimport { argsOrArgArray } from '../util/argsOrArgArray';\nimport { EMPTY } from './empty';\nimport { createOperatorSubscriber } from '../operators/OperatorSubscriber';\nimport { popResultSelector } from '../util/args';\n\nexport function zip<A extends readonly unknown[]>(sources: [...ObservableInputTuple<A>]): Observable<A>;\nexport function zip<A extends readonly unknown[], R>(\n  sources: [...ObservableInputTuple<A>],\n  resultSelector: (...values: A) => R\n): Observable<R>;\nexport function zip<A extends readonly unknown[]>(...sources: [...ObservableInputTuple<A>]): Observable<A>;\nexport function zip<A extends readonly unknown[], R>(\n  ...sourcesAndResultSelector: [...ObservableInputTuple<A>, (...values: A) => R]\n): Observable<R>;\n\n/**\n * Combines multiple Observables to create an Observable whose values are calculated from the values, in order, of each\n * of its input Observables.\n *\n * If the last parameter is a function, this function is used to compute the created value from the input values.\n * Otherwise, an array of the input values is returned.\n *\n * ## Example\n *\n * Combine age and name from different sources\n *\n * ```ts\n * import { of, zip, map } from 'rxjs';\n *\n * const age$ = of(27, 25, 29);\n * const name$ = of('Foo', 'Bar', 'Beer');\n * const isDev$ = of(true, true, false);\n *\n * zip(age$, name$, isDev$).pipe(\n *   map(([age, name, isDev]) => ({ age, name, isDev }))\n * )\n * .subscribe(x => console.log(x));\n *\n * // Outputs\n * // { age: 27, name: 'Foo', isDev: true }\n * // { age: 25, name: 'Bar', isDev: true }\n * // { age: 29, name: 'Beer', isDev: false }\n * ```\n *\n * @param sources\n * @return {Observable<R>}\n */\nexport function zip(...args: unknown[]): Observable<unknown> {\n  const resultSelector = popResultSelector(args);\n\n  const sources = argsOrArgArray(args) as Observable<unknown>[];\n\n  return sources.length\n    ? new Observable<unknown[]>((subscriber) => {\n        // A collection of buffers of values from each source.\n        // Keyed by the same index with which the sources were passed in.\n        let buffers: unknown[][] = sources.map(() => []);\n\n        // An array of flags of whether or not the sources have completed.\n        // This is used to check to see if we should complete the result.\n        // Keyed by the same index with which the sources were passed in.\n        let completed = sources.map(() => false);\n\n        // When everything is done, release the arrays above.\n        subscriber.add(() => {\n          buffers = completed = null!;\n        });\n\n        // Loop over our sources and subscribe to each one. The index `i` is\n        // especially important here, because we use it in closures below to\n        // access the related buffers and completion properties\n        for (let sourceIndex = 0; !subscriber.closed && sourceIndex < sources.length; sourceIndex++) {\n          innerFrom(sources[sourceIndex]).subscribe(\n            createOperatorSubscriber(\n              subscriber,\n              (value) => {\n                buffers[sourceIndex].push(value);\n                // if every buffer has at least one value in it, then we\n                // can shift out the oldest value from each buffer and emit\n                // them as an array.\n                if (buffers.every((buffer) => buffer.length)) {\n                  const result: any = buffers.map((buffer) => buffer.shift()!);\n                  // Emit the array. If theres' a result selector, use that.\n                  subscriber.next(resultSelector ? resultSelector(...result) : result);\n                  // If any one of the sources is both complete and has an empty buffer\n                  // then we complete the result. This is because we cannot possibly have\n                  // any more values to zip together.\n                  if (buffers.some((buffer, i) => !buffer.length && completed[i])) {\n                    subscriber.complete();\n                  }\n                }\n              },\n              () => {\n                // This source completed. Mark it as complete so we can check it later\n                // if we have to.\n                completed[sourceIndex] = true;\n                // But, if this complete source has nothing in its buffer, then we\n                // can complete the result, because we can't possibly have any more\n                // values from this to zip together with the other values.\n                !buffers[sourceIndex].length && subscriber.complete();\n              }\n            )\n          );\n        }\n\n        // When everything is done, release the arrays above.\n        return () => {\n          buffers = completed = null!;\n        };\n      })\n    : EMPTY;\n}\n","import { Subscriber } from '../Subscriber';\n\n/**\n * Creates an instance of an `OperatorSubscriber`.\n * @param destination The downstream subscriber.\n * @param onNext Handles next values, only called if this subscriber is not stopped or closed. Any\n * error that occurs in this function is caught and sent to the `error` method of this subscriber.\n * @param onError Handles errors from the subscription, any errors that occur in this handler are caught\n * and send to the `destination` error handler.\n * @param onComplete Handles completion notification from the subscription. Any errors that occur in\n * this handler are sent to the `destination` error handler.\n * @param onFinalize Additional teardown logic here. This will only be called on teardown if the\n * subscriber itself is not already closed. This is called after all other teardown logic is executed.\n */\nexport function createOperatorSubscriber<T>(\n  destination: Subscriber<any>,\n  onNext?: (value: T) => void,\n  onComplete?: () => void,\n  onError?: (err: any) => void,\n  onFinalize?: () => void\n): Subscriber<T> {\n  return new OperatorSubscriber(destination, onNext, onComplete, onError, onFinalize);\n}\n\n/**\n * A generic helper for allowing operators to be created with a Subscriber and\n * use closures to capture necessary state from the operator function itself.\n */\nexport class OperatorSubscriber<T> extends Subscriber<T> {\n  /**\n   * Creates an instance of an `OperatorSubscriber`.\n   * @param destination The downstream subscriber.\n   * @param onNext Handles next values, only called if this subscriber is not stopped or closed. Any\n   * error that occurs in this function is caught and sent to the `error` method of this subscriber.\n   * @param onError Handles errors from the subscription, any errors that occur in this handler are caught\n   * and send to the `destination` error handler.\n   * @param onComplete Handles completion notification from the subscription. Any errors that occur in\n   * this handler are sent to the `destination` error handler.\n   * @param onFinalize Additional finalization logic here. This will only be called on finalization if the\n   * subscriber itself is not already closed. This is called after all other finalization logic is executed.\n   * @param shouldUnsubscribe An optional check to see if an unsubscribe call should truly unsubscribe.\n   * NOTE: This currently **ONLY** exists to support the strange behavior of {@link groupBy}, where unsubscription\n   * to the resulting observable does not actually disconnect from the source if there are active subscriptions\n   * to any grouped observable. (DO NOT EXPOSE OR USE EXTERNALLY!!!)\n   */\n  constructor(\n    destination: Subscriber<any>,\n    onNext?: (value: T) => void,\n    onComplete?: () => void,\n    onError?: (err: any) => void,\n    private onFinalize?: () => void,\n    private shouldUnsubscribe?: () => boolean\n  ) {\n    // It's important - for performance reasons - that all of this class's\n    // members are initialized and that they are always initialized in the same\n    // order. This will ensure that all OperatorSubscriber instances have the\n    // same hidden class in V8. This, in turn, will help keep the number of\n    // hidden classes involved in property accesses within the base class as\n    // low as possible. If the number of hidden classes involved exceeds four,\n    // the property accesses will become megamorphic and performance penalties\n    // will be incurred - i.e. inline caches won't be used.\n    //\n    // The reasons for ensuring all instances have the same hidden class are\n    // further discussed in this blog post from Benedikt Meurer:\n    // https://benediktmeurer.de/2018/03/23/impact-of-polymorphism-on-component-based-frameworks-like-react/\n    super(destination);\n    this._next = onNext\n      ? function (this: OperatorSubscriber<T>, value: T) {\n          try {\n            onNext(value);\n          } catch (err) {\n            destination.error(err);\n          }\n        }\n      : super._next;\n    this._error = onError\n      ? function (this: OperatorSubscriber<T>, err: any) {\n          try {\n            onError(err);\n          } catch (err) {\n            // Send any errors that occur down stream.\n            destination.error(err);\n          } finally {\n            // Ensure finalization.\n            this.unsubscribe();\n          }\n        }\n      : super._error;\n    this._complete = onComplete\n      ? function (this: OperatorSubscriber<T>) {\n          try {\n            onComplete();\n          } catch (err) {\n            // Send any errors that occur down stream.\n            destination.error(err);\n          } finally {\n            // Ensure finalization.\n            this.unsubscribe();\n          }\n        }\n      : super._complete;\n  }\n\n  unsubscribe() {\n    if (!this.shouldUnsubscribe || this.shouldUnsubscribe()) {\n      const { closed } = this;\n      super.unsubscribe();\n      // Execute additional teardown if we have any and we didn't already do so.\n      !closed && this.onFinalize?.();\n    }\n  }\n}\n","import { Subscriber } from '../Subscriber';\nimport { MonoTypeOperatorFunction, ObservableInput } from '../types';\n\nimport { operate } from '../util/lift';\nimport { innerFrom } from '../observable/innerFrom';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\n\n/**\n * Ignores source values for a duration determined by another Observable, then\n * emits the most recent value from the source Observable, then repeats this\n * process.\n *\n * <span class=\"informal\">It's like {@link auditTime}, but the silencing\n * duration is determined by a second Observable.</span>\n *\n * ![](audit.svg)\n *\n * `audit` is similar to `throttle`, but emits the last value from the silenced\n * time window, instead of the first value. `audit` emits the most recent value\n * from the source Observable on the output Observable as soon as its internal\n * timer becomes disabled, and ignores source values while the timer is enabled.\n * Initially, the timer is disabled. As soon as the first source value arrives,\n * the timer is enabled by calling the `durationSelector` function with the\n * source value, which returns the \"duration\" Observable. When the duration\n * Observable emits a value, the timer is disabled, then the most\n * recent source value is emitted on the output Observable, and this process\n * repeats for the next source value.\n *\n * ## Example\n *\n * Emit clicks at a rate of at most one click per second\n *\n * ```ts\n * import { fromEvent, audit, interval } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const result = clicks.pipe(audit(ev => interval(1000)));\n * result.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link auditTime}\n * @see {@link debounce}\n * @see {@link delayWhen}\n * @see {@link sample}\n * @see {@link throttle}\n *\n * @param durationSelector A function\n * that receives a value from the source Observable, for computing the silencing\n * duration, returned as an Observable or a Promise.\n * @return A function that returns an Observable that performs rate-limiting of\n * emissions from the source Observable.\n */\nexport function audit<T>(durationSelector: (value: T) => ObservableInput<any>): MonoTypeOperatorFunction<T> {\n  return operate((source, subscriber) => {\n    let hasValue = false;\n    let lastValue: T | null = null;\n    let durationSubscriber: Subscriber<any> | null = null;\n    let isComplete = false;\n\n    const endDuration = () => {\n      durationSubscriber?.unsubscribe();\n      durationSubscriber = null;\n      if (hasValue) {\n        hasValue = false;\n        const value = lastValue!;\n        lastValue = null;\n        subscriber.next(value);\n      }\n      isComplete && subscriber.complete();\n    };\n\n    const cleanupDuration = () => {\n      durationSubscriber = null;\n      isComplete && subscriber.complete();\n    };\n\n    source.subscribe(\n      createOperatorSubscriber(\n        subscriber,\n        (value) => {\n          hasValue = true;\n          lastValue = value;\n          if (!durationSubscriber) {\n            innerFrom(durationSelector(value)).subscribe(\n              (durationSubscriber = createOperatorSubscriber(subscriber, endDuration, cleanupDuration))\n            );\n          }\n        },\n        () => {\n          isComplete = true;\n          (!hasValue || !durationSubscriber || durationSubscriber.closed) && subscriber.complete();\n        }\n      )\n    );\n  });\n}\n","import { asyncScheduler } from '../scheduler/async';\nimport { audit } from './audit';\nimport { timer } from '../observable/timer';\nimport { MonoTypeOperatorFunction, SchedulerLike } from '../types';\n\n/**\n * Ignores source values for `duration` milliseconds, then emits the most recent\n * value from the source Observable, then repeats this process.\n *\n * <span class=\"informal\">When it sees a source value, it ignores that plus\n * the next ones for `duration` milliseconds, and then it emits the most recent\n * value from the source.</span>\n *\n * ![](auditTime.png)\n *\n * `auditTime` is similar to `throttleTime`, but emits the last value from the\n * silenced time window, instead of the first value. `auditTime` emits the most\n * recent value from the source Observable on the output Observable as soon as\n * its internal timer becomes disabled, and ignores source values while the\n * timer is enabled. Initially, the timer is disabled. As soon as the first\n * source value arrives, the timer is enabled. After `duration` milliseconds (or\n * the time unit determined internally by the optional `scheduler`) has passed,\n * the timer is disabled, then the most recent source value is emitted on the\n * output Observable, and this process repeats for the next source value.\n * Optionally takes a {@link SchedulerLike} for managing timers.\n *\n * ## Example\n *\n * Emit clicks at a rate of at most one click per second\n *\n * ```ts\n * import { fromEvent, auditTime } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const result = clicks.pipe(auditTime(1000));\n * result.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link audit}\n * @see {@link debounceTime}\n * @see {@link delay}\n * @see {@link sampleTime}\n * @see {@link throttleTime}\n *\n * @param {number} duration Time to wait before emitting the most recent source\n * value, measured in milliseconds or the time unit determined internally\n * by the optional `scheduler`.\n * @param {SchedulerLike} [scheduler=async] The {@link SchedulerLike} to use for\n * managing the timers that handle the rate-limiting behavior.\n * @return A function that returns an Observable that performs rate-limiting of\n * emissions from the source Observable.\n */\nexport function auditTime<T>(duration: number, scheduler: SchedulerLike = asyncScheduler): MonoTypeOperatorFunction<T> {\n  return audit(() => timer(duration, scheduler));\n}\n","import { Observable } from '../Observable';\nimport { OperatorFunction } from '../types';\nimport { operate } from '../util/lift';\nimport { noop } from '../util/noop';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\n\n/**\n * Buffers the source Observable values until `closingNotifier` emits.\n *\n * <span class=\"informal\">Collects values from the past as an array, and emits\n * that array only when another Observable emits.</span>\n *\n * ![](buffer.png)\n *\n * Buffers the incoming Observable values until the given `closingNotifier`\n * Observable emits a value, at which point it emits the buffer on the output\n * Observable and starts a new buffer internally, awaiting the next time\n * `closingNotifier` emits.\n *\n * ## Example\n *\n * On every click, emit array of most recent interval events\n *\n * ```ts\n * import { fromEvent, interval, buffer } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const intervalEvents = interval(1000);\n * const buffered = intervalEvents.pipe(buffer(clicks));\n * buffered.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link bufferCount}\n * @see {@link bufferTime}\n * @see {@link bufferToggle}\n * @see {@link bufferWhen}\n * @see {@link window}\n *\n * @param {Observable<any>} closingNotifier An Observable that signals the\n * buffer to be emitted on the output Observable.\n * @return A function that returns an Observable of buffers, which are arrays\n * of values.\n */\nexport function buffer<T>(closingNotifier: Observable<any>): OperatorFunction<T, T[]> {\n  return operate((source, subscriber) => {\n    // The current buffered values.\n    let currentBuffer: T[] = [];\n\n    // Subscribe to our source.\n    source.subscribe(\n      createOperatorSubscriber(\n        subscriber,\n        (value) => currentBuffer.push(value),\n        () => {\n          subscriber.next(currentBuffer);\n          subscriber.complete();\n        }\n      )\n    );\n\n    // Subscribe to the closing notifier.\n    closingNotifier.subscribe(\n      createOperatorSubscriber(\n        subscriber,\n        () => {\n          // Start a new buffer and emit the previous one.\n          const b = currentBuffer;\n          currentBuffer = [];\n          subscriber.next(b);\n        },\n        noop\n      )\n    );\n\n    return () => {\n      // Ensure buffered values are released on finalization.\n      currentBuffer = null!;\n    };\n  });\n}\n","import { OperatorFunction } from '../types';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nimport { arrRemove } from '../util/arrRemove';\n\n/**\n * Buffers the source Observable values until the size hits the maximum\n * `bufferSize` given.\n *\n * <span class=\"informal\">Collects values from the past as an array, and emits\n * that array only when its size reaches `bufferSize`.</span>\n *\n * ![](bufferCount.png)\n *\n * Buffers a number of values from the source Observable by `bufferSize` then\n * emits the buffer and clears it, and starts a new buffer each\n * `startBufferEvery` values. If `startBufferEvery` is not provided or is\n * `null`, then new buffers are started immediately at the start of the source\n * and when each buffer closes and is emitted.\n *\n * ## Examples\n *\n * Emit the last two click events as an array\n *\n * ```ts\n * import { fromEvent, bufferCount } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const buffered = clicks.pipe(bufferCount(2));\n * buffered.subscribe(x => console.log(x));\n * ```\n *\n * On every click, emit the last two click events as an array\n *\n * ```ts\n * import { fromEvent, bufferCount } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const buffered = clicks.pipe(bufferCount(2, 1));\n * buffered.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link buffer}\n * @see {@link bufferTime}\n * @see {@link bufferToggle}\n * @see {@link bufferWhen}\n * @see {@link pairwise}\n * @see {@link windowCount}\n *\n * @param {number} bufferSize The maximum size of the buffer emitted.\n * @param {number} [startBufferEvery] Interval at which to start a new buffer.\n * For example if `startBufferEvery` is `2`, then a new buffer will be started\n * on every other value from the source. A new buffer is started at the\n * beginning of the source by default.\n * @return A function that returns an Observable of arrays of buffered values.\n */\nexport function bufferCount<T>(bufferSize: number, startBufferEvery: number | null = null): OperatorFunction<T, T[]> {\n  // If no `startBufferEvery` value was supplied, then we're\n  // opening and closing on the bufferSize itself.\n  startBufferEvery = startBufferEvery ?? bufferSize;\n\n  return operate((source, subscriber) => {\n    let buffers: T[][] = [];\n    let count = 0;\n\n    source.subscribe(\n      createOperatorSubscriber(\n        subscriber,\n        (value) => {\n          let toEmit: T[][] | null = null;\n\n          // Check to see if we need to start a buffer.\n          // This will start one at the first value, and then\n          // a new one every N after that.\n          if (count++ % startBufferEvery! === 0) {\n            buffers.push([]);\n          }\n\n          // Push our value into our active buffers.\n          for (const buffer of buffers) {\n            buffer.push(value);\n            // Check to see if we're over the bufferSize\n            // if we are, record it so we can emit it later.\n            // If we emitted it now and removed it, it would\n            // mutate the `buffers` array while we're looping\n            // over it.\n            if (bufferSize <= buffer.length) {\n              toEmit = toEmit ?? [];\n              toEmit.push(buffer);\n            }\n          }\n\n          if (toEmit) {\n            // We have found some buffers that are over the\n            // `bufferSize`. Emit them, and remove them from our\n            // buffers list.\n            for (const buffer of toEmit) {\n              arrRemove(buffers, buffer);\n              subscriber.next(buffer);\n            }\n          }\n        },\n        () => {\n          // When the source completes, emit all of our\n          // active buffers.\n          for (const buffer of buffers) {\n            subscriber.next(buffer);\n          }\n          subscriber.complete();\n        },\n        // Pass all errors through to consumer.\n        undefined,\n        () => {\n          // Clean up our memory when we finalize\n          buffers = null!;\n        }\n      )\n    );\n  });\n}\n","import { Subscription } from '../Subscription';\nimport { OperatorFunction, SchedulerLike } from '../types';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nimport { arrRemove } from '../util/arrRemove';\nimport { asyncScheduler } from '../scheduler/async';\nimport { popScheduler } from '../util/args';\nimport { executeSchedule } from '../util/executeSchedule';\n\n/* tslint:disable:max-line-length */\nexport function bufferTime<T>(bufferTimeSpan: number, scheduler?: SchedulerLike): OperatorFunction<T, T[]>;\nexport function bufferTime<T>(\n  bufferTimeSpan: number,\n  bufferCreationInterval: number | null | undefined,\n  scheduler?: SchedulerLike\n): OperatorFunction<T, T[]>;\nexport function bufferTime<T>(\n  bufferTimeSpan: number,\n  bufferCreationInterval: number | null | undefined,\n  maxBufferSize: number,\n  scheduler?: SchedulerLike\n): OperatorFunction<T, T[]>;\n/* tslint:enable:max-line-length */\n\n/**\n * Buffers the source Observable values for a specific time period.\n *\n * <span class=\"informal\">Collects values from the past as an array, and emits\n * those arrays periodically in time.</span>\n *\n * ![](bufferTime.png)\n *\n * Buffers values from the source for a specific time duration `bufferTimeSpan`.\n * Unless the optional argument `bufferCreationInterval` is given, it emits and\n * resets the buffer every `bufferTimeSpan` milliseconds. If\n * `bufferCreationInterval` is given, this operator opens the buffer every\n * `bufferCreationInterval` milliseconds and closes (emits and resets) the\n * buffer every `bufferTimeSpan` milliseconds. When the optional argument\n * `maxBufferSize` is specified, the buffer will be closed either after\n * `bufferTimeSpan` milliseconds or when it contains `maxBufferSize` elements.\n *\n * ## Examples\n *\n * Every second, emit an array of the recent click events\n *\n * ```ts\n * import { fromEvent, bufferTime } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const buffered = clicks.pipe(bufferTime(1000));\n * buffered.subscribe(x => console.log(x));\n * ```\n *\n * Every 5 seconds, emit the click events from the next 2 seconds\n *\n * ```ts\n * import { fromEvent, bufferTime } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const buffered = clicks.pipe(bufferTime(2000, 5000));\n * buffered.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link buffer}\n * @see {@link bufferCount}\n * @see {@link bufferToggle}\n * @see {@link bufferWhen}\n * @see {@link windowTime}\n *\n * @param {number} bufferTimeSpan The amount of time to fill each buffer array.\n * @param {number} [bufferCreationInterval] The interval at which to start new\n * buffers.\n * @param {number} [maxBufferSize] The maximum buffer size.\n * @param {SchedulerLike} [scheduler=async] The scheduler on which to schedule the\n * intervals that determine buffer boundaries.\n * @return A function that returns an Observable of arrays of buffered values.\n */\nexport function bufferTime<T>(bufferTimeSpan: number, ...otherArgs: any[]): OperatorFunction<T, T[]> {\n  const scheduler = popScheduler(otherArgs) ?? asyncScheduler;\n  const bufferCreationInterval = (otherArgs[0] as number) ?? null;\n  const maxBufferSize = (otherArgs[1] as number) || Infinity;\n\n  return operate((source, subscriber) => {\n    // The active buffers, their related subscriptions, and removal functions.\n    let bufferRecords: { buffer: T[]; subs: Subscription }[] | null = [];\n    // If true, it means that every time we emit a buffer, we want to start a new buffer\n    // this is only really used for when *just* the buffer time span is passed.\n    let restartOnEmit = false;\n\n    /**\n     * Does the work of emitting the buffer from the record, ensuring that the\n     * record is removed before the emission so reentrant code (from some custom scheduling, perhaps)\n     * does not alter the buffer. Also checks to see if a new buffer needs to be started\n     * after the emit.\n     */\n    const emit = (record: { buffer: T[]; subs: Subscription }) => {\n      const { buffer, subs } = record;\n      subs.unsubscribe();\n      arrRemove(bufferRecords, record);\n      subscriber.next(buffer);\n      restartOnEmit && startBuffer();\n    };\n\n    /**\n     * Called every time we start a new buffer. This does\n     * the work of scheduling a job at the requested bufferTimeSpan\n     * that will emit the buffer (if it's not unsubscribed before then).\n     */\n    const startBuffer = () => {\n      if (bufferRecords) {\n        const subs = new Subscription();\n        subscriber.add(subs);\n        const buffer: T[] = [];\n        const record = {\n          buffer,\n          subs,\n        };\n        bufferRecords.push(record);\n        executeSchedule(subs, scheduler, () => emit(record), bufferTimeSpan);\n      }\n    };\n\n    if (bufferCreationInterval !== null && bufferCreationInterval >= 0) {\n      // The user passed both a bufferTimeSpan (required), and a creation interval\n      // That means we need to start new buffers on the interval, and those buffers need\n      // to wait the required time span before emitting.\n      executeSchedule(subscriber, scheduler, startBuffer, bufferCreationInterval, true);\n    } else {\n      restartOnEmit = true;\n    }\n\n    startBuffer();\n\n    const bufferTimeSubscriber = createOperatorSubscriber(\n      subscriber,\n      (value: T) => {\n        // Copy the records, so if we need to remove one we\n        // don't mutate the array. It's hard, but not impossible to\n        // set up a buffer time that could mutate the array and\n        // cause issues here.\n        const recordsCopy = bufferRecords!.slice();\n        for (const record of recordsCopy) {\n          // Loop over all buffers and\n          const { buffer } = record;\n          buffer.push(value);\n          // If the buffer is over the max size, we need to emit it.\n          maxBufferSize <= buffer.length && emit(record);\n        }\n      },\n      () => {\n        // The source completed, emit all of the active\n        // buffers we have before we complete.\n        while (bufferRecords?.length) {\n          subscriber.next(bufferRecords.shift()!.buffer);\n        }\n        bufferTimeSubscriber?.unsubscribe();\n        subscriber.complete();\n        subscriber.unsubscribe();\n      },\n      // Pass all errors through to consumer.\n      undefined,\n      // Clean up\n      () => (bufferRecords = null)\n    );\n\n    source.subscribe(bufferTimeSubscriber);\n  });\n}\n","import { Subscription } from '../Subscription';\nimport { OperatorFunction, ObservableInput } from '../types';\nimport { operate } from '../util/lift';\nimport { innerFrom } from '../observable/innerFrom';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nimport { noop } from '../util/noop';\nimport { arrRemove } from '../util/arrRemove';\n\n/**\n * Buffers the source Observable values starting from an emission from\n * `openings` and ending when the output of `closingSelector` emits.\n *\n * <span class=\"informal\">Collects values from the past as an array. Starts\n * collecting only when `opening` emits, and calls the `closingSelector`\n * function to get an Observable that tells when to close the buffer.</span>\n *\n * ![](bufferToggle.png)\n *\n * Buffers values from the source by opening the buffer via signals from an\n * Observable provided to `openings`, and closing and sending the buffers when\n * a Subscribable or Promise returned by the `closingSelector` function emits.\n *\n * ## Example\n *\n * Every other second, emit the click events from the next 500ms\n *\n * ```ts\n * import { fromEvent, interval, bufferToggle, EMPTY } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const openings = interval(1000);\n * const buffered = clicks.pipe(bufferToggle(openings, i =>\n *   i % 2 ? interval(500) : EMPTY\n * ));\n * buffered.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link buffer}\n * @see {@link bufferCount}\n * @see {@link bufferTime}\n * @see {@link bufferWhen}\n * @see {@link windowToggle}\n *\n * @param openings A Subscribable or Promise of notifications to start new\n * buffers.\n * @param closingSelector A function that takes\n * the value emitted by the `openings` observable and returns a Subscribable or Promise,\n * which, when it emits, signals that the associated buffer should be emitted\n * and cleared.\n * @return A function that returns an Observable of arrays of buffered values.\n */\nexport function bufferToggle<T, O>(\n  openings: ObservableInput<O>,\n  closingSelector: (value: O) => ObservableInput<any>\n): OperatorFunction<T, T[]> {\n  return operate((source, subscriber) => {\n    const buffers: T[][] = [];\n\n    // Subscribe to the openings notifier first\n    innerFrom(openings).subscribe(\n      createOperatorSubscriber(\n        subscriber,\n        (openValue) => {\n          const buffer: T[] = [];\n          buffers.push(buffer);\n          // We use this composite subscription, so that\n          // when the closing notifier emits, we can tear it down.\n          const closingSubscription = new Subscription();\n\n          const emitBuffer = () => {\n            arrRemove(buffers, buffer);\n            subscriber.next(buffer);\n            closingSubscription.unsubscribe();\n          };\n\n          // The line below will add the subscription to the parent subscriber *and* the closing subscription.\n          closingSubscription.add(innerFrom(closingSelector(openValue)).subscribe(createOperatorSubscriber(subscriber, emitBuffer, noop)));\n        },\n        noop\n      )\n    );\n\n    source.subscribe(\n      createOperatorSubscriber(\n        subscriber,\n        (value) => {\n          // Value from our source. Add it to all pending buffers.\n          for (const buffer of buffers) {\n            buffer.push(value);\n          }\n        },\n        () => {\n          // Source complete. Emit all pending buffers.\n          while (buffers.length > 0) {\n            subscriber.next(buffers.shift()!);\n          }\n          subscriber.complete();\n        }\n      )\n    );\n  });\n}\n","import { Subscriber } from '../Subscriber';\nimport { ObservableInput, OperatorFunction } from '../types';\nimport { operate } from '../util/lift';\nimport { noop } from '../util/noop';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nimport { innerFrom } from '../observable/innerFrom';\n\n/**\n * Buffers the source Observable values, using a factory function of closing\n * Observables to determine when to close, emit, and reset the buffer.\n *\n * <span class=\"informal\">Collects values from the past as an array. When it\n * starts collecting values, it calls a function that returns an Observable that\n * tells when to close the buffer and restart collecting.</span>\n *\n * ![](bufferWhen.svg)\n *\n * Opens a buffer immediately, then closes the buffer when the observable\n * returned by calling `closingSelector` function emits a value. When it closes\n * the buffer, it immediately opens a new buffer and repeats the process.\n *\n * ## Example\n *\n * Emit an array of the last clicks every [1-5] random seconds\n *\n * ```ts\n * import { fromEvent, bufferWhen, interval } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const buffered = clicks.pipe(\n *   bufferWhen(() => interval(1000 + Math.random() * 4000))\n * );\n * buffered.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link buffer}\n * @see {@link bufferCount}\n * @see {@link bufferTime}\n * @see {@link bufferToggle}\n * @see {@link windowWhen}\n *\n * @param {function(): Observable} closingSelector A function that takes no\n * arguments and returns an Observable that signals buffer closure.\n * @return A function that returns an Observable of arrays of buffered values.\n */\nexport function bufferWhen<T>(closingSelector: () => ObservableInput<any>): OperatorFunction<T, T[]> {\n  return operate((source, subscriber) => {\n    // The buffer we keep and emit.\n    let buffer: T[] | null = null;\n    // A reference to the subscriber used to subscribe to\n    // the closing notifier. We need to hold this so we can\n    // end the subscription after the first notification.\n    let closingSubscriber: Subscriber<T> | null = null;\n\n    // Ends the previous closing notifier subscription, so it\n    // terminates after the first emission, then emits\n    // the current buffer  if there is one, starts a new buffer, and starts a\n    // new closing notifier.\n    const openBuffer = () => {\n      // Make sure to finalize the closing subscription, we only cared\n      // about one notification.\n      closingSubscriber?.unsubscribe();\n      // emit the buffer if we have one, and start a new buffer.\n      const b = buffer;\n      buffer = [];\n      b && subscriber.next(b);\n\n      // Get a new closing notifier and subscribe to it.\n      innerFrom(closingSelector()).subscribe((closingSubscriber = createOperatorSubscriber(subscriber, openBuffer, noop)));\n    };\n\n    // Start the first buffer.\n    openBuffer();\n\n    // Subscribe to our source.\n    source.subscribe(\n      createOperatorSubscriber(\n        subscriber,\n        // Add every new value to the current buffer.\n        (value) => buffer?.push(value),\n        // When we complete, emit the buffer if we have one,\n        // then complete the result.\n        () => {\n          buffer && subscriber.next(buffer);\n          subscriber.complete();\n        },\n        // Pass all errors through to consumer.\n        undefined,\n        // Release memory on finalization\n        () => (buffer = closingSubscriber = null!)\n      )\n    );\n  });\n}\n","import { Observable } from '../Observable';\n\nimport { ObservableInput, OperatorFunction, ObservedValueOf } from '../types';\nimport { Subscription } from '../Subscription';\nimport { innerFrom } from '../observable/innerFrom';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nimport { operate } from '../util/lift';\n\n/* tslint:disable:max-line-length */\nexport function catchError<T, O extends ObservableInput<any>>(\n  selector: (err: any, caught: Observable<T>) => O\n): OperatorFunction<T, T | ObservedValueOf<O>>;\n/* tslint:enable:max-line-length */\n\n/**\n * Catches errors on the observable to be handled by returning a new observable or throwing an error.\n *\n * <span class=\"informal\">\n * It only listens to the error channel and ignores notifications.\n * Handles errors from the source observable, and maps them to a new observable.\n * The error may also be rethrown, or a new error can be thrown to emit an error from the result.\n * </span>\n *\n * ![](catch.png)\n *\n * This operator handles errors, but forwards along all other events to the resulting observable.\n * If the source observable terminates with an error, it will map that error to a new observable,\n * subscribe to it, and forward all of its events to the resulting observable.\n *\n * ## Examples\n *\n * Continue with a different Observable when there's an error\n *\n * ```ts\n * import { of, map, catchError } from 'rxjs';\n *\n * of(1, 2, 3, 4, 5)\n *   .pipe(\n *     map(n => {\n *       if (n === 4) {\n *         throw 'four!';\n *       }\n *       return n;\n *     }),\n *     catchError(err => of('I', 'II', 'III', 'IV', 'V'))\n *   )\n *   .subscribe(x => console.log(x));\n *   // 1, 2, 3, I, II, III, IV, V\n * ```\n *\n * Retry the caught source Observable again in case of error, similar to `retry()` operator\n *\n * ```ts\n * import { of, map, catchError, take } from 'rxjs';\n *\n * of(1, 2, 3, 4, 5)\n *   .pipe(\n *     map(n => {\n *       if (n === 4) {\n *         throw 'four!';\n *       }\n *       return n;\n *     }),\n *     catchError((err, caught) => caught),\n *     take(30)\n *   )\n *   .subscribe(x => console.log(x));\n *   // 1, 2, 3, 1, 2, 3, ...\n * ```\n *\n * Throw a new error when the source Observable throws an error\n *\n * ```ts\n * import { of, map, catchError } from 'rxjs';\n *\n * of(1, 2, 3, 4, 5)\n *   .pipe(\n *     map(n => {\n *       if (n === 4) {\n *         throw 'four!';\n *       }\n *       return n;\n *     }),\n *     catchError(err => {\n *       throw 'error in source. Details: ' + err;\n *     })\n *   )\n *   .subscribe({\n *     next: x => console.log(x),\n *     error: err => console.log(err)\n *   });\n *   // 1, 2, 3, error in source. Details: four!\n * ```\n *\n * @see {@link onErrorResumeNext}\n * @see {@link repeat}\n * @see {@link repeatWhen}\n * @see {@link retry }\n * @see {@link retryWhen}\n *\n * @param {function} selector a function that takes as arguments `err`, which is the error, and `caught`, which\n * is the source observable, in case you'd like to \"retry\" that observable by returning it again. Whatever observable\n * is returned by the `selector` will be used to continue the observable chain.\n * @return A function that returns an Observable that originates from either\n * the source or the Observable returned by the `selector` function.\n */\nexport function catchError<T, O extends ObservableInput<any>>(\n  selector: (err: any, caught: Observable<T>) => O\n): OperatorFunction<T, T | ObservedValueOf<O>> {\n  return operate((source, subscriber) => {\n    let innerSub: Subscription | null = null;\n    let syncUnsub = false;\n    let handledResult: Observable<ObservedValueOf<O>>;\n\n    innerSub = source.subscribe(\n      createOperatorSubscriber(subscriber, undefined, undefined, (err) => {\n        handledResult = innerFrom(selector(err, catchError(selector)(source)));\n        if (innerSub) {\n          innerSub.unsubscribe();\n          innerSub = null;\n          handledResult.subscribe(subscriber);\n        } else {\n          // We don't have an innerSub yet, that means the error was synchronous\n          // because the subscribe call hasn't returned yet.\n          syncUnsub = true;\n        }\n      })\n    );\n\n    if (syncUnsub) {\n      // We have a synchronous error, we need to make sure to\n      // finalize right away. This ensures that callbacks in the `finalize` operator are called\n      // at the right time, and that finalization occurs at the expected\n      // time between the source error and the subscription to the\n      // next observable.\n      innerSub.unsubscribe();\n      innerSub = null;\n      handledResult!.subscribe(subscriber);\n    }\n  });\n}\n","import { combineLatestAll } from './combineLatestAll';\n\n/**\n * @deprecated Renamed to {@link combineLatestAll}. Will be removed in v8.\n */\nexport const combineAll = combineLatestAll;\n","import { combineLatestInit } from '../observable/combineLatest';\nimport { ObservableInput, ObservableInputTuple, OperatorFunction } from '../types';\nimport { operate } from '../util/lift';\nimport { argsOrArgArray } from '../util/argsOrArgArray';\nimport { mapOneOrManyArgs } from '../util/mapOneOrManyArgs';\nimport { pipe } from '../util/pipe';\nimport { popResultSelector } from '../util/args';\n\n/** @deprecated Replaced with {@link combineLatestWith}. Will be removed in v8. */\nexport function combineLatest<T, A extends readonly unknown[], R>(\n  sources: [...ObservableInputTuple<A>],\n  project: (...values: [T, ...A]) => R\n): OperatorFunction<T, R>;\n/** @deprecated Replaced with {@link combineLatestWith}. Will be removed in v8. */\nexport function combineLatest<T, A extends readonly unknown[], R>(sources: [...ObservableInputTuple<A>]): OperatorFunction<T, [T, ...A]>;\n\n/** @deprecated Replaced with {@link combineLatestWith}. Will be removed in v8. */\nexport function combineLatest<T, A extends readonly unknown[], R>(\n  ...sourcesAndProject: [...ObservableInputTuple<A>, (...values: [T, ...A]) => R]\n): OperatorFunction<T, R>;\n/** @deprecated Replaced with {@link combineLatestWith}. Will be removed in v8. */\nexport function combineLatest<T, A extends readonly unknown[], R>(...sources: [...ObservableInputTuple<A>]): OperatorFunction<T, [T, ...A]>;\n\n/**\n * @deprecated Replaced with {@link combineLatestWith}. Will be removed in v8.\n */\nexport function combineLatest<T, R>(...args: (ObservableInput<any> | ((...values: any[]) => R))[]): OperatorFunction<T, unknown> {\n  const resultSelector = popResultSelector(args);\n  return resultSelector\n    ? pipe(combineLatest(...(args as Array<ObservableInput<any>>)), mapOneOrManyArgs(resultSelector))\n    : operate((source, subscriber) => {\n        combineLatestInit([source, ...argsOrArgArray(args)])(subscriber);\n      });\n}\n","import { combineLatest } from '../observable/combineLatest';\nimport { OperatorFunction, ObservableInput } from '../types';\nimport { joinAllInternals } from './joinAllInternals';\n\nexport function combineLatestAll<T>(): OperatorFunction<ObservableInput<T>, T[]>;\nexport function combineLatestAll<T>(): OperatorFunction<any, T[]>;\nexport function combineLatestAll<T, R>(project: (...values: T[]) => R): OperatorFunction<ObservableInput<T>, R>;\nexport function combineLatestAll<R>(project: (...values: Array<any>) => R): OperatorFunction<any, R>;\n\n/**\n * Flattens an Observable-of-Observables by applying {@link combineLatest} when the Observable-of-Observables completes.\n *\n * `combineLatestAll` takes an Observable of Observables, and collects all Observables from it. Once the outer Observable completes,\n * it subscribes to all collected Observables and combines their values using the {@link combineLatest} strategy, such that:\n *\n * * Every time an inner Observable emits, the output Observable emits\n * * When the returned observable emits, it emits all of the latest values by:\n *    * If a `project` function is provided, it is called with each recent value from each inner Observable in whatever order they\n *      arrived, and the result of the `project` function is what is emitted by the output Observable.\n *    * If there is no `project` function, an array of all the most recent values is emitted by the output Observable.\n *\n * ## Example\n *\n * Map two click events to a finite interval Observable, then apply `combineLatestAll`\n *\n * ```ts\n * import { fromEvent, map, interval, take, combineLatestAll } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const higherOrder = clicks.pipe(\n *   map(() => interval(Math.random() * 2000).pipe(take(3))),\n *   take(2)\n * );\n * const result = higherOrder.pipe(combineLatestAll());\n *\n * result.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link combineLatest}\n * @see {@link combineLatestWith}\n * @see {@link mergeAll}\n *\n * @param project optional function to map the most recent values from each inner Observable into a new result.\n * Takes each of the most recent values from each collected inner Observable as arguments, in order.\n * @return A function that returns an Observable that flattens Observables\n * emitted by the source Observable.\n */\nexport function combineLatestAll<R>(project?: (...values: Array<any>) => R) {\n  return joinAllInternals(combineLatest, project);\n}\n","import { ObservableInputTuple, OperatorFunction, Cons } from '../types';\nimport { combineLatest } from './combineLatest';\n\n/**\n * Create an observable that combines the latest values from all passed observables and the source\n * into arrays and emits them.\n *\n * Returns an observable, that when subscribed to, will subscribe to the source observable and all\n * sources provided as arguments. Once all sources emit at least one value, all of the latest values\n * will be emitted as an array. After that, every time any source emits a value, all of the latest values\n * will be emitted as an array.\n *\n * This is a useful operator for eagerly calculating values based off of changed inputs.\n *\n * ## Example\n *\n * Simple concatenation of values from two inputs\n *\n * ```ts\n * import { fromEvent, combineLatestWith, map } from 'rxjs';\n *\n * // Setup: Add two inputs to the page\n * const input1 = document.createElement('input');\n * document.body.appendChild(input1);\n * const input2 = document.createElement('input');\n * document.body.appendChild(input2);\n *\n * // Get streams of changes\n * const input1Changes$ = fromEvent(input1, 'change');\n * const input2Changes$ = fromEvent(input2, 'change');\n *\n * // Combine the changes by adding them together\n * input1Changes$.pipe(\n *   combineLatestWith(input2Changes$),\n *   map(([e1, e2]) => (<HTMLInputElement>e1.target).value + ' - ' + (<HTMLInputElement>e2.target).value)\n * )\n * .subscribe(x => console.log(x));\n * ```\n *\n * @param otherSources the other sources to subscribe to.\n * @return A function that returns an Observable that emits the latest\n * emissions from both source and provided Observables.\n */\nexport function combineLatestWith<T, A extends readonly unknown[]>(\n  ...otherSources: [...ObservableInputTuple<A>]\n): OperatorFunction<T, Cons<T, A>> {\n  return combineLatest(...otherSources);\n}\n","import { ObservableInputTuple, OperatorFunction, SchedulerLike } from '../types';\nimport { operate } from '../util/lift';\nimport { concatAll } from './concatAll';\nimport { popScheduler } from '../util/args';\nimport { from } from '../observable/from';\n\n/** @deprecated Replaced with {@link concatWith}. Will be removed in v8. */\nexport function concat<T, A extends readonly unknown[]>(...sources: [...ObservableInputTuple<A>]): OperatorFunction<T, T | A[number]>;\n/** @deprecated Replaced with {@link concatWith}. Will be removed in v8. */\nexport function concat<T, A extends readonly unknown[]>(\n  ...sourcesAndScheduler: [...ObservableInputTuple<A>, SchedulerLike]\n): OperatorFunction<T, T | A[number]>;\n\n/**\n * @deprecated Replaced with {@link concatWith}. Will be removed in v8.\n */\nexport function concat<T, R>(...args: any[]): OperatorFunction<T, R> {\n  const scheduler = popScheduler(args);\n  return operate((source, subscriber) => {\n    concatAll()(from([source, ...args], scheduler)).subscribe(subscriber);\n  });\n}\n","import { mergeAll } from './mergeAll';\nimport { OperatorFunction, ObservableInput, ObservedValueOf } from '../types';\n\n/**\n * Converts a higher-order Observable into a first-order Observable by\n * concatenating the inner Observables in order.\n *\n * <span class=\"informal\">Flattens an Observable-of-Observables by putting one\n * inner Observable after the other.</span>\n *\n * ![](concatAll.svg)\n *\n * Joins every Observable emitted by the source (a higher-order Observable), in\n * a serial fashion. It subscribes to each inner Observable only after the\n * previous inner Observable has completed, and merges all of their values into\n * the returned observable.\n *\n * __Warning:__ If the source Observable emits Observables quickly and\n * endlessly, and the inner Observables it emits generally complete slower than\n * the source emits, you can run into memory issues as the incoming Observables\n * collect in an unbounded buffer.\n *\n * Note: `concatAll` is equivalent to `mergeAll` with concurrency parameter set\n * to `1`.\n *\n * ## Example\n *\n * For each click event, tick every second from 0 to 3, with no concurrency\n *\n * ```ts\n * import { fromEvent, map, interval, take, concatAll } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const higherOrder = clicks.pipe(\n *   map(() => interval(1000).pipe(take(4)))\n * );\n * const firstOrder = higherOrder.pipe(concatAll());\n * firstOrder.subscribe(x => console.log(x));\n *\n * // Results in the following:\n * // (results are not concurrent)\n * // For every click on the \"document\" it will emit values 0 to 3 spaced\n * // on a 1000ms interval\n * // one click = 1000ms-> 0 -1000ms-> 1 -1000ms-> 2 -1000ms-> 3\n * ```\n *\n * @see {@link combineLatestAll}\n * @see {@link concat}\n * @see {@link concatMap}\n * @see {@link concatMapTo}\n * @see {@link exhaustAll}\n * @see {@link mergeAll}\n * @see {@link switchAll}\n * @see {@link switchMap}\n * @see {@link zipAll}\n *\n * @return A function that returns an Observable emitting values from all the\n * inner Observables concatenated.\n */\nexport function concatAll<O extends ObservableInput<any>>(): OperatorFunction<O, ObservedValueOf<O>> {\n  return mergeAll(1);\n}\n","import { mergeMap } from './mergeMap';\nimport { ObservableInput, OperatorFunction, ObservedValueOf } from '../types';\nimport { isFunction } from '../util/isFunction';\n\n/* tslint:disable:max-line-length */\nexport function concatMap<T, O extends ObservableInput<any>>(\n  project: (value: T, index: number) => O\n): OperatorFunction<T, ObservedValueOf<O>>;\n/** @deprecated The `resultSelector` parameter will be removed in v8. Use an inner `map` instead. Details: https://rxjs.dev/deprecations/resultSelector */\nexport function concatMap<T, O extends ObservableInput<any>>(\n  project: (value: T, index: number) => O,\n  resultSelector: undefined\n): OperatorFunction<T, ObservedValueOf<O>>;\n/** @deprecated The `resultSelector` parameter will be removed in v8. Use an inner `map` instead. Details: https://rxjs.dev/deprecations/resultSelector */\nexport function concatMap<T, R, O extends ObservableInput<any>>(\n  project: (value: T, index: number) => O,\n  resultSelector: (outerValue: T, innerValue: ObservedValueOf<O>, outerIndex: number, innerIndex: number) => R\n): OperatorFunction<T, R>;\n/* tslint:enable:max-line-length */\n\n/**\n * Projects each source value to an Observable which is merged in the output\n * Observable, in a serialized fashion waiting for each one to complete before\n * merging the next.\n *\n * <span class=\"informal\">Maps each value to an Observable, then flattens all of\n * these inner Observables using {@link concatAll}.</span>\n *\n * ![](concatMap.png)\n *\n * Returns an Observable that emits items based on applying a function that you\n * supply to each item emitted by the source Observable, where that function\n * returns an (so-called \"inner\") Observable. Each new inner Observable is\n * concatenated with the previous inner Observable.\n *\n * __Warning:__ if source values arrive endlessly and faster than their\n * corresponding inner Observables can complete, it will result in memory issues\n * as inner Observables amass in an unbounded buffer waiting for their turn to\n * be subscribed to.\n *\n * Note: `concatMap` is equivalent to `mergeMap` with concurrency parameter set\n * to `1`.\n *\n * ## Example\n *\n * For each click event, tick every second from 0 to 3, with no concurrency\n *\n * ```ts\n * import { fromEvent, concatMap, interval, take } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const result = clicks.pipe(\n *   concatMap(ev => interval(1000).pipe(take(4)))\n * );\n * result.subscribe(x => console.log(x));\n *\n * // Results in the following:\n * // (results are not concurrent)\n * // For every click on the \"document\" it will emit values 0 to 3 spaced\n * // on a 1000ms interval\n * // one click = 1000ms-> 0 -1000ms-> 1 -1000ms-> 2 -1000ms-> 3\n * ```\n *\n * @see {@link concat}\n * @see {@link concatAll}\n * @see {@link concatMapTo}\n * @see {@link exhaustMap}\n * @see {@link mergeMap}\n * @see {@link switchMap}\n *\n * @param {function(value: T, ?index: number): ObservableInput} project A function\n * that, when applied to an item emitted by the source Observable, returns an\n * Observable.\n * @return A function that returns an Observable that emits the result of\n * applying the projection function (and the optional deprecated\n * `resultSelector`) to each item emitted by the source Observable and taking\n * values from each projected inner Observable sequentially.\n */\nexport function concatMap<T, R, O extends ObservableInput<any>>(\n  project: (value: T, index: number) => O,\n  resultSelector?: (outerValue: T, innerValue: ObservedValueOf<O>, outerIndex: number, innerIndex: number) => R\n): OperatorFunction<T, ObservedValueOf<O> | R> {\n  return isFunction(resultSelector) ? mergeMap(project, resultSelector, 1) : mergeMap(project, 1);\n}\n","import { concatMap } from './concatMap';\nimport { ObservableInput, OperatorFunction, ObservedValueOf } from '../types';\nimport { isFunction } from '../util/isFunction';\n\n/** @deprecated Will be removed in v9. Use {@link concatMap} instead: `concatMap(() => result)` */\nexport function concatMapTo<O extends ObservableInput<unknown>>(observable: O): OperatorFunction<unknown, ObservedValueOf<O>>;\n/** @deprecated The `resultSelector` parameter will be removed in v8. Use an inner `map` instead. Details: https://rxjs.dev/deprecations/resultSelector */\nexport function concatMapTo<O extends ObservableInput<unknown>>(\n  observable: O,\n  resultSelector: undefined\n): OperatorFunction<unknown, ObservedValueOf<O>>;\n/** @deprecated The `resultSelector` parameter will be removed in v8. Use an inner `map` instead. Details: https://rxjs.dev/deprecations/resultSelector */\nexport function concatMapTo<T, R, O extends ObservableInput<unknown>>(\n  observable: O,\n  resultSelector: (outerValue: T, innerValue: ObservedValueOf<O>, outerIndex: number, innerIndex: number) => R\n): OperatorFunction<T, R>;\n\n/**\n * Projects each source value to the same Observable which is merged multiple\n * times in a serialized fashion on the output Observable.\n *\n * <span class=\"informal\">It's like {@link concatMap}, but maps each value\n * always to the same inner Observable.</span>\n *\n * ![](concatMapTo.png)\n *\n * Maps each source value to the given Observable `innerObservable` regardless\n * of the source value, and then flattens those resulting Observables into one\n * single Observable, which is the output Observable. Each new `innerObservable`\n * instance emitted on the output Observable is concatenated with the previous\n * `innerObservable` instance.\n *\n * __Warning:__ if source values arrive endlessly and faster than their\n * corresponding inner Observables can complete, it will result in memory issues\n * as inner Observables amass in an unbounded buffer waiting for their turn to\n * be subscribed to.\n *\n * Note: `concatMapTo` is equivalent to `mergeMapTo` with concurrency parameter\n * set to `1`.\n *\n * ## Example\n *\n * For each click event, tick every second from 0 to 3, with no concurrency\n *\n * ```ts\n * import { fromEvent, concatMapTo, interval, take } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const result = clicks.pipe(\n *   concatMapTo(interval(1000).pipe(take(4)))\n * );\n * result.subscribe(x => console.log(x));\n *\n * // Results in the following:\n * // (results are not concurrent)\n * // For every click on the \"document\" it will emit values 0 to 3 spaced\n * // on a 1000ms interval\n * // one click = 1000ms-> 0 -1000ms-> 1 -1000ms-> 2 -1000ms-> 3\n * ```\n *\n * @see {@link concat}\n * @see {@link concatAll}\n * @see {@link concatMap}\n * @see {@link mergeMapTo}\n * @see {@link switchMapTo}\n *\n * @param {ObservableInput} innerObservable An Observable to replace each value from\n * the source Observable.\n * @return A function that returns an Observable of values merged together by\n * joining the passed Observable with itself, one after the other, for each\n * value emitted from the source.\n * @deprecated Will be removed in v9. Use {@link concatMap} instead: `concatMap(() => result)`\n */\nexport function concatMapTo<T, R, O extends ObservableInput<unknown>>(\n  innerObservable: O,\n  resultSelector?: (outerValue: T, innerValue: ObservedValueOf<O>, outerIndex: number, innerIndex: number) => R\n): OperatorFunction<T, ObservedValueOf<O> | R> {\n  return isFunction(resultSelector) ? concatMap(() => innerObservable, resultSelector) : concatMap(() => innerObservable);\n}\n","import { ObservableInputTuple, OperatorFunction } from '../types';\nimport { concat } from './concat';\n\n/**\n * Emits all of the values from the source observable, then, once it completes, subscribes\n * to each observable source provided, one at a time, emitting all of their values, and not subscribing\n * to the next one until it completes.\n *\n * `concat(a$, b$, c$)` is the same as `a$.pipe(concatWith(b$, c$))`.\n *\n * ## Example\n *\n * Listen for one mouse click, then listen for all mouse moves.\n *\n * ```ts\n * import { fromEvent, map, take, concatWith } from 'rxjs';\n *\n * const clicks$ = fromEvent(document, 'click');\n * const moves$ = fromEvent(document, 'mousemove');\n *\n * clicks$.pipe(\n *   map(() => 'click'),\n *   take(1),\n *   concatWith(\n *     moves$.pipe(\n *       map(() => 'move')\n *     )\n *   )\n * )\n * .subscribe(x => console.log(x));\n *\n * // 'click'\n * // 'move'\n * // 'move'\n * // 'move'\n * // ...\n * ```\n *\n * @param otherSources Other observable sources to subscribe to, in sequence, after the original source is complete.\n * @return A function that returns an Observable that concatenates\n * subscriptions to the source and provided Observables subscribing to the next\n * only once the current subscription completes.\n */\nexport function concatWith<T, A extends readonly unknown[]>(\n  ...otherSources: [...ObservableInputTuple<A>]\n): OperatorFunction<T, T | A[number]> {\n  return concat(...otherSources);\n}\n","import { OperatorFunction, ObservableInput, ObservedValueOf, SubjectLike } from '../types';\nimport { Observable } from '../Observable';\nimport { Subject } from '../Subject';\nimport { innerFrom } from '../observable/innerFrom';\nimport { operate } from '../util/lift';\nimport { fromSubscribable } from '../observable/fromSubscribable';\n\n/**\n * An object used to configure {@link connect} operator.\n */\nexport interface ConnectConfig<T> {\n  /**\n   * A factory function used to create the Subject through which the source\n   * is multicast. By default, this creates a {@link Subject}.\n   */\n  connector: () => SubjectLike<T>;\n}\n\n/**\n * The default configuration for `connect`.\n */\nconst DEFAULT_CONFIG: ConnectConfig<unknown> = {\n  connector: () => new Subject<unknown>(),\n};\n\n/**\n * Creates an observable by multicasting the source within a function that\n * allows the developer to define the usage of the multicast prior to connection.\n *\n * This is particularly useful if the observable source you wish to multicast could\n * be synchronous or asynchronous. This sets it apart from {@link share}, which, in the\n * case of totally synchronous sources will fail to share a single subscription with\n * multiple consumers, as by the time the subscription to the result of {@link share}\n * has returned, if the source is synchronous its internal reference count will jump from\n * 0 to 1 back to 0 and reset.\n *\n * To use `connect`, you provide a `selector` function that will give you\n * a multicast observable that is not yet connected. You then use that multicast observable\n * to create a resulting observable that, when subscribed, will set up your multicast. This is\n * generally, but not always, accomplished with {@link merge}.\n *\n * Note that using a {@link takeUntil} inside of `connect`'s `selector` _might_ mean you were looking\n * to use the {@link takeWhile} operator instead.\n *\n * When you subscribe to the result of `connect`, the `selector` function will be called. After\n * the `selector` function returns, the observable it returns will be subscribed to, _then_ the\n * multicast will be connected to the source.\n *\n * ## Example\n *\n * Sharing a totally synchronous observable\n *\n * ```ts\n * import { of, tap, connect, merge, map, filter } from 'rxjs';\n *\n * const source$ = of(1, 2, 3, 4, 5).pipe(\n *   tap({\n *     subscribe: () => console.log('subscription started'),\n *     next: n => console.log(`source emitted ${ n }`)\n *   })\n * );\n *\n * source$.pipe(\n *   // Notice in here we're merging 3 subscriptions to `shared$`.\n *   connect(shared$ => merge(\n *     shared$.pipe(map(n => `all ${ n }`)),\n *     shared$.pipe(filter(n => n % 2 === 0), map(n => `even ${ n }`)),\n *     shared$.pipe(filter(n => n % 2 === 1), map(n => `odd ${ n }`))\n *   ))\n * )\n * .subscribe(console.log);\n *\n * // Expected output: (notice only one subscription)\n * 'subscription started'\n * 'source emitted 1'\n * 'all 1'\n * 'odd 1'\n * 'source emitted 2'\n * 'all 2'\n * 'even 2'\n * 'source emitted 3'\n * 'all 3'\n * 'odd 3'\n * 'source emitted 4'\n * 'all 4'\n * 'even 4'\n * 'source emitted 5'\n * 'all 5'\n * 'odd 5'\n * ```\n *\n * @param selector A function used to set up the multicast. Gives you a multicast observable\n * that is not yet connected. With that, you're expected to create and return\n * and Observable, that when subscribed to, will utilize the multicast observable.\n * After this function is executed -- and its return value subscribed to -- the\n * operator will subscribe to the source, and the connection will be made.\n * @param config The configuration object for `connect`.\n */\nexport function connect<T, O extends ObservableInput<unknown>>(\n  selector: (shared: Observable<T>) => O,\n  config: ConnectConfig<T> = DEFAULT_CONFIG\n): OperatorFunction<T, ObservedValueOf<O>> {\n  const { connector } = config;\n  return operate((source, subscriber) => {\n    const subject = connector();\n    innerFrom(selector(fromSubscribable(subject))).subscribe(subscriber);\n    subscriber.add(source.subscribe(subject));\n  });\n}\n","import { OperatorFunction } from '../types';\nimport { reduce } from './reduce';\n\n/**\n * Counts the number of emissions on the source and emits that number when the\n * source completes.\n *\n * <span class=\"informal\">Tells how many values were emitted, when the source\n * completes.</span>\n *\n * ![](count.png)\n *\n * `count` transforms an Observable that emits values into an Observable that\n * emits a single value that represents the number of values emitted by the\n * source Observable. If the source Observable terminates with an error, `count`\n * will pass this error notification along without emitting a value first. If\n * the source Observable does not terminate at all, `count` will neither emit\n * a value nor terminate. This operator takes an optional `predicate` function\n * as argument, in which case the output emission will represent the number of\n * source values that matched `true` with the `predicate`.\n *\n * ## Examples\n *\n * Counts how many seconds have passed before the first click happened\n *\n * ```ts\n * import { interval, fromEvent, takeUntil, count } from 'rxjs';\n *\n * const seconds = interval(1000);\n * const clicks = fromEvent(document, 'click');\n * const secondsBeforeClick = seconds.pipe(takeUntil(clicks));\n * const result = secondsBeforeClick.pipe(count());\n * result.subscribe(x => console.log(x));\n * ```\n *\n * Counts how many odd numbers are there between 1 and 7\n *\n * ```ts\n * import { range, count } from 'rxjs';\n *\n * const numbers = range(1, 7);\n * const result = numbers.pipe(count(i => i % 2 === 1));\n * result.subscribe(x => console.log(x));\n * // Results in:\n * // 4\n * ```\n *\n * @see {@link max}\n * @see {@link min}\n * @see {@link reduce}\n *\n * @param predicate A function that is used to analyze the value and the index and\n * determine whether or not to increment the count. Return `true` to increment the count,\n * and return `false` to keep the count the same.\n * If the predicate is not provided, every value will be counted.\n * @return A function that returns an Observable that emits one number that\n * represents the count of emissions.\n */\nexport function count<T>(predicate?: (value: T, index: number) => boolean): OperatorFunction<T, number> {\n  return reduce((total, value, i) => (!predicate || predicate(value, i) ? total + 1 : total), 0);\n}\n","import { Subscriber } from '../Subscriber';\nimport { MonoTypeOperatorFunction, ObservableInput } from '../types';\nimport { operate } from '../util/lift';\nimport { noop } from '../util/noop';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nimport { innerFrom } from '../observable/innerFrom';\n\n/**\n * Emits a notification from the source Observable only after a particular time span\n * determined by another Observable has passed without another source emission.\n *\n * <span class=\"informal\">It's like {@link debounceTime}, but the time span of\n * emission silence is determined by a second Observable.</span>\n *\n * ![](debounce.svg)\n *\n * `debounce` delays notifications emitted by the source Observable, but drops previous\n * pending delayed emissions if a new notification arrives on the source Observable.\n * This operator keeps track of the most recent notification from the source\n * Observable, and spawns a duration Observable by calling the\n * `durationSelector` function. The notification is emitted only when the duration\n * Observable emits a next notification, and if no other notification was emitted on\n * the source Observable since the duration Observable was spawned. If a new\n * notification appears before the duration Observable emits, the previous notification will\n * not be emitted and a new duration is scheduled from `durationSelector` is scheduled.\n * If the completing event happens during the scheduled duration the last cached notification\n * is emitted before the completion event is forwarded to the output observable.\n * If the error event happens during the scheduled duration or after it only the error event is\n * forwarded to the output observable. The cache notification is not emitted in this case.\n *\n * Like {@link debounceTime}, this is a rate-limiting operator, and also a\n * delay-like operator since output emissions do not necessarily occur at the\n * same time as they did on the source Observable.\n *\n * ## Example\n *\n * Emit the most recent click after a burst of clicks\n *\n * ```ts\n * import { fromEvent, scan, debounce, interval } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const result = clicks.pipe(\n *   scan(i => ++i, 1),\n *   debounce(i => interval(200 * i))\n * );\n * result.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link audit}\n * @see {@link auditTime}\n * @see {@link debounceTime}\n * @see {@link delay}\n * @see {@link sample}\n * @see {@link sampleTime}\n * @see {@link throttle}\n * @see {@link throttleTime}\n *\n * @param durationSelector A function\n * that receives a value from the source Observable, for computing the timeout\n * duration for each source value, returned as an Observable or a Promise.\n * @return A function that returns an Observable that delays the emissions of\n * the source Observable by the specified duration Observable returned by\n * `durationSelector`, and may drop some values if they occur too frequently.\n */\nexport function debounce<T>(durationSelector: (value: T) => ObservableInput<any>): MonoTypeOperatorFunction<T> {\n  return operate((source, subscriber) => {\n    let hasValue = false;\n    let lastValue: T | null = null;\n    // The subscriber/subscription for the current debounce, if there is one.\n    let durationSubscriber: Subscriber<any> | null = null;\n\n    const emit = () => {\n      // Unsubscribe any current debounce subscription we have,\n      // we only cared about the first notification from it, and we\n      // want to clean that subscription up as soon as possible.\n      durationSubscriber?.unsubscribe();\n      durationSubscriber = null;\n      if (hasValue) {\n        // We have a value! Free up memory first, then emit the value.\n        hasValue = false;\n        const value = lastValue!;\n        lastValue = null;\n        subscriber.next(value);\n      }\n    };\n\n    source.subscribe(\n      createOperatorSubscriber(\n        subscriber,\n        (value: T) => {\n          // Cancel any pending debounce duration. We don't\n          // need to null it out here yet tho, because we're just going\n          // to create another one in a few lines.\n          durationSubscriber?.unsubscribe();\n          hasValue = true;\n          lastValue = value;\n          // Capture our duration subscriber, so we can unsubscribe it when we're notified\n          // and we're going to emit the value.\n          durationSubscriber = createOperatorSubscriber(subscriber, emit, noop);\n          // Subscribe to the duration.\n          innerFrom(durationSelector(value)).subscribe(durationSubscriber);\n        },\n        () => {\n          // Source completed.\n          // Emit any pending debounced values then complete\n          emit();\n          subscriber.complete();\n        },\n        // Pass all errors through to consumer\n        undefined,\n        () => {\n          // Finalization.\n          lastValue = durationSubscriber = null;\n        }\n      )\n    );\n  });\n}\n","import { asyncScheduler } from '../scheduler/async';\nimport { Subscription } from '../Subscription';\nimport { MonoTypeOperatorFunction, SchedulerAction, SchedulerLike } from '../types';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\n\n/**\n * Emits a notification from the source Observable only after a particular time span\n * has passed without another source emission.\n *\n * <span class=\"informal\">It's like {@link delay}, but passes only the most\n * recent notification from each burst of emissions.</span>\n *\n * ![](debounceTime.png)\n *\n * `debounceTime` delays notifications emitted by the source Observable, but drops\n * previous pending delayed emissions if a new notification arrives on the source\n * Observable. This operator keeps track of the most recent notification from the\n * source Observable, and emits that only when `dueTime` has passed\n * without any other notification appearing on the source Observable. If a new value\n * appears before `dueTime` silence occurs, the previous notification will be dropped\n * and will not be emitted and a new `dueTime` is scheduled.\n * If the completing event happens during `dueTime` the last cached notification\n * is emitted before the completion event is forwarded to the output observable.\n * If the error event happens during `dueTime` or after it only the error event is\n * forwarded to the output observable. The cache notification is not emitted in this case.\n *\n * This is a rate-limiting operator, because it is impossible for more than one\n * notification to be emitted in any time window of duration `dueTime`, but it is also\n * a delay-like operator since output emissions do not occur at the same time as\n * they did on the source Observable. Optionally takes a {@link SchedulerLike} for\n * managing timers.\n *\n * ## Example\n *\n * Emit the most recent click after a burst of clicks\n *\n * ```ts\n * import { fromEvent, debounceTime } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const result = clicks.pipe(debounceTime(1000));\n * result.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link audit}\n * @see {@link auditTime}\n * @see {@link debounce}\n * @see {@link sample}\n * @see {@link sampleTime}\n * @see {@link throttle}\n * @see {@link throttleTime}\n *\n * @param {number} dueTime The timeout duration in milliseconds (or the time\n * unit determined internally by the optional `scheduler`) for the window of\n * time required to wait for emission silence before emitting the most recent\n * source value.\n * @param {SchedulerLike} [scheduler=async] The {@link SchedulerLike} to use for\n * managing the timers that handle the timeout for each value.\n * @return A function that returns an Observable that delays the emissions of\n * the source Observable by the specified `dueTime`, and may drop some values\n * if they occur too frequently.\n */\nexport function debounceTime<T>(dueTime: number, scheduler: SchedulerLike = asyncScheduler): MonoTypeOperatorFunction<T> {\n  return operate((source, subscriber) => {\n    let activeTask: Subscription | null = null;\n    let lastValue: T | null = null;\n    let lastTime: number | null = null;\n\n    const emit = () => {\n      if (activeTask) {\n        // We have a value! Free up memory first, then emit the value.\n        activeTask.unsubscribe();\n        activeTask = null;\n        const value = lastValue!;\n        lastValue = null;\n        subscriber.next(value);\n      }\n    };\n    function emitWhenIdle(this: SchedulerAction<unknown>) {\n      // This is called `dueTime` after the first value\n      // but we might have received new values during this window!\n\n      const targetTime = lastTime! + dueTime;\n      const now = scheduler.now();\n      if (now < targetTime) {\n        // On that case, re-schedule to the new target\n        activeTask = this.schedule(undefined, targetTime - now);\n        subscriber.add(activeTask);\n        return;\n      }\n\n      emit();\n    }\n\n    source.subscribe(\n      createOperatorSubscriber(\n        subscriber,\n        (value: T) => {\n          lastValue = value;\n          lastTime = scheduler.now();\n\n          // Only set up a task if it's not already up\n          if (!activeTask) {\n            activeTask = scheduler.schedule(emitWhenIdle, dueTime);\n            subscriber.add(activeTask);\n          }\n        },\n        () => {\n          // Source completed.\n          // Emit any pending debounced values then complete\n          emit();\n          subscriber.complete();\n        },\n        // Pass all errors through to consumer.\n        undefined,\n        () => {\n          // Finalization.\n          lastValue = activeTask = null;\n        }\n      )\n    );\n  });\n}\n","import { OperatorFunction } from '../types';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\n\n/**\n * Emits a given value if the source Observable completes without emitting any\n * `next` value, otherwise mirrors the source Observable.\n *\n * <span class=\"informal\">If the source Observable turns out to be empty, then\n * this operator will emit a default value.</span>\n *\n * ![](defaultIfEmpty.png)\n *\n * `defaultIfEmpty` emits the values emitted by the source Observable or a\n * specified default value if the source Observable is empty (completes without\n * having emitted any `next` value).\n *\n * ## Example\n *\n * If no clicks happen in 5 seconds, then emit 'no clicks'\n *\n * ```ts\n * import { fromEvent, takeUntil, interval, defaultIfEmpty } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const clicksBeforeFive = clicks.pipe(takeUntil(interval(5000)));\n * const result = clicksBeforeFive.pipe(defaultIfEmpty('no clicks'));\n * result.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link empty}\n * @see {@link last}\n *\n * @param defaultValue The default value used if the source\n * Observable is empty.\n * @return A function that returns an Observable that emits either the\n * specified `defaultValue` if the source Observable emits no items, or the\n * values emitted by the source Observable.\n */\nexport function defaultIfEmpty<T, R>(defaultValue: R): OperatorFunction<T, T | R> {\n  return operate((source, subscriber) => {\n    let hasValue = false;\n    source.subscribe(\n      createOperatorSubscriber(\n        subscriber,\n        (value) => {\n          hasValue = true;\n          subscriber.next(value);\n        },\n        () => {\n          if (!hasValue) {\n            subscriber.next(defaultValue!);\n          }\n          subscriber.complete();\n        }\n      )\n    );\n  });\n}\n","import { asyncScheduler } from '../scheduler/async';\nimport { MonoTypeOperatorFunction, SchedulerLike } from '../types';\nimport { delayWhen } from './delayWhen';\nimport { timer } from '../observable/timer';\n\n/**\n * Delays the emission of items from the source Observable by a given timeout or\n * until a given Date.\n *\n * <span class=\"informal\">Time shifts each item by some specified amount of\n * milliseconds.</span>\n *\n * ![](delay.svg)\n *\n * If the delay argument is a Number, this operator time shifts the source\n * Observable by that amount of time expressed in milliseconds. The relative\n * time intervals between the values are preserved.\n *\n * If the delay argument is a Date, this operator time shifts the start of the\n * Observable execution until the given date occurs.\n *\n * ## Examples\n *\n * Delay each click by one second\n *\n * ```ts\n * import { fromEvent, delay } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const delayedClicks = clicks.pipe(delay(1000)); // each click emitted after 1 second\n * delayedClicks.subscribe(x => console.log(x));\n * ```\n *\n * Delay all clicks until a future date happens\n *\n * ```ts\n * import { fromEvent, delay } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const date = new Date('March 15, 2050 12:00:00'); // in the future\n * const delayedClicks = clicks.pipe(delay(date)); // click emitted only after that date\n * delayedClicks.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link delayWhen}\n * @see {@link throttle}\n * @see {@link throttleTime}\n * @see {@link debounce}\n * @see {@link debounceTime}\n * @see {@link sample}\n * @see {@link sampleTime}\n * @see {@link audit}\n * @see {@link auditTime}\n *\n * @param {number|Date} due The delay duration in milliseconds (a `number`) or\n * a `Date` until which the emission of the source items is delayed.\n * @param {SchedulerLike} [scheduler=async] The {@link SchedulerLike} to use for\n * managing the timers that handle the time-shift for each item.\n * @return A function that returns an Observable that delays the emissions of\n * the source Observable by the specified timeout or Date.\n */\nexport function delay<T>(due: number | Date, scheduler: SchedulerLike = asyncScheduler): MonoTypeOperatorFunction<T> {\n  const duration = timer(due, scheduler);\n  return delayWhen(() => duration);\n}\n","import { Observable } from '../Observable';\nimport { MonoTypeOperatorFunction } from '../types';\nimport { concat } from '../observable/concat';\nimport { take } from './take';\nimport { ignoreElements } from './ignoreElements';\nimport { mapTo } from './mapTo';\nimport { mergeMap } from './mergeMap';\n\n/** @deprecated The `subscriptionDelay` parameter will be removed in v8. */\nexport function delayWhen<T>(\n  delayDurationSelector: (value: T, index: number) => Observable<any>,\n  subscriptionDelay: Observable<any>\n): MonoTypeOperatorFunction<T>;\nexport function delayWhen<T>(delayDurationSelector: (value: T, index: number) => Observable<any>): MonoTypeOperatorFunction<T>;\n\n/**\n * Delays the emission of items from the source Observable by a given time span\n * determined by the emissions of another Observable.\n *\n * <span class=\"informal\">It's like {@link delay}, but the time span of the\n * delay duration is determined by a second Observable.</span>\n *\n * ![](delayWhen.png)\n *\n * `delayWhen` time shifts each emitted value from the source Observable by a\n * time span determined by another Observable. When the source emits a value,\n * the `delayDurationSelector` function is called with the source value as\n * argument, and should return an Observable, called the \"duration\" Observable.\n * The source value is emitted on the output Observable only when the duration\n * Observable emits a value or completes.\n * The completion of the notifier triggering the emission of the source value\n * is deprecated behavior and will be removed in future versions.\n *\n * Optionally, `delayWhen` takes a second argument, `subscriptionDelay`, which\n * is an Observable. When `subscriptionDelay` emits its first value or\n * completes, the source Observable is subscribed to and starts behaving like\n * described in the previous paragraph. If `subscriptionDelay` is not provided,\n * `delayWhen` will subscribe to the source Observable as soon as the output\n * Observable is subscribed.\n *\n * ## Example\n *\n * Delay each click by a random amount of time, between 0 and 5 seconds\n *\n * ```ts\n * import { fromEvent, delayWhen, interval } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const delayedClicks = clicks.pipe(\n *   delayWhen(() => interval(Math.random() * 5000))\n * );\n * delayedClicks.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link delay}\n * @see {@link throttle}\n * @see {@link throttleTime}\n * @see {@link debounce}\n * @see {@link debounceTime}\n * @see {@link sample}\n * @see {@link sampleTime}\n * @see {@link audit}\n * @see {@link auditTime}\n *\n * @param {function(value: T, index: number): Observable} delayDurationSelector A function that\n * returns an Observable for each value emitted by the source Observable, which\n * is then used to delay the emission of that item on the output Observable\n * until the Observable returned from this function emits a value.\n * @param {Observable} subscriptionDelay An Observable that triggers the\n * subscription to the source Observable once it emits any value.\n * @return A function that returns an Observable that delays the emissions of\n * the source Observable by an amount of time specified by the Observable\n * returned by `delayDurationSelector`.\n */\nexport function delayWhen<T>(\n  delayDurationSelector: (value: T, index: number) => Observable<any>,\n  subscriptionDelay?: Observable<any>\n): MonoTypeOperatorFunction<T> {\n  if (subscriptionDelay) {\n    // DEPRECATED PATH\n    return (source: Observable<T>) =>\n      concat(subscriptionDelay.pipe(take(1), ignoreElements()), source.pipe(delayWhen(delayDurationSelector)));\n  }\n\n  return mergeMap((value, index) => delayDurationSelector(value, index).pipe(take(1), mapTo(value)));\n}\n","import { observeNotification } from '../Notification';\nimport { OperatorFunction, ObservableNotification, ValueFromNotification } from '../types';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\n\n/**\n * Converts an Observable of {@link ObservableNotification} objects into the emissions\n * that they represent.\n *\n * <span class=\"informal\">Unwraps {@link ObservableNotification} objects as actual `next`,\n * `error` and `complete` emissions. The opposite of {@link materialize}.</span>\n *\n * ![](dematerialize.png)\n *\n * `dematerialize` is assumed to operate an Observable that only emits\n * {@link ObservableNotification} objects as `next` emissions, and does not emit any\n * `error`. Such Observable is the output of a `materialize` operation. Those\n * notifications are then unwrapped using the metadata they contain, and emitted\n * as `next`, `error`, and `complete` on the output Observable.\n *\n * Use this operator in conjunction with {@link materialize}.\n *\n * ## Example\n *\n * Convert an Observable of Notifications to an actual Observable\n *\n * ```ts\n * import { NextNotification, ErrorNotification, of, dematerialize } from 'rxjs';\n *\n * const notifA: NextNotification<string> = { kind: 'N', value: 'A' };\n * const notifB: NextNotification<string> = { kind: 'N', value: 'B' };\n * const notifE: ErrorNotification = { kind: 'E', error: new TypeError('x.toUpperCase is not a function') };\n *\n * const materialized = of(notifA, notifB, notifE);\n *\n * const upperCase = materialized.pipe(dematerialize());\n * upperCase.subscribe({\n *   next: x => console.log(x),\n *   error: e => console.error(e)\n * });\n *\n * // Results in:\n * // A\n * // B\n * // TypeError: x.toUpperCase is not a function\n * ```\n *\n * @see {@link materialize}\n *\n * @return A function that returns an Observable that emits items and\n * notifications embedded in Notification objects emitted by the source\n * Observable.\n */\nexport function dematerialize<N extends ObservableNotification<any>>(): OperatorFunction<N, ValueFromNotification<N>> {\n  return operate((source, subscriber) => {\n    source.subscribe(createOperatorSubscriber(subscriber, (notification) => observeNotification(notification, subscriber)));\n  });\n}\n","import { Observable } from '../Observable';\nimport { MonoTypeOperatorFunction } from '../types';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nimport { noop } from '../util/noop';\n\n/**\n * Returns an Observable that emits all items emitted by the source Observable that are distinct by comparison from previous items.\n *\n * If a `keySelector` function is provided, then it will project each value from the source observable into a new value that it will\n * check for equality with previously projected values. If the `keySelector` function is not provided, it will use each value from the\n * source observable directly with an equality check against previous values.\n *\n * In JavaScript runtimes that support `Set`, this operator will use a `Set` to improve performance of the distinct value checking.\n *\n * In other runtimes, this operator will use a minimal implementation of `Set` that relies on an `Array` and `indexOf` under the\n * hood, so performance will degrade as more values are checked for distinction. Even in newer browsers, a long-running `distinct`\n * use might result in memory leaks. To help alleviate this in some scenarios, an optional `flushes` parameter is also provided so\n * that the internal `Set` can be \"flushed\", basically clearing it of values.\n *\n * ## Examples\n *\n * A simple example with numbers\n *\n * ```ts\n * import { of, distinct } from 'rxjs';\n *\n * of(1, 1, 2, 2, 2, 1, 2, 3, 4, 3, 2, 1)\n *   .pipe(distinct())\n *   .subscribe(x => console.log(x));\n *\n * // Outputs\n * // 1\n * // 2\n * // 3\n * // 4\n * ```\n *\n * An example using the `keySelector` function\n *\n * ```ts\n * import { of, distinct } from 'rxjs';\n *\n * of(\n *   { age: 4, name: 'Foo'},\n *   { age: 7, name: 'Bar'},\n *   { age: 5, name: 'Foo'}\n * )\n * .pipe(distinct(({ name }) => name))\n * .subscribe(x => console.log(x));\n *\n * // Outputs\n * // { age: 4, name: 'Foo' }\n * // { age: 7, name: 'Bar' }\n * ```\n * @see {@link distinctUntilChanged}\n * @see {@link distinctUntilKeyChanged}\n *\n * @param {function} [keySelector] Optional function to select which value you want to check as distinct.\n * @param {Observable} [flushes] Optional Observable for flushing the internal HashSet of the operator.\n * @return A function that returns an Observable that emits items from the\n * source Observable with distinct values.\n */\nexport function distinct<T, K>(keySelector?: (value: T) => K, flushes?: Observable<any>): MonoTypeOperatorFunction<T> {\n  return operate((source, subscriber) => {\n    const distinctKeys = new Set();\n    source.subscribe(\n      createOperatorSubscriber(subscriber, (value) => {\n        const key = keySelector ? keySelector(value) : value;\n        if (!distinctKeys.has(key)) {\n          distinctKeys.add(key);\n          subscriber.next(value);\n        }\n      })\n    );\n\n    flushes?.subscribe(createOperatorSubscriber(subscriber, () => distinctKeys.clear(), noop));\n  });\n}\n","import { MonoTypeOperatorFunction } from '../types';\nimport { identity } from '../util/identity';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\n\nexport function distinctUntilChanged<T>(comparator?: (previous: T, current: T) => boolean): MonoTypeOperatorFunction<T>;\nexport function distinctUntilChanged<T, K>(\n  comparator: (previous: K, current: K) => boolean,\n  keySelector: (value: T) => K\n): MonoTypeOperatorFunction<T>;\n\n/**\n * Returns a result {@link Observable} that emits all values pushed by the source observable if they\n * are distinct in comparison to the last value the result observable emitted.\n *\n * When provided without parameters or with the first parameter (`{@link distinctUntilChanged#comparator comparator}`),\n * it behaves like this:\n *\n * 1. It will always emit the first value from the source.\n * 2. For all subsequent values pushed by the source, they will be compared to the previously emitted values\n *    using the provided `comparator` or an `===` equality check.\n * 3. If the value pushed by the source is determined to be unequal by this check, that value is emitted and\n *    becomes the new \"previously emitted value\" internally.\n *\n * When the second parameter (`{@link distinctUntilChanged#keySelector keySelector}`) is provided, the behavior\n * changes:\n *\n * 1. It will always emit the first value from the source.\n * 2. The `keySelector` will be run against all values, including the first value.\n * 3. For all values after the first, the selected key will be compared against the key selected from\n *    the previously emitted value using the `comparator`.\n * 4. If the keys are determined to be unequal by this check, the value (not the key), is emitted\n *    and the selected key from that value is saved for future comparisons against other keys.\n *\n * ## Examples\n *\n * A very basic example with no `{@link distinctUntilChanged#comparator comparator}`. Note that `1` is emitted more than once,\n * because it's distinct in comparison to the _previously emitted_ value,\n * not in comparison to _all other emitted values_.\n *\n * ```ts\n * import { of, distinctUntilChanged } from 'rxjs';\n *\n * of(1, 1, 1, 2, 2, 2, 1, 1, 3, 3)\n *   .pipe(distinctUntilChanged())\n *   .subscribe(console.log);\n * // Logs: 1, 2, 1, 3\n * ```\n *\n * With a `{@link distinctUntilChanged#comparator comparator}`, you can do custom comparisons. Let's say\n * you only want to emit a value when all of its components have\n * changed:\n *\n * ```ts\n * import { of, distinctUntilChanged } from 'rxjs';\n *\n * const totallyDifferentBuilds$ = of(\n *   { engineVersion: '1.1.0', transmissionVersion: '1.2.0' },\n *   { engineVersion: '1.1.0', transmissionVersion: '1.4.0' },\n *   { engineVersion: '1.3.0', transmissionVersion: '1.4.0' },\n *   { engineVersion: '1.3.0', transmissionVersion: '1.5.0' },\n *   { engineVersion: '2.0.0', transmissionVersion: '1.5.0' }\n * ).pipe(\n *   distinctUntilChanged((prev, curr) => {\n *     return (\n *       prev.engineVersion === curr.engineVersion ||\n *       prev.transmissionVersion === curr.transmissionVersion\n *     );\n *   })\n * );\n *\n * totallyDifferentBuilds$.subscribe(console.log);\n *\n * // Logs:\n * // { engineVersion: '1.1.0', transmissionVersion: '1.2.0' }\n * // { engineVersion: '1.3.0', transmissionVersion: '1.4.0' }\n * // { engineVersion: '2.0.0', transmissionVersion: '1.5.0' }\n * ```\n *\n * You can also provide a custom `{@link distinctUntilChanged#comparator comparator}` to check that emitted\n * changes are only in one direction. Let's say you only want to get\n * the next record temperature:\n *\n * ```ts\n * import { of, distinctUntilChanged } from 'rxjs';\n *\n * const temps$ = of(30, 31, 20, 34, 33, 29, 35, 20);\n *\n * const recordHighs$ = temps$.pipe(\n *   distinctUntilChanged((prevHigh, temp) => {\n *     // If the current temp is less than\n *     // or the same as the previous record,\n *     // the record hasn't changed.\n *     return temp <= prevHigh;\n *   })\n * );\n *\n * recordHighs$.subscribe(console.log);\n * // Logs: 30, 31, 34, 35\n * ```\n *\n * Selecting update events only when the `updatedBy` field shows\n * the account changed hands.\n *\n * ```ts\n * import { of, distinctUntilChanged } from 'rxjs';\n *\n * // A stream of updates to a given account\n * const accountUpdates$ = of(\n *   { updatedBy: 'blesh', data: [] },\n *   { updatedBy: 'blesh', data: [] },\n *   { updatedBy: 'ncjamieson', data: [] },\n *   { updatedBy: 'ncjamieson', data: [] },\n *   { updatedBy: 'blesh', data: [] }\n * );\n *\n * // We only want the events where it changed hands\n * const changedHands$ = accountUpdates$.pipe(\n *   distinctUntilChanged(undefined, update => update.updatedBy)\n * );\n *\n * changedHands$.subscribe(console.log);\n * // Logs:\n * // { updatedBy: 'blesh', data: Array[0] }\n * // { updatedBy: 'ncjamieson', data: Array[0] }\n * // { updatedBy: 'blesh', data: Array[0] }\n * ```\n *\n * @see {@link distinct}\n * @see {@link distinctUntilKeyChanged}\n *\n * @param comparator A function used to compare the previous and current keys for\n * equality. Defaults to a `===` check.\n * @param keySelector Used to select a key value to be passed to the `comparator`.\n *\n * @return A function that returns an Observable that emits items from the\n * source Observable with distinct values.\n */\nexport function distinctUntilChanged<T, K>(\n  comparator?: (previous: K, current: K) => boolean,\n  keySelector: (value: T) => K = identity as (value: T) => K\n): MonoTypeOperatorFunction<T> {\n  // We've been allowing `null` do be passed as the `compare`, so we can't do\n  // a default value for the parameter, because that will only work\n  // for `undefined`.\n  comparator = comparator ?? defaultCompare;\n\n  return operate((source, subscriber) => {\n    // The previous key, used to compare against keys selected\n    // from new arrivals to determine \"distinctiveness\".\n    let previousKey: K;\n    // Whether or not this is the first value we've gotten.\n    let first = true;\n\n    source.subscribe(\n      createOperatorSubscriber(subscriber, (value) => {\n        // We always call the key selector.\n        const currentKey = keySelector(value);\n\n        // If it's the first value, we always emit it.\n        // Otherwise, we compare this key to the previous key, and\n        // if the comparer returns false, we emit.\n        if (first || !comparator!(previousKey, currentKey)) {\n          // Update our state *before* we emit the value\n          // as emission can be the source of re-entrant code\n          // in functional libraries like this. We only really\n          // need to do this if it's the first value, or if the\n          // key we're tracking in previous needs to change.\n          first = false;\n          previousKey = currentKey;\n\n          // Emit the value!\n          subscriber.next(value);\n        }\n      })\n    );\n  });\n}\n\nfunction defaultCompare(a: any, b: any) {\n  return a === b;\n}\n","import { distinctUntilChanged } from './distinctUntilChanged';\nimport { MonoTypeOperatorFunction } from '../types';\n\n/* tslint:disable:max-line-length */\nexport function distinctUntilKeyChanged<T>(key: keyof T): MonoTypeOperatorFunction<T>;\nexport function distinctUntilKeyChanged<T, K extends keyof T>(key: K, compare: (x: T[K], y: T[K]) => boolean): MonoTypeOperatorFunction<T>;\n/* tslint:enable:max-line-length */\n\n/**\n * Returns an Observable that emits all items emitted by the source Observable that are distinct by comparison from the previous item,\n * using a property accessed by using the key provided to check if the two items are distinct.\n *\n * If a comparator function is provided, then it will be called for each item to test for whether or not that value should be emitted.\n *\n * If a comparator function is not provided, an equality check is used by default.\n *\n * ## Examples\n *\n * An example comparing the name of persons\n *\n * ```ts\n * import { of, distinctUntilKeyChanged } from 'rxjs';\n *\n * of(\n *   { age: 4, name: 'Foo' },\n *   { age: 7, name: 'Bar' },\n *   { age: 5, name: 'Foo' },\n *   { age: 6, name: 'Foo' }\n * ).pipe(\n *   distinctUntilKeyChanged('name')\n * )\n * .subscribe(x => console.log(x));\n *\n * // displays:\n * // { age: 4, name: 'Foo' }\n * // { age: 7, name: 'Bar' }\n * // { age: 5, name: 'Foo' }\n * ```\n *\n * An example comparing the first letters of the name\n *\n * ```ts\n * import { of, distinctUntilKeyChanged } from 'rxjs';\n *\n * of(\n *   { age: 4, name: 'Foo1' },\n *   { age: 7, name: 'Bar' },\n *   { age: 5, name: 'Foo2' },\n *   { age: 6, name: 'Foo3' }\n * ).pipe(\n *   distinctUntilKeyChanged('name', (x, y) => x.substring(0, 3) === y.substring(0, 3))\n * )\n * .subscribe(x => console.log(x));\n *\n * // displays:\n * // { age: 4, name: 'Foo1' }\n * // { age: 7, name: 'Bar' }\n * // { age: 5, name: 'Foo2' }\n * ```\n *\n * @see {@link distinct}\n * @see {@link distinctUntilChanged}\n *\n * @param {string} key String key for object property lookup on each item.\n * @param {function} [compare] Optional comparison function called to test if an item is distinct from the previous item in the source.\n * @return A function that returns an Observable that emits items from the\n * source Observable with distinct values based on the key specified.\n */\nexport function distinctUntilKeyChanged<T, K extends keyof T>(key: K, compare?: (x: T[K], y: T[K]) => boolean): MonoTypeOperatorFunction<T> {\n  return distinctUntilChanged((x: T, y: T) => compare ? compare(x[key], y[key]) : x[key] === y[key]);\n}\n","import { ArgumentOutOfRangeError } from '../util/ArgumentOutOfRangeError';\nimport { Observable } from '../Observable';\nimport { OperatorFunction } from '../types';\nimport { filter } from './filter';\nimport { throwIfEmpty } from './throwIfEmpty';\nimport { defaultIfEmpty } from './defaultIfEmpty';\nimport { take } from './take';\n\n/**\n * Emits the single value at the specified `index` in a sequence of emissions\n * from the source Observable.\n *\n * <span class=\"informal\">Emits only the i-th value, then completes.</span>\n *\n * ![](elementAt.png)\n *\n * `elementAt` returns an Observable that emits the item at the specified\n * `index` in the source Observable, or a default value if that `index` is out\n * of range and the `default` argument is provided. If the `default` argument is\n * not given and the `index` is out of range, the output Observable will emit an\n * `ArgumentOutOfRangeError` error.\n *\n * ## Example\n *\n * Emit only the third click event\n *\n * ```ts\n * import { fromEvent, elementAt } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const result = clicks.pipe(elementAt(2));\n * result.subscribe(x => console.log(x));\n *\n * // Results in:\n * // click 1 = nothing\n * // click 2 = nothing\n * // click 3 = MouseEvent object logged to console\n * ```\n *\n * @see {@link first}\n * @see {@link last}\n * @see {@link skip}\n * @see {@link single}\n * @see {@link take}\n *\n * @throws {ArgumentOutOfRangeError} When using `elementAt(i)`, it delivers an\n * ArgumentOutOfRangeError to the Observer's `error` callback if `i < 0` or the\n * Observable has completed before emitting the i-th `next` notification.\n *\n * @param {number} index Is the number `i` for the i-th source emission that has\n * happened since the subscription, starting from the number `0`.\n * @param {T} [defaultValue] The default value returned for missing indices.\n * @return A function that returns an Observable that emits a single item, if\n * it is found. Otherwise, it will emit the default value if given. If not, it\n * emits an error.\n */\nexport function elementAt<T, D = T>(index: number, defaultValue?: D): OperatorFunction<T, T | D> {\n  if (index < 0) {\n    throw new ArgumentOutOfRangeError();\n  }\n  const hasDefaultValue = arguments.length >= 2;\n  return (source: Observable<T>) =>\n    source.pipe(\n      filter((v, i) => i === index),\n      take(1),\n      hasDefaultValue ? defaultIfEmpty(defaultValue!) : throwIfEmpty(() => new ArgumentOutOfRangeError())\n    );\n}\n","/** prettier */\nimport { Observable } from '../Observable';\nimport { concat } from '../observable/concat';\nimport { of } from '../observable/of';\nimport { MonoTypeOperatorFunction, SchedulerLike, OperatorFunction, ValueFromArray } from '../types';\n\n/** @deprecated The `scheduler` parameter will be removed in v8. Use `scheduled` and `concatAll`. Details: https://rxjs.dev/deprecations/scheduler-argument */\nexport function endWith<T>(scheduler: SchedulerLike): MonoTypeOperatorFunction<T>;\n/** @deprecated The `scheduler` parameter will be removed in v8. Use `scheduled` and `concatAll`. Details: https://rxjs.dev/deprecations/scheduler-argument */\nexport function endWith<T, A extends unknown[] = T[]>(\n  ...valuesAndScheduler: [...A, SchedulerLike]\n): OperatorFunction<T, T | ValueFromArray<A>>;\n\nexport function endWith<T, A extends unknown[] = T[]>(...values: A): OperatorFunction<T, T | ValueFromArray<A>>;\n\n/**\n * Returns an observable that will emit all values from the source, then synchronously emit\n * the provided value(s) immediately after the source completes.\n *\n * NOTE: Passing a last argument of a Scheduler is _deprecated_, and may result in incorrect\n * types in TypeScript.\n *\n * This is useful for knowing when an observable ends. Particularly when paired with an\n * operator like {@link takeUntil}\n *\n * ![](endWith.png)\n *\n * ## Example\n *\n * Emit values to know when an interval starts and stops. The interval will\n * stop when a user clicks anywhere on the document.\n *\n * ```ts\n * import { interval, map, fromEvent, startWith, takeUntil, endWith } from 'rxjs';\n *\n * const ticker$ = interval(5000).pipe(\n *   map(() => 'tick')\n * );\n *\n * const documentClicks$ = fromEvent(document, 'click');\n *\n * ticker$.pipe(\n *   startWith('interval started'),\n *   takeUntil(documentClicks$),\n *   endWith('interval ended by click')\n * )\n * .subscribe(x => console.log(x));\n *\n * // Result (assuming a user clicks after 15 seconds)\n * // 'interval started'\n * // 'tick'\n * // 'tick'\n * // 'tick'\n * // 'interval ended by click'\n * ```\n *\n * @see {@link startWith}\n * @see {@link concat}\n * @see {@link takeUntil}\n *\n * @param values Items you want the modified Observable to emit last.\n * @return A function that returns an Observable that emits all values from the\n * source, then synchronously emits the provided value(s) immediately after the\n * source completes.\n */\nexport function endWith<T>(...values: Array<T | SchedulerLike>): MonoTypeOperatorFunction<T> {\n  return (source: Observable<T>) => concat(source, of(...values)) as Observable<T>;\n}\n","import { Observable } from '../Observable';\nimport { Falsy, OperatorFunction } from '../types';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\n\nexport function every<T>(predicate: BooleanConstructor): OperatorFunction<T, Exclude<T, Falsy> extends never ? false : boolean>;\n/** @deprecated Use a closure instead of a `thisArg`. Signatures accepting a `thisArg` will be removed in v8. */\nexport function every<T>(\n  predicate: BooleanConstructor,\n  thisArg: any\n): OperatorFunction<T, Exclude<T, Falsy> extends never ? false : boolean>;\n/** @deprecated Use a closure instead of a `thisArg`. Signatures accepting a `thisArg` will be removed in v8. */\nexport function every<T, A>(\n  predicate: (this: A, value: T, index: number, source: Observable<T>) => boolean,\n  thisArg: A\n): OperatorFunction<T, boolean>;\nexport function every<T>(predicate: (value: T, index: number, source: Observable<T>) => boolean): OperatorFunction<T, boolean>;\n\n/**\n * Returns an Observable that emits whether or not every item of the source satisfies the condition specified.\n *\n * <span class=\"informal\">If all values pass predicate before the source completes, emits true before completion,\n * otherwise emit false, then complete.</span>\n *\n * ![](every.png)\n *\n * ## Example\n *\n * A simple example emitting true if all elements are less than 5, false otherwise\n *\n * ```ts\n * import { of, every } from 'rxjs';\n *\n * of(1, 2, 3, 4, 5, 6)\n *   .pipe(every(x => x < 5))\n *   .subscribe(x => console.log(x)); // -> false\n * ```\n *\n * @param {function} predicate A function for determining if an item meets a specified condition.\n * @param {any} [thisArg] Optional object to use for `this` in the callback.\n * @return A function that returns an Observable of booleans that determines if\n * all items of the source Observable meet the condition specified.\n */\nexport function every<T>(\n  predicate: (value: T, index: number, source: Observable<T>) => boolean,\n  thisArg?: any\n): OperatorFunction<T, boolean> {\n  return operate((source, subscriber) => {\n    let index = 0;\n    source.subscribe(\n      createOperatorSubscriber(\n        subscriber,\n        (value) => {\n          if (!predicate.call(thisArg, value, index++, source)) {\n            subscriber.next(false);\n            subscriber.complete();\n          }\n        },\n        () => {\n          subscriber.next(true);\n          subscriber.complete();\n        }\n      )\n    );\n  });\n}\n","import { exhaustAll } from './exhaustAll';\n\n/**\n * @deprecated Renamed to {@link exhaustAll}. Will be removed in v8.\n */\nexport const exhaust = exhaustAll;\n","import { OperatorFunction, ObservableInput, ObservedValueOf } from '../types';\nimport { exhaustMap } from './exhaustMap';\nimport { identity } from '../util/identity';\n\n/**\n * Converts a higher-order Observable into a first-order Observable by dropping\n * inner Observables while the previous inner Observable has not yet completed.\n *\n * <span class=\"informal\">Flattens an Observable-of-Observables by dropping the\n * next inner Observables while the current inner is still executing.</span>\n *\n * ![](exhaust.png)\n *\n * `exhaustAll` subscribes to an Observable that emits Observables, also known as a\n * higher-order Observable. Each time it observes one of these emitted inner\n * Observables, the output Observable begins emitting the items emitted by that\n * inner Observable. So far, it behaves like {@link mergeAll}. However,\n * `exhaustAll` ignores every new inner Observable if the previous Observable has\n * not yet completed. Once that one completes, it will accept and flatten the\n * next inner Observable and repeat this process.\n *\n * ## Example\n *\n * Run a finite timer for each click, only if there is no currently active timer\n *\n * ```ts\n * import { fromEvent, map, interval, take, exhaustAll } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const higherOrder = clicks.pipe(\n *   map(() => interval(1000).pipe(take(5)))\n * );\n * const result = higherOrder.pipe(exhaustAll());\n * result.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link combineLatestAll}\n * @see {@link concatAll}\n * @see {@link switchAll}\n * @see {@link switchMap}\n * @see {@link mergeAll}\n * @see {@link exhaustMap}\n * @see {@link zipAll}\n *\n * @return A function that returns an Observable that takes a source of\n * Observables and propagates the first Observable exclusively until it\n * completes before subscribing to the next.\n */\nexport function exhaustAll<O extends ObservableInput<any>>(): OperatorFunction<O, ObservedValueOf<O>> {\n  return exhaustMap(identity);\n}\n","import { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { ObservableInput, OperatorFunction, ObservedValueOf } from '../types';\nimport { map } from './map';\nimport { innerFrom } from '../observable/innerFrom';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\n\n/* tslint:disable:max-line-length */\nexport function exhaustMap<T, O extends ObservableInput<any>>(\n  project: (value: T, index: number) => O\n): OperatorFunction<T, ObservedValueOf<O>>;\n/** @deprecated The `resultSelector` parameter will be removed in v8. Use an inner `map` instead. Details: https://rxjs.dev/deprecations/resultSelector */\nexport function exhaustMap<T, O extends ObservableInput<any>>(\n  project: (value: T, index: number) => O,\n  resultSelector: undefined\n): OperatorFunction<T, ObservedValueOf<O>>;\n/** @deprecated The `resultSelector` parameter will be removed in v8. Use an inner `map` instead. Details: https://rxjs.dev/deprecations/resultSelector */\nexport function exhaustMap<T, I, R>(\n  project: (value: T, index: number) => ObservableInput<I>,\n  resultSelector: (outerValue: T, innerValue: I, outerIndex: number, innerIndex: number) => R\n): OperatorFunction<T, R>;\n/* tslint:enable:max-line-length */\n\n/**\n * Projects each source value to an Observable which is merged in the output\n * Observable only if the previous projected Observable has completed.\n *\n * <span class=\"informal\">Maps each value to an Observable, then flattens all of\n * these inner Observables using {@link exhaust}.</span>\n *\n * ![](exhaustMap.png)\n *\n * Returns an Observable that emits items based on applying a function that you\n * supply to each item emitted by the source Observable, where that function\n * returns an (so-called \"inner\") Observable. When it projects a source value to\n * an Observable, the output Observable begins emitting the items emitted by\n * that projected Observable. However, `exhaustMap` ignores every new projected\n * Observable if the previous projected Observable has not yet completed. Once\n * that one completes, it will accept and flatten the next projected Observable\n * and repeat this process.\n *\n * ## Example\n *\n * Run a finite timer for each click, only if there is no currently active timer\n *\n * ```ts\n * import { fromEvent, exhaustMap, interval, take } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const result = clicks.pipe(\n *   exhaustMap(() => interval(1000).pipe(take(5)))\n * );\n * result.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link concatMap}\n * @see {@link exhaust}\n * @see {@link mergeMap}\n * @see {@link switchMap}\n *\n * @param {function(value: T, ?index: number): ObservableInput} project A function\n * that, when applied to an item emitted by the source Observable, returns an\n * Observable.\n * @return A function that returns an Observable containing projected\n * Observables of each item of the source, ignoring projected Observables that\n * start before their preceding Observable has completed.\n */\nexport function exhaustMap<T, R, O extends ObservableInput<any>>(\n  project: (value: T, index: number) => O,\n  resultSelector?: (outerValue: T, innerValue: ObservedValueOf<O>, outerIndex: number, innerIndex: number) => R\n): OperatorFunction<T, ObservedValueOf<O> | R> {\n  if (resultSelector) {\n    // DEPRECATED PATH\n    return (source: Observable<T>) =>\n      source.pipe(exhaustMap((a, i) => innerFrom(project(a, i)).pipe(map((b: any, ii: any) => resultSelector(a, b, i, ii)))));\n  }\n  return operate((source, subscriber) => {\n    let index = 0;\n    let innerSub: Subscriber<T> | null = null;\n    let isComplete = false;\n    source.subscribe(\n      createOperatorSubscriber(\n        subscriber,\n        (outerValue) => {\n          if (!innerSub) {\n            innerSub = createOperatorSubscriber(subscriber, undefined, () => {\n              innerSub = null;\n              isComplete && subscriber.complete();\n            });\n            innerFrom(project(outerValue, index++)).subscribe(innerSub);\n          }\n        },\n        () => {\n          isComplete = true;\n          !innerSub && subscriber.complete();\n        }\n      )\n    );\n  });\n}\n","import { OperatorFunction, ObservableInput, ObservedValueOf, SchedulerLike } from '../types';\nimport { operate } from '../util/lift';\nimport { mergeInternals } from './mergeInternals';\n\n/* tslint:disable:max-line-length */\nexport function expand<T, O extends ObservableInput<unknown>>(\n  project: (value: T, index: number) => O,\n  concurrent?: number,\n  scheduler?: SchedulerLike\n): OperatorFunction<T, ObservedValueOf<O>>;\n/**\n * @deprecated The `scheduler` parameter will be removed in v8. If you need to schedule the inner subscription,\n * use `subscribeOn` within the projection function: `expand((value) => fn(value).pipe(subscribeOn(scheduler)))`.\n * Details: Details: https://rxjs.dev/deprecations/scheduler-argument\n */\nexport function expand<T, O extends ObservableInput<unknown>>(\n  project: (value: T, index: number) => O,\n  concurrent: number | undefined,\n  scheduler: SchedulerLike\n): OperatorFunction<T, ObservedValueOf<O>>;\n/* tslint:enable:max-line-length */\n\n/**\n * Recursively projects each source value to an Observable which is merged in\n * the output Observable.\n *\n * <span class=\"informal\">It's similar to {@link mergeMap}, but applies the\n * projection function to every source value as well as every output value.\n * It's recursive.</span>\n *\n * ![](expand.png)\n *\n * Returns an Observable that emits items based on applying a function that you\n * supply to each item emitted by the source Observable, where that function\n * returns an Observable, and then merging those resulting Observables and\n * emitting the results of this merger. *Expand* will re-emit on the output\n * Observable every source value. Then, each output value is given to the\n * `project` function which returns an inner Observable to be merged on the\n * output Observable. Those output values resulting from the projection are also\n * given to the `project` function to produce new output values. This is how\n * *expand* behaves recursively.\n *\n * ## Example\n *\n * Start emitting the powers of two on every click, at most 10 of them\n *\n * ```ts\n * import { fromEvent, map, expand, of, delay, take } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const powersOfTwo = clicks.pipe(\n *   map(() => 1),\n *   expand(x => of(2 * x).pipe(delay(1000))),\n *   take(10)\n * );\n * powersOfTwo.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link mergeMap}\n * @see {@link mergeScan}\n *\n * @param {function(value: T, index: number) => Observable} project A function\n * that, when applied to an item emitted by the source or the output Observable,\n * returns an Observable.\n * @param {number} [concurrent=Infinity] Maximum number of input\n * Observables being subscribed to concurrently.\n * @param {SchedulerLike} [scheduler=null] The {@link SchedulerLike} to use for subscribing to\n * each projected inner Observable.\n * @return A function that returns an Observable that emits the source values\n * and also result of applying the projection function to each value emitted on\n * the output Observable and merging the results of the Observables obtained\n * from this transformation.\n */\nexport function expand<T, O extends ObservableInput<unknown>>(\n  project: (value: T, index: number) => O,\n  concurrent = Infinity,\n  scheduler?: SchedulerLike\n): OperatorFunction<T, ObservedValueOf<O>> {\n  concurrent = (concurrent || 0) < 1 ? Infinity : concurrent;\n  return operate((source, subscriber) =>\n    mergeInternals(\n      // General merge params\n      source,\n      subscriber,\n      project,\n      concurrent,\n\n      // onBeforeNext\n      undefined,\n\n      // Expand-specific\n      true, // Use expand path\n      scheduler // Inner subscription scheduler\n    )\n  );\n}\n","import { OperatorFunction, MonoTypeOperatorFunction, TruthyTypesOf } from '../types';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\n\n/** @deprecated Use a closure instead of a `thisArg`. Signatures accepting a `thisArg` will be removed in v8. */\nexport function filter<T, S extends T, A>(predicate: (this: A, value: T, index: number) => value is S, thisArg: A): OperatorFunction<T, S>;\nexport function filter<T, S extends T>(predicate: (value: T, index: number) => value is S): OperatorFunction<T, S>;\nexport function filter<T>(predicate: BooleanConstructor): OperatorFunction<T, TruthyTypesOf<T>>;\n/** @deprecated Use a closure instead of a `thisArg`. Signatures accepting a `thisArg` will be removed in v8. */\nexport function filter<T, A>(predicate: (this: A, value: T, index: number) => boolean, thisArg: A): MonoTypeOperatorFunction<T>;\nexport function filter<T>(predicate: (value: T, index: number) => boolean): MonoTypeOperatorFunction<T>;\n\n/**\n * Filter items emitted by the source Observable by only emitting those that\n * satisfy a specified predicate.\n *\n * <span class=\"informal\">Like\n * [Array.prototype.filter()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter),\n * it only emits a value from the source if it passes a criterion function.</span>\n *\n * ![](filter.png)\n *\n * Similar to the well-known `Array.prototype.filter` method, this operator\n * takes values from the source Observable, passes them through a `predicate`\n * function and only emits those values that yielded `true`.\n *\n * ## Example\n *\n * Emit only click events whose target was a DIV element\n *\n * ```ts\n * import { fromEvent, filter } from 'rxjs';\n *\n * const div = document.createElement('div');\n * div.style.cssText = 'width: 200px; height: 200px; background: #09c;';\n * document.body.appendChild(div);\n *\n * const clicks = fromEvent(document, 'click');\n * const clicksOnDivs = clicks.pipe(filter(ev => (<HTMLElement>ev.target).tagName === 'DIV'));\n * clicksOnDivs.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link distinct}\n * @see {@link distinctUntilChanged}\n * @see {@link distinctUntilKeyChanged}\n * @see {@link ignoreElements}\n * @see {@link partition}\n * @see {@link skip}\n *\n * @param predicate A function that\n * evaluates each value emitted by the source Observable. If it returns `true`,\n * the value is emitted, if `false` the value is not passed to the output\n * Observable. The `index` parameter is the number `i` for the i-th source\n * emission that has happened since the subscription, starting from the number\n * `0`.\n * @param thisArg An optional argument to determine the value of `this`\n * in the `predicate` function.\n * @return A function that returns an Observable that emits items from the\n * source Observable that satisfy the specified `predicate`.\n */\nexport function filter<T>(predicate: (value: T, index: number) => boolean, thisArg?: any): MonoTypeOperatorFunction<T> {\n  return operate((source, subscriber) => {\n    // An index passed to our predicate function on each call.\n    let index = 0;\n\n    // Subscribe to the source, all errors and completions are\n    // forwarded to the consumer.\n    source.subscribe(\n      // Call the predicate with the appropriate `this` context,\n      // if the predicate returns `true`, then send the value\n      // to the consumer.\n      createOperatorSubscriber(subscriber, (value) => predicate.call(thisArg, value, index++) && subscriber.next(value))\n    );\n  });\n}\n","import { MonoTypeOperatorFunction } from '../types';\nimport { operate } from '../util/lift';\n\n/**\n * Returns an Observable that mirrors the source Observable, but will call a specified function when\n * the source terminates on complete or error.\n * The specified function will also be called when the subscriber explicitly unsubscribes.\n *\n * ## Examples\n *\n * Execute callback function when the observable completes\n *\n * ```ts\n * import { interval, take, finalize } from 'rxjs';\n *\n * // emit value in sequence every 1 second\n * const source = interval(1000);\n * const example = source.pipe(\n *   take(5), //take only the first 5 values\n *   finalize(() => console.log('Sequence complete')) // Execute when the observable completes\n * );\n * const subscribe = example.subscribe(val => console.log(val));\n *\n * // results:\n * // 0\n * // 1\n * // 2\n * // 3\n * // 4\n * // 'Sequence complete'\n * ```\n *\n * Execute callback function when the subscriber explicitly unsubscribes\n *\n * ```ts\n * import { interval, finalize, tap, noop, timer } from 'rxjs';\n *\n * const source = interval(100).pipe(\n *   finalize(() => console.log('[finalize] Called')),\n *   tap({\n *     next: () => console.log('[next] Called'),\n *     error: () => console.log('[error] Not called'),\n *     complete: () => console.log('[tap complete] Not called')\n *   })\n * );\n *\n * const sub = source.subscribe({\n *   next: x => console.log(x),\n *   error: noop,\n *   complete: () => console.log('[complete] Not called')\n * });\n *\n * timer(150).subscribe(() => sub.unsubscribe());\n *\n * // results:\n * // '[next] Called'\n * // 0\n * // '[finalize] Called'\n * ```\n *\n * @param {function} callback Function to be called when source terminates.\n * @return A function that returns an Observable that mirrors the source, but\n * will call the specified function on termination.\n */\nexport function finalize<T>(callback: () => void): MonoTypeOperatorFunction<T> {\n  return operate((source, subscriber) => {\n    // TODO: This try/finally was only added for `useDeprecatedSynchronousErrorHandling`.\n    // REMOVE THIS WHEN THAT HOT GARBAGE IS REMOVED IN V8.\n    try {\n      source.subscribe(subscriber);\n    } finally {\n      subscriber.add(callback);\n    }\n  });\n}\n","import { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { OperatorFunction, TruthyTypesOf } from '../types';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\n\nexport function find<T>(predicate: BooleanConstructor): OperatorFunction<T, TruthyTypesOf<T>>;\n/** @deprecated Use a closure instead of a `thisArg`. Signatures accepting a `thisArg` will be removed in v8. */\nexport function find<T, S extends T, A>(\n  predicate: (this: A, value: T, index: number, source: Observable<T>) => value is S,\n  thisArg: A\n): OperatorFunction<T, S | undefined>;\nexport function find<T, S extends T>(\n  predicate: (value: T, index: number, source: Observable<T>) => value is S\n): OperatorFunction<T, S | undefined>;\n/** @deprecated Use a closure instead of a `thisArg`. Signatures accepting a `thisArg` will be removed in v8. */\nexport function find<T, A>(\n  predicate: (this: A, value: T, index: number, source: Observable<T>) => boolean,\n  thisArg: A\n): OperatorFunction<T, T | undefined>;\nexport function find<T>(predicate: (value: T, index: number, source: Observable<T>) => boolean): OperatorFunction<T, T | undefined>;\n/**\n * Emits only the first value emitted by the source Observable that meets some\n * condition.\n *\n * <span class=\"informal\">Finds the first value that passes some test and emits\n * that.</span>\n *\n * ![](find.png)\n *\n * `find` searches for the first item in the source Observable that matches the\n * specified condition embodied by the `predicate`, and returns the first\n * occurrence in the source. Unlike {@link first}, the `predicate` is required\n * in `find`, and does not emit an error if a valid value is not found\n * (emits `undefined` instead).\n *\n * ## Example\n *\n * Find and emit the first click that happens on a DIV element\n *\n * ```ts\n * import { fromEvent, find } from 'rxjs';\n *\n * const div = document.createElement('div');\n * div.style.cssText = 'width: 200px; height: 200px; background: #09c;';\n * document.body.appendChild(div);\n *\n * const clicks = fromEvent(document, 'click');\n * const result = clicks.pipe(find(ev => (<HTMLElement>ev.target).tagName === 'DIV'));\n * result.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link filter}\n * @see {@link first}\n * @see {@link findIndex}\n * @see {@link take}\n *\n * @param {function(value: T, index: number, source: Observable<T>): boolean} predicate\n * A function called with each item to test for condition matching.\n * @param {any} [thisArg] An optional argument to determine the value of `this`\n * in the `predicate` function.\n * @return A function that returns an Observable that emits the first item that\n * matches the condition.\n */\nexport function find<T>(\n  predicate: (value: T, index: number, source: Observable<T>) => boolean,\n  thisArg?: any\n): OperatorFunction<T, T | undefined> {\n  return operate(createFind(predicate, thisArg, 'value'));\n}\n\nexport function createFind<T>(\n  predicate: (value: T, index: number, source: Observable<T>) => boolean,\n  thisArg: any,\n  emit: 'value' | 'index'\n) {\n  const findIndex = emit === 'index';\n  return (source: Observable<T>, subscriber: Subscriber<any>) => {\n    let index = 0;\n    source.subscribe(\n      createOperatorSubscriber(\n        subscriber,\n        (value) => {\n          const i = index++;\n          if (predicate.call(thisArg, value, i, source)) {\n            subscriber.next(findIndex ? i : value);\n            subscriber.complete();\n          }\n        },\n        () => {\n          subscriber.next(findIndex ? -1 : undefined);\n          subscriber.complete();\n        }\n      )\n    );\n  };\n}\n","import { Observable } from '../Observable';\nimport { Falsy, OperatorFunction } from '../types';\nimport { operate } from '../util/lift';\nimport { createFind } from './find';\n\nexport function findIndex<T>(predicate: BooleanConstructor): OperatorFunction<T, T extends Falsy ? -1 : number>;\n/** @deprecated Use a closure instead of a `thisArg`. Signatures accepting a `thisArg` will be removed in v8. */\nexport function findIndex<T>(predicate: BooleanConstructor, thisArg: any): OperatorFunction<T, T extends Falsy ? -1 : number>;\n/** @deprecated Use a closure instead of a `thisArg`. Signatures accepting a `thisArg` will be removed in v8. */\nexport function findIndex<T, A>(\n  predicate: (this: A, value: T, index: number, source: Observable<T>) => boolean,\n  thisArg: A\n): OperatorFunction<T, number>;\nexport function findIndex<T>(predicate: (value: T, index: number, source: Observable<T>) => boolean): OperatorFunction<T, number>;\n\n/**\n * Emits only the index of the first value emitted by the source Observable that\n * meets some condition.\n *\n * <span class=\"informal\">It's like {@link find}, but emits the index of the\n * found value, not the value itself.</span>\n *\n * ![](findIndex.png)\n *\n * `findIndex` searches for the first item in the source Observable that matches\n * the specified condition embodied by the `predicate`, and returns the\n * (zero-based) index of the first occurrence in the source. Unlike\n * {@link first}, the `predicate` is required in `findIndex`, and does not emit\n * an error if a valid value is not found.\n *\n * ## Example\n *\n * Emit the index of first click that happens on a DIV element\n *\n * ```ts\n * import { fromEvent, findIndex } from 'rxjs';\n *\n * const div = document.createElement('div');\n * div.style.cssText = 'width: 200px; height: 200px; background: #09c;';\n * document.body.appendChild(div);\n *\n * const clicks = fromEvent(document, 'click');\n * const result = clicks.pipe(findIndex(ev => (<HTMLElement>ev.target).tagName === 'DIV'));\n * result.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link filter}\n * @see {@link find}\n * @see {@link first}\n * @see {@link take}\n *\n * @param {function(value: T, index: number, source: Observable<T>): boolean} predicate\n * A function called with each item to test for condition matching.\n * @param {any} [thisArg] An optional argument to determine the value of `this`\n * in the `predicate` function.\n * @return A function that returns an Observable that emits the index of the\n * first item that matches the condition.\n */\nexport function findIndex<T>(\n  predicate: (value: T, index: number, source: Observable<T>) => boolean,\n  thisArg?: any\n): OperatorFunction<T, number> {\n  return operate(createFind(predicate, thisArg, 'index'));\n}\n","import { Observable } from '../Observable';\nimport { EmptyError } from '../util/EmptyError';\nimport { OperatorFunction, TruthyTypesOf } from '../types';\nimport { filter } from './filter';\nimport { take } from './take';\nimport { defaultIfEmpty } from './defaultIfEmpty';\nimport { throwIfEmpty } from './throwIfEmpty';\nimport { identity } from '../util/identity';\n\nexport function first<T, D = T>(predicate?: null, defaultValue?: D): OperatorFunction<T, T | D>;\nexport function first<T>(predicate: BooleanConstructor): OperatorFunction<T, TruthyTypesOf<T>>;\nexport function first<T, D>(predicate: BooleanConstructor, defaultValue: D): OperatorFunction<T, TruthyTypesOf<T> | D>;\nexport function first<T, S extends T>(\n  predicate: (value: T, index: number, source: Observable<T>) => value is S,\n  defaultValue?: S\n): OperatorFunction<T, S>;\nexport function first<T, S extends T, D>(\n  predicate: (value: T, index: number, source: Observable<T>) => value is S,\n  defaultValue: D\n): OperatorFunction<T, S | D>;\nexport function first<T, D = T>(\n  predicate: (value: T, index: number, source: Observable<T>) => boolean,\n  defaultValue?: D\n): OperatorFunction<T, T | D>;\n\n/**\n * Emits only the first value (or the first value that meets some condition)\n * emitted by the source Observable.\n *\n * <span class=\"informal\">Emits only the first value. Or emits only the first\n * value that passes some test.</span>\n *\n * ![](first.png)\n *\n * If called with no arguments, `first` emits the first value of the source\n * Observable, then completes. If called with a `predicate` function, `first`\n * emits the first value of the source that matches the specified condition. Throws an error if\n * `defaultValue` was not provided and a matching element is not found.\n *\n * ## Examples\n *\n * Emit only the first click that happens on the DOM\n *\n * ```ts\n * import { fromEvent, first } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const result = clicks.pipe(first());\n * result.subscribe(x => console.log(x));\n * ```\n *\n * Emits the first click that happens on a DIV\n *\n * ```ts\n * import { fromEvent, first } from 'rxjs';\n *\n * const div = document.createElement('div');\n * div.style.cssText = 'width: 200px; height: 200px; background: #09c;';\n * document.body.appendChild(div);\n *\n * const clicks = fromEvent(document, 'click');\n * const result = clicks.pipe(first(ev => (<HTMLElement>ev.target).tagName === 'DIV'));\n * result.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link filter}\n * @see {@link find}\n * @see {@link take}\n *\n * @throws {EmptyError} Delivers an EmptyError to the Observer's `error`\n * callback if the Observable completes before any `next` notification was sent.\n * This is how `first()` is different from {@link take}(1) which completes instead.\n *\n * @param {function(value: T, index: number, source: Observable<T>): boolean} [predicate]\n * An optional function called with each item to test for condition matching.\n * @param {D} [defaultValue] The default value emitted in case no valid value\n * was found on the source.\n * @return A function that returns an Observable that emits the first item that\n * matches the condition.\n */\nexport function first<T, D>(\n  predicate?: ((value: T, index: number, source: Observable<T>) => boolean) | null,\n  defaultValue?: D\n): OperatorFunction<T, T | D> {\n  const hasDefaultValue = arguments.length >= 2;\n  return (source: Observable<T>) =>\n    source.pipe(\n      predicate ? filter((v, i) => predicate(v, i, source)) : identity,\n      take(1),\n      hasDefaultValue ? defaultIfEmpty(defaultValue!) : throwIfEmpty(() => new EmptyError())\n    );\n}\n","import { mergeMap } from './mergeMap';\n\n/**\n * @deprecated Renamed to {@link mergeMap}. Will be removed in v8.\n */\nexport const flatMap = mergeMap;\n","import { Observable } from '../Observable';\nimport { innerFrom } from '../observable/innerFrom';\nimport { Subject } from '../Subject';\nimport { ObservableInput, Observer, OperatorFunction, SubjectLike } from '../types';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber, OperatorSubscriber } from './OperatorSubscriber';\n\nexport interface BasicGroupByOptions<K, T> {\n  element?: undefined;\n  duration?: (grouped: GroupedObservable<K, T>) => ObservableInput<any>;\n  connector?: () => SubjectLike<T>;\n}\n\nexport interface GroupByOptionsWithElement<K, E, T> {\n  element: (value: T) => E;\n  duration?: (grouped: GroupedObservable<K, E>) => ObservableInput<any>;\n  connector?: () => SubjectLike<E>;\n}\n\nexport function groupBy<T, K>(key: (value: T) => K, options: BasicGroupByOptions<K, T>): OperatorFunction<T, GroupedObservable<K, T>>;\n\nexport function groupBy<T, K, E>(\n  key: (value: T) => K,\n  options: GroupByOptionsWithElement<K, E, T>\n): OperatorFunction<T, GroupedObservable<K, E>>;\n\nexport function groupBy<T, K extends T>(\n  key: (value: T) => value is K\n): OperatorFunction<T, GroupedObservable<true, K> | GroupedObservable<false, Exclude<T, K>>>;\n\nexport function groupBy<T, K>(key: (value: T) => K): OperatorFunction<T, GroupedObservable<K, T>>;\n\n/**\n * @deprecated use the options parameter instead.\n */\nexport function groupBy<T, K>(\n  key: (value: T) => K,\n  element: void,\n  duration: (grouped: GroupedObservable<K, T>) => Observable<any>\n): OperatorFunction<T, GroupedObservable<K, T>>;\n\n/**\n * @deprecated use the options parameter instead.\n */\nexport function groupBy<T, K, R>(\n  key: (value: T) => K,\n  element?: (value: T) => R,\n  duration?: (grouped: GroupedObservable<K, R>) => Observable<any>\n): OperatorFunction<T, GroupedObservable<K, R>>;\n\n/**\n * Groups the items emitted by an Observable according to a specified criterion,\n * and emits these grouped items as `GroupedObservables`, one\n * {@link GroupedObservable} per group.\n *\n * ![](groupBy.png)\n *\n * When the Observable emits an item, a key is computed for this item with the key function.\n *\n * If a {@link GroupedObservable} for this key exists, this {@link GroupedObservable} emits. Otherwise, a new\n * {@link GroupedObservable} for this key is created and emits.\n *\n * A {@link GroupedObservable} represents values belonging to the same group represented by a common key. The common\n * key is available as the `key` field of a {@link GroupedObservable} instance.\n *\n * The elements emitted by {@link GroupedObservable}s are by default the items emitted by the Observable, or elements\n * returned by the element function.\n *\n * ## Examples\n *\n * Group objects by `id` and return as array\n *\n * ```ts\n * import { of, groupBy, mergeMap, reduce } from 'rxjs';\n *\n * of(\n *   { id: 1, name: 'JavaScript' },\n *   { id: 2, name: 'Parcel' },\n *   { id: 2, name: 'webpack' },\n *   { id: 1, name: 'TypeScript' },\n *   { id: 3, name: 'TSLint' }\n * ).pipe(\n *   groupBy(p => p.id),\n *   mergeMap(group$ => group$.pipe(reduce((acc, cur) => [...acc, cur], [])))\n * )\n * .subscribe(p => console.log(p));\n *\n * // displays:\n * // [{ id: 1, name: 'JavaScript' }, { id: 1, name: 'TypeScript'}]\n * // [{ id: 2, name: 'Parcel' }, { id: 2, name: 'webpack'}]\n * // [{ id: 3, name: 'TSLint' }]\n * ```\n *\n * Pivot data on the `id` field\n *\n * ```ts\n * import { of, groupBy, mergeMap, reduce, map } from 'rxjs';\n *\n * of(\n *   { id: 1, name: 'JavaScript' },\n *   { id: 2, name: 'Parcel' },\n *   { id: 2, name: 'webpack' },\n *   { id: 1, name: 'TypeScript' },\n *   { id: 3, name: 'TSLint' }\n * ).pipe(\n *   groupBy(p => p.id, { element: p => p.name }),\n *   mergeMap(group$ => group$.pipe(reduce((acc, cur) => [...acc, cur], [`${ group$.key }`]))),\n *   map(arr => ({ id: parseInt(arr[0], 10), values: arr.slice(1) }))\n * )\n * .subscribe(p => console.log(p));\n *\n * // displays:\n * // { id: 1, values: [ 'JavaScript', 'TypeScript' ] }\n * // { id: 2, values: [ 'Parcel', 'webpack' ] }\n * // { id: 3, values: [ 'TSLint' ] }\n * ```\n *\n * @param key A function that extracts the key\n * for each item.\n * @param element A function that extracts the\n * return element for each item.\n * @param duration\n * A function that returns an Observable to determine how long each group should\n * exist.\n * @param connector Factory function to create an\n * intermediate Subject through which grouped elements are emitted.\n * @return A function that returns an Observable that emits GroupedObservables,\n * each of which corresponds to a unique key value and each of which emits\n * those items from the source Observable that share that key value.\n *\n * @deprecated Use the options parameter instead.\n */\nexport function groupBy<T, K, R>(\n  key: (value: T) => K,\n  element?: (value: T) => R,\n  duration?: (grouped: GroupedObservable<K, R>) => Observable<any>,\n  connector?: () => Subject<R>\n): OperatorFunction<T, GroupedObservable<K, R>>;\n\n// Impl\nexport function groupBy<T, K, R>(\n  keySelector: (value: T) => K,\n  elementOrOptions?: ((value: any) => any) | void | BasicGroupByOptions<K, T> | GroupByOptionsWithElement<K, R, T>,\n  duration?: (grouped: GroupedObservable<any, any>) => ObservableInput<any>,\n  connector?: () => SubjectLike<any>\n): OperatorFunction<T, GroupedObservable<K, R>> {\n  return operate((source, subscriber) => {\n    let element: ((value: any) => any) | void;\n    if (!elementOrOptions || typeof elementOrOptions === 'function') {\n      element = elementOrOptions as ((value: any) => any);\n    } else {\n      ({ duration, element, connector } = elementOrOptions);\n    }\n\n    // A lookup for the groups that we have so far.\n    const groups = new Map<K, SubjectLike<any>>();\n\n    // Used for notifying all groups and the subscriber in the same way.\n    const notify = (cb: (group: Observer<any>) => void) => {\n      groups.forEach(cb);\n      cb(subscriber);\n    };\n\n    // Used to handle errors from the source, AND errors that occur during the\n    // next call from the source.\n    const handleError = (err: any) => notify((consumer) => consumer.error(err));\n\n    // The number of actively subscribed groups\n    let activeGroups = 0;\n\n    // Whether or not teardown was attempted on this subscription.\n    let teardownAttempted = false;\n\n    // Capturing a reference to this, because we need a handle to it\n    // in `createGroupedObservable` below. This is what we use to\n    // subscribe to our source observable. This sometimes needs to be unsubscribed\n    // out-of-band with our `subscriber` which is the downstream subscriber, or destination,\n    // in cases where a user unsubscribes from the main resulting subscription, but\n    // still has groups from this subscription subscribed and would expect values from it\n    // Consider:  `source.pipe(groupBy(fn), take(2))`.\n    const groupBySourceSubscriber = new OperatorSubscriber(\n      subscriber,\n      (value: T) => {\n        // Because we have to notify all groups of any errors that occur in here,\n        // we have to add our own try/catch to ensure that those errors are propagated.\n        // OperatorSubscriber will only send the error to the main subscriber.\n        try {\n          const key = keySelector(value);\n\n          let group = groups.get(key);\n          if (!group) {\n            // Create our group subject\n            groups.set(key, (group = connector ? connector() : new Subject<any>()));\n\n            // Emit the grouped observable. Note that we can't do a simple `asObservable()` here,\n            // because the grouped observable has special semantics around reference counting\n            // to ensure we don't sever our connection to the source prematurely.\n            const grouped = createGroupedObservable(key, group);\n            subscriber.next(grouped);\n\n            if (duration) {\n              const durationSubscriber = createOperatorSubscriber(\n                // Providing the group here ensures that it is disposed of -- via `unsubscribe` --\n                // wnen the duration subscription is torn down. That is important, because then\n                // if someone holds a handle to the grouped observable and tries to subscribe to it\n                // after the connection to the source has been severed, they will get an\n                // `ObjectUnsubscribedError` and know they can't possibly get any notifications.\n                group as any,\n                () => {\n                  // Our duration notified! We can complete the group.\n                  // The group will be removed from the map in the finalization phase.\n                  group!.complete();\n                  durationSubscriber?.unsubscribe();\n                },\n                // Completions are also sent to the group, but just the group.\n                undefined,\n                // Errors on the duration subscriber are sent to the group\n                // but only the group. They are not sent to the main subscription.\n                undefined,\n                // Finalization: Remove this group from our map.\n                () => groups.delete(key)\n              );\n\n              // Start our duration notifier.\n              groupBySourceSubscriber.add(innerFrom(duration(grouped)).subscribe(durationSubscriber));\n            }\n          }\n\n          // Send the value to our group.\n          group.next(element ? element(value) : value);\n        } catch (err) {\n          handleError(err);\n        }\n      },\n      // Source completes.\n      () => notify((consumer) => consumer.complete()),\n      // Error from the source.\n      handleError,\n      // Free up memory.\n      // When the source subscription is _finally_ torn down, release the subjects and keys\n      // in our groups Map, they may be quite large and we don't want to keep them around if we\n      // don't have to.\n      () => groups.clear(),\n      () => {\n        teardownAttempted = true;\n        // We only kill our subscription to the source if we have\n        // no active groups. As stated above, consider this scenario:\n        // source$.pipe(groupBy(fn), take(2)).\n        return activeGroups === 0;\n      }\n    );\n\n    // Subscribe to the source\n    source.subscribe(groupBySourceSubscriber);\n\n    /**\n     * Creates the actual grouped observable returned.\n     * @param key The key of the group\n     * @param groupSubject The subject that fuels the group\n     */\n    function createGroupedObservable(key: K, groupSubject: SubjectLike<any>) {\n      const result: any = new Observable<T>((groupSubscriber) => {\n        activeGroups++;\n        const innerSub = groupSubject.subscribe(groupSubscriber);\n        return () => {\n          innerSub.unsubscribe();\n          // We can kill the subscription to our source if we now have no more\n          // active groups subscribed, and a finalization was already attempted on\n          // the source.\n          --activeGroups === 0 && teardownAttempted && groupBySourceSubscriber.unsubscribe();\n        };\n      });\n      result.key = key;\n      return result;\n    }\n  });\n}\n\n/**\n * An observable of values that is the emitted by the result of a {@link groupBy} operator,\n * contains a `key` property for the grouping.\n */\nexport interface GroupedObservable<K, T> extends Observable<T> {\n  /**\n   * The key value for the grouped notifications.\n   */\n  readonly key: K;\n}\n","import { OperatorFunction } from '../types';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nimport { noop } from '../util/noop';\n\n/**\n * Ignores all items emitted by the source Observable and only passes calls of `complete` or `error`.\n *\n * ![](ignoreElements.png)\n *\n * The `ignoreElements` operator suppresses all items emitted by the source Observable,\n * but allows its termination notification (either `error` or `complete`) to pass through unchanged.\n *\n * If you do not care about the items being emitted by an Observable, but you do want to be notified\n * when it completes or when it terminates with an error, you can apply the `ignoreElements` operator\n * to the Observable, which will ensure that it will never call its observers’ `next` handlers.\n *\n * ## Example\n *\n * Ignore all `next` emissions from the source\n *\n * ```ts\n * import { of, ignoreElements } from 'rxjs';\n *\n * of('you', 'talking', 'to', 'me')\n *   .pipe(ignoreElements())\n *   .subscribe({\n *     next: word => console.log(word),\n *     error: err => console.log('error:', err),\n *     complete: () => console.log('the end'),\n *   });\n *\n * // result:\n * // 'the end'\n * ```\n *\n * @return A function that returns an empty Observable that only calls\n * `complete` or `error`, based on which one is called by the source\n * Observable.\n */\nexport function ignoreElements(): OperatorFunction<unknown, never> {\n  return operate((source, subscriber) => {\n    source.subscribe(createOperatorSubscriber(subscriber, noop));\n  });\n}\n","import { OperatorFunction } from '../types';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\n\n/**\n * Emits `false` if the input Observable emits any values, or emits `true` if the\n * input Observable completes without emitting any values.\n *\n * <span class=\"informal\">Tells whether any values are emitted by an Observable.</span>\n *\n * ![](isEmpty.png)\n *\n * `isEmpty` transforms an Observable that emits values into an Observable that\n * emits a single boolean value representing whether or not any values were\n * emitted by the source Observable. As soon as the source Observable emits a\n * value, `isEmpty` will emit a `false` and complete.  If the source Observable\n * completes having not emitted anything, `isEmpty` will emit a `true` and\n * complete.\n *\n * A similar effect could be achieved with {@link count}, but `isEmpty` can emit\n * a `false` value sooner.\n *\n * ## Examples\n *\n * Emit `false` for a non-empty Observable\n *\n * ```ts\n * import { Subject, isEmpty } from 'rxjs';\n *\n * const source = new Subject<string>();\n * const result = source.pipe(isEmpty());\n *\n * source.subscribe(x => console.log(x));\n * result.subscribe(x => console.log(x));\n *\n * source.next('a');\n * source.next('b');\n * source.next('c');\n * source.complete();\n *\n * // Outputs\n * // 'a'\n * // false\n * // 'b'\n * // 'c'\n * ```\n *\n * Emit `true` for an empty Observable\n *\n * ```ts\n * import { EMPTY, isEmpty } from 'rxjs';\n *\n * const result = EMPTY.pipe(isEmpty());\n * result.subscribe(x => console.log(x));\n *\n * // Outputs\n * // true\n * ```\n *\n * @see {@link count}\n * @see {@link EMPTY}\n *\n * @return A function that returns an Observable that emits boolean value\n * indicating whether the source Observable was empty or not.\n */\nexport function isEmpty<T>(): OperatorFunction<T, boolean> {\n  return operate((source, subscriber) => {\n    source.subscribe(\n      createOperatorSubscriber(\n        subscriber,\n        () => {\n          subscriber.next(false);\n          subscriber.complete();\n        },\n        () => {\n          subscriber.next(true);\n          subscriber.complete();\n        }\n      )\n    );\n  });\n}\n","import { Observable } from '../Observable';\nimport { ObservableInput, OperatorFunction } from '../types';\nimport { identity } from '../util/identity';\nimport { mapOneOrManyArgs } from '../util/mapOneOrManyArgs';\nimport { pipe } from '../util/pipe';\nimport { mergeMap } from './mergeMap';\nimport { toArray } from './toArray';\n\n/**\n * Collects all of the inner sources from source observable. Then, once the\n * source completes, joins the values using the given static.\n *\n * This is used for {@link combineLatestAll} and {@link zipAll} which both have the\n * same behavior of collecting all inner observables, then operating on them.\n *\n * @param joinFn The type of static join to apply to the sources collected\n * @param project The projection function to apply to the values, if any\n */\nexport function joinAllInternals<T, R>(joinFn: (sources: ObservableInput<T>[]) => Observable<T>, project?: (...args: any[]) => R) {\n  return pipe(\n    // Collect all inner sources into an array, and emit them when the\n    // source completes.\n    toArray() as OperatorFunction<ObservableInput<T>, ObservableInput<T>[]>,\n    // Run the join function on the collected array of inner sources.\n    mergeMap((sources) => joinFn(sources)),\n    // If a projection function was supplied, apply it to each result.\n    project ? mapOneOrManyArgs(project) : (identity as any)\n  );\n}\n","import { Observable } from '../Observable';\nimport { EmptyError } from '../util/EmptyError';\nimport { OperatorFunction, TruthyTypesOf } from '../types';\nimport { filter } from './filter';\nimport { takeLast } from './takeLast';\nimport { throwIfEmpty } from './throwIfEmpty';\nimport { defaultIfEmpty } from './defaultIfEmpty';\nimport { identity } from '../util/identity';\n\nexport function last<T>(predicate: BooleanConstructor): OperatorFunction<T, TruthyTypesOf<T>>;\nexport function last<T, D>(predicate: BooleanConstructor, defaultValue: D): OperatorFunction<T, TruthyTypesOf<T> | D>;\nexport function last<T, D = T>(predicate?: null, defaultValue?: D): OperatorFunction<T, T | D>;\nexport function last<T, S extends T>(\n  predicate: (value: T, index: number, source: Observable<T>) => value is S,\n  defaultValue?: S\n): OperatorFunction<T, S>;\nexport function last<T, D = T>(\n  predicate: (value: T, index: number, source: Observable<T>) => boolean,\n  defaultValue?: D\n): OperatorFunction<T, T | D>;\n\n/**\n * Returns an Observable that emits only the last item emitted by the source Observable.\n * It optionally takes a predicate function as a parameter, in which case, rather than emitting\n * the last item from the source Observable, the resulting Observable will emit the last item\n * from the source Observable that satisfies the predicate.\n *\n * ![](last.png)\n *\n * It will throw an error if the source completes without notification or one that matches the predicate. It\n * returns the last value or if a predicate is provided last value that matches the predicate. It returns the\n * given default value if no notification is emitted or matches the predicate.\n *\n * ## Examples\n *\n * Last alphabet from the sequence\n *\n * ```ts\n * import { from, last } from 'rxjs';\n *\n * const source = from(['x', 'y', 'z']);\n * const result = source.pipe(last());\n *\n * result.subscribe(value => console.log(`Last alphabet: ${ value }`));\n *\n * // Outputs\n * // Last alphabet: z\n * ```\n *\n * Default value when the value in the predicate is not matched\n *\n * ```ts\n * import { from, last } from 'rxjs';\n *\n * const source = from(['x', 'y', 'z']);\n * const result = source.pipe(last(char => char === 'a', 'not found'));\n *\n * result.subscribe(value => console.log(`'a' is ${ value }.`));\n *\n * // Outputs\n * // 'a' is not found.\n * ```\n *\n * @see {@link skip}\n * @see {@link skipUntil}\n * @see {@link skipLast}\n * @see {@link skipWhile}\n *\n * @throws {EmptyError} Delivers an EmptyError to the Observer's `error`\n * callback if the Observable completes before any `next` notification was sent.\n * @param {function} [predicate] - The condition any source emitted item has to satisfy.\n * @param {any} [defaultValue] - An optional default value to provide if last\n * predicate isn't met or no values were emitted.\n * @return A function that returns an Observable that emits only the last item\n * satisfying the given condition from the source, or a NoSuchElementException\n * if no such items are emitted.\n * @throws - Throws if no items that match the predicate are emitted by the source Observable.\n */\nexport function last<T, D>(\n  predicate?: ((value: T, index: number, source: Observable<T>) => boolean) | null,\n  defaultValue?: D\n): OperatorFunction<T, T | D> {\n  const hasDefaultValue = arguments.length >= 2;\n  return (source: Observable<T>) =>\n    source.pipe(\n      predicate ? filter((v, i) => predicate(v, i, source)) : identity,\n      takeLast(1),\n      hasDefaultValue ? defaultIfEmpty(defaultValue!) : throwIfEmpty(() => new EmptyError())\n    );\n}\n","import { OperatorFunction } from '../types';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\n\nexport function map<T, R>(project: (value: T, index: number) => R): OperatorFunction<T, R>;\n/** @deprecated Use a closure instead of a `thisArg`. Signatures accepting a `thisArg` will be removed in v8. */\nexport function map<T, R, A>(project: (this: A, value: T, index: number) => R, thisArg: A): OperatorFunction<T, R>;\n\n/**\n * Applies a given `project` function to each value emitted by the source\n * Observable, and emits the resulting values as an Observable.\n *\n * <span class=\"informal\">Like [Array.prototype.map()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map),\n * it passes each source value through a transformation function to get\n * corresponding output values.</span>\n *\n * ![](map.png)\n *\n * Similar to the well known `Array.prototype.map` function, this operator\n * applies a projection to each value and emits that projection in the output\n * Observable.\n *\n * ## Example\n *\n * Map every click to the `clientX` position of that click\n *\n * ```ts\n * import { fromEvent, map } from 'rxjs';\n *\n * const clicks = fromEvent<PointerEvent>(document, 'click');\n * const positions = clicks.pipe(map(ev => ev.clientX));\n *\n * positions.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link mapTo}\n * @see {@link pluck}\n *\n * @param {function(value: T, index: number): R} project The function to apply\n * to each `value` emitted by the source Observable. The `index` parameter is\n * the number `i` for the i-th emission that has happened since the\n * subscription, starting from the number `0`.\n * @param {any} [thisArg] An optional argument to define what `this` is in the\n * `project` function.\n * @return A function that returns an Observable that emits the values from the\n * source Observable transformed by the given `project` function.\n */\nexport function map<T, R>(project: (value: T, index: number) => R, thisArg?: any): OperatorFunction<T, R> {\n  return operate((source, subscriber) => {\n    // The index of the value from the source. Used with projection.\n    let index = 0;\n    // Subscribe to the source, all errors and completions are sent along\n    // to the consumer.\n    source.subscribe(\n      createOperatorSubscriber(subscriber, (value: T) => {\n        // Call the projection function with the appropriate this context,\n        // and send the resulting value to the consumer.\n        subscriber.next(project.call(thisArg, value, index++));\n      })\n    );\n  });\n}\n","import { OperatorFunction } from '../types';\nimport { map } from './map';\n\n/** @deprecated To be removed in v9. Use {@link map} instead: `map(() => value)`. */\nexport function mapTo<R>(value: R): OperatorFunction<unknown, R>;\n/**\n * @deprecated Do not specify explicit type parameters. Signatures with type parameters\n * that cannot be inferred will be removed in v8. `mapTo` itself will be removed in v9,\n * use {@link map} instead: `map(() => value)`.\n * */\nexport function mapTo<T, R>(value: R): OperatorFunction<T, R>;\n\n/**\n * Emits the given constant value on the output Observable every time the source\n * Observable emits a value.\n *\n * <span class=\"informal\">Like {@link map}, but it maps every source value to\n * the same output value every time.</span>\n *\n * ![](mapTo.png)\n *\n * Takes a constant `value` as argument, and emits that whenever the source\n * Observable emits a value. In other words, ignores the actual source value,\n * and simply uses the emission moment to know when to emit the given `value`.\n *\n * ## Example\n *\n * Map every click to the string `'Hi'`\n *\n * ```ts\n * import { fromEvent, mapTo } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const greetings = clicks.pipe(mapTo('Hi'));\n *\n * greetings.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link map}\n *\n * @param value The value to map each source value to.\n * @return A function that returns an Observable that emits the given `value`\n * every time the source Observable emits.\n * @deprecated To be removed in v9. Use {@link map} instead: `map(() => value)`.\n */\nexport function mapTo<R>(value: R): OperatorFunction<unknown, R> {\n  return map(() => value);\n}\n","import { Notification } from '../Notification';\nimport { OperatorFunction, ObservableNotification } from '../types';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\n\n/**\n * Represents all of the notifications from the source Observable as `next`\n * emissions marked with their original types within {@link Notification}\n * objects.\n *\n * <span class=\"informal\">Wraps `next`, `error` and `complete` emissions in\n * {@link Notification} objects, emitted as `next` on the output Observable.\n * </span>\n *\n * ![](materialize.png)\n *\n * `materialize` returns an Observable that emits a `next` notification for each\n * `next`, `error`, or `complete` emission of the source Observable. When the\n * source Observable emits `complete`, the output Observable will emit `next` as\n * a Notification of type \"complete\", and then it will emit `complete` as well.\n * When the source Observable emits `error`, the output will emit `next` as a\n * Notification of type \"error\", and then `complete`.\n *\n * This operator is useful for producing metadata of the source Observable, to\n * be consumed as `next` emissions. Use it in conjunction with\n * {@link dematerialize}.\n *\n * ## Example\n *\n * Convert a faulty Observable to an Observable of Notifications\n *\n * ```ts\n * import { of, materialize, map } from 'rxjs';\n *\n * const letters = of('a', 'b', 13, 'd');\n * const upperCase = letters.pipe(map((x: any) => x.toUpperCase()));\n * const materialized = upperCase.pipe(materialize());\n *\n * materialized.subscribe(x => console.log(x));\n *\n * // Results in the following:\n * // - Notification { kind: 'N', value: 'A', error: undefined, hasValue: true }\n * // - Notification { kind: 'N', value: 'B', error: undefined, hasValue: true }\n * // - Notification { kind: 'E', value: undefined, error: TypeError { message: x.toUpperCase is not a function }, hasValue: false }\n * ```\n *\n * @see {@link Notification}\n * @see {@link dematerialize}\n *\n * @return A function that returns an Observable that emits\n * {@link Notification} objects that wrap the original emissions from the\n * source Observable with metadata.\n */\nexport function materialize<T>(): OperatorFunction<T, Notification<T> & ObservableNotification<T>> {\n  return operate((source, subscriber) => {\n    source.subscribe(\n      createOperatorSubscriber(\n        subscriber,\n        (value) => {\n          subscriber.next(Notification.createNext(value));\n        },\n        () => {\n          subscriber.next(Notification.createComplete());\n          subscriber.complete();\n        },\n        (err) => {\n          subscriber.next(Notification.createError(err));\n          subscriber.complete();\n        }\n      )\n    );\n  });\n}\n","import { reduce } from './reduce';\nimport { MonoTypeOperatorFunction } from '../types';\nimport { isFunction } from '../util/isFunction';\n\n/**\n * The Max operator operates on an Observable that emits numbers (or items that can be compared with a provided function),\n * and when source Observable completes it emits a single item: the item with the largest value.\n *\n * ![](max.png)\n *\n * ## Examples\n *\n * Get the maximal value of a series of numbers\n *\n * ```ts\n * import { of, max } from 'rxjs';\n *\n * of(5, 4, 7, 2, 8)\n *   .pipe(max())\n *   .subscribe(x => console.log(x));\n *\n * // Outputs\n * // 8\n * ```\n *\n * Use a comparer function to get the maximal item\n *\n * ```ts\n * import { of, max } from 'rxjs';\n *\n * of(\n *   { age: 7, name: 'Foo' },\n *   { age: 5, name: 'Bar' },\n *   { age: 9, name: 'Beer' }\n * ).pipe(\n *   max((a, b) => a.age < b.age ? -1 : 1)\n * )\n * .subscribe(x => console.log(x.name));\n *\n * // Outputs\n * // 'Beer'\n * ```\n *\n * @see {@link min}\n *\n * @param {Function} [comparer] - Optional comparer function that it will use instead of its default to compare the\n * value of two items.\n * @return A function that returns an Observable that emits item with the\n * largest value.\n */\nexport function max<T>(comparer?: (x: T, y: T) => number): MonoTypeOperatorFunction<T> {\n  return reduce(isFunction(comparer) ? (x, y) => (comparer(x, y) > 0 ? x : y) : (x, y) => (x > y ? x : y));\n}\n","import { ObservableInput, ObservableInputTuple, OperatorFunction, SchedulerLike } from '../types';\nimport { operate } from '../util/lift';\nimport { argsOrArgArray } from '../util/argsOrArgArray';\nimport { mergeAll } from './mergeAll';\nimport { popNumber, popScheduler } from '../util/args';\nimport { from } from '../observable/from';\n\n/** @deprecated Replaced with {@link mergeWith}. Will be removed in v8. */\nexport function merge<T, A extends readonly unknown[]>(...sources: [...ObservableInputTuple<A>]): OperatorFunction<T, T | A[number]>;\n/** @deprecated Replaced with {@link mergeWith}. Will be removed in v8. */\nexport function merge<T, A extends readonly unknown[]>(\n  ...sourcesAndConcurrency: [...ObservableInputTuple<A>, number]\n): OperatorFunction<T, T | A[number]>;\n/** @deprecated Replaced with {@link mergeWith}. Will be removed in v8. */\nexport function merge<T, A extends readonly unknown[]>(\n  ...sourcesAndScheduler: [...ObservableInputTuple<A>, SchedulerLike]\n): OperatorFunction<T, T | A[number]>;\n/** @deprecated Replaced with {@link mergeWith}. Will be removed in v8. */\nexport function merge<T, A extends readonly unknown[]>(\n  ...sourcesAndConcurrencyAndScheduler: [...ObservableInputTuple<A>, number, SchedulerLike]\n): OperatorFunction<T, T | A[number]>;\n\nexport function merge<T>(...args: unknown[]): OperatorFunction<T, unknown> {\n  const scheduler = popScheduler(args);\n  const concurrent = popNumber(args, Infinity);\n  args = argsOrArgArray(args);\n\n  return operate((source, subscriber) => {\n    mergeAll(concurrent)(from([source, ...(args as ObservableInput<T>[])], scheduler)).subscribe(subscriber);\n  });\n}\n","import { mergeMap } from './mergeMap';\nimport { identity } from '../util/identity';\nimport { OperatorFunction, ObservableInput, ObservedValueOf } from '../types';\n\n/**\n * Converts a higher-order Observable into a first-order Observable which\n * concurrently delivers all values that are emitted on the inner Observables.\n *\n * <span class=\"informal\">Flattens an Observable-of-Observables.</span>\n *\n * ![](mergeAll.png)\n *\n * `mergeAll` subscribes to an Observable that emits Observables, also known as\n * a higher-order Observable. Each time it observes one of these emitted inner\n * Observables, it subscribes to that and delivers all the values from the\n * inner Observable on the output Observable. The output Observable only\n * completes once all inner Observables have completed. Any error delivered by\n * a inner Observable will be immediately emitted on the output Observable.\n *\n * ## Examples\n *\n * Spawn a new interval Observable for each click event, and blend their outputs as one Observable\n *\n * ```ts\n * import { fromEvent, map, interval, mergeAll } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const higherOrder = clicks.pipe(map(() => interval(1000)));\n * const firstOrder = higherOrder.pipe(mergeAll());\n *\n * firstOrder.subscribe(x => console.log(x));\n * ```\n *\n * Count from 0 to 9 every second for each click, but only allow 2 concurrent timers\n *\n * ```ts\n * import { fromEvent, map, interval, take, mergeAll } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const higherOrder = clicks.pipe(\n *   map(() => interval(1000).pipe(take(10)))\n * );\n * const firstOrder = higherOrder.pipe(mergeAll(2));\n *\n * firstOrder.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link combineLatestAll}\n * @see {@link concatAll}\n * @see {@link exhaustAll}\n * @see {@link merge}\n * @see {@link mergeMap}\n * @see {@link mergeMapTo}\n * @see {@link mergeScan}\n * @see {@link switchAll}\n * @see {@link switchMap}\n * @see {@link zipAll}\n *\n * @param {number} [concurrent=Infinity] Maximum number of inner\n * Observables being subscribed to concurrently.\n * @return A function that returns an Observable that emits values coming from\n * all the inner Observables emitted by the source Observable.\n */\nexport function mergeAll<O extends ObservableInput<any>>(concurrent: number = Infinity): OperatorFunction<O, ObservedValueOf<O>> {\n  return mergeMap(identity, concurrent);\n}\n","import { Observable } from '../Observable';\nimport { innerFrom } from '../observable/innerFrom';\nimport { Subscriber } from '../Subscriber';\nimport { ObservableInput, SchedulerLike } from '../types';\nimport { executeSchedule } from '../util/executeSchedule';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\n\n/**\n * A process embodying the general \"merge\" strategy. This is used in\n * `mergeMap` and `mergeScan` because the logic is otherwise nearly identical.\n * @param source The original source observable\n * @param subscriber The consumer subscriber\n * @param project The projection function to get our inner sources\n * @param concurrent The number of concurrent inner subscriptions\n * @param onBeforeNext Additional logic to apply before nexting to our consumer\n * @param expand If `true` this will perform an \"expand\" strategy, which differs only\n * in that it recurses, and the inner subscription must be schedule-able.\n * @param innerSubScheduler A scheduler to use to schedule inner subscriptions,\n * this is to support the expand strategy, mostly, and should be deprecated\n */\nexport function mergeInternals<T, R>(\n  source: Observable<T>,\n  subscriber: Subscriber<R>,\n  project: (value: T, index: number) => ObservableInput<R>,\n  concurrent: number,\n  onBeforeNext?: (innerValue: R) => void,\n  expand?: boolean,\n  innerSubScheduler?: SchedulerLike,\n  additionalFinalizer?: () => void\n) {\n  // Buffered values, in the event of going over our concurrency limit\n  const buffer: T[] = [];\n  // The number of active inner subscriptions.\n  let active = 0;\n  // An index to pass to our accumulator function\n  let index = 0;\n  // Whether or not the outer source has completed.\n  let isComplete = false;\n\n  /**\n   * Checks to see if we can complete our result or not.\n   */\n  const checkComplete = () => {\n    // If the outer has completed, and nothing is left in the buffer,\n    // and we don't have any active inner subscriptions, then we can\n    // Emit the state and complete.\n    if (isComplete && !buffer.length && !active) {\n      subscriber.complete();\n    }\n  };\n\n  // If we're under our concurrency limit, just start the inner subscription, otherwise buffer and wait.\n  const outerNext = (value: T) => (active < concurrent ? doInnerSub(value) : buffer.push(value));\n\n  const doInnerSub = (value: T) => {\n    // If we're expanding, we need to emit the outer values and the inner values\n    // as the inners will \"become outers\" in a way as they are recursively fed\n    // back to the projection mechanism.\n    expand && subscriber.next(value as any);\n\n    // Increment the number of active subscriptions so we can track it\n    // against our concurrency limit later.\n    active++;\n\n    // A flag used to show that the inner observable completed.\n    // This is checked during finalization to see if we should\n    // move to the next item in the buffer, if there is on.\n    let innerComplete = false;\n\n    // Start our inner subscription.\n    innerFrom(project(value, index++)).subscribe(\n      createOperatorSubscriber(\n        subscriber,\n        (innerValue) => {\n          // `mergeScan` has additional handling here. For example\n          // taking the inner value and updating state.\n          onBeforeNext?.(innerValue);\n\n          if (expand) {\n            // If we're expanding, then just recurse back to our outer\n            // handler. It will emit the value first thing.\n            outerNext(innerValue as any);\n          } else {\n            // Otherwise, emit the inner value.\n            subscriber.next(innerValue);\n          }\n        },\n        () => {\n          // Flag that we have completed, so we know to check the buffer\n          // during finalization.\n          innerComplete = true;\n        },\n        // Errors are passed to the destination.\n        undefined,\n        () => {\n          // During finalization, if the inner completed (it wasn't errored or\n          // cancelled), then we want to try the next item in the buffer if\n          // there is one.\n          if (innerComplete) {\n            // We have to wrap this in a try/catch because it happens during\n            // finalization, possibly asynchronously, and we want to pass\n            // any errors that happen (like in a projection function) to\n            // the outer Subscriber.\n            try {\n              // INNER SOURCE COMPLETE\n              // Decrement the active count to ensure that the next time\n              // we try to call `doInnerSub`, the number is accurate.\n              active--;\n              // If we have more values in the buffer, try to process those\n              // Note that this call will increment `active` ahead of the\n              // next conditional, if there were any more inner subscriptions\n              // to start.\n              while (buffer.length && active < concurrent) {\n                const bufferedValue = buffer.shift()!;\n                // Particularly for `expand`, we need to check to see if a scheduler was provided\n                // for when we want to start our inner subscription. Otherwise, we just start\n                // are next inner subscription.\n                if (innerSubScheduler) {\n                  executeSchedule(subscriber, innerSubScheduler, () => doInnerSub(bufferedValue));\n                } else {\n                  doInnerSub(bufferedValue);\n                }\n              }\n              // Check to see if we can complete, and complete if so.\n              checkComplete();\n            } catch (err) {\n              subscriber.error(err);\n            }\n          }\n        }\n      )\n    );\n  };\n\n  // Subscribe to our source observable.\n  source.subscribe(\n    createOperatorSubscriber(subscriber, outerNext, () => {\n      // Outer completed, make a note of it, and check to see if we can complete everything.\n      isComplete = true;\n      checkComplete();\n    })\n  );\n\n  // Additional finalization (for when the destination is torn down).\n  // Other finalization is added implicitly via subscription above.\n  return () => {\n    additionalFinalizer?.();\n  };\n}\n","import { ObservableInput, OperatorFunction, ObservedValueOf } from '../types';\nimport { map } from './map';\nimport { innerFrom } from '../observable/innerFrom';\nimport { operate } from '../util/lift';\nimport { mergeInternals } from './mergeInternals';\nimport { isFunction } from '../util/isFunction';\n\n/* tslint:disable:max-line-length */\nexport function mergeMap<T, O extends ObservableInput<any>>(\n  project: (value: T, index: number) => O,\n  concurrent?: number\n): OperatorFunction<T, ObservedValueOf<O>>;\n/** @deprecated The `resultSelector` parameter will be removed in v8. Use an inner `map` instead. Details: https://rxjs.dev/deprecations/resultSelector */\nexport function mergeMap<T, O extends ObservableInput<any>>(\n  project: (value: T, index: number) => O,\n  resultSelector: undefined,\n  concurrent?: number\n): OperatorFunction<T, ObservedValueOf<O>>;\n/** @deprecated The `resultSelector` parameter will be removed in v8. Use an inner `map` instead. Details: https://rxjs.dev/deprecations/resultSelector */\nexport function mergeMap<T, R, O extends ObservableInput<any>>(\n  project: (value: T, index: number) => O,\n  resultSelector: (outerValue: T, innerValue: ObservedValueOf<O>, outerIndex: number, innerIndex: number) => R,\n  concurrent?: number\n): OperatorFunction<T, R>;\n/* tslint:enable:max-line-length */\n\n/**\n * Projects each source value to an Observable which is merged in the output\n * Observable.\n *\n * <span class=\"informal\">Maps each value to an Observable, then flattens all of\n * these inner Observables using {@link mergeAll}.</span>\n *\n * ![](mergeMap.png)\n *\n * Returns an Observable that emits items based on applying a function that you\n * supply to each item emitted by the source Observable, where that function\n * returns an Observable, and then merging those resulting Observables and\n * emitting the results of this merger.\n *\n * ## Example\n *\n * Map and flatten each letter to an Observable ticking every 1 second\n *\n * ```ts\n * import { of, mergeMap, interval, map } from 'rxjs';\n *\n * const letters = of('a', 'b', 'c');\n * const result = letters.pipe(\n *   mergeMap(x => interval(1000).pipe(map(i => x + i)))\n * );\n *\n * result.subscribe(x => console.log(x));\n *\n * // Results in the following:\n * // a0\n * // b0\n * // c0\n * // a1\n * // b1\n * // c1\n * // continues to list a, b, c every second with respective ascending integers\n * ```\n *\n * @see {@link concatMap}\n * @see {@link exhaustMap}\n * @see {@link merge}\n * @see {@link mergeAll}\n * @see {@link mergeMapTo}\n * @see {@link mergeScan}\n * @see {@link switchMap}\n *\n * @param {function(value: T, ?index: number): ObservableInput} project A function\n * that, when applied to an item emitted by the source Observable, returns an\n * Observable.\n * @param {number} [concurrent=Infinity] Maximum number of input\n * Observables being subscribed to concurrently.\n * @return A function that returns an Observable that emits the result of\n * applying the projection function (and the optional deprecated\n * `resultSelector`) to each item emitted by the source Observable and merging\n * the results of the Observables obtained from this transformation.\n */\nexport function mergeMap<T, R, O extends ObservableInput<any>>(\n  project: (value: T, index: number) => O,\n  resultSelector?: ((outerValue: T, innerValue: ObservedValueOf<O>, outerIndex: number, innerIndex: number) => R) | number,\n  concurrent: number = Infinity\n): OperatorFunction<T, ObservedValueOf<O> | R> {\n  if (isFunction(resultSelector)) {\n    // DEPRECATED PATH\n    return mergeMap((a, i) => map((b: any, ii: number) => resultSelector(a, b, i, ii))(innerFrom(project(a, i))), concurrent);\n  } else if (typeof resultSelector === 'number') {\n    concurrent = resultSelector;\n  }\n\n  return operate((source, subscriber) => mergeInternals(source, subscriber, project, concurrent));\n}\n","import { OperatorFunction, ObservedValueOf, ObservableInput } from '../types';\nimport { mergeMap } from './mergeMap';\nimport { isFunction } from '../util/isFunction';\n\n/** @deprecated Will be removed in v9. Use {@link mergeMap} instead: `mergeMap(() => result)` */\nexport function mergeMapTo<O extends ObservableInput<unknown>>(\n  innerObservable: O,\n  concurrent?: number\n): OperatorFunction<unknown, ObservedValueOf<O>>;\n/**\n * @deprecated The `resultSelector` parameter will be removed in v8. Use an inner `map` instead.\n * Details: https://rxjs.dev/deprecations/resultSelector\n */\nexport function mergeMapTo<T, R, O extends ObservableInput<unknown>>(\n  innerObservable: O,\n  resultSelector: (outerValue: T, innerValue: ObservedValueOf<O>, outerIndex: number, innerIndex: number) => R,\n  concurrent?: number\n): OperatorFunction<T, R>;\n/* tslint:enable:max-line-length */\n\n/**\n * Projects each source value to the same Observable which is merged multiple\n * times in the output Observable.\n *\n * <span class=\"informal\">It's like {@link mergeMap}, but maps each value always\n * to the same inner Observable.</span>\n *\n * ![](mergeMapTo.png)\n *\n * Maps each source value to the given Observable `innerObservable` regardless\n * of the source value, and then merges those resulting Observables into one\n * single Observable, which is the output Observable.\n *\n * ## Example\n *\n * For each click event, start an interval Observable ticking every 1 second\n *\n * ```ts\n * import { fromEvent, mergeMapTo, interval } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const result = clicks.pipe(mergeMapTo(interval(1000)));\n *\n * result.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link concatMapTo}\n * @see {@link merge}\n * @see {@link mergeAll}\n * @see {@link mergeMap}\n * @see {@link mergeScan}\n * @see {@link switchMapTo}\n *\n * @param {ObservableInput} innerObservable An Observable to replace each value from\n * the source Observable.\n * @param {number} [concurrent=Infinity] Maximum number of input\n * Observables being subscribed to concurrently.\n * @return A function that returns an Observable that emits items from the\n * given `innerObservable`.\n * @deprecated Will be removed in v9. Use {@link mergeMap} instead: `mergeMap(() => result)`\n */\nexport function mergeMapTo<T, R, O extends ObservableInput<unknown>>(\n  innerObservable: O,\n  resultSelector?: ((outerValue: T, innerValue: ObservedValueOf<O>, outerIndex: number, innerIndex: number) => R) | number,\n  concurrent: number = Infinity\n): OperatorFunction<T, ObservedValueOf<O> | R> {\n  if (isFunction(resultSelector)) {\n    return mergeMap(() => innerObservable, resultSelector, concurrent);\n  }\n  if (typeof resultSelector === 'number') {\n    concurrent = resultSelector;\n  }\n  return mergeMap(() => innerObservable, concurrent);\n}\n","import { ObservableInput, OperatorFunction } from '../types';\nimport { operate } from '../util/lift';\nimport { mergeInternals } from './mergeInternals';\n\n/**\n * Applies an accumulator function over the source Observable where the\n * accumulator function itself returns an Observable, then each intermediate\n * Observable returned is merged into the output Observable.\n *\n * <span class=\"informal\">It's like {@link scan}, but the Observables returned\n * by the accumulator are merged into the outer Observable.</span>\n *\n * The first parameter of the `mergeScan` is an `accumulator` function which is\n * being called every time the source Observable emits a value. `mergeScan` will\n * subscribe to the value returned by the `accumulator` function and will emit\n * values to the subscriber emitted by inner Observable.\n *\n * The `accumulator` function is being called with three parameters passed to it:\n * `acc`, `value` and `index`. The `acc` parameter is used as the state parameter\n * whose value is initially set to the `seed` parameter (the second parameter\n * passed to the `mergeScan` operator).\n *\n * `mergeScan` internally keeps the value of the `acc` parameter: as long as the\n * source Observable emits without inner Observable emitting, the `acc` will be\n * set to `seed`. The next time the inner Observable emits a value, `mergeScan`\n * will internally remember it and it will be passed to the `accumulator`\n * function as `acc` parameter the next time source emits.\n *\n * The `value` parameter of the `accumulator` function is the value emitted by the\n * source Observable, while the `index` is a number which represent the order of the\n * current emission by the source Observable. It starts with 0.\n *\n * The last parameter to the `mergeScan` is the `concurrent` value which defaults\n * to Infinity. It represents the maximum number of inner Observable subscriptions\n * at a time.\n *\n * ## Example\n *\n * Count the number of click events\n *\n * ```ts\n * import { fromEvent, map, mergeScan, of } from 'rxjs';\n *\n * const click$ = fromEvent(document, 'click');\n * const one$ = click$.pipe(map(() => 1));\n * const seed = 0;\n * const count$ = one$.pipe(\n *   mergeScan((acc, one) => of(acc + one), seed)\n * );\n *\n * count$.subscribe(x => console.log(x));\n *\n * // Results:\n * // 1\n * // 2\n * // 3\n * // 4\n * // ...and so on for each click\n * ```\n *\n * @see {@link scan}\n * @see {@link switchScan}\n *\n * @param {function(acc: R, value: T): Observable<R>} accumulator\n * The accumulator function called on each source value.\n * @param seed The initial accumulation value.\n * @param {number} [concurrent=Infinity] Maximum number of\n * input Observables being subscribed to concurrently.\n * @return A function that returns an Observable of the accumulated values.\n */\nexport function mergeScan<T, R>(\n  accumulator: (acc: R, value: T, index: number) => ObservableInput<R>,\n  seed: R,\n  concurrent = Infinity\n): OperatorFunction<T, R> {\n  return operate((source, subscriber) => {\n    // The accumulated state.\n    let state = seed;\n\n    return mergeInternals(\n      source,\n      subscriber,\n      (value, index) => accumulator(state, value, index),\n      concurrent,\n      (value) => {\n        state = value;\n      },\n      false,\n      undefined,\n      () => (state = null!)\n    );\n  });\n}\n","import { ObservableInputTuple, OperatorFunction } from '../types';\nimport { merge } from './merge';\n\n/**\n * Merge the values from all observables to a single observable result.\n *\n * Creates an observable, that when subscribed to, subscribes to the source\n * observable, and all other sources provided as arguments. All values from\n * every source are emitted from the resulting subscription.\n *\n * When all sources complete, the resulting observable will complete.\n *\n * When any source errors, the resulting observable will error.\n *\n * ## Example\n *\n * Joining all outputs from multiple user input event streams\n *\n * ```ts\n * import { fromEvent, map, mergeWith } from 'rxjs';\n *\n * const clicks$ = fromEvent(document, 'click').pipe(map(() => 'click'));\n * const mousemoves$ = fromEvent(document, 'mousemove').pipe(map(() => 'mousemove'));\n * const dblclicks$ = fromEvent(document, 'dblclick').pipe(map(() => 'dblclick'));\n *\n * mousemoves$\n *   .pipe(mergeWith(clicks$, dblclicks$))\n *   .subscribe(x => console.log(x));\n *\n * // result (assuming user interactions)\n * // 'mousemove'\n * // 'mousemove'\n * // 'mousemove'\n * // 'click'\n * // 'click'\n * // 'dblclick'\n * ```\n *\n * @see {@link merge}\n *\n * @param otherSources the sources to combine the current source with.\n * @return A function that returns an Observable that merges the values from\n * all given Observables.\n */\nexport function mergeWith<T, A extends readonly unknown[]>(\n  ...otherSources: [...ObservableInputTuple<A>]\n): OperatorFunction<T, T | A[number]> {\n  return merge(...otherSources);\n}\n","import { reduce } from './reduce';\nimport { MonoTypeOperatorFunction } from '../types';\nimport { isFunction } from '../util/isFunction';\n\n/**\n * The Min operator operates on an Observable that emits numbers (or items that can be compared with a provided function),\n * and when source Observable completes it emits a single item: the item with the smallest value.\n *\n * ![](min.png)\n *\n * ## Examples\n *\n * Get the minimal value of a series of numbers\n *\n * ```ts\n * import { of, min } from 'rxjs';\n *\n * of(5, 4, 7, 2, 8)\n *   .pipe(min())\n *   .subscribe(x => console.log(x));\n *\n * // Outputs\n * // 2\n * ```\n *\n * Use a comparer function to get the minimal item\n *\n * ```ts\n * import { of, min } from 'rxjs';\n *\n * of(\n *   { age: 7, name: 'Foo' },\n *   { age: 5, name: 'Bar' },\n *   { age: 9, name: 'Beer' }\n * ).pipe(\n *   min((a, b) => a.age < b.age ? -1 : 1)\n * )\n * .subscribe(x => console.log(x.name));\n *\n * // Outputs\n * // 'Bar'\n * ```\n *\n * @see {@link max}\n *\n * @param {Function} [comparer] - Optional comparer function that it will use instead of its default to compare the\n * value of two items.\n * @return A function that returns an Observable that emits item with the\n * smallest value.\n */\nexport function min<T>(comparer?: (x: T, y: T) => number): MonoTypeOperatorFunction<T> {\n  return reduce(isFunction(comparer) ? (x, y) => (comparer(x, y) < 0 ? x : y) : (x, y) => (x < y ? x : y));\n}\n","import { Subject } from '../Subject';\nimport { Observable } from '../Observable';\nimport { ConnectableObservable } from '../observable/ConnectableObservable';\nimport { OperatorFunction, UnaryFunction, ObservedValueOf, ObservableInput } from '../types';\nimport { isFunction } from '../util/isFunction';\nimport { connect } from './connect';\n\n/**\n * An operator that creates a {@link ConnectableObservable}, that when connected,\n * with the `connect` method, will use the provided subject to multicast the values\n * from the source to all consumers.\n *\n * @param subject The subject to multicast through.\n * @return A function that returns a {@link ConnectableObservable}\n * @deprecated Will be removed in v8. To create a connectable observable, use {@link connectable}.\n * If you're using {@link refCount} after `multicast`, use the {@link share} operator instead.\n * `multicast(subject), refCount()` is equivalent to\n * `share({ connector: () => subject, resetOnError: false, resetOnComplete: false, resetOnRefCountZero: false })`.\n * Details: https://rxjs.dev/deprecations/multicasting\n */\nexport function multicast<T>(subject: Subject<T>): UnaryFunction<Observable<T>, ConnectableObservable<T>>;\n\n/**\n * Because this is deprecated in favor of the {@link connect} operator, and was otherwise poorly documented,\n * rather than duplicate the effort of documenting the same behavior, please see documentation for the\n * {@link connect} operator.\n *\n * @param subject The subject used to multicast.\n * @param selector A setup function to setup the multicast\n * @return A function that returns an observable that mirrors the observable returned by the selector.\n * @deprecated Will be removed in v8. Use the {@link connect} operator instead.\n * `multicast(subject, selector)` is equivalent to\n * `connect(selector, { connector: () => subject })`.\n * Details: https://rxjs.dev/deprecations/multicasting\n */\nexport function multicast<T, O extends ObservableInput<any>>(\n  subject: Subject<T>,\n  selector: (shared: Observable<T>) => O\n): OperatorFunction<T, ObservedValueOf<O>>;\n\n/**\n * An operator that creates a {@link ConnectableObservable}, that when connected,\n * with the `connect` method, will use the provided subject to multicast the values\n * from the source to all consumers.\n *\n * @param subjectFactory A factory that will be called to create the subject. Passing a function here\n * will cause the underlying subject to be \"reset\" on error, completion, or refCounted unsubscription of\n * the source.\n * @return A function that returns a {@link ConnectableObservable}\n * @deprecated Will be removed in v8. To create a connectable observable, use {@link connectable}.\n * If you're using {@link refCount} after `multicast`, use the {@link share} operator instead.\n * `multicast(() => new BehaviorSubject('test')), refCount()` is equivalent to\n * `share({ connector: () => new BehaviorSubject('test') })`.\n * Details: https://rxjs.dev/deprecations/multicasting\n */\nexport function multicast<T>(subjectFactory: () => Subject<T>): UnaryFunction<Observable<T>, ConnectableObservable<T>>;\n\n/**\n * Because this is deprecated in favor of the {@link connect} operator, and was otherwise poorly documented,\n * rather than duplicate the effort of documenting the same behavior, please see documentation for the\n * {@link connect} operator.\n *\n * @param subjectFactory A factory that creates the subject used to multicast.\n * @param selector A function to setup the multicast and select the output.\n * @return A function that returns an observable that mirrors the observable returned by the selector.\n * @deprecated Will be removed in v8. Use the {@link connect} operator instead.\n * `multicast(subjectFactory, selector)` is equivalent to\n * `connect(selector, { connector: subjectFactory })`.\n * Details: https://rxjs.dev/deprecations/multicasting\n */\nexport function multicast<T, O extends ObservableInput<any>>(\n  subjectFactory: () => Subject<T>,\n  selector: (shared: Observable<T>) => O\n): OperatorFunction<T, ObservedValueOf<O>>;\n\n/**\n * @deprecated Will be removed in v8. Use the {@link connectable} observable, the {@link connect} operator or the\n * {@link share} operator instead. See the overloads below for equivalent replacement examples of this operator's\n * behaviors.\n * Details: https://rxjs.dev/deprecations/multicasting\n */\nexport function multicast<T, R>(\n  subjectOrSubjectFactory: Subject<T> | (() => Subject<T>),\n  selector?: (source: Observable<T>) => Observable<R>\n): OperatorFunction<T, R> {\n  const subjectFactory = isFunction(subjectOrSubjectFactory) ? subjectOrSubjectFactory : () => subjectOrSubjectFactory;\n\n  if (isFunction(selector)) {\n    // If a selector function is provided, then we're a \"normal\" operator that isn't\n    // going to return a ConnectableObservable. We can use `connect` to do what we\n    // need to do.\n    return connect(selector, {\n      connector: subjectFactory,\n    });\n  }\n\n  return (source: Observable<T>) => new ConnectableObservable<any>(source, subjectFactory);\n}\n","/** @prettier */\nimport { MonoTypeOperatorFunction, SchedulerLike } from '../types';\nimport { executeSchedule } from '../util/executeSchedule';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\n\n/**\n * Re-emits all notifications from source Observable with specified scheduler.\n *\n * <span class=\"informal\">Ensure a specific scheduler is used, from outside of an Observable.</span>\n *\n * `observeOn` is an operator that accepts a scheduler as a first parameter, which will be used to reschedule\n * notifications emitted by the source Observable. It might be useful, if you do not have control over\n * internal scheduler of a given Observable, but want to control when its values are emitted nevertheless.\n *\n * Returned Observable emits the same notifications (nexted values, complete and error events) as the source Observable,\n * but rescheduled with provided scheduler. Note that this doesn't mean that source Observables internal\n * scheduler will be replaced in any way. Original scheduler still will be used, but when the source Observable emits\n * notification, it will be immediately scheduled again - this time with scheduler passed to `observeOn`.\n * An anti-pattern would be calling `observeOn` on Observable that emits lots of values synchronously, to split\n * that emissions into asynchronous chunks. For this to happen, scheduler would have to be passed into the source\n * Observable directly (usually into the operator that creates it). `observeOn` simply delays notifications a\n * little bit more, to ensure that they are emitted at expected moments.\n *\n * As a matter of fact, `observeOn` accepts second parameter, which specifies in milliseconds with what delay notifications\n * will be emitted. The main difference between {@link delay} operator and `observeOn` is that `observeOn`\n * will delay all notifications - including error notifications - while `delay` will pass through error\n * from source Observable immediately when it is emitted. In general it is highly recommended to use `delay` operator\n * for any kind of delaying of values in the stream, while using `observeOn` to specify which scheduler should be used\n * for notification emissions in general.\n *\n * ## Example\n *\n * Ensure values in subscribe are called just before browser repaint\n *\n * ```ts\n * import { interval, observeOn, animationFrameScheduler } from 'rxjs';\n *\n * const someDiv = document.createElement('div');\n * someDiv.style.cssText = 'width: 200px;background: #09c';\n * document.body.appendChild(someDiv);\n * const intervals = interval(10);      // Intervals are scheduled\n *                                      // with async scheduler by default...\n * intervals.pipe(\n *   observeOn(animationFrameScheduler) // ...but we will observe on animationFrame\n * )                                    // scheduler to ensure smooth animation.\n * .subscribe(val => {\n *   someDiv.style.height = val + 'px';\n * });\n * ```\n *\n * @see {@link delay}\n *\n * @param scheduler Scheduler that will be used to reschedule notifications from source Observable.\n * @param delay Number of milliseconds that states with what delay every notification should be rescheduled.\n * @return A function that returns an Observable that emits the same\n * notifications as the source Observable, but with provided scheduler.\n */\nexport function observeOn<T>(scheduler: SchedulerLike, delay = 0): MonoTypeOperatorFunction<T> {\n  return operate((source, subscriber) => {\n    source.subscribe(\n      createOperatorSubscriber(\n        subscriber,\n        (value) => executeSchedule(subscriber, scheduler, () => subscriber.next(value), delay),\n        () => executeSchedule(subscriber, scheduler, () => subscriber.complete(), delay),\n        (err) => executeSchedule(subscriber, scheduler, () => subscriber.error(err), delay)\n      )\n    );\n  });\n}\n","import { Observable } from '../Observable';\nimport { ObservableInputTuple, OperatorFunction } from '../types';\nimport { operate } from '../util/lift';\nimport { innerFrom } from '../observable/innerFrom';\nimport { argsOrArgArray } from '../util/argsOrArgArray';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nimport { noop } from '../util/noop';\n\nexport function onErrorResumeNext<T, A extends readonly unknown[]>(\n  sources: [...ObservableInputTuple<A>]\n): OperatorFunction<T, T | A[number]>;\nexport function onErrorResumeNext<T, A extends readonly unknown[]>(\n  ...sources: [...ObservableInputTuple<A>]\n): OperatorFunction<T, T | A[number]>;\n\n/**\n * When any of the provided Observable emits an complete or error notification, it immediately subscribes to the next one\n * that was passed.\n *\n * <span class=\"informal\">Execute series of Observables, subscribes to next one on error or complete.</span>\n *\n * ![](onErrorResumeNext.png)\n *\n * `onErrorResumeNext` is an operator that accepts a series of Observables, provided either directly as\n * arguments or as an array. If no single Observable is provided, returned Observable will simply behave the same\n * as the source.\n *\n * `onErrorResumeNext` returns an Observable that starts by subscribing and re-emitting values from the source Observable.\n * When its stream of values ends - no matter if Observable completed or emitted an error - `onErrorResumeNext`\n * will subscribe to the first Observable that was passed as an argument to the method. It will start re-emitting\n * its values as well and - again - when that stream ends, `onErrorResumeNext` will proceed to subscribing yet another\n * Observable in provided series, no matter if previous Observable completed or ended with an error. This will\n * be happening until there is no more Observables left in the series, at which point returned Observable will\n * complete - even if the last subscribed stream ended with an error.\n *\n * `onErrorResumeNext` can be therefore thought of as version of {@link concat} operator, which is more permissive\n * when it comes to the errors emitted by its input Observables. While `concat` subscribes to the next Observable\n * in series only if previous one successfully completed, `onErrorResumeNext` subscribes even if it ended with\n * an error.\n *\n * Note that you do not get any access to errors emitted by the Observables. In particular do not\n * expect these errors to appear in error callback passed to {@link Observable#subscribe}. If you want to take\n * specific actions based on what error was emitted by an Observable, you should try out {@link catchError} instead.\n *\n *\n * ## Example\n *\n * Subscribe to the next Observable after map fails\n *\n * ```ts\n * import { of, onErrorResumeNext, map } from 'rxjs';\n *\n * of(1, 2, 3, 0)\n *   .pipe(\n *     map(x => {\n *       if (x === 0) {\n *         throw Error();\n *       }\n *\n *       return 10 / x;\n *     }),\n *     onErrorResumeNext(of(1, 2, 3))\n *   )\n *   .subscribe({\n *     next: val => console.log(val),\n *     error: err => console.log(err),          // Will never be called.\n *     complete: () => console.log('that\\'s it!')\n *   });\n *\n * // Logs:\n * // 10\n * // 5\n * // 3.3333333333333335\n * // 1\n * // 2\n * // 3\n * // 'that's it!'\n * ```\n *\n * @see {@link concat}\n * @see {@link catchError}\n *\n * @param {...ObservableInput} sources Observables passed either directly or as an array.\n * @return A function that returns an Observable that emits values from source\n * Observable, but - if it errors - subscribes to the next passed Observable\n * and so on, until it completes or runs out of Observables.\n */\nexport function onErrorResumeNext<T, A extends readonly unknown[]>(\n  ...sources: [[...ObservableInputTuple<A>]] | [...ObservableInputTuple<A>]\n): OperatorFunction<T, T | A[number]> {\n  // For some reason, TS 4.1 RC gets the inference wrong here and infers the\n  // result to be `A[number][]` - completely dropping the ObservableInput part\n  // of the type. This makes no sense whatsoever. As a workaround, the type is\n  // asserted explicitly.\n  const nextSources = argsOrArgArray(sources) as unknown as ObservableInputTuple<A>;\n\n  return operate((source, subscriber) => {\n    const remaining = [source, ...nextSources];\n    const subscribeNext = () => {\n      if (!subscriber.closed) {\n        if (remaining.length > 0) {\n          let nextSource: Observable<A[number]>;\n          try {\n            nextSource = innerFrom(remaining.shift()!);\n          } catch (err) {\n            subscribeNext();\n            return;\n          }\n\n          // Here we have to use one of our Subscribers, or it does not wire up\n          // The `closed` property of upstream Subscribers synchronously, that\n          // would result in situation were we could not stop a synchronous firehose\n          // with something like `take(3)`.\n          const innerSub = createOperatorSubscriber(subscriber, undefined, noop, noop);\n          nextSource.subscribe(innerSub);\n          innerSub.add(subscribeNext);\n        } else {\n          subscriber.complete();\n        }\n      }\n    };\n\n    subscribeNext();\n  });\n}\n","import { OperatorFunction } from '../types';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\n\n/**\n * Groups pairs of consecutive emissions together and emits them as an array of\n * two values.\n *\n * <span class=\"informal\">Puts the current value and previous value together as\n * an array, and emits that.</span>\n *\n * ![](pairwise.png)\n *\n * The Nth emission from the source Observable will cause the output Observable\n * to emit an array [(N-1)th, Nth] of the previous and the current value, as a\n * pair. For this reason, `pairwise` emits on the second and subsequent\n * emissions from the source Observable, but not on the first emission, because\n * there is no previous value in that case.\n *\n * ## Example\n *\n * On every click (starting from the second), emit the relative distance to the previous click\n *\n * ```ts\n * import { fromEvent, pairwise, map } from 'rxjs';\n *\n * const clicks = fromEvent<PointerEvent>(document, 'click');\n * const pairs = clicks.pipe(pairwise());\n * const distance = pairs.pipe(\n *   map(([first, second]) => {\n *     const x0 = first.clientX;\n *     const y0 = first.clientY;\n *     const x1 = second.clientX;\n *     const y1 = second.clientY;\n *     return Math.sqrt(Math.pow(x0 - x1, 2) + Math.pow(y0 - y1, 2));\n *   })\n * );\n *\n * distance.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link buffer}\n * @see {@link bufferCount}\n *\n * @return A function that returns an Observable of pairs (as arrays) of\n * consecutive values from the source Observable.\n */\nexport function pairwise<T>(): OperatorFunction<T, [T, T]> {\n  return operate((source, subscriber) => {\n    let prev: T;\n    let hasPrev = false;\n    source.subscribe(\n      createOperatorSubscriber(subscriber, (value) => {\n        const p = prev;\n        prev = value;\n        hasPrev && subscriber.next([p, value]);\n        hasPrev = true;\n      })\n    );\n  });\n}\n","import { map } from './map';\nimport { OperatorFunction } from '../types';\n\n/* tslint:disable:max-line-length */\n/** @deprecated Use {@link map} and optional chaining: `pluck('foo', 'bar')` is `map(x => x?.foo?.bar)`. Will be removed in v8. */\nexport function pluck<T, K1 extends keyof T>(k1: K1): OperatorFunction<T, T[K1]>;\n/** @deprecated Use {@link map} and optional chaining: `pluck('foo', 'bar')` is `map(x => x?.foo?.bar)`. Will be removed in v8. */\nexport function pluck<T, K1 extends keyof T, K2 extends keyof T[K1]>(k1: K1, k2: K2): OperatorFunction<T, T[K1][K2]>;\n/** @deprecated Use {@link map} and optional chaining: `pluck('foo', 'bar')` is `map(x => x?.foo?.bar)`. Will be removed in v8. */\nexport function pluck<T, K1 extends keyof T, K2 extends keyof T[K1], K3 extends keyof T[K1][K2]>(\n  k1: K1,\n  k2: K2,\n  k3: K3\n): OperatorFunction<T, T[K1][K2][K3]>;\n/** @deprecated Use {@link map} and optional chaining: `pluck('foo', 'bar')` is `map(x => x?.foo?.bar)`. Will be removed in v8. */\nexport function pluck<T, K1 extends keyof T, K2 extends keyof T[K1], K3 extends keyof T[K1][K2], K4 extends keyof T[K1][K2][K3]>(\n  k1: K1,\n  k2: K2,\n  k3: K3,\n  k4: K4\n): OperatorFunction<T, T[K1][K2][K3][K4]>;\n/** @deprecated Use {@link map} and optional chaining: `pluck('foo', 'bar')` is `map(x => x?.foo?.bar)`. Will be removed in v8. */\nexport function pluck<\n  T,\n  K1 extends keyof T,\n  K2 extends keyof T[K1],\n  K3 extends keyof T[K1][K2],\n  K4 extends keyof T[K1][K2][K3],\n  K5 extends keyof T[K1][K2][K3][K4]\n>(k1: K1, k2: K2, k3: K3, k4: K4, k5: K5): OperatorFunction<T, T[K1][K2][K3][K4][K5]>;\n/** @deprecated Use {@link map} and optional chaining: `pluck('foo', 'bar')` is `map(x => x?.foo?.bar)`. Will be removed in v8. */\nexport function pluck<\n  T,\n  K1 extends keyof T,\n  K2 extends keyof T[K1],\n  K3 extends keyof T[K1][K2],\n  K4 extends keyof T[K1][K2][K3],\n  K5 extends keyof T[K1][K2][K3][K4],\n  K6 extends keyof T[K1][K2][K3][K4][K5]\n>(k1: K1, k2: K2, k3: K3, k4: K4, k5: K5, k6: K6): OperatorFunction<T, T[K1][K2][K3][K4][K5][K6]>;\n/** @deprecated Use {@link map} and optional chaining: `pluck('foo', 'bar')` is `map(x => x?.foo?.bar)`. Will be removed in v8. */\nexport function pluck<\n  T,\n  K1 extends keyof T,\n  K2 extends keyof T[K1],\n  K3 extends keyof T[K1][K2],\n  K4 extends keyof T[K1][K2][K3],\n  K5 extends keyof T[K1][K2][K3][K4],\n  K6 extends keyof T[K1][K2][K3][K4][K5]\n>(k1: K1, k2: K2, k3: K3, k4: K4, k5: K5, k6: K6, ...rest: string[]): OperatorFunction<T, unknown>;\n/** @deprecated Use {@link map} and optional chaining: `pluck('foo', 'bar')` is `map(x => x?.foo?.bar)`. Will be removed in v8. */\nexport function pluck<T>(...properties: string[]): OperatorFunction<T, unknown>;\n/* tslint:enable:max-line-length */\n\n/**\n * Maps each source value to its specified nested property.\n *\n * <span class=\"informal\">Like {@link map}, but meant only for picking one of\n * the nested properties of every emitted value.</span>\n *\n * ![](pluck.png)\n *\n * Given a list of strings or numbers describing a path to a property, retrieves\n * the value of a specified nested property from all values in the source\n * Observable. If a property can't be resolved, it will return `undefined` for\n * that value.\n *\n * ## Example\n *\n * Map every click to the tagName of the clicked target element\n *\n * ```ts\n * import { fromEvent, pluck } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const tagNames = clicks.pipe(pluck('target', 'tagName'));\n *\n * tagNames.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link map}\n *\n * @param properties The nested properties to pluck from each source\n * value.\n * @return A function that returns an Observable of property values from the\n * source values.\n * @deprecated Use {@link map} and optional chaining: `pluck('foo', 'bar')` is `map(x => x?.foo?.bar)`. Will be removed in v8.\n */\nexport function pluck<T, R>(...properties: Array<string | number | symbol>): OperatorFunction<T, R> {\n  const length = properties.length;\n  if (length === 0) {\n    throw new Error('list of properties cannot be empty.');\n  }\n  return map((x) => {\n    let currentProp: any = x;\n    for (let i = 0; i < length; i++) {\n      const p = currentProp?.[properties[i]];\n      if (typeof p !== 'undefined') {\n        currentProp = p;\n      } else {\n        return undefined;\n      }\n    }\n    return currentProp;\n  });\n}\n","import { Observable } from '../Observable';\nimport { Subject } from '../Subject';\nimport { multicast } from './multicast';\nimport { ConnectableObservable } from '../observable/ConnectableObservable';\nimport { MonoTypeOperatorFunction, OperatorFunction, UnaryFunction, ObservableInput, ObservedValueOf } from '../types';\nimport { connect } from './connect';\n\n/**\n * Returns a connectable observable that, when connected, will multicast\n * all values through a single underlying {@link Subject} instance.\n *\n * @deprecated Will be removed in v8. To create a connectable observable, use {@link connectable}.\n * `source.pipe(publish())` is equivalent to\n * `connectable(source, { connector: () => new Subject(), resetOnDisconnect: false })`.\n * If you're using {@link refCount} after `publish`, use {@link share} operator instead.\n * `source.pipe(publish(), refCount())` is equivalent to\n * `source.pipe(share({ resetOnError: false, resetOnComplete: false, resetOnRefCountZero: false }))`.\n * Details: https://rxjs.dev/deprecations/multicasting\n */\nexport function publish<T>(): UnaryFunction<Observable<T>, ConnectableObservable<T>>;\n\n/**\n * Returns an observable, that when subscribed to, creates an underlying {@link Subject},\n * provides an observable view of it to a `selector` function, takes the observable result of\n * that selector function and subscribes to it, sending its values to the consumer, _then_ connects\n * the subject to the original source.\n *\n * @param selector A function used to setup multicasting prior to automatic connection.\n *\n * @deprecated Will be removed in v8. Use the {@link connect} operator instead.\n * `publish(selector)` is equivalent to `connect(selector)`.\n * Details: https://rxjs.dev/deprecations/multicasting\n */\nexport function publish<T, O extends ObservableInput<any>>(selector: (shared: Observable<T>) => O): OperatorFunction<T, ObservedValueOf<O>>;\n\n/**\n * Returns a ConnectableObservable, which is a variety of Observable that waits until its connect method is called\n * before it begins emitting items to those Observers that have subscribed to it.\n *\n * <span class=\"informal\">Makes a cold Observable hot</span>\n *\n * ![](publish.png)\n *\n * ## Examples\n *\n * Make `source$` hot by applying `publish` operator, then merge each inner observable into a single one\n * and subscribe\n *\n * ```ts\n * import { zip, interval, of, map, publish, merge, tap } from 'rxjs';\n *\n * const source$ = zip(interval(2000), of(1, 2, 3, 4, 5, 6, 7, 8, 9))\n *   .pipe(map(([, number]) => number));\n *\n * source$\n *   .pipe(\n *     publish(multicasted$ =>\n *       merge(\n *         multicasted$.pipe(tap(x => console.log('Stream 1:', x))),\n *         multicasted$.pipe(tap(x => console.log('Stream 2:', x))),\n *         multicasted$.pipe(tap(x => console.log('Stream 3:', x)))\n *       )\n *     )\n *   )\n *   .subscribe();\n *\n * // Results every two seconds\n * // Stream 1: 1\n * // Stream 2: 1\n * // Stream 3: 1\n * // ...\n * // Stream 1: 9\n * // Stream 2: 9\n * // Stream 3: 9\n * ```\n *\n * @see {@link publishLast}\n * @see {@link publishReplay}\n * @see {@link publishBehavior}\n *\n * @param {Function} [selector] - Optional selector function which can use the multicasted source sequence as many times\n * as needed, without causing multiple subscriptions to the source sequence.\n * Subscribers to the given source will receive all notifications of the source from the time of the subscription on.\n * @return A function that returns a ConnectableObservable that upon connection\n * causes the source Observable to emit items to its Observers.\n * @deprecated Will be removed in v8. Use the {@link connectable} observable, the {@link connect} operator or the\n * {@link share} operator instead. See the overloads below for equivalent replacement examples of this operator's\n * behaviors.\n * Details: https://rxjs.dev/deprecations/multicasting\n */\nexport function publish<T, R>(selector?: OperatorFunction<T, R>): MonoTypeOperatorFunction<T> | OperatorFunction<T, R> {\n  return selector ? (source) => connect(selector)(source) : (source) => multicast(new Subject<T>())(source);\n}\n","import { Observable } from '../Observable';\nimport { BehaviorSubject } from '../BehaviorSubject';\nimport { ConnectableObservable } from '../observable/ConnectableObservable';\nimport { UnaryFunction } from '../types';\n\n/**\n * Creates a {@link ConnectableObservable} that utilizes a {@link BehaviorSubject}.\n *\n * @param initialValue The initial value passed to the {@link BehaviorSubject}.\n * @return A function that returns a {@link ConnectableObservable}\n * @deprecated Will be removed in v8. To create a connectable observable that uses a\n * {@link BehaviorSubject} under the hood, use {@link connectable}.\n * `source.pipe(publishBehavior(initValue))` is equivalent to\n * `connectable(source, { connector: () => new BehaviorSubject(initValue), resetOnDisconnect: false })`.\n * If you're using {@link refCount} after `publishBehavior`, use the {@link share} operator instead.\n * `source.pipe(publishBehavior(initValue), refCount())` is equivalent to\n * `source.pipe(share({ connector: () => new BehaviorSubject(initValue), resetOnError: false, resetOnComplete: false, resetOnRefCountZero: false  }))`.\n * Details: https://rxjs.dev/deprecations/multicasting\n */\nexport function publishBehavior<T>(initialValue: T): UnaryFunction<Observable<T>, ConnectableObservable<T>> {\n  // Note that this has *never* supported the selector function.\n  return (source) => {\n    const subject = new BehaviorSubject<T>(initialValue);\n    return new ConnectableObservable(source, () => subject);\n  };\n}\n","import { Observable } from '../Observable';\nimport { AsyncSubject } from '../AsyncSubject';\nimport { ConnectableObservable } from '../observable/ConnectableObservable';\nimport { UnaryFunction } from '../types';\n\n/**\n * Returns a connectable observable sequence that shares a single subscription to the\n * underlying sequence containing only the last notification.\n *\n * ![](publishLast.png)\n *\n * Similar to {@link publish}, but it waits until the source observable completes and stores\n * the last emitted value.\n * Similarly to {@link publishReplay} and {@link publishBehavior}, this keeps storing the last\n * value even if it has no more subscribers. If subsequent subscriptions happen, they will\n * immediately get that last stored value and complete.\n *\n * ## Example\n *\n * ```ts\n * import { ConnectableObservable, interval, publishLast, tap, take } from 'rxjs';\n *\n * const connectable = <ConnectableObservable<number>>interval(1000)\n *   .pipe(\n *     tap(x => console.log('side effect', x)),\n *     take(3),\n *     publishLast()\n *   );\n *\n * connectable.subscribe({\n *   next: x => console.log('Sub. A', x),\n *   error: err => console.log('Sub. A Error', err),\n *   complete: () => console.log('Sub. A Complete')\n * });\n *\n * connectable.subscribe({\n *   next: x => console.log('Sub. B', x),\n *   error: err => console.log('Sub. B Error', err),\n *   complete: () => console.log('Sub. B Complete')\n * });\n *\n * connectable.connect();\n *\n * // Results:\n * // 'side effect 0'   - after one second\n * // 'side effect 1'   - after two seconds\n * // 'side effect 2'   - after three seconds\n * // 'Sub. A 2'        - immediately after 'side effect 2'\n * // 'Sub. B 2'\n * // 'Sub. A Complete'\n * // 'Sub. B Complete'\n * ```\n *\n * @see {@link ConnectableObservable}\n * @see {@link publish}\n * @see {@link publishReplay}\n * @see {@link publishBehavior}\n *\n * @return A function that returns an Observable that emits elements of a\n * sequence produced by multicasting the source sequence.\n * @deprecated Will be removed in v8. To create a connectable observable with an\n * {@link AsyncSubject} under the hood, use {@link connectable}.\n * `source.pipe(publishLast())` is equivalent to\n * `connectable(source, { connector: () => new AsyncSubject(), resetOnDisconnect: false })`.\n * If you're using {@link refCount} after `publishLast`, use the {@link share} operator instead.\n * `source.pipe(publishLast(), refCount())` is equivalent to\n * `source.pipe(share({ connector: () => new AsyncSubject(), resetOnError: false, resetOnComplete: false, resetOnRefCountZero: false }))`.\n * Details: https://rxjs.dev/deprecations/multicasting\n */\nexport function publishLast<T>(): UnaryFunction<Observable<T>, ConnectableObservable<T>> {\n  // Note that this has *never* supported a selector function like `publish` and `publishReplay`.\n  return (source) => {\n    const subject = new AsyncSubject<T>();\n    return new ConnectableObservable(source, () => subject);\n  };\n}\n","import { Observable } from '../Observable';\nimport { ReplaySubject } from '../ReplaySubject';\nimport { multicast } from './multicast';\nimport { MonoTypeOperatorFunction, OperatorFunction, TimestampProvider, ObservableInput, ObservedValueOf } from '../types';\nimport { isFunction } from '../util/isFunction';\n\n/**\n * Creates a {@link ConnectableObservable} that uses a {@link ReplaySubject}\n * internally.\n *\n * @param bufferSize The buffer size for the underlying {@link ReplaySubject}.\n * @param windowTime The window time for the underlying {@link ReplaySubject}.\n * @param timestampProvider The timestamp provider for the underlying {@link ReplaySubject}.\n * @deprecated Will be removed in v8. To create a connectable observable that uses a\n * {@link ReplaySubject} under the hood, use {@link connectable}.\n * `source.pipe(publishReplay(size, time, scheduler))` is equivalent to\n * `connectable(source, { connector: () => new ReplaySubject(size, time, scheduler), resetOnDisconnect: false })`.\n * If you're using {@link refCount} after `publishReplay`, use the {@link share} operator instead.\n * `publishReplay(size, time, scheduler), refCount()` is equivalent to\n * `share({ connector: () => new ReplaySubject(size, time, scheduler), resetOnError: false, resetOnComplete: false, resetOnRefCountZero: false })`.\n * Details: https://rxjs.dev/deprecations/multicasting\n */\nexport function publishReplay<T>(\n  bufferSize?: number,\n  windowTime?: number,\n  timestampProvider?: TimestampProvider\n): MonoTypeOperatorFunction<T>;\n\n/**\n * Creates an observable, that when subscribed to, will create a {@link ReplaySubject},\n * and pass an observable from it (using [asObservable](api/index/class/Subject#asObservable)) to\n * the `selector` function, which then returns an observable that is subscribed to before\n * \"connecting\" the source to the internal `ReplaySubject`.\n *\n * Since this is deprecated, for additional details see the documentation for {@link connect}.\n *\n * @param bufferSize The buffer size for the underlying {@link ReplaySubject}.\n * @param windowTime The window time for the underlying {@link ReplaySubject}.\n * @param selector A function used to setup the multicast.\n * @param timestampProvider The timestamp provider for the underlying {@link ReplaySubject}.\n * @deprecated Will be removed in v8. Use the {@link connect} operator instead.\n * `source.pipe(publishReplay(size, window, selector, scheduler))` is equivalent to\n * `source.pipe(connect(selector, { connector: () => new ReplaySubject(size, window, scheduler) }))`.\n * Details: https://rxjs.dev/deprecations/multicasting\n */\nexport function publishReplay<T, O extends ObservableInput<any>>(\n  bufferSize: number | undefined,\n  windowTime: number | undefined,\n  selector: (shared: Observable<T>) => O,\n  timestampProvider?: TimestampProvider\n): OperatorFunction<T, ObservedValueOf<O>>;\n\n/**\n * Creates a {@link ConnectableObservable} that uses a {@link ReplaySubject}\n * internally.\n *\n * @param bufferSize The buffer size for the underlying {@link ReplaySubject}.\n * @param windowTime The window time for the underlying {@link ReplaySubject}.\n * @param selector Passing `undefined` here determines that this operator will return a {@link ConnectableObservable}.\n * @param timestampProvider The timestamp provider for the underlying {@link ReplaySubject}.\n * @deprecated Will be removed in v8. To create a connectable observable that uses a\n * {@link ReplaySubject} under the hood, use {@link connectable}.\n * `source.pipe(publishReplay(size, time, scheduler))` is equivalent to\n * `connectable(source, { connector: () => new ReplaySubject(size, time, scheduler), resetOnDisconnect: false })`.\n * If you're using {@link refCount} after `publishReplay`, use the {@link share} operator instead.\n * `publishReplay(size, time, scheduler), refCount()` is equivalent to\n * `share({ connector: () => new ReplaySubject(size, time, scheduler), resetOnError: false, resetOnComplete: false, resetOnRefCountZero: false })`.\n * Details: https://rxjs.dev/deprecations/multicasting\n */\nexport function publishReplay<T, O extends ObservableInput<any>>(\n  bufferSize: number | undefined,\n  windowTime: number | undefined,\n  selector: undefined,\n  timestampProvider: TimestampProvider\n): OperatorFunction<T, ObservedValueOf<O>>;\n\n/**\n * @deprecated Will be removed in v8. Use the {@link connectable} observable, the {@link connect} operator or the\n * {@link share} operator instead. See the overloads below for equivalent replacement examples of this operator's\n * behaviors.\n * Details: https://rxjs.dev/deprecations/multicasting\n */\nexport function publishReplay<T, R>(\n  bufferSize?: number,\n  windowTime?: number,\n  selectorOrScheduler?: TimestampProvider | OperatorFunction<T, R>,\n  timestampProvider?: TimestampProvider\n) {\n  if (selectorOrScheduler && !isFunction(selectorOrScheduler)) {\n    timestampProvider = selectorOrScheduler;\n  }\n  const selector = isFunction(selectorOrScheduler) ? selectorOrScheduler : undefined;\n  // Note, we're passing `selector!` here, because at runtime, `undefined` is an acceptable argument\n  // but it makes our TypeScript signature for `multicast` unhappy (as it should, because it's gross).\n  return (source: Observable<T>) => multicast(new ReplaySubject<T>(bufferSize, windowTime, timestampProvider), selector!)(source);\n}\n","import { OperatorFunction, ObservableInputTuple } from '../types';\nimport { raceInit } from '../observable/race';\nimport { operate } from '../util/lift';\nimport { identity } from '../util/identity';\n\n/**\n * Creates an Observable that mirrors the first source Observable to emit a next,\n * error or complete notification from the combination of the Observable to which\n * the operator is applied and supplied Observables.\n *\n * ## Example\n *\n * ```ts\n * import { interval, map, raceWith } from 'rxjs';\n *\n * const obs1 = interval(7000).pipe(map(() => 'slow one'));\n * const obs2 = interval(3000).pipe(map(() => 'fast one'));\n * const obs3 = interval(5000).pipe(map(() => 'medium one'));\n *\n * obs1\n *   .pipe(raceWith(obs2, obs3))\n *   .subscribe(winner => console.log(winner));\n *\n * // Outputs\n * // a series of 'fast one'\n * ```\n *\n * @param otherSources Sources used to race for which Observable emits first.\n * @return A function that returns an Observable that mirrors the output of the\n * first Observable to emit an item.\n */\nexport function raceWith<T, A extends readonly unknown[]>(\n  ...otherSources: [...ObservableInputTuple<A>]\n): OperatorFunction<T, T | A[number]> {\n  return !otherSources.length\n    ? identity\n    : operate((source, subscriber) => {\n        raceInit<T | A[number]>([source, ...otherSources])(subscriber);\n      });\n}\n","import { scanInternals } from './scanInternals';\nimport { OperatorFunction } from '../types';\nimport { operate } from '../util/lift';\n\nexport function reduce<V, A = V>(accumulator: (acc: A | V, value: V, index: number) => A): OperatorFunction<V, V | A>;\nexport function reduce<V, A>(accumulator: (acc: A, value: V, index: number) => A, seed: A): OperatorFunction<V, A>;\nexport function reduce<V, A, S = A>(accumulator: (acc: A | S, value: V, index: number) => A, seed: S): OperatorFunction<V, A>;\n\n/**\n * Applies an accumulator function over the source Observable, and returns the\n * accumulated result when the source completes, given an optional seed value.\n *\n * <span class=\"informal\">Combines together all values emitted on the source,\n * using an accumulator function that knows how to join a new source value into\n * the accumulation from the past.</span>\n *\n * ![](reduce.png)\n *\n * Like\n * [Array.prototype.reduce()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce),\n * `reduce` applies an `accumulator` function against an accumulation and each\n * value of the source Observable (from the past) to reduce it to a single\n * value, emitted on the output Observable. Note that `reduce` will only emit\n * one value, only when the source Observable completes. It is equivalent to\n * applying operator {@link scan} followed by operator {@link last}.\n *\n * Returns an Observable that applies a specified `accumulator` function to each\n * item emitted by the source Observable. If a `seed` value is specified, then\n * that value will be used as the initial value for the accumulator. If no seed\n * value is specified, the first item of the source is used as the seed.\n *\n * ## Example\n *\n * Count the number of click events that happened in 5 seconds\n *\n * ```ts\n * import { fromEvent, takeUntil, interval, map, reduce } from 'rxjs';\n *\n * const clicksInFiveSeconds = fromEvent(document, 'click')\n *   .pipe(takeUntil(interval(5000)));\n *\n * const ones = clicksInFiveSeconds.pipe(map(() => 1));\n * const seed = 0;\n * const count = ones.pipe(reduce((acc, one) => acc + one, seed));\n *\n * count.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link count}\n * @see {@link expand}\n * @see {@link mergeScan}\n * @see {@link scan}\n *\n * @param {function(acc: A, value: V, index: number): A} accumulator The accumulator function\n * called on each source value.\n * @param {A} [seed] The initial accumulation value.\n * @return A function that returns an Observable that emits a single value that\n * is the result of accumulating the values emitted by the source Observable.\n */\nexport function reduce<V, A>(accumulator: (acc: V | A, value: V, index: number) => A, seed?: any): OperatorFunction<V, V | A> {\n  return operate(scanInternals(accumulator, seed, arguments.length >= 2, false, true));\n}\n","import { ConnectableObservable } from '../observable/ConnectableObservable';\nimport { Subscription } from '../Subscription';\nimport { MonoTypeOperatorFunction } from '../types';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\n\n/**\n * Make a {@link ConnectableObservable} behave like a ordinary observable and automates the way\n * you can connect to it.\n *\n * Internally it counts the subscriptions to the observable and subscribes (only once) to the source if\n * the number of subscriptions is larger than 0. If the number of subscriptions is smaller than 1, it\n * unsubscribes from the source. This way you can make sure that everything before the *published*\n * refCount has only a single subscription independently of the number of subscribers to the target\n * observable.\n *\n * Note that using the {@link share} operator is exactly the same as using the `multicast(() => new Subject())` operator\n * (making the observable hot) and the *refCount* operator in a sequence.\n *\n * ![](refCount.png)\n *\n * ## Example\n *\n * In the following example there are two intervals turned into connectable observables\n * by using the *publish* operator. The first one uses the *refCount* operator, the\n * second one does not use it. You will notice that a connectable observable does nothing\n * until you call its connect function.\n *\n * ```ts\n * import { interval, tap, publish, refCount } from 'rxjs';\n *\n * // Turn the interval observable into a ConnectableObservable (hot)\n * const refCountInterval = interval(400).pipe(\n *   tap(num => console.log(`refCount ${ num }`)),\n *   publish(),\n *   refCount()\n * );\n *\n * const publishedInterval = interval(400).pipe(\n *   tap(num => console.log(`publish ${ num }`)),\n *   publish()\n * );\n *\n * refCountInterval.subscribe();\n * refCountInterval.subscribe();\n * // 'refCount 0' -----> 'refCount 1' -----> etc\n * // All subscriptions will receive the same value and the tap (and\n * // every other operator) before the `publish` operator will be executed\n * // only once per event independently of the number of subscriptions.\n *\n * publishedInterval.subscribe();\n * // Nothing happens until you call .connect() on the observable.\n * ```\n *\n * @return A function that returns an Observable that automates the connection\n * to ConnectableObservable.\n * @see {@link ConnectableObservable}\n * @see {@link share}\n * @see {@link publish}\n * @deprecated Replaced with the {@link share} operator. How `share` is used\n * will depend on the connectable observable you created just prior to the\n * `refCount` operator.\n * Details: https://rxjs.dev/deprecations/multicasting\n */\nexport function refCount<T>(): MonoTypeOperatorFunction<T> {\n  return operate((source, subscriber) => {\n    let connection: Subscription | null = null;\n\n    (source as any)._refCount++;\n\n    const refCounter = createOperatorSubscriber(subscriber, undefined, undefined, undefined, () => {\n      if (!source || (source as any)._refCount <= 0 || 0 < --(source as any)._refCount) {\n        connection = null;\n        return;\n      }\n\n      ///\n      // Compare the local RefCountSubscriber's connection Subscription to the\n      // connection Subscription on the shared ConnectableObservable. In cases\n      // where the ConnectableObservable source synchronously emits values, and\n      // the RefCountSubscriber's downstream Observers synchronously unsubscribe,\n      // execution continues to here before the RefCountOperator has a chance to\n      // supply the RefCountSubscriber with the shared connection Subscription.\n      // For example:\n      // ```\n      // range(0, 10).pipe(\n      //   publish(),\n      //   refCount(),\n      //   take(5),\n      // )\n      // .subscribe();\n      // ```\n      // In order to account for this case, RefCountSubscriber should only dispose\n      // the ConnectableObservable's shared connection Subscription if the\n      // connection Subscription exists, *and* either:\n      //   a. RefCountSubscriber doesn't have a reference to the shared connection\n      //      Subscription yet, or,\n      //   b. RefCountSubscriber's connection Subscription reference is identical\n      //      to the shared connection Subscription\n      ///\n\n      const sharedConnection = (source as any)._connection;\n      const conn = connection;\n      connection = null;\n\n      if (sharedConnection && (!conn || sharedConnection === conn)) {\n        sharedConnection.unsubscribe();\n      }\n\n      subscriber.unsubscribe();\n    });\n\n    source.subscribe(refCounter);\n\n    if (!refCounter.closed) {\n      connection = (source as ConnectableObservable<T>).connect();\n    }\n  });\n}\n","import { Subscription } from '../Subscription';\nimport { EMPTY } from '../observable/empty';\nimport { operate } from '../util/lift';\nimport { MonoTypeOperatorFunction, ObservableInput } from '../types';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nimport { innerFrom } from '../observable/innerFrom';\nimport { timer } from '../observable/timer';\n\nexport interface RepeatConfig {\n  /**\n   * The number of times to repeat the source. Defaults to `Infinity`.\n   */\n  count?: number;\n\n  /**\n   * If a `number`, will delay the repeat of the source by that number of milliseconds.\n   * If a function, it will provide the number of times the source has been subscribed to,\n   * and the return value should be a valid observable input that will notify when the source\n   * should be repeated. If the notifier observable is empty, the result will complete.\n   */\n  delay?: number | ((count: number) => ObservableInput<any>);\n}\n\n/**\n * Returns an Observable that will resubscribe to the source stream when the source stream completes.\n *\n * <span class=\"informal\">Repeats all values emitted on the source. It's like {@link retry}, but for non error cases.</span>\n *\n * ![](repeat.png)\n *\n * Repeat will output values from a source until the source completes, then it will resubscribe to the\n * source a specified number of times, with a specified delay. Repeat can be particularly useful in\n * combination with closing operators like {@link take}, {@link takeUntil}, {@link first}, or {@link takeWhile},\n * as it can be used to restart a source again from scratch.\n *\n * Repeat is very similar to {@link retry}, where {@link retry} will resubscribe to the source in the error case, but\n * `repeat` will resubscribe if the source completes.\n *\n * Note that `repeat` will _not_ catch errors. Use {@link retry} for that.\n *\n * - `repeat(0)` returns an empty observable\n * - `repeat()` will repeat forever\n * - `repeat({ delay: 200 })` will repeat forever, with a delay of 200ms between repetitions.\n * - `repeat({ count: 2, delay: 400 })` will repeat twice, with a delay of 400ms between repetitions.\n * - `repeat({ delay: (count) => timer(count * 1000) })` will repeat forever, but will have a delay that grows by one second for each repetition.\n *\n * ## Example\n *\n * Repeat a message stream\n *\n * ```ts\n * import { of, repeat } from 'rxjs';\n *\n * const source = of('Repeat message');\n * const result = source.pipe(repeat(3));\n *\n * result.subscribe(x => console.log(x));\n *\n * // Results\n * // 'Repeat message'\n * // 'Repeat message'\n * // 'Repeat message'\n * ```\n *\n * Repeat 3 values, 2 times\n *\n * ```ts\n * import { interval, take, repeat } from 'rxjs';\n *\n * const source = interval(1000);\n * const result = source.pipe(take(3), repeat(2));\n *\n * result.subscribe(x => console.log(x));\n *\n * // Results every second\n * // 0\n * // 1\n * // 2\n * // 0\n * // 1\n * // 2\n * ```\n *\n * Defining two complex repeats with delays on the same source.\n * Note that the second repeat cannot be called until the first\n * repeat as exhausted it's count.\n *\n * ```ts\n * import { defer, of, repeat } from 'rxjs';\n *\n * const source = defer(() => {\n *    return of(`Hello, it is ${new Date()}`)\n * });\n *\n * source.pipe(\n *    // Repeat 3 times with a delay of 1 second between repetitions\n *    repeat({\n *      count: 3,\n *      delay: 1000,\n *    }),\n *\n *    // *Then* repeat forever, but with an exponential step-back\n *    // maxing out at 1 minute.\n *    repeat({\n *      delay: (count) => timer(Math.min(60000, 2 ^ count * 1000))\n *    })\n * )\n * ```\n *\n * @see {@link repeatWhen}\n * @see {@link retry}\n *\n * @param count The number of times the source Observable items are repeated, a count of 0 will yield\n * an empty Observable.\n */\nexport function repeat<T>(countOrConfig?: number | RepeatConfig): MonoTypeOperatorFunction<T> {\n  let count = Infinity;\n  let delay: RepeatConfig['delay'];\n\n  if (countOrConfig != null) {\n    if (typeof countOrConfig === 'object') {\n      ({ count = Infinity, delay } = countOrConfig);\n    } else {\n      count = countOrConfig;\n    }\n  }\n\n  return count <= 0\n    ? () => EMPTY\n    : operate((source, subscriber) => {\n        let soFar = 0;\n        let sourceSub: Subscription | null;\n\n        const resubscribe = () => {\n          sourceSub?.unsubscribe();\n          sourceSub = null;\n          if (delay != null) {\n            const notifier = typeof delay === 'number' ? timer(delay) : innerFrom(delay(soFar));\n            const notifierSubscriber = createOperatorSubscriber(subscriber, () => {\n              notifierSubscriber.unsubscribe();\n              subscribeToSource();\n            });\n            notifier.subscribe(notifierSubscriber);\n          } else {\n            subscribeToSource();\n          }\n        };\n\n        const subscribeToSource = () => {\n          let syncUnsub = false;\n          sourceSub = source.subscribe(\n            createOperatorSubscriber(subscriber, undefined, () => {\n              if (++soFar < count) {\n                if (sourceSub) {\n                  resubscribe();\n                } else {\n                  syncUnsub = true;\n                }\n              } else {\n                subscriber.complete();\n              }\n            })\n          );\n\n          if (syncUnsub) {\n            resubscribe();\n          }\n        };\n\n        subscribeToSource();\n      });\n}\n","import { Observable } from '../Observable';\nimport { Subject } from '../Subject';\nimport { Subscription } from '../Subscription';\n\nimport { MonoTypeOperatorFunction } from '../types';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\n\n/**\n * Returns an Observable that mirrors the source Observable with the exception of a `complete`. If the source\n * Observable calls `complete`, this method will emit to the Observable returned from `notifier`. If that Observable\n * calls `complete` or `error`, then this method will call `complete` or `error` on the child subscription. Otherwise\n * this method will resubscribe to the source Observable.\n *\n * ![](repeatWhen.png)\n *\n * ## Example\n *\n * Repeat a message stream on click\n *\n * ```ts\n * import { of, fromEvent, repeatWhen } from 'rxjs';\n *\n * const source = of('Repeat message');\n * const documentClick$ = fromEvent(document, 'click');\n *\n * const result = source.pipe(repeatWhen(() => documentClick$));\n *\n * result.subscribe(data => console.log(data))\n * ```\n *\n * @see {@link repeat}\n * @see {@link retry}\n * @see {@link retryWhen}\n *\n * @param {function(notifications: Observable): Observable} notifier - Receives an Observable of notifications with\n * which a user can `complete` or `error`, aborting the repetition.\n * @return A function that returns an Observable that that mirrors the source\n * Observable with the exception of a `complete`.\n * @deprecated Will be removed in v9 or v10. Use {@link repeat}'s `delay` option instead.\n */\nexport function repeatWhen<T>(notifier: (notifications: Observable<void>) => Observable<any>): MonoTypeOperatorFunction<T> {\n  return operate((source, subscriber) => {\n    let innerSub: Subscription | null;\n    let syncResub = false;\n    let completions$: Subject<void>;\n    let isNotifierComplete = false;\n    let isMainComplete = false;\n\n    /**\n     * Checks to see if we can complete the result, completes it, and returns `true` if it was completed.\n     */\n    const checkComplete = () => isMainComplete && isNotifierComplete && (subscriber.complete(), true);\n    /**\n     * Gets the subject to send errors through. If it doesn't exist,\n     * we know we need to setup the notifier.\n     */\n    const getCompletionSubject = () => {\n      if (!completions$) {\n        completions$ = new Subject();\n\n        // If the call to `notifier` throws, it will be caught by the OperatorSubscriber\n        // In the main subscription -- in `subscribeForRepeatWhen`.\n        notifier(completions$).subscribe(\n          createOperatorSubscriber(\n            subscriber,\n            () => {\n              if (innerSub) {\n                subscribeForRepeatWhen();\n              } else {\n                // If we don't have an innerSub yet, that's because the inner subscription\n                // call hasn't even returned yet. We've arrived here synchronously.\n                // So we flag that we want to resub, such that we can ensure finalization\n                // happens before we resubscribe.\n                syncResub = true;\n              }\n            },\n            () => {\n              isNotifierComplete = true;\n              checkComplete();\n            }\n          )\n        );\n      }\n      return completions$;\n    };\n\n    const subscribeForRepeatWhen = () => {\n      isMainComplete = false;\n\n      innerSub = source.subscribe(\n        createOperatorSubscriber(subscriber, undefined, () => {\n          isMainComplete = true;\n          // Check to see if we are complete, and complete if so.\n          // If we are not complete. Get the subject. This calls the `notifier` function.\n          // If that function fails, it will throw and `.next()` will not be reached on this\n          // line. The thrown error is caught by the _complete handler in this\n          // `OperatorSubscriber` and handled appropriately.\n          !checkComplete() && getCompletionSubject().next();\n        })\n      );\n\n      if (syncResub) {\n        // Ensure that the inner subscription is torn down before\n        // moving on to the next subscription in the synchronous case.\n        // If we don't do this here, all inner subscriptions will not be\n        // torn down until the entire observable is done.\n        innerSub.unsubscribe();\n        // It is important to null this out. Not only to free up memory, but\n        // to make sure code above knows we are in a subscribing state to\n        // handle synchronous resubscription.\n        innerSub = null;\n        // We may need to do this multiple times, so reset the flags.\n        syncResub = false;\n        // Resubscribe\n        subscribeForRepeatWhen();\n      }\n    };\n\n    // Start the subscription\n    subscribeForRepeatWhen();\n  });\n}\n","import { MonoTypeOperatorFunction, ObservableInput } from '../types';\nimport { operate } from '../util/lift';\nimport { Subscription } from '../Subscription';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nimport { identity } from '../util/identity';\nimport { timer } from '../observable/timer';\nimport { innerFrom } from '../observable/innerFrom';\n\n/**\n * The {@link retry} operator configuration object. `retry` either accepts a `number`\n * or an object described by this interface.\n */\nexport interface RetryConfig {\n  /**\n   * The maximum number of times to retry. If `count` is omitted, `retry` will try to\n   * resubscribe on errors infinite number of times.\n   */\n  count?: number;\n  /**\n   * The number of milliseconds to delay before retrying, OR a function to\n   * return a notifier for delaying. If a function is given, that function should\n   * return a notifier that, when it emits will retry the source. If the notifier\n   * completes _without_ emitting, the resulting observable will complete without error,\n   * if the notifier errors, the error will be pushed to the result.\n   */\n  delay?: number | ((error: any, retryCount: number) => ObservableInput<any>);\n  /**\n   * Whether or not to reset the retry counter when the retried subscription\n   * emits its first value.\n   */\n  resetOnSuccess?: boolean;\n}\n\nexport function retry<T>(count?: number): MonoTypeOperatorFunction<T>;\nexport function retry<T>(config: RetryConfig): MonoTypeOperatorFunction<T>;\n\n/**\n * Returns an Observable that mirrors the source Observable with the exception of an `error`.\n *\n * If the source Observable calls `error`, this method will resubscribe to the source Observable for a maximum of\n * `count` resubscriptions rather than propagating the `error` call.\n *\n * ![](retry.png)\n *\n * The number of retries is determined by the `count` parameter. It can be set either by passing a number to\n * `retry` function or by setting `count` property when `retry` is configured using {@link RetryConfig}. If\n * `count` is omitted, `retry` will try to resubscribe on errors infinite number of times.\n *\n * Any and all items emitted by the source Observable will be emitted by the resulting Observable, even those\n * emitted during failed subscriptions. For example, if an Observable fails at first but emits `[1, 2]` then\n * succeeds the second time and emits: `[1, 2, 3, 4, 5, complete]` then the complete stream of emissions and\n * notifications would be: `[1, 2, 1, 2, 3, 4, 5, complete]`.\n *\n * ## Example\n *\n * ```ts\n * import { interval, mergeMap, throwError, of, retry } from 'rxjs';\n *\n * const source = interval(1000);\n * const result = source.pipe(\n *   mergeMap(val => val > 5 ? throwError(() => 'Error!') : of(val)),\n *   retry(2) // retry 2 times on error\n * );\n *\n * result.subscribe({\n *   next: value => console.log(value),\n *   error: err => console.log(`${ err }: Retried 2 times then quit!`)\n * });\n *\n * // Output:\n * // 0..1..2..3..4..5..\n * // 0..1..2..3..4..5..\n * // 0..1..2..3..4..5..\n * // 'Error!: Retried 2 times then quit!'\n * ```\n *\n * @see {@link retryWhen}\n *\n * @param configOrCount - Either number of retry attempts before failing or a {@link RetryConfig} object.\n * @return A function that returns an Observable that will resubscribe to the\n * source stream when the source stream errors, at most `count` times.\n */\nexport function retry<T>(configOrCount: number | RetryConfig = Infinity): MonoTypeOperatorFunction<T> {\n  let config: RetryConfig;\n  if (configOrCount && typeof configOrCount === 'object') {\n    config = configOrCount;\n  } else {\n    config = {\n      count: configOrCount as number,\n    };\n  }\n  const { count = Infinity, delay, resetOnSuccess: resetOnSuccess = false } = config;\n\n  return count <= 0\n    ? identity\n    : operate((source, subscriber) => {\n        let soFar = 0;\n        let innerSub: Subscription | null;\n        const subscribeForRetry = () => {\n          let syncUnsub = false;\n          innerSub = source.subscribe(\n            createOperatorSubscriber(\n              subscriber,\n              (value) => {\n                // If we're resetting on success\n                if (resetOnSuccess) {\n                  soFar = 0;\n                }\n                subscriber.next(value);\n              },\n              // Completions are passed through to consumer.\n              undefined,\n              (err) => {\n                if (soFar++ < count) {\n                  // We are still under our retry count\n                  const resub = () => {\n                    if (innerSub) {\n                      innerSub.unsubscribe();\n                      innerSub = null;\n                      subscribeForRetry();\n                    } else {\n                      syncUnsub = true;\n                    }\n                  };\n\n                  if (delay != null) {\n                    // The user specified a retry delay.\n                    // They gave us a number, use a timer, otherwise, it's a function,\n                    // and we're going to call it to get a notifier.\n                    const notifier = typeof delay === 'number' ? timer(delay) : innerFrom(delay(err, soFar));\n                    const notifierSubscriber = createOperatorSubscriber(\n                      subscriber,\n                      () => {\n                        // After we get the first notification, we\n                        // unsubscribe from the notifer, because we don't want anymore\n                        // and we resubscribe to the source.\n                        notifierSubscriber.unsubscribe();\n                        resub();\n                      },\n                      () => {\n                        // The notifier completed without emitting.\n                        // The author is telling us they want to complete.\n                        subscriber.complete();\n                      }\n                    );\n                    notifier.subscribe(notifierSubscriber);\n                  } else {\n                    // There was no notifier given. Just resub immediately.\n                    resub();\n                  }\n                } else {\n                  // We're past our maximum number of retries.\n                  // Just send along the error.\n                  subscriber.error(err);\n                }\n              }\n            )\n          );\n          if (syncUnsub) {\n            innerSub.unsubscribe();\n            innerSub = null;\n            subscribeForRetry();\n          }\n        };\n        subscribeForRetry();\n      });\n}\n","import { Observable } from '../Observable';\nimport { Subject } from '../Subject';\nimport { Subscription } from '../Subscription';\n\nimport { MonoTypeOperatorFunction } from '../types';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\n\n/**\n * Returns an Observable that mirrors the source Observable with the exception of an `error`. If the source Observable\n * calls `error`, this method will emit the Throwable that caused the error to the Observable returned from `notifier`.\n * If that Observable calls `complete` or `error` then this method will call `complete` or `error` on the child\n * subscription. Otherwise this method will resubscribe to the source Observable.\n *\n * ![](retryWhen.png)\n *\n * Retry an observable sequence on error based on custom criteria.\n *\n * ## Example\n *\n * ```ts\n * import { interval, map, retryWhen, tap, delayWhen, timer } from 'rxjs';\n *\n * const source = interval(1000);\n * const result = source.pipe(\n *   map(value => {\n *     if (value > 5) {\n *       // error will be picked up by retryWhen\n *       throw value;\n *     }\n *     return value;\n *   }),\n *   retryWhen(errors =>\n *     errors.pipe(\n *       // log error message\n *       tap(value => console.log(`Value ${ value } was too high!`)),\n *       // restart in 5 seconds\n *       delayWhen(value => timer(value * 1000))\n *     )\n *   )\n * );\n *\n * result.subscribe(value => console.log(value));\n *\n * // results:\n * // 0\n * // 1\n * // 2\n * // 3\n * // 4\n * // 5\n * // 'Value 6 was too high!'\n * // - Wait 5 seconds then repeat\n * ```\n *\n * @see {@link retry}\n *\n * @param {function(errors: Observable): Observable} notifier - Receives an Observable of notifications with which a\n * user can `complete` or `error`, aborting the retry.\n * @return A function that returns an Observable that mirrors the source\n * Observable with the exception of an `error`.\n * @deprecated Will be removed in v9 or v10, use {@link retry}'s `delay` option instead.\n */\nexport function retryWhen<T>(notifier: (errors: Observable<any>) => Observable<any>): MonoTypeOperatorFunction<T> {\n  return operate((source, subscriber) => {\n    let innerSub: Subscription | null;\n    let syncResub = false;\n    let errors$: Subject<any>;\n\n    const subscribeForRetryWhen = () => {\n      innerSub = source.subscribe(\n        createOperatorSubscriber(subscriber, undefined, undefined, (err) => {\n          if (!errors$) {\n            errors$ = new Subject();\n            notifier(errors$).subscribe(\n              createOperatorSubscriber(subscriber, () =>\n                // If we have an innerSub, this was an asynchronous call, kick off the retry.\n                // Otherwise, if we don't have an innerSub yet, that's because the inner subscription\n                // call hasn't even returned yet. We've arrived here synchronously.\n                // So we flag that we want to resub, such that we can ensure finalization\n                // happens before we resubscribe.\n                innerSub ? subscribeForRetryWhen() : (syncResub = true)\n              )\n            );\n          }\n          if (errors$) {\n            // We have set up the notifier without error.\n            errors$.next(err);\n          }\n        })\n      );\n\n      if (syncResub) {\n        // Ensure that the inner subscription is torn down before\n        // moving on to the next subscription in the synchronous case.\n        // If we don't do this here, all inner subscriptions will not be\n        // torn down until the entire observable is done.\n        innerSub.unsubscribe();\n        innerSub = null;\n        // We may need to do this multiple times, so reset the flag.\n        syncResub = false;\n        // Resubscribe\n        subscribeForRetryWhen();\n      }\n    };\n\n    // Start the subscription\n    subscribeForRetryWhen();\n  });\n}\n","import { Observable } from '../Observable';\nimport { MonoTypeOperatorFunction } from '../types';\nimport { operate } from '../util/lift';\nimport { noop } from '../util/noop';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\n\n/**\n * Emits the most recently emitted value from the source Observable whenever\n * another Observable, the `notifier`, emits.\n *\n * <span class=\"informal\">It's like {@link sampleTime}, but samples whenever\n * the `notifier` Observable emits something.</span>\n *\n * ![](sample.png)\n *\n * Whenever the `notifier` Observable emits a value, `sample`\n * looks at the source Observable and emits whichever value it has most recently\n * emitted since the previous sampling, unless the source has not emitted\n * anything since the previous sampling. The `notifier` is subscribed to as soon\n * as the output Observable is subscribed.\n *\n * ## Example\n *\n * On every click, sample the most recent `seconds` timer\n *\n * ```ts\n * import { fromEvent, interval, sample } from 'rxjs';\n *\n * const seconds = interval(1000);\n * const clicks = fromEvent(document, 'click');\n * const result = seconds.pipe(sample(clicks));\n *\n * result.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link audit}\n * @see {@link debounce}\n * @see {@link sampleTime}\n * @see {@link throttle}\n *\n * @param notifier The Observable to use for sampling the\n * source Observable.\n * @return A function that returns an Observable that emits the results of\n * sampling the values emitted by the source Observable whenever the notifier\n * Observable emits value or completes.\n */\nexport function sample<T>(notifier: Observable<any>): MonoTypeOperatorFunction<T> {\n  return operate((source, subscriber) => {\n    let hasValue = false;\n    let lastValue: T | null = null;\n    source.subscribe(\n      createOperatorSubscriber(subscriber, (value) => {\n        hasValue = true;\n        lastValue = value;\n      })\n    );\n    notifier.subscribe(\n      createOperatorSubscriber(\n        subscriber,\n        () => {\n          if (hasValue) {\n            hasValue = false;\n            const value = lastValue!;\n            lastValue = null;\n            subscriber.next(value);\n          }\n        },\n        noop\n      )\n    );\n  });\n}\n","import { asyncScheduler } from '../scheduler/async';\nimport { MonoTypeOperatorFunction, SchedulerLike } from '../types';\nimport { sample } from './sample';\nimport { interval } from '../observable/interval';\n\n/**\n * Emits the most recently emitted value from the source Observable within\n * periodic time intervals.\n *\n * <span class=\"informal\">Samples the source Observable at periodic time\n * intervals, emitting what it samples.</span>\n *\n * ![](sampleTime.png)\n *\n * `sampleTime` periodically looks at the source Observable and emits whichever\n * value it has most recently emitted since the previous sampling, unless the\n * source has not emitted anything since the previous sampling. The sampling\n * happens periodically in time every `period` milliseconds (or the time unit\n * defined by the optional `scheduler` argument). The sampling starts as soon as\n * the output Observable is subscribed.\n *\n * ## Example\n *\n * Every second, emit the most recent click at most once\n *\n * ```ts\n * import { fromEvent, sampleTime } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const result = clicks.pipe(sampleTime(1000));\n *\n * result.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link auditTime}\n * @see {@link debounceTime}\n * @see {@link delay}\n * @see {@link sample}\n * @see {@link throttleTime}\n *\n * @param {number} period The sampling period expressed in milliseconds or the\n * time unit determined internally by the optional `scheduler`.\n * @param {SchedulerLike} [scheduler=async] The {@link SchedulerLike} to use for\n * managing the timers that handle the sampling.\n * @return A function that returns an Observable that emits the results of\n * sampling the values emitted by the source Observable at the specified time\n * interval.\n */\nexport function sampleTime<T>(period: number, scheduler: SchedulerLike = asyncScheduler): MonoTypeOperatorFunction<T> {\n  return sample(interval(period, scheduler));\n}\n","import { OperatorFunction } from '../types';\nimport { operate } from '../util/lift';\nimport { scanInternals } from './scanInternals';\n\nexport function scan<V, A = V>(accumulator: (acc: A | V, value: V, index: number) => A): OperatorFunction<V, V | A>;\nexport function scan<V, A>(accumulator: (acc: A, value: V, index: number) => A, seed: A): OperatorFunction<V, A>;\nexport function scan<V, A, S>(accumulator: (acc: A | S, value: V, index: number) => A, seed: S): OperatorFunction<V, A>;\n\n// TODO: link to a \"redux pattern\" section in the guide (location TBD)\n\n/**\n * Useful for encapsulating and managing state. Applies an accumulator (or \"reducer function\")\n * to each value from the source after an initial state is established -- either via\n * a `seed` value (second argument), or from the first value from the source.\n *\n * <span class=\"informal\">It's like {@link reduce}, but emits the current\n * accumulation state after each update</span>\n *\n * ![](scan.png)\n *\n * This operator maintains an internal state and emits it after processing each value as follows:\n *\n * 1. First value arrives\n *   - If a `seed` value was supplied (as the second argument to `scan`), let `state = seed` and `value = firstValue`.\n *   - If NO `seed` value was supplied (no second argument), let `state = firstValue` and go to 3.\n * 2. Let `state = accumulator(state, value)`.\n *   - If an error is thrown by `accumulator`, notify the consumer of an error. The process ends.\n * 3. Emit `state`.\n * 4. Next value arrives, let `value = nextValue`, go to 2.\n *\n * ## Examples\n *\n * An average of previous numbers. This example shows how\n * not providing a `seed` can prime the stream with the\n * first value from the source.\n *\n * ```ts\n * import { of, scan, map } from 'rxjs';\n *\n * const numbers$ = of(1, 2, 3);\n *\n * numbers$\n *   .pipe(\n *     // Get the sum of the numbers coming in.\n *     scan((total, n) => total + n),\n *     // Get the average by dividing the sum by the total number\n *     // received so var (which is 1 more than the zero-based index).\n *     map((sum, index) => sum / (index + 1))\n *   )\n *   .subscribe(console.log);\n * ```\n *\n * The Fibonacci sequence. This example shows how you can use\n * a seed to prime accumulation process. Also... you know... Fibonacci.\n * So important to like, computers and stuff that its whiteboarded\n * in job interviews. Now you can show them the Rx version! (Please don't, haha)\n *\n * ```ts\n * import { interval, scan, map, startWith } from 'rxjs';\n *\n * const firstTwoFibs = [0, 1];\n * // An endless stream of Fibonacci numbers.\n * const fibonacci$ = interval(1000).pipe(\n *   // Scan to get the fibonacci numbers (after 0, 1)\n *   scan(([a, b]) => [b, a + b], firstTwoFibs),\n *   // Get the second number in the tuple, it's the one you calculated\n *   map(([, n]) => n),\n *   // Start with our first two digits :)\n *   startWith(...firstTwoFibs)\n * );\n *\n * fibonacci$.subscribe(console.log);\n * ```\n *\n * @see {@link expand}\n * @see {@link mergeScan}\n * @see {@link reduce}\n * @see {@link switchScan}\n *\n * @param accumulator A \"reducer function\". This will be called for each value after an initial state is\n * acquired.\n * @param seed The initial state. If this is not provided, the first value from the source will\n * be used as the initial state, and emitted without going through the accumulator. All subsequent values\n * will be processed by the accumulator function. If this is provided, all values will go through\n * the accumulator function.\n * @return A function that returns an Observable of the accumulated values.\n */\nexport function scan<V, A, S>(accumulator: (acc: V | A | S, value: V, index: number) => A, seed?: S): OperatorFunction<V, V | A> {\n  // providing a seed of `undefined` *should* be valid and trigger\n  // hasSeed! so don't use `seed !== undefined` checks!\n  // For this reason, we have to check it here at the original call site\n  // otherwise inside Operator/Subscriber we won't know if `undefined`\n  // means they didn't provide anything or if they literally provided `undefined`\n  return operate(scanInternals(accumulator, seed as S, arguments.length >= 2, true));\n}\n","import { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\n\n/**\n * A basic scan operation. This is used for `scan` and `reduce`.\n * @param accumulator The accumulator to use\n * @param seed The seed value for the state to accumulate\n * @param hasSeed Whether or not a seed was provided\n * @param emitOnNext Whether or not to emit the state on next\n * @param emitBeforeComplete Whether or not to emit the before completion\n */\n\nexport function scanInternals<V, A, S>(\n  accumulator: (acc: V | A | S, value: V, index: number) => A,\n  seed: S,\n  hasSeed: boolean,\n  emitOnNext: boolean,\n  emitBeforeComplete?: undefined | true\n) {\n  return (source: Observable<V>, subscriber: Subscriber<any>) => {\n    // Whether or not we have state yet. This will only be\n    // false before the first value arrives if we didn't get\n    // a seed value.\n    let hasState = hasSeed;\n    // The state that we're tracking, starting with the seed,\n    // if there is one, and then updated by the return value\n    // from the accumulator on each emission.\n    let state: any = seed;\n    // An index to pass to the accumulator function.\n    let index = 0;\n\n    // Subscribe to our source. All errors and completions are passed through.\n    source.subscribe(\n      createOperatorSubscriber(\n        subscriber,\n        (value) => {\n          // Always increment the index.\n          const i = index++;\n          // Set the state\n          state = hasState\n            ? // We already have state, so we can get the new state from the accumulator\n              accumulator(state, value, i)\n            : // We didn't have state yet, a seed value was not provided, so\n\n              // we set the state to the first value, and mark that we have state now\n              ((hasState = true), value);\n\n          // Maybe send it to the consumer.\n          emitOnNext && subscriber.next(state);\n        },\n        // If an onComplete was given, call it, otherwise\n        // just pass through the complete notification to the consumer.\n        emitBeforeComplete &&\n          (() => {\n            hasState && subscriber.next(state);\n            subscriber.complete();\n          })\n      )\n    );\n  };\n}\n","import { Observable } from '../Observable';\n\nimport { OperatorFunction } from '../types';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\n\n/**\n * Compares all values of two observables in sequence using an optional comparator function\n * and returns an observable of a single boolean value representing whether or not the two sequences\n * are equal.\n *\n * <span class=\"informal\">Checks to see of all values emitted by both observables are equal, in order.</span>\n *\n * ![](sequenceEqual.png)\n *\n * `sequenceEqual` subscribes to two observables and buffers incoming values from each observable. Whenever either\n * observable emits a value, the value is buffered and the buffers are shifted and compared from the bottom\n * up; If any value pair doesn't match, the returned observable will emit `false` and complete. If one of the\n * observables completes, the operator will wait for the other observable to complete; If the other\n * observable emits before completing, the returned observable will emit `false` and complete. If one observable never\n * completes or emits after the other completes, the returned observable will never complete.\n *\n * ## Example\n *\n * Figure out if the Konami code matches\n *\n * ```ts\n * import { from, fromEvent, map, bufferCount, mergeMap, sequenceEqual } from 'rxjs';\n *\n * const codes = from([\n *   'ArrowUp',\n *   'ArrowUp',\n *   'ArrowDown',\n *   'ArrowDown',\n *   'ArrowLeft',\n *   'ArrowRight',\n *   'ArrowLeft',\n *   'ArrowRight',\n *   'KeyB',\n *   'KeyA',\n *   'Enter', // no start key, clearly.\n * ]);\n *\n * const keys = fromEvent<KeyboardEvent>(document, 'keyup').pipe(map(e => e.code));\n * const matches = keys.pipe(\n *   bufferCount(11, 1),\n *   mergeMap(last11 => from(last11).pipe(sequenceEqual(codes)))\n * );\n * matches.subscribe(matched => console.log('Successful cheat at Contra? ', matched));\n * ```\n *\n * @see {@link combineLatest}\n * @see {@link zip}\n * @see {@link withLatestFrom}\n *\n * @param {Observable} compareTo The observable sequence to compare the source sequence to.\n * @param {function} [comparator] An optional function to compare each value pair\n * @return A function that returns an Observable that emits a single boolean\n * value representing whether or not the values emitted by the source\n * Observable and provided Observable were equal in sequence.\n */\nexport function sequenceEqual<T>(\n  compareTo: Observable<T>,\n  comparator: (a: T, b: T) => boolean = (a, b) => a === b\n): OperatorFunction<T, boolean> {\n  return operate((source, subscriber) => {\n    // The state for the source observable\n    const aState = createState<T>();\n    // The state for the compareTo observable;\n    const bState = createState<T>();\n\n    /** A utility to emit and complete */\n    const emit = (isEqual: boolean) => {\n      subscriber.next(isEqual);\n      subscriber.complete();\n    };\n\n    /**\n     * Creates a subscriber that subscribes to one of the sources, and compares its collected\n     * state -- `selfState` -- to the other source's collected state -- `otherState`. This\n     * is used for both streams.\n     */\n    const createSubscriber = (selfState: SequenceState<T>, otherState: SequenceState<T>) => {\n      const sequenceEqualSubscriber = createOperatorSubscriber(\n        subscriber,\n        (a: T) => {\n          const { buffer, complete } = otherState;\n          if (buffer.length === 0) {\n            // If there's no values in the other buffer\n            // and the other stream is complete, we know\n            // this isn't a match, because we got one more value.\n            // Otherwise, we push onto our buffer, so when the other\n            // stream emits, it can pull this value off our buffer and check it\n            // at the appropriate time.\n            complete ? emit(false) : selfState.buffer.push(a);\n          } else {\n            // If the other stream *does* have values in it's buffer,\n            // pull the oldest one off so we can compare it to what we\n            // just got. If it wasn't a match, emit `false` and complete.\n            !comparator(a, buffer.shift()!) && emit(false);\n          }\n        },\n        () => {\n          // Or observable completed\n          selfState.complete = true;\n          const { complete, buffer } = otherState;\n          // If the other observable is also complete, and there's\n          // still stuff left in their buffer, it doesn't match, if their\n          // buffer is empty, then it does match. This is because we can't\n          // possibly get more values here anymore.\n          complete && emit(buffer.length === 0);\n          // Be sure to clean up our stream as soon as possible if we can.\n          sequenceEqualSubscriber?.unsubscribe();\n        }\n      );\n\n      return sequenceEqualSubscriber;\n    };\n\n    // Subscribe to each source.\n    source.subscribe(createSubscriber(aState, bState));\n    compareTo.subscribe(createSubscriber(bState, aState));\n  });\n}\n\n/**\n * A simple structure for the data used to test each sequence\n */\ninterface SequenceState<T> {\n  /** A temporary store for arrived values before they are checked */\n  buffer: T[];\n  /** Whether or not the sequence source has completed. */\n  complete: boolean;\n}\n\n/**\n * Creates a simple structure that is used to represent\n * data used to test each sequence.\n */\nfunction createState<T>(): SequenceState<T> {\n  return {\n    buffer: [],\n    complete: false,\n  };\n}\n","import { Observable } from '../Observable';\nimport { innerFrom } from '../observable/innerFrom';\nimport { Subject } from '../Subject';\nimport { SafeSubscriber } from '../Subscriber';\nimport { Subscription } from '../Subscription';\nimport { MonoTypeOperatorFunction, SubjectLike } from '../types';\nimport { operate } from '../util/lift';\n\nexport interface ShareConfig<T> {\n  /**\n   * The factory used to create the subject that will connect the source observable to\n   * multicast consumers.\n   */\n  connector?: () => SubjectLike<T>;\n  /**\n   * If true, the resulting observable will reset internal state on error from source and return to a \"cold\" state. This\n   * allows the resulting observable to be \"retried\" in the event of an error.\n   * If false, when an error comes from the source it will push the error into the connecting subject, and the subject\n   * will remain the connecting subject, meaning the resulting observable will not go \"cold\" again, and subsequent retries\n   * or resubscriptions will resubscribe to that same subject. In all cases, RxJS subjects will emit the same error again, however\n   * {@link ReplaySubject} will also push its buffered values before pushing the error.\n   * It is also possible to pass a notifier factory returning an observable instead which grants more fine-grained\n   * control over how and when the reset should happen. This allows behaviors like conditional or delayed resets.\n   */\n  resetOnError?: boolean | ((error: any) => Observable<any>);\n  /**\n   * If true, the resulting observable will reset internal state on completion from source and return to a \"cold\" state. This\n   * allows the resulting observable to be \"repeated\" after it is done.\n   * If false, when the source completes, it will push the completion through the connecting subject, and the subject\n   * will remain the connecting subject, meaning the resulting observable will not go \"cold\" again, and subsequent repeats\n   * or resubscriptions will resubscribe to that same subject.\n   * It is also possible to pass a notifier factory returning an observable instead which grants more fine-grained\n   * control over how and when the reset should happen. This allows behaviors like conditional or delayed resets.\n   */\n  resetOnComplete?: boolean | (() => Observable<any>);\n  /**\n   * If true, when the number of subscribers to the resulting observable reaches zero due to those subscribers unsubscribing, the\n   * internal state will be reset and the resulting observable will return to a \"cold\" state. This means that the next\n   * time the resulting observable is subscribed to, a new subject will be created and the source will be subscribed to\n   * again.\n   * If false, when the number of subscribers to the resulting observable reaches zero due to unsubscription, the subject\n   * will remain connected to the source, and new subscriptions to the result will be connected through that same subject.\n   * It is also possible to pass a notifier factory returning an observable instead which grants more fine-grained\n   * control over how and when the reset should happen. This allows behaviors like conditional or delayed resets.\n   */\n  resetOnRefCountZero?: boolean | (() => Observable<any>);\n}\n\nexport function share<T>(): MonoTypeOperatorFunction<T>;\n\nexport function share<T>(options: ShareConfig<T>): MonoTypeOperatorFunction<T>;\n\n/**\n * Returns a new Observable that multicasts (shares) the original Observable. As long as there is at least one\n * Subscriber this Observable will be subscribed and emitting data. When all subscribers have unsubscribed it will\n * unsubscribe from the source Observable. Because the Observable is multicasting it makes the stream `hot`.\n * This is an alias for `multicast(() => new Subject()), refCount()`.\n *\n * The subscription to the underlying source Observable can be reset (unsubscribe and resubscribe for new subscribers),\n * if the subscriber count to the shared observable drops to 0, or if the source Observable errors or completes. It is\n * possible to use notifier factories for the resets to allow for behaviors like conditional or delayed resets. Please\n * note that resetting on error or complete of the source Observable does not behave like a transparent retry or restart\n * of the source because the error or complete will be forwarded to all subscribers and their subscription will be\n * closed. Only new subscribers after a reset on error or complete happened will cause a fresh subscription to the\n * source. To achieve transparent retries or restarts pipe the source through appropriate operators before sharing.\n *\n * ![](share.png)\n *\n * ## Example\n *\n * Generate new multicast Observable from the `source` Observable value\n *\n * ```ts\n * import { interval, tap, map, take, share } from 'rxjs';\n *\n * const source = interval(1000).pipe(\n *   tap(x => console.log('Processing: ', x)),\n *   map(x => x * x),\n *   take(6),\n *   share()\n * );\n *\n * source.subscribe(x => console.log('subscription 1: ', x));\n * source.subscribe(x => console.log('subscription 2: ', x));\n *\n * // Logs:\n * // Processing: 0\n * // subscription 1: 0\n * // subscription 2: 0\n * // Processing: 1\n * // subscription 1: 1\n * // subscription 2: 1\n * // Processing: 2\n * // subscription 1: 4\n * // subscription 2: 4\n * // Processing: 3\n * // subscription 1: 9\n * // subscription 2: 9\n * // Processing: 4\n * // subscription 1: 16\n * // subscription 2: 16\n * // Processing: 5\n * // subscription 1: 25\n * // subscription 2: 25\n * ```\n *\n * ## Example with notifier factory: Delayed reset\n *\n * ```ts\n * import { interval, take, share, timer } from 'rxjs';\n *\n * const source = interval(1000).pipe(\n *   take(3),\n *   share({\n *     resetOnRefCountZero: () => timer(1000)\n *   })\n * );\n *\n * const subscriptionOne = source.subscribe(x => console.log('subscription 1: ', x));\n * setTimeout(() => subscriptionOne.unsubscribe(), 1300);\n *\n * setTimeout(() => source.subscribe(x => console.log('subscription 2: ', x)), 1700);\n *\n * setTimeout(() => source.subscribe(x => console.log('subscription 3: ', x)), 5000);\n *\n * // Logs:\n * // subscription 1:  0\n * // (subscription 1 unsubscribes here)\n * // (subscription 2 subscribes here ~400ms later, source was not reset)\n * // subscription 2:  1\n * // subscription 2:  2\n * // (subscription 2 unsubscribes here)\n * // (subscription 3 subscribes here ~2000ms later, source did reset before)\n * // subscription 3:  0\n * // subscription 3:  1\n * // subscription 3:  2\n * ```\n *\n * @see {@link shareReplay}\n *\n * @return A function that returns an Observable that mirrors the source.\n */\nexport function share<T>(options: ShareConfig<T> = {}): MonoTypeOperatorFunction<T> {\n  const { connector = () => new Subject<T>(), resetOnError = true, resetOnComplete = true, resetOnRefCountZero = true } = options;\n  // It's necessary to use a wrapper here, as the _operator_ must be\n  // referentially transparent. Otherwise, it cannot be used in calls to the\n  // static `pipe` function - to create a partial pipeline.\n  //\n  // The _operator function_ - the function returned by the _operator_ - will\n  // not be referentially transparent - as it shares its source - but the\n  // _operator function_ is called when the complete pipeline is composed via a\n  // call to a source observable's `pipe` method - not when the static `pipe`\n  // function is called.\n  return (wrapperSource) => {\n    let connection: SafeSubscriber<T> | undefined;\n    let resetConnection: Subscription | undefined;\n    let subject: SubjectLike<T> | undefined;\n    let refCount = 0;\n    let hasCompleted = false;\n    let hasErrored = false;\n\n    const cancelReset = () => {\n      resetConnection?.unsubscribe();\n      resetConnection = undefined;\n    };\n    // Used to reset the internal state to a \"cold\"\n    // state, as though it had never been subscribed to.\n    const reset = () => {\n      cancelReset();\n      connection = subject = undefined;\n      hasCompleted = hasErrored = false;\n    };\n    const resetAndUnsubscribe = () => {\n      // We need to capture the connection before\n      // we reset (if we need to reset).\n      const conn = connection;\n      reset();\n      conn?.unsubscribe();\n    };\n\n    return operate<T, T>((source, subscriber) => {\n      refCount++;\n      if (!hasErrored && !hasCompleted) {\n        cancelReset();\n      }\n\n      // Create the subject if we don't have one yet. Grab a local reference to\n      // it as well, which avoids non-null assertations when using it and, if we\n      // connect to it now, then error/complete need a reference after it was\n      // reset.\n      const dest = (subject = subject ?? connector());\n\n      // Add the finalization directly to the subscriber - instead of returning it -\n      // so that the handling of the subscriber's unsubscription will be wired\n      // up _before_ the subscription to the source occurs. This is done so that\n      // the assignment to the source connection's `closed` property will be seen\n      // by synchronous firehose sources.\n      subscriber.add(() => {\n        refCount--;\n\n        // If we're resetting on refCount === 0, and it's 0, we only want to do\n        // that on \"unsubscribe\", really. Resetting on error or completion is a different\n        // configuration.\n        if (refCount === 0 && !hasErrored && !hasCompleted) {\n          resetConnection = handleReset(resetAndUnsubscribe, resetOnRefCountZero);\n        }\n      });\n\n      // The following line adds the subscription to the subscriber passed.\n      // Basically, `subscriber === dest.subscribe(subscriber)` is `true`.\n      dest.subscribe(subscriber);\n\n      if (\n        !connection &&\n        // Check this shareReplay is still activate - it can be reset to 0\n        // and be \"unsubscribed\" _before_ it actually subscribes.\n        // If we were to subscribe then, it'd leak and get stuck.\n        refCount > 0\n      ) {\n        // We need to create a subscriber here - rather than pass an observer and\n        // assign the returned subscription to connection - because it's possible\n        // for reentrant subscriptions to the shared observable to occur and in\n        // those situations we want connection to be already-assigned so that we\n        // don't create another connection to the source.\n        connection = new SafeSubscriber({\n          next: (value) => dest.next(value),\n          error: (err) => {\n            hasErrored = true;\n            cancelReset();\n            resetConnection = handleReset(reset, resetOnError, err);\n            dest.error(err);\n          },\n          complete: () => {\n            hasCompleted = true;\n            cancelReset();\n            resetConnection = handleReset(reset, resetOnComplete);\n            dest.complete();\n          },\n        });\n        innerFrom(source).subscribe(connection);\n      }\n    })(wrapperSource);\n  };\n}\n\nfunction handleReset<T extends unknown[] = never[]>(\n  reset: () => void,\n  on: boolean | ((...args: T) => Observable<any>),\n  ...args: T\n): Subscription | undefined {\n  if (on === true) {\n    reset();\n    return;\n  }\n\n  if (on === false) {\n    return;\n  }\n\n  const onSubscriber = new SafeSubscriber({\n    next: () => {\n      onSubscriber.unsubscribe();\n      reset();\n    },\n  });\n\n  return on(...args).subscribe(onSubscriber);\n}\n","import { ReplaySubject } from '../ReplaySubject';\nimport { MonoTypeOperatorFunction, SchedulerLike } from '../types';\nimport { share } from './share';\n\nexport interface ShareReplayConfig {\n  bufferSize?: number;\n  windowTime?: number;\n  refCount: boolean;\n  scheduler?: SchedulerLike;\n}\n\nexport function shareReplay<T>(config: ShareReplayConfig): MonoTypeOperatorFunction<T>;\nexport function shareReplay<T>(bufferSize?: number, windowTime?: number, scheduler?: SchedulerLike): MonoTypeOperatorFunction<T>;\n\n/**\n * Share source and replay specified number of emissions on subscription.\n *\n * This operator is a specialization of `replay` that connects to a source observable\n * and multicasts through a `ReplaySubject` constructed with the specified arguments.\n * A successfully completed source will stay cached in the `shareReplayed observable` forever,\n * but an errored source can be retried.\n *\n * ## Why use shareReplay?\n * You generally want to use `shareReplay` when you have side-effects or taxing computations\n * that you do not wish to be executed amongst multiple subscribers.\n * It may also be valuable in situations where you know you will have late subscribers to\n * a stream that need access to previously emitted values.\n * This ability to replay values on subscription is what differentiates {@link share} and `shareReplay`.\n *\n * ![](shareReplay.png)\n *\n * ## Reference counting\n * By default `shareReplay` will use `refCount` of false, meaning that it will _not_ unsubscribe the\n * source when the reference counter drops to zero, i.e. the inner `ReplaySubject` will _not_ be unsubscribed\n * (and potentially run for ever).\n * This is the default as it is expected that `shareReplay` is often used to keep around expensive to setup\n * observables which we want to keep running instead of having to do the expensive setup again.\n *\n * As of RXJS version 6.4.0 a new overload signature was added to allow for manual control over what\n * happens when the operators internal reference counter drops to zero.\n * If `refCount` is true, the source will be unsubscribed from once the reference count drops to zero, i.e.\n * the inner `ReplaySubject` will be unsubscribed. All new subscribers will receive value emissions from a\n * new `ReplaySubject` which in turn will cause a new subscription to the source observable.\n *\n * ## Examples\n *\n * Example with a third subscriber coming late to the party\n *\n * ```ts\n * import { interval, take, shareReplay } from 'rxjs';\n *\n * const shared$ = interval(2000).pipe(\n *   take(6),\n *   shareReplay(3)\n * );\n *\n * shared$.subscribe(x => console.log('sub A: ', x));\n * shared$.subscribe(y => console.log('sub B: ', y));\n *\n * setTimeout(() => {\n *   shared$.subscribe(y => console.log('sub C: ', y));\n * }, 11000);\n *\n * // Logs:\n * // (after ~2000 ms)\n * // sub A: 0\n * // sub B: 0\n * // (after ~4000 ms)\n * // sub A: 1\n * // sub B: 1\n * // (after ~6000 ms)\n * // sub A: 2\n * // sub B: 2\n * // (after ~8000 ms)\n * // sub A: 3\n * // sub B: 3\n * // (after ~10000 ms)\n * // sub A: 4\n * // sub B: 4\n * // (after ~11000 ms, sub C gets the last 3 values)\n * // sub C: 2\n * // sub C: 3\n * // sub C: 4\n * // (after ~12000 ms)\n * // sub A: 5\n * // sub B: 5\n * // sub C: 5\n * ```\n *\n * Example for `refCount` usage\n *\n * ```ts\n * import { Observable, tap, interval, shareReplay, take } from 'rxjs';\n *\n * const log = <T>(name: string, source: Observable<T>) => source.pipe(\n *   tap({\n *     subscribe: () => console.log(`${ name }: subscribed`),\n *     next: value => console.log(`${ name }: ${ value }`),\n *     complete: () => console.log(`${ name }: completed`),\n *     finalize: () => console.log(`${ name }: unsubscribed`)\n *   })\n * );\n *\n * const obs$ = log('source', interval(1000));\n *\n * const shared$ = log('shared', obs$.pipe(\n *   shareReplay({ bufferSize: 1, refCount: true }),\n *   take(2)\n * ));\n *\n * shared$.subscribe(x => console.log('sub A: ', x));\n * shared$.subscribe(y => console.log('sub B: ', y));\n *\n * // PRINTS:\n * // shared: subscribed <-- reference count = 1\n * // source: subscribed\n * // shared: subscribed <-- reference count = 2\n * // source: 0\n * // shared: 0\n * // sub A: 0\n * // shared: 0\n * // sub B: 0\n * // source: 1\n * // shared: 1\n * // sub A: 1\n * // shared: completed <-- take(2) completes the subscription for sub A\n * // shared: unsubscribed <-- reference count = 1\n * // shared: 1\n * // sub B: 1\n * // shared: completed <-- take(2) completes the subscription for sub B\n * // shared: unsubscribed <-- reference count = 0\n * // source: unsubscribed <-- replaySubject unsubscribes from source observable because the reference count dropped to 0 and refCount is true\n *\n * // In case of refCount being false, the unsubscribe is never called on the source and the source would keep on emitting, even if no subscribers\n * // are listening.\n * // source: 2\n * // source: 3\n * // source: 4\n * // ...\n * ```\n *\n * @see {@link publish}\n * @see {@link share}\n * @see {@link publishReplay}\n *\n * @param {Number} [bufferSize=Infinity] Maximum element count of the replay buffer.\n * @param {Number} [windowTime=Infinity] Maximum time length of the replay buffer in milliseconds.\n * @param {Scheduler} [scheduler] Scheduler where connected observers within the selector function\n * will be invoked on.\n * @return A function that returns an Observable sequence that contains the\n * elements of a sequence produced by multicasting the source sequence within a\n * selector function.\n */\nexport function shareReplay<T>(\n  configOrBufferSize?: ShareReplayConfig | number,\n  windowTime?: number,\n  scheduler?: SchedulerLike\n): MonoTypeOperatorFunction<T> {\n  let bufferSize: number;\n  let refCount = false;\n  if (configOrBufferSize && typeof configOrBufferSize === 'object') {\n    ({ bufferSize = Infinity, windowTime = Infinity, refCount = false, scheduler } = configOrBufferSize);\n  } else {\n    bufferSize = (configOrBufferSize ?? Infinity) as number;\n  }\n  return share<T>({\n    connector: () => new ReplaySubject(bufferSize, windowTime, scheduler),\n    resetOnError: true,\n    resetOnComplete: false,\n    resetOnRefCountZero: refCount,\n  });\n}\n","import { Observable } from '../Observable';\nimport { EmptyError } from '../util/EmptyError';\n\nimport { MonoTypeOperatorFunction, OperatorFunction, TruthyTypesOf } from '../types';\nimport { SequenceError } from '../util/SequenceError';\nimport { NotFoundError } from '../util/NotFoundError';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\n\nexport function single<T>(predicate: BooleanConstructor): OperatorFunction<T, TruthyTypesOf<T>>;\nexport function single<T>(predicate?: (value: T, index: number, source: Observable<T>) => boolean): MonoTypeOperatorFunction<T>;\n\n/**\n * Returns an observable that asserts that only one value is\n * emitted from the observable that matches the predicate. If no\n * predicate is provided, then it will assert that the observable\n * only emits one value.\n *\n * In the event that the observable is empty, it will throw an\n * {@link EmptyError}.\n *\n * In the event that two values are found that match the predicate,\n * or when there are two values emitted and no predicate, it will\n * throw a {@link SequenceError}\n *\n * In the event that no values match the predicate, if one is provided,\n * it will throw a {@link NotFoundError}\n *\n * ## Example\n *\n * Expect only `name` beginning with `'B'`\n *\n * ```ts\n * import { of, single } from 'rxjs';\n *\n * const source1 = of(\n *  { name: 'Ben' },\n *  { name: 'Tracy' },\n *  { name: 'Laney' },\n *  { name: 'Lily' }\n * );\n *\n * source1\n *   .pipe(single(x => x.name.startsWith('B')))\n *   .subscribe(x => console.log(x));\n * // Emits 'Ben'\n *\n *\n * const source2 = of(\n *  { name: 'Ben' },\n *  { name: 'Tracy' },\n *  { name: 'Bradley' },\n *  { name: 'Lincoln' }\n * );\n *\n * source2\n *   .pipe(single(x => x.name.startsWith('B')))\n *   .subscribe({ error: err => console.error(err) });\n * // Error emitted: SequenceError('Too many values match')\n *\n *\n * const source3 = of(\n *  { name: 'Laney' },\n *  { name: 'Tracy' },\n *  { name: 'Lily' },\n *  { name: 'Lincoln' }\n * );\n *\n * source3\n *   .pipe(single(x => x.name.startsWith('B')))\n *   .subscribe({ error: err => console.error(err) });\n * // Error emitted: NotFoundError('No values match')\n * ```\n *\n * @see {@link first}\n * @see {@link find}\n * @see {@link findIndex}\n * @see {@link elementAt}\n *\n * @throws {NotFoundError} Delivers an NotFoundError to the Observer's `error`\n * callback if the Observable completes before any `next` notification was sent.\n * @throws {SequenceError} Delivers a SequenceError if more than one value is emitted that matches the\n * provided predicate. If no predicate is provided, will deliver a SequenceError if more\n * than one value comes from the source\n * @param {Function} predicate - A predicate function to evaluate items emitted by the source Observable.\n * @return A function that returns an Observable that emits the single item\n * emitted by the source Observable that matches the predicate.\n */\nexport function single<T>(predicate?: (value: T, index: number, source: Observable<T>) => boolean): MonoTypeOperatorFunction<T> {\n  return operate((source, subscriber) => {\n    let hasValue = false;\n    let singleValue: T;\n    let seenValue = false;\n    let index = 0;\n    source.subscribe(\n      createOperatorSubscriber(\n        subscriber,\n        (value) => {\n          seenValue = true;\n          if (!predicate || predicate(value, index++, source)) {\n            hasValue && subscriber.error(new SequenceError('Too many matching values'));\n            hasValue = true;\n            singleValue = value;\n          }\n        },\n        () => {\n          if (hasValue) {\n            subscriber.next(singleValue);\n            subscriber.complete();\n          } else {\n            subscriber.error(seenValue ? new NotFoundError('No matching values') : new EmptyError());\n          }\n        }\n      )\n    );\n  });\n}\n","import { MonoTypeOperatorFunction } from '../types';\nimport { filter } from './filter';\n\n/**\n * Returns an Observable that skips the first `count` items emitted by the source Observable.\n *\n * ![](skip.png)\n *\n * Skips the values until the sent notifications are equal or less than provided skip count. It raises\n * an error if skip count is equal or more than the actual number of emits and source raises an error.\n *\n * ## Example\n *\n * Skip the values before the emission\n *\n * ```ts\n * import { interval, skip } from 'rxjs';\n *\n * // emit every half second\n * const source = interval(500);\n * // skip the first 10 emitted values\n * const result = source.pipe(skip(10));\n *\n * result.subscribe(value => console.log(value));\n * // output: 10...11...12...13...\n * ```\n *\n * @see {@link last}\n * @see {@link skipWhile}\n * @see {@link skipUntil}\n * @see {@link skipLast}\n *\n * @param {Number} count - The number of times, items emitted by source Observable should be skipped.\n * @return A function that returns an Observable that skips the first `count`\n * values emitted by the source Observable.\n */\nexport function skip<T>(count: number): MonoTypeOperatorFunction<T> {\n  return filter((_, index) => count <= index);\n}\n","import { MonoTypeOperatorFunction } from '../types';\nimport { identity } from '../util/identity';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\n\n/**\n * Skip a specified number of values before the completion of an observable.\n *\n * ![](skipLast.png)\n *\n * Returns an observable that will emit values as soon as it can, given a number of\n * skipped values. For example, if you `skipLast(3)` on a source, when the source\n * emits its fourth value, the first value the source emitted will finally be emitted\n * from the returned observable, as it is no longer part of what needs to be skipped.\n *\n * All values emitted by the result of `skipLast(N)` will be delayed by `N` emissions,\n * as each value is held in a buffer until enough values have been emitted that that\n * the buffered value may finally be sent to the consumer.\n *\n * After subscribing, unsubscribing will not result in the emission of the buffered\n * skipped values.\n *\n * ## Example\n *\n * Skip the last 2 values of an observable with many values\n *\n * ```ts\n * import { of, skipLast } from 'rxjs';\n *\n * const numbers = of(1, 2, 3, 4, 5);\n * const skipLastTwo = numbers.pipe(skipLast(2));\n * skipLastTwo.subscribe(x => console.log(x));\n *\n * // Results in:\n * // 1 2 3\n * // (4 and 5 are skipped)\n * ```\n *\n * @see {@link skip}\n * @see {@link skipUntil}\n * @see {@link skipWhile}\n * @see {@link take}\n *\n * @param skipCount Number of elements to skip from the end of the source Observable.\n * @return A function that returns an Observable that skips the last `count`\n * values emitted by the source Observable.\n */\nexport function skipLast<T>(skipCount: number): MonoTypeOperatorFunction<T> {\n  return skipCount <= 0\n    ? // For skipCounts less than or equal to zero, we are just mirroring the source.\n      identity\n    : operate((source, subscriber) => {\n        // A ring buffer to hold the values while we wait to see\n        // if we can emit it or it's part of the \"skipped\" last values.\n        // Note that it is the _same size_ as the skip count.\n        let ring: T[] = new Array(skipCount);\n        // The number of values seen so far. This is used to get\n        // the index of the current value when it arrives.\n        let seen = 0;\n        source.subscribe(\n          createOperatorSubscriber(subscriber, (value) => {\n            // Get the index of the value we have right now\n            // relative to all other values we've seen, then\n            // increment `seen`. This ensures we've moved to\n            // the next slot in our ring buffer.\n            const valueIndex = seen++;\n            if (valueIndex < skipCount) {\n              // If we haven't seen enough values to fill our buffer yet,\n              // Then we aren't to a number of seen values where we can\n              // emit anything, so let's just start by filling the ring buffer.\n              ring[valueIndex] = value;\n            } else {\n              // We are traversing over the ring array in such\n              // a way that when we get to the end, we loop back\n              // and go to the start.\n              const index = valueIndex % skipCount;\n              // Pull the oldest value out so we can emit it,\n              // and stuff the new value in it's place.\n              const oldValue = ring[index];\n              ring[index] = value;\n              // Emit the old value. It is important that this happens\n              // after we swap the value in the buffer, if it happens\n              // before we swap the value in the buffer, then a synchronous\n              // source can get the buffer out of whack.\n              subscriber.next(oldValue);\n            }\n          })\n        );\n\n        return () => {\n          // Release our values in memory\n          ring = null!;\n        };\n      });\n}\n","import { Observable } from '../Observable';\nimport { MonoTypeOperatorFunction } from '../types';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nimport { innerFrom } from '../observable/innerFrom';\nimport { noop } from '../util/noop';\n\n/**\n * Returns an Observable that skips items emitted by the source Observable until a second Observable emits an item.\n *\n * The `skipUntil` operator causes the observable stream to skip the emission of values until the passed in observable emits the first value.\n * This can be particularly useful in combination with user interactions, responses of http requests or waiting for specific times to pass by.\n *\n * ![](skipUntil.png)\n *\n * Internally the `skipUntil` operator subscribes to the passed in observable (in the following called *notifier*) in order to recognize the emission\n * of its first value. When this happens, the operator unsubscribes from the *notifier* and starts emitting the values of the *source*\n * observable. It will never let the *source* observable emit any values if the *notifier* completes or throws an error without emitting\n * a value before.\n *\n * ## Example\n *\n * In the following example, all emitted values of the interval observable are skipped until the user clicks anywhere within the page\n *\n * ```ts\n * import { interval, fromEvent, skipUntil } from 'rxjs';\n *\n * const intervalObservable = interval(1000);\n * const click = fromEvent(document, 'click');\n *\n * const emitAfterClick = intervalObservable.pipe(\n *   skipUntil(click)\n * );\n * // clicked at 4.6s. output: 5...6...7...8........ or\n * // clicked at 7.3s. output: 8...9...10..11.......\n * emitAfterClick.subscribe(value => console.log(value));\n * ```\n *\n * @see {@link last}\n * @see {@link skip}\n * @see {@link skipWhile}\n * @see {@link skipLast}\n *\n * @param {Observable} notifier - The second Observable that has to emit an item before the source Observable's elements begin to\n * be mirrored by the resulting Observable.\n * @return A function that returns an Observable that skips items from the\n * source Observable until the second Observable emits an item, then emits the\n * remaining items.\n */\nexport function skipUntil<T>(notifier: Observable<any>): MonoTypeOperatorFunction<T> {\n  return operate((source, subscriber) => {\n    let taking = false;\n\n    const skipSubscriber = createOperatorSubscriber(\n      subscriber,\n      () => {\n        skipSubscriber?.unsubscribe();\n        taking = true;\n      },\n      noop\n    );\n\n    innerFrom(notifier).subscribe(skipSubscriber);\n\n    source.subscribe(createOperatorSubscriber(subscriber, (value) => taking && subscriber.next(value)));\n  });\n}\n","import { Falsy, MonoTypeOperatorFunction, OperatorFunction } from '../types';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\n\nexport function skipWhile<T>(predicate: BooleanConstructor): OperatorFunction<T, Extract<T, Falsy> extends never ? never : T>;\nexport function skipWhile<T>(predicate: (value: T, index: number) => true): OperatorFunction<T, never>;\nexport function skipWhile<T>(predicate: (value: T, index: number) => boolean): MonoTypeOperatorFunction<T>;\n\n/**\n * Returns an Observable that skips all items emitted by the source Observable as long as a specified condition holds\n * true, but emits all further source items as soon as the condition becomes false.\n *\n * ![](skipWhile.png)\n *\n * Skips all the notifications with a truthy predicate. It will not skip the notifications when the predicate is falsy.\n * It can also be skipped using index. Once the predicate is true, it will not be called again.\n *\n * ## Example\n *\n * Skip some super heroes\n *\n * ```ts\n * import { from, skipWhile } from 'rxjs';\n *\n * const source = from(['Green Arrow', 'SuperMan', 'Flash', 'SuperGirl', 'Black Canary'])\n * // Skip the heroes until SuperGirl\n * const example = source.pipe(skipWhile(hero => hero !== 'SuperGirl'));\n * // output: SuperGirl, Black Canary\n * example.subscribe(femaleHero => console.log(femaleHero));\n * ```\n *\n * Skip values from the array until index 5\n *\n * ```ts\n * import { from, skipWhile } from 'rxjs';\n *\n * const source = from([1, 2, 3, 4, 5, 6, 7, 9, 10]);\n * const example = source.pipe(skipWhile((_, i) => i !== 5));\n * // output: 6, 7, 9, 10\n * example.subscribe(value => console.log(value));\n * ```\n *\n * @see {@link last}\n * @see {@link skip}\n * @see {@link skipUntil}\n * @see {@link skipLast}\n *\n * @param {Function} predicate - A function to test each item emitted from the source Observable.\n * @return A function that returns an Observable that begins emitting items\n * emitted by the source Observable when the specified predicate becomes false.\n */\nexport function skipWhile<T>(predicate: (value: T, index: number) => boolean): MonoTypeOperatorFunction<T> {\n  return operate((source, subscriber) => {\n    let taking = false;\n    let index = 0;\n    source.subscribe(\n      createOperatorSubscriber(subscriber, (value) => (taking || (taking = !predicate(value, index++))) && subscriber.next(value))\n    );\n  });\n}\n","import { concat } from '../observable/concat';\nimport { OperatorFunction, SchedulerLike, ValueFromArray } from '../types';\nimport { popScheduler } from '../util/args';\nimport { operate } from '../util/lift';\n\n// Devs are more likely to pass null or undefined than they are a scheduler\n// without accompanying values. To make things easier for (naughty) devs who\n// use the `strictNullChecks: false` TypeScript compiler option, these\n// overloads with explicit null and undefined values are included.\n\nexport function startWith<T>(value: null): OperatorFunction<T, T | null>;\nexport function startWith<T>(value: undefined): OperatorFunction<T, T | undefined>;\n\n/** @deprecated The `scheduler` parameter will be removed in v8. Use `scheduled` and `concatAll`. Details: https://rxjs.dev/deprecations/scheduler-argument */\nexport function startWith<T, A extends readonly unknown[] = T[]>(\n  ...valuesAndScheduler: [...A, SchedulerLike]\n): OperatorFunction<T, T | ValueFromArray<A>>;\nexport function startWith<T, A extends readonly unknown[] = T[]>(...values: A): OperatorFunction<T, T | ValueFromArray<A>>;\n\n/**\n * Returns an observable that, at the moment of subscription, will synchronously emit all\n * values provided to this operator, then subscribe to the source and mirror all of its emissions\n * to subscribers.\n *\n * This is a useful way to know when subscription has occurred on an existing observable.\n *\n * <span class=\"informal\">First emits its arguments in order, and then any\n * emissions from the source.</span>\n *\n * ![](startWith.png)\n *\n * ## Examples\n *\n * Emit a value when a timer starts.\n *\n * ```ts\n * import { timer, map, startWith } from 'rxjs';\n *\n * timer(1000)\n *   .pipe(\n *     map(() => 'timer emit'),\n *     startWith('timer start')\n *   )\n *   .subscribe(x => console.log(x));\n *\n * // results:\n * // 'timer start'\n * // 'timer emit'\n * ```\n *\n * @param values Items you want the modified Observable to emit first.\n * @return A function that returns an Observable that synchronously emits\n * provided values before subscribing to the source Observable.\n *\n * @see {@link endWith}\n * @see {@link finalize}\n * @see {@link concat}\n */\nexport function startWith<T, D>(...values: D[]): OperatorFunction<T, T | D> {\n  const scheduler = popScheduler(values);\n  return operate((source, subscriber) => {\n    // Here we can't pass `undefined` as a scheduler, because if we did, the\n    // code inside of `concat` would be confused by the `undefined`, and treat it\n    // like an invalid observable. So we have to split it two different ways.\n    (scheduler ? concat(values, source, scheduler) : concat(values, source)).subscribe(subscriber);\n  });\n}\n","import { MonoTypeOperatorFunction, SchedulerLike } from '../types';\nimport { operate } from '../util/lift';\n\n/**\n * Asynchronously subscribes Observers to this Observable on the specified {@link SchedulerLike}.\n *\n * With `subscribeOn` you can decide what type of scheduler a specific Observable will be using when it is subscribed to.\n *\n * Schedulers control the speed and order of emissions to observers from an Observable stream.\n *\n * ![](subscribeOn.png)\n *\n * ## Example\n *\n * Given the following code:\n *\n * ```ts\n * import { of, merge } from 'rxjs';\n *\n * const a = of(1, 2, 3);\n * const b = of(4, 5, 6);\n *\n * merge(a, b).subscribe(console.log);\n *\n * // Outputs\n * // 1\n * // 2\n * // 3\n * // 4\n * // 5\n * // 6\n * ```\n *\n * Both Observable `a` and `b` will emit their values directly and synchronously once they are subscribed to.\n *\n * If we instead use the `subscribeOn` operator declaring that we want to use the {@link asyncScheduler} for values emitted by Observable `a`:\n *\n * ```ts\n * import { of, subscribeOn, asyncScheduler, merge } from 'rxjs';\n *\n * const a = of(1, 2, 3).pipe(subscribeOn(asyncScheduler));\n * const b = of(4, 5, 6);\n *\n * merge(a, b).subscribe(console.log);\n *\n * // Outputs\n * // 4\n * // 5\n * // 6\n * // 1\n * // 2\n * // 3\n * ```\n *\n * The reason for this is that Observable `b` emits its values directly and synchronously like before\n * but the emissions from `a` are scheduled on the event loop because we are now using the {@link asyncScheduler} for that specific Observable.\n *\n * @param scheduler The {@link SchedulerLike} to perform subscription actions on.\n * @param delay A delay to pass to the scheduler to delay subscriptions\n * @return A function that returns an Observable modified so that its\n * subscriptions happen on the specified {@link SchedulerLike}.\n */\nexport function subscribeOn<T>(scheduler: SchedulerLike, delay: number = 0): MonoTypeOperatorFunction<T> {\n  return operate((source, subscriber) => {\n    subscriber.add(scheduler.schedule(() => source.subscribe(subscriber), delay));\n  });\n}\n","import { OperatorFunction, ObservableInput, ObservedValueOf } from '../types';\nimport { switchMap } from './switchMap';\nimport { identity } from '../util/identity';\n\n/**\n * Converts a higher-order Observable into a first-order Observable\n * producing values only from the most recent observable sequence\n *\n * <span class=\"informal\">Flattens an Observable-of-Observables.</span>\n *\n * ![](switchAll.png)\n *\n * `switchAll` subscribes to a source that is an observable of observables, also known as a\n * \"higher-order observable\" (or `Observable<Observable<T>>`). It subscribes to the most recently\n * provided \"inner observable\" emitted by the source, unsubscribing from any previously subscribed\n * to inner observable, such that only the most recent inner observable may be subscribed to at\n * any point in time. The resulting observable returned by `switchAll` will only complete if the\n * source observable completes, *and* any currently subscribed to inner observable also has completed,\n * if there are any.\n *\n * ## Examples\n *\n * Spawn a new interval observable for each click event, but for every new\n * click, cancel the previous interval and subscribe to the new one\n *\n * ```ts\n * import { fromEvent, tap, map, interval, switchAll } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click').pipe(tap(() => console.log('click')));\n * const source = clicks.pipe(map(() => interval(1000)));\n *\n * source\n *   .pipe(switchAll())\n *   .subscribe(x => console.log(x));\n *\n * // Output\n * // click\n * // 0\n * // 1\n * // 2\n * // 3\n * // ...\n * // click\n * // 0\n * // 1\n * // 2\n * // ...\n * // click\n * // ...\n * ```\n *\n * @see {@link combineLatestAll}\n * @see {@link concatAll}\n * @see {@link exhaustAll}\n * @see {@link switchMap}\n * @see {@link switchMapTo}\n * @see {@link mergeAll}\n *\n * @return A function that returns an Observable that converts a higher-order\n * Observable into a first-order Observable producing values only from the most\n * recent Observable sequence.\n */\nexport function switchAll<O extends ObservableInput<any>>(): OperatorFunction<O, ObservedValueOf<O>> {\n  return switchMap(identity);\n}\n","import { Subscriber } from '../Subscriber';\nimport { ObservableInput, OperatorFunction, ObservedValueOf } from '../types';\nimport { innerFrom } from '../observable/innerFrom';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\n\n/* tslint:disable:max-line-length */\nexport function switchMap<T, O extends ObservableInput<any>>(\n  project: (value: T, index: number) => O\n): OperatorFunction<T, ObservedValueOf<O>>;\n/** @deprecated The `resultSelector` parameter will be removed in v8. Use an inner `map` instead. Details: https://rxjs.dev/deprecations/resultSelector */\nexport function switchMap<T, O extends ObservableInput<any>>(\n  project: (value: T, index: number) => O,\n  resultSelector: undefined\n): OperatorFunction<T, ObservedValueOf<O>>;\n/** @deprecated The `resultSelector` parameter will be removed in v8. Use an inner `map` instead. Details: https://rxjs.dev/deprecations/resultSelector */\nexport function switchMap<T, R, O extends ObservableInput<any>>(\n  project: (value: T, index: number) => O,\n  resultSelector: (outerValue: T, innerValue: ObservedValueOf<O>, outerIndex: number, innerIndex: number) => R\n): OperatorFunction<T, R>;\n/* tslint:enable:max-line-length */\n\n/**\n * Projects each source value to an Observable which is merged in the output\n * Observable, emitting values only from the most recently projected Observable.\n *\n * <span class=\"informal\">Maps each value to an Observable, then flattens all of\n * these inner Observables.</span>\n *\n * ![](switchMap.png)\n *\n * Returns an Observable that emits items based on applying a function that you\n * supply to each item emitted by the source Observable, where that function\n * returns an (so-called \"inner\") Observable. Each time it observes one of these\n * inner Observables, the output Observable begins emitting the items emitted by\n * that inner Observable. When a new inner Observable is emitted, `switchMap`\n * stops emitting items from the earlier-emitted inner Observable and begins\n * emitting items from the new one. It continues to behave like this for\n * subsequent inner Observables.\n *\n * ## Example\n *\n * Generate new Observable according to source Observable values\n *\n * ```ts\n * import { of, switchMap } from 'rxjs';\n *\n * const switched = of(1, 2, 3).pipe(switchMap(x => of(x, x ** 2, x ** 3)));\n * switched.subscribe(x => console.log(x));\n * // outputs\n * // 1\n * // 1\n * // 1\n * // 2\n * // 4\n * // 8\n * // 3\n * // 9\n * // 27\n * ```\n *\n * Restart an interval Observable on every click event\n *\n * ```ts\n * import { fromEvent, switchMap, interval } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const result = clicks.pipe(switchMap(() => interval(1000)));\n * result.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link concatMap}\n * @see {@link exhaustMap}\n * @see {@link mergeMap}\n * @see {@link switchAll}\n * @see {@link switchMapTo}\n *\n * @param {function(value: T, index: number): ObservableInput} project A function\n * that, when applied to an item emitted by the source Observable, returns an\n * Observable.\n * @return A function that returns an Observable that emits the result of\n * applying the projection function (and the optional deprecated\n * `resultSelector`) to each item emitted by the source Observable and taking\n * only the values from the most recently projected inner Observable.\n */\nexport function switchMap<T, R, O extends ObservableInput<any>>(\n  project: (value: T, index: number) => O,\n  resultSelector?: (outerValue: T, innerValue: ObservedValueOf<O>, outerIndex: number, innerIndex: number) => R\n): OperatorFunction<T, ObservedValueOf<O> | R> {\n  return operate((source, subscriber) => {\n    let innerSubscriber: Subscriber<ObservedValueOf<O>> | null = null;\n    let index = 0;\n    // Whether or not the source subscription has completed\n    let isComplete = false;\n\n    // We only complete the result if the source is complete AND we don't have an active inner subscription.\n    // This is called both when the source completes and when the inners complete.\n    const checkComplete = () => isComplete && !innerSubscriber && subscriber.complete();\n\n    source.subscribe(\n      createOperatorSubscriber(\n        subscriber,\n        (value) => {\n          // Cancel the previous inner subscription if there was one\n          innerSubscriber?.unsubscribe();\n          let innerIndex = 0;\n          const outerIndex = index++;\n          // Start the next inner subscription\n          innerFrom(project(value, outerIndex)).subscribe(\n            (innerSubscriber = createOperatorSubscriber(\n              subscriber,\n              // When we get a new inner value, next it through. Note that this is\n              // handling the deprecate result selector here. This is because with this architecture\n              // it ends up being smaller than using the map operator.\n              (innerValue) => subscriber.next(resultSelector ? resultSelector(value, innerValue, outerIndex, innerIndex++) : innerValue),\n              () => {\n                // The inner has completed. Null out the inner subcriber to\n                // free up memory and to signal that we have no inner subscription\n                // currently.\n                innerSubscriber = null!;\n                checkComplete();\n              }\n            ))\n          );\n        },\n        () => {\n          isComplete = true;\n          checkComplete();\n        }\n      )\n    );\n  });\n}\n","import { switchMap } from './switchMap';\nimport { ObservableInput, OperatorFunction, ObservedValueOf } from '../types';\nimport { isFunction } from '../util/isFunction';\n\n/** @deprecated Will be removed in v9. Use {@link switchMap} instead: `switchMap(() => result)` */\nexport function switchMapTo<O extends ObservableInput<unknown>>(observable: O): OperatorFunction<unknown, ObservedValueOf<O>>;\n/** @deprecated The `resultSelector` parameter will be removed in v8. Use an inner `map` instead. Details: https://rxjs.dev/deprecations/resultSelector */\nexport function switchMapTo<O extends ObservableInput<unknown>>(\n  observable: O,\n  resultSelector: undefined\n): OperatorFunction<unknown, ObservedValueOf<O>>;\n/** @deprecated The `resultSelector` parameter will be removed in v8. Use an inner `map` instead. Details: https://rxjs.dev/deprecations/resultSelector */\nexport function switchMapTo<T, R, O extends ObservableInput<unknown>>(\n  observable: O,\n  resultSelector: (outerValue: T, innerValue: ObservedValueOf<O>, outerIndex: number, innerIndex: number) => R\n): OperatorFunction<T, R>;\n\n/**\n * Projects each source value to the same Observable which is flattened multiple\n * times with {@link switchMap} in the output Observable.\n *\n * <span class=\"informal\">It's like {@link switchMap}, but maps each value\n * always to the same inner Observable.</span>\n *\n * ![](switchMapTo.png)\n *\n * Maps each source value to the given Observable `innerObservable` regardless\n * of the source value, and then flattens those resulting Observables into one\n * single Observable, which is the output Observable. The output Observables\n * emits values only from the most recently emitted instance of\n * `innerObservable`.\n *\n * ## Example\n *\n * Restart an interval Observable on every click event\n *\n * ```ts\n * import { fromEvent, switchMapTo, interval } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const result = clicks.pipe(switchMapTo(interval(1000)));\n * result.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link concatMapTo}\n * @see {@link switchAll}\n * @see {@link switchMap}\n * @see {@link mergeMapTo}\n *\n * @param {ObservableInput} innerObservable An Observable to replace each value from\n * the source Observable.\n * @return A function that returns an Observable that emits items from the\n * given `innerObservable` (and optionally transformed through the deprecated\n * `resultSelector`) every time a value is emitted on the source Observable,\n * and taking only the values from the most recently projected inner\n * Observable.\n * @deprecated Will be removed in v9. Use {@link switchMap} instead: `switchMap(() => result)`\n */\nexport function switchMapTo<T, R, O extends ObservableInput<unknown>>(\n  innerObservable: O,\n  resultSelector?: (outerValue: T, innerValue: ObservedValueOf<O>, outerIndex: number, innerIndex: number) => R\n): OperatorFunction<T, ObservedValueOf<O> | R> {\n  return isFunction(resultSelector) ? switchMap(() => innerObservable, resultSelector) : switchMap(() => innerObservable);\n}\n","import { ObservableInput, ObservedValueOf, OperatorFunction } from '../types';\nimport { switchMap } from './switchMap';\nimport { operate } from '../util/lift';\n\n// TODO: Generate a marble diagram for these docs.\n\n/**\n * Applies an accumulator function over the source Observable where the\n * accumulator function itself returns an Observable, emitting values\n * only from the most recently returned Observable.\n *\n * <span class=\"informal\">It's like {@link mergeScan}, but only the most recent\n * Observable returned by the accumulator is merged into the outer Observable.</span>\n *\n * @see {@link scan}\n * @see {@link mergeScan}\n * @see {@link switchMap}\n *\n * @param accumulator\n * The accumulator function called on each source value.\n * @param seed The initial accumulation value.\n * @return A function that returns an observable of the accumulated values.\n */\nexport function switchScan<T, R, O extends ObservableInput<any>>(\n  accumulator: (acc: R, value: T, index: number) => O,\n  seed: R\n): OperatorFunction<T, ObservedValueOf<O>> {\n  return operate((source, subscriber) => {\n    // The state we will keep up to date to pass into our\n    // accumulator function at each new value from the source.\n    let state = seed;\n\n    // Use `switchMap` on our `source` to do the work of creating\n    // this operator. Note the backwards order here of `switchMap()(source)`\n    // to avoid needing to use `pipe` unnecessarily\n    switchMap(\n      // On each value from the source, call the accumulator with\n      // our previous state, the value and the index.\n      (value: T, index) => accumulator(state, value, index),\n      // Using the deprecated result selector here as a dirty trick\n      // to update our state with the flattened value.\n      (_, innerValue) => ((state = innerValue), innerValue)\n    )(source).subscribe(subscriber);\n\n    return () => {\n      // Release state on finalization\n      state = null!;\n    };\n  });\n}\n","import { MonoTypeOperatorFunction } from '../types';\nimport { EMPTY } from '../observable/empty';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\n\n/**\n * Emits only the first `count` values emitted by the source Observable.\n *\n * <span class=\"informal\">Takes the first `count` values from the source, then\n * completes.</span>\n *\n * ![](take.png)\n *\n * `take` returns an Observable that emits only the first `count` values emitted\n * by the source Observable. If the source emits fewer than `count` values then\n * all of its values are emitted. After that, it completes, regardless if the\n * source completes.\n *\n * ## Example\n *\n * Take the first 5 seconds of an infinite 1-second interval Observable\n *\n * ```ts\n * import { interval, take } from 'rxjs';\n *\n * const intervalCount = interval(1000);\n * const takeFive = intervalCount.pipe(take(5));\n * takeFive.subscribe(x => console.log(x));\n *\n * // Logs:\n * // 0\n * // 1\n * // 2\n * // 3\n * // 4\n * ```\n *\n * @see {@link takeLast}\n * @see {@link takeUntil}\n * @see {@link takeWhile}\n * @see {@link skip}\n *\n * @param count The maximum number of `next` values to emit.\n * @return A function that returns an Observable that emits only the first\n * `count` values emitted by the source Observable, or all of the values from\n * the source if the source emits fewer than `count` values.\n */\nexport function take<T>(count: number): MonoTypeOperatorFunction<T> {\n  return count <= 0\n    ? // If we are taking no values, that's empty.\n      () => EMPTY\n    : operate((source, subscriber) => {\n        let seen = 0;\n        source.subscribe(\n          createOperatorSubscriber(subscriber, (value) => {\n            // Increment the number of values we have seen,\n            // then check it against the allowed count to see\n            // if we are still letting values through.\n            if (++seen <= count) {\n              subscriber.next(value);\n              // If we have met or passed our allowed count,\n              // we need to complete. We have to do <= here,\n              // because re-entrant code will increment `seen` twice.\n              if (count <= seen) {\n                subscriber.complete();\n              }\n            }\n          })\n        );\n      });\n}\n","import { EMPTY } from '../observable/empty';\nimport { MonoTypeOperatorFunction } from '../types';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\n\n/**\n * Waits for the source to complete, then emits the last N values from the source,\n * as specified by the `count` argument.\n *\n * ![](takeLast.png)\n *\n * `takeLast` results in an observable that will hold values up to `count` values in memory,\n * until the source completes. It then pushes all values in memory to the consumer, in the\n * order they were received from the source, then notifies the consumer that it is\n * complete.\n *\n * If for some reason the source completes before the `count` supplied to `takeLast` is reached,\n * all values received until that point are emitted, and then completion is notified.\n *\n * **Warning**: Using `takeLast` with an observable that never completes will result\n * in an observable that never emits a value.\n *\n * ## Example\n *\n * Take the last 3 values of an Observable with many values\n *\n * ```ts\n * import { range, takeLast } from 'rxjs';\n *\n * const many = range(1, 100);\n * const lastThree = many.pipe(takeLast(3));\n * lastThree.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link take}\n * @see {@link takeUntil}\n * @see {@link takeWhile}\n * @see {@link skip}\n *\n * @param count The maximum number of values to emit from the end of\n * the sequence of values emitted by the source Observable.\n * @return A function that returns an Observable that emits at most the last\n * `count` values emitted by the source Observable.\n */\nexport function takeLast<T>(count: number): MonoTypeOperatorFunction<T> {\n  return count <= 0\n    ? () => EMPTY\n    : operate((source, subscriber) => {\n        // This buffer will hold the values we are going to emit\n        // when the source completes. Since we only want to take the\n        // last N values, we can't emit until we're sure we're not getting\n        // any more values.\n        let buffer: T[] = [];\n        source.subscribe(\n          createOperatorSubscriber(\n            subscriber,\n            (value) => {\n              // Add the most recent value onto the end of our buffer.\n              buffer.push(value);\n              // If our buffer is now larger than the number of values we\n              // want to take, we remove the oldest value from the buffer.\n              count < buffer.length && buffer.shift();\n            },\n            () => {\n              // The source completed, we now know what are last values\n              // are, emit them in the order they were received.\n              for (const value of buffer) {\n                subscriber.next(value);\n              }\n              subscriber.complete();\n            },\n            // Errors are passed through to the consumer\n            undefined,\n            () => {\n              // During finalization release the values in our buffer.\n              buffer = null!;\n            }\n          )\n        );\n      });\n}\n","import { MonoTypeOperatorFunction, ObservableInput } from '../types';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nimport { innerFrom } from '../observable/innerFrom';\nimport { noop } from '../util/noop';\n\n/**\n * Emits the values emitted by the source Observable until a `notifier`\n * Observable emits a value.\n *\n * <span class=\"informal\">Lets values pass until a second Observable,\n * `notifier`, emits a value. Then, it completes.</span>\n *\n * ![](takeUntil.png)\n *\n * `takeUntil` subscribes and begins mirroring the source Observable. It also\n * monitors a second Observable, `notifier` that you provide. If the `notifier`\n * emits a value, the output Observable stops mirroring the source Observable\n * and completes. If the `notifier` doesn't emit any value and completes\n * then `takeUntil` will pass all values.\n *\n * ## Example\n *\n * Tick every second until the first click happens\n *\n * ```ts\n * import { interval, fromEvent, takeUntil } from 'rxjs';\n *\n * const source = interval(1000);\n * const clicks = fromEvent(document, 'click');\n * const result = source.pipe(takeUntil(clicks));\n * result.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link take}\n * @see {@link takeLast}\n * @see {@link takeWhile}\n * @see {@link skip}\n *\n * @param {Observable} notifier The Observable whose first emitted value will\n * cause the output Observable of `takeUntil` to stop emitting values from the\n * source Observable.\n * @return A function that returns an Observable that emits the values from the\n * source Observable until `notifier` emits its first value.\n */\nexport function takeUntil<T>(notifier: ObservableInput<any>): MonoTypeOperatorFunction<T> {\n  return operate((source, subscriber) => {\n    innerFrom(notifier).subscribe(createOperatorSubscriber(subscriber, () => subscriber.complete(), noop));\n    !subscriber.closed && source.subscribe(subscriber);\n  });\n}\n","import { OperatorFunction, MonoTypeOperatorFunction, TruthyTypesOf } from '../types';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\n\nexport function takeWhile<T>(predicate: BooleanConstructor, inclusive: true): MonoTypeOperatorFunction<T>;\nexport function takeWhile<T>(predicate: BooleanConstructor, inclusive: false): OperatorFunction<T, TruthyTypesOf<T>>;\nexport function takeWhile<T>(predicate: BooleanConstructor): OperatorFunction<T, TruthyTypesOf<T>>;\nexport function takeWhile<T, S extends T>(predicate: (value: T, index: number) => value is S): OperatorFunction<T, S>;\nexport function takeWhile<T, S extends T>(predicate: (value: T, index: number) => value is S, inclusive: false): OperatorFunction<T, S>;\nexport function takeWhile<T>(predicate: (value: T, index: number) => boolean, inclusive?: boolean): MonoTypeOperatorFunction<T>;\n\n/**\n * Emits values emitted by the source Observable so long as each value satisfies\n * the given `predicate`, and then completes as soon as this `predicate` is not\n * satisfied.\n *\n * <span class=\"informal\">Takes values from the source only while they pass the\n * condition given. When the first value does not satisfy, it completes.</span>\n *\n * ![](takeWhile.png)\n *\n * `takeWhile` subscribes and begins mirroring the source Observable. Each value\n * emitted on the source is given to the `predicate` function which returns a\n * boolean, representing a condition to be satisfied by the source values. The\n * output Observable emits the source values until such time as the `predicate`\n * returns false, at which point `takeWhile` stops mirroring the source\n * Observable and completes the output Observable.\n *\n * ## Example\n *\n * Emit click events only while the clientX property is greater than 200\n *\n * ```ts\n * import { fromEvent, takeWhile } from 'rxjs';\n *\n * const clicks = fromEvent<PointerEvent>(document, 'click');\n * const result = clicks.pipe(takeWhile(ev => ev.clientX > 200));\n * result.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link take}\n * @see {@link takeLast}\n * @see {@link takeUntil}\n * @see {@link skip}\n *\n * @param {function(value: T, index: number): boolean} predicate A function that\n * evaluates a value emitted by the source Observable and returns a boolean.\n * Also takes the (zero-based) index as the second argument.\n * @param {boolean} inclusive When set to `true` the value that caused\n * `predicate` to return `false` will also be emitted.\n * @return A function that returns an Observable that emits values from the\n * source Observable so long as each value satisfies the condition defined by\n * the `predicate`, then completes.\n */\nexport function takeWhile<T>(predicate: (value: T, index: number) => boolean, inclusive = false): MonoTypeOperatorFunction<T> {\n  return operate((source, subscriber) => {\n    let index = 0;\n    source.subscribe(\n      createOperatorSubscriber(subscriber, (value) => {\n        const result = predicate(value, index++);\n        (result || inclusive) && subscriber.next(value);\n        !result && subscriber.complete();\n      })\n    );\n  });\n}\n","import { MonoTypeOperatorFunction, Observer } from '../types';\nimport { isFunction } from '../util/isFunction';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nimport { identity } from '../util/identity';\n\nexport interface TapObserver<T> extends Observer<T> {\n  subscribe: () => void;\n  unsubscribe: () => void;\n  finalize: () => void;\n}\n\nexport function tap<T>(observer?: Partial<TapObserver<T>>): MonoTypeOperatorFunction<T>;\nexport function tap<T>(next: (value: T) => void): MonoTypeOperatorFunction<T>;\n/** @deprecated Instead of passing separate callback arguments, use an observer argument. Signatures taking separate callback arguments will be removed in v8. Details: https://rxjs.dev/deprecations/subscribe-arguments */\nexport function tap<T>(\n  next?: ((value: T) => void) | null,\n  error?: ((error: any) => void) | null,\n  complete?: (() => void) | null\n): MonoTypeOperatorFunction<T>;\n\n/**\n * Used to perform side-effects for notifications from the source observable\n *\n * <span class=\"informal\">Used when you want to affect outside state with a notification without altering the notification</span>\n *\n * ![](tap.png)\n *\n * Tap is designed to allow the developer a designated place to perform side effects. While you _could_ perform side-effects\n * inside of a `map` or a `mergeMap`, that would make their mapping functions impure, which isn't always a big deal, but will\n * make it so you can't do things like memoize those functions. The `tap` operator is designed solely for such side-effects to\n * help you remove side-effects from other operations.\n *\n * For any notification, next, error, or complete, `tap` will call the appropriate callback you have provided to it, via a function\n * reference, or a partial observer, then pass that notification down the stream.\n *\n * The observable returned by `tap` is an exact mirror of the source, with one exception: Any error that occurs -- synchronously -- in a handler\n * provided to `tap` will be emitted as an error from the returned observable.\n *\n * > Be careful! You can mutate objects as they pass through the `tap` operator's handlers.\n *\n * The most common use of `tap` is actually for debugging. You can place a `tap(console.log)` anywhere\n * in your observable `pipe`, log out the notifications as they are emitted by the source returned by the previous\n * operation.\n *\n * ## Examples\n *\n * Check a random number before it is handled. Below is an observable that will use a random number between 0 and 1,\n * and emit `'big'` or `'small'` depending on the size of that number. But we wanted to log what the original number\n * was, so we have added a `tap(console.log)`.\n *\n * ```ts\n * import { of, tap, map } from 'rxjs';\n *\n * of(Math.random()).pipe(\n *   tap(console.log),\n *   map(n => n > 0.5 ? 'big' : 'small')\n * ).subscribe(console.log);\n * ```\n *\n * Using `tap` to analyze a value and force an error. Below is an observable where in our system we only\n * want to emit numbers 3 or less we get from another source. We can force our observable to error\n * using `tap`.\n *\n * ```ts\n * import { of, tap } from 'rxjs';\n *\n * const source = of(1, 2, 3, 4, 5);\n *\n * source.pipe(\n *   tap(n => {\n *     if (n > 3) {\n *       throw new TypeError(`Value ${ n } is greater than 3`);\n *     }\n *   })\n * )\n * .subscribe({ next: console.log, error: err => console.log(err.message) });\n * ```\n *\n * We want to know when an observable completes before moving on to the next observable. The system\n * below will emit a random series of `'X'` characters from 3 different observables in sequence. The\n * only way we know when one observable completes and moves to the next one, in this case, is because\n * we have added a `tap` with the side effect of logging to console.\n *\n * ```ts\n * import { of, concatMap, interval, take, map, tap } from 'rxjs';\n *\n * of(1, 2, 3).pipe(\n *   concatMap(n => interval(1000).pipe(\n *     take(Math.round(Math.random() * 10)),\n *     map(() => 'X'),\n *     tap({ complete: () => console.log(`Done with ${ n }`) })\n *   ))\n * )\n * .subscribe(console.log);\n * ```\n *\n * @see {@link finalize}\n * @see {@link Observable#subscribe}\n *\n * @param observerOrNext A next handler or partial observer\n * @param error An error handler\n * @param complete A completion handler\n * @return A function that returns an Observable identical to the source, but\n * runs the specified Observer or callback(s) for each item.\n */\nexport function tap<T>(\n  observerOrNext?: Partial<TapObserver<T>> | ((value: T) => void) | null,\n  error?: ((e: any) => void) | null,\n  complete?: (() => void) | null\n): MonoTypeOperatorFunction<T> {\n  // We have to check to see not only if next is a function,\n  // but if error or complete were passed. This is because someone\n  // could technically call tap like `tap(null, fn)` or `tap(null, null, fn)`.\n  const tapObserver =\n    isFunction(observerOrNext) || error || complete\n      ? // tslint:disable-next-line: no-object-literal-type-assertion\n        ({ next: observerOrNext as Exclude<typeof observerOrNext, Partial<TapObserver<T>>>, error, complete } as Partial<TapObserver<T>>)\n      : observerOrNext;\n\n  return tapObserver\n    ? operate((source, subscriber) => {\n        tapObserver.subscribe?.();\n        let isUnsub = true;\n        source.subscribe(\n          createOperatorSubscriber(\n            subscriber,\n            (value) => {\n              tapObserver.next?.(value);\n              subscriber.next(value);\n            },\n            () => {\n              isUnsub = false;\n              tapObserver.complete?.();\n              subscriber.complete();\n            },\n            (err) => {\n              isUnsub = false;\n              tapObserver.error?.(err);\n              subscriber.error(err);\n            },\n            () => {\n              if (isUnsub) {\n                tapObserver.unsubscribe?.();\n              }\n              tapObserver.finalize?.();\n            }\n          )\n        );\n      })\n    : // Tap was called with no valid tap observer or handler\n      // (e.g. `tap(null, null, null)` or `tap(null)` or `tap()`)\n      // so we're going to just mirror the source.\n      identity;\n}\n","import { Subscription } from '../Subscription';\n\nimport { MonoTypeOperatorFunction, ObservableInput } from '../types';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nimport { innerFrom } from '../observable/innerFrom';\n\nexport interface ThrottleConfig {\n  leading?: boolean;\n  trailing?: boolean;\n}\n\nexport const defaultThrottleConfig: ThrottleConfig = {\n  leading: true,\n  trailing: false,\n};\n\n/**\n * Emits a value from the source Observable, then ignores subsequent source\n * values for a duration determined by another Observable, then repeats this\n * process.\n *\n * <span class=\"informal\">It's like {@link throttleTime}, but the silencing\n * duration is determined by a second Observable.</span>\n *\n * ![](throttle.svg)\n *\n * `throttle` emits the source Observable values on the output Observable\n * when its internal timer is disabled, and ignores source values when the timer\n * is enabled. Initially, the timer is disabled. As soon as the first source\n * value arrives, it is forwarded to the output Observable, and then the timer\n * is enabled by calling the `durationSelector` function with the source value,\n * which returns the \"duration\" Observable. When the duration Observable emits a\n * value, the timer is disabled, and this process repeats for the\n * next source value.\n *\n * ## Example\n *\n * Emit clicks at a rate of at most one click per second\n *\n * ```ts\n * import { fromEvent, throttle, interval } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const result = clicks.pipe(throttle(() => interval(1000)));\n *\n * result.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link audit}\n * @see {@link debounce}\n * @see {@link delayWhen}\n * @see {@link sample}\n * @see {@link throttleTime}\n *\n * @param durationSelector A function\n * that receives a value from the source Observable, for computing the silencing\n * duration for each source value, returned as an Observable or a Promise.\n * @param config a configuration object to define `leading` and `trailing` behavior. Defaults\n * to `{ leading: true, trailing: false }`.\n * @return A function that returns an Observable that performs the throttle\n * operation to limit the rate of emissions from the source.\n */\nexport function throttle<T>(\n  durationSelector: (value: T) => ObservableInput<any>,\n  config: ThrottleConfig = defaultThrottleConfig\n): MonoTypeOperatorFunction<T> {\n  return operate((source, subscriber) => {\n    const { leading, trailing } = config;\n    let hasValue = false;\n    let sendValue: T | null = null;\n    let throttled: Subscription | null = null;\n    let isComplete = false;\n\n    const endThrottling = () => {\n      throttled?.unsubscribe();\n      throttled = null;\n      if (trailing) {\n        send();\n        isComplete && subscriber.complete();\n      }\n    };\n\n    const cleanupThrottling = () => {\n      throttled = null;\n      isComplete && subscriber.complete();\n    };\n\n    const startThrottle = (value: T) =>\n      (throttled = innerFrom(durationSelector(value)).subscribe(createOperatorSubscriber(subscriber, endThrottling, cleanupThrottling)));\n\n    const send = () => {\n      if (hasValue) {\n        // Ensure we clear out our value and hasValue flag\n        // before we emit, otherwise reentrant code can cause\n        // issues here.\n        hasValue = false;\n        const value = sendValue!;\n        sendValue = null;\n        // Emit the value.\n        subscriber.next(value);\n        !isComplete && startThrottle(value);\n      }\n    };\n\n    source.subscribe(\n      createOperatorSubscriber(\n        subscriber,\n        // Regarding the presence of throttled.closed in the following\n        // conditions, if a synchronous duration selector is specified - weird,\n        // but legal - an already-closed subscription will be assigned to\n        // throttled, so the subscription's closed property needs to be checked,\n        // too.\n        (value) => {\n          hasValue = true;\n          sendValue = value;\n          !(throttled && !throttled.closed) && (leading ? send() : startThrottle(value));\n        },\n        () => {\n          isComplete = true;\n          !(trailing && hasValue && throttled && !throttled.closed) && subscriber.complete();\n        }\n      )\n    );\n  });\n}\n","import { asyncScheduler } from '../scheduler/async';\nimport { defaultThrottleConfig, throttle } from './throttle';\nimport { MonoTypeOperatorFunction, SchedulerLike } from '../types';\nimport { timer } from '../observable/timer';\n\n/**\n * Emits a value from the source Observable, then ignores subsequent source\n * values for `duration` milliseconds, then repeats this process.\n *\n * <span class=\"informal\">Lets a value pass, then ignores source values for the\n * next `duration` milliseconds.</span>\n *\n * ![](throttleTime.png)\n *\n * `throttleTime` emits the source Observable values on the output Observable\n * when its internal timer is disabled, and ignores source values when the timer\n * is enabled. Initially, the timer is disabled. As soon as the first source\n * value arrives, it is forwarded to the output Observable, and then the timer\n * is enabled. After `duration` milliseconds (or the time unit determined\n * internally by the optional `scheduler`) has passed, the timer is disabled,\n * and this process repeats for the next source value. Optionally takes a\n * {@link SchedulerLike} for managing timers.\n *\n * ## Examples\n *\n * ### Limit click rate\n *\n * Emit clicks at a rate of at most one click per second\n *\n * ```ts\n * import { fromEvent, throttleTime } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const result = clicks.pipe(throttleTime(1000));\n *\n * result.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link auditTime}\n * @see {@link debounceTime}\n * @see {@link delay}\n * @see {@link sampleTime}\n * @see {@link throttle}\n *\n * @param duration Time to wait before emitting another value after\n * emitting the last value, measured in milliseconds or the time unit determined\n * internally by the optional `scheduler`.\n * @param scheduler The {@link SchedulerLike} to use for\n * managing the timers that handle the throttling. Defaults to {@link asyncScheduler}.\n * @param config a configuration object to define `leading` and\n * `trailing` behavior. Defaults to `{ leading: true, trailing: false }`.\n * @return A function that returns an Observable that performs the throttle\n * operation to limit the rate of emissions from the source.\n */\nexport function throttleTime<T>(\n  duration: number,\n  scheduler: SchedulerLike = asyncScheduler,\n  config = defaultThrottleConfig\n): MonoTypeOperatorFunction<T> {\n  const duration$ = timer(duration, scheduler);\n  return throttle(() => duration$, config);\n}\n","import { EmptyError } from '../util/EmptyError';\nimport { MonoTypeOperatorFunction } from '../types';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\n\n/**\n * If the source observable completes without emitting a value, it will emit\n * an error. The error will be created at that time by the optional\n * `errorFactory` argument, otherwise, the error will be {@link EmptyError}.\n *\n * ![](throwIfEmpty.png)\n *\n * ## Example\n *\n * Throw an error if the document wasn't clicked within 1 second\n *\n * ```ts\n * import { fromEvent, takeUntil, timer, throwIfEmpty } from 'rxjs';\n *\n * const click$ = fromEvent(document, 'click');\n *\n * click$.pipe(\n *   takeUntil(timer(1000)),\n *   throwIfEmpty(() => new Error('The document was not clicked within 1 second'))\n * )\n * .subscribe({\n *   next() {\n *    console.log('The document was clicked');\n *   },\n *   error(err) {\n *     console.error(err.message);\n *   }\n * });\n * ```\n *\n * @param errorFactory A factory function called to produce the\n * error to be thrown when the source observable completes without emitting a\n * value.\n * @return A function that returns an Observable that throws an error if the\n * source Observable completed without emitting.\n */\nexport function throwIfEmpty<T>(errorFactory: () => any = defaultErrorFactory): MonoTypeOperatorFunction<T> {\n  return operate((source, subscriber) => {\n    let hasValue = false;\n    source.subscribe(\n      createOperatorSubscriber(\n        subscriber,\n        (value) => {\n          hasValue = true;\n          subscriber.next(value);\n        },\n        () => (hasValue ? subscriber.complete() : subscriber.error(errorFactory()))\n      )\n    );\n  });\n}\n\nfunction defaultErrorFactory() {\n  return new EmptyError();\n}\n","import { asyncScheduler } from '../scheduler/async';\nimport { SchedulerLike, OperatorFunction } from '../types';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\n\n/**\n * Emits an object containing the current value, and the time that has\n * passed between emitting the current value and the previous value, which is\n * calculated by using the provided `scheduler`'s `now()` method to retrieve\n * the current time at each emission, then calculating the difference. The `scheduler`\n * defaults to {@link asyncScheduler}, so by default, the `interval` will be in\n * milliseconds.\n *\n * <span class=\"informal\">Convert an Observable that emits items into one that\n * emits indications of the amount of time elapsed between those emissions.</span>\n *\n * ![](timeInterval.png)\n *\n * ## Example\n *\n * Emit interval between current value with the last value\n *\n * ```ts\n * import { interval, timeInterval } from 'rxjs';\n *\n * const seconds = interval(1000);\n *\n * seconds\n *   .pipe(timeInterval())\n *   .subscribe(value => console.log(value));\n *\n * // NOTE: The values will never be this precise,\n * // intervals created with `interval` or `setInterval`\n * // are non-deterministic.\n *\n * // { value: 0, interval: 1000 }\n * // { value: 1, interval: 1000 }\n * // { value: 2, interval: 1000 }\n * ```\n *\n * @param {SchedulerLike} [scheduler] Scheduler used to get the current time.\n * @return A function that returns an Observable that emits information about\n * value and interval.\n */\nexport function timeInterval<T>(scheduler: SchedulerLike = asyncScheduler): OperatorFunction<T, TimeInterval<T>> {\n  return operate((source, subscriber) => {\n    let last = scheduler.now();\n    source.subscribe(\n      createOperatorSubscriber(subscriber, (value) => {\n        const now = scheduler.now();\n        const interval = now - last;\n        last = now;\n        subscriber.next(new TimeInterval(value, interval));\n      })\n    );\n  });\n}\n\n// TODO(benlesh): make this an interface, export the interface, but not the implemented class,\n// there's no reason users should be manually creating this type.\n\nexport class TimeInterval<T> {\n  /**\n   * @deprecated Internal implementation detail, do not construct directly. Will be made an interface in v8.\n   */\n  constructor(public value: T, public interval: number) {}\n}\n","import { asyncScheduler } from '../scheduler/async';\nimport { MonoTypeOperatorFunction, SchedulerLike, OperatorFunction, ObservableInput, ObservedValueOf } from '../types';\nimport { isValidDate } from '../util/isDate';\nimport { Subscription } from '../Subscription';\nimport { operate } from '../util/lift';\nimport { Observable } from '../Observable';\nimport { innerFrom } from '../observable/innerFrom';\nimport { createErrorClass } from '../util/createErrorClass';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nimport { executeSchedule } from '../util/executeSchedule';\n\nexport interface TimeoutConfig<T, O extends ObservableInput<unknown> = ObservableInput<T>, M = unknown> {\n  /**\n   * The time allowed between values from the source before timeout is triggered.\n   */\n  each?: number;\n\n  /**\n   * The relative time as a `number` in milliseconds, or a specific time as a `Date` object,\n   * by which the first value must arrive from the source before timeout is triggered.\n   */\n  first?: number | Date;\n\n  /**\n   * The scheduler to use with time-related operations within this operator. Defaults to {@link asyncScheduler}\n   */\n  scheduler?: SchedulerLike;\n\n  /**\n   * A factory used to create observable to switch to when timeout occurs. Provides\n   * a {@link TimeoutInfo} about the source observable's emissions and what delay or\n   * exact time triggered the timeout.\n   */\n  with?: (info: TimeoutInfo<T, M>) => O;\n\n  /**\n   * Optional additional metadata you can provide to code that handles\n   * the timeout, will be provided through the {@link TimeoutError}.\n   * This can be used to help identify the source of a timeout or pass along\n   * other information related to the timeout.\n   */\n  meta?: M;\n}\n\nexport interface TimeoutInfo<T, M = unknown> {\n  /** Optional metadata that was provided to the timeout configuration. */\n  readonly meta: M;\n  /** The number of messages seen before the timeout */\n  readonly seen: number;\n  /** The last message seen */\n  readonly lastValue: T | null;\n}\n\n/**\n * An error emitted when a timeout occurs.\n */\nexport interface TimeoutError<T = unknown, M = unknown> extends Error {\n  /**\n   * The information provided to the error by the timeout\n   * operation that created the error. Will be `null` if\n   * used directly in non-RxJS code with an empty constructor.\n   * (Note that using this constructor directly is not recommended,\n   * you should create your own errors)\n   */\n  info: TimeoutInfo<T, M> | null;\n}\n\nexport interface TimeoutErrorCtor {\n  /**\n   * @deprecated Internal implementation detail. Do not construct error instances.\n   * Cannot be tagged as internal: https://github.com/ReactiveX/rxjs/issues/6269\n   */\n  new <T = unknown, M = unknown>(info?: TimeoutInfo<T, M>): TimeoutError<T, M>;\n}\n\n/**\n * An error thrown by the {@link timeout} operator.\n *\n * Provided so users can use as a type and do quality comparisons.\n * We recommend you do not subclass this or create instances of this class directly.\n * If you have need of a error representing a timeout, you should\n * create your own error class and use that.\n *\n * @see {@link timeout}\n *\n * @class TimeoutError\n */\nexport const TimeoutError: TimeoutErrorCtor = createErrorClass(\n  (_super) =>\n    function TimeoutErrorImpl(this: any, info: TimeoutInfo<any> | null = null) {\n      _super(this);\n      this.message = 'Timeout has occurred';\n      this.name = 'TimeoutError';\n      this.info = info;\n    }\n);\n\n/**\n * If `with` is provided, this will return an observable that will switch to a different observable if the source\n * does not push values within the specified time parameters.\n *\n * <span class=\"informal\">The most flexible option for creating a timeout behavior.</span>\n *\n * The first thing to know about the configuration is if you do not provide a `with` property to the configuration,\n * when timeout conditions are met, this operator will emit a {@link TimeoutError}. Otherwise, it will use the factory\n * function provided by `with`, and switch your subscription to the result of that. Timeout conditions are provided by\n * the settings in `first` and `each`.\n *\n * The `first` property can be either a `Date` for a specific time, a `number` for a time period relative to the\n * point of subscription, or it can be skipped. This property is to check timeout conditions for the arrival of\n * the first value from the source _only_. The timings of all subsequent values  from the source will be checked\n * against the time period provided by `each`, if it was provided.\n *\n * The `each` property can be either a `number` or skipped. If a value for `each` is provided, it represents the amount of\n * time the resulting observable will wait between the arrival of values from the source before timing out. Note that if\n * `first` is _not_ provided, the value from `each` will be used to check timeout conditions for the arrival of the first\n * value and all subsequent values. If `first` _is_ provided, `each` will only be use to check all values after the first.\n *\n * ## Examples\n *\n * Emit a custom error if there is too much time between values\n *\n * ```ts\n * import { interval, timeout, throwError } from 'rxjs';\n *\n * class CustomTimeoutError extends Error {\n *   constructor() {\n *     super('It was too slow');\n *     this.name = 'CustomTimeoutError';\n *   }\n * }\n *\n * const slow$ = interval(900);\n *\n * slow$.pipe(\n *   timeout({\n *     each: 1000,\n *     with: () => throwError(() => new CustomTimeoutError())\n *   })\n * )\n * .subscribe({\n *   error: console.error\n * });\n * ```\n *\n * Switch to a faster observable if your source is slow.\n *\n * ```ts\n * import { interval, timeout } from 'rxjs';\n *\n * const slow$ = interval(900);\n * const fast$ = interval(500);\n *\n * slow$.pipe(\n *   timeout({\n *     each: 1000,\n *     with: () => fast$,\n *   })\n * )\n * .subscribe(console.log);\n * ```\n * @param config The configuration for the timeout.\n */\nexport function timeout<T, O extends ObservableInput<unknown>, M = unknown>(\n  config: TimeoutConfig<T, O, M> & { with: (info: TimeoutInfo<T, M>) => O }\n): OperatorFunction<T, T | ObservedValueOf<O>>;\n\n/**\n * Returns an observable that will error or switch to a different observable if the source does not push values\n * within the specified time parameters.\n *\n * <span class=\"informal\">The most flexible option for creating a timeout behavior.</span>\n *\n * The first thing to know about the configuration is if you do not provide a `with` property to the configuration,\n * when timeout conditions are met, this operator will emit a {@link TimeoutError}. Otherwise, it will use the factory\n * function provided by `with`, and switch your subscription to the result of that. Timeout conditions are provided by\n * the settings in `first` and `each`.\n *\n * The `first` property can be either a `Date` for a specific time, a `number` for a time period relative to the\n * point of subscription, or it can be skipped. This property is to check timeout conditions for the arrival of\n * the first value from the source _only_. The timings of all subsequent values  from the source will be checked\n * against the time period provided by `each`, if it was provided.\n *\n * The `each` property can be either a `number` or skipped. If a value for `each` is provided, it represents the amount of\n * time the resulting observable will wait between the arrival of values from the source before timing out. Note that if\n * `first` is _not_ provided, the value from `each` will be used to check timeout conditions for the arrival of the first\n * value and all subsequent values. If `first` _is_ provided, `each` will only be use to check all values after the first.\n *\n * ### Handling TimeoutErrors\n *\n * If no `with` property was provided, subscriptions to the resulting observable may emit an error of {@link TimeoutError}.\n * The timeout error provides useful information you can examine when you're handling the error. The most common way to handle\n * the error would be with {@link catchError}, although you could use {@link tap} or just the error handler in your `subscribe` call\n * directly, if your error handling is only a side effect (such as notifying the user, or logging).\n *\n * In this case, you would check the error for `instanceof TimeoutError` to validate that the error was indeed from `timeout`, and\n * not from some other source. If it's not from `timeout`, you should probably rethrow it if you're in a `catchError`.\n *\n * ## Examples\n *\n * Emit a {@link TimeoutError} if the first value, and _only_ the first value, does not arrive within 5 seconds\n *\n * ```ts\n * import { interval, timeout } from 'rxjs';\n *\n * // A random interval that lasts between 0 and 10 seconds per tick\n * const source$ = interval(Math.round(Math.random() * 10_000));\n *\n * source$.pipe(\n *   timeout({ first: 5_000 })\n * )\n * .subscribe({\n *   next: console.log,\n *   error: console.error\n * });\n * ```\n *\n * Emit a {@link TimeoutError} if the source waits longer than 5 seconds between any two values or the first value\n * and subscription.\n *\n * ```ts\n * import { timer, timeout, expand } from 'rxjs';\n *\n * const getRandomTime = () => Math.round(Math.random() * 10_000);\n *\n * // An observable that waits a random amount of time between each delivered value\n * const source$ = timer(getRandomTime())\n *   .pipe(expand(() => timer(getRandomTime())));\n *\n * source$\n *   .pipe(timeout({ each: 5_000 }))\n *   .subscribe({\n *     next: console.log,\n *     error: console.error\n *   });\n * ```\n *\n * Emit a {@link TimeoutError} if the source does not emit before 7 seconds, _or_ if the source waits longer than\n * 5 seconds between any two values after the first.\n *\n * ```ts\n * import { timer, timeout, expand } from 'rxjs';\n *\n * const getRandomTime = () => Math.round(Math.random() * 10_000);\n *\n * // An observable that waits a random amount of time between each delivered value\n * const source$ = timer(getRandomTime())\n *   .pipe(expand(() => timer(getRandomTime())));\n *\n * source$\n *   .pipe(timeout({ first: 7_000, each: 5_000 }))\n *   .subscribe({\n *     next: console.log,\n *     error: console.error\n *   });\n * ```\n */\nexport function timeout<T, M = unknown>(config: Omit<TimeoutConfig<T, any, M>, 'with'>): OperatorFunction<T, T>;\n\n/**\n * Returns an observable that will error if the source does not push its first value before the specified time passed as a `Date`.\n * This is functionally the same as `timeout({ first: someDate })`.\n *\n * <span class=\"informal\">Errors if the first value doesn't show up before the given date and time</span>\n *\n * ![](timeout.png)\n *\n * @param first The date to at which the resulting observable will timeout if the source observable\n * does not emit at least one value.\n * @param scheduler The scheduler to use. Defaults to {@link asyncScheduler}.\n */\nexport function timeout<T>(first: Date, scheduler?: SchedulerLike): MonoTypeOperatorFunction<T>;\n\n/**\n * Returns an observable that will error if the source does not push a value within the specified time in milliseconds.\n * This is functionally the same as `timeout({ each: milliseconds })`.\n *\n * <span class=\"informal\">Errors if it waits too long between any value</span>\n *\n * ![](timeout.png)\n *\n * @param each The time allowed between each pushed value from the source before the resulting observable\n * will timeout.\n * @param scheduler The scheduler to use. Defaults to {@link asyncScheduler}.\n */\nexport function timeout<T>(each: number, scheduler?: SchedulerLike): MonoTypeOperatorFunction<T>;\n\n/**\n *\n * Errors if Observable does not emit a value in given time span.\n *\n * <span class=\"informal\">Timeouts on Observable that doesn't emit values fast enough.</span>\n *\n * ![](timeout.png)\n *\n * @see {@link timeoutWith}\n *\n * @return A function that returns an Observable that mirrors behaviour of the\n * source Observable, unless timeout happens when it throws an error.\n */\nexport function timeout<T, O extends ObservableInput<any>, M>(\n  config: number | Date | TimeoutConfig<T, O, M>,\n  schedulerArg?: SchedulerLike\n): OperatorFunction<T, T | ObservedValueOf<O>> {\n  // Intentionally terse code.\n  // If the first argument is a valid `Date`, then we use it as the `first` config.\n  // Otherwise, if the first argument is a `number`, then we use it as the `each` config.\n  // Otherwise, it can be assumed the first argument is the configuration object itself, and\n  // we destructure that into what we're going to use, setting important defaults as we do.\n  // NOTE: The default for `scheduler` will be the `scheduler` argument if it exists, or\n  // it will default to the `asyncScheduler`.\n  const {\n    first,\n    each,\n    with: _with = timeoutErrorFactory,\n    scheduler = schedulerArg ?? asyncScheduler,\n    meta = null!,\n  } = (isValidDate(config) ? { first: config } : typeof config === 'number' ? { each: config } : config) as TimeoutConfig<T, O, M>;\n\n  if (first == null && each == null) {\n    // Ensure timeout was provided at runtime.\n    throw new TypeError('No timeout provided.');\n  }\n\n  return operate((source, subscriber) => {\n    // This subscription encapsulates our subscription to the\n    // source for this operator. We're capturing it separately,\n    // because if there is a `with` observable to fail over to,\n    // we want to unsubscribe from our original subscription, and\n    // hand of the subscription to that one.\n    let originalSourceSubscription: Subscription;\n    // The subscription for our timeout timer. This changes\n    // every time get get a new value.\n    let timerSubscription: Subscription;\n    // A bit of state we pass to our with and error factories to\n    // tell what the last value we saw was.\n    let lastValue: T | null = null;\n    // A bit of state we pass to the with and error factories to\n    // tell how many values we have seen so far.\n    let seen = 0;\n    const startTimer = (delay: number) => {\n      timerSubscription = executeSchedule(\n        subscriber,\n        scheduler,\n        () => {\n          try {\n            originalSourceSubscription.unsubscribe();\n            innerFrom(\n              _with!({\n                meta,\n                lastValue,\n                seen,\n              })\n            ).subscribe(subscriber);\n          } catch (err) {\n            subscriber.error(err);\n          }\n        },\n        delay\n      );\n    };\n\n    originalSourceSubscription = source.subscribe(\n      createOperatorSubscriber(\n        subscriber,\n        (value: T) => {\n          // clear the timer so we can emit and start another one.\n          timerSubscription?.unsubscribe();\n          seen++;\n          // Emit\n          subscriber.next((lastValue = value));\n          // null | undefined are both < 0. Thanks, JavaScript.\n          each! > 0 && startTimer(each!);\n        },\n        undefined,\n        undefined,\n        () => {\n          if (!timerSubscription?.closed) {\n            timerSubscription?.unsubscribe();\n          }\n          // Be sure not to hold the last value in memory after unsubscription\n          // it could be quite large.\n          lastValue = null;\n        }\n      )\n    );\n\n    // Intentionally terse code.\n    // If we've `seen` a value, that means the \"first\" clause was met already, if it existed.\n    //   it also means that a timer was already started for \"each\" (in the next handler above).\n    // If `first` was provided, and it's a number, then use it.\n    // If `first` was provided and it's not a number, it's a Date, and we get the difference between it and \"now\".\n    // If `first` was not provided at all, then our first timer will be the value from `each`.\n    !seen && startTimer(first != null ? (typeof first === 'number' ? first : +first - scheduler!.now()) : each!);\n  });\n}\n\n/**\n * The default function to use to emit an error when timeout occurs and a `with` function\n * is not specified.\n * @param info The information about the timeout to pass along to the error\n */\nfunction timeoutErrorFactory(info: TimeoutInfo<any>): Observable<never> {\n  throw new TimeoutError(info);\n}\n","import { async } from '../scheduler/async';\nimport { isValidDate } from '../util/isDate';\nimport { ObservableInput, OperatorFunction, SchedulerLike } from '../types';\nimport { timeout } from './timeout';\n\n/** @deprecated Replaced with {@link timeout}. Instead of `timeoutWith(someDate, a$, scheduler)`, use the configuration object\n * `timeout({ first: someDate, with: () => a$, scheduler })`. Will be removed in v8. */\nexport function timeoutWith<T, R>(dueBy: Date, switchTo: ObservableInput<R>, scheduler?: SchedulerLike): OperatorFunction<T, T | R>;\n/** @deprecated Replaced with {@link timeout}. Instead of `timeoutWith(100, a$, scheduler)`, use the configuration object\n *  `timeout({ each: 100, with: () => a$, scheduler })`. Will be removed in v8. */\nexport function timeoutWith<T, R>(waitFor: number, switchTo: ObservableInput<R>, scheduler?: SchedulerLike): OperatorFunction<T, T | R>;\n\n/**\n * When the passed timespan elapses before the source emits any given value, it will unsubscribe from the source,\n * and switch the subscription to another observable.\n *\n * <span class=\"informal\">Used to switch to a different observable if your source is being slow.</span>\n *\n * Useful in cases where:\n *\n * - You want to switch to a different source that may be faster.\n * - You want to notify a user that the data stream is slow.\n * - You want to emit a custom error rather than the {@link TimeoutError} emitted\n *   by the default usage of {@link timeout}.\n *\n * If the first parameter is passed as Date and the time of the Date arrives before the first value arrives from the source,\n * it will unsubscribe from the source and switch the subscription to another observable.\n *\n * <span class=\"informal\">Use Date object to switch to a different observable if the first value doesn't arrive by a specific time.</span>\n *\n * Can be used to set a timeout only for the first value, however it's recommended to use the {@link timeout} operator with\n * the `first` configuration to get the same effect.\n *\n * ## Examples\n *\n * Fallback to a faster observable\n *\n * ```ts\n * import { interval, timeoutWith } from 'rxjs';\n *\n * const slow$ = interval(1000);\n * const faster$ = interval(500);\n *\n * slow$\n *   .pipe(timeoutWith(900, faster$))\n *   .subscribe(console.log);\n * ```\n *\n * Emit your own custom timeout error\n *\n * ```ts\n * import { interval, timeoutWith, throwError } from 'rxjs';\n *\n * class CustomTimeoutError extends Error {\n *   constructor() {\n *     super('It was too slow');\n *     this.name = 'CustomTimeoutError';\n *   }\n * }\n *\n * const slow$ = interval(1000);\n *\n * slow$\n *   .pipe(timeoutWith(900, throwError(() => new CustomTimeoutError())))\n *   .subscribe({\n *     error: err => console.error(err.message)\n *   });\n * ```\n *\n * @see {@link timeout}\n *\n * @param due When passed a number, used as the time (in milliseconds) allowed between each value from the source before timeout\n * is triggered. When passed a Date, used as the exact time at which the timeout will be triggered if the first value does not arrive.\n * @param withObservable The observable to switch to when timeout occurs.\n * @param scheduler The scheduler to use with time-related operations within this operator. Defaults to {@link asyncScheduler}\n * @return A function that returns an Observable that mirrors behaviour of the\n * source Observable, unless timeout happens when it starts emitting values\n * from the `ObservableInput` passed as a second parameter.\n * @deprecated Replaced with {@link timeout}. Instead of `timeoutWith(100, a$, scheduler)`, use {@link timeout} with the configuration\n * object: `timeout({ each: 100, with: () => a$, scheduler })`. Instead of `timeoutWith(someDate, a$, scheduler)`, use {@link timeout}\n * with the configuration object: `timeout({ first: someDate, with: () => a$, scheduler })`. Will be removed in v8.\n */\nexport function timeoutWith<T, R>(\n  due: number | Date,\n  withObservable: ObservableInput<R>,\n  scheduler?: SchedulerLike\n): OperatorFunction<T, T | R> {\n  let first: number | Date | undefined;\n  let each: number | undefined;\n  let _with: () => ObservableInput<R>;\n  scheduler = scheduler ?? async;\n\n  if (isValidDate(due)) {\n    first = due;\n  } else if (typeof due === 'number') {\n    each = due;\n  }\n\n  if (withObservable) {\n    _with = () => withObservable;\n  } else {\n    throw new TypeError('No observable provided to switch to');\n  }\n\n  if (first == null && each == null) {\n    // Ensure timeout was provided at runtime.\n    throw new TypeError('No timeout provided.');\n  }\n\n  return timeout<T, ObservableInput<R>>({\n    first,\n    each,\n    scheduler,\n    with: _with,\n  });\n}\n","import { OperatorFunction, TimestampProvider, Timestamp } from '../types';\nimport { dateTimestampProvider } from '../scheduler/dateTimestampProvider';\nimport { map } from './map';\n\n/**\n * Attaches a timestamp to each item emitted by an observable indicating when it was emitted\n *\n * The `timestamp` operator maps the *source* observable stream to an object of type\n * `{value: T, timestamp: R}`. The properties are generically typed. The `value` property contains the value\n * and type of the *source* observable. The `timestamp` is generated by the schedulers `now` function. By\n * default, it uses the `asyncScheduler` which simply returns `Date.now()` (milliseconds since 1970/01/01\n * 00:00:00:000) and therefore is of type `number`.\n *\n * ![](timestamp.png)\n *\n * ## Example\n *\n * In this example there is a timestamp attached to the document's click events\n *\n * ```ts\n * import { fromEvent, timestamp } from 'rxjs';\n *\n * const clickWithTimestamp = fromEvent(document, 'click').pipe(\n *   timestamp()\n * );\n *\n * // Emits data of type { value: PointerEvent, timestamp: number }\n * clickWithTimestamp.subscribe(data => {\n *   console.log(data);\n * });\n * ```\n *\n * @param timestampProvider An object with a `now()` method used to get the current timestamp.\n * @return A function that returns an Observable that attaches a timestamp to\n * each item emitted by the source Observable indicating when it was emitted.\n */\nexport function timestamp<T>(timestampProvider: TimestampProvider = dateTimestampProvider): OperatorFunction<T, Timestamp<T>> {\n  return map((value: T) => ({ value, timestamp: timestampProvider.now() }));\n}\n","import { reduce } from './reduce';\nimport { OperatorFunction } from '../types';\nimport { operate } from '../util/lift';\n\nconst arrReducer = (arr: any[], value: any) => (arr.push(value), arr);\n\n/**\n * Collects all source emissions and emits them as an array when the source completes.\n *\n * <span class=\"informal\">Get all values inside an array when the source completes</span>\n *\n * ![](toArray.png)\n *\n * `toArray` will wait until the source Observable completes before emitting\n * the array containing all emissions. When the source Observable errors no\n * array will be emitted.\n *\n * ## Example\n *\n * ```ts\n * import { interval, take, toArray } from 'rxjs';\n *\n * const source = interval(1000);\n * const example = source.pipe(\n *   take(10),\n *   toArray()\n * );\n *\n * example.subscribe(value => console.log(value));\n *\n * // output: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]\n * ```\n *\n * @return A function that returns an Observable that emits an array of items\n * emitted by the source Observable when source completes.\n */\nexport function toArray<T>(): OperatorFunction<T, T[]> {\n  // Because arrays are mutable, and we're mutating the array in this\n  // reducer process, we have to escapulate the creation of the initial\n  // array within this `operate` function.\n  return operate((source, subscriber) => {\n    reduce(arrReducer, [] as T[])(source).subscribe(subscriber);\n  });\n}\n","import { Observable } from '../Observable';\nimport { OperatorFunction } from '../types';\nimport { Subject } from '../Subject';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nimport { noop } from '../util/noop';\n\n/**\n * Branch out the source Observable values as a nested Observable whenever\n * `windowBoundaries` emits.\n *\n * <span class=\"informal\">It's like {@link buffer}, but emits a nested Observable\n * instead of an array.</span>\n *\n * ![](window.png)\n *\n * Returns an Observable that emits windows of items it collects from the source\n * Observable. The output Observable emits connected, non-overlapping\n * windows. It emits the current window and opens a new one whenever the\n * Observable `windowBoundaries` emits an item. Because each window is an\n * Observable, the output is a higher-order Observable.\n *\n * ## Example\n *\n * In every window of 1 second each, emit at most 2 click events\n *\n * ```ts\n * import { fromEvent, interval, window, map, take, mergeAll } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const sec = interval(1000);\n * const result = clicks.pipe(\n *   window(sec),\n *   map(win => win.pipe(take(2))), // take at most 2 emissions from each window\n *   mergeAll()                     // flatten the Observable-of-Observables\n * );\n * result.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link windowCount}\n * @see {@link windowTime}\n * @see {@link windowToggle}\n * @see {@link windowWhen}\n * @see {@link buffer}\n *\n * @param {Observable<any>} windowBoundaries An Observable that completes the\n * previous window and starts a new window.\n * @return A function that returns an Observable of windows, which are\n * Observables emitting values of the source Observable.\n */\nexport function window<T>(windowBoundaries: Observable<any>): OperatorFunction<T, Observable<T>> {\n  return operate((source, subscriber) => {\n    let windowSubject: Subject<T> = new Subject<T>();\n\n    subscriber.next(windowSubject.asObservable());\n\n    const errorHandler = (err: any) => {\n      windowSubject.error(err);\n      subscriber.error(err);\n    };\n\n    // Subscribe to our source\n    source.subscribe(\n      createOperatorSubscriber(\n        subscriber,\n        (value) => windowSubject?.next(value),\n        () => {\n          windowSubject.complete();\n          subscriber.complete();\n        },\n        errorHandler\n      )\n    );\n\n    // Subscribe to the window boundaries.\n    windowBoundaries.subscribe(\n      createOperatorSubscriber(\n        subscriber,\n        () => {\n          windowSubject.complete();\n          subscriber.next((windowSubject = new Subject()));\n        },\n        noop,\n        errorHandler\n      )\n    );\n\n    return () => {\n      // Unsubscribing the subject ensures that anyone who has captured\n      // a reference to this window that tries to use it after it can\n      // no longer get values from the source will get an ObjectUnsubscribedError.\n      windowSubject?.unsubscribe();\n      windowSubject = null!;\n    };\n  });\n}\n","import { Observable } from '../Observable';\nimport { Subject } from '../Subject';\nimport { OperatorFunction } from '../types';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\n\n/**\n * Branch out the source Observable values as a nested Observable with each\n * nested Observable emitting at most `windowSize` values.\n *\n * <span class=\"informal\">It's like {@link bufferCount}, but emits a nested\n * Observable instead of an array.</span>\n *\n * ![](windowCount.png)\n *\n * Returns an Observable that emits windows of items it collects from the source\n * Observable. The output Observable emits windows every `startWindowEvery`\n * items, each containing no more than `windowSize` items. When the source\n * Observable completes or encounters an error, the output Observable emits\n * the current window and propagates the notification from the source\n * Observable. If `startWindowEvery` is not provided, then new windows are\n * started immediately at the start of the source and when each window completes\n * with size `windowSize`.\n *\n * ## Examples\n *\n * Ignore every 3rd click event, starting from the first one\n *\n * ```ts\n * import { fromEvent, windowCount, map, skip, mergeAll } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const result = clicks.pipe(\n *   windowCount(3),\n *   map(win => win.pipe(skip(1))), // skip first of every 3 clicks\n *   mergeAll()                     // flatten the Observable-of-Observables\n * );\n * result.subscribe(x => console.log(x));\n * ```\n *\n * Ignore every 3rd click event, starting from the third one\n *\n * ```ts\n * import { fromEvent, windowCount, mergeAll } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const result = clicks.pipe(\n *   windowCount(2, 3),\n *   mergeAll() // flatten the Observable-of-Observables\n * );\n * result.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link window}\n * @see {@link windowTime}\n * @see {@link windowToggle}\n * @see {@link windowWhen}\n * @see {@link bufferCount}\n *\n * @param {number} windowSize The maximum number of values emitted by each\n * window.\n * @param {number} [startWindowEvery] Interval at which to start a new window.\n * For example if `startWindowEvery` is `2`, then a new window will be started\n * on every other value from the source. A new window is started at the\n * beginning of the source by default.\n * @return A function that returns an Observable of windows, which in turn are\n * Observable of values.\n */\nexport function windowCount<T>(windowSize: number, startWindowEvery: number = 0): OperatorFunction<T, Observable<T>> {\n  const startEvery = startWindowEvery > 0 ? startWindowEvery : windowSize;\n\n  return operate((source, subscriber) => {\n    let windows = [new Subject<T>()];\n    let starts: number[] = [];\n    let count = 0;\n\n    // Open the first window.\n    subscriber.next(windows[0].asObservable());\n\n    source.subscribe(\n      createOperatorSubscriber(\n        subscriber,\n        (value: T) => {\n          // Emit the value through all current windows.\n          // We don't need to create a new window yet, we\n          // do that as soon as we close one.\n          for (const window of windows) {\n            window.next(value);\n          }\n          // Here we're using the size of the window array to figure\n          // out if the oldest window has emitted enough values. We can do this\n          // because the size of the window array is a function of the values\n          // seen by the subscription. If it's time to close it, we complete\n          // it and remove it.\n          const c = count - windowSize + 1;\n          if (c >= 0 && c % startEvery === 0) {\n            windows.shift()!.complete();\n          }\n\n          // Look to see if the next count tells us it's time to open a new window.\n          // TODO: We need to figure out if this really makes sense. We're technically\n          // emitting windows *before* we have a value to emit them for. It's probably\n          // more expected that we should be emitting the window when the start\n          // count is reached -- not before.\n          if (++count % startEvery === 0) {\n            const window = new Subject<T>();\n            windows.push(window);\n            subscriber.next(window.asObservable());\n          }\n        },\n        () => {\n          while (windows.length > 0) {\n            windows.shift()!.complete();\n          }\n          subscriber.complete();\n        },\n        (err) => {\n          while (windows.length > 0) {\n            windows.shift()!.error(err);\n          }\n          subscriber.error(err);\n        },\n        () => {\n          starts = null!;\n          windows = null!;\n        }\n      )\n    );\n  });\n}\n","import { Subject } from '../Subject';\nimport { asyncScheduler } from '../scheduler/async';\nimport { Observable } from '../Observable';\nimport { Subscription } from '../Subscription';\nimport { Observer, OperatorFunction, SchedulerLike } from '../types';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nimport { arrRemove } from '../util/arrRemove';\nimport { popScheduler } from '../util/args';\nimport { executeSchedule } from '../util/executeSchedule';\n\nexport function windowTime<T>(windowTimeSpan: number, scheduler?: SchedulerLike): OperatorFunction<T, Observable<T>>;\nexport function windowTime<T>(\n  windowTimeSpan: number,\n  windowCreationInterval: number,\n  scheduler?: SchedulerLike\n): OperatorFunction<T, Observable<T>>;\nexport function windowTime<T>(\n  windowTimeSpan: number,\n  windowCreationInterval: number | null | void,\n  maxWindowSize: number,\n  scheduler?: SchedulerLike\n): OperatorFunction<T, Observable<T>>;\n\n/**\n * Branch out the source Observable values as a nested Observable periodically\n * in time.\n *\n * <span class=\"informal\">It's like {@link bufferTime}, but emits a nested\n * Observable instead of an array.</span>\n *\n * ![](windowTime.png)\n *\n * Returns an Observable that emits windows of items it collects from the source\n * Observable. The output Observable starts a new window periodically, as\n * determined by the `windowCreationInterval` argument. It emits each window\n * after a fixed timespan, specified by the `windowTimeSpan` argument. When the\n * source Observable completes or encounters an error, the output Observable\n * emits the current window and propagates the notification from the source\n * Observable. If `windowCreationInterval` is not provided, the output\n * Observable starts a new window when the previous window of duration\n * `windowTimeSpan` completes. If `maxWindowCount` is provided, each window\n * will emit at most fixed number of values. Window will complete immediately\n * after emitting last value and next one still will open as specified by\n * `windowTimeSpan` and `windowCreationInterval` arguments.\n *\n * ## Examples\n *\n * In every window of 1 second each, emit at most 2 click events\n *\n * ```ts\n * import { fromEvent, windowTime, map, take, mergeAll } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const result = clicks.pipe(\n *   windowTime(1000),\n *   map(win => win.pipe(take(2))), // take at most 2 emissions from each window\n *   mergeAll()                     // flatten the Observable-of-Observables\n * );\n * result.subscribe(x => console.log(x));\n * ```\n *\n * Every 5 seconds start a window 1 second long, and emit at most 2 click events per window\n *\n * ```ts\n * import { fromEvent, windowTime, map, take, mergeAll } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const result = clicks.pipe(\n *   windowTime(1000, 5000),\n *   map(win => win.pipe(take(2))), // take at most 2 emissions from each window\n *   mergeAll()                     // flatten the Observable-of-Observables\n * );\n * result.subscribe(x => console.log(x));\n * ```\n *\n * Same as example above but with `maxWindowCount` instead of `take`\n *\n * ```ts\n * import { fromEvent, windowTime, mergeAll } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const result = clicks.pipe(\n *   windowTime(1000, 5000, 2), // take at most 2 emissions from each window\n *   mergeAll()                 // flatten the Observable-of-Observables\n * );\n * result.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link window}\n * @see {@link windowCount}\n * @see {@link windowToggle}\n * @see {@link windowWhen}\n * @see {@link bufferTime}\n *\n * @param windowTimeSpan The amount of time, in milliseconds, to fill each window.\n * @param windowCreationInterval The interval at which to start new\n * windows.\n * @param maxWindowSize Max number of\n * values each window can emit before completion.\n * @param scheduler The scheduler on which to schedule the\n * intervals that determine window boundaries.\n * @return A function that returns an Observable of windows, which in turn are\n * Observables.\n */\nexport function windowTime<T>(windowTimeSpan: number, ...otherArgs: any[]): OperatorFunction<T, Observable<T>> {\n  const scheduler = popScheduler(otherArgs) ?? asyncScheduler;\n  const windowCreationInterval = (otherArgs[0] as number) ?? null;\n  const maxWindowSize = (otherArgs[1] as number) || Infinity;\n\n  return operate((source, subscriber) => {\n    // The active windows, their related subscriptions, and removal functions.\n    let windowRecords: WindowRecord<T>[] | null = [];\n    // If true, it means that every time we close a window, we want to start a new window.\n    // This is only really used for when *just* the time span is passed.\n    let restartOnClose = false;\n\n    const closeWindow = (record: { window: Subject<T>; subs: Subscription }) => {\n      const { window, subs } = record;\n      window.complete();\n      subs.unsubscribe();\n      arrRemove(windowRecords, record);\n      restartOnClose && startWindow();\n    };\n\n    /**\n     * Called every time we start a new window. This also does\n     * the work of scheduling the job to close the window.\n     */\n    const startWindow = () => {\n      if (windowRecords) {\n        const subs = new Subscription();\n        subscriber.add(subs);\n        const window = new Subject<T>();\n        const record = {\n          window,\n          subs,\n          seen: 0,\n        };\n        windowRecords.push(record);\n        subscriber.next(window.asObservable());\n        executeSchedule(subs, scheduler, () => closeWindow(record), windowTimeSpan);\n      }\n    };\n\n    if (windowCreationInterval !== null && windowCreationInterval >= 0) {\n      // The user passed both a windowTimeSpan (required), and a creation interval\n      // That means we need to start new window on the interval, and those windows need\n      // to wait the required time span before completing.\n      executeSchedule(subscriber, scheduler, startWindow, windowCreationInterval, true);\n    } else {\n      restartOnClose = true;\n    }\n\n    startWindow();\n\n    /**\n     * We need to loop over a copy of the window records several times in this operator.\n     * This is to save bytes over the wire more than anything.\n     * The reason we copy the array is that reentrant code could mutate the array while\n     * we are iterating over it.\n     */\n    const loop = (cb: (record: WindowRecord<T>) => void) => windowRecords!.slice().forEach(cb);\n\n    /**\n     * Used to notify all of the windows and the subscriber in the same way\n     * in the error and complete handlers.\n     */\n    const terminate = (cb: (consumer: Observer<any>) => void) => {\n      loop(({ window }) => cb(window));\n      cb(subscriber);\n      subscriber.unsubscribe();\n    };\n\n    source.subscribe(\n      createOperatorSubscriber(\n        subscriber,\n        (value: T) => {\n          // Notify all windows of the value.\n          loop((record) => {\n            record.window.next(value);\n            // If the window is over the max size, we need to close it.\n            maxWindowSize <= ++record.seen && closeWindow(record);\n          });\n        },\n        // Complete the windows and the downstream subscriber and clean up.\n        () => terminate((consumer) => consumer.complete()),\n        // Notify the windows and the downstream subscriber of the error and clean up.\n        (err) => terminate((consumer) => consumer.error(err))\n      )\n    );\n\n    // Additional finalization. This will be called when the\n    // destination tears down. Other finalizations are registered implicitly\n    // above via subscription.\n    return () => {\n      // Ensure that the buffer is released.\n      windowRecords = null!;\n    };\n  });\n}\n\ninterface WindowRecord<T> {\n  seen: number;\n  window: Subject<T>;\n  subs: Subscription;\n}\n","import { Observable } from '../Observable';\nimport { Subject } from '../Subject';\nimport { Subscription } from '../Subscription';\nimport { ObservableInput, OperatorFunction } from '../types';\nimport { operate } from '../util/lift';\nimport { innerFrom } from '../observable/innerFrom';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nimport { noop } from '../util/noop';\nimport { arrRemove } from '../util/arrRemove';\n\n/**\n * Branch out the source Observable values as a nested Observable starting from\n * an emission from `openings` and ending when the output of `closingSelector`\n * emits.\n *\n * <span class=\"informal\">It's like {@link bufferToggle}, but emits a nested\n * Observable instead of an array.</span>\n *\n * ![](windowToggle.png)\n *\n * Returns an Observable that emits windows of items it collects from the source\n * Observable. The output Observable emits windows that contain those items\n * emitted by the source Observable between the time when the `openings`\n * Observable emits an item and when the Observable returned by\n * `closingSelector` emits an item.\n *\n * ## Example\n *\n * Every other second, emit the click events from the next 500ms\n *\n * ```ts\n * import { fromEvent, interval, windowToggle, EMPTY, mergeAll } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const openings = interval(1000);\n * const result = clicks.pipe(\n *   windowToggle(openings, i => i % 2 ? interval(500) : EMPTY),\n *   mergeAll()\n * );\n * result.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link window}\n * @see {@link windowCount}\n * @see {@link windowTime}\n * @see {@link windowWhen}\n * @see {@link bufferToggle}\n *\n * @param {Observable<O>} openings An observable of notifications to start new\n * windows.\n * @param {function(value: O): Observable} closingSelector A function that takes\n * the value emitted by the `openings` observable and returns an Observable,\n * which, when it emits a next notification, signals that the\n * associated window should complete.\n * @return A function that returns an Observable of windows, which in turn are\n * Observables.\n */\nexport function windowToggle<T, O>(\n  openings: ObservableInput<O>,\n  closingSelector: (openValue: O) => ObservableInput<any>\n): OperatorFunction<T, Observable<T>> {\n  return operate((source, subscriber) => {\n    const windows: Subject<T>[] = [];\n\n    const handleError = (err: any) => {\n      while (0 < windows.length) {\n        windows.shift()!.error(err);\n      }\n      subscriber.error(err);\n    };\n\n    innerFrom(openings).subscribe(\n      createOperatorSubscriber(\n        subscriber,\n        (openValue) => {\n          const window = new Subject<T>();\n          windows.push(window);\n          const closingSubscription = new Subscription();\n          const closeWindow = () => {\n            arrRemove(windows, window);\n            window.complete();\n            closingSubscription.unsubscribe();\n          };\n\n          let closingNotifier: Observable<any>;\n          try {\n            closingNotifier = innerFrom(closingSelector(openValue));\n          } catch (err) {\n            handleError(err);\n            return;\n          }\n\n          subscriber.next(window.asObservable());\n\n          closingSubscription.add(closingNotifier.subscribe(createOperatorSubscriber(subscriber, closeWindow, noop, handleError)));\n        },\n        noop\n      )\n    );\n\n    // Subcribe to the source to get things started.\n    source.subscribe(\n      createOperatorSubscriber(\n        subscriber,\n        (value: T) => {\n          // Copy the windows array before we emit to\n          // make sure we don't have issues with reentrant code.\n          const windowsCopy = windows.slice();\n          for (const window of windowsCopy) {\n            window.next(value);\n          }\n        },\n        () => {\n          // Complete all of our windows before we complete.\n          while (0 < windows.length) {\n            windows.shift()!.complete();\n          }\n          subscriber.complete();\n        },\n        handleError,\n        () => {\n          // Add this finalization so that all window subjects are\n          // disposed of. This way, if a user tries to subscribe\n          // to a window *after* the outer subscription has been unsubscribed,\n          // they will get an error, instead of waiting forever to\n          // see if a value arrives.\n          while (0 < windows.length) {\n            windows.shift()!.unsubscribe();\n          }\n        }\n      )\n    );\n  });\n}\n","import { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { Subject } from '../Subject';\nimport { ObservableInput, OperatorFunction } from '../types';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nimport { innerFrom } from '../observable/innerFrom';\n\n/**\n * Branch out the source Observable values as a nested Observable using a\n * factory function of closing Observables to determine when to start a new\n * window.\n *\n * <span class=\"informal\">It's like {@link bufferWhen}, but emits a nested\n * Observable instead of an array.</span>\n *\n * ![](windowWhen.png)\n *\n * Returns an Observable that emits windows of items it collects from the source\n * Observable. The output Observable emits connected, non-overlapping windows.\n * It emits the current window and opens a new one whenever the Observable\n * produced by the specified `closingSelector` function emits an item. The first\n * window is opened immediately when subscribing to the output Observable.\n *\n * ## Example\n *\n * Emit only the first two clicks events in every window of [1-5] random seconds\n *\n * ```ts\n * import { fromEvent, windowWhen, interval, map, take, mergeAll } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const result = clicks.pipe(\n *   windowWhen(() => interval(1000 + Math.random() * 4000)),\n *   map(win => win.pipe(take(2))), // take at most 2 emissions from each window\n *   mergeAll()                     // flatten the Observable-of-Observables\n * );\n * result.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link window}\n * @see {@link windowCount}\n * @see {@link windowTime}\n * @see {@link windowToggle}\n * @see {@link bufferWhen}\n *\n * @param {function(): Observable} closingSelector A function that takes no\n * arguments and returns an Observable that signals (on either `next` or\n * `complete`) when to close the previous window and start a new one.\n * @return A function that returns an Observable of windows, which in turn are\n * Observables.\n */\nexport function windowWhen<T>(closingSelector: () => ObservableInput<any>): OperatorFunction<T, Observable<T>> {\n  return operate((source, subscriber) => {\n    let window: Subject<T> | null;\n    let closingSubscriber: Subscriber<any> | undefined;\n\n    /**\n     * When we get an error, we have to notify both the\n     * destiation subscriber and the window.\n     */\n    const handleError = (err: any) => {\n      window!.error(err);\n      subscriber.error(err);\n    };\n\n    /**\n     * Called every time we need to open a window.\n     * Recursive, as it will start the closing notifier, which\n     * inevitably *should* call openWindow -- but may not if\n     * it is a \"never\" observable.\n     */\n    const openWindow = () => {\n      // We need to clean up our closing subscription,\n      // we only cared about the first next or complete notification.\n      closingSubscriber?.unsubscribe();\n\n      // Close our window before starting a new one.\n      window?.complete();\n\n      // Start the new window.\n      window = new Subject<T>();\n      subscriber.next(window.asObservable());\n\n      // Get our closing notifier.\n      let closingNotifier: Observable<any>;\n      try {\n        closingNotifier = innerFrom(closingSelector());\n      } catch (err) {\n        handleError(err);\n        return;\n      }\n\n      // Subscribe to the closing notifier, be sure\n      // to capture the subscriber (aka Subscription)\n      // so we can clean it up when we close the window\n      // and open a new one.\n      closingNotifier.subscribe((closingSubscriber = createOperatorSubscriber(subscriber, openWindow, openWindow, handleError)));\n    };\n\n    // Start the first window.\n    openWindow();\n\n    // Subscribe to the source\n    source.subscribe(\n      createOperatorSubscriber(\n        subscriber,\n        (value) => window!.next(value),\n        () => {\n          // The source completed, close the window and complete.\n          window!.complete();\n          subscriber.complete();\n        },\n        handleError,\n        () => {\n          // Be sure to clean up our closing subscription\n          // when this tears down.\n          closingSubscriber?.unsubscribe();\n          window = null!;\n        }\n      )\n    );\n  });\n}\n","import { OperatorFunction, ObservableInputTuple } from '../types';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nimport { innerFrom } from '../observable/innerFrom';\nimport { identity } from '../util/identity';\nimport { noop } from '../util/noop';\nimport { popResultSelector } from '../util/args';\n\nexport function withLatestFrom<T, O extends unknown[]>(...inputs: [...ObservableInputTuple<O>]): OperatorFunction<T, [T, ...O]>;\n\nexport function withLatestFrom<T, O extends unknown[], R>(\n  ...inputs: [...ObservableInputTuple<O>, (...value: [T, ...O]) => R]\n): OperatorFunction<T, R>;\n\n/**\n * Combines the source Observable with other Observables to create an Observable\n * whose values are calculated from the latest values of each, only when the\n * source emits.\n *\n * <span class=\"informal\">Whenever the source Observable emits a value, it\n * computes a formula using that value plus the latest values from other input\n * Observables, then emits the output of that formula.</span>\n *\n * ![](withLatestFrom.png)\n *\n * `withLatestFrom` combines each value from the source Observable (the\n * instance) with the latest values from the other input Observables only when\n * the source emits a value, optionally using a `project` function to determine\n * the value to be emitted on the output Observable. All input Observables must\n * emit at least one value before the output Observable will emit a value.\n *\n * ## Example\n *\n * On every click event, emit an array with the latest timer event plus the click event\n *\n * ```ts\n * import { fromEvent, interval, withLatestFrom } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const timer = interval(1000);\n * const result = clicks.pipe(withLatestFrom(timer));\n * result.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link combineLatest}\n *\n * @param {ObservableInput} other An input Observable to combine with the source\n * Observable. More than one input Observables may be given as argument.\n * @param {Function} [project] Projection function for combining values\n * together. Receives all values in order of the Observables passed, where the\n * first parameter is a value from the source Observable. (e.g.\n * `a.pipe(withLatestFrom(b, c), map(([a1, b1, c1]) => a1 + b1 + c1))`). If this is not\n * passed, arrays will be emitted on the output Observable.\n * @return A function that returns an Observable of projected values from the\n * most recent values from each input Observable, or an array of the most\n * recent values from each input Observable.\n */\nexport function withLatestFrom<T, R>(...inputs: any[]): OperatorFunction<T, R | any[]> {\n  const project = popResultSelector(inputs) as ((...args: any[]) => R) | undefined;\n\n  return operate((source, subscriber) => {\n    const len = inputs.length;\n    const otherValues = new Array(len);\n    // An array of whether or not the other sources have emitted. Matched with them by index.\n    // TODO: At somepoint, we should investigate the performance implications here, and look\n    // into using a `Set()` and checking the `size` to see if we're ready.\n    let hasValue = inputs.map(() => false);\n    // Flipped true when we have at least one value from all other sources and\n    // we are ready to start emitting values.\n    let ready = false;\n\n    // Other sources. Note that here we are not checking `subscriber.closed`,\n    // this causes all inputs to be subscribed to, even if nothing can be emitted\n    // from them. This is an important distinction because subscription constitutes\n    // a side-effect.\n    for (let i = 0; i < len; i++) {\n      innerFrom(inputs[i]).subscribe(\n        createOperatorSubscriber(\n          subscriber,\n          (value) => {\n            otherValues[i] = value;\n            if (!ready && !hasValue[i]) {\n              // If we're not ready yet, flag to show this observable has emitted.\n              hasValue[i] = true;\n              // Intentionally terse code.\n              // If all of our other observables have emitted, set `ready` to `true`,\n              // so we know we can start emitting values, then clean up the `hasValue` array,\n              // because we don't need it anymore.\n              (ready = hasValue.every(identity)) && (hasValue = null!);\n            }\n          },\n          // Completing one of the other sources has\n          // no bearing on the completion of our result.\n          noop\n        )\n      );\n    }\n\n    // Source subscription\n    source.subscribe(\n      createOperatorSubscriber(subscriber, (value) => {\n        if (ready) {\n          // We have at least one value from the other sources. Go ahead and emit.\n          const values = [value, ...otherValues];\n          subscriber.next(project ? project(...values) : values);\n        }\n      })\n    );\n  });\n}\n","import { zip as zipStatic } from '../observable/zip';\nimport { ObservableInput, ObservableInputTuple, OperatorFunction, Cons } from '../types';\nimport { operate } from '../util/lift';\n\n/** @deprecated Replaced with {@link zipWith}. Will be removed in v8. */\nexport function zip<T, A extends readonly unknown[]>(otherInputs: [...ObservableInputTuple<A>]): OperatorFunction<T, Cons<T, A>>;\n/** @deprecated Replaced with {@link zipWith}. Will be removed in v8. */\nexport function zip<T, A extends readonly unknown[], R>(\n  otherInputsAndProject: [...ObservableInputTuple<A>],\n  project: (...values: Cons<T, A>) => R\n): OperatorFunction<T, R>;\n/** @deprecated Replaced with {@link zipWith}. Will be removed in v8. */\nexport function zip<T, A extends readonly unknown[]>(...otherInputs: [...ObservableInputTuple<A>]): OperatorFunction<T, Cons<T, A>>;\n/** @deprecated Replaced with {@link zipWith}. Will be removed in v8. */\nexport function zip<T, A extends readonly unknown[], R>(\n  ...otherInputsAndProject: [...ObservableInputTuple<A>, (...values: Cons<T, A>) => R]\n): OperatorFunction<T, R>;\n\n/**\n * @deprecated Replaced with {@link zipWith}. Will be removed in v8.\n */\nexport function zip<T, R>(...sources: Array<ObservableInput<any> | ((...values: Array<any>) => R)>): OperatorFunction<T, any> {\n  return operate((source, subscriber) => {\n    zipStatic(source as ObservableInput<any>, ...(sources as Array<ObservableInput<any>>)).subscribe(subscriber);\n  });\n}\n","import { OperatorFunction, ObservableInput } from '../types';\nimport { zip } from '../observable/zip';\nimport { joinAllInternals } from './joinAllInternals';\n\n/**\n * Collects all observable inner sources from the source, once the source completes,\n * it will subscribe to all inner sources, combining their values by index and emitting\n * them.\n *\n * @see {@link zipWith}\n * @see {@link zip}\n */\nexport function zipAll<T>(): OperatorFunction<ObservableInput<T>, T[]>;\nexport function zipAll<T>(): OperatorFunction<any, T[]>;\nexport function zipAll<T, R>(project: (...values: T[]) => R): OperatorFunction<ObservableInput<T>, R>;\nexport function zipAll<R>(project: (...values: Array<any>) => R): OperatorFunction<any, R>;\n\nexport function zipAll<T, R>(project?: (...values: T[]) => R) {\n  return joinAllInternals(zip, project);\n}\n","import { ObservableInputTuple, OperatorFunction, Cons } from '../types';\nimport { zip } from './zip';\n\n/**\n * Subscribes to the source, and the observable inputs provided as arguments, and combines their values, by index, into arrays.\n *\n * What is meant by \"combine by index\": The first value from each will be made into a single array, then emitted,\n * then the second value from each will be combined into a single array and emitted, then the third value\n * from each will be combined into a single array and emitted, and so on.\n *\n * This will continue until it is no longer able to combine values of the same index into an array.\n *\n * After the last value from any one completed source is emitted in an array, the resulting observable will complete,\n * as there is no way to continue \"zipping\" values together by index.\n *\n * Use-cases for this operator are limited. There are memory concerns if one of the streams is emitting\n * values at a much faster rate than the others. Usage should likely be limited to streams that emit\n * at a similar pace, or finite streams of known length.\n *\n * In many cases, authors want `combineLatestWith` and not `zipWith`.\n *\n * @param otherInputs other observable inputs to collate values from.\n * @return A function that returns an Observable that emits items by index\n * combined from the source Observable and provided Observables, in form of an\n * array.\n */\nexport function zipWith<T, A extends readonly unknown[]>(...otherInputs: [...ObservableInputTuple<A>]): OperatorFunction<T, Cons<T, A>> {\n  return zip(...otherInputs);\n}\n","import { Observable } from '../Observable';\nimport { SchedulerLike } from '../types';\n\nexport function scheduleArray<T>(input: ArrayLike<T>, scheduler: SchedulerLike) {\n  return new Observable<T>((subscriber) => {\n    // The current array index.\n    let i = 0;\n    // Start iterating over the array like on a schedule.\n    return scheduler.schedule(function () {\n      if (i === input.length) {\n        // If we have hit the end of the array like in the\n        // previous job, we can complete.\n        subscriber.complete();\n      } else {\n        // Otherwise let's next the value at the current index,\n        // then increment our index.\n        subscriber.next(input[i++]);\n        // If the last emission didn't cause us to close the subscriber\n        // (via take or some side effect), reschedule the job and we'll\n        // make another pass.\n        if (!subscriber.closed) {\n          this.schedule();\n        }\n      }\n    });\n  });\n}\n","import { SchedulerLike } from '../types';\nimport { Observable } from '../Observable';\nimport { executeSchedule } from '../util/executeSchedule';\n\nexport function scheduleAsyncIterable<T>(input: AsyncIterable<T>, scheduler: SchedulerLike) {\n  if (!input) {\n    throw new Error('Iterable cannot be null');\n  }\n  return new Observable<T>((subscriber) => {\n    executeSchedule(subscriber, scheduler, () => {\n      const iterator = input[Symbol.asyncIterator]();\n      executeSchedule(\n        subscriber,\n        scheduler,\n        () => {\n          iterator.next().then((result) => {\n            if (result.done) {\n              // This will remove the subscriptions from\n              // the parent subscription.\n              subscriber.complete();\n            } else {\n              subscriber.next(result.value);\n            }\n          });\n        },\n        0,\n        true\n      );\n    });\n  });\n}\n","import { Observable } from '../Observable';\nimport { SchedulerLike } from '../types';\nimport { iterator as Symbol_iterator } from '../symbol/iterator';\nimport { isFunction } from '../util/isFunction';\nimport { executeSchedule } from '../util/executeSchedule';\n\n/**\n * Used in {@link scheduled} to create an observable from an Iterable.\n * @param input The iterable to create an observable from\n * @param scheduler The scheduler to use\n */\nexport function scheduleIterable<T>(input: Iterable<T>, scheduler: SchedulerLike) {\n  return new Observable<T>((subscriber) => {\n    let iterator: Iterator<T, T>;\n\n    // Schedule the initial creation of the iterator from\n    // the iterable. This is so the code in the iterable is\n    // not called until the scheduled job fires.\n    executeSchedule(subscriber, scheduler, () => {\n      // Create the iterator.\n      iterator = (input as any)[Symbol_iterator]();\n\n      executeSchedule(\n        subscriber,\n        scheduler,\n        () => {\n          let value: T;\n          let done: boolean | undefined;\n          try {\n            // Pull the value out of the iterator\n            ({ value, done } = iterator.next());\n          } catch (err) {\n            // We got an error while pulling from the iterator\n            subscriber.error(err);\n            return;\n          }\n\n          if (done) {\n            // If it is \"done\" we just complete. This mimics the\n            // behavior of JavaScript's `for..of` consumption of\n            // iterables, which will not emit the value from an iterator\n            // result of `{ done: true: value: 'here' }`.\n            subscriber.complete();\n          } else {\n            // The iterable is not done, emit the value.\n            subscriber.next(value);\n          }\n        },\n        0,\n        true\n      );\n    });\n\n    // During finalization, if we see this iterator has a `return` method,\n    // then we know it is a Generator, and not just an Iterator. So we call\n    // the `return()` function. This will ensure that any `finally { }` blocks\n    // inside of the generator we can hit will be hit properly.\n    return () => isFunction(iterator?.return) && iterator.return();\n  });\n}\n","import { innerFrom } from '../observable/innerFrom';\nimport { observeOn } from '../operators/observeOn';\nimport { subscribeOn } from '../operators/subscribeOn';\nimport { InteropObservable, SchedulerLike } from '../types';\n\nexport function scheduleObservable<T>(input: InteropObservable<T>, scheduler: SchedulerLike) {\n  return innerFrom(input).pipe(subscribeOn(scheduler), observeOn(scheduler));\n}\n","import { innerFrom } from '../observable/innerFrom';\nimport { observeOn } from '../operators/observeOn';\nimport { subscribeOn } from '../operators/subscribeOn';\nimport { SchedulerLike } from '../types';\n\nexport function schedulePromise<T>(input: PromiseLike<T>, scheduler: SchedulerLike) {\n  return innerFrom(input).pipe(subscribeOn(scheduler), observeOn(scheduler));\n}\n","import { SchedulerLike, ReadableStreamLike } from '../types';\nimport { Observable } from '../Observable';\nimport { scheduleAsyncIterable } from './scheduleAsyncIterable';\nimport { readableStreamLikeToAsyncGenerator } from '../util/isReadableStreamLike';\n\nexport function scheduleReadableStreamLike<T>(input: ReadableStreamLike<T>, scheduler: SchedulerLike): Observable<T> {\n  return scheduleAsyncIterable(readableStreamLikeToAsyncGenerator(input), scheduler);\n}\n","import { scheduleObservable } from './scheduleObservable';\nimport { schedulePromise } from './schedulePromise';\nimport { scheduleArray } from './scheduleArray';\nimport { scheduleIterable } from './scheduleIterable';\nimport { scheduleAsyncIterable } from './scheduleAsyncIterable';\nimport { isInteropObservable } from '../util/isInteropObservable';\nimport { isPromise } from '../util/isPromise';\nimport { isArrayLike } from '../util/isArrayLike';\nimport { isIterable } from '../util/isIterable';\nimport { ObservableInput, SchedulerLike } from '../types';\nimport { Observable } from '../Observable';\nimport { isAsyncIterable } from '../util/isAsyncIterable';\nimport { createInvalidObservableTypeError } from '../util/throwUnobservableError';\nimport { isReadableStreamLike } from '../util/isReadableStreamLike';\nimport { scheduleReadableStreamLike } from './scheduleReadableStreamLike';\n\n/**\n * Converts from a common {@link ObservableInput} type to an observable where subscription and emissions\n * are scheduled on the provided scheduler.\n *\n * @see {@link from}\n * @see {@link of}\n *\n * @param input The observable, array, promise, iterable, etc you would like to schedule\n * @param scheduler The scheduler to use to schedule the subscription and emissions from\n * the returned observable.\n */\nexport function scheduled<T>(input: ObservableInput<T>, scheduler: SchedulerLike): Observable<T> {\n  if (input != null) {\n    if (isInteropObservable(input)) {\n      return scheduleObservable(input, scheduler);\n    }\n    if (isArrayLike(input)) {\n      return scheduleArray(input, scheduler);\n    }\n    if (isPromise(input)) {\n      return schedulePromise(input, scheduler);\n    }\n    if (isAsyncIterable(input)) {\n      return scheduleAsyncIterable(input, scheduler);\n    }\n    if (isIterable(input)) {\n      return scheduleIterable(input, scheduler);\n    }\n    if (isReadableStreamLike(input)) {\n      return scheduleReadableStreamLike(input, scheduler);\n    }\n  }\n  throw createInvalidObservableTypeError(input);\n}\n","import { Scheduler } from '../Scheduler';\nimport { Subscription } from '../Subscription';\nimport { SchedulerAction } from '../types';\n\n/**\n * A unit of work to be executed in a `scheduler`. An action is typically\n * created from within a {@link SchedulerLike} and an RxJS user does not need to concern\n * themselves about creating and manipulating an Action.\n *\n * ```ts\n * class Action<T> extends Subscription {\n *   new (scheduler: Scheduler, work: (state?: T) => void);\n *   schedule(state?: T, delay: number = 0): Subscription;\n * }\n * ```\n *\n * @class Action<T>\n */\nexport class Action<T> extends Subscription {\n  constructor(scheduler: Scheduler, work: (this: SchedulerAction<T>, state?: T) => void) {\n    super();\n  }\n  /**\n   * Schedules this action on its parent {@link SchedulerLike} for execution. May be passed\n   * some context object, `state`. May happen at some point in the future,\n   * according to the `delay` parameter, if specified.\n   * @param {T} [state] Some contextual data that the `work` function uses when\n   * called by the Scheduler.\n   * @param {number} [delay] Time to wait before executing the work, where the\n   * time unit is implicit and defined by the Scheduler.\n   * @return {void}\n   */\n  public schedule(state?: T, delay: number = 0): Subscription {\n    return this;\n  }\n}\n","import { AsyncAction } from './AsyncAction';\nimport { AnimationFrameScheduler } from './AnimationFrameScheduler';\nimport { SchedulerAction } from '../types';\nimport { animationFrameProvider } from './animationFrameProvider';\n\nexport class AnimationFrameAction<T> extends AsyncAction<T> {\n  constructor(protected scheduler: AnimationFrameScheduler, protected work: (this: SchedulerAction<T>, state?: T) => void) {\n    super(scheduler, work);\n  }\n\n  protected requestAsyncId(scheduler: AnimationFrameScheduler, id?: any, delay: number = 0): any {\n    // If delay is greater than 0, request as an async action.\n    if (delay !== null && delay > 0) {\n      return super.requestAsyncId(scheduler, id, delay);\n    }\n    // Push the action to the end of the scheduler queue.\n    scheduler.actions.push(this);\n    // If an animation frame has already been requested, don't request another\n    // one. If an animation frame hasn't been requested yet, request one. Return\n    // the current animation frame request id.\n    return scheduler._scheduled || (scheduler._scheduled = animationFrameProvider.requestAnimationFrame(() => scheduler.flush(undefined)));\n  }\n  protected recycleAsyncId(scheduler: AnimationFrameScheduler, id?: any, delay: number = 0): any {\n    // If delay exists and is greater than 0, or if the delay is null (the\n    // action wasn't rescheduled) but was originally scheduled as an async\n    // action, then recycle as an async action.\n    if ((delay != null && delay > 0) || (delay == null && this.delay > 0)) {\n      return super.recycleAsyncId(scheduler, id, delay);\n    }\n    // If the scheduler queue has no remaining actions with the same async id,\n    // cancel the requested animation frame and set the scheduled flag to\n    // undefined so the next AnimationFrameAction will request its own.\n    if (!scheduler.actions.some((action) => action.id === id)) {\n      animationFrameProvider.cancelAnimationFrame(id);\n      scheduler._scheduled = undefined;\n    }\n    // Return undefined so the action knows to request a new async id if it's rescheduled.\n    return undefined;\n  }\n}\n","import { AsyncAction } from './AsyncAction';\nimport { AsyncScheduler } from './AsyncScheduler';\n\nexport class AnimationFrameScheduler extends AsyncScheduler {\n  public flush(action?: AsyncAction<any>): void {\n    this._active = true;\n    // The async id that effects a call to flush is stored in _scheduled.\n    // Before executing an action, it's necessary to check the action's async\n    // id to determine whether it's supposed to be executed in the current\n    // flush.\n    // Previous implementations of this method used a count to determine this,\n    // but that was unsound, as actions that are unsubscribed - i.e. cancelled -\n    // are removed from the actions array and that can shift actions that are\n    // scheduled to be executed in a subsequent flush into positions at which\n    // they are executed within the current flush.\n    const flushId = this._scheduled;\n    this._scheduled = undefined;\n\n    const { actions } = this;\n    let error: any;\n    action = action || actions.shift()!;\n\n    do {\n      if ((error = action.execute(action.state, action.delay))) {\n        break;\n      }\n    } while ((action = actions[0]) && action.id === flushId && actions.shift());\n\n    this._active = false;\n\n    if (error) {\n      while ((action = actions[0]) && action.id === flushId && actions.shift()) {\n        action.unsubscribe();\n      }\n      throw error;\n    }\n  }\n}\n","import { AsyncAction } from './AsyncAction';\nimport { AsapScheduler } from './AsapScheduler';\nimport { SchedulerAction } from '../types';\nimport { immediateProvider } from './immediateProvider';\n\nexport class AsapAction<T> extends AsyncAction<T> {\n  constructor(protected scheduler: AsapScheduler, protected work: (this: SchedulerAction<T>, state?: T) => void) {\n    super(scheduler, work);\n  }\n\n  protected requestAsyncId(scheduler: AsapScheduler, id?: any, delay: number = 0): any {\n    // If delay is greater than 0, request as an async action.\n    if (delay !== null && delay > 0) {\n      return super.requestAsyncId(scheduler, id, delay);\n    }\n    // Push the action to the end of the scheduler queue.\n    scheduler.actions.push(this);\n    // If a microtask has already been scheduled, don't schedule another\n    // one. If a microtask hasn't been scheduled yet, schedule one now. Return\n    // the current scheduled microtask id.\n    return scheduler._scheduled || (scheduler._scheduled = immediateProvider.setImmediate(scheduler.flush.bind(scheduler, undefined)));\n  }\n  protected recycleAsyncId(scheduler: AsapScheduler, id?: any, delay: number = 0): any {\n    // If delay exists and is greater than 0, or if the delay is null (the\n    // action wasn't rescheduled) but was originally scheduled as an async\n    // action, then recycle as an async action.\n    if ((delay != null && delay > 0) || (delay == null && this.delay > 0)) {\n      return super.recycleAsyncId(scheduler, id, delay);\n    }\n    // If the scheduler queue has no remaining actions with the same async id,\n    // cancel the requested microtask and set the scheduled flag to undefined\n    // so the next AsapAction will request its own.\n    if (!scheduler.actions.some((action) => action.id === id)) {\n      immediateProvider.clearImmediate(id);\n      scheduler._scheduled = undefined;\n    }\n    // Return undefined so the action knows to request a new async id if it's rescheduled.\n    return undefined;\n  }\n}\n","import { AsyncAction } from './AsyncAction';\nimport { AsyncScheduler } from './AsyncScheduler';\n\nexport class AsapScheduler extends AsyncScheduler {\n  public flush(action?: AsyncAction<any>): void {\n    this._active = true;\n    // The async id that effects a call to flush is stored in _scheduled.\n    // Before executing an action, it's necessary to check the action's async\n    // id to determine whether it's supposed to be executed in the current\n    // flush.\n    // Previous implementations of this method used a count to determine this,\n    // but that was unsound, as actions that are unsubscribed - i.e. cancelled -\n    // are removed from the actions array and that can shift actions that are\n    // scheduled to be executed in a subsequent flush into positions at which\n    // they are executed within the current flush.\n    const flushId = this._scheduled;\n    this._scheduled = undefined;\n\n    const { actions } = this;\n    let error: any;\n    action = action || actions.shift()!;\n\n    do {\n      if ((error = action.execute(action.state, action.delay))) {\n        break;\n      }\n    } while ((action = actions[0]) && action.id === flushId && actions.shift());\n\n    this._active = false;\n\n    if (error) {\n      while ((action = actions[0]) && action.id === flushId && actions.shift()) {\n        action.unsubscribe();\n      }\n      throw error;\n    }\n  }\n}\n","import { Action } from './Action';\nimport { SchedulerAction } from '../types';\nimport { Subscription } from '../Subscription';\nimport { AsyncScheduler } from './AsyncScheduler';\nimport { intervalProvider } from './intervalProvider';\nimport { arrRemove } from '../util/arrRemove';\n\nexport class AsyncAction<T> extends Action<T> {\n  public id: any;\n  public state?: T;\n  // @ts-ignore: Property has no initializer and is not definitely assigned\n  public delay: number;\n  protected pending: boolean = false;\n\n  constructor(protected scheduler: AsyncScheduler, protected work: (this: SchedulerAction<T>, state?: T) => void) {\n    super(scheduler, work);\n  }\n\n  public schedule(state?: T, delay: number = 0): Subscription {\n    if (this.closed) {\n      return this;\n    }\n\n    // Always replace the current state with the new state.\n    this.state = state;\n\n    const id = this.id;\n    const scheduler = this.scheduler;\n\n    //\n    // Important implementation note:\n    //\n    // Actions only execute once by default, unless rescheduled from within the\n    // scheduled callback. This allows us to implement single and repeat\n    // actions via the same code path, without adding API surface area, as well\n    // as mimic traditional recursion but across asynchronous boundaries.\n    //\n    // However, JS runtimes and timers distinguish between intervals achieved by\n    // serial `setTimeout` calls vs. a single `setInterval` call. An interval of\n    // serial `setTimeout` calls can be individually delayed, which delays\n    // scheduling the next `setTimeout`, and so on. `setInterval` attempts to\n    // guarantee the interval callback will be invoked more precisely to the\n    // interval period, regardless of load.\n    //\n    // Therefore, we use `setInterval` to schedule single and repeat actions.\n    // If the action reschedules itself with the same delay, the interval is not\n    // canceled. If the action doesn't reschedule, or reschedules with a\n    // different delay, the interval will be canceled after scheduled callback\n    // execution.\n    //\n    if (id != null) {\n      this.id = this.recycleAsyncId(scheduler, id, delay);\n    }\n\n    // Set the pending flag indicating that this action has been scheduled, or\n    // has recursively rescheduled itself.\n    this.pending = true;\n\n    this.delay = delay;\n    // If this action has already an async Id, don't request a new one.\n    this.id = this.id || this.requestAsyncId(scheduler, this.id, delay);\n\n    return this;\n  }\n\n  protected requestAsyncId(scheduler: AsyncScheduler, _id?: any, delay: number = 0): any {\n    return intervalProvider.setInterval(scheduler.flush.bind(scheduler, this), delay);\n  }\n\n  protected recycleAsyncId(_scheduler: AsyncScheduler, id: any, delay: number | null = 0): any {\n    // If this action is rescheduled with the same delay time, don't clear the interval id.\n    if (delay != null && this.delay === delay && this.pending === false) {\n      return id;\n    }\n    // Otherwise, if the action's delay time is different from the current delay,\n    // or the action has been rescheduled before it's executed, clear the interval id\n    intervalProvider.clearInterval(id);\n    return undefined;\n  }\n\n  /**\n   * Immediately executes this action and the `work` it contains.\n   * @return {any}\n   */\n  public execute(state: T, delay: number): any {\n    if (this.closed) {\n      return new Error('executing a cancelled action');\n    }\n\n    this.pending = false;\n    const error = this._execute(state, delay);\n    if (error) {\n      return error;\n    } else if (this.pending === false && this.id != null) {\n      // Dequeue if the action didn't reschedule itself. Don't call\n      // unsubscribe(), because the action could reschedule later.\n      // For example:\n      // ```\n      // scheduler.schedule(function doWork(counter) {\n      //   /* ... I'm a busy worker bee ... */\n      //   var originalAction = this;\n      //   /* wait 100ms before rescheduling the action */\n      //   setTimeout(function () {\n      //     originalAction.schedule(counter + 1);\n      //   }, 100);\n      // }, 1000);\n      // ```\n      this.id = this.recycleAsyncId(this.scheduler, this.id, null);\n    }\n  }\n\n  protected _execute(state: T, _delay: number): any {\n    let errored: boolean = false;\n    let errorValue: any;\n    try {\n      this.work(state);\n    } catch (e) {\n      errored = true;\n      // HACK: Since code elsewhere is relying on the \"truthiness\" of the\n      // return here, we can't have it return \"\" or 0 or false.\n      // TODO: Clean this up when we refactor schedulers mid-version-8 or so.\n      errorValue = e ? e : new Error('Scheduled action threw falsy error');\n    }\n    if (errored) {\n      this.unsubscribe();\n      return errorValue;\n    }\n  }\n\n  unsubscribe() {\n    if (!this.closed) {\n      const { id, scheduler } = this;\n      const { actions } = scheduler;\n\n      this.work = this.state = this.scheduler = null!;\n      this.pending = false;\n\n      arrRemove(actions, this);\n      if (id != null) {\n        this.id = this.recycleAsyncId(scheduler, id, null);\n      }\n\n      this.delay = null!;\n      super.unsubscribe();\n    }\n  }\n}\n","import { Scheduler } from '../Scheduler';\nimport { Action } from './Action';\nimport { AsyncAction } from './AsyncAction';\n\nexport class AsyncScheduler extends Scheduler {\n  public actions: Array<AsyncAction<any>> = [];\n  /**\n   * A flag to indicate whether the Scheduler is currently executing a batch of\n   * queued actions.\n   * @type {boolean}\n   * @internal\n   */\n  public _active: boolean = false;\n  /**\n   * An internal ID used to track the latest asynchronous task such as those\n   * coming from `setTimeout`, `setInterval`, `requestAnimationFrame`, and\n   * others.\n   * @type {any}\n   * @internal\n   */\n  public _scheduled: any = undefined;\n\n  constructor(SchedulerAction: typeof Action, now: () => number = Scheduler.now) {\n    super(SchedulerAction, now);\n  }\n\n  public flush(action: AsyncAction<any>): void {\n    const { actions } = this;\n\n    if (this._active) {\n      actions.push(action);\n      return;\n    }\n\n    let error: any;\n    this._active = true;\n\n    do {\n      if ((error = action.execute(action.state, action.delay))) {\n        break;\n      }\n    } while ((action = actions.shift()!)); // exhaust the scheduler queue\n\n    this._active = false;\n\n    if (error) {\n      while ((action = actions.shift()!)) {\n        action.unsubscribe();\n      }\n      throw error;\n    }\n  }\n}\n","import { AsyncAction } from './AsyncAction';\nimport { Subscription } from '../Subscription';\nimport { QueueScheduler } from './QueueScheduler';\nimport { SchedulerAction } from '../types';\n\nexport class QueueAction<T> extends AsyncAction<T> {\n\n  constructor(protected scheduler: QueueScheduler,\n              protected work: (this: SchedulerAction<T>, state?: T) => void) {\n    super(scheduler, work);\n  }\n\n  public schedule(state?: T, delay: number = 0): Subscription {\n    if (delay > 0) {\n      return super.schedule(state, delay);\n    }\n    this.delay = delay;\n    this.state = state;\n    this.scheduler.flush(this);\n    return this;\n  }\n\n  public execute(state: T, delay: number): any {\n    return (delay > 0 || this.closed) ?\n      super.execute(state, delay) :\n      this._execute(state, delay) ;\n  }\n\n  protected requestAsyncId(scheduler: QueueScheduler, id?: any, delay: number = 0): any {\n    // If delay exists and is greater than 0, or if the delay is null (the\n    // action wasn't rescheduled) but was originally scheduled as an async\n    // action, then recycle as an async action.\n\n    if ((delay != null && delay > 0) || (delay == null && this.delay > 0)) {\n      return super.requestAsyncId(scheduler, id, delay);\n    }\n    // Otherwise flush the scheduler starting with this action.\n    return scheduler.flush(this);\n  }\n}\n","import { AsyncScheduler } from './AsyncScheduler';\n\nexport class QueueScheduler extends AsyncScheduler {\n}\n","import { AsyncAction } from './AsyncAction';\nimport { Subscription } from '../Subscription';\nimport { AsyncScheduler } from './AsyncScheduler';\nimport { SchedulerAction } from '../types';\n\nexport class VirtualTimeScheduler extends AsyncScheduler {\n  /** @deprecated Not used in VirtualTimeScheduler directly. Will be removed in v8. */\n  static frameTimeFactor = 10;\n\n  /**\n   * The current frame for the state of the virtual scheduler instance. The the difference\n   * between two \"frames\" is synonymous with the passage of \"virtual time units\". So if\n   * you record `scheduler.frame` to be `1`, then later, observe `scheduler.frame` to be at `11`,\n   * that means `10` virtual time units have passed.\n   */\n  public frame: number = 0;\n\n  /**\n   * Used internally to examine the current virtual action index being processed.\n   * @deprecated Internal implementation detail, do not use directly. Will be made internal in v8.\n   */\n  public index: number = -1;\n\n  /**\n   * This creates an instance of a `VirtualTimeScheduler`. Experts only. The signature of\n   * this constructor is likely to change in the long run.\n   *\n   * @param schedulerActionCtor The type of Action to initialize when initializing actions during scheduling.\n   * @param maxFrames The maximum number of frames to process before stopping. Used to prevent endless flush cycles.\n   */\n  constructor(schedulerActionCtor: typeof AsyncAction = VirtualAction as any, public maxFrames: number = Infinity) {\n    super(schedulerActionCtor, () => this.frame);\n  }\n\n  /**\n   * Prompt the Scheduler to execute all of its queued actions, therefore\n   * clearing its queue.\n   * @return {void}\n   */\n  public flush(): void {\n    const { actions, maxFrames } = this;\n    let error: any;\n    let action: AsyncAction<any> | undefined;\n\n    while ((action = actions[0]) && action.delay <= maxFrames) {\n      actions.shift();\n      this.frame = action.delay;\n\n      if ((error = action.execute(action.state, action.delay))) {\n        break;\n      }\n    }\n\n    if (error) {\n      while ((action = actions.shift())) {\n        action.unsubscribe();\n      }\n      throw error;\n    }\n  }\n}\n\nexport class VirtualAction<T> extends AsyncAction<T> {\n  protected active: boolean = true;\n\n  constructor(\n    protected scheduler: VirtualTimeScheduler,\n    protected work: (this: SchedulerAction<T>, state?: T) => void,\n    protected index: number = (scheduler.index += 1)\n  ) {\n    super(scheduler, work);\n    this.index = scheduler.index = index;\n  }\n\n  public schedule(state?: T, delay: number = 0): Subscription {\n    if (Number.isFinite(delay)) {\n      if (!this.id) {\n        return super.schedule(state, delay);\n      }\n      this.active = false;\n      // If an action is rescheduled, we save allocations by mutating its state,\n      // pushing it to the end of the scheduler queue, and recycling the action.\n      // But since the VirtualTimeScheduler is used for testing, VirtualActions\n      // must be immutable so they can be inspected later.\n      const action = new VirtualAction(this.scheduler, this.work);\n      this.add(action);\n      return action.schedule(state, delay);\n    } else {\n      // If someone schedules something with Infinity, it'll never happen. So we\n      // don't even schedule it.\n      return Subscription.EMPTY;\n    }\n  }\n\n  protected requestAsyncId(scheduler: VirtualTimeScheduler, id?: any, delay: number = 0): any {\n    this.delay = scheduler.frame + delay;\n    const { actions } = scheduler;\n    actions.push(this);\n    (actions as Array<VirtualAction<T>>).sort(VirtualAction.sortActions);\n    return true;\n  }\n\n  protected recycleAsyncId(scheduler: VirtualTimeScheduler, id?: any, delay: number = 0): any {\n    return undefined;\n  }\n\n  protected _execute(state: T, delay: number): any {\n    if (this.active === true) {\n      return super._execute(state, delay);\n    }\n  }\n\n  private static sortActions<T>(a: VirtualAction<T>, b: VirtualAction<T>) {\n    if (a.delay === b.delay) {\n      if (a.index === b.index) {\n        return 0;\n      } else if (a.index > b.index) {\n        return 1;\n      } else {\n        return -1;\n      }\n    } else if (a.delay > b.delay) {\n      return 1;\n    } else {\n      return -1;\n    }\n  }\n}\n","import { AnimationFrameAction } from './AnimationFrameAction';\nimport { AnimationFrameScheduler } from './AnimationFrameScheduler';\n\n/**\n *\n * Animation Frame Scheduler\n *\n * <span class=\"informal\">Perform task when `window.requestAnimationFrame` would fire</span>\n *\n * When `animationFrame` scheduler is used with delay, it will fall back to {@link asyncScheduler} scheduler\n * behaviour.\n *\n * Without delay, `animationFrame` scheduler can be used to create smooth browser animations.\n * It makes sure scheduled task will happen just before next browser content repaint,\n * thus performing animations as efficiently as possible.\n *\n * ## Example\n * Schedule div height animation\n * ```ts\n * // html: <div style=\"background: #0ff;\"></div>\n * import { animationFrameScheduler } from 'rxjs';\n *\n * const div = document.querySelector('div');\n *\n * animationFrameScheduler.schedule(function(height) {\n *   div.style.height = height + \"px\";\n *\n *   this.schedule(height + 1);  // `this` references currently executing Action,\n *                               // which we reschedule with new state\n * }, 0, 0);\n *\n * // You will see a div element growing in height\n * ```\n */\n\nexport const animationFrameScheduler = new AnimationFrameScheduler(AnimationFrameAction);\n\n/**\n * @deprecated Renamed to {@link animationFrameScheduler}. Will be removed in v8.\n */\nexport const animationFrame = animationFrameScheduler;\n","import { Subscription } from '../Subscription';\n\ninterface AnimationFrameProvider {\n  schedule(callback: FrameRequestCallback): Subscription;\n  requestAnimationFrame: typeof requestAnimationFrame;\n  cancelAnimationFrame: typeof cancelAnimationFrame;\n  delegate:\n    | {\n        requestAnimationFrame: typeof requestAnimationFrame;\n        cancelAnimationFrame: typeof cancelAnimationFrame;\n      }\n    | undefined;\n}\n\nexport const animationFrameProvider: AnimationFrameProvider = {\n  // When accessing the delegate, use the variable rather than `this` so that\n  // the functions can be called without being bound to the provider.\n  schedule(callback) {\n    let request = requestAnimationFrame;\n    let cancel: typeof cancelAnimationFrame | undefined = cancelAnimationFrame;\n    const { delegate } = animationFrameProvider;\n    if (delegate) {\n      request = delegate.requestAnimationFrame;\n      cancel = delegate.cancelAnimationFrame;\n    }\n    const handle = request((timestamp) => {\n      // Clear the cancel function. The request has been fulfilled, so\n      // attempting to cancel the request upon unsubscription would be\n      // pointless.\n      cancel = undefined;\n      callback(timestamp);\n    });\n    return new Subscription(() => cancel?.(handle));\n  },\n  requestAnimationFrame(...args) {\n    const { delegate } = animationFrameProvider;\n    return (delegate?.requestAnimationFrame || requestAnimationFrame)(...args);\n  },\n  cancelAnimationFrame(...args) {\n    const { delegate } = animationFrameProvider;\n    return (delegate?.cancelAnimationFrame || cancelAnimationFrame)(...args);\n  },\n  delegate: undefined,\n};\n","import { AsapAction } from './AsapAction';\nimport { AsapScheduler } from './AsapScheduler';\n\n/**\n *\n * Asap Scheduler\n *\n * <span class=\"informal\">Perform task as fast as it can be performed asynchronously</span>\n *\n * `asap` scheduler behaves the same as {@link asyncScheduler} scheduler when you use it to delay task\n * in time. If however you set delay to `0`, `asap` will wait for current synchronously executing\n * code to end and then it will try to execute given task as fast as possible.\n *\n * `asap` scheduler will do its best to minimize time between end of currently executing code\n * and start of scheduled task. This makes it best candidate for performing so called \"deferring\".\n * Traditionally this was achieved by calling `setTimeout(deferredTask, 0)`, but that technique involves\n * some (although minimal) unwanted delay.\n *\n * Note that using `asap` scheduler does not necessarily mean that your task will be first to process\n * after currently executing code. In particular, if some task was also scheduled with `asap` before,\n * that task will execute first. That being said, if you need to schedule task asynchronously, but\n * as soon as possible, `asap` scheduler is your best bet.\n *\n * ## Example\n * Compare async and asap scheduler<\n * ```ts\n * import { asapScheduler, asyncScheduler } from 'rxjs';\n *\n * asyncScheduler.schedule(() => console.log('async')); // scheduling 'async' first...\n * asapScheduler.schedule(() => console.log('asap'));\n *\n * // Logs:\n * // \"asap\"\n * // \"async\"\n * // ... but 'asap' goes first!\n * ```\n */\n\nexport const asapScheduler = new AsapScheduler(AsapAction);\n\n/**\n * @deprecated Renamed to {@link asapScheduler}. Will be removed in v8.\n */\nexport const asap = asapScheduler;\n","import { AsyncAction } from './AsyncAction';\nimport { AsyncScheduler } from './AsyncScheduler';\n\n/**\n *\n * Async Scheduler\n *\n * <span class=\"informal\">Schedule task as if you used setTimeout(task, duration)</span>\n *\n * `async` scheduler schedules tasks asynchronously, by putting them on the JavaScript\n * event loop queue. It is best used to delay tasks in time or to schedule tasks repeating\n * in intervals.\n *\n * If you just want to \"defer\" task, that is to perform it right after currently\n * executing synchronous code ends (commonly achieved by `setTimeout(deferredTask, 0)`),\n * better choice will be the {@link asapScheduler} scheduler.\n *\n * ## Examples\n * Use async scheduler to delay task\n * ```ts\n * import { asyncScheduler } from 'rxjs';\n *\n * const task = () => console.log('it works!');\n *\n * asyncScheduler.schedule(task, 2000);\n *\n * // After 2 seconds logs:\n * // \"it works!\"\n * ```\n *\n * Use async scheduler to repeat task in intervals\n * ```ts\n * import { asyncScheduler } from 'rxjs';\n *\n * function task(state) {\n *   console.log(state);\n *   this.schedule(state + 1, 1000); // `this` references currently executing Action,\n *                                   // which we reschedule with new state and delay\n * }\n *\n * asyncScheduler.schedule(task, 3000, 0);\n *\n * // Logs:\n * // 0 after 3s\n * // 1 after 4s\n * // 2 after 5s\n * // 3 after 6s\n * ```\n */\n\nexport const asyncScheduler = new AsyncScheduler(AsyncAction);\n\n/**\n * @deprecated Renamed to {@link asyncScheduler}. Will be removed in v8.\n */\nexport const async = asyncScheduler;\n","import { TimestampProvider } from '../types';\n\ninterface DateTimestampProvider extends TimestampProvider {\n  delegate: TimestampProvider | undefined;\n}\n\nexport const dateTimestampProvider: DateTimestampProvider = {\n  now() {\n    // Use the variable rather than `this` so that the function can be called\n    // without being bound to the provider.\n    return (dateTimestampProvider.delegate || Date).now();\n  },\n  delegate: undefined,\n};\n","import { Immediate } from '../util/Immediate';\nimport type { TimerHandle } from './timerHandle';\nconst { setImmediate, clearImmediate } = Immediate;\n\ntype SetImmediateFunction = (handler: () => void, ...args: any[]) => TimerHandle;\ntype ClearImmediateFunction = (handle: TimerHandle) => void;\n\ninterface ImmediateProvider {\n  setImmediate: SetImmediateFunction;\n  clearImmediate: ClearImmediateFunction;\n  delegate:\n    | {\n        setImmediate: SetImmediateFunction;\n        clearImmediate: ClearImmediateFunction;\n      }\n    | undefined;\n}\n\nexport const immediateProvider: ImmediateProvider = {\n  // When accessing the delegate, use the variable rather than `this` so that\n  // the functions can be called without being bound to the provider.\n  setImmediate(...args) {\n    const { delegate } = immediateProvider;\n    return (delegate?.setImmediate || setImmediate)(...args);\n  },\n  clearImmediate(handle) {\n    const { delegate } = immediateProvider;\n    return (delegate?.clearImmediate || clearImmediate)(handle as any);\n  },\n  delegate: undefined,\n};\n","import type { TimerHandle } from './timerHandle';\ntype SetIntervalFunction = (handler: () => void, timeout?: number, ...args: any[]) => TimerHandle;\ntype ClearIntervalFunction = (handle: TimerHandle) => void;\n\ninterface IntervalProvider {\n  setInterval: SetIntervalFunction;\n  clearInterval: ClearIntervalFunction;\n  delegate:\n    | {\n        setInterval: SetIntervalFunction;\n        clearInterval: ClearIntervalFunction;\n      }\n    | undefined;\n}\n\nexport const intervalProvider: IntervalProvider = {\n  // When accessing the delegate, use the variable rather than `this` so that\n  // the functions can be called without being bound to the provider.\n  setInterval(handler: () => void, timeout?: number, ...args) {\n    const { delegate } = intervalProvider;\n    if (delegate?.setInterval) {\n      return delegate.setInterval(handler, timeout, ...args);\n    }\n    return setInterval(handler, timeout, ...args);\n  },\n  clearInterval(handle) {\n    const { delegate } = intervalProvider;\n    return (delegate?.clearInterval || clearInterval)(handle as any);\n  },\n  delegate: undefined,\n};\n","import { TimestampProvider } from '../types';\n\ninterface PerformanceTimestampProvider extends TimestampProvider {\n  delegate: TimestampProvider | undefined;\n}\n\nexport const performanceTimestampProvider: PerformanceTimestampProvider = {\n  now() {\n    // Use the variable rather than `this` so that the function can be called\n    // without being bound to the provider.\n    return (performanceTimestampProvider.delegate || performance).now();\n  },\n  delegate: undefined,\n};\n","import { QueueAction } from './QueueAction';\nimport { QueueScheduler } from './QueueScheduler';\n\n/**\n *\n * Queue Scheduler\n *\n * <span class=\"informal\">Put every next task on a queue, instead of executing it immediately</span>\n *\n * `queue` scheduler, when used with delay, behaves the same as {@link asyncScheduler} scheduler.\n *\n * When used without delay, it schedules given task synchronously - executes it right when\n * it is scheduled. However when called recursively, that is when inside the scheduled task,\n * another task is scheduled with queue scheduler, instead of executing immediately as well,\n * that task will be put on a queue and wait for current one to finish.\n *\n * This means that when you execute task with `queue` scheduler, you are sure it will end\n * before any other task scheduled with that scheduler will start.\n *\n * ## Examples\n * Schedule recursively first, then do something\n * ```ts\n * import { queueScheduler } from 'rxjs';\n *\n * queueScheduler.schedule(() => {\n *   queueScheduler.schedule(() => console.log('second')); // will not happen now, but will be put on a queue\n *\n *   console.log('first');\n * });\n *\n * // Logs:\n * // \"first\"\n * // \"second\"\n * ```\n *\n * Reschedule itself recursively\n * ```ts\n * import { queueScheduler } from 'rxjs';\n *\n * queueScheduler.schedule(function(state) {\n *   if (state !== 0) {\n *     console.log('before', state);\n *     this.schedule(state - 1); // `this` references currently executing Action,\n *                               // which we reschedule with new state\n *     console.log('after', state);\n *   }\n * }, 0, 3);\n *\n * // In scheduler that runs recursively, you would expect:\n * // \"before\", 3\n * // \"before\", 2\n * // \"before\", 1\n * // \"after\", 1\n * // \"after\", 2\n * // \"after\", 3\n *\n * // But with queue it logs:\n * // \"before\", 3\n * // \"after\", 3\n * // \"before\", 2\n * // \"after\", 2\n * // \"before\", 1\n * // \"after\", 1\n * ```\n */\n\nexport const queueScheduler = new QueueScheduler(QueueAction);\n\n/**\n * @deprecated Renamed to {@link queueScheduler}. Will be removed in v8.\n */\nexport const queue = queueScheduler;\n","import type { TimerHandle } from './timerHandle';\ntype SetTimeoutFunction = (handler: () => void, timeout?: number, ...args: any[]) => TimerHandle;\ntype ClearTimeoutFunction = (handle: TimerHandle) => void;\n\ninterface TimeoutProvider {\n  setTimeout: SetTimeoutFunction;\n  clearTimeout: ClearTimeoutFunction;\n  delegate:\n    | {\n        setTimeout: SetTimeoutFunction;\n        clearTimeout: ClearTimeoutFunction;\n      }\n    | undefined;\n}\n\nexport const timeoutProvider: TimeoutProvider = {\n  // When accessing the delegate, use the variable rather than `this` so that\n  // the functions can be called without being bound to the provider.\n  setTimeout(handler: () => void, timeout?: number, ...args) {\n    const { delegate } = timeoutProvider;\n    if (delegate?.setTimeout) {\n      return delegate.setTimeout(handler, timeout, ...args);\n    }\n    return setTimeout(handler, timeout, ...args);\n  },\n  clearTimeout(handle) {\n    const { delegate } = timeoutProvider;\n    return (delegate?.clearTimeout || clearTimeout)(handle as any);\n  },\n  delegate: undefined,\n};\n","export function getSymbolIterator(): symbol {\n  if (typeof Symbol !== 'function' || !Symbol.iterator) {\n    return '@@iterator' as any;\n  }\n\n  return Symbol.iterator;\n}\n\nexport const iterator = getSymbolIterator();\n","/** Symbol.observable or a string \"@@observable\". Used for interop */\nexport const observable: string | symbol = (() => (typeof Symbol === 'function' && Symbol.observable) || '@@observable')();\n","// https://github.com/microsoft/TypeScript/issues/40462#issuecomment-689879308\n/// <reference lib=\"esnext.asynciterable\" />\n\nimport { Observable } from './Observable';\nimport { Subscription } from './Subscription';\n\n/**\n * Note: This will add Symbol.observable globally for all TypeScript users,\n * however, we are no longer polyfilling Symbol.observable\n */\ndeclare global {\n  interface SymbolConstructor {\n    readonly observable: symbol;\n  }\n}\n\n/** OPERATOR INTERFACES */\n\nexport interface UnaryFunction<T, R> {\n  (source: T): R;\n}\n\nexport interface OperatorFunction<T, R> extends UnaryFunction<Observable<T>, Observable<R>> {}\n\nexport type FactoryOrValue<T> = T | (() => T);\n\nexport interface MonoTypeOperatorFunction<T> extends OperatorFunction<T, T> {}\n\n/**\n * A value and the time at which it was emitted.\n *\n * Emitted by the `timestamp` operator\n *\n * @see {@link timestamp}\n */\nexport interface Timestamp<T> {\n  value: T;\n  /**\n   * The timestamp. By default, this is in epoch milliseconds.\n   * Could vary based on the timestamp provider passed to the operator.\n   */\n  timestamp: number;\n}\n\n/**\n * A value emitted and the amount of time since the last value was emitted.\n *\n * Emitted by the `timeInterval` operator.\n *\n * @see {@link timeInterval}\n */\nexport interface TimeInterval<T> {\n  value: T;\n\n  /**\n   * The amount of time between this value's emission and the previous value's emission.\n   * If this is the first emitted value, then it will be the amount of time since subscription\n   * started.\n   */\n  interval: number;\n}\n\n/** SUBSCRIPTION INTERFACES */\n\nexport interface Unsubscribable {\n  unsubscribe(): void;\n}\n\nexport type TeardownLogic = Subscription | Unsubscribable | (() => void) | void;\n\nexport interface SubscriptionLike extends Unsubscribable {\n  unsubscribe(): void;\n  readonly closed: boolean;\n}\n\n/**\n * @deprecated Do not use. Most likely you want to use `ObservableInput`. Will be removed in v8.\n */\nexport type SubscribableOrPromise<T> = Subscribable<T> | Subscribable<never> | PromiseLike<T> | InteropObservable<T>;\n\n/** OBSERVABLE INTERFACES */\n\nexport interface Subscribable<T> {\n  subscribe(observer: Partial<Observer<T>>): Unsubscribable;\n}\n\n/**\n * Valid types that can be converted to observables.\n */\nexport type ObservableInput<T> =\n  | Observable<T>\n  | InteropObservable<T>\n  | AsyncIterable<T>\n  | PromiseLike<T>\n  | ArrayLike<T>\n  | Iterable<T>\n  | ReadableStreamLike<T>;\n\n/**\n * @deprecated Renamed to {@link InteropObservable }. Will be removed in v8.\n */\nexport type ObservableLike<T> = InteropObservable<T>;\n\n/**\n * An object that implements the `Symbol.observable` interface.\n */\nexport interface InteropObservable<T> {\n  [Symbol.observable]: () => Subscribable<T>;\n}\n\n/** NOTIFICATIONS */\n\n/**\n * A notification representing a \"next\" from an observable.\n * Can be used with {@link dematerialize}.\n */\nexport interface NextNotification<T> {\n  /** The kind of notification. Always \"N\" */\n  kind: 'N';\n  /** The value of the notification. */\n  value: T;\n}\n\n/**\n * A notification representing an \"error\" from an observable.\n * Can be used with {@link dematerialize}.\n */\nexport interface ErrorNotification {\n  /** The kind of notification. Always \"E\" */\n  kind: 'E';\n  error: any;\n}\n\n/**\n * A notification representing a \"completion\" from an observable.\n * Can be used with {@link dematerialize}.\n */\nexport interface CompleteNotification {\n  kind: 'C';\n}\n\n/**\n * Valid observable notification types.\n */\nexport type ObservableNotification<T> = NextNotification<T> | ErrorNotification | CompleteNotification;\n\n/** OBSERVER INTERFACES */\n\nexport interface NextObserver<T> {\n  closed?: boolean;\n  next: (value: T) => void;\n  error?: (err: any) => void;\n  complete?: () => void;\n}\n\nexport interface ErrorObserver<T> {\n  closed?: boolean;\n  next?: (value: T) => void;\n  error: (err: any) => void;\n  complete?: () => void;\n}\n\nexport interface CompletionObserver<T> {\n  closed?: boolean;\n  next?: (value: T) => void;\n  error?: (err: any) => void;\n  complete: () => void;\n}\n\nexport type PartialObserver<T> = NextObserver<T> | ErrorObserver<T> | CompletionObserver<T>;\n\nexport interface Observer<T> {\n  next: (value: T) => void;\n  error: (err: any) => void;\n  complete: () => void;\n}\n\nexport interface SubjectLike<T> extends Observer<T>, Subscribable<T> {}\n\n/** SCHEDULER INTERFACES */\n\nexport interface SchedulerLike extends TimestampProvider {\n  schedule<T>(work: (this: SchedulerAction<T>, state: T) => void, delay: number, state: T): Subscription;\n  schedule<T>(work: (this: SchedulerAction<T>, state?: T) => void, delay: number, state?: T): Subscription;\n  schedule<T>(work: (this: SchedulerAction<T>, state?: T) => void, delay?: number, state?: T): Subscription;\n}\n\nexport interface SchedulerAction<T> extends Subscription {\n  schedule(state?: T, delay?: number): Subscription;\n}\n\n/**\n * This is a type that provides a method to allow RxJS to create a numeric timestamp\n */\nexport interface TimestampProvider {\n  /**\n   * Returns a timestamp as a number.\n   *\n   * This is used by types like `ReplaySubject` or operators like `timestamp` to calculate\n   * the amount of time passed between events.\n   */\n  now(): number;\n}\n\n/**\n * Extracts the type from an `ObservableInput<any>`. If you have\n * `O extends ObservableInput<any>` and you pass in `Observable<number>`, or\n * `Promise<number>`, etc, it will type as `number`.\n */\nexport type ObservedValueOf<O> = O extends ObservableInput<infer T> ? T : never;\n\n/**\n * Extracts a union of element types from an `ObservableInput<any>[]`.\n * If you have `O extends ObservableInput<any>[]` and you pass in\n * `Observable<string>[]` or `Promise<string>[]` you would get\n * back a type of `string`.\n * If you pass in `[Observable<string>, Observable<number>]` you would\n * get back a type of `string | number`.\n */\nexport type ObservedValueUnionFromArray<X> = X extends Array<ObservableInput<infer T>> ? T : never;\n\n/**\n * @deprecated Renamed to {@link ObservedValueUnionFromArray}. Will be removed in v8.\n */\nexport type ObservedValuesFromArray<X> = ObservedValueUnionFromArray<X>;\n\n/**\n * Extracts a tuple of element types from an `ObservableInput<any>[]`.\n * If you have `O extends ObservableInput<any>[]` and you pass in\n * `[Observable<string>, Observable<number>]` you would get back a type\n * of `[string, number]`.\n */\nexport type ObservedValueTupleFromArray<X> = { [K in keyof X]: ObservedValueOf<X[K]> };\n\n/**\n * Used to infer types from arguments to functions like {@link forkJoin}.\n * So that you can have `forkJoin([Observable<A>, PromiseLike<B>]): Observable<[A, B]>`\n * et al.\n */\nexport type ObservableInputTuple<T> = {\n  [K in keyof T]: ObservableInput<T[K]>;\n};\n\n/**\n * Constructs a new tuple with the specified type at the head.\n * If you declare `Cons<A, [B, C]>` you will get back `[A, B, C]`.\n */\nexport type Cons<X, Y extends readonly any[]> = ((arg: X, ...rest: Y) => any) extends (...args: infer U) => any ? U : never;\n\n/**\n * Extracts the head of a tuple.\n * If you declare `Head<[A, B, C]>` you will get back `A`.\n */\nexport type Head<X extends readonly any[]> = ((...args: X) => any) extends (arg: infer U, ...rest: any[]) => any ? U : never;\n\n/**\n * Extracts the tail of a tuple.\n * If you declare `Tail<[A, B, C]>` you will get back `[B, C]`.\n */\nexport type Tail<X extends readonly any[]> = ((...args: X) => any) extends (arg: any, ...rest: infer U) => any ? U : never;\n\n/**\n * Extracts the generic value from an Array type.\n * If you have `T extends Array<any>`, and pass a `string[]` to it,\n * `ValueFromArray<T>` will return the actual type of `string`.\n */\nexport type ValueFromArray<A extends readonly unknown[]> = A extends Array<infer T> ? T : never;\n\n/**\n * Gets the value type from an {@link ObservableNotification}, if possible.\n */\nexport type ValueFromNotification<T> = T extends { kind: 'N' | 'E' | 'C' }\n  ? T extends NextNotification<any>\n    ? T extends { value: infer V }\n      ? V\n      : undefined\n    : never\n  : never;\n\n/**\n * A simple type to represent a gamut of \"falsy\" values... with a notable exception:\n * `NaN` is \"falsy\" however, it is not and cannot be typed via TypeScript. See\n * comments here: https://github.com/microsoft/TypeScript/issues/28682#issuecomment-707142417\n */\nexport type Falsy = null | undefined | false | 0 | -0 | 0n | '';\n\nexport type TruthyTypesOf<T> = T extends Falsy ? never : T;\n\n// We shouldn't rely on this type definition being available globally yet since it's\n// not necessarily available in every TS environment.\ninterface ReadableStreamDefaultReaderLike<T> {\n  // HACK: As of TS 4.2.2, The provided types for the iterator results of a `ReadableStreamDefaultReader`\n  // are significantly different enough from `IteratorResult` as to cause compilation errors.\n  // The type at the time is `ReadableStreamDefaultReadResult`.\n  read(): PromiseLike<\n    | {\n        done: false;\n        value: T;\n      }\n    | { done: true; value?: undefined }\n  >;\n  releaseLock(): void;\n}\n\n/**\n * The base signature RxJS will look for to identify and use\n * a [ReadableStream](https://streams.spec.whatwg.org/#rs-class)\n * as an {@link ObservableInput} source.\n */\nexport interface ReadableStreamLike<T> {\n  getReader(): ReadableStreamDefaultReaderLike<T>;\n}\n\n/**\n * An observable with a `connect` method that is used to create a subscription\n * to an underlying source, connecting it with all consumers via a multicast.\n */\nexport interface Connectable<T> extends Observable<T> {\n  /**\n   * (Idempotent) Calling this method will connect the underlying source observable to all subscribed consumers\n   * through an underlying {@link Subject}.\n   * @returns A subscription, that when unsubscribed, will \"disconnect\" the source from the connector subject,\n   * severing notifications to all consumers.\n   */\n  connect(): Subscription;\n}\n","import { createErrorClass } from './createErrorClass';\n\nexport interface ArgumentOutOfRangeError extends Error {}\n\nexport interface ArgumentOutOfRangeErrorCtor {\n  /**\n   * @deprecated Internal implementation detail. Do not construct error instances.\n   * Cannot be tagged as internal: https://github.com/ReactiveX/rxjs/issues/6269\n   */\n  new (): ArgumentOutOfRangeError;\n}\n\n/**\n * An error thrown when an element was queried at a certain index of an\n * Observable, but no such index or position exists in that sequence.\n *\n * @see {@link elementAt}\n * @see {@link take}\n * @see {@link takeLast}\n *\n * @class ArgumentOutOfRangeError\n */\nexport const ArgumentOutOfRangeError: ArgumentOutOfRangeErrorCtor = createErrorClass(\n  (_super) =>\n    function ArgumentOutOfRangeErrorImpl(this: any) {\n      _super(this);\n      this.name = 'ArgumentOutOfRangeError';\n      this.message = 'argument out of range';\n    }\n);\n","import { createErrorClass } from './createErrorClass';\n\nexport interface EmptyError extends Error {}\n\nexport interface EmptyErrorCtor {\n  /**\n   * @deprecated Internal implementation detail. Do not construct error instances.\n   * Cannot be tagged as internal: https://github.com/ReactiveX/rxjs/issues/6269\n   */\n  new (): EmptyError;\n}\n\n/**\n * An error thrown when an Observable or a sequence was queried but has no\n * elements.\n *\n * @see {@link first}\n * @see {@link last}\n * @see {@link single}\n * @see {@link firstValueFrom}\n * @see {@link lastValueFrom}\n *\n * @class EmptyError\n */\nexport const EmptyError: EmptyErrorCtor = createErrorClass((_super) => function EmptyErrorImpl(this: any) {\n  _super(this);\n  this.name = 'EmptyError';\n  this.message = 'no elements in sequence';\n});\n","let nextHandle = 1;\n// The promise needs to be created lazily otherwise it won't be patched by Zones\nlet resolved: Promise<any>;\nconst activeHandles: { [key: number]: any } = {};\n\n/**\n * Finds the handle in the list of active handles, and removes it.\n * Returns `true` if found, `false` otherwise. Used both to clear\n * Immediate scheduled tasks, and to identify if a task should be scheduled.\n */\nfunction findAndClearHandle(handle: number): boolean {\n  if (handle in activeHandles) {\n    delete activeHandles[handle];\n    return true;\n  }\n  return false;\n}\n\n/**\n * Helper functions to schedule and unschedule microtasks.\n */\nexport const Immediate = {\n  setImmediate(cb: () => void): number {\n    const handle = nextHandle++;\n    activeHandles[handle] = true;\n    if (!resolved) {\n      resolved = Promise.resolve();\n    }\n    resolved.then(() => findAndClearHandle(handle) && cb());\n    return handle;\n  },\n\n  clearImmediate(handle: number): void {\n    findAndClearHandle(handle);\n  },\n};\n\n/**\n * Used for internal testing purposes only. Do not export from library.\n */\nexport const TestTools = {\n  pending() {\n    return Object.keys(activeHandles).length;\n  }\n};\n","import { createErrorClass } from './createErrorClass';\n\nexport interface NotFoundError extends Error {}\n\nexport interface NotFoundErrorCtor {\n  /**\n   * @deprecated Internal implementation detail. Do not construct error instances.\n   * Cannot be tagged as internal: https://github.com/ReactiveX/rxjs/issues/6269\n   */\n  new (message: string): NotFoundError;\n}\n\n/**\n * An error thrown when a value or values are missing from an\n * observable sequence.\n *\n * @see {@link operators/single}\n *\n * @class NotFoundError\n */\nexport const NotFoundError: NotFoundErrorCtor = createErrorClass(\n  (_super) =>\n    function NotFoundErrorImpl(this: any, message: string) {\n      _super(this);\n      this.name = 'NotFoundError';\n      this.message = message;\n    }\n);\n","import { createErrorClass } from './createErrorClass';\n\nexport interface ObjectUnsubscribedError extends Error {}\n\nexport interface ObjectUnsubscribedErrorCtor {\n  /**\n   * @deprecated Internal implementation detail. Do not construct error instances.\n   * Cannot be tagged as internal: https://github.com/ReactiveX/rxjs/issues/6269\n   */\n  new (): ObjectUnsubscribedError;\n}\n\n/**\n * An error thrown when an action is invalid because the object has been\n * unsubscribed.\n *\n * @see {@link Subject}\n * @see {@link BehaviorSubject}\n *\n * @class ObjectUnsubscribedError\n */\nexport const ObjectUnsubscribedError: ObjectUnsubscribedErrorCtor = createErrorClass(\n  (_super) =>\n    function ObjectUnsubscribedErrorImpl(this: any) {\n      _super(this);\n      this.name = 'ObjectUnsubscribedError';\n      this.message = 'object unsubscribed';\n    }\n);\n","import { createErrorClass } from './createErrorClass';\n\nexport interface SequenceError extends Error {}\n\nexport interface SequenceErrorCtor {\n  /**\n   * @deprecated Internal implementation detail. Do not construct error instances.\n   * Cannot be tagged as internal: https://github.com/ReactiveX/rxjs/issues/6269\n   */\n  new (message: string): SequenceError;\n}\n\n/**\n * An error thrown when something is wrong with the sequence of\n * values arriving on the observable.\n *\n * @see {@link operators/single}\n *\n * @class SequenceError\n */\nexport const SequenceError: SequenceErrorCtor = createErrorClass(\n  (_super) =>\n    function SequenceErrorImpl(this: any, message: string) {\n      _super(this);\n      this.name = 'SequenceError';\n      this.message = message;\n    }\n);\n","import { createErrorClass } from './createErrorClass';\n\nexport interface UnsubscriptionError extends Error {\n  readonly errors: any[];\n}\n\nexport interface UnsubscriptionErrorCtor {\n  /**\n   * @deprecated Internal implementation detail. Do not construct error instances.\n   * Cannot be tagged as internal: https://github.com/ReactiveX/rxjs/issues/6269\n   */\n  new (errors: any[]): UnsubscriptionError;\n}\n\n/**\n * An error thrown when one or more errors have occurred during the\n * `unsubscribe` of a {@link Subscription}.\n */\nexport const UnsubscriptionError: UnsubscriptionErrorCtor = createErrorClass(\n  (_super) =>\n    function UnsubscriptionErrorImpl(this: any, errors: (Error | string)[]) {\n      _super(this);\n      this.message = errors\n        ? `${errors.length} errors occurred during unsubscription:\n${errors.map((err, i) => `${i + 1}) ${err.toString()}`).join('\\n  ')}`\n        : '';\n      this.name = 'UnsubscriptionError';\n      this.errors = errors;\n    }\n);\n","import { SchedulerLike } from '../types';\nimport { isFunction } from './isFunction';\nimport { isScheduler } from './isScheduler';\n\nfunction last<T>(arr: T[]): T | undefined {\n  return arr[arr.length - 1];\n}\n\nexport function popResultSelector(args: any[]): ((...args: unknown[]) => unknown) | undefined {\n  return isFunction(last(args)) ? args.pop() : undefined;\n}\n\nexport function popScheduler(args: any[]): SchedulerLike | undefined {\n  return isScheduler(last(args)) ? args.pop() : undefined;\n}\n\nexport function popNumber(args: any[], defaultValue: number): number {\n  return typeof last(args) === 'number' ? args.pop()! : defaultValue;\n}\n","const { isArray } = Array;\nconst { getPrototypeOf, prototype: objectProto, keys: getKeys } = Object;\n\n/**\n * Used in functions where either a list of arguments, a single array of arguments, or a\n * dictionary of arguments can be returned. Returns an object with an `args` property with\n * the arguments in an array, if it is a dictionary, it will also return the `keys` in another\n * property.\n */\nexport function argsArgArrayOrObject<T, O extends Record<string, T>>(args: T[] | [O] | [T[]]): { args: T[]; keys: string[] | null } {\n  if (args.length === 1) {\n    const first = args[0];\n    if (isArray(first)) {\n      return { args: first, keys: null };\n    }\n    if (isPOJO(first)) {\n      const keys = getKeys(first);\n      return {\n        args: keys.map((key) => first[key]),\n        keys,\n      };\n    }\n  }\n\n  return { args: args as T[], keys: null };\n}\n\nfunction isPOJO(obj: any): obj is object {\n  return obj && typeof obj === 'object' && getPrototypeOf(obj) === objectProto;\n}\n","const { isArray } = Array;\n\n/**\n * Used in operators and functions that accept either a list of arguments, or an array of arguments\n * as a single argument.\n */\nexport function argsOrArgArray<T>(args: (T | T[])[]): T[] {\n  return args.length === 1 && isArray(args[0]) ? args[0] : (args as T[]);\n}\n","/**\n * Removes an item from an array, mutating it.\n * @param arr The array to remove the item from\n * @param item The item to remove\n */\nexport function arrRemove<T>(arr: T[] | undefined | null, item: T) {\n  if (arr) {\n    const index = arr.indexOf(item);\n    0 <= index && arr.splice(index, 1);\n  }\n}\n","/**\n * Used to create Error subclasses until the community moves away from ES5.\n *\n * This is because compiling from TypeScript down to ES5 has issues with subclassing Errors\n * as well as other built-in types: https://github.com/Microsoft/TypeScript/issues/12123\n *\n * @param createImpl A factory function to create the actual constructor implementation. The returned\n * function should be a named function that calls `_super` internally.\n */\nexport function createErrorClass<T>(createImpl: (_super: any) => any): T {\n  const _super = (instance: any) => {\n    Error.call(instance);\n    instance.stack = new Error().stack;\n  };\n\n  const ctorFunc = createImpl(_super);\n  ctorFunc.prototype = Object.create(Error.prototype);\n  ctorFunc.prototype.constructor = ctorFunc;\n  return ctorFunc;\n}\n","export function createObject(keys: string[], values: any[]) {\n  return keys.reduce((result, key, i) => ((result[key] = values[i]), result), {} as any);\n}\n","import { config } from '../config';\n\nlet context: { errorThrown: boolean; error: any } | null = null;\n\n/**\n * Handles dealing with errors for super-gross mode. Creates a context, in which\n * any synchronously thrown errors will be passed to {@link captureError}. Which\n * will record the error such that it will be rethrown after the call back is complete.\n * TODO: Remove in v8\n * @param cb An immediately executed function.\n */\nexport function errorContext(cb: () => void) {\n  if (config.useDeprecatedSynchronousErrorHandling) {\n    const isRoot = !context;\n    if (isRoot) {\n      context = { errorThrown: false, error: null };\n    }\n    cb();\n    if (isRoot) {\n      const { errorThrown, error } = context!;\n      context = null;\n      if (errorThrown) {\n        throw error;\n      }\n    }\n  } else {\n    // This is the general non-deprecated path for everyone that\n    // isn't crazy enough to use super-gross mode (useDeprecatedSynchronousErrorHandling)\n    cb();\n  }\n}\n\n/**\n * Captures errors only in super-gross mode.\n * @param err the error to capture\n */\nexport function captureError(err: any) {\n  if (config.useDeprecatedSynchronousErrorHandling && context) {\n    context.errorThrown = true;\n    context.error = err;\n  }\n}\n","import { Subscription } from '../Subscription';\nimport { SchedulerAction, SchedulerLike } from '../types';\n\nexport function executeSchedule(\n  parentSubscription: Subscription,\n  scheduler: SchedulerLike,\n  work: () => void,\n  delay: number,\n  repeat: true\n): void;\nexport function executeSchedule(\n  parentSubscription: Subscription,\n  scheduler: SchedulerLike,\n  work: () => void,\n  delay?: number,\n  repeat?: false\n): Subscription;\n\nexport function executeSchedule(\n  parentSubscription: Subscription,\n  scheduler: SchedulerLike,\n  work: () => void,\n  delay = 0,\n  repeat = false\n): Subscription | void {\n  const scheduleSubscription = scheduler.schedule(function (this: SchedulerAction<any>) {\n    work();\n    if (repeat) {\n      parentSubscription.add(this.schedule(null, delay));\n    } else {\n      this.unsubscribe();\n    }\n  }, delay);\n\n  parentSubscription.add(scheduleSubscription);\n\n  if (!repeat) {\n    // Because user-land scheduler implementations are unlikely to properly reuse\n    // Actions for repeat scheduling, we can't trust that the returned subscription\n    // will control repeat subscription scenarios. So we're trying to avoid using them\n    // incorrectly within this library.\n    return scheduleSubscription;\n  }\n}\n","/**\n * This function takes one parameter and just returns it. Simply put,\n * this is like `<T>(x: T): T => x`.\n *\n * ## Examples\n *\n * This is useful in some cases when using things like `mergeMap`\n *\n * ```ts\n * import { interval, take, map, range, mergeMap, identity } from 'rxjs';\n *\n * const source$ = interval(1000).pipe(take(5));\n *\n * const result$ = source$.pipe(\n *   map(i => range(i)),\n *   mergeMap(identity) // same as mergeMap(x => x)\n * );\n *\n * result$.subscribe({\n *   next: console.log\n * });\n * ```\n *\n * Or when you want to selectively apply an operator\n *\n * ```ts\n * import { interval, take, identity } from 'rxjs';\n *\n * const shouldLimit = () => Math.random() < 0.5;\n *\n * const source$ = interval(1000);\n *\n * const result$ = source$.pipe(shouldLimit() ? take(5) : identity);\n *\n * result$.subscribe({\n *   next: console.log\n * });\n * ```\n *\n * @param x Any value that is returned by this function\n * @returns The value passed as the first parameter to this function\n */\nexport function identity<T>(x: T): T {\n  return x;\n}\n","export const isArrayLike = (<T>(x: any): x is ArrayLike<T> => x && typeof x.length === 'number' && typeof x !== 'function');","import { isFunction } from './isFunction';\n\nexport function isAsyncIterable<T>(obj: any): obj is AsyncIterable<T> {\n  return Symbol.asyncIterator && isFunction(obj?.[Symbol.asyncIterator]);\n}\n","/**\n * Checks to see if a value is not only a `Date` object,\n * but a *valid* `Date` object that can be converted to a\n * number. For example, `new Date('blah')` is indeed an\n * `instanceof Date`, however it cannot be converted to a\n * number.\n */\nexport function isValidDate(value: any): value is Date {\n  return value instanceof Date && !isNaN(value as any);\n}\n","/**\n * Returns true if the object is a function.\n * @param value The value to check\n */\nexport function isFunction(value: any): value is (...args: any[]) => any {\n  return typeof value === 'function';\n}\n","import { InteropObservable } from '../types';\nimport { observable as Symbol_observable } from '../symbol/observable';\nimport { isFunction } from './isFunction';\n\n/** Identifies an input as being Observable (but not necessary an Rx Observable) */\nexport function isInteropObservable(input: any): input is InteropObservable<any> {\n  return isFunction(input[Symbol_observable]);\n}\n","import { iterator as Symbol_iterator } from '../symbol/iterator';\nimport { isFunction } from './isFunction';\n\n/** Identifies an input as being an Iterable */\nexport function isIterable(input: any): input is Iterable<any> {\n  return isFunction(input?.[Symbol_iterator]);\n}\n","/** prettier */\nimport { Observable } from '../Observable';\nimport { isFunction } from './isFunction';\n\n/**\n * Tests to see if the object is an RxJS {@link Observable}\n * @param obj the object to test\n */\nexport function isObservable(obj: any): obj is Observable<unknown> {\n  // The !! is to ensure that this publicly exposed function returns\n  // `false` if something like `null` or `0` is passed.\n  return !!obj && (obj instanceof Observable || (isFunction(obj.lift) && isFunction(obj.subscribe)));\n}\n","import { isFunction } from \"./isFunction\";\n\n/**\n * Tests to see if the object is \"thennable\".\n * @param value the object to test\n */\nexport function isPromise(value: any): value is PromiseLike<any> {\n  return isFunction(value?.then);\n}\n","import { ReadableStreamLike } from '../types';\nimport { isFunction } from './isFunction';\n\nexport async function* readableStreamLikeToAsyncGenerator<T>(readableStream: ReadableStreamLike<T>): AsyncGenerator<T> {\n  const reader = readableStream.getReader();\n  try {\n    while (true) {\n      const { value, done } = await reader.read();\n      if (done) {\n        return;\n      }\n      yield value!;\n    }\n  } finally {\n    reader.releaseLock();\n  }\n}\n\nexport function isReadableStreamLike<T>(obj: any): obj is ReadableStreamLike<T> {\n  // We don't want to use instanceof checks because they would return\n  // false for instances from another Realm, like an <iframe>.\n  return isFunction(obj?.getReader);\n}\n","import { SchedulerLike } from '../types';\nimport { isFunction } from './isFunction';\n\nexport function isScheduler(value: any): value is SchedulerLike {\n  return value && isFunction(value.schedule);\n}\n","import { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { OperatorFunction } from '../types';\nimport { isFunction } from './isFunction';\n\n/**\n * Used to determine if an object is an Observable with a lift function.\n */\nexport function hasLift(source: any): source is { lift: InstanceType<typeof Observable>['lift'] } {\n  return isFunction(source?.lift);\n}\n\n/**\n * Creates an `OperatorFunction`. Used to define operators throughout the library in a concise way.\n * @param init The logic to connect the liftedSource to the subscriber at the moment of subscription.\n */\nexport function operate<T, R>(\n  init: (liftedSource: Observable<T>, subscriber: Subscriber<R>) => (() => void) | void\n): OperatorFunction<T, R> {\n  return (source: Observable<T>) => {\n    if (hasLift(source)) {\n      return source.lift(function (this: Subscriber<R>, liftedSource: Observable<T>) {\n        try {\n          return init(liftedSource, this);\n        } catch (err) {\n          this.error(err);\n        }\n      });\n    }\n    throw new TypeError('Unable to lift unknown Observable type');\n  };\n}\n","import { OperatorFunction } from \"../types\";\nimport { map } from \"../operators/map\";\n\nconst { isArray } = Array;\n\nfunction callOrApply<T, R>(fn: ((...values: T[]) => R), args: T|T[]): R {\n    return isArray(args) ? fn(...args) : fn(args);\n}\n\n/**\n * Used in several -- mostly deprecated -- situations where we need to \n * apply a list of arguments or a single argument to a result selector.\n */\nexport function mapOneOrManyArgs<T, R>(fn: ((...values: T[]) => R)): OperatorFunction<T|T[], R> {\n    return map(args => callOrApply(fn, args))\n}","/* tslint:disable:no-empty */\nexport function noop() { }\n","export function not<T>(pred: (value: T, index: number) => boolean, thisArg: any): (value: T, index: number) => boolean {\n  return (value: T, index: number) => !pred.call(thisArg, value, index); \n}","import { identity } from './identity';\nimport { UnaryFunction } from '../types';\n\nexport function pipe(): typeof identity;\nexport function pipe<T, A>(fn1: UnaryFunction<T, A>): UnaryFunction<T, A>;\nexport function pipe<T, A, B>(fn1: UnaryFunction<T, A>, fn2: UnaryFunction<A, B>): UnaryFunction<T, B>;\nexport function pipe<T, A, B, C>(fn1: UnaryFunction<T, A>, fn2: UnaryFunction<A, B>, fn3: UnaryFunction<B, C>): UnaryFunction<T, C>;\nexport function pipe<T, A, B, C, D>(\n  fn1: UnaryFunction<T, A>,\n  fn2: UnaryFunction<A, B>,\n  fn3: UnaryFunction<B, C>,\n  fn4: UnaryFunction<C, D>\n): UnaryFunction<T, D>;\nexport function pipe<T, A, B, C, D, E>(\n  fn1: UnaryFunction<T, A>,\n  fn2: UnaryFunction<A, B>,\n  fn3: UnaryFunction<B, C>,\n  fn4: UnaryFunction<C, D>,\n  fn5: UnaryFunction<D, E>\n): UnaryFunction<T, E>;\nexport function pipe<T, A, B, C, D, E, F>(\n  fn1: UnaryFunction<T, A>,\n  fn2: UnaryFunction<A, B>,\n  fn3: UnaryFunction<B, C>,\n  fn4: UnaryFunction<C, D>,\n  fn5: UnaryFunction<D, E>,\n  fn6: UnaryFunction<E, F>\n): UnaryFunction<T, F>;\nexport function pipe<T, A, B, C, D, E, F, G>(\n  fn1: UnaryFunction<T, A>,\n  fn2: UnaryFunction<A, B>,\n  fn3: UnaryFunction<B, C>,\n  fn4: UnaryFunction<C, D>,\n  fn5: UnaryFunction<D, E>,\n  fn6: UnaryFunction<E, F>,\n  fn7: UnaryFunction<F, G>\n): UnaryFunction<T, G>;\nexport function pipe<T, A, B, C, D, E, F, G, H>(\n  fn1: UnaryFunction<T, A>,\n  fn2: UnaryFunction<A, B>,\n  fn3: UnaryFunction<B, C>,\n  fn4: UnaryFunction<C, D>,\n  fn5: UnaryFunction<D, E>,\n  fn6: UnaryFunction<E, F>,\n  fn7: UnaryFunction<F, G>,\n  fn8: UnaryFunction<G, H>\n): UnaryFunction<T, H>;\nexport function pipe<T, A, B, C, D, E, F, G, H, I>(\n  fn1: UnaryFunction<T, A>,\n  fn2: UnaryFunction<A, B>,\n  fn3: UnaryFunction<B, C>,\n  fn4: UnaryFunction<C, D>,\n  fn5: UnaryFunction<D, E>,\n  fn6: UnaryFunction<E, F>,\n  fn7: UnaryFunction<F, G>,\n  fn8: UnaryFunction<G, H>,\n  fn9: UnaryFunction<H, I>\n): UnaryFunction<T, I>;\nexport function pipe<T, A, B, C, D, E, F, G, H, I>(\n  fn1: UnaryFunction<T, A>,\n  fn2: UnaryFunction<A, B>,\n  fn3: UnaryFunction<B, C>,\n  fn4: UnaryFunction<C, D>,\n  fn5: UnaryFunction<D, E>,\n  fn6: UnaryFunction<E, F>,\n  fn7: UnaryFunction<F, G>,\n  fn8: UnaryFunction<G, H>,\n  fn9: UnaryFunction<H, I>,\n  ...fns: UnaryFunction<any, any>[]\n): UnaryFunction<T, unknown>;\n\n/**\n * pipe() can be called on one or more functions, each of which can take one argument (\"UnaryFunction\")\n * and uses it to return a value.\n * It returns a function that takes one argument, passes it to the first UnaryFunction, and then\n * passes the result to the next one, passes that result to the next one, and so on.  \n */\nexport function pipe(...fns: Array<UnaryFunction<any, any>>): UnaryFunction<any, any> {\n  return pipeFromArray(fns);\n}\n\n/** @internal */\nexport function pipeFromArray<T, R>(fns: Array<UnaryFunction<T, R>>): UnaryFunction<T, R> {\n  if (fns.length === 0) {\n    return identity as UnaryFunction<any, any>;\n  }\n\n  if (fns.length === 1) {\n    return fns[0];\n  }\n\n  return function piped(input: T): R {\n    return fns.reduce((prev: any, fn: UnaryFunction<T, R>) => fn(prev), input as any);\n  };\n}\n","import { config } from '../config';\nimport { timeoutProvider } from '../scheduler/timeoutProvider';\n\n/**\n * Handles an error on another job either with the user-configured {@link onUnhandledError},\n * or by throwing it on that new job so it can be picked up by `window.onerror`, `process.on('error')`, etc.\n *\n * This should be called whenever there is an error that is out-of-band with the subscription\n * or when an error hits a terminal boundary of the subscription and no error handler was provided.\n *\n * @param err the error to report\n */\nexport function reportUnhandledError(err: any) {\n  timeoutProvider.setTimeout(() => {\n    const { onUnhandledError } = config;\n    if (onUnhandledError) {\n      // Execute the user-configured error handler.\n      onUnhandledError(err);\n    } else {\n      // Throw so it is picked up by the runtime's uncaught error mechanism.\n      throw err;\n    }\n  });\n}\n","/**\n * Creates the TypeError to throw if an invalid object is passed to `from` or `scheduled`.\n * @param input The object that was passed.\n */\nexport function createInvalidObservableTypeError(input: any) {\n  // TODO: We should create error codes that can be looked up, so this can be less verbose.\n  return new TypeError(\n    `You provided ${\n      input !== null && typeof input === 'object' ? 'an invalid object' : `'${input}'`\n    } where a stream was expected. You can provide an Observable, Promise, ReadableStream, Array, AsyncIterable, or Iterable.`\n  );\n}\n","export { webSocket as webSocket } from '../internal/observable/dom/webSocket';\nexport { WebSocketSubject, WebSocketSubjectConfig } from '../internal/observable/dom/WebSocketSubject';\n","/* eslint-disable node/no-deprecated-api */\n\n'use strict'\n\nvar buffer = require('buffer')\nvar Buffer = buffer.Buffer\n\nvar safer = {}\n\nvar key\n\nfor (key in buffer) {\n  if (!buffer.hasOwnProperty(key)) continue\n  if (key === 'SlowBuffer' || key === 'Buffer') continue\n  safer[key] = buffer[key]\n}\n\nvar Safer = safer.Buffer = {}\nfor (key in Buffer) {\n  if (!Buffer.hasOwnProperty(key)) continue\n  if (key === 'allocUnsafe' || key === 'allocUnsafeSlow') continue\n  Safer[key] = Buffer[key]\n}\n\nsafer.Buffer.prototype = Buffer.prototype\n\nif (!Safer.from || Safer.from === Uint8Array.from) {\n  Safer.from = function (value, encodingOrOffset, length) {\n    if (typeof value === 'number') {\n      throw new TypeError('The \"value\" argument must not be of type number. Received type ' + typeof value)\n    }\n    if (value && typeof value.length === 'undefined') {\n      throw new TypeError('The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type ' + typeof value)\n    }\n    return Buffer(value, encodingOrOffset, length)\n  }\n}\n\nif (!Safer.alloc) {\n  Safer.alloc = function (size, fill, encoding) {\n    if (typeof size !== 'number') {\n      throw new TypeError('The \"size\" argument must be of type number. Received type ' + typeof size)\n    }\n    if (size < 0 || size >= 2 * (1 << 30)) {\n      throw new RangeError('The value \"' + size + '\" is invalid for option \"size\"')\n    }\n    var buf = Buffer(size)\n    if (!fill || fill.length === 0) {\n      buf.fill(0)\n    } else if (typeof encoding === 'string') {\n      buf.fill(fill, encoding)\n    } else {\n      buf.fill(fill)\n    }\n    return buf\n  }\n}\n\nif (!safer.kStringMaxLength) {\n  try {\n    safer.kStringMaxLength = process.binding('buffer').kStringMaxLength\n  } catch (e) {\n    // we can't determine kStringMaxLength in environments where process.binding\n    // is unsupported, so let's not set it\n  }\n}\n\nif (!safer.constants) {\n  safer.constants = {\n    MAX_LENGTH: safer.kMaxLength\n  }\n  if (safer.kStringMaxLength) {\n    safer.constants.MAX_STRING_LENGTH = safer.kStringMaxLength\n  }\n}\n\nmodule.exports = safer\n","/*!\n * send\n * Copyright(c) 2012 TJ Holowaychuk\n * Copyright(c) 2014-2022 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * Module dependencies.\n * @private\n */\n\nvar createError = require('http-errors')\nvar debug = require('debug')('send')\nvar deprecate = require('depd')('send')\nvar destroy = require('destroy')\nvar encodeUrl = require('encodeurl')\nvar escapeHtml = require('escape-html')\nvar etag = require('etag')\nvar fresh = require('fresh')\nvar fs = require('fs')\nvar mime = require('mime')\nvar ms = require('ms')\nvar onFinished = require('on-finished')\nvar parseRange = require('range-parser')\nvar path = require('path')\nvar statuses = require('statuses')\nvar Stream = require('stream')\nvar util = require('util')\n\n/**\n * Path function references.\n * @private\n */\n\nvar extname = path.extname\nvar join = path.join\nvar normalize = path.normalize\nvar resolve = path.resolve\nvar sep = path.sep\n\n/**\n * Regular expression for identifying a bytes Range header.\n * @private\n */\n\nvar BYTES_RANGE_REGEXP = /^ *bytes=/\n\n/**\n * Maximum value allowed for the max age.\n * @private\n */\n\nvar MAX_MAXAGE = 60 * 60 * 24 * 365 * 1000 // 1 year\n\n/**\n * Regular expression to match a path with a directory up component.\n * @private\n */\n\nvar UP_PATH_REGEXP = /(?:^|[\\\\/])\\.\\.(?:[\\\\/]|$)/\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = send\nmodule.exports.mime = mime\n\n/**\n * Return a `SendStream` for `req` and `path`.\n *\n * @param {object} req\n * @param {string} path\n * @param {object} [options]\n * @return {SendStream}\n * @public\n */\n\nfunction send (req, path, options) {\n  return new SendStream(req, path, options)\n}\n\n/**\n * Initialize a `SendStream` with the given `path`.\n *\n * @param {Request} req\n * @param {String} path\n * @param {object} [options]\n * @private\n */\n\nfunction SendStream (req, path, options) {\n  Stream.call(this)\n\n  var opts = options || {}\n\n  this.options = opts\n  this.path = path\n  this.req = req\n\n  this._acceptRanges = opts.acceptRanges !== undefined\n    ? Boolean(opts.acceptRanges)\n    : true\n\n  this._cacheControl = opts.cacheControl !== undefined\n    ? Boolean(opts.cacheControl)\n    : true\n\n  this._etag = opts.etag !== undefined\n    ? Boolean(opts.etag)\n    : true\n\n  this._dotfiles = opts.dotfiles !== undefined\n    ? opts.dotfiles\n    : 'ignore'\n\n  if (this._dotfiles !== 'ignore' && this._dotfiles !== 'allow' && this._dotfiles !== 'deny') {\n    throw new TypeError('dotfiles option must be \"allow\", \"deny\", or \"ignore\"')\n  }\n\n  this._hidden = Boolean(opts.hidden)\n\n  if (opts.hidden !== undefined) {\n    deprecate('hidden: use dotfiles: \\'' + (this._hidden ? 'allow' : 'ignore') + '\\' instead')\n  }\n\n  // legacy support\n  if (opts.dotfiles === undefined) {\n    this._dotfiles = undefined\n  }\n\n  this._extensions = opts.extensions !== undefined\n    ? normalizeList(opts.extensions, 'extensions option')\n    : []\n\n  this._immutable = opts.immutable !== undefined\n    ? Boolean(opts.immutable)\n    : false\n\n  this._index = opts.index !== undefined\n    ? normalizeList(opts.index, 'index option')\n    : ['index.html']\n\n  this._lastModified = opts.lastModified !== undefined\n    ? Boolean(opts.lastModified)\n    : true\n\n  this._maxage = opts.maxAge || opts.maxage\n  this._maxage = typeof this._maxage === 'string'\n    ? ms(this._maxage)\n    : Number(this._maxage)\n  this._maxage = !isNaN(this._maxage)\n    ? Math.min(Math.max(0, this._maxage), MAX_MAXAGE)\n    : 0\n\n  this._root = opts.root\n    ? resolve(opts.root)\n    : null\n\n  if (!this._root && opts.from) {\n    this.from(opts.from)\n  }\n}\n\n/**\n * Inherits from `Stream`.\n */\n\nutil.inherits(SendStream, Stream)\n\n/**\n * Enable or disable etag generation.\n *\n * @param {Boolean} val\n * @return {SendStream}\n * @api public\n */\n\nSendStream.prototype.etag = deprecate.function(function etag (val) {\n  this._etag = Boolean(val)\n  debug('etag %s', this._etag)\n  return this\n}, 'send.etag: pass etag as option')\n\n/**\n * Enable or disable \"hidden\" (dot) files.\n *\n * @param {Boolean} path\n * @return {SendStream}\n * @api public\n */\n\nSendStream.prototype.hidden = deprecate.function(function hidden (val) {\n  this._hidden = Boolean(val)\n  this._dotfiles = undefined\n  debug('hidden %s', this._hidden)\n  return this\n}, 'send.hidden: use dotfiles option')\n\n/**\n * Set index `paths`, set to a falsy\n * value to disable index support.\n *\n * @param {String|Boolean|Array} paths\n * @return {SendStream}\n * @api public\n */\n\nSendStream.prototype.index = deprecate.function(function index (paths) {\n  var index = !paths ? [] : normalizeList(paths, 'paths argument')\n  debug('index %o', paths)\n  this._index = index\n  return this\n}, 'send.index: pass index as option')\n\n/**\n * Set root `path`.\n *\n * @param {String} path\n * @return {SendStream}\n * @api public\n */\n\nSendStream.prototype.root = function root (path) {\n  this._root = resolve(String(path))\n  debug('root %s', this._root)\n  return this\n}\n\nSendStream.prototype.from = deprecate.function(SendStream.prototype.root,\n  'send.from: pass root as option')\n\nSendStream.prototype.root = deprecate.function(SendStream.prototype.root,\n  'send.root: pass root as option')\n\n/**\n * Set max-age to `maxAge`.\n *\n * @param {Number} maxAge\n * @return {SendStream}\n * @api public\n */\n\nSendStream.prototype.maxage = deprecate.function(function maxage (maxAge) {\n  this._maxage = typeof maxAge === 'string'\n    ? ms(maxAge)\n    : Number(maxAge)\n  this._maxage = !isNaN(this._maxage)\n    ? Math.min(Math.max(0, this._maxage), MAX_MAXAGE)\n    : 0\n  debug('max-age %d', this._maxage)\n  return this\n}, 'send.maxage: pass maxAge as option')\n\n/**\n * Emit error with `status`.\n *\n * @param {number} status\n * @param {Error} [err]\n * @private\n */\n\nSendStream.prototype.error = function error (status, err) {\n  // emit if listeners instead of responding\n  if (hasListeners(this, 'error')) {\n    return this.emit('error', createHttpError(status, err))\n  }\n\n  var res = this.res\n  var msg = statuses.message[status] || String(status)\n  var doc = createHtmlDocument('Error', escapeHtml(msg))\n\n  // clear existing headers\n  clearHeaders(res)\n\n  // add error headers\n  if (err && err.headers) {\n    setHeaders(res, err.headers)\n  }\n\n  // send basic response\n  res.statusCode = status\n  res.setHeader('Content-Type', 'text/html; charset=UTF-8')\n  res.setHeader('Content-Length', Buffer.byteLength(doc))\n  res.setHeader('Content-Security-Policy', \"default-src 'none'\")\n  res.setHeader('X-Content-Type-Options', 'nosniff')\n  res.end(doc)\n}\n\n/**\n * Check if the pathname ends with \"/\".\n *\n * @return {boolean}\n * @private\n */\n\nSendStream.prototype.hasTrailingSlash = function hasTrailingSlash () {\n  return this.path[this.path.length - 1] === '/'\n}\n\n/**\n * Check if this is a conditional GET request.\n *\n * @return {Boolean}\n * @api private\n */\n\nSendStream.prototype.isConditionalGET = function isConditionalGET () {\n  return this.req.headers['if-match'] ||\n    this.req.headers['if-unmodified-since'] ||\n    this.req.headers['if-none-match'] ||\n    this.req.headers['if-modified-since']\n}\n\n/**\n * Check if the request preconditions failed.\n *\n * @return {boolean}\n * @private\n */\n\nSendStream.prototype.isPreconditionFailure = function isPreconditionFailure () {\n  var req = this.req\n  var res = this.res\n\n  // if-match\n  var match = req.headers['if-match']\n  if (match) {\n    var etag = res.getHeader('ETag')\n    return !etag || (match !== '*' && parseTokenList(match).every(function (match) {\n      return match !== etag && match !== 'W/' + etag && 'W/' + match !== etag\n    }))\n  }\n\n  // if-unmodified-since\n  var unmodifiedSince = parseHttpDate(req.headers['if-unmodified-since'])\n  if (!isNaN(unmodifiedSince)) {\n    var lastModified = parseHttpDate(res.getHeader('Last-Modified'))\n    return isNaN(lastModified) || lastModified > unmodifiedSince\n  }\n\n  return false\n}\n\n/**\n * Strip various content header fields for a change in entity.\n *\n * @private\n */\n\nSendStream.prototype.removeContentHeaderFields = function removeContentHeaderFields () {\n  var res = this.res\n\n  res.removeHeader('Content-Encoding')\n  res.removeHeader('Content-Language')\n  res.removeHeader('Content-Length')\n  res.removeHeader('Content-Range')\n  res.removeHeader('Content-Type')\n}\n\n/**\n * Respond with 304 not modified.\n *\n * @api private\n */\n\nSendStream.prototype.notModified = function notModified () {\n  var res = this.res\n  debug('not modified')\n  this.removeContentHeaderFields()\n  res.statusCode = 304\n  res.end()\n}\n\n/**\n * Raise error that headers already sent.\n *\n * @api private\n */\n\nSendStream.prototype.headersAlreadySent = function headersAlreadySent () {\n  var err = new Error('Can\\'t set headers after they are sent.')\n  debug('headers already sent')\n  this.error(500, err)\n}\n\n/**\n * Check if the request is cacheable, aka\n * responded with 2xx or 304 (see RFC 2616 section 14.2{5,6}).\n *\n * @return {Boolean}\n * @api private\n */\n\nSendStream.prototype.isCachable = function isCachable () {\n  var statusCode = this.res.statusCode\n  return (statusCode >= 200 && statusCode < 300) ||\n    statusCode === 304\n}\n\n/**\n * Handle stat() error.\n *\n * @param {Error} error\n * @private\n */\n\nSendStream.prototype.onStatError = function onStatError (error) {\n  switch (error.code) {\n    case 'ENAMETOOLONG':\n    case 'ENOENT':\n    case 'ENOTDIR':\n      this.error(404, error)\n      break\n    default:\n      this.error(500, error)\n      break\n  }\n}\n\n/**\n * Check if the cache is fresh.\n *\n * @return {Boolean}\n * @api private\n */\n\nSendStream.prototype.isFresh = function isFresh () {\n  return fresh(this.req.headers, {\n    etag: this.res.getHeader('ETag'),\n    'last-modified': this.res.getHeader('Last-Modified')\n  })\n}\n\n/**\n * Check if the range is fresh.\n *\n * @return {Boolean}\n * @api private\n */\n\nSendStream.prototype.isRangeFresh = function isRangeFresh () {\n  var ifRange = this.req.headers['if-range']\n\n  if (!ifRange) {\n    return true\n  }\n\n  // if-range as etag\n  if (ifRange.indexOf('\"') !== -1) {\n    var etag = this.res.getHeader('ETag')\n    return Boolean(etag && ifRange.indexOf(etag) !== -1)\n  }\n\n  // if-range as modified date\n  var lastModified = this.res.getHeader('Last-Modified')\n  return parseHttpDate(lastModified) <= parseHttpDate(ifRange)\n}\n\n/**\n * Redirect to path.\n *\n * @param {string} path\n * @private\n */\n\nSendStream.prototype.redirect = function redirect (path) {\n  var res = this.res\n\n  if (hasListeners(this, 'directory')) {\n    this.emit('directory', res, path)\n    return\n  }\n\n  if (this.hasTrailingSlash()) {\n    this.error(403)\n    return\n  }\n\n  var loc = encodeUrl(collapseLeadingSlashes(this.path + '/'))\n  var doc = createHtmlDocument('Redirecting', 'Redirecting to <a href=\"' + escapeHtml(loc) + '\">' +\n    escapeHtml(loc) + '</a>')\n\n  // redirect\n  res.statusCode = 301\n  res.setHeader('Content-Type', 'text/html; charset=UTF-8')\n  res.setHeader('Content-Length', Buffer.byteLength(doc))\n  res.setHeader('Content-Security-Policy', \"default-src 'none'\")\n  res.setHeader('X-Content-Type-Options', 'nosniff')\n  res.setHeader('Location', loc)\n  res.end(doc)\n}\n\n/**\n * Pipe to `res.\n *\n * @param {Stream} res\n * @return {Stream} res\n * @api public\n */\n\nSendStream.prototype.pipe = function pipe (res) {\n  // root path\n  var root = this._root\n\n  // references\n  this.res = res\n\n  // decode the path\n  var path = decode(this.path)\n  if (path === -1) {\n    this.error(400)\n    return res\n  }\n\n  // null byte(s)\n  if (~path.indexOf('\\0')) {\n    this.error(400)\n    return res\n  }\n\n  var parts\n  if (root !== null) {\n    // normalize\n    if (path) {\n      path = normalize('.' + sep + path)\n    }\n\n    // malicious path\n    if (UP_PATH_REGEXP.test(path)) {\n      debug('malicious path \"%s\"', path)\n      this.error(403)\n      return res\n    }\n\n    // explode path parts\n    parts = path.split(sep)\n\n    // join / normalize from optional root dir\n    path = normalize(join(root, path))\n  } else {\n    // \"..\" is malicious without \"root\"\n    if (UP_PATH_REGEXP.test(path)) {\n      debug('malicious path \"%s\"', path)\n      this.error(403)\n      return res\n    }\n\n    // explode path parts\n    parts = normalize(path).split(sep)\n\n    // resolve the path\n    path = resolve(path)\n  }\n\n  // dotfile handling\n  if (containsDotFile(parts)) {\n    var access = this._dotfiles\n\n    // legacy support\n    if (access === undefined) {\n      access = parts[parts.length - 1][0] === '.'\n        ? (this._hidden ? 'allow' : 'ignore')\n        : 'allow'\n    }\n\n    debug('%s dotfile \"%s\"', access, path)\n    switch (access) {\n      case 'allow':\n        break\n      case 'deny':\n        this.error(403)\n        return res\n      case 'ignore':\n      default:\n        this.error(404)\n        return res\n    }\n  }\n\n  // index file support\n  if (this._index.length && this.hasTrailingSlash()) {\n    this.sendIndex(path)\n    return res\n  }\n\n  this.sendFile(path)\n  return res\n}\n\n/**\n * Transfer `path`.\n *\n * @param {String} path\n * @api public\n */\n\nSendStream.prototype.send = function send (path, stat) {\n  var len = stat.size\n  var options = this.options\n  var opts = {}\n  var res = this.res\n  var req = this.req\n  var ranges = req.headers.range\n  var offset = options.start || 0\n\n  if (headersSent(res)) {\n    // impossible to send now\n    this.headersAlreadySent()\n    return\n  }\n\n  debug('pipe \"%s\"', path)\n\n  // set header fields\n  this.setHeader(path, stat)\n\n  // set content-type\n  this.type(path)\n\n  // conditional GET support\n  if (this.isConditionalGET()) {\n    if (this.isPreconditionFailure()) {\n      this.error(412)\n      return\n    }\n\n    if (this.isCachable() && this.isFresh()) {\n      this.notModified()\n      return\n    }\n  }\n\n  // adjust len to start/end options\n  len = Math.max(0, len - offset)\n  if (options.end !== undefined) {\n    var bytes = options.end - offset + 1\n    if (len > bytes) len = bytes\n  }\n\n  // Range support\n  if (this._acceptRanges && BYTES_RANGE_REGEXP.test(ranges)) {\n    // parse\n    ranges = parseRange(len, ranges, {\n      combine: true\n    })\n\n    // If-Range support\n    if (!this.isRangeFresh()) {\n      debug('range stale')\n      ranges = -2\n    }\n\n    // unsatisfiable\n    if (ranges === -1) {\n      debug('range unsatisfiable')\n\n      // Content-Range\n      res.setHeader('Content-Range', contentRange('bytes', len))\n\n      // 416 Requested Range Not Satisfiable\n      return this.error(416, {\n        headers: { 'Content-Range': res.getHeader('Content-Range') }\n      })\n    }\n\n    // valid (syntactically invalid/multiple ranges are treated as a regular response)\n    if (ranges !== -2 && ranges.length === 1) {\n      debug('range %j', ranges)\n\n      // Content-Range\n      res.statusCode = 206\n      res.setHeader('Content-Range', contentRange('bytes', len, ranges[0]))\n\n      // adjust for requested range\n      offset += ranges[0].start\n      len = ranges[0].end - ranges[0].start + 1\n    }\n  }\n\n  // clone options\n  for (var prop in options) {\n    opts[prop] = options[prop]\n  }\n\n  // set read options\n  opts.start = offset\n  opts.end = Math.max(offset, offset + len - 1)\n\n  // content-length\n  res.setHeader('Content-Length', len)\n\n  // HEAD support\n  if (req.method === 'HEAD') {\n    res.end()\n    return\n  }\n\n  this.stream(path, opts)\n}\n\n/**\n * Transfer file for `path`.\n *\n * @param {String} path\n * @api private\n */\nSendStream.prototype.sendFile = function sendFile (path) {\n  var i = 0\n  var self = this\n\n  debug('stat \"%s\"', path)\n  fs.stat(path, function onstat (err, stat) {\n    if (err && err.code === 'ENOENT' && !extname(path) && path[path.length - 1] !== sep) {\n      // not found, check extensions\n      return next(err)\n    }\n    if (err) return self.onStatError(err)\n    if (stat.isDirectory()) return self.redirect(path)\n    self.emit('file', path, stat)\n    self.send(path, stat)\n  })\n\n  function next (err) {\n    if (self._extensions.length <= i) {\n      return err\n        ? self.onStatError(err)\n        : self.error(404)\n    }\n\n    var p = path + '.' + self._extensions[i++]\n\n    debug('stat \"%s\"', p)\n    fs.stat(p, function (err, stat) {\n      if (err) return next(err)\n      if (stat.isDirectory()) return next()\n      self.emit('file', p, stat)\n      self.send(p, stat)\n    })\n  }\n}\n\n/**\n * Transfer index for `path`.\n *\n * @param {String} path\n * @api private\n */\nSendStream.prototype.sendIndex = function sendIndex (path) {\n  var i = -1\n  var self = this\n\n  function next (err) {\n    if (++i >= self._index.length) {\n      if (err) return self.onStatError(err)\n      return self.error(404)\n    }\n\n    var p = join(path, self._index[i])\n\n    debug('stat \"%s\"', p)\n    fs.stat(p, function (err, stat) {\n      if (err) return next(err)\n      if (stat.isDirectory()) return next()\n      self.emit('file', p, stat)\n      self.send(p, stat)\n    })\n  }\n\n  next()\n}\n\n/**\n * Stream `path` to the response.\n *\n * @param {String} path\n * @param {Object} options\n * @api private\n */\n\nSendStream.prototype.stream = function stream (path, options) {\n  var self = this\n  var res = this.res\n\n  // pipe\n  var stream = fs.createReadStream(path, options)\n  this.emit('stream', stream)\n  stream.pipe(res)\n\n  // cleanup\n  function cleanup () {\n    destroy(stream, true)\n  }\n\n  // response finished, cleanup\n  onFinished(res, cleanup)\n\n  // error handling\n  stream.on('error', function onerror (err) {\n    // clean up stream early\n    cleanup()\n\n    // error\n    self.onStatError(err)\n  })\n\n  // end\n  stream.on('end', function onend () {\n    self.emit('end')\n  })\n}\n\n/**\n * Set content-type based on `path`\n * if it hasn't been explicitly set.\n *\n * @param {String} path\n * @api private\n */\n\nSendStream.prototype.type = function type (path) {\n  var res = this.res\n\n  if (res.getHeader('Content-Type')) return\n\n  var type = mime.lookup(path)\n\n  if (!type) {\n    debug('no content-type')\n    return\n  }\n\n  var charset = mime.charsets.lookup(type)\n\n  debug('content-type %s', type)\n  res.setHeader('Content-Type', type + (charset ? '; charset=' + charset : ''))\n}\n\n/**\n * Set response header fields, most\n * fields may be pre-defined.\n *\n * @param {String} path\n * @param {Object} stat\n * @api private\n */\n\nSendStream.prototype.setHeader = function setHeader (path, stat) {\n  var res = this.res\n\n  this.emit('headers', res, path, stat)\n\n  if (this._acceptRanges && !res.getHeader('Accept-Ranges')) {\n    debug('accept ranges')\n    res.setHeader('Accept-Ranges', 'bytes')\n  }\n\n  if (this._cacheControl && !res.getHeader('Cache-Control')) {\n    var cacheControl = 'public, max-age=' + Math.floor(this._maxage / 1000)\n\n    if (this._immutable) {\n      cacheControl += ', immutable'\n    }\n\n    debug('cache-control %s', cacheControl)\n    res.setHeader('Cache-Control', cacheControl)\n  }\n\n  if (this._lastModified && !res.getHeader('Last-Modified')) {\n    var modified = stat.mtime.toUTCString()\n    debug('modified %s', modified)\n    res.setHeader('Last-Modified', modified)\n  }\n\n  if (this._etag && !res.getHeader('ETag')) {\n    var val = etag(stat)\n    debug('etag %s', val)\n    res.setHeader('ETag', val)\n  }\n}\n\n/**\n * Clear all headers from a response.\n *\n * @param {object} res\n * @private\n */\n\nfunction clearHeaders (res) {\n  var headers = getHeaderNames(res)\n\n  for (var i = 0; i < headers.length; i++) {\n    res.removeHeader(headers[i])\n  }\n}\n\n/**\n * Collapse all leading slashes into a single slash\n *\n * @param {string} str\n * @private\n */\nfunction collapseLeadingSlashes (str) {\n  for (var i = 0; i < str.length; i++) {\n    if (str[i] !== '/') {\n      break\n    }\n  }\n\n  return i > 1\n    ? '/' + str.substr(i)\n    : str\n}\n\n/**\n * Determine if path parts contain a dotfile.\n *\n * @api private\n */\n\nfunction containsDotFile (parts) {\n  for (var i = 0; i < parts.length; i++) {\n    var part = parts[i]\n    if (part.length > 1 && part[0] === '.') {\n      return true\n    }\n  }\n\n  return false\n}\n\n/**\n * Create a Content-Range header.\n *\n * @param {string} type\n * @param {number} size\n * @param {array} [range]\n */\n\nfunction contentRange (type, size, range) {\n  return type + ' ' + (range ? range.start + '-' + range.end : '*') + '/' + size\n}\n\n/**\n * Create a minimal HTML document.\n *\n * @param {string} title\n * @param {string} body\n * @private\n */\n\nfunction createHtmlDocument (title, body) {\n  return '<!DOCTYPE html>\\n' +\n    '<html lang=\"en\">\\n' +\n    '<head>\\n' +\n    '<meta charset=\"utf-8\">\\n' +\n    '<title>' + title + '</title>\\n' +\n    '</head>\\n' +\n    '<body>\\n' +\n    '<pre>' + body + '</pre>\\n' +\n    '</body>\\n' +\n    '</html>\\n'\n}\n\n/**\n * Create a HttpError object from simple arguments.\n *\n * @param {number} status\n * @param {Error|object} err\n * @private\n */\n\nfunction createHttpError (status, err) {\n  if (!err) {\n    return createError(status)\n  }\n\n  return err instanceof Error\n    ? createError(status, err, { expose: false })\n    : createError(status, err)\n}\n\n/**\n * decodeURIComponent.\n *\n * Allows V8 to only deoptimize this fn instead of all\n * of send().\n *\n * @param {String} path\n * @api private\n */\n\nfunction decode (path) {\n  try {\n    return decodeURIComponent(path)\n  } catch (err) {\n    return -1\n  }\n}\n\n/**\n * Get the header names on a respnse.\n *\n * @param {object} res\n * @returns {array[string]}\n * @private\n */\n\nfunction getHeaderNames (res) {\n  return typeof res.getHeaderNames !== 'function'\n    ? Object.keys(res._headers || {})\n    : res.getHeaderNames()\n}\n\n/**\n * Determine if emitter has listeners of a given type.\n *\n * The way to do this check is done three different ways in Node.js >= 0.8\n * so this consolidates them into a minimal set using instance methods.\n *\n * @param {EventEmitter} emitter\n * @param {string} type\n * @returns {boolean}\n * @private\n */\n\nfunction hasListeners (emitter, type) {\n  var count = typeof emitter.listenerCount !== 'function'\n    ? emitter.listeners(type).length\n    : emitter.listenerCount(type)\n\n  return count > 0\n}\n\n/**\n * Determine if the response headers have been sent.\n *\n * @param {object} res\n * @returns {boolean}\n * @private\n */\n\nfunction headersSent (res) {\n  return typeof res.headersSent !== 'boolean'\n    ? Boolean(res._header)\n    : res.headersSent\n}\n\n/**\n * Normalize the index option into an array.\n *\n * @param {boolean|string|array} val\n * @param {string} name\n * @private\n */\n\nfunction normalizeList (val, name) {\n  var list = [].concat(val || [])\n\n  for (var i = 0; i < list.length; i++) {\n    if (typeof list[i] !== 'string') {\n      throw new TypeError(name + ' must be array of strings or false')\n    }\n  }\n\n  return list\n}\n\n/**\n * Parse an HTTP Date into a number.\n *\n * @param {string} date\n * @private\n */\n\nfunction parseHttpDate (date) {\n  var timestamp = date && Date.parse(date)\n\n  return typeof timestamp === 'number'\n    ? timestamp\n    : NaN\n}\n\n/**\n * Parse a HTTP token list.\n *\n * @param {string} str\n * @private\n */\n\nfunction parseTokenList (str) {\n  var end = 0\n  var list = []\n  var start = 0\n\n  // gather tokens\n  for (var i = 0, len = str.length; i < len; i++) {\n    switch (str.charCodeAt(i)) {\n      case 0x20: /*   */\n        if (start === end) {\n          start = end = i + 1\n        }\n        break\n      case 0x2c: /* , */\n        if (start !== end) {\n          list.push(str.substring(start, end))\n        }\n        start = end = i + 1\n        break\n      default:\n        end = i + 1\n        break\n    }\n  }\n\n  // final token\n  if (start !== end) {\n    list.push(str.substring(start, end))\n  }\n\n  return list\n}\n\n/**\n * Set an object of headers on a response.\n *\n * @param {object} res\n * @param {object} headers\n * @private\n */\n\nfunction setHeaders (res, headers) {\n  var keys = Object.keys(headers)\n\n  for (var i = 0; i < keys.length; i++) {\n    var key = keys[i]\n    res.setHeader(key, headers[key])\n  }\n}\n","/**\n * Helpers.\n */\n\nvar s = 1000;\nvar m = s * 60;\nvar h = m * 60;\nvar d = h * 24;\nvar y = d * 365.25;\n\n/**\n * Parse or format the given `val`.\n *\n * Options:\n *\n *  - `long` verbose formatting [false]\n *\n * @param {String|Number} val\n * @param {Object} [options]\n * @throws {Error} throw an error if val is not a non-empty string or a number\n * @return {String|Number}\n * @api public\n */\n\nmodule.exports = function(val, options) {\n  options = options || {};\n  var type = typeof val;\n  if (type === 'string' && val.length > 0) {\n    return parse(val);\n  } else if (type === 'number' && isNaN(val) === false) {\n    return options.long ? fmtLong(val) : fmtShort(val);\n  }\n  throw new Error(\n    'val is not a non-empty string or a valid number. val=' +\n      JSON.stringify(val)\n  );\n};\n\n/**\n * Parse the given `str` and return milliseconds.\n *\n * @param {String} str\n * @return {Number}\n * @api private\n */\n\nfunction parse(str) {\n  str = String(str);\n  if (str.length > 100) {\n    return;\n  }\n  var match = /^((?:\\d+)?\\.?\\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|years?|yrs?|y)?$/i.exec(\n    str\n  );\n  if (!match) {\n    return;\n  }\n  var n = parseFloat(match[1]);\n  var type = (match[2] || 'ms').toLowerCase();\n  switch (type) {\n    case 'years':\n    case 'year':\n    case 'yrs':\n    case 'yr':\n    case 'y':\n      return n * y;\n    case 'days':\n    case 'day':\n    case 'd':\n      return n * d;\n    case 'hours':\n    case 'hour':\n    case 'hrs':\n    case 'hr':\n    case 'h':\n      return n * h;\n    case 'minutes':\n    case 'minute':\n    case 'mins':\n    case 'min':\n    case 'm':\n      return n * m;\n    case 'seconds':\n    case 'second':\n    case 'secs':\n    case 'sec':\n    case 's':\n      return n * s;\n    case 'milliseconds':\n    case 'millisecond':\n    case 'msecs':\n    case 'msec':\n    case 'ms':\n      return n;\n    default:\n      return undefined;\n  }\n}\n\n/**\n * Short format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtShort(ms) {\n  if (ms >= d) {\n    return Math.round(ms / d) + 'd';\n  }\n  if (ms >= h) {\n    return Math.round(ms / h) + 'h';\n  }\n  if (ms >= m) {\n    return Math.round(ms / m) + 'm';\n  }\n  if (ms >= s) {\n    return Math.round(ms / s) + 's';\n  }\n  return ms + 'ms';\n}\n\n/**\n * Long format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtLong(ms) {\n  return plural(ms, d, 'day') ||\n    plural(ms, h, 'hour') ||\n    plural(ms, m, 'minute') ||\n    plural(ms, s, 'second') ||\n    ms + ' ms';\n}\n\n/**\n * Pluralization helper.\n */\n\nfunction plural(ms, n, name) {\n  if (ms < n) {\n    return;\n  }\n  if (ms < n * 1.5) {\n    return Math.floor(ms / n) + ' ' + name;\n  }\n  return Math.ceil(ms / n) + ' ' + name + 's';\n}\n","/**\n * This is the web browser implementation of `debug()`.\n *\n * Expose `debug()` as the module.\n */\n\nexports = module.exports = require('./debug');\nexports.log = log;\nexports.formatArgs = formatArgs;\nexports.save = save;\nexports.load = load;\nexports.useColors = useColors;\nexports.storage = 'undefined' != typeof chrome\n               && 'undefined' != typeof chrome.storage\n                  ? chrome.storage.local\n                  : localstorage();\n\n/**\n * Colors.\n */\n\nexports.colors = [\n  'lightseagreen',\n  'forestgreen',\n  'goldenrod',\n  'dodgerblue',\n  'darkorchid',\n  'crimson'\n];\n\n/**\n * Currently only WebKit-based Web Inspectors, Firefox >= v31,\n * and the Firebug extension (any Firefox version) are known\n * to support \"%c\" CSS customizations.\n *\n * TODO: add a `localStorage` variable to explicitly enable/disable colors\n */\n\nfunction useColors() {\n  // NB: In an Electron preload script, document will be defined but not fully\n  // initialized. Since we know we're in Chrome, we'll just detect this case\n  // explicitly\n  if (typeof window !== 'undefined' && window.process && window.process.type === 'renderer') {\n    return true;\n  }\n\n  // is webkit? http://stackoverflow.com/a/16459606/376773\n  // document is undefined in react-native: https://github.com/facebook/react-native/pull/1632\n  return (typeof document !== 'undefined' && document.documentElement && document.documentElement.style && document.documentElement.style.WebkitAppearance) ||\n    // is firebug? http://stackoverflow.com/a/398120/376773\n    (typeof window !== 'undefined' && window.console && (window.console.firebug || (window.console.exception && window.console.table))) ||\n    // is firefox >= v31?\n    // https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages\n    (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/firefox\\/(\\d+)/) && parseInt(RegExp.$1, 10) >= 31) ||\n    // double check webkit in userAgent just in case we are in a worker\n    (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/applewebkit\\/(\\d+)/));\n}\n\n/**\n * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.\n */\n\nexports.formatters.j = function(v) {\n  try {\n    return JSON.stringify(v);\n  } catch (err) {\n    return '[UnexpectedJSONParseError]: ' + err.message;\n  }\n};\n\n\n/**\n * Colorize log arguments if enabled.\n *\n * @api public\n */\n\nfunction formatArgs(args) {\n  var useColors = this.useColors;\n\n  args[0] = (useColors ? '%c' : '')\n    + this.namespace\n    + (useColors ? ' %c' : ' ')\n    + args[0]\n    + (useColors ? '%c ' : ' ')\n    + '+' + exports.humanize(this.diff);\n\n  if (!useColors) return;\n\n  var c = 'color: ' + this.color;\n  args.splice(1, 0, c, 'color: inherit')\n\n  // the final \"%c\" is somewhat tricky, because there could be other\n  // arguments passed either before or after the %c, so we need to\n  // figure out the correct index to insert the CSS into\n  var index = 0;\n  var lastC = 0;\n  args[0].replace(/%[a-zA-Z%]/g, function(match) {\n    if ('%%' === match) return;\n    index++;\n    if ('%c' === match) {\n      // we only are interested in the *last* %c\n      // (the user may have provided their own)\n      lastC = index;\n    }\n  });\n\n  args.splice(lastC, 0, c);\n}\n\n/**\n * Invokes `console.log()` when available.\n * No-op when `console.log` is not a \"function\".\n *\n * @api public\n */\n\nfunction log() {\n  // this hackery is required for IE8/9, where\n  // the `console.log` function doesn't have 'apply'\n  return 'object' === typeof console\n    && console.log\n    && Function.prototype.apply.call(console.log, console, arguments);\n}\n\n/**\n * Save `namespaces`.\n *\n * @param {String} namespaces\n * @api private\n */\n\nfunction save(namespaces) {\n  try {\n    if (null == namespaces) {\n      exports.storage.removeItem('debug');\n    } else {\n      exports.storage.debug = namespaces;\n    }\n  } catch(e) {}\n}\n\n/**\n * Load `namespaces`.\n *\n * @return {String} returns the previously persisted debug modes\n * @api private\n */\n\nfunction load() {\n  var r;\n  try {\n    r = exports.storage.debug;\n  } catch(e) {}\n\n  // If debug isn't set in LS, and we're in Electron, try to load $DEBUG\n  if (!r && typeof process !== 'undefined' && 'env' in process) {\n    r = process.env.DEBUG;\n  }\n\n  return r;\n}\n\n/**\n * Enable namespaces listed in `localStorage.debug` initially.\n */\n\nexports.enable(load());\n\n/**\n * Localstorage attempts to return the localstorage.\n *\n * This is necessary because safari throws\n * when a user disables cookies/localstorage\n * and you attempt to access it.\n *\n * @return {LocalStorage}\n * @api private\n */\n\nfunction localstorage() {\n  try {\n    return window.localStorage;\n  } catch (e) {}\n}\n","\n/**\n * This is the common logic for both the Node.js and web browser\n * implementations of `debug()`.\n *\n * Expose `debug()` as the module.\n */\n\nexports = module.exports = createDebug.debug = createDebug['default'] = createDebug;\nexports.coerce = coerce;\nexports.disable = disable;\nexports.enable = enable;\nexports.enabled = enabled;\nexports.humanize = require('ms');\n\n/**\n * The currently active debug mode names, and names to skip.\n */\n\nexports.names = [];\nexports.skips = [];\n\n/**\n * Map of special \"%n\" handling functions, for the debug \"format\" argument.\n *\n * Valid key names are a single, lower or upper-case letter, i.e. \"n\" and \"N\".\n */\n\nexports.formatters = {};\n\n/**\n * Previous log timestamp.\n */\n\nvar prevTime;\n\n/**\n * Select a color.\n * @param {String} namespace\n * @return {Number}\n * @api private\n */\n\nfunction selectColor(namespace) {\n  var hash = 0, i;\n\n  for (i in namespace) {\n    hash  = ((hash << 5) - hash) + namespace.charCodeAt(i);\n    hash |= 0; // Convert to 32bit integer\n  }\n\n  return exports.colors[Math.abs(hash) % exports.colors.length];\n}\n\n/**\n * Create a debugger with the given `namespace`.\n *\n * @param {String} namespace\n * @return {Function}\n * @api public\n */\n\nfunction createDebug(namespace) {\n\n  function debug() {\n    // disabled?\n    if (!debug.enabled) return;\n\n    var self = debug;\n\n    // set `diff` timestamp\n    var curr = +new Date();\n    var ms = curr - (prevTime || curr);\n    self.diff = ms;\n    self.prev = prevTime;\n    self.curr = curr;\n    prevTime = curr;\n\n    // turn the `arguments` into a proper Array\n    var args = new Array(arguments.length);\n    for (var i = 0; i < args.length; i++) {\n      args[i] = arguments[i];\n    }\n\n    args[0] = exports.coerce(args[0]);\n\n    if ('string' !== typeof args[0]) {\n      // anything else let's inspect with %O\n      args.unshift('%O');\n    }\n\n    // apply any `formatters` transformations\n    var index = 0;\n    args[0] = args[0].replace(/%([a-zA-Z%])/g, function(match, format) {\n      // if we encounter an escaped % then don't increase the array index\n      if (match === '%%') return match;\n      index++;\n      var formatter = exports.formatters[format];\n      if ('function' === typeof formatter) {\n        var val = args[index];\n        match = formatter.call(self, val);\n\n        // now we need to remove `args[index]` since it's inlined in the `format`\n        args.splice(index, 1);\n        index--;\n      }\n      return match;\n    });\n\n    // apply env-specific formatting (colors, etc.)\n    exports.formatArgs.call(self, args);\n\n    var logFn = debug.log || exports.log || console.log.bind(console);\n    logFn.apply(self, args);\n  }\n\n  debug.namespace = namespace;\n  debug.enabled = exports.enabled(namespace);\n  debug.useColors = exports.useColors();\n  debug.color = selectColor(namespace);\n\n  // env-specific initialization logic for debug instances\n  if ('function' === typeof exports.init) {\n    exports.init(debug);\n  }\n\n  return debug;\n}\n\n/**\n * Enables a debug mode by namespaces. This can include modes\n * separated by a colon and wildcards.\n *\n * @param {String} namespaces\n * @api public\n */\n\nfunction enable(namespaces) {\n  exports.save(namespaces);\n\n  exports.names = [];\n  exports.skips = [];\n\n  var split = (typeof namespaces === 'string' ? namespaces : '').split(/[\\s,]+/);\n  var len = split.length;\n\n  for (var i = 0; i < len; i++) {\n    if (!split[i]) continue; // ignore empty strings\n    namespaces = split[i].replace(/\\*/g, '.*?');\n    if (namespaces[0] === '-') {\n      exports.skips.push(new RegExp('^' + namespaces.substr(1) + '$'));\n    } else {\n      exports.names.push(new RegExp('^' + namespaces + '$'));\n    }\n  }\n}\n\n/**\n * Disable debug output.\n *\n * @api public\n */\n\nfunction disable() {\n  exports.enable('');\n}\n\n/**\n * Returns true if the given mode name is enabled, false otherwise.\n *\n * @param {String} name\n * @return {Boolean}\n * @api public\n */\n\nfunction enabled(name) {\n  var i, len;\n  for (i = 0, len = exports.skips.length; i < len; i++) {\n    if (exports.skips[i].test(name)) {\n      return false;\n    }\n  }\n  for (i = 0, len = exports.names.length; i < len; i++) {\n    if (exports.names[i].test(name)) {\n      return true;\n    }\n  }\n  return false;\n}\n\n/**\n * Coerce `val`.\n *\n * @param {Mixed} val\n * @return {Mixed}\n * @api private\n */\n\nfunction coerce(val) {\n  if (val instanceof Error) return val.stack || val.message;\n  return val;\n}\n","/**\n * Detect Electron renderer process, which is node, but we should\n * treat as a browser.\n */\n\nif (typeof process !== 'undefined' && process.type === 'renderer') {\n  module.exports = require('./browser.js');\n} else {\n  module.exports = require('./node.js');\n}\n","/**\n * Module dependencies.\n */\n\nvar tty = require('tty');\nvar util = require('util');\n\n/**\n * This is the Node.js implementation of `debug()`.\n *\n * Expose `debug()` as the module.\n */\n\nexports = module.exports = require('./debug');\nexports.init = init;\nexports.log = log;\nexports.formatArgs = formatArgs;\nexports.save = save;\nexports.load = load;\nexports.useColors = useColors;\n\n/**\n * Colors.\n */\n\nexports.colors = [6, 2, 3, 4, 5, 1];\n\n/**\n * Build up the default `inspectOpts` object from the environment variables.\n *\n *   $ DEBUG_COLORS=no DEBUG_DEPTH=10 DEBUG_SHOW_HIDDEN=enabled node script.js\n */\n\nexports.inspectOpts = Object.keys(process.env).filter(function (key) {\n  return /^debug_/i.test(key);\n}).reduce(function (obj, key) {\n  // camel-case\n  var prop = key\n    .substring(6)\n    .toLowerCase()\n    .replace(/_([a-z])/g, function (_, k) { return k.toUpperCase() });\n\n  // coerce string value into JS value\n  var val = process.env[key];\n  if (/^(yes|on|true|enabled)$/i.test(val)) val = true;\n  else if (/^(no|off|false|disabled)$/i.test(val)) val = false;\n  else if (val === 'null') val = null;\n  else val = Number(val);\n\n  obj[prop] = val;\n  return obj;\n}, {});\n\n/**\n * The file descriptor to write the `debug()` calls to.\n * Set the `DEBUG_FD` env variable to override with another value. i.e.:\n *\n *   $ DEBUG_FD=3 node script.js 3>debug.log\n */\n\nvar fd = parseInt(process.env.DEBUG_FD, 10) || 2;\n\nif (1 !== fd && 2 !== fd) {\n  util.deprecate(function(){}, 'except for stderr(2) and stdout(1), any other usage of DEBUG_FD is deprecated. Override debug.log if you want to use a different log function (https://git.io/debug_fd)')()\n}\n\nvar stream = 1 === fd ? process.stdout :\n             2 === fd ? process.stderr :\n             createWritableStdioStream(fd);\n\n/**\n * Is stdout a TTY? Colored output is enabled when `true`.\n */\n\nfunction useColors() {\n  return 'colors' in exports.inspectOpts\n    ? Boolean(exports.inspectOpts.colors)\n    : tty.isatty(fd);\n}\n\n/**\n * Map %o to `util.inspect()`, all on a single line.\n */\n\nexports.formatters.o = function(v) {\n  this.inspectOpts.colors = this.useColors;\n  return util.inspect(v, this.inspectOpts)\n    .split('\\n').map(function(str) {\n      return str.trim()\n    }).join(' ');\n};\n\n/**\n * Map %o to `util.inspect()`, allowing multiple lines if needed.\n */\n\nexports.formatters.O = function(v) {\n  this.inspectOpts.colors = this.useColors;\n  return util.inspect(v, this.inspectOpts);\n};\n\n/**\n * Adds ANSI color escape codes if enabled.\n *\n * @api public\n */\n\nfunction formatArgs(args) {\n  var name = this.namespace;\n  var useColors = this.useColors;\n\n  if (useColors) {\n    var c = this.color;\n    var prefix = '  \\u001b[3' + c + ';1m' + name + ' ' + '\\u001b[0m';\n\n    args[0] = prefix + args[0].split('\\n').join('\\n' + prefix);\n    args.push('\\u001b[3' + c + 'm+' + exports.humanize(this.diff) + '\\u001b[0m');\n  } else {\n    args[0] = new Date().toUTCString()\n      + ' ' + name + ' ' + args[0];\n  }\n}\n\n/**\n * Invokes `util.format()` with the specified arguments and writes to `stream`.\n */\n\nfunction log() {\n  return stream.write(util.format.apply(util, arguments) + '\\n');\n}\n\n/**\n * Save `namespaces`.\n *\n * @param {String} namespaces\n * @api private\n */\n\nfunction save(namespaces) {\n  if (null == namespaces) {\n    // If you set a process.env field to null or undefined, it gets cast to the\n    // string 'null' or 'undefined'. Just delete instead.\n    delete process.env.DEBUG;\n  } else {\n    process.env.DEBUG = namespaces;\n  }\n}\n\n/**\n * Load `namespaces`.\n *\n * @return {String} returns the previously persisted debug modes\n * @api private\n */\n\nfunction load() {\n  return process.env.DEBUG;\n}\n\n/**\n * Copied from `node/src/node.js`.\n *\n * XXX: It's lame that node doesn't expose this API out-of-the-box. It also\n * relies on the undocumented `tty_wrap.guessHandleType()` which is also lame.\n */\n\nfunction createWritableStdioStream (fd) {\n  var stream;\n  var tty_wrap = process.binding('tty_wrap');\n\n  // Note stream._type is used for test-module-load-list.js\n\n  switch (tty_wrap.guessHandleType(fd)) {\n    case 'TTY':\n      stream = new tty.WriteStream(fd);\n      stream._type = 'tty';\n\n      // Hack to have stream not keep the event loop alive.\n      // See https://github.com/joyent/node/issues/1726\n      if (stream._handle && stream._handle.unref) {\n        stream._handle.unref();\n      }\n      break;\n\n    case 'FILE':\n      var fs = require('fs');\n      stream = new fs.SyncWriteStream(fd, { autoClose: false });\n      stream._type = 'fs';\n      break;\n\n    case 'PIPE':\n    case 'TCP':\n      var net = require('net');\n      stream = new net.Socket({\n        fd: fd,\n        readable: false,\n        writable: true\n      });\n\n      // FIXME Should probably have an option in net.Socket to create a\n      // stream from an existing fd which is writable only. But for now\n      // we'll just add this hack and set the `readable` member to false.\n      // Test: ./node test/fixtures/echo.js < /etc/passwd\n      stream.readable = false;\n      stream.read = null;\n      stream._type = 'pipe';\n\n      // FIXME Hack to have stream not keep the event loop alive.\n      // See https://github.com/joyent/node/issues/1726\n      if (stream._handle && stream._handle.unref) {\n        stream._handle.unref();\n      }\n      break;\n\n    default:\n      // Probably an error on in uv_guess_handle()\n      throw new Error('Implement me. Unknown stream file type!');\n  }\n\n  // For supporting legacy API we put the FD here.\n  stream.fd = fd;\n\n  stream._isStdio = true;\n\n  return stream;\n}\n\n/**\n * Init logic for `debug` instances.\n *\n * Create a new `inspectOpts` object in case `useColors` is set\n * differently for a particular `debug` instance.\n */\n\nfunction init (debug) {\n  debug.inspectOpts = {};\n\n  var keys = Object.keys(exports.inspectOpts);\n  for (var i = 0; i < keys.length; i++) {\n    debug.inspectOpts[keys[i]] = exports.inspectOpts[keys[i]];\n  }\n}\n\n/**\n * Enable namespaces listed in `process.env.DEBUG` initially.\n */\n\nexports.enable(load());\n","/**\n * Helpers.\n */\n\nvar s = 1000;\nvar m = s * 60;\nvar h = m * 60;\nvar d = h * 24;\nvar w = d * 7;\nvar y = d * 365.25;\n\n/**\n * Parse or format the given `val`.\n *\n * Options:\n *\n *  - `long` verbose formatting [false]\n *\n * @param {String|Number} val\n * @param {Object} [options]\n * @throws {Error} throw an error if val is not a non-empty string or a number\n * @return {String|Number}\n * @api public\n */\n\nmodule.exports = function (val, options) {\n  options = options || {};\n  var type = typeof val;\n  if (type === 'string' && val.length > 0) {\n    return parse(val);\n  } else if (type === 'number' && isFinite(val)) {\n    return options.long ? fmtLong(val) : fmtShort(val);\n  }\n  throw new Error(\n    'val is not a non-empty string or a valid number. val=' +\n      JSON.stringify(val)\n  );\n};\n\n/**\n * Parse the given `str` and return milliseconds.\n *\n * @param {String} str\n * @return {Number}\n * @api private\n */\n\nfunction parse(str) {\n  str = String(str);\n  if (str.length > 100) {\n    return;\n  }\n  var match = /^(-?(?:\\d+)?\\.?\\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|years?|yrs?|y)?$/i.exec(\n    str\n  );\n  if (!match) {\n    return;\n  }\n  var n = parseFloat(match[1]);\n  var type = (match[2] || 'ms').toLowerCase();\n  switch (type) {\n    case 'years':\n    case 'year':\n    case 'yrs':\n    case 'yr':\n    case 'y':\n      return n * y;\n    case 'weeks':\n    case 'week':\n    case 'w':\n      return n * w;\n    case 'days':\n    case 'day':\n    case 'd':\n      return n * d;\n    case 'hours':\n    case 'hour':\n    case 'hrs':\n    case 'hr':\n    case 'h':\n      return n * h;\n    case 'minutes':\n    case 'minute':\n    case 'mins':\n    case 'min':\n    case 'm':\n      return n * m;\n    case 'seconds':\n    case 'second':\n    case 'secs':\n    case 'sec':\n    case 's':\n      return n * s;\n    case 'milliseconds':\n    case 'millisecond':\n    case 'msecs':\n    case 'msec':\n    case 'ms':\n      return n;\n    default:\n      return undefined;\n  }\n}\n\n/**\n * Short format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtShort(ms) {\n  var msAbs = Math.abs(ms);\n  if (msAbs >= d) {\n    return Math.round(ms / d) + 'd';\n  }\n  if (msAbs >= h) {\n    return Math.round(ms / h) + 'h';\n  }\n  if (msAbs >= m) {\n    return Math.round(ms / m) + 'm';\n  }\n  if (msAbs >= s) {\n    return Math.round(ms / s) + 's';\n  }\n  return ms + 'ms';\n}\n\n/**\n * Long format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtLong(ms) {\n  var msAbs = Math.abs(ms);\n  if (msAbs >= d) {\n    return plural(ms, msAbs, d, 'day');\n  }\n  if (msAbs >= h) {\n    return plural(ms, msAbs, h, 'hour');\n  }\n  if (msAbs >= m) {\n    return plural(ms, msAbs, m, 'minute');\n  }\n  if (msAbs >= s) {\n    return plural(ms, msAbs, s, 'second');\n  }\n  return ms + ' ms';\n}\n\n/**\n * Pluralization helper.\n */\n\nfunction plural(ms, msAbs, n, name) {\n  var isPlural = msAbs >= n * 1.5;\n  return Math.round(ms / n) + ' ' + name + (isPlural ? 's' : '');\n}\n","/*!\n * serve-static\n * Copyright(c) 2010 Sencha Inc.\n * Copyright(c) 2011 TJ Holowaychuk\n * Copyright(c) 2014-2016 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * Module dependencies.\n * @private\n */\n\nvar encodeUrl = require('encodeurl')\nvar escapeHtml = require('escape-html')\nvar parseUrl = require('parseurl')\nvar resolve = require('path').resolve\nvar send = require('send')\nvar url = require('url')\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = serveStatic\nmodule.exports.mime = send.mime\n\n/**\n * @param {string} root\n * @param {object} [options]\n * @return {function}\n * @public\n */\n\nfunction serveStatic (root, options) {\n  if (!root) {\n    throw new TypeError('root path required')\n  }\n\n  if (typeof root !== 'string') {\n    throw new TypeError('root path must be a string')\n  }\n\n  // copy options object\n  var opts = Object.create(options || null)\n\n  // fall-though\n  var fallthrough = opts.fallthrough !== false\n\n  // default redirect\n  var redirect = opts.redirect !== false\n\n  // headers listener\n  var setHeaders = opts.setHeaders\n\n  if (setHeaders && typeof setHeaders !== 'function') {\n    throw new TypeError('option setHeaders must be function')\n  }\n\n  // setup options for send\n  opts.maxage = opts.maxage || opts.maxAge || 0\n  opts.root = resolve(root)\n\n  // construct directory listener\n  var onDirectory = redirect\n    ? createRedirectDirectoryListener()\n    : createNotFoundDirectoryListener()\n\n  return function serveStatic (req, res, next) {\n    if (req.method !== 'GET' && req.method !== 'HEAD') {\n      if (fallthrough) {\n        return next()\n      }\n\n      // method not allowed\n      res.statusCode = 405\n      res.setHeader('Allow', 'GET, HEAD')\n      res.setHeader('Content-Length', '0')\n      res.end()\n      return\n    }\n\n    var forwardError = !fallthrough\n    var originalUrl = parseUrl.original(req)\n    var path = parseUrl(req).pathname\n\n    // make sure redirect occurs at mount\n    if (path === '/' && originalUrl.pathname.substr(-1) !== '/') {\n      path = ''\n    }\n\n    // create send stream\n    var stream = send(req, path, opts)\n\n    // add directory handler\n    stream.on('directory', onDirectory)\n\n    // add headers listener\n    if (setHeaders) {\n      stream.on('headers', setHeaders)\n    }\n\n    // add file listener for fallthrough\n    if (fallthrough) {\n      stream.on('file', function onFile () {\n        // once file is determined, always forward error\n        forwardError = true\n      })\n    }\n\n    // forward errors\n    stream.on('error', function error (err) {\n      if (forwardError || !(err.statusCode < 500)) {\n        next(err)\n        return\n      }\n\n      next()\n    })\n\n    // pipe\n    stream.pipe(res)\n  }\n}\n\n/**\n * Collapse all leading slashes into a single slash\n * @private\n */\nfunction collapseLeadingSlashes (str) {\n  for (var i = 0; i < str.length; i++) {\n    if (str.charCodeAt(i) !== 0x2f /* / */) {\n      break\n    }\n  }\n\n  return i > 1\n    ? '/' + str.substr(i)\n    : str\n}\n\n/**\n * Create a minimal HTML document.\n *\n * @param {string} title\n * @param {string} body\n * @private\n */\n\nfunction createHtmlDocument (title, body) {\n  return '<!DOCTYPE html>\\n' +\n    '<html lang=\"en\">\\n' +\n    '<head>\\n' +\n    '<meta charset=\"utf-8\">\\n' +\n    '<title>' + title + '</title>\\n' +\n    '</head>\\n' +\n    '<body>\\n' +\n    '<pre>' + body + '</pre>\\n' +\n    '</body>\\n' +\n    '</html>\\n'\n}\n\n/**\n * Create a directory listener that just 404s.\n * @private\n */\n\nfunction createNotFoundDirectoryListener () {\n  return function notFound () {\n    this.error(404)\n  }\n}\n\n/**\n * Create a directory listener that performs a redirect.\n * @private\n */\n\nfunction createRedirectDirectoryListener () {\n  return function redirect (res) {\n    if (this.hasTrailingSlash()) {\n      this.error(404)\n      return\n    }\n\n    // get original URL\n    var originalUrl = parseUrl.original(this.req)\n\n    // append trailing slash\n    originalUrl.path = null\n    originalUrl.pathname = collapseLeadingSlashes(originalUrl.pathname + '/')\n\n    // reformat the URL\n    var loc = encodeUrl(url.format(originalUrl))\n    var doc = createHtmlDocument('Redirecting', 'Redirecting to <a href=\"' + escapeHtml(loc) + '\">' +\n      escapeHtml(loc) + '</a>')\n\n    // send redirect response\n    res.statusCode = 301\n    res.setHeader('Content-Type', 'text/html; charset=UTF-8')\n    res.setHeader('Content-Length', Buffer.byteLength(doc))\n    res.setHeader('Content-Security-Policy', \"default-src 'none'\")\n    res.setHeader('X-Content-Type-Options', 'nosniff')\n    res.setHeader('Location', loc)\n    res.end(doc)\n  }\n}\n","'use strict'\n/* eslint no-proto: 0 */\nmodule.exports = Object.setPrototypeOf || ({ __proto__: [] } instanceof Array ? setProtoOf : mixinProperties)\n\nfunction setProtoOf (obj, proto) {\n  obj.__proto__ = proto\n  return obj\n}\n\nfunction mixinProperties (obj, proto) {\n  for (var prop in proto) {\n    if (!Object.prototype.hasOwnProperty.call(obj, prop)) {\n      obj[prop] = proto[prop]\n    }\n  }\n  return obj\n}\n","'use strict';\n\nvar GetIntrinsic = require('get-intrinsic');\nvar callBound = require('call-bind/callBound');\nvar inspect = require('object-inspect');\n\nvar $TypeError = GetIntrinsic('%TypeError%');\nvar $WeakMap = GetIntrinsic('%WeakMap%', true);\nvar $Map = GetIntrinsic('%Map%', true);\n\nvar $weakMapGet = callBound('WeakMap.prototype.get', true);\nvar $weakMapSet = callBound('WeakMap.prototype.set', true);\nvar $weakMapHas = callBound('WeakMap.prototype.has', true);\nvar $mapGet = callBound('Map.prototype.get', true);\nvar $mapSet = callBound('Map.prototype.set', true);\nvar $mapHas = callBound('Map.prototype.has', true);\n\n/*\n * This function traverses the list returning the node corresponding to the\n * given key.\n *\n * That node is also moved to the head of the list, so that if it's accessed\n * again we don't need to traverse the whole list. By doing so, all the recently\n * used nodes can be accessed relatively quickly.\n */\nvar listGetNode = function (list, key) { // eslint-disable-line consistent-return\n\tfor (var prev = list, curr; (curr = prev.next) !== null; prev = curr) {\n\t\tif (curr.key === key) {\n\t\t\tprev.next = curr.next;\n\t\t\tcurr.next = list.next;\n\t\t\tlist.next = curr; // eslint-disable-line no-param-reassign\n\t\t\treturn curr;\n\t\t}\n\t}\n};\n\nvar listGet = function (objects, key) {\n\tvar node = listGetNode(objects, key);\n\treturn node && node.value;\n};\nvar listSet = function (objects, key, value) {\n\tvar node = listGetNode(objects, key);\n\tif (node) {\n\t\tnode.value = value;\n\t} else {\n\t\t// Prepend the new node to the beginning of the list\n\t\tobjects.next = { // eslint-disable-line no-param-reassign\n\t\t\tkey: key,\n\t\t\tnext: objects.next,\n\t\t\tvalue: value\n\t\t};\n\t}\n};\nvar listHas = function (objects, key) {\n\treturn !!listGetNode(objects, key);\n};\n\nmodule.exports = function getSideChannel() {\n\tvar $wm;\n\tvar $m;\n\tvar $o;\n\tvar channel = {\n\t\tassert: function (key) {\n\t\t\tif (!channel.has(key)) {\n\t\t\t\tthrow new $TypeError('Side channel does not contain ' + inspect(key));\n\t\t\t}\n\t\t},\n\t\tget: function (key) { // eslint-disable-line consistent-return\n\t\t\tif ($WeakMap && key && (typeof key === 'object' || typeof key === 'function')) {\n\t\t\t\tif ($wm) {\n\t\t\t\t\treturn $weakMapGet($wm, key);\n\t\t\t\t}\n\t\t\t} else if ($Map) {\n\t\t\t\tif ($m) {\n\t\t\t\t\treturn $mapGet($m, key);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif ($o) { // eslint-disable-line no-lonely-if\n\t\t\t\t\treturn listGet($o, key);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\thas: function (key) {\n\t\t\tif ($WeakMap && key && (typeof key === 'object' || typeof key === 'function')) {\n\t\t\t\tif ($wm) {\n\t\t\t\t\treturn $weakMapHas($wm, key);\n\t\t\t\t}\n\t\t\t} else if ($Map) {\n\t\t\t\tif ($m) {\n\t\t\t\t\treturn $mapHas($m, key);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif ($o) { // eslint-disable-line no-lonely-if\n\t\t\t\t\treturn listHas($o, key);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn false;\n\t\t},\n\t\tset: function (key, value) {\n\t\t\tif ($WeakMap && key && (typeof key === 'object' || typeof key === 'function')) {\n\t\t\t\tif (!$wm) {\n\t\t\t\t\t$wm = new $WeakMap();\n\t\t\t\t}\n\t\t\t\t$weakMapSet($wm, key, value);\n\t\t\t} else if ($Map) {\n\t\t\t\tif (!$m) {\n\t\t\t\t\t$m = new $Map();\n\t\t\t\t}\n\t\t\t\t$mapSet($m, key, value);\n\t\t\t} else {\n\t\t\t\tif (!$o) {\n\t\t\t\t\t/*\n\t\t\t\t\t * Initialize the linked list as an empty node, so that we don't have\n\t\t\t\t\t * to special-case handling of the first node: we can always refer to\n\t\t\t\t\t * it as (previous node).next, instead of something like (list).head\n\t\t\t\t\t */\n\t\t\t\t\t$o = { key: {}, next: null };\n\t\t\t\t}\n\t\t\t\tlistSet($o, key, value);\n\t\t\t}\n\t\t}\n\t};\n\treturn channel;\n};\n","/*!\n * statuses\n * Copyright(c) 2014 Jonathan Ong\n * Copyright(c) 2016 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * Module dependencies.\n * @private\n */\n\nvar codes = require('./codes.json')\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = status\n\n// status code to message map\nstatus.message = codes\n\n// status message (lower-case) to code map\nstatus.code = createMessageToStatusCodeMap(codes)\n\n// array of status codes\nstatus.codes = createStatusCodeList(codes)\n\n// status codes for redirects\nstatus.redirect = {\n  300: true,\n  301: true,\n  302: true,\n  303: true,\n  305: true,\n  307: true,\n  308: true\n}\n\n// status codes for empty bodies\nstatus.empty = {\n  204: true,\n  205: true,\n  304: true\n}\n\n// status codes for when you should retry the request\nstatus.retry = {\n  502: true,\n  503: true,\n  504: true\n}\n\n/**\n * Create a map of message to status code.\n * @private\n */\n\nfunction createMessageToStatusCodeMap (codes) {\n  var map = {}\n\n  Object.keys(codes).forEach(function forEachCode (code) {\n    var message = codes[code]\n    var status = Number(code)\n\n    // populate map\n    map[message.toLowerCase()] = status\n  })\n\n  return map\n}\n\n/**\n * Create a list of all status codes.\n * @private\n */\n\nfunction createStatusCodeList (codes) {\n  return Object.keys(codes).map(function mapCode (code) {\n    return Number(code)\n  })\n}\n\n/**\n * Get the status code for given message.\n * @private\n */\n\nfunction getStatusCode (message) {\n  var msg = message.toLowerCase()\n\n  if (!Object.prototype.hasOwnProperty.call(status.code, msg)) {\n    throw new Error('invalid status message: \"' + message + '\"')\n  }\n\n  return status.code[msg]\n}\n\n/**\n * Get the status message for given code.\n * @private\n */\n\nfunction getStatusMessage (code) {\n  if (!Object.prototype.hasOwnProperty.call(status.message, code)) {\n    throw new Error('invalid status code: ' + code)\n  }\n\n  return status.message[code]\n}\n\n/**\n * Get the status code.\n *\n * Given a number, this will throw if it is not a known status\n * code, otherwise the code will be returned. Given a string,\n * the string will be parsed for a number and return the code\n * if valid, otherwise will lookup the code assuming this is\n * the status message.\n *\n * @param {string|number} code\n * @returns {number}\n * @public\n */\n\nfunction status (code) {\n  if (typeof code === 'number') {\n    return getStatusMessage(code)\n  }\n\n  if (typeof code !== 'string') {\n    throw new TypeError('code must be a number or string')\n  }\n\n  // '403'\n  var n = parseInt(code, 10)\n  if (!isNaN(n)) {\n    return getStatusMessage(n)\n  }\n\n  return getStatusCode(code)\n}\n","/*!\n * toidentifier\n * Copyright(c) 2016 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = toIdentifier\n\n/**\n * Trasform the given string into a JavaScript identifier\n *\n * @param {string} str\n * @returns {string}\n * @public\n */\n\nfunction toIdentifier (str) {\n  return str\n    .split(' ')\n    .map(function (token) {\n      return token.slice(0, 1).toUpperCase() + token.slice(1)\n    })\n    .join('')\n    .replace(/[^ _0-9a-z]/gi, '')\n}\n","/*!\n * type-is\n * Copyright(c) 2014 Jonathan Ong\n * Copyright(c) 2014-2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * Module dependencies.\n * @private\n */\n\nvar typer = require('media-typer')\nvar mime = require('mime-types')\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = typeofrequest\nmodule.exports.is = typeis\nmodule.exports.hasBody = hasbody\nmodule.exports.normalize = normalize\nmodule.exports.match = mimeMatch\n\n/**\n * Compare a `value` content-type with `types`.\n * Each `type` can be an extension like `html`,\n * a special shortcut like `multipart` or `urlencoded`,\n * or a mime type.\n *\n * If no types match, `false` is returned.\n * Otherwise, the first `type` that matches is returned.\n *\n * @param {String} value\n * @param {Array} types\n * @public\n */\n\nfunction typeis (value, types_) {\n  var i\n  var types = types_\n\n  // remove parameters and normalize\n  var val = tryNormalizeType(value)\n\n  // no type or invalid\n  if (!val) {\n    return false\n  }\n\n  // support flattened arguments\n  if (types && !Array.isArray(types)) {\n    types = new Array(arguments.length - 1)\n    for (i = 0; i < types.length; i++) {\n      types[i] = arguments[i + 1]\n    }\n  }\n\n  // no types, return the content type\n  if (!types || !types.length) {\n    return val\n  }\n\n  var type\n  for (i = 0; i < types.length; i++) {\n    if (mimeMatch(normalize(type = types[i]), val)) {\n      return type[0] === '+' || type.indexOf('*') !== -1\n        ? val\n        : type\n    }\n  }\n\n  // no matches\n  return false\n}\n\n/**\n * Check if a request has a request body.\n * A request with a body __must__ either have `transfer-encoding`\n * or `content-length` headers set.\n * http://www.w3.org/Protocols/rfc2616/rfc2616-sec4.html#sec4.3\n *\n * @param {Object} request\n * @return {Boolean}\n * @public\n */\n\nfunction hasbody (req) {\n  return req.headers['transfer-encoding'] !== undefined ||\n    !isNaN(req.headers['content-length'])\n}\n\n/**\n * Check if the incoming request contains the \"Content-Type\"\n * header field, and it contains any of the give mime `type`s.\n * If there is no request body, `null` is returned.\n * If there is no content type, `false` is returned.\n * Otherwise, it returns the first `type` that matches.\n *\n * Examples:\n *\n *     // With Content-Type: text/html; charset=utf-8\n *     this.is('html'); // => 'html'\n *     this.is('text/html'); // => 'text/html'\n *     this.is('text/*', 'application/json'); // => 'text/html'\n *\n *     // When Content-Type is application/json\n *     this.is('json', 'urlencoded'); // => 'json'\n *     this.is('application/json'); // => 'application/json'\n *     this.is('html', 'application/*'); // => 'application/json'\n *\n *     this.is('html'); // => false\n *\n * @param {String|Array} types...\n * @return {String|false|null}\n * @public\n */\n\nfunction typeofrequest (req, types_) {\n  var types = types_\n\n  // no body\n  if (!hasbody(req)) {\n    return null\n  }\n\n  // support flattened arguments\n  if (arguments.length > 2) {\n    types = new Array(arguments.length - 1)\n    for (var i = 0; i < types.length; i++) {\n      types[i] = arguments[i + 1]\n    }\n  }\n\n  // request content type\n  var value = req.headers['content-type']\n\n  return typeis(value, types)\n}\n\n/**\n * Normalize a mime type.\n * If it's a shorthand, expand it to a valid mime type.\n *\n * In general, you probably want:\n *\n *   var type = is(req, ['urlencoded', 'json', 'multipart']);\n *\n * Then use the appropriate body parsers.\n * These three are the most common request body types\n * and are thus ensured to work.\n *\n * @param {String} type\n * @private\n */\n\nfunction normalize (type) {\n  if (typeof type !== 'string') {\n    // invalid type\n    return false\n  }\n\n  switch (type) {\n    case 'urlencoded':\n      return 'application/x-www-form-urlencoded'\n    case 'multipart':\n      return 'multipart/*'\n  }\n\n  if (type[0] === '+') {\n    // \"+json\" -> \"*/*+json\" expando\n    return '*/*' + type\n  }\n\n  return type.indexOf('/') === -1\n    ? mime.lookup(type)\n    : type\n}\n\n/**\n * Check if `expected` mime type\n * matches `actual` mime type with\n * wildcard and +suffix support.\n *\n * @param {String} expected\n * @param {String} actual\n * @return {Boolean}\n * @private\n */\n\nfunction mimeMatch (expected, actual) {\n  // invalid type\n  if (expected === false) {\n    return false\n  }\n\n  // split types\n  var actualParts = actual.split('/')\n  var expectedParts = expected.split('/')\n\n  // invalid format\n  if (actualParts.length !== 2 || expectedParts.length !== 2) {\n    return false\n  }\n\n  // validate type\n  if (expectedParts[0] !== '*' && expectedParts[0] !== actualParts[0]) {\n    return false\n  }\n\n  // validate suffix wildcard\n  if (expectedParts[1].substr(0, 2) === '*+') {\n    return expectedParts[1].length <= actualParts[1].length + 1 &&\n      expectedParts[1].substr(1) === actualParts[1].substr(1 - expectedParts[1].length)\n  }\n\n  // validate subtype\n  if (expectedParts[1] !== '*' && expectedParts[1] !== actualParts[1]) {\n    return false\n  }\n\n  return true\n}\n\n/**\n * Normalize a type and remove parameters.\n *\n * @param {string} value\n * @return {string}\n * @private\n */\n\nfunction normalizeType (value) {\n  // parse the type\n  var type = typer.parse(value)\n\n  // remove the parameters\n  type.parameters = undefined\n\n  // reformat it\n  return typer.format(type)\n}\n\n/**\n * Try to normalize a type and remove parameters.\n *\n * @param {string} value\n * @return {string}\n * @private\n */\n\nfunction tryNormalizeType (value) {\n  if (!value) {\n    return null\n  }\n\n  try {\n    return normalizeType(value)\n  } catch (err) {\n    return null\n  }\n}\n","/*!\n * unpipe\n * Copyright(c) 2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = unpipe\n\n/**\n * Determine if there are Node.js pipe-like data listeners.\n * @private\n */\n\nfunction hasPipeDataListeners(stream) {\n  var listeners = stream.listeners('data')\n\n  for (var i = 0; i < listeners.length; i++) {\n    if (listeners[i].name === 'ondata') {\n      return true\n    }\n  }\n\n  return false\n}\n\n/**\n * Unpipe a stream from all destinations.\n *\n * @param {object} stream\n * @public\n */\n\nfunction unpipe(stream) {\n  if (!stream) {\n    throw new TypeError('argument stream is required')\n  }\n\n  if (typeof stream.unpipe === 'function') {\n    // new-style\n    stream.unpipe()\n    return\n  }\n\n  // Node.js 0.8 hack\n  if (!hasPipeDataListeners(stream)) {\n    return\n  }\n\n  var listener\n  var listeners = stream.listeners('close')\n\n  for (var i = 0; i < listeners.length; i++) {\n    listener = listeners[i]\n\n    if (listener.name !== 'cleanup' && listener.name !== 'onclose') {\n      continue\n    }\n\n    // invoke the listener\n    listener.call(stream)\n  }\n}\n","'use strict';\n\n/**\n * Checks if a given buffer contains only correct UTF-8.\n * Ported from https://www.cl.cam.ac.uk/%7Emgk25/ucs/utf8_check.c by\n * Markus Kuhn.\n *\n * @param {Buffer} buf The buffer to check\n * @return {Boolean} `true` if `buf` contains only correct UTF-8, else `false`\n * @public\n */\nfunction isValidUTF8(buf) {\n  const len = buf.length;\n  let i = 0;\n\n  while (i < len) {\n    if ((buf[i] & 0x80) === 0x00) {  // 0xxxxxxx\n      i++;\n    } else if ((buf[i] & 0xe0) === 0xc0) {  // 110xxxxx 10xxxxxx\n      if (\n        i + 1 === len ||\n        (buf[i + 1] & 0xc0) !== 0x80 ||\n        (buf[i] & 0xfe) === 0xc0  // overlong\n      ) {\n        return false;\n      }\n\n      i += 2;\n    } else if ((buf[i] & 0xf0) === 0xe0) {  // 1110xxxx 10xxxxxx 10xxxxxx\n      if (\n        i + 2 >= len ||\n        (buf[i + 1] & 0xc0) !== 0x80 ||\n        (buf[i + 2] & 0xc0) !== 0x80 ||\n        buf[i] === 0xe0 && (buf[i + 1] & 0xe0) === 0x80 ||  // overlong\n        buf[i] === 0xed && (buf[i + 1] & 0xe0) === 0xa0  // surrogate (U+D800 - U+DFFF)\n      ) {\n        return false;\n      }\n\n      i += 3;\n    } else if ((buf[i] & 0xf8) === 0xf0) {  // 11110xxx 10xxxxxx 10xxxxxx 10xxxxxx\n      if (\n        i + 3 >= len ||\n        (buf[i + 1] & 0xc0) !== 0x80 ||\n        (buf[i + 2] & 0xc0) !== 0x80 ||\n        (buf[i + 3] & 0xc0) !== 0x80 ||\n        buf[i] === 0xf0 && (buf[i + 1] & 0xf0) === 0x80 ||  // overlong\n        buf[i] === 0xf4 && buf[i + 1] > 0x8f || buf[i] > 0xf4  // > U+10FFFF\n      ) {\n        return false;\n      }\n\n      i += 4;\n    } else {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nmodule.exports = isValidUTF8;\n","'use strict';\n\ntry {\n  module.exports = require('node-gyp-build')(__dirname);\n} catch (e) {\n  module.exports = require('./fallback');\n}\n","/**\n * Merge object b with object a.\n *\n *     var a = { foo: 'bar' }\n *       , b = { bar: 'baz' };\n *\n *     merge(a, b);\n *     // => { foo: 'bar', bar: 'baz' }\n *\n * @param {Object} a\n * @param {Object} b\n * @return {Object}\n * @api public\n */\n\nexports = module.exports = function(a, b){\n  if (a && b) {\n    for (var key in b) {\n      a[key] = b[key];\n    }\n  }\n  return a;\n};\n","export default /^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;","import crypto from 'crypto';\nconst rnds8Pool = new Uint8Array(256); // # of random values to pre-allocate\n\nlet poolPtr = rnds8Pool.length;\nexport default function rng() {\n  if (poolPtr > rnds8Pool.length - 16) {\n    crypto.randomFillSync(rnds8Pool);\n    poolPtr = 0;\n  }\n\n  return rnds8Pool.slice(poolPtr, poolPtr += 16);\n}","import validate from './validate.js';\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\n\nconst byteToHex = [];\n\nfor (let i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).substr(1));\n}\n\nfunction stringify(arr, offset = 0) {\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  const uuid = (byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]]).toLowerCase(); // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n\n  if (!validate(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n\n  return uuid;\n}\n\nexport default stringify;","import rng from './rng.js';\nimport stringify from './stringify.js';\n\nfunction v4(options, buf, offset) {\n  options = options || {};\n  const rnds = options.random || (options.rng || rng)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    offset = offset || 0;\n\n    for (let i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n\n    return buf;\n  }\n\n  return stringify(rnds);\n}\n\nexport default v4;","import REGEX from './regex.js';\n\nfunction validate(uuid) {\n  return typeof uuid === 'string' && REGEX.test(uuid);\n}\n\nexport default validate;","/*!\n * vary\n * Copyright(c) 2014-2017 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * Module exports.\n */\n\nmodule.exports = vary\nmodule.exports.append = append\n\n/**\n * RegExp to match field-name in RFC 7230 sec 3.2\n *\n * field-name    = token\n * token         = 1*tchar\n * tchar         = \"!\" / \"#\" / \"$\" / \"%\" / \"&\" / \"'\" / \"*\"\n *               / \"+\" / \"-\" / \".\" / \"^\" / \"_\" / \"`\" / \"|\" / \"~\"\n *               / DIGIT / ALPHA\n *               ; any VCHAR, except delimiters\n */\n\nvar FIELD_NAME_REGEXP = /^[!#$%&'*+\\-.^_`|~0-9A-Za-z]+$/\n\n/**\n * Append a field to a vary header.\n *\n * @param {String} header\n * @param {String|Array} field\n * @return {String}\n * @public\n */\n\nfunction append (header, field) {\n  if (typeof header !== 'string') {\n    throw new TypeError('header argument is required')\n  }\n\n  if (!field) {\n    throw new TypeError('field argument is required')\n  }\n\n  // get fields array\n  var fields = !Array.isArray(field)\n    ? parse(String(field))\n    : field\n\n  // assert on invalid field names\n  for (var j = 0; j < fields.length; j++) {\n    if (!FIELD_NAME_REGEXP.test(fields[j])) {\n      throw new TypeError('field argument contains an invalid header name')\n    }\n  }\n\n  // existing, unspecified vary\n  if (header === '*') {\n    return header\n  }\n\n  // enumerate current values\n  var val = header\n  var vals = parse(header.toLowerCase())\n\n  // unspecified vary\n  if (fields.indexOf('*') !== -1 || vals.indexOf('*') !== -1) {\n    return '*'\n  }\n\n  for (var i = 0; i < fields.length; i++) {\n    var fld = fields[i].toLowerCase()\n\n    // append value (case-preserving)\n    if (vals.indexOf(fld) === -1) {\n      vals.push(fld)\n      val = val\n        ? val + ', ' + fields[i]\n        : fields[i]\n    }\n  }\n\n  return val\n}\n\n/**\n * Parse a vary header into an array.\n *\n * @param {String} header\n * @return {Array}\n * @private\n */\n\nfunction parse (header) {\n  var end = 0\n  var list = []\n  var start = 0\n\n  // gather tokens\n  for (var i = 0, len = header.length; i < len; i++) {\n    switch (header.charCodeAt(i)) {\n      case 0x20: /*   */\n        if (start === end) {\n          start = end = i + 1\n        }\n        break\n      case 0x2c: /* , */\n        list.push(header.substring(start, end))\n        start = end = i + 1\n        break\n      default:\n        end = i + 1\n        break\n    }\n  }\n\n  // final token\n  list.push(header.substring(start, end))\n\n  return list\n}\n\n/**\n * Mark that a request is varied on a header field.\n *\n * @param {Object} res\n * @param {String|Array} field\n * @public\n */\n\nfunction vary (res, field) {\n  if (!res || !res.getHeader || !res.setHeader) {\n    // quack quack\n    throw new TypeError('res argument is required')\n  }\n\n  // get existing header\n  var val = res.getHeader('Vary') || ''\n  var header = Array.isArray(val)\n    ? val.join(', ')\n    : String(val)\n\n  // set new header\n  if ((val = append(header, field))) {\n    res.setHeader('Vary', val)\n  }\n}\n","'use strict';\n\nconst WebSocket = require('./lib/websocket');\n\nWebSocket.createWebSocketStream = require('./lib/stream');\nWebSocket.Server = require('./lib/websocket-server');\nWebSocket.Receiver = require('./lib/receiver');\nWebSocket.Sender = require('./lib/sender');\n\nWebSocket.WebSocket = WebSocket;\nWebSocket.WebSocketServer = WebSocket.Server;\n\nmodule.exports = WebSocket;\n","'use strict';\n\nconst { EMPTY_BUFFER } = require('./constants');\n\n/**\n * Merges an array of buffers into a new buffer.\n *\n * @param {Buffer[]} list The array of buffers to concat\n * @param {Number} totalLength The total length of buffers in the list\n * @return {Buffer} The resulting buffer\n * @public\n */\nfunction concat(list, totalLength) {\n  if (list.length === 0) return EMPTY_BUFFER;\n  if (list.length === 1) return list[0];\n\n  const target = Buffer.allocUnsafe(totalLength);\n  let offset = 0;\n\n  for (let i = 0; i < list.length; i++) {\n    const buf = list[i];\n    target.set(buf, offset);\n    offset += buf.length;\n  }\n\n  if (offset < totalLength) return target.slice(0, offset);\n\n  return target;\n}\n\n/**\n * Masks a buffer using the given mask.\n *\n * @param {Buffer} source The buffer to mask\n * @param {Buffer} mask The mask to use\n * @param {Buffer} output The buffer where to store the result\n * @param {Number} offset The offset at which to start writing\n * @param {Number} length The number of bytes to mask.\n * @public\n */\nfunction _mask(source, mask, output, offset, length) {\n  for (let i = 0; i < length; i++) {\n    output[offset + i] = source[i] ^ mask[i & 3];\n  }\n}\n\n/**\n * Unmasks a buffer using the given mask.\n *\n * @param {Buffer} buffer The buffer to unmask\n * @param {Buffer} mask The mask to use\n * @public\n */\nfunction _unmask(buffer, mask) {\n  for (let i = 0; i < buffer.length; i++) {\n    buffer[i] ^= mask[i & 3];\n  }\n}\n\n/**\n * Converts a buffer to an `ArrayBuffer`.\n *\n * @param {Buffer} buf The buffer to convert\n * @return {ArrayBuffer} Converted buffer\n * @public\n */\nfunction toArrayBuffer(buf) {\n  if (buf.byteLength === buf.buffer.byteLength) {\n    return buf.buffer;\n  }\n\n  return buf.buffer.slice(buf.byteOffset, buf.byteOffset + buf.byteLength);\n}\n\n/**\n * Converts `data` to a `Buffer`.\n *\n * @param {*} data The data to convert\n * @return {Buffer} The buffer\n * @throws {TypeError}\n * @public\n */\nfunction toBuffer(data) {\n  toBuffer.readOnly = true;\n\n  if (Buffer.isBuffer(data)) return data;\n\n  let buf;\n\n  if (data instanceof ArrayBuffer) {\n    buf = Buffer.from(data);\n  } else if (ArrayBuffer.isView(data)) {\n    buf = Buffer.from(data.buffer, data.byteOffset, data.byteLength);\n  } else {\n    buf = Buffer.from(data);\n    toBuffer.readOnly = false;\n  }\n\n  return buf;\n}\n\nmodule.exports = {\n  concat,\n  mask: _mask,\n  toArrayBuffer,\n  toBuffer,\n  unmask: _unmask\n};\n\n/* istanbul ignore else  */\nif (!process.env.WS_NO_BUFFER_UTIL) {\n  try {\n    const bufferUtil = require('bufferutil');\n\n    module.exports.mask = function (source, mask, output, offset, length) {\n      if (length < 48) _mask(source, mask, output, offset, length);\n      else bufferUtil.mask(source, mask, output, offset, length);\n    };\n\n    module.exports.unmask = function (buffer, mask) {\n      if (buffer.length < 32) _unmask(buffer, mask);\n      else bufferUtil.unmask(buffer, mask);\n    };\n  } catch (e) {\n    // Continue regardless of the error.\n  }\n}\n","'use strict';\n\nmodule.exports = {\n  BINARY_TYPES: ['nodebuffer', 'arraybuffer', 'fragments'],\n  EMPTY_BUFFER: Buffer.alloc(0),\n  GUID: '258EAFA5-E914-47DA-95CA-C5AB0DC85B11',\n  kForOnEventAttribute: Symbol('kIsForOnEventAttribute'),\n  kListener: Symbol('kListener'),\n  kStatusCode: Symbol('status-code'),\n  kWebSocket: Symbol('websocket'),\n  NOOP: () => {}\n};\n","'use strict';\n\nconst { kForOnEventAttribute, kListener } = require('./constants');\n\nconst kCode = Symbol('kCode');\nconst kData = Symbol('kData');\nconst kError = Symbol('kError');\nconst kMessage = Symbol('kMessage');\nconst kReason = Symbol('kReason');\nconst kTarget = Symbol('kTarget');\nconst kType = Symbol('kType');\nconst kWasClean = Symbol('kWasClean');\n\n/**\n * Class representing an event.\n */\nclass Event {\n  /**\n   * Create a new `Event`.\n   *\n   * @param {String} type The name of the event\n   * @throws {TypeError} If the `type` argument is not specified\n   */\n  constructor(type) {\n    this[kTarget] = null;\n    this[kType] = type;\n  }\n\n  /**\n   * @type {*}\n   */\n  get target() {\n    return this[kTarget];\n  }\n\n  /**\n   * @type {String}\n   */\n  get type() {\n    return this[kType];\n  }\n}\n\nObject.defineProperty(Event.prototype, 'target', { enumerable: true });\nObject.defineProperty(Event.prototype, 'type', { enumerable: true });\n\n/**\n * Class representing a close event.\n *\n * @extends Event\n */\nclass CloseEvent extends Event {\n  /**\n   * Create a new `CloseEvent`.\n   *\n   * @param {String} type The name of the event\n   * @param {Object} [options] A dictionary object that allows for setting\n   *     attributes via object members of the same name\n   * @param {Number} [options.code=0] The status code explaining why the\n   *     connection was closed\n   * @param {String} [options.reason=''] A human-readable string explaining why\n   *     the connection was closed\n   * @param {Boolean} [options.wasClean=false] Indicates whether or not the\n   *     connection was cleanly closed\n   */\n  constructor(type, options = {}) {\n    super(type);\n\n    this[kCode] = options.code === undefined ? 0 : options.code;\n    this[kReason] = options.reason === undefined ? '' : options.reason;\n    this[kWasClean] = options.wasClean === undefined ? false : options.wasClean;\n  }\n\n  /**\n   * @type {Number}\n   */\n  get code() {\n    return this[kCode];\n  }\n\n  /**\n   * @type {String}\n   */\n  get reason() {\n    return this[kReason];\n  }\n\n  /**\n   * @type {Boolean}\n   */\n  get wasClean() {\n    return this[kWasClean];\n  }\n}\n\nObject.defineProperty(CloseEvent.prototype, 'code', { enumerable: true });\nObject.defineProperty(CloseEvent.prototype, 'reason', { enumerable: true });\nObject.defineProperty(CloseEvent.prototype, 'wasClean', { enumerable: true });\n\n/**\n * Class representing an error event.\n *\n * @extends Event\n */\nclass ErrorEvent extends Event {\n  /**\n   * Create a new `ErrorEvent`.\n   *\n   * @param {String} type The name of the event\n   * @param {Object} [options] A dictionary object that allows for setting\n   *     attributes via object members of the same name\n   * @param {*} [options.error=null] The error that generated this event\n   * @param {String} [options.message=''] The error message\n   */\n  constructor(type, options = {}) {\n    super(type);\n\n    this[kError] = options.error === undefined ? null : options.error;\n    this[kMessage] = options.message === undefined ? '' : options.message;\n  }\n\n  /**\n   * @type {*}\n   */\n  get error() {\n    return this[kError];\n  }\n\n  /**\n   * @type {String}\n   */\n  get message() {\n    return this[kMessage];\n  }\n}\n\nObject.defineProperty(ErrorEvent.prototype, 'error', { enumerable: true });\nObject.defineProperty(ErrorEvent.prototype, 'message', { enumerable: true });\n\n/**\n * Class representing a message event.\n *\n * @extends Event\n */\nclass MessageEvent extends Event {\n  /**\n   * Create a new `MessageEvent`.\n   *\n   * @param {String} type The name of the event\n   * @param {Object} [options] A dictionary object that allows for setting\n   *     attributes via object members of the same name\n   * @param {*} [options.data=null] The message content\n   */\n  constructor(type, options = {}) {\n    super(type);\n\n    this[kData] = options.data === undefined ? null : options.data;\n  }\n\n  /**\n   * @type {*}\n   */\n  get data() {\n    return this[kData];\n  }\n}\n\nObject.defineProperty(MessageEvent.prototype, 'data', { enumerable: true });\n\n/**\n * This provides methods for emulating the `EventTarget` interface. It's not\n * meant to be used directly.\n *\n * @mixin\n */\nconst EventTarget = {\n  /**\n   * Register an event listener.\n   *\n   * @param {String} type A string representing the event type to listen for\n   * @param {Function} listener The listener to add\n   * @param {Object} [options] An options object specifies characteristics about\n   *     the event listener\n   * @param {Boolean} [options.once=false] A `Boolean` indicating that the\n   *     listener should be invoked at most once after being added. If `true`,\n   *     the listener would be automatically removed when invoked.\n   * @public\n   */\n  addEventListener(type, listener, options = {}) {\n    let wrapper;\n\n    if (type === 'message') {\n      wrapper = function onMessage(data, isBinary) {\n        const event = new MessageEvent('message', {\n          data: isBinary ? data : data.toString()\n        });\n\n        event[kTarget] = this;\n        listener.call(this, event);\n      };\n    } else if (type === 'close') {\n      wrapper = function onClose(code, message) {\n        const event = new CloseEvent('close', {\n          code,\n          reason: message.toString(),\n          wasClean: this._closeFrameReceived && this._closeFrameSent\n        });\n\n        event[kTarget] = this;\n        listener.call(this, event);\n      };\n    } else if (type === 'error') {\n      wrapper = function onError(error) {\n        const event = new ErrorEvent('error', {\n          error,\n          message: error.message\n        });\n\n        event[kTarget] = this;\n        listener.call(this, event);\n      };\n    } else if (type === 'open') {\n      wrapper = function onOpen() {\n        const event = new Event('open');\n\n        event[kTarget] = this;\n        listener.call(this, event);\n      };\n    } else {\n      return;\n    }\n\n    wrapper[kForOnEventAttribute] = !!options[kForOnEventAttribute];\n    wrapper[kListener] = listener;\n\n    if (options.once) {\n      this.once(type, wrapper);\n    } else {\n      this.on(type, wrapper);\n    }\n  },\n\n  /**\n   * Remove an event listener.\n   *\n   * @param {String} type A string representing the event type to remove\n   * @param {Function} handler The listener to remove\n   * @public\n   */\n  removeEventListener(type, handler) {\n    for (const listener of this.listeners(type)) {\n      if (listener[kListener] === handler && !listener[kForOnEventAttribute]) {\n        this.removeListener(type, listener);\n        break;\n      }\n    }\n  }\n};\n\nmodule.exports = {\n  CloseEvent,\n  ErrorEvent,\n  Event,\n  EventTarget,\n  MessageEvent\n};\n","'use strict';\n\nconst { tokenChars } = require('./validation');\n\n/**\n * Adds an offer to the map of extension offers or a parameter to the map of\n * parameters.\n *\n * @param {Object} dest The map of extension offers or parameters\n * @param {String} name The extension or parameter name\n * @param {(Object|Boolean|String)} elem The extension parameters or the\n *     parameter value\n * @private\n */\nfunction push(dest, name, elem) {\n  if (dest[name] === undefined) dest[name] = [elem];\n  else dest[name].push(elem);\n}\n\n/**\n * Parses the `Sec-WebSocket-Extensions` header into an object.\n *\n * @param {String} header The field value of the header\n * @return {Object} The parsed object\n * @public\n */\nfunction parse(header) {\n  const offers = Object.create(null);\n  let params = Object.create(null);\n  let mustUnescape = false;\n  let isEscaping = false;\n  let inQuotes = false;\n  let extensionName;\n  let paramName;\n  let start = -1;\n  let code = -1;\n  let end = -1;\n  let i = 0;\n\n  for (; i < header.length; i++) {\n    code = header.charCodeAt(i);\n\n    if (extensionName === undefined) {\n      if (end === -1 && tokenChars[code] === 1) {\n        if (start === -1) start = i;\n      } else if (\n        i !== 0 &&\n        (code === 0x20 /* ' ' */ || code === 0x09) /* '\\t' */\n      ) {\n        if (end === -1 && start !== -1) end = i;\n      } else if (code === 0x3b /* ';' */ || code === 0x2c /* ',' */) {\n        if (start === -1) {\n          throw new SyntaxError(`Unexpected character at index ${i}`);\n        }\n\n        if (end === -1) end = i;\n        const name = header.slice(start, end);\n        if (code === 0x2c) {\n          push(offers, name, params);\n          params = Object.create(null);\n        } else {\n          extensionName = name;\n        }\n\n        start = end = -1;\n      } else {\n        throw new SyntaxError(`Unexpected character at index ${i}`);\n      }\n    } else if (paramName === undefined) {\n      if (end === -1 && tokenChars[code] === 1) {\n        if (start === -1) start = i;\n      } else if (code === 0x20 || code === 0x09) {\n        if (end === -1 && start !== -1) end = i;\n      } else if (code === 0x3b || code === 0x2c) {\n        if (start === -1) {\n          throw new SyntaxError(`Unexpected character at index ${i}`);\n        }\n\n        if (end === -1) end = i;\n        push(params, header.slice(start, end), true);\n        if (code === 0x2c) {\n          push(offers, extensionName, params);\n          params = Object.create(null);\n          extensionName = undefined;\n        }\n\n        start = end = -1;\n      } else if (code === 0x3d /* '=' */ && start !== -1 && end === -1) {\n        paramName = header.slice(start, i);\n        start = end = -1;\n      } else {\n        throw new SyntaxError(`Unexpected character at index ${i}`);\n      }\n    } else {\n      //\n      // The value of a quoted-string after unescaping must conform to the\n      // token ABNF, so only token characters are valid.\n      // Ref: https://tools.ietf.org/html/rfc6455#section-9.1\n      //\n      if (isEscaping) {\n        if (tokenChars[code] !== 1) {\n          throw new SyntaxError(`Unexpected character at index ${i}`);\n        }\n        if (start === -1) start = i;\n        else if (!mustUnescape) mustUnescape = true;\n        isEscaping = false;\n      } else if (inQuotes) {\n        if (tokenChars[code] === 1) {\n          if (start === -1) start = i;\n        } else if (code === 0x22 /* '\"' */ && start !== -1) {\n          inQuotes = false;\n          end = i;\n        } else if (code === 0x5c /* '\\' */) {\n          isEscaping = true;\n        } else {\n          throw new SyntaxError(`Unexpected character at index ${i}`);\n        }\n      } else if (code === 0x22 && header.charCodeAt(i - 1) === 0x3d) {\n        inQuotes = true;\n      } else if (end === -1 && tokenChars[code] === 1) {\n        if (start === -1) start = i;\n      } else if (start !== -1 && (code === 0x20 || code === 0x09)) {\n        if (end === -1) end = i;\n      } else if (code === 0x3b || code === 0x2c) {\n        if (start === -1) {\n          throw new SyntaxError(`Unexpected character at index ${i}`);\n        }\n\n        if (end === -1) end = i;\n        let value = header.slice(start, end);\n        if (mustUnescape) {\n          value = value.replace(/\\\\/g, '');\n          mustUnescape = false;\n        }\n        push(params, paramName, value);\n        if (code === 0x2c) {\n          push(offers, extensionName, params);\n          params = Object.create(null);\n          extensionName = undefined;\n        }\n\n        paramName = undefined;\n        start = end = -1;\n      } else {\n        throw new SyntaxError(`Unexpected character at index ${i}`);\n      }\n    }\n  }\n\n  if (start === -1 || inQuotes || code === 0x20 || code === 0x09) {\n    throw new SyntaxError('Unexpected end of input');\n  }\n\n  if (end === -1) end = i;\n  const token = header.slice(start, end);\n  if (extensionName === undefined) {\n    push(offers, token, params);\n  } else {\n    if (paramName === undefined) {\n      push(params, token, true);\n    } else if (mustUnescape) {\n      push(params, paramName, token.replace(/\\\\/g, ''));\n    } else {\n      push(params, paramName, token);\n    }\n    push(offers, extensionName, params);\n  }\n\n  return offers;\n}\n\n/**\n * Builds the `Sec-WebSocket-Extensions` header field value.\n *\n * @param {Object} extensions The map of extensions and parameters to format\n * @return {String} A string representing the given object\n * @public\n */\nfunction format(extensions) {\n  return Object.keys(extensions)\n    .map((extension) => {\n      let configurations = extensions[extension];\n      if (!Array.isArray(configurations)) configurations = [configurations];\n      return configurations\n        .map((params) => {\n          return [extension]\n            .concat(\n              Object.keys(params).map((k) => {\n                let values = params[k];\n                if (!Array.isArray(values)) values = [values];\n                return values\n                  .map((v) => (v === true ? k : `${k}=${v}`))\n                  .join('; ');\n              })\n            )\n            .join('; ');\n        })\n        .join(', ');\n    })\n    .join(', ');\n}\n\nmodule.exports = { format, parse };\n","'use strict';\n\nconst kDone = Symbol('kDone');\nconst kRun = Symbol('kRun');\n\n/**\n * A very simple job queue with adjustable concurrency. Adapted from\n * https://github.com/STRML/async-limiter\n */\nclass Limiter {\n  /**\n   * Creates a new `Limiter`.\n   *\n   * @param {Number} [concurrency=Infinity] The maximum number of jobs allowed\n   *     to run concurrently\n   */\n  constructor(concurrency) {\n    this[kDone] = () => {\n      this.pending--;\n      this[kRun]();\n    };\n    this.concurrency = concurrency || Infinity;\n    this.jobs = [];\n    this.pending = 0;\n  }\n\n  /**\n   * Adds a job to the queue.\n   *\n   * @param {Function} job The job to run\n   * @public\n   */\n  add(job) {\n    this.jobs.push(job);\n    this[kRun]();\n  }\n\n  /**\n   * Removes a job from the queue and runs it if possible.\n   *\n   * @private\n   */\n  [kRun]() {\n    if (this.pending === this.concurrency) return;\n\n    if (this.jobs.length) {\n      const job = this.jobs.shift();\n\n      this.pending++;\n      job(this[kDone]);\n    }\n  }\n}\n\nmodule.exports = Limiter;\n","'use strict';\n\nconst zlib = require('zlib');\n\nconst bufferUtil = require('./buffer-util');\nconst Limiter = require('./limiter');\nconst { kStatusCode } = require('./constants');\n\nconst TRAILER = Buffer.from([0x00, 0x00, 0xff, 0xff]);\nconst kPerMessageDeflate = Symbol('permessage-deflate');\nconst kTotalLength = Symbol('total-length');\nconst kCallback = Symbol('callback');\nconst kBuffers = Symbol('buffers');\nconst kError = Symbol('error');\n\n//\n// We limit zlib concurrency, which prevents severe memory fragmentation\n// as documented in https://github.com/nodejs/node/issues/8871#issuecomment-250915913\n// and https://github.com/websockets/ws/issues/1202\n//\n// Intentionally global; it's the global thread pool that's an issue.\n//\nlet zlibLimiter;\n\n/**\n * permessage-deflate implementation.\n */\nclass PerMessageDeflate {\n  /**\n   * Creates a PerMessageDeflate instance.\n   *\n   * @param {Object} [options] Configuration options\n   * @param {(Boolean|Number)} [options.clientMaxWindowBits] Advertise support\n   *     for, or request, a custom client window size\n   * @param {Boolean} [options.clientNoContextTakeover=false] Advertise/\n   *     acknowledge disabling of client context takeover\n   * @param {Number} [options.concurrencyLimit=10] The number of concurrent\n   *     calls to zlib\n   * @param {(Boolean|Number)} [options.serverMaxWindowBits] Request/confirm the\n   *     use of a custom server window size\n   * @param {Boolean} [options.serverNoContextTakeover=false] Request/accept\n   *     disabling of server context takeover\n   * @param {Number} [options.threshold=1024] Size (in bytes) below which\n   *     messages should not be compressed if context takeover is disabled\n   * @param {Object} [options.zlibDeflateOptions] Options to pass to zlib on\n   *     deflate\n   * @param {Object} [options.zlibInflateOptions] Options to pass to zlib on\n   *     inflate\n   * @param {Boolean} [isServer=false] Create the instance in either server or\n   *     client mode\n   * @param {Number} [maxPayload=0] The maximum allowed message length\n   */\n  constructor(options, isServer, maxPayload) {\n    this._maxPayload = maxPayload | 0;\n    this._options = options || {};\n    this._threshold =\n      this._options.threshold !== undefined ? this._options.threshold : 1024;\n    this._isServer = !!isServer;\n    this._deflate = null;\n    this._inflate = null;\n\n    this.params = null;\n\n    if (!zlibLimiter) {\n      const concurrency =\n        this._options.concurrencyLimit !== undefined\n          ? this._options.concurrencyLimit\n          : 10;\n      zlibLimiter = new Limiter(concurrency);\n    }\n  }\n\n  /**\n   * @type {String}\n   */\n  static get extensionName() {\n    return 'permessage-deflate';\n  }\n\n  /**\n   * Create an extension negotiation offer.\n   *\n   * @return {Object} Extension parameters\n   * @public\n   */\n  offer() {\n    const params = {};\n\n    if (this._options.serverNoContextTakeover) {\n      params.server_no_context_takeover = true;\n    }\n    if (this._options.clientNoContextTakeover) {\n      params.client_no_context_takeover = true;\n    }\n    if (this._options.serverMaxWindowBits) {\n      params.server_max_window_bits = this._options.serverMaxWindowBits;\n    }\n    if (this._options.clientMaxWindowBits) {\n      params.client_max_window_bits = this._options.clientMaxWindowBits;\n    } else if (this._options.clientMaxWindowBits == null) {\n      params.client_max_window_bits = true;\n    }\n\n    return params;\n  }\n\n  /**\n   * Accept an extension negotiation offer/response.\n   *\n   * @param {Array} configurations The extension negotiation offers/reponse\n   * @return {Object} Accepted configuration\n   * @public\n   */\n  accept(configurations) {\n    configurations = this.normalizeParams(configurations);\n\n    this.params = this._isServer\n      ? this.acceptAsServer(configurations)\n      : this.acceptAsClient(configurations);\n\n    return this.params;\n  }\n\n  /**\n   * Releases all resources used by the extension.\n   *\n   * @public\n   */\n  cleanup() {\n    if (this._inflate) {\n      this._inflate.close();\n      this._inflate = null;\n    }\n\n    if (this._deflate) {\n      const callback = this._deflate[kCallback];\n\n      this._deflate.close();\n      this._deflate = null;\n\n      if (callback) {\n        callback(\n          new Error(\n            'The deflate stream was closed while data was being processed'\n          )\n        );\n      }\n    }\n  }\n\n  /**\n   *  Accept an extension negotiation offer.\n   *\n   * @param {Array} offers The extension negotiation offers\n   * @return {Object} Accepted configuration\n   * @private\n   */\n  acceptAsServer(offers) {\n    const opts = this._options;\n    const accepted = offers.find((params) => {\n      if (\n        (opts.serverNoContextTakeover === false &&\n          params.server_no_context_takeover) ||\n        (params.server_max_window_bits &&\n          (opts.serverMaxWindowBits === false ||\n            (typeof opts.serverMaxWindowBits === 'number' &&\n              opts.serverMaxWindowBits > params.server_max_window_bits))) ||\n        (typeof opts.clientMaxWindowBits === 'number' &&\n          !params.client_max_window_bits)\n      ) {\n        return false;\n      }\n\n      return true;\n    });\n\n    if (!accepted) {\n      throw new Error('None of the extension offers can be accepted');\n    }\n\n    if (opts.serverNoContextTakeover) {\n      accepted.server_no_context_takeover = true;\n    }\n    if (opts.clientNoContextTakeover) {\n      accepted.client_no_context_takeover = true;\n    }\n    if (typeof opts.serverMaxWindowBits === 'number') {\n      accepted.server_max_window_bits = opts.serverMaxWindowBits;\n    }\n    if (typeof opts.clientMaxWindowBits === 'number') {\n      accepted.client_max_window_bits = opts.clientMaxWindowBits;\n    } else if (\n      accepted.client_max_window_bits === true ||\n      opts.clientMaxWindowBits === false\n    ) {\n      delete accepted.client_max_window_bits;\n    }\n\n    return accepted;\n  }\n\n  /**\n   * Accept the extension negotiation response.\n   *\n   * @param {Array} response The extension negotiation response\n   * @return {Object} Accepted configuration\n   * @private\n   */\n  acceptAsClient(response) {\n    const params = response[0];\n\n    if (\n      this._options.clientNoContextTakeover === false &&\n      params.client_no_context_takeover\n    ) {\n      throw new Error('Unexpected parameter \"client_no_context_takeover\"');\n    }\n\n    if (!params.client_max_window_bits) {\n      if (typeof this._options.clientMaxWindowBits === 'number') {\n        params.client_max_window_bits = this._options.clientMaxWindowBits;\n      }\n    } else if (\n      this._options.clientMaxWindowBits === false ||\n      (typeof this._options.clientMaxWindowBits === 'number' &&\n        params.client_max_window_bits > this._options.clientMaxWindowBits)\n    ) {\n      throw new Error(\n        'Unexpected or invalid parameter \"client_max_window_bits\"'\n      );\n    }\n\n    return params;\n  }\n\n  /**\n   * Normalize parameters.\n   *\n   * @param {Array} configurations The extension negotiation offers/reponse\n   * @return {Array} The offers/response with normalized parameters\n   * @private\n   */\n  normalizeParams(configurations) {\n    configurations.forEach((params) => {\n      Object.keys(params).forEach((key) => {\n        let value = params[key];\n\n        if (value.length > 1) {\n          throw new Error(`Parameter \"${key}\" must have only a single value`);\n        }\n\n        value = value[0];\n\n        if (key === 'client_max_window_bits') {\n          if (value !== true) {\n            const num = +value;\n            if (!Number.isInteger(num) || num < 8 || num > 15) {\n              throw new TypeError(\n                `Invalid value for parameter \"${key}\": ${value}`\n              );\n            }\n            value = num;\n          } else if (!this._isServer) {\n            throw new TypeError(\n              `Invalid value for parameter \"${key}\": ${value}`\n            );\n          }\n        } else if (key === 'server_max_window_bits') {\n          const num = +value;\n          if (!Number.isInteger(num) || num < 8 || num > 15) {\n            throw new TypeError(\n              `Invalid value for parameter \"${key}\": ${value}`\n            );\n          }\n          value = num;\n        } else if (\n          key === 'client_no_context_takeover' ||\n          key === 'server_no_context_takeover'\n        ) {\n          if (value !== true) {\n            throw new TypeError(\n              `Invalid value for parameter \"${key}\": ${value}`\n            );\n          }\n        } else {\n          throw new Error(`Unknown parameter \"${key}\"`);\n        }\n\n        params[key] = value;\n      });\n    });\n\n    return configurations;\n  }\n\n  /**\n   * Decompress data. Concurrency limited.\n   *\n   * @param {Buffer} data Compressed data\n   * @param {Boolean} fin Specifies whether or not this is the last fragment\n   * @param {Function} callback Callback\n   * @public\n   */\n  decompress(data, fin, callback) {\n    zlibLimiter.add((done) => {\n      this._decompress(data, fin, (err, result) => {\n        done();\n        callback(err, result);\n      });\n    });\n  }\n\n  /**\n   * Compress data. Concurrency limited.\n   *\n   * @param {(Buffer|String)} data Data to compress\n   * @param {Boolean} fin Specifies whether or not this is the last fragment\n   * @param {Function} callback Callback\n   * @public\n   */\n  compress(data, fin, callback) {\n    zlibLimiter.add((done) => {\n      this._compress(data, fin, (err, result) => {\n        done();\n        callback(err, result);\n      });\n    });\n  }\n\n  /**\n   * Decompress data.\n   *\n   * @param {Buffer} data Compressed data\n   * @param {Boolean} fin Specifies whether or not this is the last fragment\n   * @param {Function} callback Callback\n   * @private\n   */\n  _decompress(data, fin, callback) {\n    const endpoint = this._isServer ? 'client' : 'server';\n\n    if (!this._inflate) {\n      const key = `${endpoint}_max_window_bits`;\n      const windowBits =\n        typeof this.params[key] !== 'number'\n          ? zlib.Z_DEFAULT_WINDOWBITS\n          : this.params[key];\n\n      this._inflate = zlib.createInflateRaw({\n        ...this._options.zlibInflateOptions,\n        windowBits\n      });\n      this._inflate[kPerMessageDeflate] = this;\n      this._inflate[kTotalLength] = 0;\n      this._inflate[kBuffers] = [];\n      this._inflate.on('error', inflateOnError);\n      this._inflate.on('data', inflateOnData);\n    }\n\n    this._inflate[kCallback] = callback;\n\n    this._inflate.write(data);\n    if (fin) this._inflate.write(TRAILER);\n\n    this._inflate.flush(() => {\n      const err = this._inflate[kError];\n\n      if (err) {\n        this._inflate.close();\n        this._inflate = null;\n        callback(err);\n        return;\n      }\n\n      const data = bufferUtil.concat(\n        this._inflate[kBuffers],\n        this._inflate[kTotalLength]\n      );\n\n      if (this._inflate._readableState.endEmitted) {\n        this._inflate.close();\n        this._inflate = null;\n      } else {\n        this._inflate[kTotalLength] = 0;\n        this._inflate[kBuffers] = [];\n\n        if (fin && this.params[`${endpoint}_no_context_takeover`]) {\n          this._inflate.reset();\n        }\n      }\n\n      callback(null, data);\n    });\n  }\n\n  /**\n   * Compress data.\n   *\n   * @param {(Buffer|String)} data Data to compress\n   * @param {Boolean} fin Specifies whether or not this is the last fragment\n   * @param {Function} callback Callback\n   * @private\n   */\n  _compress(data, fin, callback) {\n    const endpoint = this._isServer ? 'server' : 'client';\n\n    if (!this._deflate) {\n      const key = `${endpoint}_max_window_bits`;\n      const windowBits =\n        typeof this.params[key] !== 'number'\n          ? zlib.Z_DEFAULT_WINDOWBITS\n          : this.params[key];\n\n      this._deflate = zlib.createDeflateRaw({\n        ...this._options.zlibDeflateOptions,\n        windowBits\n      });\n\n      this._deflate[kTotalLength] = 0;\n      this._deflate[kBuffers] = [];\n\n      this._deflate.on('data', deflateOnData);\n    }\n\n    this._deflate[kCallback] = callback;\n\n    this._deflate.write(data);\n    this._deflate.flush(zlib.Z_SYNC_FLUSH, () => {\n      if (!this._deflate) {\n        //\n        // The deflate stream was closed while data was being processed.\n        //\n        return;\n      }\n\n      let data = bufferUtil.concat(\n        this._deflate[kBuffers],\n        this._deflate[kTotalLength]\n      );\n\n      if (fin) data = data.slice(0, data.length - 4);\n\n      //\n      // Ensure that the callback will not be called again in\n      // `PerMessageDeflate#cleanup()`.\n      //\n      this._deflate[kCallback] = null;\n\n      this._deflate[kTotalLength] = 0;\n      this._deflate[kBuffers] = [];\n\n      if (fin && this.params[`${endpoint}_no_context_takeover`]) {\n        this._deflate.reset();\n      }\n\n      callback(null, data);\n    });\n  }\n}\n\nmodule.exports = PerMessageDeflate;\n\n/**\n * The listener of the `zlib.DeflateRaw` stream `'data'` event.\n *\n * @param {Buffer} chunk A chunk of data\n * @private\n */\nfunction deflateOnData(chunk) {\n  this[kBuffers].push(chunk);\n  this[kTotalLength] += chunk.length;\n}\n\n/**\n * The listener of the `zlib.InflateRaw` stream `'data'` event.\n *\n * @param {Buffer} chunk A chunk of data\n * @private\n */\nfunction inflateOnData(chunk) {\n  this[kTotalLength] += chunk.length;\n\n  if (\n    this[kPerMessageDeflate]._maxPayload < 1 ||\n    this[kTotalLength] <= this[kPerMessageDeflate]._maxPayload\n  ) {\n    this[kBuffers].push(chunk);\n    return;\n  }\n\n  this[kError] = new RangeError('Max payload size exceeded');\n  this[kError].code = 'WS_ERR_UNSUPPORTED_MESSAGE_LENGTH';\n  this[kError][kStatusCode] = 1009;\n  this.removeListener('data', inflateOnData);\n  this.reset();\n}\n\n/**\n * The listener of the `zlib.InflateRaw` stream `'error'` event.\n *\n * @param {Error} err The emitted error\n * @private\n */\nfunction inflateOnError(err) {\n  //\n  // There is no need to call `Zlib#close()` as the handle is automatically\n  // closed when an error is emitted.\n  //\n  this[kPerMessageDeflate]._inflate = null;\n  err[kStatusCode] = 1007;\n  this[kCallback](err);\n}\n","'use strict';\n\nconst { Writable } = require('stream');\n\nconst PerMessageDeflate = require('./permessage-deflate');\nconst {\n  BINARY_TYPES,\n  EMPTY_BUFFER,\n  kStatusCode,\n  kWebSocket\n} = require('./constants');\nconst { concat, toArrayBuffer, unmask } = require('./buffer-util');\nconst { isValidStatusCode, isValidUTF8 } = require('./validation');\n\nconst GET_INFO = 0;\nconst GET_PAYLOAD_LENGTH_16 = 1;\nconst GET_PAYLOAD_LENGTH_64 = 2;\nconst GET_MASK = 3;\nconst GET_DATA = 4;\nconst INFLATING = 5;\n\n/**\n * HyBi Receiver implementation.\n *\n * @extends Writable\n */\nclass Receiver extends Writable {\n  /**\n   * Creates a Receiver instance.\n   *\n   * @param {Object} [options] Options object\n   * @param {String} [options.binaryType=nodebuffer] The type for binary data\n   * @param {Object} [options.extensions] An object containing the negotiated\n   *     extensions\n   * @param {Boolean} [options.isServer=false] Specifies whether to operate in\n   *     client or server mode\n   * @param {Number} [options.maxPayload=0] The maximum allowed message length\n   * @param {Boolean} [options.skipUTF8Validation=false] Specifies whether or\n   *     not to skip UTF-8 validation for text and close messages\n   */\n  constructor(options = {}) {\n    super();\n\n    this._binaryType = options.binaryType || BINARY_TYPES[0];\n    this._extensions = options.extensions || {};\n    this._isServer = !!options.isServer;\n    this._maxPayload = options.maxPayload | 0;\n    this._skipUTF8Validation = !!options.skipUTF8Validation;\n    this[kWebSocket] = undefined;\n\n    this._bufferedBytes = 0;\n    this._buffers = [];\n\n    this._compressed = false;\n    this._payloadLength = 0;\n    this._mask = undefined;\n    this._fragmented = 0;\n    this._masked = false;\n    this._fin = false;\n    this._opcode = 0;\n\n    this._totalPayloadLength = 0;\n    this._messageLength = 0;\n    this._fragments = [];\n\n    this._state = GET_INFO;\n    this._loop = false;\n  }\n\n  /**\n   * Implements `Writable.prototype._write()`.\n   *\n   * @param {Buffer} chunk The chunk of data to write\n   * @param {String} encoding The character encoding of `chunk`\n   * @param {Function} cb Callback\n   * @private\n   */\n  _write(chunk, encoding, cb) {\n    if (this._opcode === 0x08 && this._state == GET_INFO) return cb();\n\n    this._bufferedBytes += chunk.length;\n    this._buffers.push(chunk);\n    this.startLoop(cb);\n  }\n\n  /**\n   * Consumes `n` bytes from the buffered data.\n   *\n   * @param {Number} n The number of bytes to consume\n   * @return {Buffer} The consumed bytes\n   * @private\n   */\n  consume(n) {\n    this._bufferedBytes -= n;\n\n    if (n === this._buffers[0].length) return this._buffers.shift();\n\n    if (n < this._buffers[0].length) {\n      const buf = this._buffers[0];\n      this._buffers[0] = buf.slice(n);\n      return buf.slice(0, n);\n    }\n\n    const dst = Buffer.allocUnsafe(n);\n\n    do {\n      const buf = this._buffers[0];\n      const offset = dst.length - n;\n\n      if (n >= buf.length) {\n        dst.set(this._buffers.shift(), offset);\n      } else {\n        dst.set(new Uint8Array(buf.buffer, buf.byteOffset, n), offset);\n        this._buffers[0] = buf.slice(n);\n      }\n\n      n -= buf.length;\n    } while (n > 0);\n\n    return dst;\n  }\n\n  /**\n   * Starts the parsing loop.\n   *\n   * @param {Function} cb Callback\n   * @private\n   */\n  startLoop(cb) {\n    let err;\n    this._loop = true;\n\n    do {\n      switch (this._state) {\n        case GET_INFO:\n          err = this.getInfo();\n          break;\n        case GET_PAYLOAD_LENGTH_16:\n          err = this.getPayloadLength16();\n          break;\n        case GET_PAYLOAD_LENGTH_64:\n          err = this.getPayloadLength64();\n          break;\n        case GET_MASK:\n          this.getMask();\n          break;\n        case GET_DATA:\n          err = this.getData(cb);\n          break;\n        default:\n          // `INFLATING`\n          this._loop = false;\n          return;\n      }\n    } while (this._loop);\n\n    cb(err);\n  }\n\n  /**\n   * Reads the first two bytes of a frame.\n   *\n   * @return {(RangeError|undefined)} A possible error\n   * @private\n   */\n  getInfo() {\n    if (this._bufferedBytes < 2) {\n      this._loop = false;\n      return;\n    }\n\n    const buf = this.consume(2);\n\n    if ((buf[0] & 0x30) !== 0x00) {\n      this._loop = false;\n      return error(\n        RangeError,\n        'RSV2 and RSV3 must be clear',\n        true,\n        1002,\n        'WS_ERR_UNEXPECTED_RSV_2_3'\n      );\n    }\n\n    const compressed = (buf[0] & 0x40) === 0x40;\n\n    if (compressed && !this._extensions[PerMessageDeflate.extensionName]) {\n      this._loop = false;\n      return error(\n        RangeError,\n        'RSV1 must be clear',\n        true,\n        1002,\n        'WS_ERR_UNEXPECTED_RSV_1'\n      );\n    }\n\n    this._fin = (buf[0] & 0x80) === 0x80;\n    this._opcode = buf[0] & 0x0f;\n    this._payloadLength = buf[1] & 0x7f;\n\n    if (this._opcode === 0x00) {\n      if (compressed) {\n        this._loop = false;\n        return error(\n          RangeError,\n          'RSV1 must be clear',\n          true,\n          1002,\n          'WS_ERR_UNEXPECTED_RSV_1'\n        );\n      }\n\n      if (!this._fragmented) {\n        this._loop = false;\n        return error(\n          RangeError,\n          'invalid opcode 0',\n          true,\n          1002,\n          'WS_ERR_INVALID_OPCODE'\n        );\n      }\n\n      this._opcode = this._fragmented;\n    } else if (this._opcode === 0x01 || this._opcode === 0x02) {\n      if (this._fragmented) {\n        this._loop = false;\n        return error(\n          RangeError,\n          `invalid opcode ${this._opcode}`,\n          true,\n          1002,\n          'WS_ERR_INVALID_OPCODE'\n        );\n      }\n\n      this._compressed = compressed;\n    } else if (this._opcode > 0x07 && this._opcode < 0x0b) {\n      if (!this._fin) {\n        this._loop = false;\n        return error(\n          RangeError,\n          'FIN must be set',\n          true,\n          1002,\n          'WS_ERR_EXPECTED_FIN'\n        );\n      }\n\n      if (compressed) {\n        this._loop = false;\n        return error(\n          RangeError,\n          'RSV1 must be clear',\n          true,\n          1002,\n          'WS_ERR_UNEXPECTED_RSV_1'\n        );\n      }\n\n      if (this._payloadLength > 0x7d) {\n        this._loop = false;\n        return error(\n          RangeError,\n          `invalid payload length ${this._payloadLength}`,\n          true,\n          1002,\n          'WS_ERR_INVALID_CONTROL_PAYLOAD_LENGTH'\n        );\n      }\n    } else {\n      this._loop = false;\n      return error(\n        RangeError,\n        `invalid opcode ${this._opcode}`,\n        true,\n        1002,\n        'WS_ERR_INVALID_OPCODE'\n      );\n    }\n\n    if (!this._fin && !this._fragmented) this._fragmented = this._opcode;\n    this._masked = (buf[1] & 0x80) === 0x80;\n\n    if (this._isServer) {\n      if (!this._masked) {\n        this._loop = false;\n        return error(\n          RangeError,\n          'MASK must be set',\n          true,\n          1002,\n          'WS_ERR_EXPECTED_MASK'\n        );\n      }\n    } else if (this._masked) {\n      this._loop = false;\n      return error(\n        RangeError,\n        'MASK must be clear',\n        true,\n        1002,\n        'WS_ERR_UNEXPECTED_MASK'\n      );\n    }\n\n    if (this._payloadLength === 126) this._state = GET_PAYLOAD_LENGTH_16;\n    else if (this._payloadLength === 127) this._state = GET_PAYLOAD_LENGTH_64;\n    else return this.haveLength();\n  }\n\n  /**\n   * Gets extended payload length (7+16).\n   *\n   * @return {(RangeError|undefined)} A possible error\n   * @private\n   */\n  getPayloadLength16() {\n    if (this._bufferedBytes < 2) {\n      this._loop = false;\n      return;\n    }\n\n    this._payloadLength = this.consume(2).readUInt16BE(0);\n    return this.haveLength();\n  }\n\n  /**\n   * Gets extended payload length (7+64).\n   *\n   * @return {(RangeError|undefined)} A possible error\n   * @private\n   */\n  getPayloadLength64() {\n    if (this._bufferedBytes < 8) {\n      this._loop = false;\n      return;\n    }\n\n    const buf = this.consume(8);\n    const num = buf.readUInt32BE(0);\n\n    //\n    // The maximum safe integer in JavaScript is 2^53 - 1. An error is returned\n    // if payload length is greater than this number.\n    //\n    if (num > Math.pow(2, 53 - 32) - 1) {\n      this._loop = false;\n      return error(\n        RangeError,\n        'Unsupported WebSocket frame: payload length > 2^53 - 1',\n        false,\n        1009,\n        'WS_ERR_UNSUPPORTED_DATA_PAYLOAD_LENGTH'\n      );\n    }\n\n    this._payloadLength = num * Math.pow(2, 32) + buf.readUInt32BE(4);\n    return this.haveLength();\n  }\n\n  /**\n   * Payload length has been read.\n   *\n   * @return {(RangeError|undefined)} A possible error\n   * @private\n   */\n  haveLength() {\n    if (this._payloadLength && this._opcode < 0x08) {\n      this._totalPayloadLength += this._payloadLength;\n      if (this._totalPayloadLength > this._maxPayload && this._maxPayload > 0) {\n        this._loop = false;\n        return error(\n          RangeError,\n          'Max payload size exceeded',\n          false,\n          1009,\n          'WS_ERR_UNSUPPORTED_MESSAGE_LENGTH'\n        );\n      }\n    }\n\n    if (this._masked) this._state = GET_MASK;\n    else this._state = GET_DATA;\n  }\n\n  /**\n   * Reads mask bytes.\n   *\n   * @private\n   */\n  getMask() {\n    if (this._bufferedBytes < 4) {\n      this._loop = false;\n      return;\n    }\n\n    this._mask = this.consume(4);\n    this._state = GET_DATA;\n  }\n\n  /**\n   * Reads data bytes.\n   *\n   * @param {Function} cb Callback\n   * @return {(Error|RangeError|undefined)} A possible error\n   * @private\n   */\n  getData(cb) {\n    let data = EMPTY_BUFFER;\n\n    if (this._payloadLength) {\n      if (this._bufferedBytes < this._payloadLength) {\n        this._loop = false;\n        return;\n      }\n\n      data = this.consume(this._payloadLength);\n\n      if (\n        this._masked &&\n        (this._mask[0] | this._mask[1] | this._mask[2] | this._mask[3]) !== 0\n      ) {\n        unmask(data, this._mask);\n      }\n    }\n\n    if (this._opcode > 0x07) return this.controlMessage(data);\n\n    if (this._compressed) {\n      this._state = INFLATING;\n      this.decompress(data, cb);\n      return;\n    }\n\n    if (data.length) {\n      //\n      // This message is not compressed so its length is the sum of the payload\n      // length of all fragments.\n      //\n      this._messageLength = this._totalPayloadLength;\n      this._fragments.push(data);\n    }\n\n    return this.dataMessage();\n  }\n\n  /**\n   * Decompresses data.\n   *\n   * @param {Buffer} data Compressed data\n   * @param {Function} cb Callback\n   * @private\n   */\n  decompress(data, cb) {\n    const perMessageDeflate = this._extensions[PerMessageDeflate.extensionName];\n\n    perMessageDeflate.decompress(data, this._fin, (err, buf) => {\n      if (err) return cb(err);\n\n      if (buf.length) {\n        this._messageLength += buf.length;\n        if (this._messageLength > this._maxPayload && this._maxPayload > 0) {\n          return cb(\n            error(\n              RangeError,\n              'Max payload size exceeded',\n              false,\n              1009,\n              'WS_ERR_UNSUPPORTED_MESSAGE_LENGTH'\n            )\n          );\n        }\n\n        this._fragments.push(buf);\n      }\n\n      const er = this.dataMessage();\n      if (er) return cb(er);\n\n      this.startLoop(cb);\n    });\n  }\n\n  /**\n   * Handles a data message.\n   *\n   * @return {(Error|undefined)} A possible error\n   * @private\n   */\n  dataMessage() {\n    if (this._fin) {\n      const messageLength = this._messageLength;\n      const fragments = this._fragments;\n\n      this._totalPayloadLength = 0;\n      this._messageLength = 0;\n      this._fragmented = 0;\n      this._fragments = [];\n\n      if (this._opcode === 2) {\n        let data;\n\n        if (this._binaryType === 'nodebuffer') {\n          data = concat(fragments, messageLength);\n        } else if (this._binaryType === 'arraybuffer') {\n          data = toArrayBuffer(concat(fragments, messageLength));\n        } else {\n          data = fragments;\n        }\n\n        this.emit('message', data, true);\n      } else {\n        const buf = concat(fragments, messageLength);\n\n        if (!this._skipUTF8Validation && !isValidUTF8(buf)) {\n          this._loop = false;\n          return error(\n            Error,\n            'invalid UTF-8 sequence',\n            true,\n            1007,\n            'WS_ERR_INVALID_UTF8'\n          );\n        }\n\n        this.emit('message', buf, false);\n      }\n    }\n\n    this._state = GET_INFO;\n  }\n\n  /**\n   * Handles a control message.\n   *\n   * @param {Buffer} data Data to handle\n   * @return {(Error|RangeError|undefined)} A possible error\n   * @private\n   */\n  controlMessage(data) {\n    if (this._opcode === 0x08) {\n      this._loop = false;\n\n      if (data.length === 0) {\n        this.emit('conclude', 1005, EMPTY_BUFFER);\n        this.end();\n      } else if (data.length === 1) {\n        return error(\n          RangeError,\n          'invalid payload length 1',\n          true,\n          1002,\n          'WS_ERR_INVALID_CONTROL_PAYLOAD_LENGTH'\n        );\n      } else {\n        const code = data.readUInt16BE(0);\n\n        if (!isValidStatusCode(code)) {\n          return error(\n            RangeError,\n            `invalid status code ${code}`,\n            true,\n            1002,\n            'WS_ERR_INVALID_CLOSE_CODE'\n          );\n        }\n\n        const buf = data.slice(2);\n\n        if (!this._skipUTF8Validation && !isValidUTF8(buf)) {\n          return error(\n            Error,\n            'invalid UTF-8 sequence',\n            true,\n            1007,\n            'WS_ERR_INVALID_UTF8'\n          );\n        }\n\n        this.emit('conclude', code, buf);\n        this.end();\n      }\n    } else if (this._opcode === 0x09) {\n      this.emit('ping', data);\n    } else {\n      this.emit('pong', data);\n    }\n\n    this._state = GET_INFO;\n  }\n}\n\nmodule.exports = Receiver;\n\n/**\n * Builds an error object.\n *\n * @param {function(new:Error|RangeError)} ErrorCtor The error constructor\n * @param {String} message The error message\n * @param {Boolean} prefix Specifies whether or not to add a default prefix to\n *     `message`\n * @param {Number} statusCode The status code\n * @param {String} errorCode The exposed error code\n * @return {(Error|RangeError)} The error\n * @private\n */\nfunction error(ErrorCtor, message, prefix, statusCode, errorCode) {\n  const err = new ErrorCtor(\n    prefix ? `Invalid WebSocket frame: ${message}` : message\n  );\n\n  Error.captureStackTrace(err, error);\n  err.code = errorCode;\n  err[kStatusCode] = statusCode;\n  return err;\n}\n","/* eslint no-unused-vars: [\"error\", { \"varsIgnorePattern\": \"^net|tls$\" }] */\n\n'use strict';\n\nconst net = require('net');\nconst tls = require('tls');\nconst { randomFillSync } = require('crypto');\n\nconst PerMessageDeflate = require('./permessage-deflate');\nconst { EMPTY_BUFFER } = require('./constants');\nconst { isValidStatusCode } = require('./validation');\nconst { mask: applyMask, toBuffer } = require('./buffer-util');\n\nconst kByteLength = Symbol('kByteLength');\nconst maskBuffer = Buffer.alloc(4);\n\n/**\n * HyBi Sender implementation.\n */\nclass Sender {\n  /**\n   * Creates a Sender instance.\n   *\n   * @param {(net.Socket|tls.Socket)} socket The connection socket\n   * @param {Object} [extensions] An object containing the negotiated extensions\n   * @param {Function} [generateMask] The function used to generate the masking\n   *     key\n   */\n  constructor(socket, extensions, generateMask) {\n    this._extensions = extensions || {};\n\n    if (generateMask) {\n      this._generateMask = generateMask;\n      this._maskBuffer = Buffer.alloc(4);\n    }\n\n    this._socket = socket;\n\n    this._firstFragment = true;\n    this._compress = false;\n\n    this._bufferedBytes = 0;\n    this._deflating = false;\n    this._queue = [];\n  }\n\n  /**\n   * Frames a piece of data according to the HyBi WebSocket protocol.\n   *\n   * @param {(Buffer|String)} data The data to frame\n   * @param {Object} options Options object\n   * @param {Boolean} [options.fin=false] Specifies whether or not to set the\n   *     FIN bit\n   * @param {Function} [options.generateMask] The function used to generate the\n   *     masking key\n   * @param {Boolean} [options.mask=false] Specifies whether or not to mask\n   *     `data`\n   * @param {Buffer} [options.maskBuffer] The buffer used to store the masking\n   *     key\n   * @param {Number} options.opcode The opcode\n   * @param {Boolean} [options.readOnly=false] Specifies whether `data` can be\n   *     modified\n   * @param {Boolean} [options.rsv1=false] Specifies whether or not to set the\n   *     RSV1 bit\n   * @return {(Buffer|String)[]} The framed data\n   * @public\n   */\n  static frame(data, options) {\n    let mask;\n    let merge = false;\n    let offset = 2;\n    let skipMasking = false;\n\n    if (options.mask) {\n      mask = options.maskBuffer || maskBuffer;\n\n      if (options.generateMask) {\n        options.generateMask(mask);\n      } else {\n        randomFillSync(mask, 0, 4);\n      }\n\n      skipMasking = (mask[0] | mask[1] | mask[2] | mask[3]) === 0;\n      offset = 6;\n    }\n\n    let dataLength;\n\n    if (typeof data === 'string') {\n      if (\n        (!options.mask || skipMasking) &&\n        options[kByteLength] !== undefined\n      ) {\n        dataLength = options[kByteLength];\n      } else {\n        data = Buffer.from(data);\n        dataLength = data.length;\n      }\n    } else {\n      dataLength = data.length;\n      merge = options.mask && options.readOnly && !skipMasking;\n    }\n\n    let payloadLength = dataLength;\n\n    if (dataLength >= 65536) {\n      offset += 8;\n      payloadLength = 127;\n    } else if (dataLength > 125) {\n      offset += 2;\n      payloadLength = 126;\n    }\n\n    const target = Buffer.allocUnsafe(merge ? dataLength + offset : offset);\n\n    target[0] = options.fin ? options.opcode | 0x80 : options.opcode;\n    if (options.rsv1) target[0] |= 0x40;\n\n    target[1] = payloadLength;\n\n    if (payloadLength === 126) {\n      target.writeUInt16BE(dataLength, 2);\n    } else if (payloadLength === 127) {\n      target[2] = target[3] = 0;\n      target.writeUIntBE(dataLength, 4, 6);\n    }\n\n    if (!options.mask) return [target, data];\n\n    target[1] |= 0x80;\n    target[offset - 4] = mask[0];\n    target[offset - 3] = mask[1];\n    target[offset - 2] = mask[2];\n    target[offset - 1] = mask[3];\n\n    if (skipMasking) return [target, data];\n\n    if (merge) {\n      applyMask(data, mask, target, offset, dataLength);\n      return [target];\n    }\n\n    applyMask(data, mask, data, 0, dataLength);\n    return [target, data];\n  }\n\n  /**\n   * Sends a close message to the other peer.\n   *\n   * @param {Number} [code] The status code component of the body\n   * @param {(String|Buffer)} [data] The message component of the body\n   * @param {Boolean} [mask=false] Specifies whether or not to mask the message\n   * @param {Function} [cb] Callback\n   * @public\n   */\n  close(code, data, mask, cb) {\n    let buf;\n\n    if (code === undefined) {\n      buf = EMPTY_BUFFER;\n    } else if (typeof code !== 'number' || !isValidStatusCode(code)) {\n      throw new TypeError('First argument must be a valid error code number');\n    } else if (data === undefined || !data.length) {\n      buf = Buffer.allocUnsafe(2);\n      buf.writeUInt16BE(code, 0);\n    } else {\n      const length = Buffer.byteLength(data);\n\n      if (length > 123) {\n        throw new RangeError('The message must not be greater than 123 bytes');\n      }\n\n      buf = Buffer.allocUnsafe(2 + length);\n      buf.writeUInt16BE(code, 0);\n\n      if (typeof data === 'string') {\n        buf.write(data, 2);\n      } else {\n        buf.set(data, 2);\n      }\n    }\n\n    const options = {\n      [kByteLength]: buf.length,\n      fin: true,\n      generateMask: this._generateMask,\n      mask,\n      maskBuffer: this._maskBuffer,\n      opcode: 0x08,\n      readOnly: false,\n      rsv1: false\n    };\n\n    if (this._deflating) {\n      this.enqueue([this.dispatch, buf, false, options, cb]);\n    } else {\n      this.sendFrame(Sender.frame(buf, options), cb);\n    }\n  }\n\n  /**\n   * Sends a ping message to the other peer.\n   *\n   * @param {*} data The message to send\n   * @param {Boolean} [mask=false] Specifies whether or not to mask `data`\n   * @param {Function} [cb] Callback\n   * @public\n   */\n  ping(data, mask, cb) {\n    let byteLength;\n    let readOnly;\n\n    if (typeof data === 'string') {\n      byteLength = Buffer.byteLength(data);\n      readOnly = false;\n    } else {\n      data = toBuffer(data);\n      byteLength = data.length;\n      readOnly = toBuffer.readOnly;\n    }\n\n    if (byteLength > 125) {\n      throw new RangeError('The data size must not be greater than 125 bytes');\n    }\n\n    const options = {\n      [kByteLength]: byteLength,\n      fin: true,\n      generateMask: this._generateMask,\n      mask,\n      maskBuffer: this._maskBuffer,\n      opcode: 0x09,\n      readOnly,\n      rsv1: false\n    };\n\n    if (this._deflating) {\n      this.enqueue([this.dispatch, data, false, options, cb]);\n    } else {\n      this.sendFrame(Sender.frame(data, options), cb);\n    }\n  }\n\n  /**\n   * Sends a pong message to the other peer.\n   *\n   * @param {*} data The message to send\n   * @param {Boolean} [mask=false] Specifies whether or not to mask `data`\n   * @param {Function} [cb] Callback\n   * @public\n   */\n  pong(data, mask, cb) {\n    let byteLength;\n    let readOnly;\n\n    if (typeof data === 'string') {\n      byteLength = Buffer.byteLength(data);\n      readOnly = false;\n    } else {\n      data = toBuffer(data);\n      byteLength = data.length;\n      readOnly = toBuffer.readOnly;\n    }\n\n    if (byteLength > 125) {\n      throw new RangeError('The data size must not be greater than 125 bytes');\n    }\n\n    const options = {\n      [kByteLength]: byteLength,\n      fin: true,\n      generateMask: this._generateMask,\n      mask,\n      maskBuffer: this._maskBuffer,\n      opcode: 0x0a,\n      readOnly,\n      rsv1: false\n    };\n\n    if (this._deflating) {\n      this.enqueue([this.dispatch, data, false, options, cb]);\n    } else {\n      this.sendFrame(Sender.frame(data, options), cb);\n    }\n  }\n\n  /**\n   * Sends a data message to the other peer.\n   *\n   * @param {*} data The message to send\n   * @param {Object} options Options object\n   * @param {Boolean} [options.binary=false] Specifies whether `data` is binary\n   *     or text\n   * @param {Boolean} [options.compress=false] Specifies whether or not to\n   *     compress `data`\n   * @param {Boolean} [options.fin=false] Specifies whether the fragment is the\n   *     last one\n   * @param {Boolean} [options.mask=false] Specifies whether or not to mask\n   *     `data`\n   * @param {Function} [cb] Callback\n   * @public\n   */\n  send(data, options, cb) {\n    const perMessageDeflate = this._extensions[PerMessageDeflate.extensionName];\n    let opcode = options.binary ? 2 : 1;\n    let rsv1 = options.compress;\n\n    let byteLength;\n    let readOnly;\n\n    if (typeof data === 'string') {\n      byteLength = Buffer.byteLength(data);\n      readOnly = false;\n    } else {\n      data = toBuffer(data);\n      byteLength = data.length;\n      readOnly = toBuffer.readOnly;\n    }\n\n    if (this._firstFragment) {\n      this._firstFragment = false;\n      if (\n        rsv1 &&\n        perMessageDeflate &&\n        perMessageDeflate.params[\n          perMessageDeflate._isServer\n            ? 'server_no_context_takeover'\n            : 'client_no_context_takeover'\n        ]\n      ) {\n        rsv1 = byteLength >= perMessageDeflate._threshold;\n      }\n      this._compress = rsv1;\n    } else {\n      rsv1 = false;\n      opcode = 0;\n    }\n\n    if (options.fin) this._firstFragment = true;\n\n    if (perMessageDeflate) {\n      const opts = {\n        [kByteLength]: byteLength,\n        fin: options.fin,\n        generateMask: this._generateMask,\n        mask: options.mask,\n        maskBuffer: this._maskBuffer,\n        opcode,\n        readOnly,\n        rsv1\n      };\n\n      if (this._deflating) {\n        this.enqueue([this.dispatch, data, this._compress, opts, cb]);\n      } else {\n        this.dispatch(data, this._compress, opts, cb);\n      }\n    } else {\n      this.sendFrame(\n        Sender.frame(data, {\n          [kByteLength]: byteLength,\n          fin: options.fin,\n          generateMask: this._generateMask,\n          mask: options.mask,\n          maskBuffer: this._maskBuffer,\n          opcode,\n          readOnly,\n          rsv1: false\n        }),\n        cb\n      );\n    }\n  }\n\n  /**\n   * Dispatches a message.\n   *\n   * @param {(Buffer|String)} data The message to send\n   * @param {Boolean} [compress=false] Specifies whether or not to compress\n   *     `data`\n   * @param {Object} options Options object\n   * @param {Boolean} [options.fin=false] Specifies whether or not to set the\n   *     FIN bit\n   * @param {Function} [options.generateMask] The function used to generate the\n   *     masking key\n   * @param {Boolean} [options.mask=false] Specifies whether or not to mask\n   *     `data`\n   * @param {Buffer} [options.maskBuffer] The buffer used to store the masking\n   *     key\n   * @param {Number} options.opcode The opcode\n   * @param {Boolean} [options.readOnly=false] Specifies whether `data` can be\n   *     modified\n   * @param {Boolean} [options.rsv1=false] Specifies whether or not to set the\n   *     RSV1 bit\n   * @param {Function} [cb] Callback\n   * @private\n   */\n  dispatch(data, compress, options, cb) {\n    if (!compress) {\n      this.sendFrame(Sender.frame(data, options), cb);\n      return;\n    }\n\n    const perMessageDeflate = this._extensions[PerMessageDeflate.extensionName];\n\n    this._bufferedBytes += options[kByteLength];\n    this._deflating = true;\n    perMessageDeflate.compress(data, options.fin, (_, buf) => {\n      if (this._socket.destroyed) {\n        const err = new Error(\n          'The socket was closed while data was being compressed'\n        );\n\n        if (typeof cb === 'function') cb(err);\n\n        for (let i = 0; i < this._queue.length; i++) {\n          const params = this._queue[i];\n          const callback = params[params.length - 1];\n\n          if (typeof callback === 'function') callback(err);\n        }\n\n        return;\n      }\n\n      this._bufferedBytes -= options[kByteLength];\n      this._deflating = false;\n      options.readOnly = false;\n      this.sendFrame(Sender.frame(buf, options), cb);\n      this.dequeue();\n    });\n  }\n\n  /**\n   * Executes queued send operations.\n   *\n   * @private\n   */\n  dequeue() {\n    while (!this._deflating && this._queue.length) {\n      const params = this._queue.shift();\n\n      this._bufferedBytes -= params[3][kByteLength];\n      Reflect.apply(params[0], this, params.slice(1));\n    }\n  }\n\n  /**\n   * Enqueues a send operation.\n   *\n   * @param {Array} params Send operation parameters.\n   * @private\n   */\n  enqueue(params) {\n    this._bufferedBytes += params[3][kByteLength];\n    this._queue.push(params);\n  }\n\n  /**\n   * Sends a frame.\n   *\n   * @param {Buffer[]} list The frame to send\n   * @param {Function} [cb] Callback\n   * @private\n   */\n  sendFrame(list, cb) {\n    if (list.length === 2) {\n      this._socket.cork();\n      this._socket.write(list[0]);\n      this._socket.write(list[1], cb);\n      this._socket.uncork();\n    } else {\n      this._socket.write(list[0], cb);\n    }\n  }\n}\n\nmodule.exports = Sender;\n","'use strict';\n\nconst { Duplex } = require('stream');\n\n/**\n * Emits the `'close'` event on a stream.\n *\n * @param {Duplex} stream The stream.\n * @private\n */\nfunction emitClose(stream) {\n  stream.emit('close');\n}\n\n/**\n * The listener of the `'end'` event.\n *\n * @private\n */\nfunction duplexOnEnd() {\n  if (!this.destroyed && this._writableState.finished) {\n    this.destroy();\n  }\n}\n\n/**\n * The listener of the `'error'` event.\n *\n * @param {Error} err The error\n * @private\n */\nfunction duplexOnError(err) {\n  this.removeListener('error', duplexOnError);\n  this.destroy();\n  if (this.listenerCount('error') === 0) {\n    // Do not suppress the throwing behavior.\n    this.emit('error', err);\n  }\n}\n\n/**\n * Wraps a `WebSocket` in a duplex stream.\n *\n * @param {WebSocket} ws The `WebSocket` to wrap\n * @param {Object} [options] The options for the `Duplex` constructor\n * @return {Duplex} The duplex stream\n * @public\n */\nfunction createWebSocketStream(ws, options) {\n  let terminateOnDestroy = true;\n\n  const duplex = new Duplex({\n    ...options,\n    autoDestroy: false,\n    emitClose: false,\n    objectMode: false,\n    writableObjectMode: false\n  });\n\n  ws.on('message', function message(msg, isBinary) {\n    const data =\n      !isBinary && duplex._readableState.objectMode ? msg.toString() : msg;\n\n    if (!duplex.push(data)) ws.pause();\n  });\n\n  ws.once('error', function error(err) {\n    if (duplex.destroyed) return;\n\n    // Prevent `ws.terminate()` from being called by `duplex._destroy()`.\n    //\n    // - If the `'error'` event is emitted before the `'open'` event, then\n    //   `ws.terminate()` is a noop as no socket is assigned.\n    // - Otherwise, the error is re-emitted by the listener of the `'error'`\n    //   event of the `Receiver` object. The listener already closes the\n    //   connection by calling `ws.close()`. This allows a close frame to be\n    //   sent to the other peer. If `ws.terminate()` is called right after this,\n    //   then the close frame might not be sent.\n    terminateOnDestroy = false;\n    duplex.destroy(err);\n  });\n\n  ws.once('close', function close() {\n    if (duplex.destroyed) return;\n\n    duplex.push(null);\n  });\n\n  duplex._destroy = function (err, callback) {\n    if (ws.readyState === ws.CLOSED) {\n      callback(err);\n      process.nextTick(emitClose, duplex);\n      return;\n    }\n\n    let called = false;\n\n    ws.once('error', function error(err) {\n      called = true;\n      callback(err);\n    });\n\n    ws.once('close', function close() {\n      if (!called) callback(err);\n      process.nextTick(emitClose, duplex);\n    });\n\n    if (terminateOnDestroy) ws.terminate();\n  };\n\n  duplex._final = function (callback) {\n    if (ws.readyState === ws.CONNECTING) {\n      ws.once('open', function open() {\n        duplex._final(callback);\n      });\n      return;\n    }\n\n    // If the value of the `_socket` property is `null` it means that `ws` is a\n    // client websocket and the handshake failed. In fact, when this happens, a\n    // socket is never assigned to the websocket. Wait for the `'error'` event\n    // that will be emitted by the websocket.\n    if (ws._socket === null) return;\n\n    if (ws._socket._writableState.finished) {\n      callback();\n      if (duplex._readableState.endEmitted) duplex.destroy();\n    } else {\n      ws._socket.once('finish', function finish() {\n        // `duplex` is not destroyed here because the `'end'` event will be\n        // emitted on `duplex` after this `'finish'` event. The EOF signaling\n        // `null` chunk is, in fact, pushed when the websocket emits `'close'`.\n        callback();\n      });\n      ws.close();\n    }\n  };\n\n  duplex._read = function () {\n    if (ws.isPaused) ws.resume();\n  };\n\n  duplex._write = function (chunk, encoding, callback) {\n    if (ws.readyState === ws.CONNECTING) {\n      ws.once('open', function open() {\n        duplex._write(chunk, encoding, callback);\n      });\n      return;\n    }\n\n    ws.send(chunk, callback);\n  };\n\n  duplex.on('end', duplexOnEnd);\n  duplex.on('error', duplexOnError);\n  return duplex;\n}\n\nmodule.exports = createWebSocketStream;\n","'use strict';\n\nconst { tokenChars } = require('./validation');\n\n/**\n * Parses the `Sec-WebSocket-Protocol` header into a set of subprotocol names.\n *\n * @param {String} header The field value of the header\n * @return {Set} The subprotocol names\n * @public\n */\nfunction parse(header) {\n  const protocols = new Set();\n  let start = -1;\n  let end = -1;\n  let i = 0;\n\n  for (i; i < header.length; i++) {\n    const code = header.charCodeAt(i);\n\n    if (end === -1 && tokenChars[code] === 1) {\n      if (start === -1) start = i;\n    } else if (\n      i !== 0 &&\n      (code === 0x20 /* ' ' */ || code === 0x09) /* '\\t' */\n    ) {\n      if (end === -1 && start !== -1) end = i;\n    } else if (code === 0x2c /* ',' */) {\n      if (start === -1) {\n        throw new SyntaxError(`Unexpected character at index ${i}`);\n      }\n\n      if (end === -1) end = i;\n\n      const protocol = header.slice(start, end);\n\n      if (protocols.has(protocol)) {\n        throw new SyntaxError(`The \"${protocol}\" subprotocol is duplicated`);\n      }\n\n      protocols.add(protocol);\n      start = end = -1;\n    } else {\n      throw new SyntaxError(`Unexpected character at index ${i}`);\n    }\n  }\n\n  if (start === -1 || end !== -1) {\n    throw new SyntaxError('Unexpected end of input');\n  }\n\n  const protocol = header.slice(start, i);\n\n  if (protocols.has(protocol)) {\n    throw new SyntaxError(`The \"${protocol}\" subprotocol is duplicated`);\n  }\n\n  protocols.add(protocol);\n  return protocols;\n}\n\nmodule.exports = { parse };\n","'use strict';\n\n//\n// Allowed token characters:\n//\n// '!', '#', '$', '%', '&', ''', '*', '+', '-',\n// '.', 0-9, A-Z, '^', '_', '`', a-z, '|', '~'\n//\n// tokenChars[32] === 0 // ' '\n// tokenChars[33] === 1 // '!'\n// tokenChars[34] === 0 // '\"'\n// ...\n//\n// prettier-ignore\nconst tokenChars = [\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, // 0 - 15\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, // 16 - 31\n  0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, // 32 - 47\n  1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, // 48 - 63\n  0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, // 64 - 79\n  1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, // 80 - 95\n  1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, // 96 - 111\n  1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0 // 112 - 127\n];\n\n/**\n * Checks if a status code is allowed in a close frame.\n *\n * @param {Number} code The status code\n * @return {Boolean} `true` if the status code is valid, else `false`\n * @public\n */\nfunction isValidStatusCode(code) {\n  return (\n    (code >= 1000 &&\n      code <= 1014 &&\n      code !== 1004 &&\n      code !== 1005 &&\n      code !== 1006) ||\n    (code >= 3000 && code <= 4999)\n  );\n}\n\n/**\n * Checks if a given buffer contains only correct UTF-8.\n * Ported from https://www.cl.cam.ac.uk/%7Emgk25/ucs/utf8_check.c by\n * Markus Kuhn.\n *\n * @param {Buffer} buf The buffer to check\n * @return {Boolean} `true` if `buf` contains only correct UTF-8, else `false`\n * @public\n */\nfunction _isValidUTF8(buf) {\n  const len = buf.length;\n  let i = 0;\n\n  while (i < len) {\n    if ((buf[i] & 0x80) === 0) {\n      // 0xxxxxxx\n      i++;\n    } else if ((buf[i] & 0xe0) === 0xc0) {\n      // 110xxxxx 10xxxxxx\n      if (\n        i + 1 === len ||\n        (buf[i + 1] & 0xc0) !== 0x80 ||\n        (buf[i] & 0xfe) === 0xc0 // Overlong\n      ) {\n        return false;\n      }\n\n      i += 2;\n    } else if ((buf[i] & 0xf0) === 0xe0) {\n      // 1110xxxx 10xxxxxx 10xxxxxx\n      if (\n        i + 2 >= len ||\n        (buf[i + 1] & 0xc0) !== 0x80 ||\n        (buf[i + 2] & 0xc0) !== 0x80 ||\n        (buf[i] === 0xe0 && (buf[i + 1] & 0xe0) === 0x80) || // Overlong\n        (buf[i] === 0xed && (buf[i + 1] & 0xe0) === 0xa0) // Surrogate (U+D800 - U+DFFF)\n      ) {\n        return false;\n      }\n\n      i += 3;\n    } else if ((buf[i] & 0xf8) === 0xf0) {\n      // 11110xxx 10xxxxxx 10xxxxxx 10xxxxxx\n      if (\n        i + 3 >= len ||\n        (buf[i + 1] & 0xc0) !== 0x80 ||\n        (buf[i + 2] & 0xc0) !== 0x80 ||\n        (buf[i + 3] & 0xc0) !== 0x80 ||\n        (buf[i] === 0xf0 && (buf[i + 1] & 0xf0) === 0x80) || // Overlong\n        (buf[i] === 0xf4 && buf[i + 1] > 0x8f) ||\n        buf[i] > 0xf4 // > U+10FFFF\n      ) {\n        return false;\n      }\n\n      i += 4;\n    } else {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nmodule.exports = {\n  isValidStatusCode,\n  isValidUTF8: _isValidUTF8,\n  tokenChars\n};\n\n/* istanbul ignore else  */\nif (!process.env.WS_NO_UTF_8_VALIDATE) {\n  try {\n    const isValidUTF8 = require('utf-8-validate');\n\n    module.exports.isValidUTF8 = function (buf) {\n      return buf.length < 150 ? _isValidUTF8(buf) : isValidUTF8(buf);\n    };\n  } catch (e) {\n    // Continue regardless of the error.\n  }\n}\n","/* eslint no-unused-vars: [\"error\", { \"varsIgnorePattern\": \"^net|tls|https$\" }] */\n\n'use strict';\n\nconst EventEmitter = require('events');\nconst http = require('http');\nconst https = require('https');\nconst net = require('net');\nconst tls = require('tls');\nconst { createHash } = require('crypto');\n\nconst extension = require('./extension');\nconst PerMessageDeflate = require('./permessage-deflate');\nconst subprotocol = require('./subprotocol');\nconst WebSocket = require('./websocket');\nconst { GUID, kWebSocket } = require('./constants');\n\nconst keyRegex = /^[+/0-9A-Za-z]{22}==$/;\n\nconst RUNNING = 0;\nconst CLOSING = 1;\nconst CLOSED = 2;\n\n/**\n * Class representing a WebSocket server.\n *\n * @extends EventEmitter\n */\nclass WebSocketServer extends EventEmitter {\n  /**\n   * Create a `WebSocketServer` instance.\n   *\n   * @param {Object} options Configuration options\n   * @param {Number} [options.backlog=511] The maximum length of the queue of\n   *     pending connections\n   * @param {Boolean} [options.clientTracking=true] Specifies whether or not to\n   *     track clients\n   * @param {Function} [options.handleProtocols] A hook to handle protocols\n   * @param {String} [options.host] The hostname where to bind the server\n   * @param {Number} [options.maxPayload=104857600] The maximum allowed message\n   *     size\n   * @param {Boolean} [options.noServer=false] Enable no server mode\n   * @param {String} [options.path] Accept only connections matching this path\n   * @param {(Boolean|Object)} [options.perMessageDeflate=false] Enable/disable\n   *     permessage-deflate\n   * @param {Number} [options.port] The port where to bind the server\n   * @param {(http.Server|https.Server)} [options.server] A pre-created HTTP/S\n   *     server to use\n   * @param {Boolean} [options.skipUTF8Validation=false] Specifies whether or\n   *     not to skip UTF-8 validation for text and close messages\n   * @param {Function} [options.verifyClient] A hook to reject connections\n   * @param {Function} [options.WebSocket=WebSocket] Specifies the `WebSocket`\n   *     class to use. It must be the `WebSocket` class or class that extends it\n   * @param {Function} [callback] A listener for the `listening` event\n   */\n  constructor(options, callback) {\n    super();\n\n    options = {\n      maxPayload: 100 * 1024 * 1024,\n      skipUTF8Validation: false,\n      perMessageDeflate: false,\n      handleProtocols: null,\n      clientTracking: true,\n      verifyClient: null,\n      noServer: false,\n      backlog: null, // use default (511 as implemented in net.js)\n      server: null,\n      host: null,\n      path: null,\n      port: null,\n      WebSocket,\n      ...options\n    };\n\n    if (\n      (options.port == null && !options.server && !options.noServer) ||\n      (options.port != null && (options.server || options.noServer)) ||\n      (options.server && options.noServer)\n    ) {\n      throw new TypeError(\n        'One and only one of the \"port\", \"server\", or \"noServer\" options ' +\n          'must be specified'\n      );\n    }\n\n    if (options.port != null) {\n      this._server = http.createServer((req, res) => {\n        const body = http.STATUS_CODES[426];\n\n        res.writeHead(426, {\n          'Content-Length': body.length,\n          'Content-Type': 'text/plain'\n        });\n        res.end(body);\n      });\n      this._server.listen(\n        options.port,\n        options.host,\n        options.backlog,\n        callback\n      );\n    } else if (options.server) {\n      this._server = options.server;\n    }\n\n    if (this._server) {\n      const emitConnection = this.emit.bind(this, 'connection');\n\n      this._removeListeners = addListeners(this._server, {\n        listening: this.emit.bind(this, 'listening'),\n        error: this.emit.bind(this, 'error'),\n        upgrade: (req, socket, head) => {\n          this.handleUpgrade(req, socket, head, emitConnection);\n        }\n      });\n    }\n\n    if (options.perMessageDeflate === true) options.perMessageDeflate = {};\n    if (options.clientTracking) {\n      this.clients = new Set();\n      this._shouldEmitClose = false;\n    }\n\n    this.options = options;\n    this._state = RUNNING;\n  }\n\n  /**\n   * Returns the bound address, the address family name, and port of the server\n   * as reported by the operating system if listening on an IP socket.\n   * If the server is listening on a pipe or UNIX domain socket, the name is\n   * returned as a string.\n   *\n   * @return {(Object|String|null)} The address of the server\n   * @public\n   */\n  address() {\n    if (this.options.noServer) {\n      throw new Error('The server is operating in \"noServer\" mode');\n    }\n\n    if (!this._server) return null;\n    return this._server.address();\n  }\n\n  /**\n   * Stop the server from accepting new connections and emit the `'close'` event\n   * when all existing connections are closed.\n   *\n   * @param {Function} [cb] A one-time listener for the `'close'` event\n   * @public\n   */\n  close(cb) {\n    if (this._state === CLOSED) {\n      if (cb) {\n        this.once('close', () => {\n          cb(new Error('The server is not running'));\n        });\n      }\n\n      process.nextTick(emitClose, this);\n      return;\n    }\n\n    if (cb) this.once('close', cb);\n\n    if (this._state === CLOSING) return;\n    this._state = CLOSING;\n\n    if (this.options.noServer || this.options.server) {\n      if (this._server) {\n        this._removeListeners();\n        this._removeListeners = this._server = null;\n      }\n\n      if (this.clients) {\n        if (!this.clients.size) {\n          process.nextTick(emitClose, this);\n        } else {\n          this._shouldEmitClose = true;\n        }\n      } else {\n        process.nextTick(emitClose, this);\n      }\n    } else {\n      const server = this._server;\n\n      this._removeListeners();\n      this._removeListeners = this._server = null;\n\n      //\n      // The HTTP/S server was created internally. Close it, and rely on its\n      // `'close'` event.\n      //\n      server.close(() => {\n        emitClose(this);\n      });\n    }\n  }\n\n  /**\n   * See if a given request should be handled by this server instance.\n   *\n   * @param {http.IncomingMessage} req Request object to inspect\n   * @return {Boolean} `true` if the request is valid, else `false`\n   * @public\n   */\n  shouldHandle(req) {\n    if (this.options.path) {\n      const index = req.url.indexOf('?');\n      const pathname = index !== -1 ? req.url.slice(0, index) : req.url;\n\n      if (pathname !== this.options.path) return false;\n    }\n\n    return true;\n  }\n\n  /**\n   * Handle a HTTP Upgrade request.\n   *\n   * @param {http.IncomingMessage} req The request object\n   * @param {(net.Socket|tls.Socket)} socket The network socket between the\n   *     server and client\n   * @param {Buffer} head The first packet of the upgraded stream\n   * @param {Function} cb Callback\n   * @public\n   */\n  handleUpgrade(req, socket, head, cb) {\n    socket.on('error', socketOnError);\n\n    const key = req.headers['sec-websocket-key'];\n    const version = +req.headers['sec-websocket-version'];\n\n    if (req.method !== 'GET') {\n      const message = 'Invalid HTTP method';\n      abortHandshakeOrEmitwsClientError(this, req, socket, 405, message);\n      return;\n    }\n\n    if (req.headers.upgrade.toLowerCase() !== 'websocket') {\n      const message = 'Invalid Upgrade header';\n      abortHandshakeOrEmitwsClientError(this, req, socket, 400, message);\n      return;\n    }\n\n    if (!key || !keyRegex.test(key)) {\n      const message = 'Missing or invalid Sec-WebSocket-Key header';\n      abortHandshakeOrEmitwsClientError(this, req, socket, 400, message);\n      return;\n    }\n\n    if (version !== 8 && version !== 13) {\n      const message = 'Missing or invalid Sec-WebSocket-Version header';\n      abortHandshakeOrEmitwsClientError(this, req, socket, 400, message);\n      return;\n    }\n\n    if (!this.shouldHandle(req)) {\n      abortHandshake(socket, 400);\n      return;\n    }\n\n    const secWebSocketProtocol = req.headers['sec-websocket-protocol'];\n    let protocols = new Set();\n\n    if (secWebSocketProtocol !== undefined) {\n      try {\n        protocols = subprotocol.parse(secWebSocketProtocol);\n      } catch (err) {\n        const message = 'Invalid Sec-WebSocket-Protocol header';\n        abortHandshakeOrEmitwsClientError(this, req, socket, 400, message);\n        return;\n      }\n    }\n\n    const secWebSocketExtensions = req.headers['sec-websocket-extensions'];\n    const extensions = {};\n\n    if (\n      this.options.perMessageDeflate &&\n      secWebSocketExtensions !== undefined\n    ) {\n      const perMessageDeflate = new PerMessageDeflate(\n        this.options.perMessageDeflate,\n        true,\n        this.options.maxPayload\n      );\n\n      try {\n        const offers = extension.parse(secWebSocketExtensions);\n\n        if (offers[PerMessageDeflate.extensionName]) {\n          perMessageDeflate.accept(offers[PerMessageDeflate.extensionName]);\n          extensions[PerMessageDeflate.extensionName] = perMessageDeflate;\n        }\n      } catch (err) {\n        const message =\n          'Invalid or unacceptable Sec-WebSocket-Extensions header';\n        abortHandshakeOrEmitwsClientError(this, req, socket, 400, message);\n        return;\n      }\n    }\n\n    //\n    // Optionally call external client verification handler.\n    //\n    if (this.options.verifyClient) {\n      const info = {\n        origin:\n          req.headers[`${version === 8 ? 'sec-websocket-origin' : 'origin'}`],\n        secure: !!(req.socket.authorized || req.socket.encrypted),\n        req\n      };\n\n      if (this.options.verifyClient.length === 2) {\n        this.options.verifyClient(info, (verified, code, message, headers) => {\n          if (!verified) {\n            return abortHandshake(socket, code || 401, message, headers);\n          }\n\n          this.completeUpgrade(\n            extensions,\n            key,\n            protocols,\n            req,\n            socket,\n            head,\n            cb\n          );\n        });\n        return;\n      }\n\n      if (!this.options.verifyClient(info)) return abortHandshake(socket, 401);\n    }\n\n    this.completeUpgrade(extensions, key, protocols, req, socket, head, cb);\n  }\n\n  /**\n   * Upgrade the connection to WebSocket.\n   *\n   * @param {Object} extensions The accepted extensions\n   * @param {String} key The value of the `Sec-WebSocket-Key` header\n   * @param {Set} protocols The subprotocols\n   * @param {http.IncomingMessage} req The request object\n   * @param {(net.Socket|tls.Socket)} socket The network socket between the\n   *     server and client\n   * @param {Buffer} head The first packet of the upgraded stream\n   * @param {Function} cb Callback\n   * @throws {Error} If called more than once with the same socket\n   * @private\n   */\n  completeUpgrade(extensions, key, protocols, req, socket, head, cb) {\n    //\n    // Destroy the socket if the client has already sent a FIN packet.\n    //\n    if (!socket.readable || !socket.writable) return socket.destroy();\n\n    if (socket[kWebSocket]) {\n      throw new Error(\n        'server.handleUpgrade() was called more than once with the same ' +\n          'socket, possibly due to a misconfiguration'\n      );\n    }\n\n    if (this._state > RUNNING) return abortHandshake(socket, 503);\n\n    const digest = createHash('sha1')\n      .update(key + GUID)\n      .digest('base64');\n\n    const headers = [\n      'HTTP/1.1 101 Switching Protocols',\n      'Upgrade: websocket',\n      'Connection: Upgrade',\n      `Sec-WebSocket-Accept: ${digest}`\n    ];\n\n    const ws = new this.options.WebSocket(null);\n\n    if (protocols.size) {\n      //\n      // Optionally call external protocol selection handler.\n      //\n      const protocol = this.options.handleProtocols\n        ? this.options.handleProtocols(protocols, req)\n        : protocols.values().next().value;\n\n      if (protocol) {\n        headers.push(`Sec-WebSocket-Protocol: ${protocol}`);\n        ws._protocol = protocol;\n      }\n    }\n\n    if (extensions[PerMessageDeflate.extensionName]) {\n      const params = extensions[PerMessageDeflate.extensionName].params;\n      const value = extension.format({\n        [PerMessageDeflate.extensionName]: [params]\n      });\n      headers.push(`Sec-WebSocket-Extensions: ${value}`);\n      ws._extensions = extensions;\n    }\n\n    //\n    // Allow external modification/inspection of handshake headers.\n    //\n    this.emit('headers', headers, req);\n\n    socket.write(headers.concat('\\r\\n').join('\\r\\n'));\n    socket.removeListener('error', socketOnError);\n\n    ws.setSocket(socket, head, {\n      maxPayload: this.options.maxPayload,\n      skipUTF8Validation: this.options.skipUTF8Validation\n    });\n\n    if (this.clients) {\n      this.clients.add(ws);\n      ws.on('close', () => {\n        this.clients.delete(ws);\n\n        if (this._shouldEmitClose && !this.clients.size) {\n          process.nextTick(emitClose, this);\n        }\n      });\n    }\n\n    cb(ws, req);\n  }\n}\n\nmodule.exports = WebSocketServer;\n\n/**\n * Add event listeners on an `EventEmitter` using a map of <event, listener>\n * pairs.\n *\n * @param {EventEmitter} server The event emitter\n * @param {Object.<String, Function>} map The listeners to add\n * @return {Function} A function that will remove the added listeners when\n *     called\n * @private\n */\nfunction addListeners(server, map) {\n  for (const event of Object.keys(map)) server.on(event, map[event]);\n\n  return function removeListeners() {\n    for (const event of Object.keys(map)) {\n      server.removeListener(event, map[event]);\n    }\n  };\n}\n\n/**\n * Emit a `'close'` event on an `EventEmitter`.\n *\n * @param {EventEmitter} server The event emitter\n * @private\n */\nfunction emitClose(server) {\n  server._state = CLOSED;\n  server.emit('close');\n}\n\n/**\n * Handle socket errors.\n *\n * @private\n */\nfunction socketOnError() {\n  this.destroy();\n}\n\n/**\n * Close the connection when preconditions are not fulfilled.\n *\n * @param {(net.Socket|tls.Socket)} socket The socket of the upgrade request\n * @param {Number} code The HTTP response status code\n * @param {String} [message] The HTTP response body\n * @param {Object} [headers] Additional HTTP response headers\n * @private\n */\nfunction abortHandshake(socket, code, message, headers) {\n  //\n  // The socket is writable unless the user destroyed or ended it before calling\n  // `server.handleUpgrade()` or in the `verifyClient` function, which is a user\n  // error. Handling this does not make much sense as the worst that can happen\n  // is that some of the data written by the user might be discarded due to the\n  // call to `socket.end()` below, which triggers an `'error'` event that in\n  // turn causes the socket to be destroyed.\n  //\n  message = message || http.STATUS_CODES[code];\n  headers = {\n    Connection: 'close',\n    'Content-Type': 'text/html',\n    'Content-Length': Buffer.byteLength(message),\n    ...headers\n  };\n\n  socket.once('finish', socket.destroy);\n\n  socket.end(\n    `HTTP/1.1 ${code} ${http.STATUS_CODES[code]}\\r\\n` +\n      Object.keys(headers)\n        .map((h) => `${h}: ${headers[h]}`)\n        .join('\\r\\n') +\n      '\\r\\n\\r\\n' +\n      message\n  );\n}\n\n/**\n * Emit a `'wsClientError'` event on a `WebSocketServer` if there is at least\n * one listener for it, otherwise call `abortHandshake()`.\n *\n * @param {WebSocketServer} server The WebSocket server\n * @param {http.IncomingMessage} req The request object\n * @param {(net.Socket|tls.Socket)} socket The socket of the upgrade request\n * @param {Number} code The HTTP response status code\n * @param {String} message The HTTP response body\n * @private\n */\nfunction abortHandshakeOrEmitwsClientError(server, req, socket, code, message) {\n  if (server.listenerCount('wsClientError')) {\n    const err = new Error(message);\n    Error.captureStackTrace(err, abortHandshakeOrEmitwsClientError);\n\n    server.emit('wsClientError', err, socket, req);\n  } else {\n    abortHandshake(socket, code, message);\n  }\n}\n","/* eslint no-unused-vars: [\"error\", { \"varsIgnorePattern\": \"^Readable$\" }] */\n\n'use strict';\n\nconst EventEmitter = require('events');\nconst https = require('https');\nconst http = require('http');\nconst net = require('net');\nconst tls = require('tls');\nconst { randomBytes, createHash } = require('crypto');\nconst { Readable } = require('stream');\nconst { URL } = require('url');\n\nconst PerMessageDeflate = require('./permessage-deflate');\nconst Receiver = require('./receiver');\nconst Sender = require('./sender');\nconst {\n  BINARY_TYPES,\n  EMPTY_BUFFER,\n  GUID,\n  kForOnEventAttribute,\n  kListener,\n  kStatusCode,\n  kWebSocket,\n  NOOP\n} = require('./constants');\nconst {\n  EventTarget: { addEventListener, removeEventListener }\n} = require('./event-target');\nconst { format, parse } = require('./extension');\nconst { toBuffer } = require('./buffer-util');\n\nconst closeTimeout = 30 * 1000;\nconst kAborted = Symbol('kAborted');\nconst protocolVersions = [8, 13];\nconst readyStates = ['CONNECTING', 'OPEN', 'CLOSING', 'CLOSED'];\nconst subprotocolRegex = /^[!#$%&'*+\\-.0-9A-Z^_`|a-z~]+$/;\n\n/**\n * Class representing a WebSocket.\n *\n * @extends EventEmitter\n */\nclass WebSocket extends EventEmitter {\n  /**\n   * Create a new `WebSocket`.\n   *\n   * @param {(String|URL)} address The URL to which to connect\n   * @param {(String|String[])} [protocols] The subprotocols\n   * @param {Object} [options] Connection options\n   */\n  constructor(address, protocols, options) {\n    super();\n\n    this._binaryType = BINARY_TYPES[0];\n    this._closeCode = 1006;\n    this._closeFrameReceived = false;\n    this._closeFrameSent = false;\n    this._closeMessage = EMPTY_BUFFER;\n    this._closeTimer = null;\n    this._extensions = {};\n    this._paused = false;\n    this._protocol = '';\n    this._readyState = WebSocket.CONNECTING;\n    this._receiver = null;\n    this._sender = null;\n    this._socket = null;\n\n    if (address !== null) {\n      this._bufferedAmount = 0;\n      this._isServer = false;\n      this._redirects = 0;\n\n      if (protocols === undefined) {\n        protocols = [];\n      } else if (!Array.isArray(protocols)) {\n        if (typeof protocols === 'object' && protocols !== null) {\n          options = protocols;\n          protocols = [];\n        } else {\n          protocols = [protocols];\n        }\n      }\n\n      initAsClient(this, address, protocols, options);\n    } else {\n      this._isServer = true;\n    }\n  }\n\n  /**\n   * This deviates from the WHATWG interface since ws doesn't support the\n   * required default \"blob\" type (instead we define a custom \"nodebuffer\"\n   * type).\n   *\n   * @type {String}\n   */\n  get binaryType() {\n    return this._binaryType;\n  }\n\n  set binaryType(type) {\n    if (!BINARY_TYPES.includes(type)) return;\n\n    this._binaryType = type;\n\n    //\n    // Allow to change `binaryType` on the fly.\n    //\n    if (this._receiver) this._receiver._binaryType = type;\n  }\n\n  /**\n   * @type {Number}\n   */\n  get bufferedAmount() {\n    if (!this._socket) return this._bufferedAmount;\n\n    return this._socket._writableState.length + this._sender._bufferedBytes;\n  }\n\n  /**\n   * @type {String}\n   */\n  get extensions() {\n    return Object.keys(this._extensions).join();\n  }\n\n  /**\n   * @type {Boolean}\n   */\n  get isPaused() {\n    return this._paused;\n  }\n\n  /**\n   * @type {Function}\n   */\n  /* istanbul ignore next */\n  get onclose() {\n    return null;\n  }\n\n  /**\n   * @type {Function}\n   */\n  /* istanbul ignore next */\n  get onerror() {\n    return null;\n  }\n\n  /**\n   * @type {Function}\n   */\n  /* istanbul ignore next */\n  get onopen() {\n    return null;\n  }\n\n  /**\n   * @type {Function}\n   */\n  /* istanbul ignore next */\n  get onmessage() {\n    return null;\n  }\n\n  /**\n   * @type {String}\n   */\n  get protocol() {\n    return this._protocol;\n  }\n\n  /**\n   * @type {Number}\n   */\n  get readyState() {\n    return this._readyState;\n  }\n\n  /**\n   * @type {String}\n   */\n  get url() {\n    return this._url;\n  }\n\n  /**\n   * Set up the socket and the internal resources.\n   *\n   * @param {(net.Socket|tls.Socket)} socket The network socket between the\n   *     server and client\n   * @param {Buffer} head The first packet of the upgraded stream\n   * @param {Object} options Options object\n   * @param {Function} [options.generateMask] The function used to generate the\n   *     masking key\n   * @param {Number} [options.maxPayload=0] The maximum allowed message size\n   * @param {Boolean} [options.skipUTF8Validation=false] Specifies whether or\n   *     not to skip UTF-8 validation for text and close messages\n   * @private\n   */\n  setSocket(socket, head, options) {\n    const receiver = new Receiver({\n      binaryType: this.binaryType,\n      extensions: this._extensions,\n      isServer: this._isServer,\n      maxPayload: options.maxPayload,\n      skipUTF8Validation: options.skipUTF8Validation\n    });\n\n    this._sender = new Sender(socket, this._extensions, options.generateMask);\n    this._receiver = receiver;\n    this._socket = socket;\n\n    receiver[kWebSocket] = this;\n    socket[kWebSocket] = this;\n\n    receiver.on('conclude', receiverOnConclude);\n    receiver.on('drain', receiverOnDrain);\n    receiver.on('error', receiverOnError);\n    receiver.on('message', receiverOnMessage);\n    receiver.on('ping', receiverOnPing);\n    receiver.on('pong', receiverOnPong);\n\n    socket.setTimeout(0);\n    socket.setNoDelay();\n\n    if (head.length > 0) socket.unshift(head);\n\n    socket.on('close', socketOnClose);\n    socket.on('data', socketOnData);\n    socket.on('end', socketOnEnd);\n    socket.on('error', socketOnError);\n\n    this._readyState = WebSocket.OPEN;\n    this.emit('open');\n  }\n\n  /**\n   * Emit the `'close'` event.\n   *\n   * @private\n   */\n  emitClose() {\n    if (!this._socket) {\n      this._readyState = WebSocket.CLOSED;\n      this.emit('close', this._closeCode, this._closeMessage);\n      return;\n    }\n\n    if (this._extensions[PerMessageDeflate.extensionName]) {\n      this._extensions[PerMessageDeflate.extensionName].cleanup();\n    }\n\n    this._receiver.removeAllListeners();\n    this._readyState = WebSocket.CLOSED;\n    this.emit('close', this._closeCode, this._closeMessage);\n  }\n\n  /**\n   * Start a closing handshake.\n   *\n   *          +----------+   +-----------+   +----------+\n   *     - - -|ws.close()|-->|close frame|-->|ws.close()|- - -\n   *    |     +----------+   +-----------+   +----------+     |\n   *          +----------+   +-----------+         |\n   * CLOSING  |ws.close()|<--|close frame|<--+-----+       CLOSING\n   *          +----------+   +-----------+   |\n   *    |           |                        |   +---+        |\n   *                +------------------------+-->|fin| - - - -\n   *    |         +---+                      |   +---+\n   *     - - - - -|fin|<---------------------+\n   *              +---+\n   *\n   * @param {Number} [code] Status code explaining why the connection is closing\n   * @param {(String|Buffer)} [data] The reason why the connection is\n   *     closing\n   * @public\n   */\n  close(code, data) {\n    if (this.readyState === WebSocket.CLOSED) return;\n    if (this.readyState === WebSocket.CONNECTING) {\n      const msg = 'WebSocket was closed before the connection was established';\n      return abortHandshake(this, this._req, msg);\n    }\n\n    if (this.readyState === WebSocket.CLOSING) {\n      if (\n        this._closeFrameSent &&\n        (this._closeFrameReceived || this._receiver._writableState.errorEmitted)\n      ) {\n        this._socket.end();\n      }\n\n      return;\n    }\n\n    this._readyState = WebSocket.CLOSING;\n    this._sender.close(code, data, !this._isServer, (err) => {\n      //\n      // This error is handled by the `'error'` listener on the socket. We only\n      // want to know if the close frame has been sent here.\n      //\n      if (err) return;\n\n      this._closeFrameSent = true;\n\n      if (\n        this._closeFrameReceived ||\n        this._receiver._writableState.errorEmitted\n      ) {\n        this._socket.end();\n      }\n    });\n\n    //\n    // Specify a timeout for the closing handshake to complete.\n    //\n    this._closeTimer = setTimeout(\n      this._socket.destroy.bind(this._socket),\n      closeTimeout\n    );\n  }\n\n  /**\n   * Pause the socket.\n   *\n   * @public\n   */\n  pause() {\n    if (\n      this.readyState === WebSocket.CONNECTING ||\n      this.readyState === WebSocket.CLOSED\n    ) {\n      return;\n    }\n\n    this._paused = true;\n    this._socket.pause();\n  }\n\n  /**\n   * Send a ping.\n   *\n   * @param {*} [data] The data to send\n   * @param {Boolean} [mask] Indicates whether or not to mask `data`\n   * @param {Function} [cb] Callback which is executed when the ping is sent\n   * @public\n   */\n  ping(data, mask, cb) {\n    if (this.readyState === WebSocket.CONNECTING) {\n      throw new Error('WebSocket is not open: readyState 0 (CONNECTING)');\n    }\n\n    if (typeof data === 'function') {\n      cb = data;\n      data = mask = undefined;\n    } else if (typeof mask === 'function') {\n      cb = mask;\n      mask = undefined;\n    }\n\n    if (typeof data === 'number') data = data.toString();\n\n    if (this.readyState !== WebSocket.OPEN) {\n      sendAfterClose(this, data, cb);\n      return;\n    }\n\n    if (mask === undefined) mask = !this._isServer;\n    this._sender.ping(data || EMPTY_BUFFER, mask, cb);\n  }\n\n  /**\n   * Send a pong.\n   *\n   * @param {*} [data] The data to send\n   * @param {Boolean} [mask] Indicates whether or not to mask `data`\n   * @param {Function} [cb] Callback which is executed when the pong is sent\n   * @public\n   */\n  pong(data, mask, cb) {\n    if (this.readyState === WebSocket.CONNECTING) {\n      throw new Error('WebSocket is not open: readyState 0 (CONNECTING)');\n    }\n\n    if (typeof data === 'function') {\n      cb = data;\n      data = mask = undefined;\n    } else if (typeof mask === 'function') {\n      cb = mask;\n      mask = undefined;\n    }\n\n    if (typeof data === 'number') data = data.toString();\n\n    if (this.readyState !== WebSocket.OPEN) {\n      sendAfterClose(this, data, cb);\n      return;\n    }\n\n    if (mask === undefined) mask = !this._isServer;\n    this._sender.pong(data || EMPTY_BUFFER, mask, cb);\n  }\n\n  /**\n   * Resume the socket.\n   *\n   * @public\n   */\n  resume() {\n    if (\n      this.readyState === WebSocket.CONNECTING ||\n      this.readyState === WebSocket.CLOSED\n    ) {\n      return;\n    }\n\n    this._paused = false;\n    if (!this._receiver._writableState.needDrain) this._socket.resume();\n  }\n\n  /**\n   * Send a data message.\n   *\n   * @param {*} data The message to send\n   * @param {Object} [options] Options object\n   * @param {Boolean} [options.binary] Specifies whether `data` is binary or\n   *     text\n   * @param {Boolean} [options.compress] Specifies whether or not to compress\n   *     `data`\n   * @param {Boolean} [options.fin=true] Specifies whether the fragment is the\n   *     last one\n   * @param {Boolean} [options.mask] Specifies whether or not to mask `data`\n   * @param {Function} [cb] Callback which is executed when data is written out\n   * @public\n   */\n  send(data, options, cb) {\n    if (this.readyState === WebSocket.CONNECTING) {\n      throw new Error('WebSocket is not open: readyState 0 (CONNECTING)');\n    }\n\n    if (typeof options === 'function') {\n      cb = options;\n      options = {};\n    }\n\n    if (typeof data === 'number') data = data.toString();\n\n    if (this.readyState !== WebSocket.OPEN) {\n      sendAfterClose(this, data, cb);\n      return;\n    }\n\n    const opts = {\n      binary: typeof data !== 'string',\n      mask: !this._isServer,\n      compress: true,\n      fin: true,\n      ...options\n    };\n\n    if (!this._extensions[PerMessageDeflate.extensionName]) {\n      opts.compress = false;\n    }\n\n    this._sender.send(data || EMPTY_BUFFER, opts, cb);\n  }\n\n  /**\n   * Forcibly close the connection.\n   *\n   * @public\n   */\n  terminate() {\n    if (this.readyState === WebSocket.CLOSED) return;\n    if (this.readyState === WebSocket.CONNECTING) {\n      const msg = 'WebSocket was closed before the connection was established';\n      return abortHandshake(this, this._req, msg);\n    }\n\n    if (this._socket) {\n      this._readyState = WebSocket.CLOSING;\n      this._socket.destroy();\n    }\n  }\n}\n\n/**\n * @constant {Number} CONNECTING\n * @memberof WebSocket\n */\nObject.defineProperty(WebSocket, 'CONNECTING', {\n  enumerable: true,\n  value: readyStates.indexOf('CONNECTING')\n});\n\n/**\n * @constant {Number} CONNECTING\n * @memberof WebSocket.prototype\n */\nObject.defineProperty(WebSocket.prototype, 'CONNECTING', {\n  enumerable: true,\n  value: readyStates.indexOf('CONNECTING')\n});\n\n/**\n * @constant {Number} OPEN\n * @memberof WebSocket\n */\nObject.defineProperty(WebSocket, 'OPEN', {\n  enumerable: true,\n  value: readyStates.indexOf('OPEN')\n});\n\n/**\n * @constant {Number} OPEN\n * @memberof WebSocket.prototype\n */\nObject.defineProperty(WebSocket.prototype, 'OPEN', {\n  enumerable: true,\n  value: readyStates.indexOf('OPEN')\n});\n\n/**\n * @constant {Number} CLOSING\n * @memberof WebSocket\n */\nObject.defineProperty(WebSocket, 'CLOSING', {\n  enumerable: true,\n  value: readyStates.indexOf('CLOSING')\n});\n\n/**\n * @constant {Number} CLOSING\n * @memberof WebSocket.prototype\n */\nObject.defineProperty(WebSocket.prototype, 'CLOSING', {\n  enumerable: true,\n  value: readyStates.indexOf('CLOSING')\n});\n\n/**\n * @constant {Number} CLOSED\n * @memberof WebSocket\n */\nObject.defineProperty(WebSocket, 'CLOSED', {\n  enumerable: true,\n  value: readyStates.indexOf('CLOSED')\n});\n\n/**\n * @constant {Number} CLOSED\n * @memberof WebSocket.prototype\n */\nObject.defineProperty(WebSocket.prototype, 'CLOSED', {\n  enumerable: true,\n  value: readyStates.indexOf('CLOSED')\n});\n\n[\n  'binaryType',\n  'bufferedAmount',\n  'extensions',\n  'isPaused',\n  'protocol',\n  'readyState',\n  'url'\n].forEach((property) => {\n  Object.defineProperty(WebSocket.prototype, property, { enumerable: true });\n});\n\n//\n// Add the `onopen`, `onerror`, `onclose`, and `onmessage` attributes.\n// See https://html.spec.whatwg.org/multipage/comms.html#the-websocket-interface\n//\n['open', 'error', 'close', 'message'].forEach((method) => {\n  Object.defineProperty(WebSocket.prototype, `on${method}`, {\n    enumerable: true,\n    get() {\n      for (const listener of this.listeners(method)) {\n        if (listener[kForOnEventAttribute]) return listener[kListener];\n      }\n\n      return null;\n    },\n    set(handler) {\n      for (const listener of this.listeners(method)) {\n        if (listener[kForOnEventAttribute]) {\n          this.removeListener(method, listener);\n          break;\n        }\n      }\n\n      if (typeof handler !== 'function') return;\n\n      this.addEventListener(method, handler, {\n        [kForOnEventAttribute]: true\n      });\n    }\n  });\n});\n\nWebSocket.prototype.addEventListener = addEventListener;\nWebSocket.prototype.removeEventListener = removeEventListener;\n\nmodule.exports = WebSocket;\n\n/**\n * Initialize a WebSocket client.\n *\n * @param {WebSocket} websocket The client to initialize\n * @param {(String|URL)} address The URL to which to connect\n * @param {Array} protocols The subprotocols\n * @param {Object} [options] Connection options\n * @param {Boolean} [options.followRedirects=false] Whether or not to follow\n *     redirects\n * @param {Function} [options.generateMask] The function used to generate the\n *     masking key\n * @param {Number} [options.handshakeTimeout] Timeout in milliseconds for the\n *     handshake request\n * @param {Number} [options.maxPayload=104857600] The maximum allowed message\n *     size\n * @param {Number} [options.maxRedirects=10] The maximum number of redirects\n *     allowed\n * @param {String} [options.origin] Value of the `Origin` or\n *     `Sec-WebSocket-Origin` header\n * @param {(Boolean|Object)} [options.perMessageDeflate=true] Enable/disable\n *     permessage-deflate\n * @param {Number} [options.protocolVersion=13] Value of the\n *     `Sec-WebSocket-Version` header\n * @param {Boolean} [options.skipUTF8Validation=false] Specifies whether or\n *     not to skip UTF-8 validation for text and close messages\n * @private\n */\nfunction initAsClient(websocket, address, protocols, options) {\n  const opts = {\n    protocolVersion: protocolVersions[1],\n    maxPayload: 100 * 1024 * 1024,\n    skipUTF8Validation: false,\n    perMessageDeflate: true,\n    followRedirects: false,\n    maxRedirects: 10,\n    ...options,\n    createConnection: undefined,\n    socketPath: undefined,\n    hostname: undefined,\n    protocol: undefined,\n    timeout: undefined,\n    method: 'GET',\n    host: undefined,\n    path: undefined,\n    port: undefined\n  };\n\n  if (!protocolVersions.includes(opts.protocolVersion)) {\n    throw new RangeError(\n      `Unsupported protocol version: ${opts.protocolVersion} ` +\n        `(supported versions: ${protocolVersions.join(', ')})`\n    );\n  }\n\n  let parsedUrl;\n\n  if (address instanceof URL) {\n    parsedUrl = address;\n    websocket._url = address.href;\n  } else {\n    try {\n      parsedUrl = new URL(address);\n    } catch (e) {\n      throw new SyntaxError(`Invalid URL: ${address}`);\n    }\n\n    websocket._url = address;\n  }\n\n  const isSecure = parsedUrl.protocol === 'wss:';\n  const isUnixSocket = parsedUrl.protocol === 'ws+unix:';\n  let invalidURLMessage;\n\n  if (parsedUrl.protocol !== 'ws:' && !isSecure && !isUnixSocket) {\n    invalidURLMessage =\n      'The URL\\'s protocol must be one of \"ws:\", \"wss:\", or \"ws+unix:\"';\n  } else if (isUnixSocket && !parsedUrl.pathname) {\n    invalidURLMessage = \"The URL's pathname is empty\";\n  } else if (parsedUrl.hash) {\n    invalidURLMessage = 'The URL contains a fragment identifier';\n  }\n\n  if (invalidURLMessage) {\n    const err = new SyntaxError(invalidURLMessage);\n\n    if (websocket._redirects === 0) {\n      throw err;\n    } else {\n      emitErrorAndClose(websocket, err);\n      return;\n    }\n  }\n\n  const defaultPort = isSecure ? 443 : 80;\n  const key = randomBytes(16).toString('base64');\n  const request = isSecure ? https.request : http.request;\n  const protocolSet = new Set();\n  let perMessageDeflate;\n\n  opts.createConnection = isSecure ? tlsConnect : netConnect;\n  opts.defaultPort = opts.defaultPort || defaultPort;\n  opts.port = parsedUrl.port || defaultPort;\n  opts.host = parsedUrl.hostname.startsWith('[')\n    ? parsedUrl.hostname.slice(1, -1)\n    : parsedUrl.hostname;\n  opts.headers = {\n    ...opts.headers,\n    'Sec-WebSocket-Version': opts.protocolVersion,\n    'Sec-WebSocket-Key': key,\n    Connection: 'Upgrade',\n    Upgrade: 'websocket'\n  };\n  opts.path = parsedUrl.pathname + parsedUrl.search;\n  opts.timeout = opts.handshakeTimeout;\n\n  if (opts.perMessageDeflate) {\n    perMessageDeflate = new PerMessageDeflate(\n      opts.perMessageDeflate !== true ? opts.perMessageDeflate : {},\n      false,\n      opts.maxPayload\n    );\n    opts.headers['Sec-WebSocket-Extensions'] = format({\n      [PerMessageDeflate.extensionName]: perMessageDeflate.offer()\n    });\n  }\n  if (protocols.length) {\n    for (const protocol of protocols) {\n      if (\n        typeof protocol !== 'string' ||\n        !subprotocolRegex.test(protocol) ||\n        protocolSet.has(protocol)\n      ) {\n        throw new SyntaxError(\n          'An invalid or duplicated subprotocol was specified'\n        );\n      }\n\n      protocolSet.add(protocol);\n    }\n\n    opts.headers['Sec-WebSocket-Protocol'] = protocols.join(',');\n  }\n  if (opts.origin) {\n    if (opts.protocolVersion < 13) {\n      opts.headers['Sec-WebSocket-Origin'] = opts.origin;\n    } else {\n      opts.headers.Origin = opts.origin;\n    }\n  }\n  if (parsedUrl.username || parsedUrl.password) {\n    opts.auth = `${parsedUrl.username}:${parsedUrl.password}`;\n  }\n\n  if (isUnixSocket) {\n    const parts = opts.path.split(':');\n\n    opts.socketPath = parts[0];\n    opts.path = parts[1];\n  }\n\n  let req;\n\n  if (opts.followRedirects) {\n    if (websocket._redirects === 0) {\n      websocket._originalUnixSocket = isUnixSocket;\n      websocket._originalSecure = isSecure;\n      websocket._originalHostOrSocketPath = isUnixSocket\n        ? opts.socketPath\n        : parsedUrl.host;\n\n      const headers = options && options.headers;\n\n      //\n      // Shallow copy the user provided options so that headers can be changed\n      // without mutating the original object.\n      //\n      options = { ...options, headers: {} };\n\n      if (headers) {\n        for (const [key, value] of Object.entries(headers)) {\n          options.headers[key.toLowerCase()] = value;\n        }\n      }\n    } else if (websocket.listenerCount('redirect') === 0) {\n      const isSameHost = isUnixSocket\n        ? websocket._originalUnixSocket\n          ? opts.socketPath === websocket._originalHostOrSocketPath\n          : false\n        : websocket._originalUnixSocket\n        ? false\n        : parsedUrl.host === websocket._originalHostOrSocketPath;\n\n      if (!isSameHost || (websocket._originalSecure && !isSecure)) {\n        //\n        // Match curl 7.77.0 behavior and drop the following headers. These\n        // headers are also dropped when following a redirect to a subdomain.\n        //\n        delete opts.headers.authorization;\n        delete opts.headers.cookie;\n\n        if (!isSameHost) delete opts.headers.host;\n\n        opts.auth = undefined;\n      }\n    }\n\n    //\n    // Match curl 7.77.0 behavior and make the first `Authorization` header win.\n    // If the `Authorization` header is set, then there is nothing to do as it\n    // will take precedence.\n    //\n    if (opts.auth && !options.headers.authorization) {\n      options.headers.authorization =\n        'Basic ' + Buffer.from(opts.auth).toString('base64');\n    }\n\n    req = websocket._req = request(opts);\n\n    if (websocket._redirects) {\n      //\n      // Unlike what is done for the `'upgrade'` event, no early exit is\n      // triggered here if the user calls `websocket.close()` or\n      // `websocket.terminate()` from a listener of the `'redirect'` event. This\n      // is because the user can also call `request.destroy()` with an error\n      // before calling `websocket.close()` or `websocket.terminate()` and this\n      // would result in an error being emitted on the `request` object with no\n      // `'error'` event listeners attached.\n      //\n      websocket.emit('redirect', websocket.url, req);\n    }\n  } else {\n    req = websocket._req = request(opts);\n  }\n\n  if (opts.timeout) {\n    req.on('timeout', () => {\n      abortHandshake(websocket, req, 'Opening handshake has timed out');\n    });\n  }\n\n  req.on('error', (err) => {\n    if (req === null || req[kAborted]) return;\n\n    req = websocket._req = null;\n    emitErrorAndClose(websocket, err);\n  });\n\n  req.on('response', (res) => {\n    const location = res.headers.location;\n    const statusCode = res.statusCode;\n\n    if (\n      location &&\n      opts.followRedirects &&\n      statusCode >= 300 &&\n      statusCode < 400\n    ) {\n      if (++websocket._redirects > opts.maxRedirects) {\n        abortHandshake(websocket, req, 'Maximum redirects exceeded');\n        return;\n      }\n\n      req.abort();\n\n      let addr;\n\n      try {\n        addr = new URL(location, address);\n      } catch (e) {\n        const err = new SyntaxError(`Invalid URL: ${location}`);\n        emitErrorAndClose(websocket, err);\n        return;\n      }\n\n      initAsClient(websocket, addr, protocols, options);\n    } else if (!websocket.emit('unexpected-response', req, res)) {\n      abortHandshake(\n        websocket,\n        req,\n        `Unexpected server response: ${res.statusCode}`\n      );\n    }\n  });\n\n  req.on('upgrade', (res, socket, head) => {\n    websocket.emit('upgrade', res);\n\n    //\n    // The user may have closed the connection from a listener of the\n    // `'upgrade'` event.\n    //\n    if (websocket.readyState !== WebSocket.CONNECTING) return;\n\n    req = websocket._req = null;\n\n    if (res.headers.upgrade.toLowerCase() !== 'websocket') {\n      abortHandshake(websocket, socket, 'Invalid Upgrade header');\n      return;\n    }\n\n    const digest = createHash('sha1')\n      .update(key + GUID)\n      .digest('base64');\n\n    if (res.headers['sec-websocket-accept'] !== digest) {\n      abortHandshake(websocket, socket, 'Invalid Sec-WebSocket-Accept header');\n      return;\n    }\n\n    const serverProt = res.headers['sec-websocket-protocol'];\n    let protError;\n\n    if (serverProt !== undefined) {\n      if (!protocolSet.size) {\n        protError = 'Server sent a subprotocol but none was requested';\n      } else if (!protocolSet.has(serverProt)) {\n        protError = 'Server sent an invalid subprotocol';\n      }\n    } else if (protocolSet.size) {\n      protError = 'Server sent no subprotocol';\n    }\n\n    if (protError) {\n      abortHandshake(websocket, socket, protError);\n      return;\n    }\n\n    if (serverProt) websocket._protocol = serverProt;\n\n    const secWebSocketExtensions = res.headers['sec-websocket-extensions'];\n\n    if (secWebSocketExtensions !== undefined) {\n      if (!perMessageDeflate) {\n        const message =\n          'Server sent a Sec-WebSocket-Extensions header but no extension ' +\n          'was requested';\n        abortHandshake(websocket, socket, message);\n        return;\n      }\n\n      let extensions;\n\n      try {\n        extensions = parse(secWebSocketExtensions);\n      } catch (err) {\n        const message = 'Invalid Sec-WebSocket-Extensions header';\n        abortHandshake(websocket, socket, message);\n        return;\n      }\n\n      const extensionNames = Object.keys(extensions);\n\n      if (\n        extensionNames.length !== 1 ||\n        extensionNames[0] !== PerMessageDeflate.extensionName\n      ) {\n        const message = 'Server indicated an extension that was not requested';\n        abortHandshake(websocket, socket, message);\n        return;\n      }\n\n      try {\n        perMessageDeflate.accept(extensions[PerMessageDeflate.extensionName]);\n      } catch (err) {\n        const message = 'Invalid Sec-WebSocket-Extensions header';\n        abortHandshake(websocket, socket, message);\n        return;\n      }\n\n      websocket._extensions[PerMessageDeflate.extensionName] =\n        perMessageDeflate;\n    }\n\n    websocket.setSocket(socket, head, {\n      generateMask: opts.generateMask,\n      maxPayload: opts.maxPayload,\n      skipUTF8Validation: opts.skipUTF8Validation\n    });\n  });\n\n  req.end();\n}\n\n/**\n * Emit the `'error'` and `'close'` events.\n *\n * @param {WebSocket} websocket The WebSocket instance\n * @param {Error} The error to emit\n * @private\n */\nfunction emitErrorAndClose(websocket, err) {\n  websocket._readyState = WebSocket.CLOSING;\n  websocket.emit('error', err);\n  websocket.emitClose();\n}\n\n/**\n * Create a `net.Socket` and initiate a connection.\n *\n * @param {Object} options Connection options\n * @return {net.Socket} The newly created socket used to start the connection\n * @private\n */\nfunction netConnect(options) {\n  options.path = options.socketPath;\n  return net.connect(options);\n}\n\n/**\n * Create a `tls.TLSSocket` and initiate a connection.\n *\n * @param {Object} options Connection options\n * @return {tls.TLSSocket} The newly created socket used to start the connection\n * @private\n */\nfunction tlsConnect(options) {\n  options.path = undefined;\n\n  if (!options.servername && options.servername !== '') {\n    options.servername = net.isIP(options.host) ? '' : options.host;\n  }\n\n  return tls.connect(options);\n}\n\n/**\n * Abort the handshake and emit an error.\n *\n * @param {WebSocket} websocket The WebSocket instance\n * @param {(http.ClientRequest|net.Socket|tls.Socket)} stream The request to\n *     abort or the socket to destroy\n * @param {String} message The error message\n * @private\n */\nfunction abortHandshake(websocket, stream, message) {\n  websocket._readyState = WebSocket.CLOSING;\n\n  const err = new Error(message);\n  Error.captureStackTrace(err, abortHandshake);\n\n  if (stream.setHeader) {\n    stream[kAborted] = true;\n    stream.abort();\n\n    if (stream.socket && !stream.socket.destroyed) {\n      //\n      // On Node.js >= 14.3.0 `request.abort()` does not destroy the socket if\n      // called after the request completed. See\n      // https://github.com/websockets/ws/issues/1869.\n      //\n      stream.socket.destroy();\n    }\n\n    process.nextTick(emitErrorAndClose, websocket, err);\n  } else {\n    stream.destroy(err);\n    stream.once('error', websocket.emit.bind(websocket, 'error'));\n    stream.once('close', websocket.emitClose.bind(websocket));\n  }\n}\n\n/**\n * Handle cases where the `ping()`, `pong()`, or `send()` methods are called\n * when the `readyState` attribute is `CLOSING` or `CLOSED`.\n *\n * @param {WebSocket} websocket The WebSocket instance\n * @param {*} [data] The data to send\n * @param {Function} [cb] Callback\n * @private\n */\nfunction sendAfterClose(websocket, data, cb) {\n  if (data) {\n    const length = toBuffer(data).length;\n\n    //\n    // The `_bufferedAmount` property is used only when the peer is a client and\n    // the opening handshake fails. Under these circumstances, in fact, the\n    // `setSocket()` method is not called, so the `_socket` and `_sender`\n    // properties are set to `null`.\n    //\n    if (websocket._socket) websocket._sender._bufferedBytes += length;\n    else websocket._bufferedAmount += length;\n  }\n\n  if (cb) {\n    const err = new Error(\n      `WebSocket is not open: readyState ${websocket.readyState} ` +\n        `(${readyStates[websocket.readyState]})`\n    );\n    cb(err);\n  }\n}\n\n/**\n * The listener of the `Receiver` `'conclude'` event.\n *\n * @param {Number} code The status code\n * @param {Buffer} reason The reason for closing\n * @private\n */\nfunction receiverOnConclude(code, reason) {\n  const websocket = this[kWebSocket];\n\n  websocket._closeFrameReceived = true;\n  websocket._closeMessage = reason;\n  websocket._closeCode = code;\n\n  if (websocket._socket[kWebSocket] === undefined) return;\n\n  websocket._socket.removeListener('data', socketOnData);\n  process.nextTick(resume, websocket._socket);\n\n  if (code === 1005) websocket.close();\n  else websocket.close(code, reason);\n}\n\n/**\n * The listener of the `Receiver` `'drain'` event.\n *\n * @private\n */\nfunction receiverOnDrain() {\n  const websocket = this[kWebSocket];\n\n  if (!websocket.isPaused) websocket._socket.resume();\n}\n\n/**\n * The listener of the `Receiver` `'error'` event.\n *\n * @param {(RangeError|Error)} err The emitted error\n * @private\n */\nfunction receiverOnError(err) {\n  const websocket = this[kWebSocket];\n\n  if (websocket._socket[kWebSocket] !== undefined) {\n    websocket._socket.removeListener('data', socketOnData);\n\n    //\n    // On Node.js < 14.0.0 the `'error'` event is emitted synchronously. See\n    // https://github.com/websockets/ws/issues/1940.\n    //\n    process.nextTick(resume, websocket._socket);\n\n    websocket.close(err[kStatusCode]);\n  }\n\n  websocket.emit('error', err);\n}\n\n/**\n * The listener of the `Receiver` `'finish'` event.\n *\n * @private\n */\nfunction receiverOnFinish() {\n  this[kWebSocket].emitClose();\n}\n\n/**\n * The listener of the `Receiver` `'message'` event.\n *\n * @param {Buffer|ArrayBuffer|Buffer[])} data The message\n * @param {Boolean} isBinary Specifies whether the message is binary or not\n * @private\n */\nfunction receiverOnMessage(data, isBinary) {\n  this[kWebSocket].emit('message', data, isBinary);\n}\n\n/**\n * The listener of the `Receiver` `'ping'` event.\n *\n * @param {Buffer} data The data included in the ping frame\n * @private\n */\nfunction receiverOnPing(data) {\n  const websocket = this[kWebSocket];\n\n  websocket.pong(data, !websocket._isServer, NOOP);\n  websocket.emit('ping', data);\n}\n\n/**\n * The listener of the `Receiver` `'pong'` event.\n *\n * @param {Buffer} data The data included in the pong frame\n * @private\n */\nfunction receiverOnPong(data) {\n  this[kWebSocket].emit('pong', data);\n}\n\n/**\n * Resume a readable stream\n *\n * @param {Readable} stream The readable stream\n * @private\n */\nfunction resume(stream) {\n  stream.resume();\n}\n\n/**\n * The listener of the `net.Socket` `'close'` event.\n *\n * @private\n */\nfunction socketOnClose() {\n  const websocket = this[kWebSocket];\n\n  this.removeListener('close', socketOnClose);\n  this.removeListener('data', socketOnData);\n  this.removeListener('end', socketOnEnd);\n\n  websocket._readyState = WebSocket.CLOSING;\n\n  let chunk;\n\n  //\n  // The close frame might not have been received or the `'end'` event emitted,\n  // for example, if the socket was destroyed due to an error. Ensure that the\n  // `receiver` stream is closed after writing any remaining buffered data to\n  // it. If the readable side of the socket is in flowing mode then there is no\n  // buffered data as everything has been already written and `readable.read()`\n  // will return `null`. If instead, the socket is paused, any possible buffered\n  // data will be read as a single chunk.\n  //\n  if (\n    !this._readableState.endEmitted &&\n    !websocket._closeFrameReceived &&\n    !websocket._receiver._writableState.errorEmitted &&\n    (chunk = websocket._socket.read()) !== null\n  ) {\n    websocket._receiver.write(chunk);\n  }\n\n  websocket._receiver.end();\n\n  this[kWebSocket] = undefined;\n\n  clearTimeout(websocket._closeTimer);\n\n  if (\n    websocket._receiver._writableState.finished ||\n    websocket._receiver._writableState.errorEmitted\n  ) {\n    websocket.emitClose();\n  } else {\n    websocket._receiver.on('error', receiverOnFinish);\n    websocket._receiver.on('finish', receiverOnFinish);\n  }\n}\n\n/**\n * The listener of the `net.Socket` `'data'` event.\n *\n * @param {Buffer} chunk A chunk of data\n * @private\n */\nfunction socketOnData(chunk) {\n  if (!this[kWebSocket]._receiver.write(chunk)) {\n    this.pause();\n  }\n}\n\n/**\n * The listener of the `net.Socket` `'end'` event.\n *\n * @private\n */\nfunction socketOnEnd() {\n  const websocket = this[kWebSocket];\n\n  websocket._readyState = WebSocket.CLOSING;\n  websocket._receiver.end();\n  this.end();\n}\n\n/**\n * The listener of the `net.Socket` `'error'` event.\n *\n * @private\n */\nfunction socketOnError() {\n  const websocket = this[kWebSocket];\n\n  this.removeListener('error', socketOnError);\n  this.on('error', NOOP);\n\n  if (websocket) {\n    websocket._readyState = WebSocket.CLOSING;\n    this.destroy();\n  }\n}\n","module.exports = require(\"async_hooks\");","module.exports = require(\"buffer\");","module.exports = require(\"crypto\");","module.exports = require(\"events\");","module.exports = require(\"fs\");","module.exports = require(\"fs/promises\");","module.exports = require(\"http\");","module.exports = require(\"https\");","module.exports = require(\"net\");","module.exports = require(\"node:os\");","module.exports = require(\"node:process\");","module.exports = require(\"node:tty\");","module.exports = require(\"os\");","module.exports = require(\"path\");","module.exports = require(\"querystring\");","module.exports = require(\"stream\");","module.exports = require(\"string_decoder\");","module.exports = require(\"tls\");","module.exports = require(\"tty\");","module.exports = require(\"url\");","module.exports = require(\"util\");","module.exports = require(\"zlib\");","export type Pos = {\n  start: number;\n};\n\n// These are used when `options.locations` is on, for the\n// `startLoc` and `endLoc` properties.\n\nexport class Position {\n  line: number;\n  column: number;\n  index: number;\n\n  constructor(line: number, col: number, index: number) {\n    this.line = line;\n    this.column = col;\n    this.index = index;\n  }\n}\n\nexport class SourceLocation {\n  start: Position;\n  end: Position;\n  filename: string;\n  identifierName: string | undefined | null;\n\n  constructor(start: Position, end?: Position) {\n    this.start = start;\n    // (may start as null, but initialized later)\n    this.end = end;\n  }\n}\n\n/**\n * creates a new position with a non-zero column offset from the given position.\n * This function should be only be used when we create AST node out of the token\n * boundaries, such as TemplateElement ends before tt.templateNonTail. This\n * function does not skip whitespaces.\n *\n * @export\n * @param {Position} position\n * @param {number} columnOffset\n * @returns {Position}\n */\nexport function createPositionWithColumnOffset(\n  position: Position,\n  columnOffset: number,\n) {\n  const { line, column, index } = position;\n  return new Position(line, column + columnOffset, index + columnOffset);\n}\n","export const enum ParseErrorCode {\n  SyntaxError = \"BABEL_PARSER_SYNTAX_ERROR\",\n  SourceTypeModuleError = \"BABEL_PARSER_SOURCETYPE_MODULE_REQUIRED\",\n}\n\nexport type SyntaxPlugin =\n  | \"flow\"\n  | \"typescript\"\n  | \"jsx\"\n  | \"pipelineOperator\"\n  | \"placeholders\";\n\nexport type ToMessage<ErrorDetails> = (self: ErrorDetails) => string;\n\nexport type ParseErrorCredentials<ErrorDetails> = {\n  code: ParseErrorCode;\n  reasonCode: string;\n  syntaxPlugin?: SyntaxPlugin;\n  toMessage: ToMessage<ErrorDetails>;\n};\n\nconst reflect = (keys: string[], last = keys.length - 1) => ({\n  get(this: unknown): unknown {\n    return keys.reduce(\n      (object, key) =>\n        // @ts-expect-error key should index object\n        object[key],\n      this,\n    );\n  },\n  set(this: unknown, value: unknown) {\n    keys.reduce(\n      // @ts-expect-error key should index item\n      (item, key, i) => (i === last ? (item[key] = value) : item[key]),\n      this,\n    );\n  },\n});\n\nconst instantiate = <T>(\n  constructor: new () => T,\n  properties: any,\n  descriptors: any,\n) =>\n  Object.keys(descriptors)\n    .map(key => [key, descriptors[key]])\n    .filter(([, descriptor]) => !!descriptor)\n    .map(([key, descriptor]) => [\n      key,\n      typeof descriptor === \"function\"\n        ? { value: descriptor, enumerable: false }\n        : typeof descriptor.reflect === \"string\"\n        ? { ...descriptor, ...reflect(descriptor.reflect.split(\".\")) }\n        : descriptor,\n    ])\n    .reduce(\n      (instance, [key, descriptor]) =>\n        Object.defineProperty(instance, key, {\n          configurable: true,\n          ...descriptor,\n        }),\n      Object.assign(new constructor(), properties),\n    );\n\nexport { instantiate };\n","import { ParseErrorCode } from \"../parse-error\";\n\nexport default {\n  ImportMetaOutsideModule: {\n    message: `import.meta may appear only with 'sourceType: \"module\"'`,\n    code: ParseErrorCode.SourceTypeModuleError,\n  },\n  ImportOutsideModule: {\n    message: `'import' and 'export' may appear only with 'sourceType: \"module\"'`,\n    code: ParseErrorCode.SourceTypeModuleError,\n  },\n};\n","const NodeDescriptions = {\n  ArrayPattern: \"array destructuring pattern\",\n  AssignmentExpression: \"assignment expression\",\n  AssignmentPattern: \"assignment expression\",\n  ArrowFunctionExpression: \"arrow function expression\",\n  ConditionalExpression: \"conditional expression\",\n  CatchClause: \"catch clause\",\n  ForOfStatement: \"for-of statement\",\n  ForInStatement: \"for-in statement\",\n  ForStatement: \"for-loop\",\n  FormalParameters: \"function parameter list\",\n  Identifier: \"identifier\",\n  ImportSpecifier: \"import specifier\",\n  ImportDefaultSpecifier: \"import default specifier\",\n  ImportNamespaceSpecifier: \"import namespace specifier\",\n  ObjectPattern: \"object destructuring pattern\",\n  ParenthesizedExpression: \"parenthesized expression\",\n  RestElement: \"rest element\",\n  UpdateExpression: {\n    true: \"prefix operation\",\n    false: \"postfix operation\",\n  },\n  VariableDeclarator: \"variable declaration\",\n  YieldExpression: \"yield expression\",\n};\n\ntype NodeTypesWithDescriptions = keyof Omit<\n  typeof NodeDescriptions,\n  \"UpdateExpression\"\n>;\n\ntype NodeWithDescription =\n  | {\n      type: \"UpdateExpression\";\n      prefix: boolean;\n    }\n  | {\n      type: NodeTypesWithDescriptions;\n    };\n\n// @ts-expect-error prefix is specified only when type is UpdateExpression\n// eslint-disable-next-line no-confusing-arrow\nconst toNodeDescription = ({ type, prefix }: NodeWithDescription) =>\n  type === \"UpdateExpression\"\n    ? NodeDescriptions.UpdateExpression[String(prefix) as \"true\" | \"false\"]\n    : NodeDescriptions[type];\n\nexport default toNodeDescription;\n","import toNodeDescription from \"./to-node-description\";\n\nexport type LValAncestor =\n  | { type: \"UpdateExpression\"; prefix: boolean }\n  | {\n      type:\n        | \"ArrayPattern\"\n        | \"AssignmentExpression\"\n        | \"CatchClause\"\n        | \"ForOfStatement\"\n        | \"FormalParameters\"\n        | \"ForInStatement\"\n        | \"ForStatement\"\n        | \"ImportSpecifier\"\n        | \"ImportNamespaceSpecifier\"\n        | \"ImportDefaultSpecifier\"\n        | \"ObjectPattern\"\n        | \"RestElement\"\n        | \"VariableDeclarator\";\n    };\n\nexport default {\n  AccessorIsGenerator: ({ kind }: { kind: \"get\" | \"set\" }) =>\n    `A ${kind}ter cannot be a generator.`,\n  ArgumentsInClass:\n    \"'arguments' is only allowed in functions and class methods.\",\n  AsyncFunctionInSingleStatementContext:\n    \"Async functions can only be declared at the top level or inside a block.\",\n  AwaitBindingIdentifier:\n    \"Can not use 'await' as identifier inside an async function.\",\n  AwaitBindingIdentifierInStaticBlock:\n    \"Can not use 'await' as identifier inside a static block.\",\n  AwaitExpressionFormalParameter:\n    \"'await' is not allowed in async function parameters.\",\n  AwaitNotInAsyncContext:\n    \"'await' is only allowed within async functions and at the top levels of modules.\",\n  AwaitNotInAsyncFunction: \"'await' is only allowed within async functions.\",\n  BadGetterArity: \"A 'get' accesor must not have any formal parameters.\",\n  BadSetterArity: \"A 'set' accesor must have exactly one formal parameter.\",\n  BadSetterRestParameter:\n    \"A 'set' accesor function argument must not be a rest parameter.\",\n  ConstructorClassField: \"Classes may not have a field named 'constructor'.\",\n  ConstructorClassPrivateField:\n    \"Classes may not have a private field named '#constructor'.\",\n  ConstructorIsAccessor: \"Class constructor may not be an accessor.\",\n  ConstructorIsAsync: \"Constructor can't be an async function.\",\n  ConstructorIsGenerator: \"Constructor can't be a generator.\",\n  DeclarationMissingInitializer: ({\n    kind,\n  }: {\n    kind: \"const\" | \"destructuring\";\n  }) => `Missing initializer in ${kind} declaration.`,\n  DecoratorBeforeExport:\n    \"Decorators must be placed *before* the 'export' keyword. You can set the 'decoratorsBeforeExport' option to false to use the 'export @decorator class {}' syntax.\",\n  DecoratorConstructor:\n    \"Decorators can't be used with a constructor. Did you mean '@dec class { ... }'?\",\n  DecoratorExportClass:\n    \"Using the export keyword between a decorator and a class is not allowed. Please use `export @dec class` instead.\",\n  DecoratorSemicolon: \"Decorators must not be followed by a semicolon.\",\n  DecoratorStaticBlock: \"Decorators can't be used with a static block.\",\n  DeletePrivateField: \"Deleting a private field is not allowed.\",\n  DestructureNamedImport:\n    \"ES2015 named imports do not destructure. Use another statement for destructuring after the import.\",\n  DuplicateConstructor: \"Duplicate constructor in the same class.\",\n  DuplicateDefaultExport: \"Only one default export allowed per module.\",\n  DuplicateExport: ({ exportName }: { exportName: string }) =>\n    `\\`${exportName}\\` has already been exported. Exported identifiers must be unique.`,\n  DuplicateProto: \"Redefinition of __proto__ property.\",\n  DuplicateRegExpFlags: \"Duplicate regular expression flag.\",\n  ElementAfterRest: \"Rest element must be last element.\",\n  EscapedCharNotAnIdentifier: \"Invalid Unicode escape.\",\n  ExportBindingIsString: ({\n    localName,\n    exportName,\n  }: {\n    localName: string;\n    exportName: string;\n  }) =>\n    `A string literal cannot be used as an exported binding without \\`from\\`.\\n- Did you mean \\`export { '${localName}' as '${exportName}' } from 'some-module'\\`?`,\n  ExportDefaultFromAsIdentifier:\n    \"'from' is not allowed as an identifier after 'export default'.\",\n\n  ForInOfLoopInitializer: ({\n    type,\n  }: {\n    type: \"ForInStatement\" | \"ForOfStatement\";\n  }) =>\n    `'${\n      type === \"ForInStatement\" ? \"for-in\" : \"for-of\"\n    }' loop variable declaration may not have an initializer.`,\n\n  ForOfAsync: \"The left-hand side of a for-of loop may not be 'async'.\",\n  ForOfLet: \"The left-hand side of a for-of loop may not start with 'let'.\",\n  GeneratorInSingleStatementContext:\n    \"Generators can only be declared at the top level or inside a block.\",\n\n  IllegalBreakContinue: ({\n    type,\n  }: {\n    type: \"BreakStatement\" | \"ContinueStatement\";\n  }) => `Unsyntactic ${type === \"BreakStatement\" ? \"break\" : \"continue\"}.`,\n\n  IllegalLanguageModeDirective:\n    \"Illegal 'use strict' directive in function with non-simple parameter list.\",\n  IllegalReturn: \"'return' outside of function.\",\n  ImportBindingIsString: ({ importName }: { importName: string }) =>\n    `A string literal cannot be used as an imported binding.\\n- Did you mean \\`import { \"${importName}\" as foo }\\`?`,\n  ImportCallArgumentTrailingComma:\n    \"Trailing comma is disallowed inside import(...) arguments.\",\n  ImportCallArity: ({ maxArgumentCount }: { maxArgumentCount: 1 | 2 }) =>\n    `\\`import()\\` requires exactly ${\n      maxArgumentCount === 1 ? \"one argument\" : \"one or two arguments\"\n    }.`,\n  ImportCallNotNewExpression: \"Cannot use new with import(...).\",\n  ImportCallSpreadArgument: \"`...` is not allowed in `import()`.\",\n  ImportJSONBindingNotDefault:\n    \"A JSON module can only be imported with `default`.\",\n  IncompatibleRegExpUVFlags:\n    \"The 'u' and 'v' regular expression flags cannot be enabled at the same time.\",\n  InvalidBigIntLiteral: \"Invalid BigIntLiteral.\",\n  InvalidCodePoint: \"Code point out of bounds.\",\n  InvalidCoverInitializedName: \"Invalid shorthand property initializer.\",\n  InvalidDecimal: \"Invalid decimal.\",\n  InvalidDigit: ({ radix }: { radix: number }) =>\n    `Expected number in radix ${radix}.`,\n  InvalidEscapeSequence: \"Bad character escape sequence.\",\n  InvalidEscapeSequenceTemplate: \"Invalid escape sequence in template.\",\n  InvalidEscapedReservedWord: ({ reservedWord }: { reservedWord: string }) =>\n    `Escape sequence in keyword ${reservedWord}.`,\n  InvalidIdentifier: ({ identifierName }: { identifierName: string }) =>\n    `Invalid identifier ${identifierName}.`,\n  InvalidLhs: ({ ancestor }: { ancestor: LValAncestor }) =>\n    `Invalid left-hand side in ${toNodeDescription(ancestor)}.`,\n  InvalidLhsBinding: ({ ancestor }: { ancestor: LValAncestor }) =>\n    `Binding invalid left-hand side in ${toNodeDescription(ancestor)}.`,\n  InvalidNumber: \"Invalid number.\",\n  InvalidOrMissingExponent:\n    \"Floating-point numbers require a valid exponent after the 'e'.\",\n  InvalidOrUnexpectedToken: ({ unexpected }: { unexpected: string }) =>\n    `Unexpected character '${unexpected}'.`,\n  InvalidParenthesizedAssignment: \"Invalid parenthesized assignment pattern.\",\n  InvalidPrivateFieldResolution: ({\n    identifierName,\n  }: {\n    identifierName: string;\n  }) => `Private name #${identifierName} is not defined.`,\n  InvalidPropertyBindingPattern: \"Binding member expression.\",\n  InvalidRecordProperty:\n    \"Only properties and spread elements are allowed in record definitions.\",\n  InvalidRestAssignmentPattern: \"Invalid rest operator's argument.\",\n  LabelRedeclaration: ({ labelName }: { labelName: string }) =>\n    `Label '${labelName}' is already declared.`,\n  LetInLexicalBinding:\n    \"'let' is not allowed to be used as a name in 'let' or 'const' declarations.\",\n  LineTerminatorBeforeArrow: \"No line break is allowed before '=>'.\",\n  MalformedRegExpFlags: \"Invalid regular expression flag.\",\n  MissingClassName: \"A class name is required.\",\n  MissingEqInAssignment:\n    \"Only '=' operator can be used for specifying default value.\",\n  MissingSemicolon: \"Missing semicolon.\",\n  MissingPlugin: ({ missingPlugin }: { missingPlugin: [string] }) =>\n    `This experimental syntax requires enabling the parser plugin: ${missingPlugin\n      .map(name => JSON.stringify(name))\n      .join(\", \")}.`,\n  // FIXME: Would be nice to make this \"missingPlugins\" instead.\n  // Also, seems like we can drop the \"(s)\" from the message and just make it \"s\".\n  MissingOneOfPlugins: ({ missingPlugin }: { missingPlugin: string[] }) =>\n    `This experimental syntax requires enabling one of the following parser plugin(s): ${missingPlugin\n      .map(name => JSON.stringify(name))\n      .join(\", \")}.`,\n  MissingUnicodeEscape: \"Expecting Unicode escape sequence \\\\uXXXX.\",\n  MixingCoalesceWithLogical:\n    \"Nullish coalescing operator(??) requires parens when mixing with logical operators.\",\n  ModuleAttributeDifferentFromType:\n    \"The only accepted module attribute is `type`.\",\n  ModuleAttributeInvalidValue:\n    \"Only string literals are allowed as module attribute values.\",\n  ModuleAttributesWithDuplicateKeys: ({ key }: { key: string }) =>\n    `Duplicate key \"${key}\" is not allowed in module attributes.`,\n  ModuleExportNameHasLoneSurrogate: ({\n    surrogateCharCode,\n  }: {\n    surrogateCharCode: number;\n  }) =>\n    `An export name cannot include a lone surrogate, found '\\\\u${surrogateCharCode.toString(\n      16,\n    )}'.`,\n  ModuleExportUndefined: ({ localName }: { localName: string }) =>\n    `Export '${localName}' is not defined.`,\n  MultipleDefaultsInSwitch: \"Multiple default clauses.\",\n  NewlineAfterThrow: \"Illegal newline after throw.\",\n  NoCatchOrFinally: \"Missing catch or finally clause.\",\n  NumberIdentifier: \"Identifier directly after number.\",\n  NumericSeparatorInEscapeSequence:\n    \"Numeric separators are not allowed inside unicode escape sequences or hex escape sequences.\",\n  ObsoleteAwaitStar:\n    \"'await*' has been removed from the async functions proposal. Use Promise.all() instead.\",\n  OptionalChainingNoNew:\n    \"Constructors in/after an Optional Chain are not allowed.\",\n  OptionalChainingNoTemplate:\n    \"Tagged Template Literals are not allowed in optionalChain.\",\n  OverrideOnConstructor:\n    \"'override' modifier cannot appear on a constructor declaration.\",\n  ParamDupe: \"Argument name clash.\",\n  PatternHasAccessor: \"Object pattern can't contain getter or setter.\",\n  PatternHasMethod: \"Object pattern can't contain methods.\",\n  PrivateInExpectedIn: ({ identifierName }: { identifierName: string }) =>\n    `Private names are only allowed in property accesses (\\`obj.#${identifierName}\\`) or in \\`in\\` expressions (\\`#${identifierName} in obj\\`).`,\n  PrivateNameRedeclaration: ({ identifierName }: { identifierName: string }) =>\n    `Duplicate private name #${identifierName}.`,\n  RecordExpressionBarIncorrectEndSyntaxType:\n    \"Record expressions ending with '|}' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'bar'.\",\n  RecordExpressionBarIncorrectStartSyntaxType:\n    \"Record expressions starting with '{|' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'bar'.\",\n  RecordExpressionHashIncorrectStartSyntaxType:\n    \"Record expressions starting with '#{' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'hash'.\",\n  RecordNoProto: \"'__proto__' is not allowed in Record expressions.\",\n  RestTrailingComma: \"Unexpected trailing comma after rest element.\",\n  SloppyFunction:\n    \"In non-strict mode code, functions can only be declared at top level, inside a block, or as the body of an if statement.\",\n  StaticPrototype: \"Classes may not have static property named prototype.\",\n  SuperNotAllowed:\n    \"`super()` is only valid inside a class constructor of a subclass. Maybe a typo in the method name ('constructor') or not extending another class?\",\n  SuperPrivateField: \"Private fields can't be accessed on super.\",\n  TrailingDecorator: \"Decorators must be attached to a class element.\",\n  TupleExpressionBarIncorrectEndSyntaxType:\n    \"Tuple expressions ending with '|]' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'bar'.\",\n  TupleExpressionBarIncorrectStartSyntaxType:\n    \"Tuple expressions starting with '[|' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'bar'.\",\n  TupleExpressionHashIncorrectStartSyntaxType:\n    \"Tuple expressions starting with '#[' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'hash'.\",\n  UnexpectedArgumentPlaceholder: \"Unexpected argument placeholder.\",\n  UnexpectedAwaitAfterPipelineBody:\n    'Unexpected \"await\" after pipeline body; await must have parentheses in minimal proposal.',\n  UnexpectedDigitAfterHash: \"Unexpected digit after hash token.\",\n  UnexpectedImportExport:\n    \"'import' and 'export' may only appear at the top level.\",\n  UnexpectedKeyword: ({ keyword }: { keyword: string }) =>\n    `Unexpected keyword '${keyword}'.`,\n  UnexpectedLeadingDecorator:\n    \"Leading decorators must be attached to a class declaration.\",\n  UnexpectedLexicalDeclaration:\n    \"Lexical declaration cannot appear in a single-statement context.\",\n  UnexpectedNewTarget:\n    \"`new.target` can only be used in functions or class properties.\",\n  UnexpectedNumericSeparator:\n    \"A numeric separator is only allowed between two digits.\",\n  UnexpectedPrivateField: \"Unexpected private name.\",\n  UnexpectedReservedWord: ({ reservedWord }: { reservedWord: string }) =>\n    `Unexpected reserved word '${reservedWord}'.`,\n  UnexpectedSuper: \"'super' is only allowed in object methods and classes.\",\n  UnexpectedToken: ({\n    expected,\n    unexpected,\n  }: {\n    expected?: string | null;\n    unexpected?: string | null;\n  }) =>\n    `Unexpected token${unexpected ? ` '${unexpected}'.` : \"\"}${\n      expected ? `, expected \"${expected}\"` : \"\"\n    }`,\n  UnexpectedTokenUnaryExponentiation:\n    \"Illegal expression. Wrap left hand side or entire exponentiation in parentheses.\",\n  UnsupportedBind: \"Binding should be performed on object property.\",\n  UnsupportedDecoratorExport:\n    \"A decorated export must export a class declaration.\",\n  UnsupportedDefaultExport:\n    \"Only expressions, functions or classes are allowed as the `default` export.\",\n  UnsupportedImport:\n    \"`import` can only be used in `import()` or `import.meta`.\",\n  UnsupportedMetaProperty: ({\n    target,\n    onlyValidPropertyName,\n  }: {\n    target: string;\n    onlyValidPropertyName: string;\n  }) =>\n    `The only valid meta property for ${target} is ${target}.${onlyValidPropertyName}.`,\n  UnsupportedParameterDecorator:\n    \"Decorators cannot be used to decorate parameters.\",\n  UnsupportedPropertyDecorator:\n    \"Decorators cannot be used to decorate object literal properties.\",\n  UnsupportedSuper:\n    \"'super' can only be used with function calls (i.e. super()) or in property accesses (i.e. super.prop or super[prop]).\",\n  UnterminatedComment: \"Unterminated comment.\",\n  UnterminatedRegExp: \"Unterminated regular expression.\",\n  UnterminatedString: \"Unterminated string constant.\",\n  UnterminatedTemplate: \"Unterminated template.\",\n  VarRedeclaration: ({ identifierName }: { identifierName: string }) =>\n    `Identifier '${identifierName}' has already been declared.`,\n  YieldBindingIdentifier:\n    \"Can not use 'yield' as identifier inside a generator.\",\n  YieldInParameter: \"Yield expression is not allowed in formal parameters.\",\n  ZeroDigitNumericSeparator:\n    \"Numeric separator can not be used after leading 0.\",\n};\n","export default {\n  StrictDelete: \"Deleting local variable in strict mode.\",\n\n  // `referenceName` is the StringValue[1] of an IdentifierReference[2], which\n  // is represented as just an `Identifier`[3] in the Babel AST.\n  // 1. https://tc39.es/ecma262/#sec-static-semantics-stringvalue\n  // 2. https://tc39.es/ecma262/#prod-IdentifierReference\n  // 3. https://github.com/babel/babel/blob/main/packages/babel-parser/ast/spec.md#identifier\n  StrictEvalArguments: ({ referenceName }: { referenceName: string }) =>\n    `Assigning to '${referenceName}' in strict mode.`,\n\n  // `bindingName` is the StringValue[1] of a BindingIdentifier[2], which is\n  // represented as just an `Identifier`[3] in the Babel AST.\n  // 1. https://tc39.es/ecma262/#sec-static-semantics-stringvalue\n  // 2. https://tc39.es/ecma262/#prod-BindingIdentifier\n  // 3. https://github.com/babel/babel/blob/main/packages/babel-parser/ast/spec.md#identifier\n  StrictEvalArgumentsBinding: ({ bindingName }: { bindingName: string }) =>\n    `Binding '${bindingName}' in strict mode.`,\n\n  StrictFunction:\n    \"In strict mode code, functions can only be declared at top level or inside a block.\",\n\n  StrictNumericEscape: \"The only valid numeric escape in strict mode is '\\\\0'.\",\n\n  StrictOctalLiteral: \"Legacy octal literals are not allowed in strict mode.\",\n\n  StrictWith: \"'with' in strict mode.\",\n};\n","import toNodeDescription from \"./to-node-description\";\n\nexport const UnparenthesizedPipeBodyDescriptions = new Set([\n  \"ArrowFunctionExpression\",\n  \"AssignmentExpression\",\n  \"ConditionalExpression\",\n  \"YieldExpression\",\n] as const);\n\ntype GetSetMemberType<T extends Set<any>> = T extends Set<infer M>\n  ? M\n  : unknown;\n\ntype UnparanthesizedPipeBodyTypes = GetSetMemberType<\n  typeof UnparenthesizedPipeBodyDescriptions\n>;\n\nexport default {\n  // This error is only used by the smart-mix proposal\n  PipeBodyIsTighter:\n    \"Unexpected yield after pipeline body; any yield expression acting as Hack-style pipe body must be parenthesized due to its loose operator precedence.\",\n  PipeTopicRequiresHackPipes:\n    'Topic reference is used, but the pipelineOperator plugin was not passed a \"proposal\": \"hack\" or \"smart\" option.',\n  PipeTopicUnbound:\n    \"Topic reference is unbound; it must be inside a pipe body.\",\n  PipeTopicUnconfiguredToken: ({ token }: { token: string }) =>\n    `Invalid topic token ${token}. In order to use ${token} as a topic reference, the pipelineOperator plugin must be configured with { \"proposal\": \"hack\", \"topicToken\": \"${token}\" }.`,\n  PipeTopicUnused:\n    \"Hack-style pipe body does not contain a topic reference; Hack-style pipes must use topic at least once.\",\n  PipeUnparenthesizedBody: ({ type }: { type: UnparanthesizedPipeBodyTypes }) =>\n    `Hack-style pipe body cannot be an unparenthesized ${toNodeDescription({\n      type,\n    })}; please wrap it in parentheses.`,\n\n  // Messages whose codes start with “Pipeline” or “PrimaryTopic”\n  // are retained for backwards compatibility\n  // with the deprecated smart-mix pipe operator proposal plugin.\n  // They are subject to removal in a future major version.\n  PipelineBodyNoArrow:\n    'Unexpected arrow \"=>\" after pipeline body; arrow function in pipeline body must be parenthesized.',\n  PipelineBodySequenceExpression:\n    \"Pipeline body may not be a comma-separated sequence expression.\",\n  PipelineHeadSequenceExpression:\n    \"Pipeline head should not be a comma-separated sequence expression.\",\n  PipelineTopicUnused:\n    \"Pipeline is in topic style but does not use topic reference.\",\n  PrimaryTopicNotAllowed:\n    \"Topic reference was used in a lexical context without topic binding.\",\n  PrimaryTopicRequiresSmartPipeline:\n    'Topic reference is used, but the pipelineOperator plugin was not passed a \"proposal\": \"hack\" or \"smart\" option.',\n};\n","import { Position } from \"./util/location\";\nimport {\n  instantiate,\n  ParseErrorCode,\n  type ParseErrorCredentials,\n  type ToMessage,\n  type SyntaxPlugin,\n} from \"./parse-error/credentials\";\nimport type { Undone } from \"./parser/node\";\nimport type { Node } from \"./types\";\n\n// Babel uses \"normal\" SyntaxErrors for it's errors, but adds some extra\n// functionality. This functionality is defined in the\n// `ParseErrorSpecification` interface below. We may choose to change to someday\n// give our errors their own full-blown class, but until then this allow us to\n// keep all the desirable properties of SyntaxErrors (like their name in stack\n// traces, etc.), and also allows us to punt on any publicly facing\n// class-hierarchy decisions until Babel 8.\ninterface ParseErrorSpecification<ErrorDetails> {\n  // Look, these *could* be readonly, but then Flow complains when we initially\n  // set them. We could do a whole dance and make a special interface that's not\n  // readonly for when we create the error, then cast it to the readonly\n  // interface for public use, but the previous implementation didn't have them\n  // as readonly, so let's just not worry about it for now.\n  code: ParseErrorCode;\n  reasonCode: string;\n  syntaxPlugin?: SyntaxPlugin;\n  missingPlugin?: string | string[];\n  loc: Position;\n  details: ErrorDetails;\n\n  // We should consider removing this as it now just contains the same\n  // information as `loc.index`.\n  // pos: number;\n}\n\nexport type ParseError<ErrorDetails> = SyntaxError &\n  ParseErrorSpecification<ErrorDetails>;\n\n// By `ParseErrorConstructor`, we mean something like the new-less style\n// `ErrorConstructor`[1], since `ParseError`'s are not themselves actually\n// separate classes from `SyntaxError`'s.\n//\n// 1. https://github.com/microsoft/TypeScript/blob/v4.5.5/lib/lib.es5.d.ts#L1027\nexport type ParseErrorConstructor<ErrorDetails> = (a: {\n  loc: Position;\n  details: ErrorDetails;\n}) => ParseError<ErrorDetails>;\n\nfunction toParseErrorConstructor<ErrorDetails>({\n  toMessage,\n  ...properties\n}: ParseErrorCredentials<ErrorDetails>): ParseErrorConstructor<ErrorDetails> {\n  type ConstructorArgument = {\n    loc: Position;\n    details: ErrorDetails;\n  };\n\n  return function constructor({ loc, details }: ConstructorArgument) {\n    return instantiate(\n      SyntaxError,\n      { ...properties, loc },\n      {\n        clone(\n          overrides: {\n            loc?: Position;\n            details?: ErrorDetails;\n          } = {},\n        ) {\n          const loc = (overrides.loc || {}) as Partial<Position>;\n          return constructor({\n            loc: new Position(\n              \"line\" in loc ? loc.line : this.loc.line,\n              \"column\" in loc ? loc.column : this.loc.column,\n              \"index\" in loc ? loc.index : this.loc.index,\n            ),\n            details: { ...this.details, ...overrides.details },\n          });\n        },\n        details: { value: details, enumerable: false },\n        message: {\n          get(this: ConstructorArgument): string {\n            return `${toMessage(this.details)} (${this.loc.line}:${\n              this.loc.column\n            })`;\n          },\n          set(value: string) {\n            Object.defineProperty(this, \"message\", { value });\n          },\n        },\n        pos: { reflect: \"loc.index\", enumerable: true },\n        missingPlugin: \"missingPlugin\" in details && {\n          reflect: \"details.missingPlugin\",\n          enumerable: true,\n        },\n      },\n    ) as ParseError<ErrorDetails>;\n  };\n}\n\ntype ParseErrorTemplate =\n  | string\n  | ToMessage<any>\n  | { message: string | ToMessage<any> };\n\ntype ParseErrorTemplates = { [reasonCode: string]: ParseErrorTemplate };\n\n// This is the templated form of `ParseErrorEnum`.\n//\n// Note: We could factor out the return type calculation into something like\n// `ParseErrorConstructor<T extends ParseErrorTemplates>`, and then we could\n// reuse it in the non-templated form of `ParseErrorEnum`, but TypeScript\n// doesn't seem to drill down that far when showing you the computed type of\n// an object in an editor, so we'll leave it inlined for now.\nexport function ParseErrorEnum(a: TemplateStringsArray): <\n  T extends ParseErrorTemplates,\n>(\n  parseErrorTemplates: T,\n) => {\n  [K in keyof T]: ParseErrorConstructor<\n    T[K] extends { message: string | ToMessage<any> }\n      ? T[K][\"message\"] extends ToMessage<any>\n        ? Parameters<T[K][\"message\"]>[0]\n        : {}\n      : T[K] extends ToMessage<any>\n      ? Parameters<T[K]>[0]\n      : {}\n  >;\n};\n\nexport function ParseErrorEnum<T extends ParseErrorTemplates>(\n  parseErrorTemplates: T,\n  syntaxPlugin?: SyntaxPlugin,\n): {\n  [K in keyof T]: ParseErrorConstructor<\n    T[K] extends { message: string | ToMessage<any> }\n      ? T[K][\"message\"] extends ToMessage<any>\n        ? Parameters<T[K][\"message\"]>[0]\n        : {}\n      : T[K] extends ToMessage<any>\n      ? Parameters<T[K]>[0]\n      : {}\n  >;\n};\n\n// You call `ParseErrorEnum` with a mapping from `ReasonCode`'s to either:\n//\n// 1. a static error message,\n// 2. `toMessage` functions that define additional necessary `details` needed by\n//    the `ParseError`, or\n// 3. Objects that contain a `message` of one of the above and overridden `code`\n//    and/or `reasonCode`:\n//\n// ParseErrorEnum `optionalSyntaxPlugin` ({\n//   ErrorWithStaticMessage: \"message\",\n//   ErrorWithDynamicMessage: ({ type } : { type: string }) => `${type}`),\n//   ErrorWithOverriddenCodeAndOrReasonCode: {\n//     message: ({ type }: { type: string }) => `${type}`),\n//     code: ParseErrorCode.SourceTypeModuleError,\n//     ...(BABEL_8_BREAKING ? { } : { reasonCode: \"CustomErrorReasonCode\" })\n//   }\n// });\n//\nexport function ParseErrorEnum(\n  argument: TemplateStringsArray | ParseErrorTemplates,\n  syntaxPlugin?: SyntaxPlugin,\n) {\n  // If the first parameter is an array, that means we were called with a tagged\n  // template literal. Extract the syntaxPlugin from this, and call again in\n  // the \"normalized\" form.\n  if (Array.isArray(argument)) {\n    return (parseErrorTemplates: ParseErrorTemplates) =>\n      ParseErrorEnum(parseErrorTemplates, argument[0]);\n  }\n\n  const ParseErrorConstructors = {} as Record<\n    string,\n    ParseErrorConstructor<unknown>\n  >;\n\n  for (const reasonCode of Object.keys(argument)) {\n    const template = (argument as ParseErrorTemplates)[reasonCode];\n    const { message, ...rest } =\n      typeof template === \"string\"\n        ? { message: () => template }\n        : typeof template === \"function\"\n        ? { message: template }\n        : template;\n    const toMessage = typeof message === \"string\" ? () => message : message;\n\n    ParseErrorConstructors[reasonCode] = toParseErrorConstructor({\n      code: ParseErrorCode.SyntaxError,\n      reasonCode,\n      toMessage,\n      ...(syntaxPlugin ? { syntaxPlugin } : {}),\n      ...rest,\n    });\n  }\n\n  return ParseErrorConstructors;\n}\n\nexport type RaiseProperties<ErrorDetails> = {\n  at: Position | Undone<Node>;\n} & ErrorDetails;\n\nimport ModuleErrors from \"./parse-error/module-errors\";\nimport StandardErrors from \"./parse-error/standard-errors\";\nimport StrictModeErrors from \"./parse-error/strict-mode-errors\";\nimport PipelineOperatorErrors from \"./parse-error/pipeline-operator-errors\";\n\nexport const Errors = {\n  ...ParseErrorEnum(ModuleErrors),\n  ...ParseErrorEnum(StandardErrors),\n  ...ParseErrorEnum(StrictModeErrors),\n  ...ParseErrorEnum`pipelineOperator`(PipelineOperatorErrors),\n};\n\nexport type { LValAncestor } from \"./parse-error/standard-errors\";\n\nexport * from \"./parse-error/credentials\";\n","import { type TokenType } from \"../tokenizer/types\";\nimport type Parser from \"../parser\";\nimport type { ExpressionErrors } from \"../parser/util\";\nimport * as N from \"../types\";\nimport type { Node as NodeType, NodeBase, File } from \"../types\";\nimport type { Position } from \"../util/location\";\nimport { Errors } from \"../parse-error\";\nimport type { Undone } from \"../parser/node\";\nimport type { BindingTypes } from \"../util/scopeflags\";\n\nconst { defineProperty } = Object;\nconst toUnenumerable = (object: any, key: string) =>\n  defineProperty(object, key, { enumerable: false, value: object[key] });\n\nfunction toESTreeLocation(node: any) {\n  node.loc.start && toUnenumerable(node.loc.start, \"index\");\n  node.loc.end && toUnenumerable(node.loc.end, \"index\");\n\n  return node;\n}\n\nexport default (superClass: {\n  new (...args: any): Parser;\n}): {\n  new (...args: any): Parser;\n} =>\n  // @ts-expect-error plugin may override interfaces\n  class extends superClass {\n    parse(): File {\n      const file = toESTreeLocation(super.parse());\n\n      if (this.options.tokens) {\n        file.tokens = file.tokens.map(toESTreeLocation);\n      }\n\n      return file;\n    }\n\n    // @ts-expect-error ESTree plugin changes node types\n    parseRegExpLiteral({ pattern, flags }): N.EstreeRegExpLiteral {\n      let regex: RegExp | null = null;\n      try {\n        regex = new RegExp(pattern, flags);\n      } catch (e) {\n        // In environments that don't support these flags value will\n        // be null as the regex can't be represented natively.\n      }\n      const node = this.estreeParseLiteral<N.EstreeRegExpLiteral>(regex);\n      node.regex = { pattern, flags };\n\n      return node;\n    }\n\n    // @ts-expect-error ESTree plugin changes node types\n    parseBigIntLiteral(value: any): N.Node {\n      // https://github.com/estree/estree/blob/master/es2020.md#bigintliteral\n      let bigInt: BigInt | null;\n      try {\n        bigInt = BigInt(value);\n      } catch {\n        bigInt = null;\n      }\n      const node = this.estreeParseLiteral<N.EstreeBigIntLiteral>(bigInt);\n      node.bigint = String(node.value || value);\n\n      return node;\n    }\n\n    // @ts-expect-error ESTree plugin changes node types\n    parseDecimalLiteral(value: any): N.Node {\n      // https://github.com/estree/estree/blob/master/experimental/decimal.md\n      // todo: use BigDecimal when node supports it.\n      const decimal: null = null;\n      const node = this.estreeParseLiteral(decimal);\n      node.decimal = String(node.value || value);\n\n      return node;\n    }\n\n    estreeParseLiteral<T extends N.Node>(value: any) {\n      // @ts-expect-error ESTree plugin changes node types\n      return this.parseLiteral<T>(value, \"Literal\");\n    }\n\n    // @ts-expect-error ESTree plugin changes node types\n    parseStringLiteral(value: any): N.Node {\n      return this.estreeParseLiteral(value);\n    }\n\n    parseNumericLiteral(value: any): any {\n      return this.estreeParseLiteral(value);\n    }\n\n    // @ts-expect-error ESTree plugin changes node types\n    parseNullLiteral(): N.Node {\n      return this.estreeParseLiteral(null);\n    }\n\n    parseBooleanLiteral(value: boolean): N.BooleanLiteral {\n      return this.estreeParseLiteral(value);\n    }\n\n    directiveToStmt(directive: N.Directive): N.ExpressionStatement {\n      const directiveLiteral = directive.value;\n\n      const stmt = this.startNodeAt<N.ExpressionStatement>(\n        directive.start,\n        directive.loc.start,\n      );\n      const expression = this.startNodeAt<N.EstreeLiteral>(\n        directiveLiteral.start,\n        directiveLiteral.loc.start,\n      );\n\n      expression.value = directiveLiteral.extra.expressionValue;\n      // @ts-expect-error TS2339: Property 'raw' does not exist on type 'Undone '.\n      expression.raw = directiveLiteral.extra.raw;\n\n      stmt.expression = this.finishNodeAt(\n        expression,\n        \"Literal\",\n        directiveLiteral.loc.end,\n      );\n      // @ts-expect-error N.Directive.value is not defined\n      stmt.directive = directiveLiteral.extra.raw.slice(1, -1);\n\n      return this.finishNodeAt(stmt, \"ExpressionStatement\", directive.loc.end);\n    }\n\n    // ==================================\n    // Overrides\n    // ==================================\n\n    initFunction(\n      node: N.BodilessFunctionOrMethodBase,\n      isAsync?: boolean | null,\n    ): void {\n      super.initFunction(node, isAsync);\n      node.expression = false;\n    }\n\n    checkDeclaration(node: N.Pattern | N.ObjectProperty): void {\n      if (node != null && this.isObjectProperty(node)) {\n        // @ts-expect-error plugin typings\n        this.checkDeclaration((node as unknown as N.EstreeProperty).value);\n      } else {\n        super.checkDeclaration(node);\n      }\n    }\n\n    getObjectOrClassMethodParams(method: N.ObjectMethod | N.ClassMethod) {\n      return (method as any as N.EstreeProperty | N.EstreeMethodDefinition)\n        .value.params;\n    }\n\n    isValidDirective(stmt: N.Statement): boolean {\n      return (\n        stmt.type === \"ExpressionStatement\" &&\n        stmt.expression.type === \"Literal\" &&\n        typeof stmt.expression.value === \"string\" &&\n        !stmt.expression.extra?.parenthesized\n      );\n    }\n\n    parseBlockBody(\n      node: N.BlockStatementLike,\n      ...args: [\n        boolean | undefined | null,\n        boolean,\n        TokenType,\n        void | ((a: boolean) => void),\n      ]\n    ): void {\n      // @ts-expect-error figure out args typings\n      super.parseBlockBody(node, ...args);\n\n      const directiveStatements = node.directives.map(d =>\n        this.directiveToStmt(d),\n      );\n      // @ts-expect-error estree plugin typings\n      node.body = directiveStatements.concat(node.body);\n      delete node.directives;\n    }\n\n    pushClassMethod(\n      classBody: N.ClassBody,\n      method: N.ClassMethod,\n      isGenerator: boolean,\n      isAsync: boolean,\n      isConstructor: boolean,\n      allowsDirectSuper: boolean,\n    ): void {\n      this.parseMethod(\n        method,\n        isGenerator,\n        isAsync,\n        isConstructor,\n        allowsDirectSuper,\n        \"ClassMethod\",\n        true,\n      );\n      if (method.typeParameters) {\n        // @ts-expect-error\n        method.value.typeParameters = method.typeParameters;\n        delete method.typeParameters;\n      }\n      classBody.body.push(method);\n    }\n\n    parsePrivateName(): any {\n      const node = super.parsePrivateName();\n      if (!process.env.BABEL_8_BREAKING) {\n        if (!this.getPluginOption(\"estree\", \"classFeatures\")) {\n          return node;\n        }\n      }\n      return this.convertPrivateNameToPrivateIdentifier(node);\n    }\n\n    convertPrivateNameToPrivateIdentifier(\n      node: N.PrivateName,\n    ): N.EstreePrivateIdentifier {\n      const name = super.getPrivateNameSV(node);\n      node = node as any;\n      delete node.id;\n      // @ts-expect-error mutate AST types\n      node.name = name;\n      // @ts-expect-error mutate AST types\n      node.type = \"PrivateIdentifier\";\n      return node as unknown as N.EstreePrivateIdentifier;\n    }\n\n    isPrivateName(node: N.Node): boolean {\n      if (!process.env.BABEL_8_BREAKING) {\n        if (!this.getPluginOption(\"estree\", \"classFeatures\")) {\n          return super.isPrivateName(node);\n        }\n      }\n      return node.type === \"PrivateIdentifier\";\n    }\n\n    getPrivateNameSV(node: N.Node): string {\n      if (!process.env.BABEL_8_BREAKING) {\n        if (!this.getPluginOption(\"estree\", \"classFeatures\")) {\n          return super.getPrivateNameSV(node);\n        }\n      }\n      return node.name;\n    }\n\n    // @ts-expect-error plugin may override interfaces\n    parseLiteral<T extends N.Literal>(value: any, type: T[\"type\"]): T {\n      const node = super.parseLiteral<T>(value, type);\n      // @ts-expect-error mutating AST types\n      node.raw = node.extra.raw;\n      delete node.extra;\n\n      return node;\n    }\n\n    parseFunctionBody(\n      node: N.Function,\n      allowExpression?: boolean | null,\n      isMethod: boolean = false,\n    ): void {\n      super.parseFunctionBody(node, allowExpression, isMethod);\n      node.expression = node.body.type !== \"BlockStatement\";\n    }\n\n    // @ts-expect-error plugin may override interfaces\n    parseMethod<\n      T extends N.ClassPrivateMethod | N.ObjectMethod | N.ClassMethod,\n    >(\n      node: Undone<T>,\n      isGenerator: boolean,\n      isAsync: boolean,\n      isConstructor: boolean,\n      allowDirectSuper: boolean,\n      type: T[\"type\"],\n      inClassScope: boolean = false,\n    ): N.EstreeMethodDefinition {\n      let funcNode = this.startNode<N.MethodLike>();\n      funcNode.kind = node.kind; // provide kind, so super method correctly sets state\n      funcNode = super.parseMethod(\n        // @ts-expect-error todo(flow->ts)\n        funcNode,\n        isGenerator,\n        isAsync,\n        isConstructor,\n        allowDirectSuper,\n        type,\n        inClassScope,\n      );\n      // @ts-expect-error mutate AST types\n      funcNode.type = \"FunctionExpression\";\n      delete funcNode.kind;\n      // @ts-expect-error\n      node.value = funcNode;\n      if (type === \"ClassPrivateMethod\") {\n        node.computed = false;\n      }\n      return this.finishNode(\n        // @ts-expect-error cast methods to estree types\n        node as Undone<N.EstreeMethodDefinition>,\n        \"MethodDefinition\",\n      );\n    }\n\n    parseClassProperty(...args: [N.ClassProperty]): any {\n      const propertyNode = super.parseClassProperty(...args) as any;\n      if (!process.env.BABEL_8_BREAKING) {\n        if (!this.getPluginOption(\"estree\", \"classFeatures\")) {\n          return propertyNode as N.EstreePropertyDefinition;\n        }\n      }\n      propertyNode.type = \"PropertyDefinition\";\n      return propertyNode as N.EstreePropertyDefinition;\n    }\n\n    parseClassPrivateProperty(...args: [N.ClassPrivateProperty]): any {\n      const propertyNode = super.parseClassPrivateProperty(...args) as any;\n      if (!process.env.BABEL_8_BREAKING) {\n        if (!this.getPluginOption(\"estree\", \"classFeatures\")) {\n          return propertyNode as N.EstreePropertyDefinition;\n        }\n      }\n      propertyNode.type = \"PropertyDefinition\";\n      propertyNode.computed = false;\n      return propertyNode as N.EstreePropertyDefinition;\n    }\n\n    parseObjectMethod(\n      prop: N.ObjectMethod,\n      isGenerator: boolean,\n      isAsync: boolean,\n      isPattern: boolean,\n      isAccessor: boolean,\n    ): N.ObjectMethod | undefined | null {\n      const node: N.EstreeProperty = super.parseObjectMethod(\n        prop,\n        isGenerator,\n        isAsync,\n        isPattern,\n        isAccessor,\n      ) as any;\n\n      if (node) {\n        node.type = \"Property\";\n        if ((node as any as N.ClassMethod).kind === \"method\") {\n          node.kind = \"init\";\n        }\n        node.shorthand = false;\n      }\n\n      return node as any;\n    }\n\n    parseObjectProperty(\n      prop: N.ObjectProperty,\n      startPos: number | undefined | null,\n      startLoc: Position | undefined | null,\n      isPattern: boolean,\n      refExpressionErrors?: ExpressionErrors | null,\n    ): N.ObjectProperty | undefined | null {\n      const node: N.EstreeProperty = super.parseObjectProperty(\n        prop,\n        startPos,\n        startLoc,\n        isPattern,\n        refExpressionErrors,\n      ) as any;\n\n      if (node) {\n        node.kind = \"init\";\n        node.type = \"Property\";\n      }\n\n      return node as any;\n    }\n\n    isValidLVal(\n      type: string,\n      isUnparenthesizedInAssign: boolean,\n      binding: BindingTypes,\n    ) {\n      return type === \"Property\"\n        ? \"value\"\n        : super.isValidLVal(type, isUnparenthesizedInAssign, binding);\n    }\n\n    isAssignable(node: N.Node, isBinding?: boolean): boolean {\n      if (node != null && this.isObjectProperty(node)) {\n        return this.isAssignable(node.value, isBinding);\n      }\n      return super.isAssignable(node, isBinding);\n    }\n\n    toAssignable(node: N.Node, isLHS: boolean = false): void {\n      if (node != null && this.isObjectProperty(node)) {\n        const { key, value } = node;\n        if (this.isPrivateName(key)) {\n          this.classScope.usePrivateName(\n            this.getPrivateNameSV(key),\n            key.loc.start,\n          );\n        }\n        this.toAssignable(value, isLHS);\n      } else {\n        super.toAssignable(node, isLHS);\n      }\n    }\n\n    toAssignableObjectExpressionProp(\n      prop: N.Node,\n      isLast: boolean,\n      isLHS: boolean,\n    ) {\n      if (prop.kind === \"get\" || prop.kind === \"set\") {\n        this.raise(Errors.PatternHasAccessor, { at: prop.key });\n      } else if (prop.method) {\n        this.raise(Errors.PatternHasMethod, { at: prop.key });\n      } else {\n        super.toAssignableObjectExpressionProp(prop, isLast, isLHS);\n      }\n    }\n\n    finishCallExpression<T extends N.CallExpression | N.OptionalCallExpression>(\n      unfinished: Undone<T>,\n      optional: boolean,\n    ): T {\n      const node = super.finishCallExpression(unfinished, optional);\n\n      if (node.callee.type === \"Import\") {\n        (node as N.Node as N.EstreeImportExpression).type = \"ImportExpression\";\n        (node as N.Node as N.EstreeImportExpression).source = node.arguments[0];\n        if (this.hasPlugin(\"importAssertions\")) {\n          (node as N.Node as N.EstreeImportExpression).attributes =\n            node.arguments[1] ?? null;\n        }\n        // arguments isn't optional in the type definition\n        delete node.arguments;\n        // callee isn't optional in the type definition\n        delete node.callee;\n      }\n\n      return node;\n    }\n\n    toReferencedArguments(\n      node:\n        | N.CallExpression\n        | N.OptionalCallExpression\n        | N.EstreeImportExpression,\n      /* isParenthesizedExpr?: boolean, */\n    ) {\n      // ImportExpressions do not have an arguments array.\n      if (node.type === \"ImportExpression\") {\n        return;\n      }\n\n      super.toReferencedArguments(node);\n    }\n\n    parseExport(unfinished: Undone<N.AnyExport>) {\n      const node = super.parseExport(unfinished);\n\n      switch (node.type) {\n        case \"ExportAllDeclaration\":\n          // @ts-expect-error mutating AST types\n          node.exported = null;\n          break;\n\n        case \"ExportNamedDeclaration\":\n          if (\n            node.specifiers.length === 1 &&\n            // @ts-expect-error mutating AST types\n            node.specifiers[0].type === \"ExportNamespaceSpecifier\"\n          ) {\n            // @ts-expect-error mutating AST types\n            node.type = \"ExportAllDeclaration\";\n            // @ts-expect-error mutating AST types\n            node.exported = node.specifiers[0].exported;\n            delete node.specifiers;\n          }\n\n          break;\n      }\n\n      return node;\n    }\n\n    parseSubscript(\n      base: N.Expression,\n      startPos: number,\n      startLoc: Position,\n      noCalls: boolean | undefined | null,\n      state: N.ParseSubscriptState,\n    ) {\n      const node = super.parseSubscript(\n        base,\n        startPos,\n        startLoc,\n        noCalls,\n        state,\n      );\n\n      if (state.optionalChainMember) {\n        // https://github.com/estree/estree/blob/master/es2020.md#chainexpression\n        if (\n          node.type === \"OptionalMemberExpression\" ||\n          node.type === \"OptionalCallExpression\"\n        ) {\n          node.type = node.type.substring(8); // strip Optional prefix\n        }\n        if (state.stop) {\n          const chain = this.startNodeAtNode(node);\n          chain.expression = node;\n          return this.finishNode(chain, \"ChainExpression\");\n        }\n      } else if (\n        node.type === \"MemberExpression\" ||\n        node.type === \"CallExpression\"\n      ) {\n        node.optional = false;\n      }\n\n      return node;\n    }\n\n    hasPropertyAsPrivateName(node: N.Node): boolean {\n      if (node.type === \"ChainExpression\") {\n        node = node.expression;\n      }\n      return super.hasPropertyAsPrivateName(node);\n    }\n\n    isOptionalChain(node: N.Node): boolean {\n      return node.type === \"ChainExpression\";\n    }\n\n    // @ts-expect-error override interfaces\n    isObjectProperty(node: N.Node): boolean {\n      return node.type === \"Property\" && node.kind === \"init\" && !node.method;\n    }\n\n    isObjectMethod(node: N.Node): boolean {\n      return node.method || node.kind === \"get\" || node.kind === \"set\";\n    }\n\n    finishNodeAt<T extends NodeType>(\n      node: Undone<T>,\n      type: T[\"type\"],\n      endLoc: Position,\n    ): T {\n      return toESTreeLocation(super.finishNodeAt(node, type, endLoc));\n    }\n\n    resetStartLocation(node: N.Node, start: number, startLoc: Position) {\n      super.resetStartLocation(node, start, startLoc);\n      toESTreeLocation(node);\n    }\n\n    resetEndLocation(\n      node: NodeBase,\n      endLoc: Position = this.state.lastTokEndLoc,\n    ): void {\n      super.resetEndLocation(node, endLoc);\n      toESTreeLocation(node);\n    }\n  };\n","// The token context is used in JSX plugin to track\n// jsx tag / jsx text / normal JavaScript expression\n\nexport class TokContext {\n  constructor(token: string, preserveSpace?: boolean) {\n    this.token = token;\n    this.preserveSpace = !!preserveSpace;\n  }\n\n  token: string;\n  preserveSpace: boolean;\n}\n\nconst types: {\n  [key: string]: TokContext;\n} = {\n  brace: new TokContext(\"{\"), // normal JavaScript expression\n  j_oTag: new TokContext(\"<tag\"), // JSX opening tag\n  j_cTag: new TokContext(\"</tag\"), // JSX closing tag\n  j_expr: new TokContext(\"<tag>...</tag>\", true), // JSX expressions\n};\n\nif (!process.env.BABEL_8_BREAKING) {\n  types.template = new TokContext(\"`\", true);\n}\n\nexport { types };\n","import { types as tc, type TokContext } from \"./context\";\n// ## Token types\n\n// The assignment of fine-grained, information-carrying type objects\n// allows the tokenizer to store the information it has about a\n// token in a way that is very cheap for the parser to look up.\n\n// All token type variables start with an underscore, to make them\n// easy to recognize.\n\n// The `beforeExpr` property is used to disambiguate between 1) binary\n// expression (<) and JSX Tag start (<name>); 2) object literal and JSX\n// texts. It is set on the `updateContext` function in the JSX plugin.\n\n// The `startsExpr` property is used to determine whether an expression\n// may be the “argument” subexpression of a `yield` expression or\n// `yield` statement. It is set on all token types that may be at the\n// start of a subexpression.\n\n// `isLoop` marks a keyword as starting a loop, which is important\n// to know when parsing a label, in order to allow or disallow\n// continue jumps to that label.\n\nconst beforeExpr = true;\nconst startsExpr = true;\nconst isLoop = true;\nconst isAssign = true;\nconst prefix = true;\nconst postfix = true;\n\ntype TokenOptions = {\n  keyword?: string;\n  beforeExpr?: boolean;\n  startsExpr?: boolean;\n  rightAssociative?: boolean;\n  isLoop?: boolean;\n  isAssign?: boolean;\n  prefix?: boolean;\n  postfix?: boolean;\n  binop?: number | null;\n};\n\n// Internally the tokenizer stores token as a number\nexport type TokenType = number;\n\n// The `ExportedTokenType` is exported via `tokTypes` and accessible\n// when `tokens: true` is enabled. Unlike internal token type, it provides\n// metadata of the tokens.\nexport class ExportedTokenType {\n  label: string;\n  keyword: string | undefined | null;\n  beforeExpr: boolean;\n  startsExpr: boolean;\n  rightAssociative: boolean;\n  isLoop: boolean;\n  isAssign: boolean;\n  prefix: boolean;\n  postfix: boolean;\n  binop: number | undefined | null;\n  // todo(Babel 8): remove updateContext from exposed token layout\n  declare updateContext:\n    | ((context: Array<TokContext>) => void)\n    | undefined\n    | null;\n\n  constructor(label: string, conf: TokenOptions = {}) {\n    this.label = label;\n    this.keyword = conf.keyword;\n    this.beforeExpr = !!conf.beforeExpr;\n    this.startsExpr = !!conf.startsExpr;\n    this.rightAssociative = !!conf.rightAssociative;\n    this.isLoop = !!conf.isLoop;\n    this.isAssign = !!conf.isAssign;\n    this.prefix = !!conf.prefix;\n    this.postfix = !!conf.postfix;\n    this.binop = conf.binop != null ? conf.binop : null;\n    if (!process.env.BABEL_8_BREAKING) {\n      this.updateContext = null;\n    }\n  }\n}\n\n// A map from keyword/keyword-like string value to the token type\nexport const keywords = new Map<string, TokenType>();\n\nfunction createKeyword(name: string, options: TokenOptions = {}): TokenType {\n  options.keyword = name;\n  const token = createToken(name, options);\n  keywords.set(name, token);\n  return token;\n}\n\nfunction createBinop(name: string, binop: number) {\n  return createToken(name, { beforeExpr, binop });\n}\n\nlet tokenTypeCounter = -1;\nexport const tokenTypes: ExportedTokenType[] = [];\nconst tokenLabels: string[] = [];\nconst tokenBinops: number[] = [];\nconst tokenBeforeExprs: boolean[] = [];\nconst tokenStartsExprs: boolean[] = [];\nconst tokenPrefixes: boolean[] = [];\n\nfunction createToken(name: string, options: TokenOptions = {}): TokenType {\n  ++tokenTypeCounter;\n  tokenLabels.push(name);\n  tokenBinops.push(options.binop ?? -1);\n  tokenBeforeExprs.push(options.beforeExpr ?? false);\n  tokenStartsExprs.push(options.startsExpr ?? false);\n  tokenPrefixes.push(options.prefix ?? false);\n  tokenTypes.push(new ExportedTokenType(name, options));\n\n  return tokenTypeCounter;\n}\n\nfunction createKeywordLike(\n  name: string,\n  options: TokenOptions = {},\n): TokenType {\n  ++tokenTypeCounter;\n  keywords.set(name, tokenTypeCounter);\n  tokenLabels.push(name);\n  tokenBinops.push(options.binop ?? -1);\n  tokenBeforeExprs.push(options.beforeExpr ?? false);\n  tokenStartsExprs.push(options.startsExpr ?? false);\n  tokenPrefixes.push(options.prefix ?? false);\n  // In the exported token type, we set the label as \"name\" for backward compatibility with Babel 7\n  tokenTypes.push(new ExportedTokenType(\"name\", options));\n\n  return tokenTypeCounter;\n}\n\n// For performance the token type helpers depend on the following declarations order.\n// When adding new token types, please also check if the token helpers need update.\n\nexport type InternalTokenTypes = {\n  [name: string]: TokenType;\n};\n\nexport const tt: InternalTokenTypes = {\n  // Punctuation token types.\n  bracketL: createToken(\"[\", { beforeExpr, startsExpr }),\n  bracketHashL: createToken(\"#[\", { beforeExpr, startsExpr }),\n  bracketBarL: createToken(\"[|\", { beforeExpr, startsExpr }),\n  bracketR: createToken(\"]\"),\n  bracketBarR: createToken(\"|]\"),\n  braceL: createToken(\"{\", { beforeExpr, startsExpr }),\n  braceBarL: createToken(\"{|\", { beforeExpr, startsExpr }),\n  braceHashL: createToken(\"#{\", { beforeExpr, startsExpr }),\n  braceR: createToken(\"}\"),\n  braceBarR: createToken(\"|}\"),\n  parenL: createToken(\"(\", { beforeExpr, startsExpr }),\n  parenR: createToken(\")\"),\n  comma: createToken(\",\", { beforeExpr }),\n  semi: createToken(\";\", { beforeExpr }),\n  colon: createToken(\":\", { beforeExpr }),\n  doubleColon: createToken(\"::\", { beforeExpr }),\n  dot: createToken(\".\"),\n  question: createToken(\"?\", { beforeExpr }),\n  questionDot: createToken(\"?.\"),\n  arrow: createToken(\"=>\", { beforeExpr }),\n  template: createToken(\"template\"),\n  ellipsis: createToken(\"...\", { beforeExpr }),\n  backQuote: createToken(\"`\", { startsExpr }),\n  dollarBraceL: createToken(\"${\", { beforeExpr, startsExpr }),\n  // start: isTemplate\n  templateTail: createToken(\"...`\", { startsExpr }),\n  templateNonTail: createToken(\"...${\", { beforeExpr, startsExpr }),\n  // end: isTemplate\n  at: createToken(\"@\"),\n  hash: createToken(\"#\", { startsExpr }),\n\n  // Special hashbang token.\n  interpreterDirective: createToken(\"#!...\"),\n\n  // Operators. These carry several kinds of properties to help the\n  // parser use them properly (the presence of these properties is\n  // what categorizes them as operators).\n  //\n  // `binop`, when present, specifies that this operator is a binary\n  // operator, and will refer to its precedence.\n  //\n  // `prefix` and `postfix` mark the operator as a prefix or postfix\n  // unary operator.\n  //\n  // `isAssign` marks all of `=`, `+=`, `-=` etcetera, which act as\n  // binary operators with a very low precedence, that should result\n  // in AssignmentExpression nodes.\n\n  // start: isAssign\n  eq: createToken(\"=\", { beforeExpr, isAssign }),\n  assign: createToken(\"_=\", { beforeExpr, isAssign }),\n  slashAssign: createToken(\"_=\", { beforeExpr, isAssign }),\n  // These are only needed to support % and ^ as a Hack-pipe topic token.\n  // When the proposal settles on a token, the others can be merged with\n  // tt.assign.\n  xorAssign: createToken(\"_=\", { beforeExpr, isAssign }),\n  moduloAssign: createToken(\"_=\", { beforeExpr, isAssign }),\n  // end: isAssign\n\n  incDec: createToken(\"++/--\", { prefix, postfix, startsExpr }),\n  bang: createToken(\"!\", { beforeExpr, prefix, startsExpr }),\n  tilde: createToken(\"~\", { beforeExpr, prefix, startsExpr }),\n\n  // More possible topic tokens.\n  // When the proposal settles on a token, at least one of these may be removed.\n  doubleCaret: createToken(\"^^\", { startsExpr }),\n  doubleAt: createToken(\"@@\", { startsExpr }),\n\n  // start: isBinop\n  pipeline: createBinop(\"|>\", 0),\n  nullishCoalescing: createBinop(\"??\", 1),\n  logicalOR: createBinop(\"||\", 1),\n  logicalAND: createBinop(\"&&\", 2),\n  bitwiseOR: createBinop(\"|\", 3),\n  bitwiseXOR: createBinop(\"^\", 4),\n  bitwiseAND: createBinop(\"&\", 5),\n  equality: createBinop(\"==/!=/===/!==\", 6),\n  lt: createBinop(\"</>/<=/>=\", 7),\n  gt: createBinop(\"</>/<=/>=\", 7),\n  relational: createBinop(\"</>/<=/>=\", 7),\n  bitShift: createBinop(\"<</>>/>>>\", 8),\n  bitShiftL: createBinop(\"<</>>/>>>\", 8),\n  bitShiftR: createBinop(\"<</>>/>>>\", 8),\n  plusMin: createToken(\"+/-\", { beforeExpr, binop: 9, prefix, startsExpr }),\n  // startsExpr: required by v8intrinsic plugin\n  modulo: createToken(\"%\", { binop: 10, startsExpr }),\n  // unset `beforeExpr` as it can be `function *`\n  star: createToken(\"*\", { binop: 10 }),\n  slash: createBinop(\"/\", 10),\n  exponent: createToken(\"**\", {\n    beforeExpr,\n    binop: 11,\n    rightAssociative: true,\n  }),\n\n  // Keywords\n  // Don't forget to update packages/babel-helper-validator-identifier/src/keyword.js\n  // when new keywords are added\n  // start: isLiteralPropertyName\n  // start: isKeyword\n  _in: createKeyword(\"in\", { beforeExpr, binop: 7 }),\n  _instanceof: createKeyword(\"instanceof\", { beforeExpr, binop: 7 }),\n  // end: isBinop\n  _break: createKeyword(\"break\"),\n  _case: createKeyword(\"case\", { beforeExpr }),\n  _catch: createKeyword(\"catch\"),\n  _continue: createKeyword(\"continue\"),\n  _debugger: createKeyword(\"debugger\"),\n  _default: createKeyword(\"default\", { beforeExpr }),\n  _else: createKeyword(\"else\", { beforeExpr }),\n  _finally: createKeyword(\"finally\"),\n  _function: createKeyword(\"function\", { startsExpr }),\n  _if: createKeyword(\"if\"),\n  _return: createKeyword(\"return\", { beforeExpr }),\n  _switch: createKeyword(\"switch\"),\n  _throw: createKeyword(\"throw\", { beforeExpr, prefix, startsExpr }),\n  _try: createKeyword(\"try\"),\n  _var: createKeyword(\"var\"),\n  _const: createKeyword(\"const\"),\n  _with: createKeyword(\"with\"),\n  _new: createKeyword(\"new\", { beforeExpr, startsExpr }),\n  _this: createKeyword(\"this\", { startsExpr }),\n  _super: createKeyword(\"super\", { startsExpr }),\n  _class: createKeyword(\"class\", { startsExpr }),\n  _extends: createKeyword(\"extends\", { beforeExpr }),\n  _export: createKeyword(\"export\"),\n  _import: createKeyword(\"import\", { startsExpr }),\n  _null: createKeyword(\"null\", { startsExpr }),\n  _true: createKeyword(\"true\", { startsExpr }),\n  _false: createKeyword(\"false\", { startsExpr }),\n  _typeof: createKeyword(\"typeof\", { beforeExpr, prefix, startsExpr }),\n  _void: createKeyword(\"void\", { beforeExpr, prefix, startsExpr }),\n  _delete: createKeyword(\"delete\", { beforeExpr, prefix, startsExpr }),\n  // start: isLoop\n  _do: createKeyword(\"do\", { isLoop, beforeExpr }),\n  _for: createKeyword(\"for\", { isLoop }),\n  _while: createKeyword(\"while\", { isLoop }),\n  // end: isLoop\n  // end: isKeyword\n\n  // Primary literals\n  // start: isIdentifier\n  _as: createKeywordLike(\"as\", { startsExpr }),\n  _assert: createKeywordLike(\"assert\", { startsExpr }),\n  _async: createKeywordLike(\"async\", { startsExpr }),\n  _await: createKeywordLike(\"await\", { startsExpr }),\n  _from: createKeywordLike(\"from\", { startsExpr }),\n  _get: createKeywordLike(\"get\", { startsExpr }),\n  _let: createKeywordLike(\"let\", { startsExpr }),\n  _meta: createKeywordLike(\"meta\", { startsExpr }),\n  _of: createKeywordLike(\"of\", { startsExpr }),\n  _sent: createKeywordLike(\"sent\", { startsExpr }),\n  _set: createKeywordLike(\"set\", { startsExpr }),\n  _static: createKeywordLike(\"static\", { startsExpr }),\n  _yield: createKeywordLike(\"yield\", { startsExpr }),\n\n  // Flow and TypeScript Keywordlike\n  _asserts: createKeywordLike(\"asserts\", { startsExpr }),\n  _checks: createKeywordLike(\"checks\", { startsExpr }),\n  _exports: createKeywordLike(\"exports\", { startsExpr }),\n  _global: createKeywordLike(\"global\", { startsExpr }),\n  _implements: createKeywordLike(\"implements\", { startsExpr }),\n  _intrinsic: createKeywordLike(\"intrinsic\", { startsExpr }),\n  _infer: createKeywordLike(\"infer\", { startsExpr }),\n  _is: createKeywordLike(\"is\", { startsExpr }),\n  _mixins: createKeywordLike(\"mixins\", { startsExpr }),\n  _proto: createKeywordLike(\"proto\", { startsExpr }),\n  _require: createKeywordLike(\"require\", { startsExpr }),\n  // start: isTSTypeOperator\n  _keyof: createKeywordLike(\"keyof\", { startsExpr }),\n  _readonly: createKeywordLike(\"readonly\", { startsExpr }),\n  _unique: createKeywordLike(\"unique\", { startsExpr }),\n  // end: isTSTypeOperator\n  // start: isTSDeclarationStart\n  _abstract: createKeywordLike(\"abstract\", { startsExpr }),\n  _declare: createKeywordLike(\"declare\", { startsExpr }),\n  _enum: createKeywordLike(\"enum\", { startsExpr }),\n  _module: createKeywordLike(\"module\", { startsExpr }),\n  _namespace: createKeywordLike(\"namespace\", { startsExpr }),\n  // start: isFlowInterfaceOrTypeOrOpaque\n  _interface: createKeywordLike(\"interface\", { startsExpr }),\n  _type: createKeywordLike(\"type\", { startsExpr }),\n  // end: isTSDeclarationStart\n  _opaque: createKeywordLike(\"opaque\", { startsExpr }),\n  // end: isFlowInterfaceOrTypeOrOpaque\n  name: createToken(\"name\", { startsExpr }),\n  // end: isIdentifier\n\n  string: createToken(\"string\", { startsExpr }),\n  num: createToken(\"num\", { startsExpr }),\n  bigint: createToken(\"bigint\", { startsExpr }),\n  decimal: createToken(\"decimal\", { startsExpr }),\n  // end: isLiteralPropertyName\n  regexp: createToken(\"regexp\", { startsExpr }),\n  privateName: createToken(\"#name\", { startsExpr }),\n  eof: createToken(\"eof\"),\n\n  // jsx plugin\n  jsxName: createToken(\"jsxName\"),\n  jsxText: createToken(\"jsxText\", { beforeExpr: true }),\n  jsxTagStart: createToken(\"jsxTagStart\", { startsExpr: true }),\n  jsxTagEnd: createToken(\"jsxTagEnd\"),\n\n  // placeholder plugin\n  placeholder: createToken(\"%%\", { startsExpr: true }),\n};\n\nexport function tokenIsIdentifier(token: TokenType): boolean {\n  return token >= tt._as && token <= tt.name;\n}\n\nexport function tokenKeywordOrIdentifierIsKeyword(token: TokenType): boolean {\n  // we can remove the token >= tt._in check when we\n  // know a token is either keyword or identifier\n  return token <= tt._while;\n}\n\nexport function tokenIsKeywordOrIdentifier(token: TokenType): boolean {\n  return token >= tt._in && token <= tt.name;\n}\n\nexport function tokenIsLiteralPropertyName(token: TokenType): boolean {\n  return token >= tt._in && token <= tt.decimal;\n}\n\nexport function tokenComesBeforeExpression(token: TokenType): boolean {\n  return tokenBeforeExprs[token];\n}\n\nexport function tokenCanStartExpression(token: TokenType): boolean {\n  return tokenStartsExprs[token];\n}\n\nexport function tokenIsAssignment(token: TokenType): boolean {\n  return token >= tt.eq && token <= tt.moduloAssign;\n}\n\nexport function tokenIsFlowInterfaceOrTypeOrOpaque(token: TokenType): boolean {\n  return token >= tt._interface && token <= tt._opaque;\n}\n\nexport function tokenIsLoop(token: TokenType): boolean {\n  return token >= tt._do && token <= tt._while;\n}\n\nexport function tokenIsKeyword(token: TokenType): boolean {\n  return token >= tt._in && token <= tt._while;\n}\n\nexport function tokenIsOperator(token: TokenType): boolean {\n  return token >= tt.pipeline && token <= tt._instanceof;\n}\n\nexport function tokenIsPostfix(token: TokenType): boolean {\n  return token === tt.incDec;\n}\n\nexport function tokenIsPrefix(token: TokenType): boolean {\n  return tokenPrefixes[token];\n}\n\nexport function tokenIsTSTypeOperator(token: TokenType): boolean {\n  return token >= tt._keyof && token <= tt._unique;\n}\n\nexport function tokenIsTSDeclarationStart(token: TokenType): boolean {\n  return token >= tt._abstract && token <= tt._type;\n}\n\nexport function tokenLabelName(token: TokenType): string {\n  return tokenLabels[token];\n}\n\nexport function tokenOperatorPrecedence(token: TokenType): number {\n  return tokenBinops[token];\n}\n\nexport function tokenIsBinaryOperator(token: TokenType): boolean {\n  return tokenBinops[token] !== -1;\n}\n\nexport function tokenIsRightAssociative(token: TokenType): boolean {\n  return token === tt.exponent;\n}\n\nexport function tokenIsTemplate(token: TokenType): boolean {\n  return token >= tt.templateTail && token <= tt.templateNonTail;\n}\n\nexport function getExportedToken(token: TokenType): ExportedTokenType {\n  return tokenTypes[token];\n}\n\nexport function isTokenType(obj: any): boolean {\n  return typeof obj === \"number\";\n}\n\nif (!process.env.BABEL_8_BREAKING) {\n  tokenTypes[tt.braceR].updateContext = context => {\n    context.pop();\n  };\n\n  tokenTypes[tt.braceL].updateContext =\n    tokenTypes[tt.braceHashL].updateContext =\n    tokenTypes[tt.dollarBraceL].updateContext =\n      context => {\n        context.push(tc.brace);\n      };\n\n  tokenTypes[tt.backQuote].updateContext = context => {\n    if (context[context.length - 1] === tc.template) {\n      context.pop();\n    } else {\n      context.push(tc.template);\n    }\n  };\n\n  tokenTypes[tt.jsxTagStart].updateContext = context => {\n    context.push(tc.j_expr, tc.j_oTag);\n  };\n}\n","import * as charCodes from \"charcodes\";\n\n// ## Character categories\n\n// Big ugly regular expressions that match characters in the\n// whitespace, identifier, and identifier-start categories. These\n// are only applied when a character is found to actually have a\n// code point between 0x80 and 0xffff.\n// Generated by `scripts/generate-identifier-regex.js`.\n\n/* prettier-ignore */\nlet nonASCIIidentifierStartChars = \"\\xaa\\xb5\\xba\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u02c1\\u02c6-\\u02d1\\u02e0-\\u02e4\\u02ec\\u02ee\\u0370-\\u0374\\u0376\\u0377\\u037a-\\u037d\\u037f\\u0386\\u0388-\\u038a\\u038c\\u038e-\\u03a1\\u03a3-\\u03f5\\u03f7-\\u0481\\u048a-\\u052f\\u0531-\\u0556\\u0559\\u0560-\\u0588\\u05d0-\\u05ea\\u05ef-\\u05f2\\u0620-\\u064a\\u066e\\u066f\\u0671-\\u06d3\\u06d5\\u06e5\\u06e6\\u06ee\\u06ef\\u06fa-\\u06fc\\u06ff\\u0710\\u0712-\\u072f\\u074d-\\u07a5\\u07b1\\u07ca-\\u07ea\\u07f4\\u07f5\\u07fa\\u0800-\\u0815\\u081a\\u0824\\u0828\\u0840-\\u0858\\u0860-\\u086a\\u0870-\\u0887\\u0889-\\u088e\\u08a0-\\u08c9\\u0904-\\u0939\\u093d\\u0950\\u0958-\\u0961\\u0971-\\u0980\\u0985-\\u098c\\u098f\\u0990\\u0993-\\u09a8\\u09aa-\\u09b0\\u09b2\\u09b6-\\u09b9\\u09bd\\u09ce\\u09dc\\u09dd\\u09df-\\u09e1\\u09f0\\u09f1\\u09fc\\u0a05-\\u0a0a\\u0a0f\\u0a10\\u0a13-\\u0a28\\u0a2a-\\u0a30\\u0a32\\u0a33\\u0a35\\u0a36\\u0a38\\u0a39\\u0a59-\\u0a5c\\u0a5e\\u0a72-\\u0a74\\u0a85-\\u0a8d\\u0a8f-\\u0a91\\u0a93-\\u0aa8\\u0aaa-\\u0ab0\\u0ab2\\u0ab3\\u0ab5-\\u0ab9\\u0abd\\u0ad0\\u0ae0\\u0ae1\\u0af9\\u0b05-\\u0b0c\\u0b0f\\u0b10\\u0b13-\\u0b28\\u0b2a-\\u0b30\\u0b32\\u0b33\\u0b35-\\u0b39\\u0b3d\\u0b5c\\u0b5d\\u0b5f-\\u0b61\\u0b71\\u0b83\\u0b85-\\u0b8a\\u0b8e-\\u0b90\\u0b92-\\u0b95\\u0b99\\u0b9a\\u0b9c\\u0b9e\\u0b9f\\u0ba3\\u0ba4\\u0ba8-\\u0baa\\u0bae-\\u0bb9\\u0bd0\\u0c05-\\u0c0c\\u0c0e-\\u0c10\\u0c12-\\u0c28\\u0c2a-\\u0c39\\u0c3d\\u0c58-\\u0c5a\\u0c5d\\u0c60\\u0c61\\u0c80\\u0c85-\\u0c8c\\u0c8e-\\u0c90\\u0c92-\\u0ca8\\u0caa-\\u0cb3\\u0cb5-\\u0cb9\\u0cbd\\u0cdd\\u0cde\\u0ce0\\u0ce1\\u0cf1\\u0cf2\\u0d04-\\u0d0c\\u0d0e-\\u0d10\\u0d12-\\u0d3a\\u0d3d\\u0d4e\\u0d54-\\u0d56\\u0d5f-\\u0d61\\u0d7a-\\u0d7f\\u0d85-\\u0d96\\u0d9a-\\u0db1\\u0db3-\\u0dbb\\u0dbd\\u0dc0-\\u0dc6\\u0e01-\\u0e30\\u0e32\\u0e33\\u0e40-\\u0e46\\u0e81\\u0e82\\u0e84\\u0e86-\\u0e8a\\u0e8c-\\u0ea3\\u0ea5\\u0ea7-\\u0eb0\\u0eb2\\u0eb3\\u0ebd\\u0ec0-\\u0ec4\\u0ec6\\u0edc-\\u0edf\\u0f00\\u0f40-\\u0f47\\u0f49-\\u0f6c\\u0f88-\\u0f8c\\u1000-\\u102a\\u103f\\u1050-\\u1055\\u105a-\\u105d\\u1061\\u1065\\u1066\\u106e-\\u1070\\u1075-\\u1081\\u108e\\u10a0-\\u10c5\\u10c7\\u10cd\\u10d0-\\u10fa\\u10fc-\\u1248\\u124a-\\u124d\\u1250-\\u1256\\u1258\\u125a-\\u125d\\u1260-\\u1288\\u128a-\\u128d\\u1290-\\u12b0\\u12b2-\\u12b5\\u12b8-\\u12be\\u12c0\\u12c2-\\u12c5\\u12c8-\\u12d6\\u12d8-\\u1310\\u1312-\\u1315\\u1318-\\u135a\\u1380-\\u138f\\u13a0-\\u13f5\\u13f8-\\u13fd\\u1401-\\u166c\\u166f-\\u167f\\u1681-\\u169a\\u16a0-\\u16ea\\u16ee-\\u16f8\\u1700-\\u1711\\u171f-\\u1731\\u1740-\\u1751\\u1760-\\u176c\\u176e-\\u1770\\u1780-\\u17b3\\u17d7\\u17dc\\u1820-\\u1878\\u1880-\\u18a8\\u18aa\\u18b0-\\u18f5\\u1900-\\u191e\\u1950-\\u196d\\u1970-\\u1974\\u1980-\\u19ab\\u19b0-\\u19c9\\u1a00-\\u1a16\\u1a20-\\u1a54\\u1aa7\\u1b05-\\u1b33\\u1b45-\\u1b4c\\u1b83-\\u1ba0\\u1bae\\u1baf\\u1bba-\\u1be5\\u1c00-\\u1c23\\u1c4d-\\u1c4f\\u1c5a-\\u1c7d\\u1c80-\\u1c88\\u1c90-\\u1cba\\u1cbd-\\u1cbf\\u1ce9-\\u1cec\\u1cee-\\u1cf3\\u1cf5\\u1cf6\\u1cfa\\u1d00-\\u1dbf\\u1e00-\\u1f15\\u1f18-\\u1f1d\\u1f20-\\u1f45\\u1f48-\\u1f4d\\u1f50-\\u1f57\\u1f59\\u1f5b\\u1f5d\\u1f5f-\\u1f7d\\u1f80-\\u1fb4\\u1fb6-\\u1fbc\\u1fbe\\u1fc2-\\u1fc4\\u1fc6-\\u1fcc\\u1fd0-\\u1fd3\\u1fd6-\\u1fdb\\u1fe0-\\u1fec\\u1ff2-\\u1ff4\\u1ff6-\\u1ffc\\u2071\\u207f\\u2090-\\u209c\\u2102\\u2107\\u210a-\\u2113\\u2115\\u2118-\\u211d\\u2124\\u2126\\u2128\\u212a-\\u2139\\u213c-\\u213f\\u2145-\\u2149\\u214e\\u2160-\\u2188\\u2c00-\\u2ce4\\u2ceb-\\u2cee\\u2cf2\\u2cf3\\u2d00-\\u2d25\\u2d27\\u2d2d\\u2d30-\\u2d67\\u2d6f\\u2d80-\\u2d96\\u2da0-\\u2da6\\u2da8-\\u2dae\\u2db0-\\u2db6\\u2db8-\\u2dbe\\u2dc0-\\u2dc6\\u2dc8-\\u2dce\\u2dd0-\\u2dd6\\u2dd8-\\u2dde\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303c\\u3041-\\u3096\\u309b-\\u309f\\u30a1-\\u30fa\\u30fc-\\u30ff\\u3105-\\u312f\\u3131-\\u318e\\u31a0-\\u31bf\\u31f0-\\u31ff\\u3400-\\u4dbf\\u4e00-\\ua48c\\ua4d0-\\ua4fd\\ua500-\\ua60c\\ua610-\\ua61f\\ua62a\\ua62b\\ua640-\\ua66e\\ua67f-\\ua69d\\ua6a0-\\ua6ef\\ua717-\\ua71f\\ua722-\\ua788\\ua78b-\\ua7ca\\ua7d0\\ua7d1\\ua7d3\\ua7d5-\\ua7d9\\ua7f2-\\ua801\\ua803-\\ua805\\ua807-\\ua80a\\ua80c-\\ua822\\ua840-\\ua873\\ua882-\\ua8b3\\ua8f2-\\ua8f7\\ua8fb\\ua8fd\\ua8fe\\ua90a-\\ua925\\ua930-\\ua946\\ua960-\\ua97c\\ua984-\\ua9b2\\ua9cf\\ua9e0-\\ua9e4\\ua9e6-\\ua9ef\\ua9fa-\\ua9fe\\uaa00-\\uaa28\\uaa40-\\uaa42\\uaa44-\\uaa4b\\uaa60-\\uaa76\\uaa7a\\uaa7e-\\uaaaf\\uaab1\\uaab5\\uaab6\\uaab9-\\uaabd\\uaac0\\uaac2\\uaadb-\\uaadd\\uaae0-\\uaaea\\uaaf2-\\uaaf4\\uab01-\\uab06\\uab09-\\uab0e\\uab11-\\uab16\\uab20-\\uab26\\uab28-\\uab2e\\uab30-\\uab5a\\uab5c-\\uab69\\uab70-\\uabe2\\uac00-\\ud7a3\\ud7b0-\\ud7c6\\ud7cb-\\ud7fb\\uf900-\\ufa6d\\ufa70-\\ufad9\\ufb00-\\ufb06\\ufb13-\\ufb17\\ufb1d\\ufb1f-\\ufb28\\ufb2a-\\ufb36\\ufb38-\\ufb3c\\ufb3e\\ufb40\\ufb41\\ufb43\\ufb44\\ufb46-\\ufbb1\\ufbd3-\\ufd3d\\ufd50-\\ufd8f\\ufd92-\\ufdc7\\ufdf0-\\ufdfb\\ufe70-\\ufe74\\ufe76-\\ufefc\\uff21-\\uff3a\\uff41-\\uff5a\\uff66-\\uffbe\\uffc2-\\uffc7\\uffca-\\uffcf\\uffd2-\\uffd7\\uffda-\\uffdc\";\n/* prettier-ignore */\nlet nonASCIIidentifierChars = \"\\u200c\\u200d\\xb7\\u0300-\\u036f\\u0387\\u0483-\\u0487\\u0591-\\u05bd\\u05bf\\u05c1\\u05c2\\u05c4\\u05c5\\u05c7\\u0610-\\u061a\\u064b-\\u0669\\u0670\\u06d6-\\u06dc\\u06df-\\u06e4\\u06e7\\u06e8\\u06ea-\\u06ed\\u06f0-\\u06f9\\u0711\\u0730-\\u074a\\u07a6-\\u07b0\\u07c0-\\u07c9\\u07eb-\\u07f3\\u07fd\\u0816-\\u0819\\u081b-\\u0823\\u0825-\\u0827\\u0829-\\u082d\\u0859-\\u085b\\u0898-\\u089f\\u08ca-\\u08e1\\u08e3-\\u0903\\u093a-\\u093c\\u093e-\\u094f\\u0951-\\u0957\\u0962\\u0963\\u0966-\\u096f\\u0981-\\u0983\\u09bc\\u09be-\\u09c4\\u09c7\\u09c8\\u09cb-\\u09cd\\u09d7\\u09e2\\u09e3\\u09e6-\\u09ef\\u09fe\\u0a01-\\u0a03\\u0a3c\\u0a3e-\\u0a42\\u0a47\\u0a48\\u0a4b-\\u0a4d\\u0a51\\u0a66-\\u0a71\\u0a75\\u0a81-\\u0a83\\u0abc\\u0abe-\\u0ac5\\u0ac7-\\u0ac9\\u0acb-\\u0acd\\u0ae2\\u0ae3\\u0ae6-\\u0aef\\u0afa-\\u0aff\\u0b01-\\u0b03\\u0b3c\\u0b3e-\\u0b44\\u0b47\\u0b48\\u0b4b-\\u0b4d\\u0b55-\\u0b57\\u0b62\\u0b63\\u0b66-\\u0b6f\\u0b82\\u0bbe-\\u0bc2\\u0bc6-\\u0bc8\\u0bca-\\u0bcd\\u0bd7\\u0be6-\\u0bef\\u0c00-\\u0c04\\u0c3c\\u0c3e-\\u0c44\\u0c46-\\u0c48\\u0c4a-\\u0c4d\\u0c55\\u0c56\\u0c62\\u0c63\\u0c66-\\u0c6f\\u0c81-\\u0c83\\u0cbc\\u0cbe-\\u0cc4\\u0cc6-\\u0cc8\\u0cca-\\u0ccd\\u0cd5\\u0cd6\\u0ce2\\u0ce3\\u0ce6-\\u0cef\\u0d00-\\u0d03\\u0d3b\\u0d3c\\u0d3e-\\u0d44\\u0d46-\\u0d48\\u0d4a-\\u0d4d\\u0d57\\u0d62\\u0d63\\u0d66-\\u0d6f\\u0d81-\\u0d83\\u0dca\\u0dcf-\\u0dd4\\u0dd6\\u0dd8-\\u0ddf\\u0de6-\\u0def\\u0df2\\u0df3\\u0e31\\u0e34-\\u0e3a\\u0e47-\\u0e4e\\u0e50-\\u0e59\\u0eb1\\u0eb4-\\u0ebc\\u0ec8-\\u0ecd\\u0ed0-\\u0ed9\\u0f18\\u0f19\\u0f20-\\u0f29\\u0f35\\u0f37\\u0f39\\u0f3e\\u0f3f\\u0f71-\\u0f84\\u0f86\\u0f87\\u0f8d-\\u0f97\\u0f99-\\u0fbc\\u0fc6\\u102b-\\u103e\\u1040-\\u1049\\u1056-\\u1059\\u105e-\\u1060\\u1062-\\u1064\\u1067-\\u106d\\u1071-\\u1074\\u1082-\\u108d\\u108f-\\u109d\\u135d-\\u135f\\u1369-\\u1371\\u1712-\\u1715\\u1732-\\u1734\\u1752\\u1753\\u1772\\u1773\\u17b4-\\u17d3\\u17dd\\u17e0-\\u17e9\\u180b-\\u180d\\u180f-\\u1819\\u18a9\\u1920-\\u192b\\u1930-\\u193b\\u1946-\\u194f\\u19d0-\\u19da\\u1a17-\\u1a1b\\u1a55-\\u1a5e\\u1a60-\\u1a7c\\u1a7f-\\u1a89\\u1a90-\\u1a99\\u1ab0-\\u1abd\\u1abf-\\u1ace\\u1b00-\\u1b04\\u1b34-\\u1b44\\u1b50-\\u1b59\\u1b6b-\\u1b73\\u1b80-\\u1b82\\u1ba1-\\u1bad\\u1bb0-\\u1bb9\\u1be6-\\u1bf3\\u1c24-\\u1c37\\u1c40-\\u1c49\\u1c50-\\u1c59\\u1cd0-\\u1cd2\\u1cd4-\\u1ce8\\u1ced\\u1cf4\\u1cf7-\\u1cf9\\u1dc0-\\u1dff\\u203f\\u2040\\u2054\\u20d0-\\u20dc\\u20e1\\u20e5-\\u20f0\\u2cef-\\u2cf1\\u2d7f\\u2de0-\\u2dff\\u302a-\\u302f\\u3099\\u309a\\ua620-\\ua629\\ua66f\\ua674-\\ua67d\\ua69e\\ua69f\\ua6f0\\ua6f1\\ua802\\ua806\\ua80b\\ua823-\\ua827\\ua82c\\ua880\\ua881\\ua8b4-\\ua8c5\\ua8d0-\\ua8d9\\ua8e0-\\ua8f1\\ua8ff-\\ua909\\ua926-\\ua92d\\ua947-\\ua953\\ua980-\\ua983\\ua9b3-\\ua9c0\\ua9d0-\\ua9d9\\ua9e5\\ua9f0-\\ua9f9\\uaa29-\\uaa36\\uaa43\\uaa4c\\uaa4d\\uaa50-\\uaa59\\uaa7b-\\uaa7d\\uaab0\\uaab2-\\uaab4\\uaab7\\uaab8\\uaabe\\uaabf\\uaac1\\uaaeb-\\uaaef\\uaaf5\\uaaf6\\uabe3-\\uabea\\uabec\\uabed\\uabf0-\\uabf9\\ufb1e\\ufe00-\\ufe0f\\ufe20-\\ufe2f\\ufe33\\ufe34\\ufe4d-\\ufe4f\\uff10-\\uff19\\uff3f\";\n\nconst nonASCIIidentifierStart = new RegExp(\n  \"[\" + nonASCIIidentifierStartChars + \"]\",\n);\nconst nonASCIIidentifier = new RegExp(\n  \"[\" + nonASCIIidentifierStartChars + nonASCIIidentifierChars + \"]\",\n);\n\nnonASCIIidentifierStartChars = nonASCIIidentifierChars = null;\n\n// These are a run-length and offset-encoded representation of the\n// >0xffff code points that are a valid part of identifiers. The\n// offset starts at 0x10000, and each pair of numbers represents an\n// offset to the next range, and then a size of the range. They were\n// generated by `scripts/generate-identifier-regex.js`.\n/* prettier-ignore */\nconst astralIdentifierStartCodes = [0,11,2,25,2,18,2,1,2,14,3,13,35,122,70,52,268,28,4,48,48,31,14,29,6,37,11,29,3,35,5,7,2,4,43,157,19,35,5,35,5,39,9,51,13,10,2,14,2,6,2,1,2,10,2,14,2,6,2,1,68,310,10,21,11,7,25,5,2,41,2,8,70,5,3,0,2,43,2,1,4,0,3,22,11,22,10,30,66,18,2,1,11,21,11,25,71,55,7,1,65,0,16,3,2,2,2,28,43,28,4,28,36,7,2,27,28,53,11,21,11,18,14,17,111,72,56,50,14,50,14,35,349,41,7,1,79,28,11,0,9,21,43,17,47,20,28,22,13,52,58,1,3,0,14,44,33,24,27,35,30,0,3,0,9,34,4,0,13,47,15,3,22,0,2,0,36,17,2,24,85,6,2,0,2,3,2,14,2,9,8,46,39,7,3,1,3,21,2,6,2,1,2,4,4,0,19,0,13,4,159,52,19,3,21,2,31,47,21,1,2,0,185,46,42,3,37,47,21,0,60,42,14,0,72,26,38,6,186,43,117,63,32,7,3,0,3,7,2,1,2,23,16,0,2,0,95,7,3,38,17,0,2,0,29,0,11,39,8,0,22,0,12,45,20,0,19,72,264,8,2,36,18,0,50,29,113,6,2,1,2,37,22,0,26,5,2,1,2,31,15,0,328,18,190,0,80,921,103,110,18,195,2637,96,16,1070,4050,582,8634,568,8,30,18,78,18,29,19,47,17,3,32,20,6,18,689,63,129,74,6,0,67,12,65,1,2,0,29,6135,9,1237,43,8,8936,3,2,6,2,1,2,290,46,2,18,3,9,395,2309,106,6,12,4,8,8,9,5991,84,2,70,2,1,3,0,3,1,3,3,2,11,2,0,2,6,2,64,2,3,3,7,2,6,2,27,2,3,2,4,2,0,4,6,2,339,3,24,2,24,2,30,2,24,2,30,2,24,2,30,2,24,2,30,2,24,2,7,1845,30,482,44,11,6,17,0,322,29,19,43,1269,6,2,3,2,1,2,14,2,196,60,67,8,0,1205,3,2,26,2,1,2,0,3,0,2,9,2,3,2,0,2,0,7,0,5,0,2,0,2,0,2,2,2,1,2,0,3,0,2,0,2,0,2,0,2,0,2,1,2,0,3,3,2,6,2,3,2,3,2,0,2,9,2,16,6,2,2,4,2,16,4421,42719,33,4152,8,221,3,5761,15,7472,3104,541,1507,4938];\n/* prettier-ignore */\nconst astralIdentifierCodes = [509,0,227,0,150,4,294,9,1368,2,2,1,6,3,41,2,5,0,166,1,574,3,9,9,370,1,154,10,50,3,123,2,54,14,32,10,3,1,11,3,46,10,8,0,46,9,7,2,37,13,2,9,6,1,45,0,13,2,49,13,9,3,2,11,83,11,7,0,161,11,6,9,7,3,56,1,2,6,3,1,3,2,10,0,11,1,3,6,4,4,193,17,10,9,5,0,82,19,13,9,214,6,3,8,28,1,83,16,16,9,82,12,9,9,84,14,5,9,243,14,166,9,71,5,2,1,3,3,2,0,2,1,13,9,120,6,3,6,4,0,29,9,41,6,2,3,9,0,10,10,47,15,406,7,2,7,17,9,57,21,2,13,123,5,4,0,2,1,2,6,2,0,9,9,49,4,2,1,2,4,9,9,330,3,19306,9,87,9,39,4,60,6,26,9,1014,0,2,54,8,3,82,0,12,1,19628,1,4706,45,3,22,543,4,4,5,9,7,3,6,31,3,149,2,1418,49,513,54,5,49,9,0,15,0,23,4,2,14,1361,6,2,16,3,6,2,1,2,4,262,6,10,9,357,0,62,13,1495,6,110,6,6,9,4759,9,787719,239];\n\n// This has a complexity linear to the value of the code. The\n// assumption is that looking up astral identifier characters is\n// rare.\nfunction isInAstralSet(code: number, set: readonly number[]): boolean {\n  let pos = 0x10000;\n  for (let i = 0, length = set.length; i < length; i += 2) {\n    pos += set[i];\n    if (pos > code) return false;\n\n    pos += set[i + 1];\n    if (pos >= code) return true;\n  }\n  return false;\n}\n\n// Test whether a given character code starts an identifier.\n\nexport function isIdentifierStart(code: number): boolean {\n  if (code < charCodes.uppercaseA) return code === charCodes.dollarSign;\n  if (code <= charCodes.uppercaseZ) return true;\n  if (code < charCodes.lowercaseA) return code === charCodes.underscore;\n  if (code <= charCodes.lowercaseZ) return true;\n  if (code <= 0xffff) {\n    return (\n      code >= 0xaa && nonASCIIidentifierStart.test(String.fromCharCode(code))\n    );\n  }\n  return isInAstralSet(code, astralIdentifierStartCodes);\n}\n\n// Test whether a given character is part of an identifier.\n\nexport function isIdentifierChar(code: number): boolean {\n  if (code < charCodes.digit0) return code === charCodes.dollarSign;\n  if (code < charCodes.colon) return true;\n  if (code < charCodes.uppercaseA) return false;\n  if (code <= charCodes.uppercaseZ) return true;\n  if (code < charCodes.lowercaseA) return code === charCodes.underscore;\n  if (code <= charCodes.lowercaseZ) return true;\n  if (code <= 0xffff) {\n    return code >= 0xaa && nonASCIIidentifier.test(String.fromCharCode(code));\n  }\n  return (\n    isInAstralSet(code, astralIdentifierStartCodes) ||\n    isInAstralSet(code, astralIdentifierCodes)\n  );\n}\n\n// Test whether a given string is a valid identifier name\n\nexport function isIdentifierName(name: string): boolean {\n  let isFirst = true;\n  for (let i = 0; i < name.length; i++) {\n    // The implementation is based on\n    // https://source.chromium.org/chromium/chromium/src/+/master:v8/src/builtins/builtins-string-gen.cc;l=1455;drc=221e331b49dfefadbc6fa40b0c68e6f97606d0b3;bpv=0;bpt=1\n    // We reimplement `codePointAt` because `codePointAt` is a V8 builtin which is not inlined by TurboFan (as of M91)\n    // since `name` is mostly ASCII, an inlined `charCodeAt` wins here\n    let cp = name.charCodeAt(i);\n    if ((cp & 0xfc00) === 0xd800 && i + 1 < name.length) {\n      const trail = name.charCodeAt(++i);\n      if ((trail & 0xfc00) === 0xdc00) {\n        cp = 0x10000 + ((cp & 0x3ff) << 10) + (trail & 0x3ff);\n      }\n    }\n    if (isFirst) {\n      isFirst = false;\n      if (!isIdentifierStart(cp)) {\n        return false;\n      }\n    } else if (!isIdentifierChar(cp)) {\n      return false;\n    }\n  }\n  return !isFirst;\n}\n","const reservedWords = {\n  keyword: [\n    \"break\",\n    \"case\",\n    \"catch\",\n    \"continue\",\n    \"debugger\",\n    \"default\",\n    \"do\",\n    \"else\",\n    \"finally\",\n    \"for\",\n    \"function\",\n    \"if\",\n    \"return\",\n    \"switch\",\n    \"throw\",\n    \"try\",\n    \"var\",\n    \"const\",\n    \"while\",\n    \"with\",\n    \"new\",\n    \"this\",\n    \"super\",\n    \"class\",\n    \"extends\",\n    \"export\",\n    \"import\",\n    \"null\",\n    \"true\",\n    \"false\",\n    \"in\",\n    \"instanceof\",\n    \"typeof\",\n    \"void\",\n    \"delete\",\n  ],\n  strict: [\n    \"implements\",\n    \"interface\",\n    \"let\",\n    \"package\",\n    \"private\",\n    \"protected\",\n    \"public\",\n    \"static\",\n    \"yield\",\n  ],\n  strictBind: [\"eval\", \"arguments\"],\n};\nconst keywords = new Set(reservedWords.keyword);\nconst reservedWordsStrictSet = new Set(reservedWords.strict);\nconst reservedWordsStrictBindSet = new Set(reservedWords.strictBind);\n\n/**\n * Checks if word is a reserved word in non-strict mode\n */\nexport function isReservedWord(word: string, inModule: boolean): boolean {\n  return (inModule && word === \"await\") || word === \"enum\";\n}\n\n/**\n * Checks if word is a reserved word in non-binding strict mode\n *\n * Includes non-strict reserved words\n */\nexport function isStrictReservedWord(word: string, inModule: boolean): boolean {\n  return isReservedWord(word, inModule) || reservedWordsStrictSet.has(word);\n}\n\n/**\n * Checks if word is a reserved word in binding strict mode, but it is allowed as\n * a normal identifier.\n */\nexport function isStrictBindOnlyReservedWord(word: string): boolean {\n  return reservedWordsStrictBindSet.has(word);\n}\n\n/**\n * Checks if word is a reserved word in binding strict mode\n *\n * Includes non-strict reserved words and non-binding strict reserved words\n */\nexport function isStrictBindReservedWord(\n  word: string,\n  inModule: boolean,\n): boolean {\n  return (\n    isStrictReservedWord(word, inModule) || isStrictBindOnlyReservedWord(word)\n  );\n}\n\nexport function isKeyword(word: string): boolean {\n  return keywords.has(word);\n}\n","/* eslint max-len: 0 */\n\nimport * as charCodes from \"charcodes\";\nimport { isIdentifierStart } from \"@babel/helper-validator-identifier\";\n\nexport {\n  isIdentifierStart,\n  isIdentifierChar,\n  isReservedWord,\n  isStrictBindOnlyReservedWord,\n  isStrictBindReservedWord,\n  isStrictReservedWord,\n  isKeyword,\n} from \"@babel/helper-validator-identifier\";\n\nexport const keywordRelationalOperator = /^in(stanceof)?$/;\n\n// Test whether a current state character code and next character code is @\n\nexport function isIteratorStart(\n  current: number,\n  next: number,\n  next2: number,\n): boolean {\n  return (\n    current === charCodes.atSign &&\n    next === charCodes.atSign &&\n    isIdentifierStart(next2)\n  );\n}\n\n// This is the comprehensive set of JavaScript reserved words\n// If a word is in this set, it could be a reserved word,\n// depending on sourceType/strictMode/binding info. In other words\n// if a word is not in this set, it is not a reserved word under\n// any circumstance.\nconst reservedWordLikeSet = new Set([\n  \"break\",\n  \"case\",\n  \"catch\",\n  \"continue\",\n  \"debugger\",\n  \"default\",\n  \"do\",\n  \"else\",\n  \"finally\",\n  \"for\",\n  \"function\",\n  \"if\",\n  \"return\",\n  \"switch\",\n  \"throw\",\n  \"try\",\n  \"var\",\n  \"const\",\n  \"while\",\n  \"with\",\n  \"new\",\n  \"this\",\n  \"super\",\n  \"class\",\n  \"extends\",\n  \"export\",\n  \"import\",\n  \"null\",\n  \"true\",\n  \"false\",\n  \"in\",\n  \"instanceof\",\n  \"typeof\",\n  \"void\",\n  \"delete\",\n  // strict\n  \"implements\",\n  \"interface\",\n  \"let\",\n  \"package\",\n  \"private\",\n  \"protected\",\n  \"public\",\n  \"static\",\n  \"yield\",\n  // strictBind\n  \"eval\",\n  \"arguments\",\n  // reservedWorkLike\n  \"enum\",\n  \"await\",\n]);\n\nexport function canBeReservedWord(word: string): boolean {\n  return reservedWordLikeSet.has(word);\n}\n","// Each scope gets a bitset that may contain these flags\n// prettier-ignore\nexport const SCOPE_OTHER        = 0b000000000,\n             SCOPE_PROGRAM      = 0b000000001,\n             SCOPE_FUNCTION     = 0b000000010,\n             SCOPE_ARROW        = 0b000000100,\n             SCOPE_SIMPLE_CATCH = 0b000001000,\n             SCOPE_SUPER        = 0b000010000,\n             SCOPE_DIRECT_SUPER = 0b000100000,\n             SCOPE_CLASS        = 0b001000000,\n             SCOPE_STATIC_BLOCK = 0b010000000,\n             SCOPE_TS_MODULE    = 0b100000000,\n             SCOPE_VAR = SCOPE_PROGRAM | SCOPE_FUNCTION | SCOPE_TS_MODULE;\n\nexport type ScopeFlags =\n  | typeof SCOPE_OTHER\n  | typeof SCOPE_PROGRAM\n  | typeof SCOPE_FUNCTION\n  | typeof SCOPE_VAR\n  | typeof SCOPE_ARROW\n  | typeof SCOPE_SIMPLE_CATCH\n  | typeof SCOPE_SUPER\n  | typeof SCOPE_DIRECT_SUPER\n  | typeof SCOPE_CLASS\n  | typeof SCOPE_STATIC_BLOCK;\n\n// These flags are meant to be _only_ used inside the Scope class (or subclasses).\n// prettier-ignore\nexport const BIND_KIND_VALUE            = 0b000000_0000_01,\n             BIND_KIND_TYPE             = 0b000000_0000_10,\n             // Used in checkLVal and declareName to determine the type of a binding\n             BIND_SCOPE_VAR             = 0b000000_0001_00, // Var-style binding\n             BIND_SCOPE_LEXICAL         = 0b000000_0010_00, // Let- or const-style binding\n             BIND_SCOPE_FUNCTION        = 0b000000_0100_00, // Function declaration\n             BIND_SCOPE_OUTSIDE         = 0b000000_1000_00, // Special case for function names as\n                                                   // bound inside the function\n             // Misc flags\n             BIND_FLAGS_NONE            = 0b000001_0000_00,\n             BIND_FLAGS_CLASS           = 0b000010_0000_00,\n             BIND_FLAGS_TS_ENUM         = 0b000100_0000_00,\n             BIND_FLAGS_TS_CONST_ENUM   = 0b001000_0000_00,\n             BIND_FLAGS_TS_EXPORT_ONLY  = 0b010000_0000_00,\n             BIND_FLAGS_FLOW_DECLARE_FN = 0b100000_0000_00;\n\n// These flags are meant to be _only_ used by Scope consumers\n// prettier-ignore\n/*                              =    is value?    |    is type?    |      scope          |    misc flags    */\nexport const BIND_CLASS         = BIND_KIND_VALUE | BIND_KIND_TYPE | BIND_SCOPE_LEXICAL  | BIND_FLAGS_CLASS  ,\n             BIND_LEXICAL       = BIND_KIND_VALUE | 0              | BIND_SCOPE_LEXICAL  | 0                 ,\n             BIND_VAR           = BIND_KIND_VALUE | 0              | BIND_SCOPE_VAR      | 0                 ,\n             BIND_FUNCTION      = BIND_KIND_VALUE | 0              | BIND_SCOPE_FUNCTION | 0                 ,\n             BIND_TS_INTERFACE  = 0               | BIND_KIND_TYPE | 0                   | BIND_FLAGS_CLASS  ,\n             BIND_TS_TYPE       = 0               | BIND_KIND_TYPE | 0                   | 0                 ,\n             BIND_TS_ENUM       = BIND_KIND_VALUE | BIND_KIND_TYPE | BIND_SCOPE_LEXICAL  | BIND_FLAGS_TS_ENUM,\n             BIND_TS_AMBIENT    = 0               | 0              | 0            | BIND_FLAGS_TS_EXPORT_ONLY,\n             // These bindings don't introduce anything in the scope. They are used for assignments and\n             // function expressions IDs.\n             BIND_NONE          = 0               | 0              | 0                   | BIND_FLAGS_NONE   ,\n             BIND_OUTSIDE       = BIND_KIND_VALUE | 0              | 0                   | BIND_FLAGS_NONE   ,\n\n             BIND_TS_CONST_ENUM = BIND_TS_ENUM | BIND_FLAGS_TS_CONST_ENUM,\n             BIND_TS_NAMESPACE  = 0               | 0              | 0            | BIND_FLAGS_TS_EXPORT_ONLY,\n\n             BIND_FLOW_DECLARE_FN = BIND_FLAGS_FLOW_DECLARE_FN;\n\nexport type BindingTypes =\n  | typeof BIND_NONE\n  | typeof BIND_OUTSIDE\n  | typeof BIND_VAR\n  | typeof BIND_LEXICAL\n  | typeof BIND_CLASS\n  | typeof BIND_FUNCTION\n  | typeof BIND_TS_INTERFACE\n  | typeof BIND_TS_TYPE\n  | typeof BIND_TS_ENUM\n  | typeof BIND_TS_AMBIENT\n  | typeof BIND_TS_NAMESPACE;\n\n// prettier-ignore\nexport const CLASS_ELEMENT_FLAG_STATIC = 0b1_00,\n             CLASS_ELEMENT_KIND_GETTER = 0b0_10,\n             CLASS_ELEMENT_KIND_SETTER = 0b0_01,\n             CLASS_ELEMENT_KIND_ACCESSOR = CLASS_ELEMENT_KIND_GETTER | CLASS_ELEMENT_KIND_SETTER;\n\n// prettier-ignore\nexport const CLASS_ELEMENT_STATIC_GETTER   = CLASS_ELEMENT_KIND_GETTER | CLASS_ELEMENT_FLAG_STATIC,\n             CLASS_ELEMENT_STATIC_SETTER   = CLASS_ELEMENT_KIND_SETTER | CLASS_ELEMENT_FLAG_STATIC,\n             CLASS_ELEMENT_INSTANCE_GETTER = CLASS_ELEMENT_KIND_GETTER,\n             CLASS_ELEMENT_INSTANCE_SETTER = CLASS_ELEMENT_KIND_SETTER,\n             CLASS_ELEMENT_OTHER           = 0;\n\nexport type ClassElementTypes =\n  | typeof CLASS_ELEMENT_STATIC_GETTER\n  | typeof CLASS_ELEMENT_STATIC_SETTER\n  | typeof CLASS_ELEMENT_INSTANCE_GETTER\n  | typeof CLASS_ELEMENT_INSTANCE_SETTER\n  | typeof CLASS_ELEMENT_OTHER;\n","import type { Options } from \"../options\";\nimport type State from \"../tokenizer/state\";\nimport type { PluginsMap } from \"./index\";\nimport type ScopeHandler from \"../util/scope\";\nimport type ExpressionScopeHandler from \"../util/expression-scope\";\nimport type ClassScopeHandler from \"../util/class-scope\";\nimport type ProductionParameterHandler from \"../util/production-parameter\";\nimport type { PluginConfig } from \"../typings\";\n\nexport default class BaseParser {\n  // Properties set by constructor in index.js\n  declare options: Options;\n  declare inModule: boolean;\n  declare scope: ScopeHandler<any>;\n  declare classScope: ClassScopeHandler;\n  declare prodParam: ProductionParameterHandler;\n  declare expressionScope: ExpressionScopeHandler;\n  declare plugins: PluginsMap;\n  declare filename: string | undefined | null;\n  // Names of exports store. `default` is stored as a name for both\n  // `export default foo;` and `export { foo as default };`.\n  declare exportedIdentifiers: Set<string>;\n  sawUnambiguousESM: boolean = false;\n  ambiguousScriptDifferentAst: boolean = false;\n\n  // Initialized by Tokenizer\n  declare state: State;\n  // input and length are not in state as they are constant and we do\n  // not want to ever copy them, which happens if state gets cloned\n  declare input: string;\n  declare length: number;\n\n  // This method accepts either a string (plugin name) or an array pair\n  // (plugin name and options object). If an options object is given,\n  // then each value is non-recursively checked for identity with that\n  // plugin’s actual option value.\n  hasPlugin(pluginConfig: PluginConfig): boolean {\n    if (typeof pluginConfig === \"string\") {\n      return this.plugins.has(pluginConfig);\n    } else {\n      const [pluginName, pluginOptions] = pluginConfig;\n      if (!this.hasPlugin(pluginName)) {\n        return false;\n      }\n      const actualOptions = this.plugins.get(pluginName);\n      for (const key of Object.keys(\n        pluginOptions,\n      ) as (keyof typeof pluginOptions)[]) {\n        if (actualOptions?.[key] !== pluginOptions[key]) {\n          return false;\n        }\n      }\n      return true;\n    }\n  }\n\n  getPluginOption(plugin: string, name: string) {\n    return this.plugins.get(plugin)?.[name];\n  }\n}\n","/*:: declare var invariant; */\n\nimport BaseParser from \"./base\";\nimport type { Comment, Node } from \"../types\";\nimport * as charCodes from \"charcodes\";\nimport type { Undone } from \"./node\";\n\n/**\n * A whitespace token containing comments\n * @typedef CommentWhitespace\n * @type {object}\n * @property {number} start - the start of the whitespace token.\n * @property {number} end - the end of the whitespace token.\n * @property {Array<Comment>} comments - the containing comments\n * @property {Node | null} leadingNode - the immediately preceding AST node of the whitespace token\n * @property {Node | null} trailingNode - the immediately following AST node of the whitespace token\n * @property {Node | null} containingNode - the innermost AST node containing the whitespace\n *                                         with minimal size (|end - start|)\n */\nexport type CommentWhitespace = {\n  start: number;\n  end: number;\n  comments: Array<Comment>;\n  leadingNode: Node | null;\n  trailingNode: Node | null;\n  containingNode: Node | null;\n};\n\n/**\n * Merge comments with node's trailingComments or assign comments to be\n * trailingComments. New comments will be placed before old comments\n * because the commentStack is enumerated reversely.\n *\n * @param {Undone<Node>} node\n * @param {Array<Comment>} comments\n */\nfunction setTrailingComments(node: Undone<Node>, comments: Array<Comment>) {\n  if (node.trailingComments === undefined) {\n    node.trailingComments = comments;\n  } else {\n    node.trailingComments.unshift(...comments);\n  }\n}\n\n/**\n * Merge comments with node's leadingComments or assign comments to be\n * leadingComments. New comments will be placed before old comments\n * because the commentStack is enumerated reversely.\n *\n * @param {Undone<Node>} node\n * @param {Array<Comment>} comments\n */\nfunction setLeadingComments(node: Undone<Node>, comments: Array<Comment>) {\n  if (node.leadingComments === undefined) {\n    node.leadingComments = comments;\n  } else {\n    node.leadingComments.unshift(...comments);\n  }\n}\n\n/**\n * Merge comments with node's innerComments or assign comments to be\n * innerComments. New comments will be placed before old comments\n * because the commentStack is enumerated reversely.\n *\n * @param {Undone<Node>} node\n * @param {Array<Comment>} comments\n */\nexport function setInnerComments(node: Undone<Node>, comments: Array<Comment>) {\n  if (node.innerComments === undefined) {\n    node.innerComments = comments;\n  } else {\n    node.innerComments.unshift(...comments);\n  }\n}\n\n/**\n * Given node and elements array, if elements has non-null element,\n * merge comments to its trailingComments, otherwise merge comments\n * to node's innerComments\n *\n * @param {Undone<Node>} node\n * @param {Array<Node>} elements\n * @param {Array<Comment>} comments\n */\nfunction adjustInnerComments(\n  node: Undone<Node>,\n  elements: Array<Node>,\n  commentWS: CommentWhitespace,\n) {\n  let lastElement = null;\n  let i = elements.length;\n  while (lastElement === null && i > 0) {\n    lastElement = elements[--i];\n  }\n  if (lastElement === null || lastElement.start > commentWS.start) {\n    setInnerComments(node, commentWS.comments);\n  } else {\n    setTrailingComments(lastElement, commentWS.comments);\n  }\n}\n\n/** @class CommentsParser */\nexport default class CommentsParser extends BaseParser {\n  addComment(comment: Comment): void {\n    if (this.filename) comment.loc.filename = this.filename;\n    this.state.comments.push(comment);\n  }\n\n  /**\n   * Given a newly created AST node _n_, attach _n_ to a comment whitespace _w_ if applicable\n   * {@see {@link CommentWhitespace}}\n   *\n   * @param {Node} node\n   * @returns {void}\n   * @memberof CommentsParser\n   */\n  processComment(node: Node): void {\n    const { commentStack } = this.state;\n    const commentStackLength = commentStack.length;\n    if (commentStackLength === 0) return;\n    let i = commentStackLength - 1;\n    const lastCommentWS = commentStack[i];\n\n    if (lastCommentWS.start === node.end) {\n      lastCommentWS.leadingNode = node;\n      i--;\n    }\n\n    const { start: nodeStart } = node;\n    // invariant: for all 0 <= j <= i, let c = commentStack[j], c must satisfy c.end < node.end\n    for (; i >= 0; i--) {\n      const commentWS = commentStack[i];\n      const commentEnd = commentWS.end;\n      if (commentEnd > nodeStart) {\n        // by definition of commentWhiteSpace, this implies commentWS.start > nodeStart\n        // so node can be a containingNode candidate. At this time we can finalize the comment\n        // whitespace, because\n        // 1) its leadingNode or trailingNode, if exists, will not change\n        // 2) its containingNode have been assigned and will not change because it is the\n        //    innermost minimal-sized AST node\n        commentWS.containingNode = node;\n        this.finalizeComment(commentWS);\n        commentStack.splice(i, 1);\n      } else {\n        if (commentEnd === nodeStart) {\n          commentWS.trailingNode = node;\n        }\n        // stop the loop when commentEnd <= nodeStart\n        break;\n      }\n    }\n  }\n\n  /**\n   * Assign the comments of comment whitespaces to related AST nodes.\n   * Also adjust innerComments following trailing comma.\n   *\n   * @memberof CommentsParser\n   */\n  finalizeComment(commentWS: CommentWhitespace) {\n    const { comments } = commentWS;\n    if (commentWS.leadingNode !== null || commentWS.trailingNode !== null) {\n      if (commentWS.leadingNode !== null) {\n        setTrailingComments(commentWS.leadingNode, comments);\n      }\n      if (commentWS.trailingNode !== null) {\n        setLeadingComments(commentWS.trailingNode, comments);\n      }\n    } else {\n      /*:: invariant(commentWS.containingNode !== null) */\n      const { containingNode: node, start: commentStart } = commentWS;\n      if (this.input.charCodeAt(commentStart - 1) === charCodes.comma) {\n        // If a commentWhitespace follows a comma and the containingNode allows\n        // list structures with trailing comma, merge it to the trailingComment\n        // of the last non-null list element\n        switch (node.type) {\n          case \"ObjectExpression\":\n          case \"ObjectPattern\":\n          case \"RecordExpression\":\n            adjustInnerComments(node, node.properties, commentWS);\n            break;\n          case \"CallExpression\":\n          case \"OptionalCallExpression\":\n            adjustInnerComments(node, node.arguments, commentWS);\n            break;\n          case \"FunctionDeclaration\":\n          case \"FunctionExpression\":\n          case \"ArrowFunctionExpression\":\n          case \"ObjectMethod\":\n          case \"ClassMethod\":\n          case \"ClassPrivateMethod\":\n            adjustInnerComments(node, node.params, commentWS);\n            break;\n          case \"ArrayExpression\":\n          case \"ArrayPattern\":\n          case \"TupleExpression\":\n            adjustInnerComments(node, node.elements, commentWS);\n            break;\n          case \"ExportNamedDeclaration\":\n          case \"ImportDeclaration\":\n            adjustInnerComments(node, node.specifiers, commentWS);\n            break;\n          default: {\n            setInnerComments(node, comments);\n          }\n        }\n      } else {\n        setInnerComments(node, comments);\n      }\n    }\n  }\n\n  /**\n   * Drains remaining commentStack and applies finalizeComment\n   * to each comment whitespace. Used only in parseExpression\n   * where the top level AST node is _not_ Program\n   * {@see {@link CommentsParser#finalizeComment}}\n   *\n   * @memberof CommentsParser\n   */\n  finalizeRemainingComments() {\n    const { commentStack } = this.state;\n    for (let i = commentStack.length - 1; i >= 0; i--) {\n      this.finalizeComment(commentStack[i]);\n    }\n    this.state.commentStack = [];\n  }\n\n  /**\n   * Reset previous node trailing comments. Used in object / class\n   * property parsing. We parse `async`, `static`, `set` and `get`\n   * as an identifier but may reinterpret it into an async/static/accessor\n   * method later. In this case the identifier is not part of the AST and we\n   * should sync the knowledge to commentStacks\n   *\n   * For example, when parsing */\n  // async /* 1 */ function f() {}\n  /*\n   * the comment whitespace \"* 1 *\" has leading node Identifier(async). When\n   * we see the function token, we create a Function node and mark \"* 1 *\" as\n   * inner comments. So \"* 1 *\" should be detached from the Identifier node.\n   *\n   * @param {N.Node} node the last finished AST node _before_ current token\n   * @returns\n   * @memberof CommentsParser\n   */\n  resetPreviousNodeTrailingComments(node: Node) {\n    const { commentStack } = this.state;\n    const { length } = commentStack;\n    if (length === 0) return;\n    const commentWS = commentStack[length - 1];\n    if (commentWS.leadingNode === node) {\n      commentWS.leadingNode = null;\n    }\n  }\n\n  /**\n   * Attach a node to the comment whitespaces right before/after\n   * the given range.\n   *\n   * This is used to properly attach comments around parenthesized\n   * expressions as leading/trailing comments of the inner expression.\n   *\n   * @param {Node} node\n   * @param {number} start\n   * @param {number} end\n   */\n  takeSurroundingComments(node: Node, start: number, end: number) {\n    const { commentStack } = this.state;\n    const commentStackLength = commentStack.length;\n    if (commentStackLength === 0) return;\n    let i = commentStackLength - 1;\n\n    for (; i >= 0; i--) {\n      const commentWS = commentStack[i];\n      const commentEnd = commentWS.end;\n      const commentStart = commentWS.start;\n\n      if (commentStart === end) {\n        commentWS.leadingNode = node;\n      } else if (commentEnd === start) {\n        commentWS.trailingNode = node;\n      } else if (commentEnd < start) {\n        break;\n      }\n    }\n  }\n}\n","import * as charCodes from \"charcodes\";\n\n// Matches a whole line break (where CRLF is considered a single\n// line break). Used to count lines.\nexport const lineBreak = /\\r\\n?|[\\n\\u2028\\u2029]/;\nexport const lineBreakG = new RegExp(lineBreak.source, \"g\");\n\n// https://tc39.github.io/ecma262/#sec-line-terminators\nexport function isNewLine(code: number): boolean {\n  switch (code) {\n    case charCodes.lineFeed:\n    case charCodes.carriageReturn:\n    case charCodes.lineSeparator:\n    case charCodes.paragraphSeparator:\n      return true;\n\n    default:\n      return false;\n  }\n}\n\nexport const skipWhiteSpace = /(?:\\s|\\/\\/.*|\\/\\*[^]*?\\*\\/)*/g;\n\nexport const skipWhiteSpaceInLine =\n  /(?:[^\\S\\n\\r\\u2028\\u2029]|\\/\\/.*|\\/\\*.*?\\*\\/)*/y;\n\n// Skip whitespace and single-line comments, including /* no newline here */.\n// After this RegExp matches, its lastIndex points to a line terminator, or\n// the start of multi-line comment (which is effectively a line terminator),\n// or the end of string.\nexport const skipWhiteSpaceToLineBreak = new RegExp(\n  // Unfortunately JS doesn't support Perl's atomic /(?>pattern)/ or\n  // possessive quantifiers, so we use a trick to prevent backtracking\n  // when the look-ahead for line terminator fails.\n  \"(?=(\" +\n    // Capture the whitespace and comments that should be skipped inside\n    // a look-ahead assertion, and then re-match the group as a unit.\n    skipWhiteSpaceInLine.source +\n    \"))\\\\1\" +\n    // Look-ahead for either line terminator, start of multi-line comment,\n    // or end of string.\n    /(?=[\\n\\r\\u2028\\u2029]|\\/\\*(?!.*?\\*\\/)|$)/.source,\n  \"y\", // sticky\n);\n\n// https://tc39.github.io/ecma262/#sec-white-space\nexport function isWhitespace(code: number): boolean {\n  switch (code) {\n    case 0x0009: // CHARACTER TABULATION\n    case 0x000b: // LINE TABULATION\n    case 0x000c: // FORM FEED\n    case charCodes.space:\n    case charCodes.nonBreakingSpace:\n    case charCodes.oghamSpaceMark:\n    case 0x2000: // EN QUAD\n    case 0x2001: // EM QUAD\n    case 0x2002: // EN SPACE\n    case 0x2003: // EM SPACE\n    case 0x2004: // THREE-PER-EM SPACE\n    case 0x2005: // FOUR-PER-EM SPACE\n    case 0x2006: // SIX-PER-EM SPACE\n    case 0x2007: // FIGURE SPACE\n    case 0x2008: // PUNCTUATION SPACE\n    case 0x2009: // THIN SPACE\n    case 0x200a: // HAIR SPACE\n    case 0x202f: // NARROW NO-BREAK SPACE\n    case 0x205f: // MEDIUM MATHEMATICAL SPACE\n    case 0x3000: // IDEOGRAPHIC SPACE\n    case 0xfeff: // ZERO WIDTH NO-BREAK SPACE\n      return true;\n\n    default:\n      return false;\n  }\n}\n","import type { Options } from \"../options\";\nimport * as N from \"../types\";\nimport type { CommentWhitespace } from \"../parser/comments\";\nimport { Position } from \"../util/location\";\n\nimport { types as ct, type TokContext } from \"./context\";\nimport { tt, type TokenType } from \"./types\";\nimport { Errors, type ParseError } from \"../parse-error\";\n\nexport type DeferredStrictError =\n  | typeof Errors.StrictNumericEscape\n  | typeof Errors.StrictOctalLiteral;\n\ntype TopicContextState = {\n  // When a topic binding has been currently established,\n  // then this is 1. Otherwise, it is 0. This is forwards compatible\n  // with a future plugin for multiple lexical topics.\n  maxNumOfResolvableTopics: number;\n  // When a topic binding has been currently established, and if that binding\n  // has been used as a topic reference `#`, then this is 0. Otherwise, it is\n  // `null`. This is forwards compatible with a future plugin for multiple\n  // lexical topics.\n  maxTopicIndex: null | 0;\n};\n\nexport default class State {\n  strict: boolean;\n  curLine: number;\n  lineStart: number;\n\n  // And, if locations are used, the {line, column} object\n  // corresponding to those offsets\n  startLoc: Position;\n  endLoc: Position;\n\n  init({ strictMode, sourceType, startLine, startColumn }: Options): void {\n    this.strict =\n      strictMode === false\n        ? false\n        : strictMode === true\n        ? true\n        : sourceType === \"module\";\n\n    this.curLine = startLine;\n    this.lineStart = -startColumn;\n    this.startLoc = this.endLoc = new Position(startLine, startColumn, 0);\n  }\n\n  errors: ParseError<any>[] = [];\n\n  // Used to signify the start of a potential arrow function\n  potentialArrowAt: number = -1;\n\n  // Used to signify the start of an expression which looks like a\n  // typed arrow function, but it isn't\n  // e.g. a ? (b) : c => d\n  //          ^\n  noArrowAt: number[] = [];\n\n  // Used to signify the start of an expression whose params, if it looks like\n  // an arrow function, shouldn't be converted to assignable nodes.\n  // This is used to defer the validation of typed arrow functions inside\n  // conditional expressions.\n  // e.g. a ? (b) : c => d\n  //          ^\n  noArrowParamsConversionAt: number[] = [];\n\n  // Flags to track\n  maybeInArrowParameters: boolean = false;\n  inType: boolean = false;\n  noAnonFunctionType: boolean = false;\n  hasFlowComment: boolean = false;\n  isAmbientContext: boolean = false;\n  inAbstractClass: boolean = false;\n  inDisallowConditionalTypesContext: boolean = false;\n\n  // For the Hack-style pipelines plugin\n  topicContext: TopicContextState = {\n    maxNumOfResolvableTopics: 0,\n    maxTopicIndex: null,\n  };\n\n  // For the F#-style pipelines plugin\n  soloAwait: boolean = false;\n  inFSharpPipelineDirectBody: boolean = false;\n\n  // Labels in scope.\n  labels: Array<{\n    kind: \"loop\" | \"switch\" | undefined | null;\n    name?: string | null;\n    statementStart?: number;\n  }> = [];\n\n  // Leading decorators. Last element of the stack represents the decorators in current context.\n  // Supports nesting of decorators, e.g. @foo(@bar class inner {}) class outer {}\n  // where @foo belongs to the outer class and @bar to the inner\n  decoratorStack: Array<Array<N.Decorator>> = [[]];\n\n  // Comment store for Program.comments\n  comments: Array<N.Comment> = [];\n\n  // Comment attachment store\n  commentStack: Array<CommentWhitespace> = [];\n\n  // The current position of the tokenizer in the input.\n  pos: number = 0;\n\n  // Properties of the current token:\n  // Its type\n  type: TokenType = tt.eof;\n\n  // For tokens that include more information than their type, the value\n  value: any = null;\n\n  // Its start and end offset\n  start: number = 0;\n  end: number = 0;\n\n  // Position information for the previous token\n  // this is initialized when generating the second token.\n  lastTokEndLoc: Position = null;\n  // this is initialized when generating the second token.\n  lastTokStartLoc: Position = null;\n  lastTokStart: number = 0;\n\n  // The context stack is used to track whether the apostrophe \"`\" starts\n  // or ends a string template\n  context: Array<TokContext> = [ct.brace];\n  // Used to track whether a JSX element is allowed to form\n  canStartJSXElement: boolean = true;\n\n  // Used to signal to callers of `readWord1` whether the word\n  // contained any escape sequences. This is needed because words with\n  // escape sequences must not be interpreted as keywords.\n  containsEsc: boolean = false;\n\n  // This property is used to track the following errors\n  // - StrictNumericEscape\n  // - StrictOctalLiteral\n  //\n  // in a literal that occurs prior to/immediately after a \"use strict\" directive.\n\n  // todo(JLHwung): set strictErrors to null and avoid recording string errors\n  // after a non-directive is parsed\n  strictErrors: Map<number, [DeferredStrictError, Position]> = new Map();\n\n  // Tokens length in token store\n  tokensLength: number = 0;\n\n  curPosition(): Position {\n    return new Position(this.curLine, this.pos - this.lineStart, this.pos);\n  }\n\n  clone(skipArrays?: boolean): State {\n    const state = new State();\n    const keys = Object.keys(this) as (keyof State)[];\n    for (let i = 0, length = keys.length; i < length; i++) {\n      const key = keys[i];\n      let val = this[key];\n\n      if (!skipArrays && Array.isArray(val)) {\n        val = val.slice();\n      }\n\n      // @ts-expect-error\n      state[key] = val;\n    }\n\n    return state;\n  }\n}\n\nexport type LookaheadState = {\n  pos: number;\n  value: any;\n  type: TokenType;\n  start: number;\n  end: number;\n  context: TokContext[];\n  startLoc: Position;\n  lastTokEndLoc: Position;\n  curLine: number;\n  lineStart: number;\n  curPosition: () => Position;\n  /* Used only in readToken_mult_modulo */\n  inType: boolean;\n};\n","import * as charCodes from \"charcodes\";\n\n// The following character codes are forbidden from being\n// an immediate sibling of NumericLiteralSeparator _\nconst forbiddenNumericSeparatorSiblings = {\n  decBinOct: new Set<number>([\n    charCodes.dot,\n    charCodes.uppercaseB,\n    charCodes.uppercaseE,\n    charCodes.uppercaseO,\n    charCodes.underscore, // multiple separators are not allowed\n    charCodes.lowercaseB,\n    charCodes.lowercaseE,\n    charCodes.lowercaseO,\n  ]),\n  hex: new Set<number>([\n    charCodes.dot,\n    charCodes.uppercaseX,\n    charCodes.underscore, // multiple separators are not allowed\n    charCodes.lowercaseX,\n  ]),\n};\n\nconst isAllowedNumericSeparatorSibling = {\n  // 0 - 1\n  bin: (ch: number) => ch === charCodes.digit0 || ch === charCodes.digit1,\n\n  // 0 - 7\n  oct: (ch: number) => ch >= charCodes.digit0 && ch <= charCodes.digit7,\n\n  // 0 - 9\n  dec: (ch: number) => ch >= charCodes.digit0 && ch <= charCodes.digit9,\n\n  // 0 - 9, A - F, a - f,\n  hex: (ch: number) =>\n    (ch >= charCodes.digit0 && ch <= charCodes.digit9) ||\n    (ch >= charCodes.uppercaseA && ch <= charCodes.uppercaseF) ||\n    (ch >= charCodes.lowercaseA && ch <= charCodes.lowercaseF),\n};\n\nexport type StringContentsErrorHandlers = EscapedCharErrorHandlers & {\n  unterminated(\n    initialPos: number,\n    initialLineStart: number,\n    initialCurLine: number,\n  ): void;\n};\n\nexport function readStringContents(\n  type: \"single\" | \"double\" | \"template\",\n  input: string,\n  pos: number,\n  lineStart: number,\n  curLine: number,\n  errors: StringContentsErrorHandlers,\n) {\n  const initialPos = pos;\n  const initialLineStart = lineStart;\n  const initialCurLine = curLine;\n\n  let out = \"\";\n  let containsInvalid = false;\n  let chunkStart = pos;\n  const { length } = input;\n  for (;;) {\n    if (pos >= length) {\n      errors.unterminated(initialPos, initialLineStart, initialCurLine);\n      out += input.slice(chunkStart, pos);\n      break;\n    }\n    const ch = input.charCodeAt(pos);\n    if (isStringEnd(type, ch, input, pos)) {\n      out += input.slice(chunkStart, pos);\n      break;\n    }\n    if (ch === charCodes.backslash) {\n      out += input.slice(chunkStart, pos);\n      let escaped;\n      ({\n        ch: escaped,\n        pos,\n        lineStart,\n        curLine,\n      } = readEscapedChar(\n        input,\n        pos,\n        lineStart,\n        curLine,\n        type === \"template\",\n        errors,\n      ));\n      if (escaped === null) {\n        containsInvalid = true;\n      } else {\n        out += escaped;\n      }\n      chunkStart = pos;\n    } else if (\n      ch === charCodes.lineSeparator ||\n      ch === charCodes.paragraphSeparator\n    ) {\n      ++pos;\n      ++curLine;\n      lineStart = pos;\n    } else if (ch === charCodes.lineFeed || ch === charCodes.carriageReturn) {\n      if (type === \"template\") {\n        out += input.slice(chunkStart, pos) + \"\\n\";\n        ++pos;\n        if (\n          ch === charCodes.carriageReturn &&\n          input.charCodeAt(pos) === charCodes.lineFeed\n        ) {\n          ++pos;\n        }\n        ++curLine;\n        chunkStart = lineStart = pos;\n      } else {\n        errors.unterminated(initialPos, initialLineStart, initialCurLine);\n      }\n    } else {\n      ++pos;\n    }\n  }\n  return { pos, str: out, containsInvalid, lineStart, curLine };\n}\n\nfunction isStringEnd(\n  type: \"single\" | \"double\" | \"template\",\n  ch: number,\n  input: string,\n  pos: number,\n) {\n  if (type === \"template\") {\n    return (\n      ch === charCodes.graveAccent ||\n      (ch === charCodes.dollarSign &&\n        input.charCodeAt(pos + 1) === charCodes.leftCurlyBrace)\n    );\n  }\n  return (\n    ch === (type === \"double\" ? charCodes.quotationMark : charCodes.apostrophe)\n  );\n}\n\ntype EscapedCharErrorHandlers = HexCharErrorHandlers &\n  CodePointErrorHandlers & {\n    strictNumericEscape(pos: number, lineStart: number, curLine: number): void;\n  };\n\nfunction readEscapedChar(\n  input: string,\n  pos: number,\n  lineStart: number,\n  curLine: number,\n  inTemplate: boolean,\n  errors: EscapedCharErrorHandlers,\n) {\n  const throwOnInvalid = !inTemplate;\n  pos++; // skip '\\'\n\n  const res = (ch: string | null) => ({ pos, ch, lineStart, curLine });\n\n  const ch = input.charCodeAt(pos++);\n  switch (ch) {\n    case charCodes.lowercaseN:\n      return res(\"\\n\");\n    case charCodes.lowercaseR:\n      return res(\"\\r\");\n    case charCodes.lowercaseX: {\n      let code;\n      ({ code, pos } = readHexChar(\n        input,\n        pos,\n        lineStart,\n        curLine,\n        2,\n        false,\n        throwOnInvalid,\n        errors,\n      ));\n      return res(code === null ? null : String.fromCharCode(code));\n    }\n    case charCodes.lowercaseU: {\n      let code;\n      ({ code, pos } = readCodePoint(\n        input,\n        pos,\n        lineStart,\n        curLine,\n        throwOnInvalid,\n        errors,\n      ));\n      return res(code === null ? null : String.fromCodePoint(code));\n    }\n    case charCodes.lowercaseT:\n      return res(\"\\t\");\n    case charCodes.lowercaseB:\n      return res(\"\\b\");\n    case charCodes.lowercaseV:\n      return res(\"\\u000b\");\n    case charCodes.lowercaseF:\n      return res(\"\\f\");\n    case charCodes.carriageReturn:\n      if (input.charCodeAt(pos) === charCodes.lineFeed) {\n        ++pos;\n      }\n    // fall through\n    case charCodes.lineFeed:\n      lineStart = pos;\n      ++curLine;\n    // fall through\n    case charCodes.lineSeparator:\n    case charCodes.paragraphSeparator:\n      return res(\"\");\n    case charCodes.digit8:\n    case charCodes.digit9:\n      if (inTemplate) {\n        return res(null);\n      } else {\n        errors.strictNumericEscape(pos - 1, lineStart, curLine);\n      }\n    // fall through\n    default:\n      if (ch >= charCodes.digit0 && ch <= charCodes.digit7) {\n        const startPos = pos - 1;\n        const match = input.slice(startPos, pos + 2).match(/^[0-7]+/)!;\n\n        let octalStr = match[0];\n\n        let octal = parseInt(octalStr, 8);\n        if (octal > 255) {\n          octalStr = octalStr.slice(0, -1);\n          octal = parseInt(octalStr, 8);\n        }\n        pos += octalStr.length - 1;\n        const next = input.charCodeAt(pos);\n        if (\n          octalStr !== \"0\" ||\n          next === charCodes.digit8 ||\n          next === charCodes.digit9\n        ) {\n          if (inTemplate) {\n            return res(null);\n          } else {\n            errors.strictNumericEscape(startPos, lineStart, curLine);\n          }\n        }\n\n        return res(String.fromCharCode(octal));\n      }\n\n      return res(String.fromCharCode(ch));\n  }\n}\n\ntype HexCharErrorHandlers = IntErrorHandlers & {\n  invalidEscapeSequence(pos: number, lineStart: number, curLine: number): void;\n};\n\n// Used to read character escape sequences ('\\x', '\\u').\nfunction readHexChar(\n  input: string,\n  pos: number,\n  lineStart: number,\n  curLine: number,\n  len: number,\n  forceLen: boolean,\n  throwOnInvalid: boolean,\n  errors: HexCharErrorHandlers,\n) {\n  const initialPos = pos;\n  let n;\n  ({ n, pos } = readInt(\n    input,\n    pos,\n    lineStart,\n    curLine,\n    16,\n    len,\n    forceLen,\n    false,\n    errors,\n  ));\n  if (n === null) {\n    if (throwOnInvalid) {\n      errors.invalidEscapeSequence(initialPos, lineStart, curLine);\n    } else {\n      pos = initialPos - 1;\n    }\n  }\n  return { code: n, pos };\n}\n\nexport type IntErrorHandlers = {\n  numericSeparatorInEscapeSequence(\n    pos: number,\n    lineStart: number,\n    curLine: number,\n  ): void;\n  unexpectedNumericSeparator(\n    pos: number,\n    lineStart: number,\n    curLine: number,\n  ): void;\n  // It can return \"true\" to indicate that the error was handled\n  // and the int parsing should continue.\n  invalidDigit(\n    pos: number,\n    lineStart: number,\n    curLine: number,\n    radix: number,\n  ): boolean;\n};\n\nexport function readInt(\n  input: string,\n  pos: number,\n  lineStart: number,\n  curLine: number,\n  radix: number,\n  len: number | undefined,\n  forceLen: boolean,\n  allowNumSeparator: boolean | \"bail\",\n  errors: IntErrorHandlers,\n) {\n  const start = pos;\n  const forbiddenSiblings =\n    radix === 16\n      ? forbiddenNumericSeparatorSiblings.hex\n      : forbiddenNumericSeparatorSiblings.decBinOct;\n  const isAllowedSibling =\n    radix === 16\n      ? isAllowedNumericSeparatorSibling.hex\n      : radix === 10\n      ? isAllowedNumericSeparatorSibling.dec\n      : radix === 8\n      ? isAllowedNumericSeparatorSibling.oct\n      : isAllowedNumericSeparatorSibling.bin;\n\n  let invalid = false;\n  let total = 0;\n\n  for (let i = 0, e = len == null ? Infinity : len; i < e; ++i) {\n    const code = input.charCodeAt(pos);\n    let val;\n\n    if (code === charCodes.underscore && allowNumSeparator !== \"bail\") {\n      const prev = input.charCodeAt(pos - 1);\n      const next = input.charCodeAt(pos + 1);\n\n      if (!allowNumSeparator) {\n        errors.numericSeparatorInEscapeSequence(pos, lineStart, curLine);\n      } else if (\n        Number.isNaN(next) ||\n        !isAllowedSibling(next) ||\n        forbiddenSiblings.has(prev) ||\n        forbiddenSiblings.has(next)\n      ) {\n        errors.unexpectedNumericSeparator(pos, lineStart, curLine);\n      }\n\n      // Ignore this _ character\n      ++pos;\n      continue;\n    }\n\n    if (code >= charCodes.lowercaseA) {\n      val = code - charCodes.lowercaseA + charCodes.lineFeed;\n    } else if (code >= charCodes.uppercaseA) {\n      val = code - charCodes.uppercaseA + charCodes.lineFeed;\n    } else if (charCodes.isDigit(code)) {\n      val = code - charCodes.digit0; // 0-9\n    } else {\n      val = Infinity;\n    }\n    if (val >= radix) {\n      // If we found a digit which is too big, errors.invalidDigit can return true to avoid\n      // breaking the loop (this is used for error recovery).\n      if (val <= 9 && errors.invalidDigit(pos, lineStart, curLine, radix)) {\n        val = 0;\n      } else if (forceLen) {\n        val = 0;\n        invalid = true;\n      } else {\n        break;\n      }\n    }\n    ++pos;\n    total = total * radix + val;\n  }\n  if (pos === start || (len != null && pos - start !== len) || invalid) {\n    return { n: null, pos };\n  }\n\n  return { n: total, pos };\n}\n\nexport type CodePointErrorHandlers = HexCharErrorHandlers & {\n  invalidCodePoint(pos: number, lineStart: number, curLine: number): void;\n};\n\nexport function readCodePoint(\n  input: string,\n  pos: number,\n  lineStart: number,\n  curLine: number,\n  throwOnInvalid: boolean,\n  errors: CodePointErrorHandlers,\n) {\n  const ch = input.charCodeAt(pos);\n  let code;\n\n  if (ch === charCodes.leftCurlyBrace) {\n    ++pos;\n    ({ code, pos } = readHexChar(\n      input,\n      pos,\n      lineStart,\n      curLine,\n      input.indexOf(\"}\", pos) - pos,\n      true,\n      throwOnInvalid,\n      errors,\n    ));\n    ++pos;\n    if (code !== null && code > 0x10ffff) {\n      if (throwOnInvalid) {\n        errors.invalidCodePoint(pos, lineStart, curLine);\n      } else {\n        return { code: null, pos };\n      }\n    }\n  } else {\n    ({ code, pos } = readHexChar(\n      input,\n      pos,\n      lineStart,\n      curLine,\n      4,\n      false,\n      throwOnInvalid,\n      errors,\n    ));\n  }\n  return { code, pos };\n}\n","/*:: declare var invariant; */\n\nimport type { Options } from \"../options\";\nimport {\n  Position,\n  SourceLocation,\n  createPositionWithColumnOffset,\n} from \"../util/location\";\nimport CommentsParser, { type CommentWhitespace } from \"../parser/comments\";\nimport * as N from \"../types\";\nimport * as charCodes from \"charcodes\";\nimport { isIdentifierStart, isIdentifierChar } from \"../util/identifier\";\nimport {\n  tokenIsKeyword,\n  tokenLabelName,\n  tt,\n  keywords as keywordTypes,\n  type TokenType,\n} from \"./types\";\nimport { type TokContext } from \"./context\";\nimport {\n  Errors,\n  type ParseError,\n  type ParseErrorConstructor,\n  type RaiseProperties,\n} from \"../parse-error\";\nimport {\n  lineBreakG,\n  isNewLine,\n  isWhitespace,\n  skipWhiteSpace,\n} from \"../util/whitespace\";\nimport State from \"./state\";\nimport type { LookaheadState, DeferredStrictError } from \"./state\";\n\nimport {\n  readInt,\n  readCodePoint,\n  readStringContents,\n  type IntErrorHandlers,\n  type CodePointErrorHandlers,\n  type StringContentsErrorHandlers,\n} from \"@babel/helper-string-parser\";\n\nimport type { Plugin } from \"../typings\";\n\nfunction buildPosition(pos: number, lineStart: number, curLine: number) {\n  return new Position(curLine, pos - lineStart, pos);\n}\n\nconst VALID_REGEX_FLAGS = new Set([\n  charCodes.lowercaseG,\n  charCodes.lowercaseM,\n  charCodes.lowercaseS,\n  charCodes.lowercaseI,\n  charCodes.lowercaseY,\n  charCodes.lowercaseU,\n  charCodes.lowercaseD,\n  // This is only valid when using the regexpUnicodeSets plugin\n  charCodes.lowercaseV,\n]);\n\n// Object type used to represent tokens. Note that normally, tokens\n// simply exist as properties on the parser object. This is only\n// used for the onToken callback and the external tokenizer.\n\nexport class Token {\n  constructor(state: State) {\n    this.type = state.type;\n    this.value = state.value;\n    this.start = state.start;\n    this.end = state.end;\n    this.loc = new SourceLocation(state.startLoc, state.endLoc);\n  }\n\n  declare type: TokenType;\n  declare value: any;\n  declare start: number;\n  declare end: number;\n  declare loc: SourceLocation;\n}\n\n// ## Tokenizer\n\nexport default class Tokenizer extends CommentsParser {\n  isLookahead: boolean;\n\n  // Token store.\n  tokens: Array<Token | N.Comment> = [];\n\n  constructor(options: Options, input: string) {\n    super();\n    this.state = new State();\n    this.state.init(options);\n    this.input = input;\n    this.length = input.length;\n    this.isLookahead = false;\n  }\n\n  pushToken(token: Token | N.Comment) {\n    // Pop out invalid tokens trapped by try-catch parsing.\n    // Those parsing branches are mainly created by typescript and flow plugins.\n    this.tokens.length = this.state.tokensLength;\n    this.tokens.push(token);\n    ++this.state.tokensLength;\n  }\n\n  // Move to the next token\n\n  next(): void {\n    this.checkKeywordEscapes();\n    if (this.options.tokens) {\n      this.pushToken(new Token(this.state));\n    }\n\n    this.state.lastTokStart = this.state.start;\n    this.state.lastTokEndLoc = this.state.endLoc;\n    this.state.lastTokStartLoc = this.state.startLoc;\n    this.nextToken();\n  }\n\n  // TODO\n\n  eat(type: TokenType): boolean {\n    if (this.match(type)) {\n      this.next();\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  /**\n   * Whether current token matches given type\n   *\n   * @param {TokenType} type\n   * @returns {boolean}\n   * @memberof Tokenizer\n   */\n  match(type: TokenType): boolean {\n    return this.state.type === type;\n  }\n\n  /**\n   * Create a LookaheadState from current parser state\n   *\n   * @param {State} state\n   * @returns {LookaheadState}\n   * @memberof Tokenizer\n   */\n  createLookaheadState(state: State): LookaheadState {\n    return {\n      pos: state.pos,\n      value: null,\n      type: state.type,\n      start: state.start,\n      end: state.end,\n      context: [this.curContext()],\n      inType: state.inType,\n      startLoc: state.startLoc,\n      lastTokEndLoc: state.lastTokEndLoc,\n      curLine: state.curLine,\n      lineStart: state.lineStart,\n      curPosition: state.curPosition,\n    };\n  }\n\n  /**\n   * lookahead peeks the next token, skipping changes to token context and\n   * comment stack. For performance it returns a limited LookaheadState\n   * instead of full parser state.\n   *\n   * The { column, line } Loc info is not included in lookahead since such usage\n   * is rare. Although it may return other location properties e.g. `curLine` and\n   * `lineStart`, these properties are not listed in the LookaheadState interface\n   * and thus the returned value is _NOT_ reliable.\n   *\n   * The tokenizer should make best efforts to avoid using any parser state\n   * other than those defined in LookaheadState\n   *\n   * @returns {LookaheadState}\n   * @memberof Tokenizer\n   */\n  lookahead(): LookaheadState {\n    const old = this.state;\n    // For performance we use a simplified tokenizer state structure\n    // @ts-expect-error\n    this.state = this.createLookaheadState(old);\n\n    this.isLookahead = true;\n    this.nextToken();\n    this.isLookahead = false;\n\n    const curr = this.state;\n    this.state = old;\n    return curr;\n  }\n\n  nextTokenStart(): number {\n    return this.nextTokenStartSince(this.state.pos);\n  }\n\n  nextTokenStartSince(pos: number): number {\n    skipWhiteSpace.lastIndex = pos;\n    return skipWhiteSpace.test(this.input) ? skipWhiteSpace.lastIndex : pos;\n  }\n\n  lookaheadCharCode(): number {\n    return this.input.charCodeAt(this.nextTokenStart());\n  }\n\n  codePointAtPos(pos: number): number {\n    // The implementation is based on\n    // https://source.chromium.org/chromium/chromium/src/+/master:v8/src/builtins/builtins-string-gen.cc;l=1455;drc=221e331b49dfefadbc6fa40b0c68e6f97606d0b3;bpv=0;bpt=1\n    // We reimplement `codePointAt` because `codePointAt` is a V8 builtin which is not inlined by TurboFan (as of M91)\n    // since `input` is mostly ASCII, an inlined `charCodeAt` wins here\n    let cp = this.input.charCodeAt(pos);\n    if ((cp & 0xfc00) === 0xd800 && ++pos < this.input.length) {\n      const trail = this.input.charCodeAt(pos);\n      if ((trail & 0xfc00) === 0xdc00) {\n        cp = 0x10000 + ((cp & 0x3ff) << 10) + (trail & 0x3ff);\n      }\n    }\n    return cp;\n  }\n\n  // Toggle strict mode. Re-reads the next number or string to please\n  // pedantic tests (`\"use strict\"; 010;` should fail).\n\n  setStrict(strict: boolean): void {\n    this.state.strict = strict;\n    if (strict) {\n      // Throw an error for any string decimal escape found before/immediately\n      // after a \"use strict\" directive. Strict mode will be set at parse\n      // time for any literals that occur after the next node of the strict\n      // directive.\n      this.state.strictErrors.forEach(([toParseError, at]) =>\n        this.raise(toParseError, { at }),\n      );\n      this.state.strictErrors.clear();\n    }\n  }\n\n  curContext(): TokContext {\n    return this.state.context[this.state.context.length - 1];\n  }\n\n  // Read a single token, updating the parser object's token-related\n  // properties.\n\n  nextToken(): void {\n    this.skipSpace();\n    this.state.start = this.state.pos;\n    if (!this.isLookahead) this.state.startLoc = this.state.curPosition();\n    if (this.state.pos >= this.length) {\n      this.finishToken(tt.eof);\n      return;\n    }\n\n    this.getTokenFromCode(this.codePointAtPos(this.state.pos));\n  }\n\n  skipBlockComment(): N.CommentBlock | void {\n    let startLoc;\n    if (!this.isLookahead) startLoc = this.state.curPosition();\n    const start = this.state.pos;\n    const end = this.input.indexOf(\"*/\", start + 2);\n    if (end === -1) {\n      // We have to call this again here because startLoc may not be set...\n      // This seems to be for performance reasons:\n      // https://github.com/babel/babel/commit/acf2a10899f696a8aaf34df78bf9725b5ea7f2da\n      throw this.raise(Errors.UnterminatedComment, {\n        at: this.state.curPosition(),\n      });\n    }\n\n    this.state.pos = end + 2;\n    lineBreakG.lastIndex = start + 2;\n    while (lineBreakG.test(this.input) && lineBreakG.lastIndex <= end) {\n      ++this.state.curLine;\n      this.state.lineStart = lineBreakG.lastIndex;\n    }\n\n    // If we are doing a lookahead right now we need to advance the position (above code)\n    // but we do not want to push the comment to the state.\n    if (this.isLookahead) return;\n    /*:: invariant(startLoc) */\n\n    const comment: N.CommentBlock = {\n      type: \"CommentBlock\",\n      value: this.input.slice(start + 2, end),\n      start,\n      end: end + 2,\n      loc: new SourceLocation(startLoc, this.state.curPosition()),\n    };\n    if (this.options.tokens) this.pushToken(comment);\n    return comment;\n  }\n\n  skipLineComment(startSkip: number): N.CommentLine | void {\n    const start = this.state.pos;\n    let startLoc;\n    if (!this.isLookahead) startLoc = this.state.curPosition();\n    let ch = this.input.charCodeAt((this.state.pos += startSkip));\n    if (this.state.pos < this.length) {\n      while (!isNewLine(ch) && ++this.state.pos < this.length) {\n        ch = this.input.charCodeAt(this.state.pos);\n      }\n    }\n\n    // If we are doing a lookahead right now we need to advance the position (above code)\n    // but we do not want to push the comment to the state.\n    if (this.isLookahead) return;\n    /*:: invariant(startLoc) */\n\n    const end = this.state.pos;\n    const value = this.input.slice(start + startSkip, end);\n\n    const comment: N.CommentLine = {\n      type: \"CommentLine\",\n      value,\n      start,\n      end,\n      loc: new SourceLocation(startLoc, this.state.curPosition()),\n    };\n    if (this.options.tokens) this.pushToken(comment);\n    return comment;\n  }\n\n  // Called at the start of the parse and after every token. Skips\n  // whitespace and comments, and.\n\n  skipSpace(): void {\n    const spaceStart = this.state.pos;\n    const comments = [];\n    loop: while (this.state.pos < this.length) {\n      const ch = this.input.charCodeAt(this.state.pos);\n      switch (ch) {\n        case charCodes.space:\n        case charCodes.nonBreakingSpace:\n        case charCodes.tab:\n          ++this.state.pos;\n          break;\n        case charCodes.carriageReturn:\n          if (\n            this.input.charCodeAt(this.state.pos + 1) === charCodes.lineFeed\n          ) {\n            ++this.state.pos;\n          }\n        // fall through\n        case charCodes.lineFeed:\n        case charCodes.lineSeparator:\n        case charCodes.paragraphSeparator:\n          ++this.state.pos;\n          ++this.state.curLine;\n          this.state.lineStart = this.state.pos;\n          break;\n\n        case charCodes.slash:\n          switch (this.input.charCodeAt(this.state.pos + 1)) {\n            case charCodes.asterisk: {\n              const comment = this.skipBlockComment();\n              if (comment !== undefined) {\n                // @ts-expect-error strictNullCheck is not enabled\n                this.addComment(comment);\n                if (this.options.attachComment) comments.push(comment);\n              }\n              break;\n            }\n\n            case charCodes.slash: {\n              const comment = this.skipLineComment(2);\n              if (comment !== undefined) {\n                // @ts-expect-error strictNullCheck is not enabled\n                this.addComment(comment);\n                if (this.options.attachComment) comments.push(comment);\n              }\n              break;\n            }\n\n            default:\n              break loop;\n          }\n          break;\n\n        default:\n          if (isWhitespace(ch)) {\n            ++this.state.pos;\n          } else if (ch === charCodes.dash && !this.inModule) {\n            const pos = this.state.pos;\n            if (\n              this.input.charCodeAt(pos + 1) === charCodes.dash &&\n              this.input.charCodeAt(pos + 2) === charCodes.greaterThan &&\n              (spaceStart === 0 || this.state.lineStart > spaceStart)\n            ) {\n              // A `-->` line comment\n              const comment = this.skipLineComment(3);\n              if (comment !== undefined) {\n                // @ts-expect-error strictNullCheck is not enabled\n                this.addComment(comment);\n                if (this.options.attachComment) comments.push(comment);\n              }\n            } else {\n              break loop;\n            }\n          } else if (ch === charCodes.lessThan && !this.inModule) {\n            const pos = this.state.pos;\n            if (\n              this.input.charCodeAt(pos + 1) === charCodes.exclamationMark &&\n              this.input.charCodeAt(pos + 2) === charCodes.dash &&\n              this.input.charCodeAt(pos + 3) === charCodes.dash\n            ) {\n              // `<!--`, an XML-style comment that should be interpreted as a line comment\n              const comment = this.skipLineComment(4);\n              if (comment !== undefined) {\n                // @ts-expect-error strictNullCheck is not enabled\n                this.addComment(comment);\n                if (this.options.attachComment) comments.push(comment);\n              }\n            } else {\n              break loop;\n            }\n          } else {\n            break loop;\n          }\n      }\n    }\n\n    if (comments.length > 0) {\n      const end = this.state.pos;\n      const commentWhitespace: CommentWhitespace = {\n        start: spaceStart,\n        end,\n        // @ts-expect-error strictNullCheck is not enabled\n        comments,\n        leadingNode: null,\n        trailingNode: null,\n        containingNode: null,\n      };\n      this.state.commentStack.push(commentWhitespace);\n    }\n  }\n\n  // Called at the end of every token. Sets `end`, `val`, and\n  // maintains `context` and `canStartJSXElement`, and skips the space after\n  // the token, so that the next one's `start` will point at the\n  // right position.\n\n  finishToken(type: TokenType, val?: any): void {\n    this.state.end = this.state.pos;\n    this.state.endLoc = this.state.curPosition();\n    const prevType = this.state.type;\n    this.state.type = type;\n    this.state.value = val;\n\n    if (!this.isLookahead) {\n      this.updateContext(prevType);\n    }\n  }\n\n  replaceToken(type: TokenType): void {\n    this.state.type = type;\n    // the prevType of updateContext is required\n    // only when the new type is tt.slash/tt.jsxTagEnd\n    // @ts-expect-error\n    this.updateContext();\n  }\n\n  // ### Token reading\n\n  // This is the function that is called to fetch the next token. It\n  // is somewhat obscure, because it works in character codes rather\n  // than characters, and because operator parsing has been inlined\n  // into it.\n  //\n  // All in the name of speed.\n\n  // number sign is \"#\"\n  readToken_numberSign(): void {\n    if (this.state.pos === 0 && this.readToken_interpreter()) {\n      return;\n    }\n\n    const nextPos = this.state.pos + 1;\n    const next = this.codePointAtPos(nextPos);\n    if (next >= charCodes.digit0 && next <= charCodes.digit9) {\n      throw this.raise(Errors.UnexpectedDigitAfterHash, {\n        at: this.state.curPosition(),\n      });\n    }\n\n    if (\n      next === charCodes.leftCurlyBrace ||\n      (next === charCodes.leftSquareBracket && this.hasPlugin(\"recordAndTuple\"))\n    ) {\n      // When we see `#{`, it is likely to be a hash record.\n      // However we don't yell at `#[` since users may intend to use \"computed private fields\",\n      // which is not allowed in the spec. Throwing expecting recordAndTuple is\n      // misleading\n      this.expectPlugin(\"recordAndTuple\");\n      if (this.getPluginOption(\"recordAndTuple\", \"syntaxType\") !== \"hash\") {\n        throw this.raise(\n          next === charCodes.leftCurlyBrace\n            ? Errors.RecordExpressionHashIncorrectStartSyntaxType\n            : Errors.TupleExpressionHashIncorrectStartSyntaxType,\n          { at: this.state.curPosition() },\n        );\n      }\n\n      this.state.pos += 2;\n      if (next === charCodes.leftCurlyBrace) {\n        // #{\n        this.finishToken(tt.braceHashL);\n      } else {\n        // #[\n        this.finishToken(tt.bracketHashL);\n      }\n    } else if (isIdentifierStart(next)) {\n      ++this.state.pos;\n      this.finishToken(tt.privateName, this.readWord1(next));\n    } else if (next === charCodes.backslash) {\n      ++this.state.pos;\n      this.finishToken(tt.privateName, this.readWord1());\n    } else {\n      this.finishOp(tt.hash, 1);\n    }\n  }\n\n  readToken_dot(): void {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n    if (next >= charCodes.digit0 && next <= charCodes.digit9) {\n      this.readNumber(true);\n      return;\n    }\n\n    if (\n      next === charCodes.dot &&\n      this.input.charCodeAt(this.state.pos + 2) === charCodes.dot\n    ) {\n      this.state.pos += 3;\n      this.finishToken(tt.ellipsis);\n    } else {\n      ++this.state.pos;\n      this.finishToken(tt.dot);\n    }\n  }\n\n  readToken_slash(): void {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n    if (next === charCodes.equalsTo) {\n      this.finishOp(tt.slashAssign, 2);\n    } else {\n      this.finishOp(tt.slash, 1);\n    }\n  }\n\n  readToken_interpreter(): boolean {\n    if (this.state.pos !== 0 || this.length < 2) return false;\n\n    let ch = this.input.charCodeAt(this.state.pos + 1);\n    if (ch !== charCodes.exclamationMark) return false;\n\n    const start = this.state.pos;\n    this.state.pos += 1;\n\n    while (!isNewLine(ch) && ++this.state.pos < this.length) {\n      ch = this.input.charCodeAt(this.state.pos);\n    }\n\n    const value = this.input.slice(start + 2, this.state.pos);\n\n    this.finishToken(tt.interpreterDirective, value);\n\n    return true;\n  }\n\n  readToken_mult_modulo(code: number): void {\n    // '%' or '*'\n    let type = code === charCodes.asterisk ? tt.star : tt.modulo;\n    let width = 1;\n    let next = this.input.charCodeAt(this.state.pos + 1);\n\n    // Exponentiation operator '**'\n    if (code === charCodes.asterisk && next === charCodes.asterisk) {\n      width++;\n      next = this.input.charCodeAt(this.state.pos + 2);\n      type = tt.exponent;\n    }\n\n    // '%=' or '*='\n    if (next === charCodes.equalsTo && !this.state.inType) {\n      width++;\n      // `tt.moduloAssign` is only needed to support % as a Hack-pipe topic token.\n      // If the proposal ends up choosing a different token,\n      // it can be merged with tt.assign.\n      type = code === charCodes.percentSign ? tt.moduloAssign : tt.assign;\n    }\n\n    this.finishOp(type, width);\n  }\n\n  readToken_pipe_amp(code: number): void {\n    // '||' '&&' '||=' '&&='\n    const next = this.input.charCodeAt(this.state.pos + 1);\n\n    if (next === code) {\n      if (this.input.charCodeAt(this.state.pos + 2) === charCodes.equalsTo) {\n        this.finishOp(tt.assign, 3);\n      } else {\n        this.finishOp(\n          code === charCodes.verticalBar ? tt.logicalOR : tt.logicalAND,\n          2,\n        );\n      }\n      return;\n    }\n\n    if (code === charCodes.verticalBar) {\n      // '|>'\n      if (next === charCodes.greaterThan) {\n        this.finishOp(tt.pipeline, 2);\n        return;\n      }\n      // '|}'\n      if (\n        this.hasPlugin(\"recordAndTuple\") &&\n        next === charCodes.rightCurlyBrace\n      ) {\n        if (this.getPluginOption(\"recordAndTuple\", \"syntaxType\") !== \"bar\") {\n          throw this.raise(Errors.RecordExpressionBarIncorrectEndSyntaxType, {\n            at: this.state.curPosition(),\n          });\n        }\n        this.state.pos += 2;\n        this.finishToken(tt.braceBarR);\n        return;\n      }\n\n      // '|]'\n      if (\n        this.hasPlugin(\"recordAndTuple\") &&\n        next === charCodes.rightSquareBracket\n      ) {\n        if (this.getPluginOption(\"recordAndTuple\", \"syntaxType\") !== \"bar\") {\n          throw this.raise(Errors.TupleExpressionBarIncorrectEndSyntaxType, {\n            at: this.state.curPosition(),\n          });\n        }\n        this.state.pos += 2;\n        this.finishToken(tt.bracketBarR);\n        return;\n      }\n    }\n\n    if (next === charCodes.equalsTo) {\n      this.finishOp(tt.assign, 2);\n      return;\n    }\n\n    this.finishOp(\n      code === charCodes.verticalBar ? tt.bitwiseOR : tt.bitwiseAND,\n      1,\n    );\n  }\n\n  readToken_caret(): void {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n\n    // '^='\n    if (next === charCodes.equalsTo && !this.state.inType) {\n      // `tt.xorAssign` is only needed to support ^ as a Hack-pipe topic token.\n      // If the proposal ends up choosing a different token,\n      // it can be merged with tt.assign.\n      this.finishOp(tt.xorAssign, 2);\n    }\n    // '^^'\n    else if (\n      next === charCodes.caret &&\n      // If the ^^ token is not enabled, we don't throw but parse two single ^s\n      // because it could be a ^ hack token followed by a ^ binary operator.\n      this.hasPlugin([\n        \"pipelineOperator\",\n        { proposal: \"hack\", topicToken: \"^^\" },\n      ])\n    ) {\n      this.finishOp(tt.doubleCaret, 2);\n\n      // `^^^` is forbidden and must be separated by a space.\n      const lookaheadCh = this.input.codePointAt(this.state.pos);\n      if (lookaheadCh === charCodes.caret) {\n        throw this.unexpected();\n      }\n    }\n    // '^'\n    else {\n      this.finishOp(tt.bitwiseXOR, 1);\n    }\n  }\n\n  readToken_atSign(): void {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n\n    // '@@'\n    if (\n      next === charCodes.atSign &&\n      this.hasPlugin([\n        \"pipelineOperator\",\n        { proposal: \"hack\", topicToken: \"@@\" },\n      ])\n    ) {\n      this.finishOp(tt.doubleAt, 2);\n    }\n    // '@'\n    else {\n      this.finishOp(tt.at, 1);\n    }\n  }\n\n  readToken_plus_min(code: number): void {\n    // '+-'\n    const next = this.input.charCodeAt(this.state.pos + 1);\n\n    if (next === code) {\n      this.finishOp(tt.incDec, 2);\n      return;\n    }\n\n    if (next === charCodes.equalsTo) {\n      this.finishOp(tt.assign, 2);\n    } else {\n      this.finishOp(tt.plusMin, 1);\n    }\n  }\n\n  readToken_lt(): void {\n    // '<'\n    const { pos } = this.state;\n    const next = this.input.charCodeAt(pos + 1);\n\n    if (next === charCodes.lessThan) {\n      if (this.input.charCodeAt(pos + 2) === charCodes.equalsTo) {\n        this.finishOp(tt.assign, 3);\n        return;\n      }\n      this.finishOp(tt.bitShiftL, 2);\n      return;\n    }\n\n    if (next === charCodes.equalsTo) {\n      // <=\n      this.finishOp(tt.relational, 2);\n      return;\n    }\n\n    this.finishOp(tt.lt, 1);\n  }\n\n  readToken_gt(): void {\n    // '>'\n    const { pos } = this.state;\n    const next = this.input.charCodeAt(pos + 1);\n\n    if (next === charCodes.greaterThan) {\n      const size =\n        this.input.charCodeAt(pos + 2) === charCodes.greaterThan ? 3 : 2;\n      if (this.input.charCodeAt(pos + size) === charCodes.equalsTo) {\n        this.finishOp(tt.assign, size + 1);\n        return;\n      }\n      this.finishOp(tt.bitShiftR, size);\n      return;\n    }\n\n    if (next === charCodes.equalsTo) {\n      // <= | >=\n      this.finishOp(tt.relational, 2);\n      return;\n    }\n\n    this.finishOp(tt.gt, 1);\n  }\n\n  readToken_eq_excl(code: number): void {\n    // '=!'\n    const next = this.input.charCodeAt(this.state.pos + 1);\n    if (next === charCodes.equalsTo) {\n      this.finishOp(\n        tt.equality,\n        this.input.charCodeAt(this.state.pos + 2) === charCodes.equalsTo\n          ? 3\n          : 2,\n      );\n      return;\n    }\n    if (code === charCodes.equalsTo && next === charCodes.greaterThan) {\n      // '=>'\n      this.state.pos += 2;\n      this.finishToken(tt.arrow);\n      return;\n    }\n    this.finishOp(code === charCodes.equalsTo ? tt.eq : tt.bang, 1);\n  }\n\n  readToken_question(): void {\n    // '?'\n    const next = this.input.charCodeAt(this.state.pos + 1);\n    const next2 = this.input.charCodeAt(this.state.pos + 2);\n    if (next === charCodes.questionMark) {\n      if (next2 === charCodes.equalsTo) {\n        // '??='\n        this.finishOp(tt.assign, 3);\n      } else {\n        // '??'\n        this.finishOp(tt.nullishCoalescing, 2);\n      }\n    } else if (\n      next === charCodes.dot &&\n      !(next2 >= charCodes.digit0 && next2 <= charCodes.digit9)\n    ) {\n      // '.' not followed by a number\n      this.state.pos += 2;\n      this.finishToken(tt.questionDot);\n    } else {\n      ++this.state.pos;\n      this.finishToken(tt.question);\n    }\n  }\n\n  getTokenFromCode(code: number): void {\n    switch (code) {\n      // The interpretation of a dot depends on whether it is followed\n      // by a digit or another two dots.\n\n      case charCodes.dot:\n        this.readToken_dot();\n        return;\n\n      // Punctuation tokens.\n      case charCodes.leftParenthesis:\n        ++this.state.pos;\n        this.finishToken(tt.parenL);\n        return;\n      case charCodes.rightParenthesis:\n        ++this.state.pos;\n        this.finishToken(tt.parenR);\n        return;\n      case charCodes.semicolon:\n        ++this.state.pos;\n        this.finishToken(tt.semi);\n        return;\n      case charCodes.comma:\n        ++this.state.pos;\n        this.finishToken(tt.comma);\n        return;\n      case charCodes.leftSquareBracket:\n        if (\n          this.hasPlugin(\"recordAndTuple\") &&\n          this.input.charCodeAt(this.state.pos + 1) === charCodes.verticalBar\n        ) {\n          if (this.getPluginOption(\"recordAndTuple\", \"syntaxType\") !== \"bar\") {\n            throw this.raise(\n              Errors.TupleExpressionBarIncorrectStartSyntaxType,\n              { at: this.state.curPosition() },\n            );\n          }\n\n          // [|\n          this.state.pos += 2;\n          this.finishToken(tt.bracketBarL);\n        } else {\n          ++this.state.pos;\n          this.finishToken(tt.bracketL);\n        }\n        return;\n      case charCodes.rightSquareBracket:\n        ++this.state.pos;\n        this.finishToken(tt.bracketR);\n        return;\n      case charCodes.leftCurlyBrace:\n        if (\n          this.hasPlugin(\"recordAndTuple\") &&\n          this.input.charCodeAt(this.state.pos + 1) === charCodes.verticalBar\n        ) {\n          if (this.getPluginOption(\"recordAndTuple\", \"syntaxType\") !== \"bar\") {\n            throw this.raise(\n              Errors.RecordExpressionBarIncorrectStartSyntaxType,\n              { at: this.state.curPosition() },\n            );\n          }\n\n          // {|\n          this.state.pos += 2;\n          this.finishToken(tt.braceBarL);\n        } else {\n          ++this.state.pos;\n          this.finishToken(tt.braceL);\n        }\n        return;\n      case charCodes.rightCurlyBrace:\n        ++this.state.pos;\n        this.finishToken(tt.braceR);\n        return;\n\n      case charCodes.colon:\n        if (\n          this.hasPlugin(\"functionBind\") &&\n          this.input.charCodeAt(this.state.pos + 1) === charCodes.colon\n        ) {\n          this.finishOp(tt.doubleColon, 2);\n        } else {\n          ++this.state.pos;\n          this.finishToken(tt.colon);\n        }\n        return;\n\n      case charCodes.questionMark:\n        this.readToken_question();\n        return;\n\n      case charCodes.graveAccent:\n        this.readTemplateToken();\n        return;\n\n      case charCodes.digit0: {\n        const next = this.input.charCodeAt(this.state.pos + 1);\n        // '0x', '0X' - hex number\n        if (next === charCodes.lowercaseX || next === charCodes.uppercaseX) {\n          this.readRadixNumber(16);\n          return;\n        }\n        // '0o', '0O' - octal number\n        if (next === charCodes.lowercaseO || next === charCodes.uppercaseO) {\n          this.readRadixNumber(8);\n          return;\n        }\n        // '0b', '0B' - binary number\n        if (next === charCodes.lowercaseB || next === charCodes.uppercaseB) {\n          this.readRadixNumber(2);\n          return;\n        }\n      }\n      // Anything else beginning with a digit is an integer, octal\n      // number, or float. (fall through)\n      case charCodes.digit1:\n      case charCodes.digit2:\n      case charCodes.digit3:\n      case charCodes.digit4:\n      case charCodes.digit5:\n      case charCodes.digit6:\n      case charCodes.digit7:\n      case charCodes.digit8:\n      case charCodes.digit9:\n        this.readNumber(false);\n        return;\n\n      // Quotes produce strings.\n      case charCodes.quotationMark:\n      case charCodes.apostrophe:\n        this.readString(code);\n        return;\n\n      // Operators are parsed inline in tiny state machines. '=' (charCodes.equalsTo) is\n      // often referred to. `finishOp` simply skips the amount of\n      // characters it is given as second argument, and returns a token\n      // of the type given by its first argument.\n\n      case charCodes.slash:\n        this.readToken_slash();\n        return;\n\n      case charCodes.percentSign:\n      case charCodes.asterisk:\n        this.readToken_mult_modulo(code);\n        return;\n\n      case charCodes.verticalBar:\n      case charCodes.ampersand:\n        this.readToken_pipe_amp(code);\n        return;\n\n      case charCodes.caret:\n        this.readToken_caret();\n        return;\n\n      case charCodes.plusSign:\n      case charCodes.dash:\n        this.readToken_plus_min(code);\n        return;\n\n      case charCodes.lessThan:\n        this.readToken_lt();\n        return;\n\n      case charCodes.greaterThan:\n        this.readToken_gt();\n        return;\n\n      case charCodes.equalsTo:\n      case charCodes.exclamationMark:\n        this.readToken_eq_excl(code);\n        return;\n\n      case charCodes.tilde:\n        this.finishOp(tt.tilde, 1);\n        return;\n\n      case charCodes.atSign:\n        this.readToken_atSign();\n        return;\n\n      case charCodes.numberSign:\n        this.readToken_numberSign();\n        return;\n\n      case charCodes.backslash:\n        this.readWord();\n        return;\n\n      default:\n        if (isIdentifierStart(code)) {\n          this.readWord(code);\n          return;\n        }\n    }\n\n    throw this.raise(Errors.InvalidOrUnexpectedToken, {\n      at: this.state.curPosition(),\n      unexpected: String.fromCodePoint(code),\n    });\n  }\n\n  finishOp(type: TokenType, size: number): void {\n    const str = this.input.slice(this.state.pos, this.state.pos + size);\n    this.state.pos += size;\n    this.finishToken(type, str);\n  }\n\n  readRegexp(): void {\n    const startLoc = this.state.startLoc;\n    const start = this.state.start + 1;\n    let escaped, inClass;\n    let { pos } = this.state;\n    for (; ; ++pos) {\n      if (pos >= this.length) {\n        // FIXME: explain\n        throw this.raise(Errors.UnterminatedRegExp, {\n          at: createPositionWithColumnOffset(startLoc, 1),\n        });\n      }\n      const ch = this.input.charCodeAt(pos);\n      if (isNewLine(ch)) {\n        throw this.raise(Errors.UnterminatedRegExp, {\n          at: createPositionWithColumnOffset(startLoc, 1),\n        });\n      }\n      if (escaped) {\n        escaped = false;\n      } else {\n        if (ch === charCodes.leftSquareBracket) {\n          inClass = true;\n        } else if (ch === charCodes.rightSquareBracket && inClass) {\n          inClass = false;\n        } else if (ch === charCodes.slash && !inClass) {\n          break;\n        }\n        escaped = ch === charCodes.backslash;\n      }\n    }\n    const content = this.input.slice(start, pos);\n    ++pos;\n\n    let mods = \"\";\n\n    const nextPos = () =>\n      // (pos + 1) + 1 - start\n      createPositionWithColumnOffset(startLoc, pos + 2 - start);\n\n    while (pos < this.length) {\n      const cp = this.codePointAtPos(pos);\n      // It doesn't matter if cp > 0xffff, the loop will either throw or break because we check on cp\n      const char = String.fromCharCode(cp);\n\n      // @ts-expect-error VALID_REGEX_FLAGS.has should accept expanded type: number\n      if (VALID_REGEX_FLAGS.has(cp)) {\n        if (cp === charCodes.lowercaseV) {\n          this.expectPlugin(\"regexpUnicodeSets\", nextPos());\n\n          if (mods.includes(\"u\")) {\n            this.raise(Errors.IncompatibleRegExpUVFlags, { at: nextPos() });\n          }\n        } else if (cp === charCodes.lowercaseU) {\n          if (mods.includes(\"v\")) {\n            this.raise(Errors.IncompatibleRegExpUVFlags, { at: nextPos() });\n          }\n        }\n        if (mods.includes(char)) {\n          this.raise(Errors.DuplicateRegExpFlags, { at: nextPos() });\n        }\n      } else if (isIdentifierChar(cp) || cp === charCodes.backslash) {\n        this.raise(Errors.MalformedRegExpFlags, { at: nextPos() });\n      } else {\n        break;\n      }\n\n      ++pos;\n      mods += char;\n    }\n    this.state.pos = pos;\n\n    this.finishToken(tt.regexp, {\n      pattern: content,\n      flags: mods,\n    });\n  }\n\n  // Read an integer in the given radix. Return null if zero digits\n  // were read, the integer value otherwise. When `len` is given, this\n  // will return `null` unless the integer has exactly `len` digits.\n  // When `forceLen` is `true`, it means that we already know that in case\n  // of a malformed number we have to skip `len` characters anyway, instead\n  // of bailing out early. For example, in \"\\u{123Z}\" we want to read up to }\n  // anyway, while in \"\\u00Z\" we will stop at Z instead of consuming four\n  // characters (and thus the closing quote).\n\n  readInt(\n    radix: number,\n    len?: number,\n    forceLen: boolean = false,\n    allowNumSeparator: boolean | \"bail\" = true,\n  ): number | null {\n    const { n, pos } = readInt(\n      this.input,\n      this.state.pos,\n      this.state.lineStart,\n      this.state.curLine,\n      radix,\n      len,\n      forceLen,\n      allowNumSeparator,\n      this.errorHandlers_readInt,\n    );\n    this.state.pos = pos;\n    return n;\n  }\n\n  readRadixNumber(radix: number): void {\n    const startLoc = this.state.curPosition();\n    let isBigInt = false;\n\n    this.state.pos += 2; // 0x\n    const val = this.readInt(radix);\n    if (val == null) {\n      this.raise(Errors.InvalidDigit, {\n        // Numeric literals can't have newlines, so this is safe to do.\n        at: createPositionWithColumnOffset(startLoc, 2),\n        radix,\n      });\n    }\n    const next = this.input.charCodeAt(this.state.pos);\n\n    if (next === charCodes.lowercaseN) {\n      ++this.state.pos;\n      isBigInt = true;\n    } else if (next === charCodes.lowercaseM) {\n      throw this.raise(Errors.InvalidDecimal, { at: startLoc });\n    }\n\n    if (isIdentifierStart(this.codePointAtPos(this.state.pos))) {\n      throw this.raise(Errors.NumberIdentifier, {\n        at: this.state.curPosition(),\n      });\n    }\n\n    if (isBigInt) {\n      const str = this.input\n        .slice(startLoc.index, this.state.pos)\n        .replace(/[_n]/g, \"\");\n      this.finishToken(tt.bigint, str);\n      return;\n    }\n\n    this.finishToken(tt.num, val);\n  }\n\n  // Read an integer, octal integer, or floating-point number.\n\n  readNumber(startsWithDot: boolean): void {\n    const start = this.state.pos;\n    const startLoc = this.state.curPosition();\n    let isFloat = false;\n    let isBigInt = false;\n    let isDecimal = false;\n    let hasExponent = false;\n    let isOctal = false;\n\n    if (!startsWithDot && this.readInt(10) === null) {\n      this.raise(Errors.InvalidNumber, { at: this.state.curPosition() });\n    }\n    const hasLeadingZero =\n      this.state.pos - start >= 2 &&\n      this.input.charCodeAt(start) === charCodes.digit0;\n\n    if (hasLeadingZero) {\n      const integer = this.input.slice(start, this.state.pos);\n      this.recordStrictModeErrors(Errors.StrictOctalLiteral, { at: startLoc });\n      if (!this.state.strict) {\n        // disallow numeric separators in non octal decimals and legacy octal likes\n        const underscorePos = integer.indexOf(\"_\");\n        if (underscorePos > 0) {\n          // Numeric literals can't have newlines, so this is safe to do.\n          this.raise(Errors.ZeroDigitNumericSeparator, {\n            at: createPositionWithColumnOffset(startLoc, underscorePos),\n          });\n        }\n      }\n      isOctal = hasLeadingZero && !/[89]/.test(integer);\n    }\n\n    let next = this.input.charCodeAt(this.state.pos);\n    if (next === charCodes.dot && !isOctal) {\n      ++this.state.pos;\n      this.readInt(10);\n      isFloat = true;\n      next = this.input.charCodeAt(this.state.pos);\n    }\n\n    if (\n      (next === charCodes.uppercaseE || next === charCodes.lowercaseE) &&\n      !isOctal\n    ) {\n      next = this.input.charCodeAt(++this.state.pos);\n      if (next === charCodes.plusSign || next === charCodes.dash) {\n        ++this.state.pos;\n      }\n      if (this.readInt(10) === null) {\n        this.raise(Errors.InvalidOrMissingExponent, { at: startLoc });\n      }\n      isFloat = true;\n      hasExponent = true;\n      next = this.input.charCodeAt(this.state.pos);\n    }\n\n    if (next === charCodes.lowercaseN) {\n      // disallow floats, legacy octal syntax and non octal decimals\n      // new style octal (\"0o\") is handled in this.readRadixNumber\n      if (isFloat || hasLeadingZero) {\n        this.raise(Errors.InvalidBigIntLiteral, { at: startLoc });\n      }\n      ++this.state.pos;\n      isBigInt = true;\n    }\n\n    if (next === charCodes.lowercaseM) {\n      this.expectPlugin(\"decimal\", this.state.curPosition());\n      if (hasExponent || hasLeadingZero) {\n        this.raise(Errors.InvalidDecimal, { at: startLoc });\n      }\n      ++this.state.pos;\n      isDecimal = true;\n    }\n\n    if (isIdentifierStart(this.codePointAtPos(this.state.pos))) {\n      throw this.raise(Errors.NumberIdentifier, {\n        at: this.state.curPosition(),\n      });\n    }\n\n    // remove \"_\" for numeric literal separator, and trailing `m` or `n`\n    const str = this.input.slice(start, this.state.pos).replace(/[_mn]/g, \"\");\n\n    if (isBigInt) {\n      this.finishToken(tt.bigint, str);\n      return;\n    }\n\n    if (isDecimal) {\n      this.finishToken(tt.decimal, str);\n      return;\n    }\n\n    const val = isOctal ? parseInt(str, 8) : parseFloat(str);\n    this.finishToken(tt.num, val);\n  }\n\n  // Read a string value, interpreting backslash-escapes.\n\n  readCodePoint(throwOnInvalid: boolean): number | null {\n    const { code, pos } = readCodePoint(\n      this.input,\n      this.state.pos,\n      this.state.lineStart,\n      this.state.curLine,\n      throwOnInvalid,\n      this.errorHandlers_readCodePoint,\n    );\n    this.state.pos = pos;\n    return code;\n  }\n\n  readString(quote: number): void {\n    const { str, pos, curLine, lineStart } = readStringContents(\n      quote === charCodes.quotationMark ? \"double\" : \"single\",\n      this.input,\n      this.state.pos + 1, // skip the quote\n      this.state.lineStart,\n      this.state.curLine,\n      this.errorHandlers_readStringContents_string,\n    );\n    this.state.pos = pos + 1; // skip the quote\n    this.state.lineStart = lineStart;\n    this.state.curLine = curLine;\n    this.finishToken(tt.string, str);\n  }\n\n  // Reads template continuation `}...`\n  readTemplateContinuation(): void {\n    if (!this.match(tt.braceR)) {\n      this.unexpected(null, tt.braceR);\n    }\n    // rewind pos to `}`\n    this.state.pos--;\n    this.readTemplateToken();\n  }\n\n  // Reads template string tokens.\n  readTemplateToken(): void {\n    const opening = this.input[this.state.pos];\n    const { str, containsInvalid, pos, curLine, lineStart } =\n      readStringContents(\n        \"template\",\n        this.input,\n        this.state.pos + 1, // skip '`' or `}`\n        this.state.lineStart,\n        this.state.curLine,\n        this.errorHandlers_readStringContents_template,\n      );\n    this.state.pos = pos + 1; // skip '`' or `$`\n    this.state.lineStart = lineStart;\n    this.state.curLine = curLine;\n\n    if (this.input.codePointAt(pos) === charCodes.graveAccent) {\n      this.finishToken(\n        tt.templateTail,\n        containsInvalid ? null : opening + str + \"`\",\n      );\n    } else {\n      this.state.pos++; // skip '{'\n      this.finishToken(\n        tt.templateNonTail,\n        containsInvalid ? null : opening + str + \"${\",\n      );\n    }\n  }\n\n  recordStrictModeErrors(\n    toParseError: DeferredStrictError,\n    { at }: { at: Position },\n  ) {\n    const index = at.index;\n\n    if (this.state.strict && !this.state.strictErrors.has(index)) {\n      this.raise(toParseError, { at });\n    } else {\n      this.state.strictErrors.set(index, [toParseError, at]);\n    }\n  }\n\n  // Read an identifier, and return it as a string. Sets `this.state.containsEsc`\n  // to whether the word contained a '\\u' escape.\n  //\n  // Incrementally adds only escaped chars, adding other chunks as-is\n  // as a micro-optimization.\n  //\n  // When `firstCode` is given, it assumes it is always an identifier start and\n  // will skip reading start position again\n\n  readWord1(firstCode: number | void): string {\n    this.state.containsEsc = false;\n    let word = \"\";\n    const start = this.state.pos;\n    let chunkStart = this.state.pos;\n    if (firstCode !== undefined) {\n      this.state.pos += firstCode <= 0xffff ? 1 : 2;\n    }\n\n    while (this.state.pos < this.length) {\n      const ch = this.codePointAtPos(this.state.pos);\n      if (isIdentifierChar(ch)) {\n        this.state.pos += ch <= 0xffff ? 1 : 2;\n      } else if (ch === charCodes.backslash) {\n        this.state.containsEsc = true;\n\n        word += this.input.slice(chunkStart, this.state.pos);\n        const escStart = this.state.curPosition();\n        const identifierCheck =\n          this.state.pos === start ? isIdentifierStart : isIdentifierChar;\n\n        if (this.input.charCodeAt(++this.state.pos) !== charCodes.lowercaseU) {\n          this.raise(Errors.MissingUnicodeEscape, {\n            at: this.state.curPosition(),\n          });\n          chunkStart = this.state.pos - 1;\n          continue;\n        }\n\n        ++this.state.pos;\n        const esc = this.readCodePoint(true);\n        if (esc !== null) {\n          if (!identifierCheck(esc)) {\n            this.raise(Errors.EscapedCharNotAnIdentifier, { at: escStart });\n          }\n\n          word += String.fromCodePoint(esc);\n        }\n        chunkStart = this.state.pos;\n      } else {\n        break;\n      }\n    }\n    return word + this.input.slice(chunkStart, this.state.pos);\n  }\n\n  // Read an identifier or keyword token. Will check for reserved\n  // words when necessary.\n\n  readWord(firstCode: number | void): void {\n    const word = this.readWord1(firstCode);\n    const type = keywordTypes.get(word);\n    if (type !== undefined) {\n      // We don't use word as state.value here because word is a dynamic string\n      // while token label is a shared constant string\n      this.finishToken(type, tokenLabelName(type));\n    } else {\n      this.finishToken(tt.name, word);\n    }\n  }\n\n  checkKeywordEscapes(): void {\n    const { type } = this.state;\n    if (tokenIsKeyword(type) && this.state.containsEsc) {\n      this.raise(Errors.InvalidEscapedReservedWord, {\n        at: this.state.startLoc,\n        reservedWord: tokenLabelName(type),\n      });\n    }\n  }\n\n  /**\n   * Raise a `ParseError` given the appropriate properties. If passed a\n   * `Position` for the `at` property, raises the `ParseError` at that location.\n   * Otherwise, if passed a `Node`, raises the `ParseError` at the start\n   * location of that `Node`.\n   *\n   * If `errorRecovery` is `true`, the error is pushed to the errors array and\n   * returned. If `errorRecovery` is `false`, the error is instead thrown.\n   *\n   * @param {Class<ParseError<ErrorDetails>>>} ParseErrorClass\n   * @param {RaiseProperties<ErrorDetails>} raiseProperties\n   * @returns {(ParseError<ErrorDetails> | empty)}\n   * @memberof Tokenizer\n   */\n  raise<ErrorDetails>(\n    toParseError: ParseErrorConstructor<ErrorDetails>,\n    raiseProperties: RaiseProperties<ErrorDetails>,\n  ): ParseError<ErrorDetails> {\n    const { at, ...details } = raiseProperties;\n    const loc = at instanceof Position ? at : at.loc.start;\n    // @ts-expect-error: refine details typing\n    const error = toParseError({ loc, details });\n\n    if (!this.options.errorRecovery) throw error;\n    if (!this.isLookahead) this.state.errors.push(error);\n\n    return error;\n  }\n\n  /**\n   * If `errorRecovery` is `false`, this method behaves identically to `raise`.\n   * If `errorRecovery` is `true`, this method will first see if there is\n   * already an error stored at the same `Position`, and replaces it with the\n   * one generated here.\n   *\n   * @param {Class<ParseError<ErrorDetails>>>} ParseErrorClass\n   * @param {RaiseProperties<ErrorDetails>} raiseProperties\n   * @returns {(ParseError<ErrorDetails> | empty)}\n   * @memberof Tokenizer\n   */\n  raiseOverwrite<ErrorDetails>(\n    toParseError: ParseErrorConstructor<ErrorDetails>,\n    raiseProperties: RaiseProperties<ErrorDetails>,\n  ): ParseError<ErrorDetails> | never {\n    const { at, ...details } = raiseProperties;\n    const loc = at instanceof Position ? at : at.loc.start;\n    const pos = loc.index;\n    const errors = this.state.errors;\n\n    for (let i = errors.length - 1; i >= 0; i--) {\n      const error = errors[i];\n      if (error.loc.index === pos) {\n        // @ts-expect-error: refine details typing\n        return (errors[i] = toParseError({ loc, details }));\n      }\n      if (error.loc.index < pos) break;\n    }\n\n    return this.raise(toParseError, raiseProperties);\n  }\n\n  // updateContext is used by the jsx plugin\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  updateContext(prevType: TokenType): void {}\n\n  // Raise an unexpected token error. Can take the expected token type.\n  unexpected(loc?: Position | null, type?: TokenType): void {\n    throw this.raise(Errors.UnexpectedToken, {\n      expected: type ? tokenLabelName(type) : null,\n      at: loc != null ? loc : this.state.startLoc,\n    });\n  }\n\n  expectPlugin(pluginName: Plugin, loc?: Position): true {\n    if (this.hasPlugin(pluginName)) {\n      return true;\n    }\n\n    throw this.raise(Errors.MissingPlugin, {\n      at: loc != null ? loc : this.state.startLoc,\n      missingPlugin: [pluginName],\n    });\n  }\n\n  expectOnePlugin(pluginNames: Plugin[]): void {\n    if (!pluginNames.some(name => this.hasPlugin(name))) {\n      throw this.raise(Errors.MissingOneOfPlugins, {\n        at: this.state.startLoc,\n        missingPlugin: pluginNames,\n      });\n    }\n  }\n\n  errorBuilder(error: ParseErrorConstructor<{}>) {\n    return (pos: number, lineStart: number, curLine: number) => {\n      this.raise(error, {\n        at: buildPosition(pos, lineStart, curLine),\n      });\n    };\n  }\n\n  errorHandlers_readInt: IntErrorHandlers = {\n    invalidDigit: (pos, lineStart, curLine, radix) => {\n      if (!this.options.errorRecovery) return false;\n\n      this.raise(Errors.InvalidDigit, {\n        at: buildPosition(pos, lineStart, curLine),\n        radix,\n      });\n      // Continue parsing the number as if there was no invalid digit.\n      return true;\n    },\n    numericSeparatorInEscapeSequence: this.errorBuilder(\n      Errors.NumericSeparatorInEscapeSequence,\n    ),\n    unexpectedNumericSeparator: this.errorBuilder(\n      Errors.UnexpectedNumericSeparator,\n    ),\n  };\n\n  errorHandlers_readCodePoint: CodePointErrorHandlers = {\n    ...this.errorHandlers_readInt,\n    invalidEscapeSequence: this.errorBuilder(Errors.InvalidEscapeSequence),\n    invalidCodePoint: this.errorBuilder(Errors.InvalidCodePoint),\n  };\n\n  errorHandlers_readStringContents_string: StringContentsErrorHandlers = {\n    ...this.errorHandlers_readCodePoint,\n    strictNumericEscape: (pos, lineStart, curLine) => {\n      this.recordStrictModeErrors(Errors.StrictNumericEscape, {\n        at: buildPosition(pos, lineStart, curLine),\n      });\n    },\n    unterminated: (pos, lineStart, curLine) => {\n      throw this.raise(Errors.UnterminatedString, {\n        // Report the error at the string quote\n        at: buildPosition(pos - 1, lineStart, curLine),\n      });\n    },\n  };\n\n  errorHandlers_readStringContents_template: StringContentsErrorHandlers = {\n    ...this.errorHandlers_readCodePoint,\n    strictNumericEscape: this.errorBuilder(Errors.StrictNumericEscape),\n    unterminated: (pos, lineStart, curLine) => {\n      throw this.raise(Errors.UnterminatedTemplate, {\n        at: buildPosition(pos, lineStart, curLine),\n      });\n    },\n  };\n}\n","import {\n  SCOPE_ARROW,\n  SCOPE_DIRECT_SUPER,\n  SCOPE_FUNCTION,\n  SCOPE_SIMPLE_CATCH,\n  SCOPE_SUPER,\n  SCOPE_PROGRAM,\n  SCOPE_VAR,\n  SCOPE_CLASS,\n  SCOPE_STATIC_BLOCK,\n  BIND_SCOPE_FUNCTION,\n  BIND_SCOPE_VAR,\n  BIND_SCOPE_LEXICAL,\n  BIND_KIND_VALUE,\n  type ScopeFlags,\n  type BindingTypes,\n} from \"./scopeflags\";\nimport { Position } from \"./location\";\nimport * as N from \"../types\";\nimport { Errors } from \"../parse-error\";\nimport Tokenizer from \"../tokenizer\";\n\n// Start an AST node, attaching a start offset.\nexport class Scope {\n  declare flags: ScopeFlags;\n  // A set of var-declared names in the current lexical scope\n  var: Set<string> = new Set();\n  // A set of lexically-declared names in the current lexical scope\n  lexical: Set<string> = new Set();\n  // A set of lexically-declared FunctionDeclaration names in the current lexical scope\n  functions: Set<string> = new Set();\n\n  constructor(flags: ScopeFlags) {\n    this.flags = flags;\n  }\n}\n\n// The functions in this module keep track of declared variables in the\n// current scope in order to detect duplicate variable names.\nexport default class ScopeHandler<IScope extends Scope = Scope> {\n  parser: Tokenizer;\n  scopeStack: Array<IScope> = [];\n  inModule: boolean;\n  undefinedExports: Map<string, Position> = new Map();\n\n  constructor(parser: Tokenizer, inModule: boolean) {\n    this.parser = parser;\n    this.inModule = inModule;\n  }\n\n  get inFunction() {\n    return (this.currentVarScopeFlags() & SCOPE_FUNCTION) > 0;\n  }\n  get allowSuper() {\n    return (this.currentThisScopeFlags() & SCOPE_SUPER) > 0;\n  }\n  get allowDirectSuper() {\n    return (this.currentThisScopeFlags() & SCOPE_DIRECT_SUPER) > 0;\n  }\n  get inClass() {\n    return (this.currentThisScopeFlags() & SCOPE_CLASS) > 0;\n  }\n  get inClassAndNotInNonArrowFunction() {\n    const flags = this.currentThisScopeFlags();\n    return (flags & SCOPE_CLASS) > 0 && (flags & SCOPE_FUNCTION) === 0;\n  }\n  get inStaticBlock() {\n    for (let i = this.scopeStack.length - 1; ; i--) {\n      const { flags } = this.scopeStack[i];\n      if (flags & SCOPE_STATIC_BLOCK) {\n        return true;\n      }\n      if (flags & (SCOPE_VAR | SCOPE_CLASS)) {\n        // function body, module body, class property initializers\n        return false;\n      }\n    }\n  }\n  get inNonArrowFunction() {\n    return (this.currentThisScopeFlags() & SCOPE_FUNCTION) > 0;\n  }\n  get treatFunctionsAsVar() {\n    return this.treatFunctionsAsVarInScope(this.currentScope());\n  }\n\n  createScope(flags: ScopeFlags): Scope {\n    return new Scope(flags);\n  }\n\n  enter(flags: ScopeFlags) {\n    /*:: +createScope: (flags: ScopeFlags) => IScope; */\n    // @ts-expect-error This method will be overwritten by subclasses\n    this.scopeStack.push(this.createScope(flags));\n  }\n\n  exit() {\n    this.scopeStack.pop();\n  }\n\n  // The spec says:\n  // > At the top level of a function, or script, function declarations are\n  // > treated like var declarations rather than like lexical declarations.\n  treatFunctionsAsVarInScope(scope: IScope): boolean {\n    return !!(\n      scope.flags & (SCOPE_FUNCTION | SCOPE_STATIC_BLOCK) ||\n      (!this.parser.inModule && scope.flags & SCOPE_PROGRAM)\n    );\n  }\n\n  declareName(name: string, bindingType: BindingTypes, loc: Position) {\n    let scope = this.currentScope();\n    if (bindingType & BIND_SCOPE_LEXICAL || bindingType & BIND_SCOPE_FUNCTION) {\n      this.checkRedeclarationInScope(scope, name, bindingType, loc);\n\n      if (bindingType & BIND_SCOPE_FUNCTION) {\n        scope.functions.add(name);\n      } else {\n        scope.lexical.add(name);\n      }\n\n      if (bindingType & BIND_SCOPE_LEXICAL) {\n        this.maybeExportDefined(scope, name);\n      }\n    } else if (bindingType & BIND_SCOPE_VAR) {\n      for (let i = this.scopeStack.length - 1; i >= 0; --i) {\n        scope = this.scopeStack[i];\n        this.checkRedeclarationInScope(scope, name, bindingType, loc);\n        scope.var.add(name);\n        this.maybeExportDefined(scope, name);\n\n        if (scope.flags & SCOPE_VAR) break;\n      }\n    }\n    if (this.parser.inModule && scope.flags & SCOPE_PROGRAM) {\n      this.undefinedExports.delete(name);\n    }\n  }\n\n  maybeExportDefined(scope: IScope, name: string) {\n    if (this.parser.inModule && scope.flags & SCOPE_PROGRAM) {\n      this.undefinedExports.delete(name);\n    }\n  }\n\n  checkRedeclarationInScope(\n    scope: IScope,\n    name: string,\n    bindingType: BindingTypes,\n    loc: Position,\n  ) {\n    if (this.isRedeclaredInScope(scope, name, bindingType)) {\n      this.parser.raise(Errors.VarRedeclaration, {\n        at: loc,\n        identifierName: name,\n      });\n    }\n  }\n\n  isRedeclaredInScope(\n    scope: IScope,\n    name: string,\n    bindingType: BindingTypes,\n  ): boolean {\n    if (!(bindingType & BIND_KIND_VALUE)) return false;\n\n    if (bindingType & BIND_SCOPE_LEXICAL) {\n      return (\n        scope.lexical.has(name) ||\n        scope.functions.has(name) ||\n        scope.var.has(name)\n      );\n    }\n\n    if (bindingType & BIND_SCOPE_FUNCTION) {\n      return (\n        scope.lexical.has(name) ||\n        (!this.treatFunctionsAsVarInScope(scope) && scope.var.has(name))\n      );\n    }\n\n    return (\n      (scope.lexical.has(name) &&\n        !(\n          scope.flags & SCOPE_SIMPLE_CATCH &&\n          scope.lexical.values().next().value === name\n        )) ||\n      (!this.treatFunctionsAsVarInScope(scope) && scope.functions.has(name))\n    );\n  }\n\n  checkLocalExport(id: N.Identifier) {\n    const { name } = id;\n    const topLevelScope = this.scopeStack[0];\n    if (\n      !topLevelScope.lexical.has(name) &&\n      !topLevelScope.var.has(name) &&\n      // In strict mode, scope.functions will always be empty.\n      // Modules are strict by default, but the `scriptMode` option\n      // can overwrite this behavior.\n      !topLevelScope.functions.has(name)\n    ) {\n      this.undefinedExports.set(name, id.loc.start);\n    }\n  }\n\n  currentScope(): IScope {\n    return this.scopeStack[this.scopeStack.length - 1];\n  }\n\n  currentVarScopeFlags(): ScopeFlags {\n    for (let i = this.scopeStack.length - 1; ; i--) {\n      const { flags } = this.scopeStack[i];\n      if (flags & SCOPE_VAR) {\n        return flags;\n      }\n    }\n  }\n\n  // Could be useful for `arguments`, `this`, `new.target`, `super()`, `super.property`, and `super[property]`.\n  currentThisScopeFlags(): ScopeFlags {\n    for (let i = this.scopeStack.length - 1; ; i--) {\n      const { flags } = this.scopeStack[i];\n      if (flags & (SCOPE_VAR | SCOPE_CLASS) && !(flags & SCOPE_ARROW)) {\n        return flags;\n      }\n    }\n  }\n}\n","import { Position } from \"../../util/location\";\nimport ScopeHandler, { Scope } from \"../../util/scope\";\nimport {\n  BIND_FLAGS_FLOW_DECLARE_FN,\n  type ScopeFlags,\n  type BindingTypes,\n} from \"../../util/scopeflags\";\nimport * as N from \"../../types\";\n\n// Reference implementation: https://github.com/facebook/flow/blob/23aeb2a2ef6eb4241ce178fde5d8f17c5f747fb5/src/typing/env.ml#L536-L584\nclass FlowScope extends Scope {\n  // declare function foo(): type;\n  declareFunctions: Set<string> = new Set();\n}\n\nexport default class FlowScopeHandler extends ScopeHandler<FlowScope> {\n  createScope(flags: ScopeFlags): FlowScope {\n    return new FlowScope(flags);\n  }\n\n  declareName(name: string, bindingType: BindingTypes, loc: Position) {\n    const scope = this.currentScope();\n    if (bindingType & BIND_FLAGS_FLOW_DECLARE_FN) {\n      this.checkRedeclarationInScope(scope, name, bindingType, loc);\n      this.maybeExportDefined(scope, name);\n      scope.declareFunctions.add(name);\n      return;\n    }\n\n    super.declareName(name, bindingType, loc);\n  }\n\n  isRedeclaredInScope(\n    scope: FlowScope,\n    name: string,\n    bindingType: BindingTypes,\n  ): boolean {\n    if (super.isRedeclaredInScope(scope, name, bindingType)) return true;\n\n    if (bindingType & BIND_FLAGS_FLOW_DECLARE_FN) {\n      return (\n        !scope.declareFunctions.has(name) &&\n        (scope.lexical.has(name) || scope.functions.has(name))\n      );\n    }\n\n    return false;\n  }\n\n  checkLocalExport(id: N.Identifier) {\n    if (!this.scopeStack[0].declareFunctions.has(id.name)) {\n      super.checkLocalExport(id);\n    }\n  }\n}\n","import {\n  CLASS_ELEMENT_KIND_ACCESSOR,\n  CLASS_ELEMENT_FLAG_STATIC,\n  type ClassElementTypes,\n} from \"./scopeflags\";\nimport { Position } from \"./location\";\nimport { Errors } from \"../parse-error\";\nimport Tokenizer from \"../tokenizer\";\n\nexport class ClassScope {\n  // A list of private named declared in the current class\n  privateNames: Set<string> = new Set();\n\n  // A list of private getters of setters without their counterpart\n  loneAccessors: Map<string, ClassElementTypes> = new Map();\n\n  // A list of private names used before being defined, mapping to\n  // their position.\n  undefinedPrivateNames: Map<string, Position> = new Map();\n}\n\nexport default class ClassScopeHandler {\n  parser: Tokenizer;\n  stack: Array<ClassScope> = [];\n  undefinedPrivateNames: Map<string, Position> = new Map();\n\n  constructor(parser: Tokenizer) {\n    this.parser = parser;\n  }\n\n  current(): ClassScope {\n    return this.stack[this.stack.length - 1];\n  }\n\n  enter() {\n    this.stack.push(new ClassScope());\n  }\n\n  exit() {\n    const oldClassScope = this.stack.pop();\n\n    // Migrate the usage of not yet defined private names to the outer\n    // class scope, or raise an error if we reached the top-level scope.\n\n    const current = this.current();\n\n    // Array.from is needed because this is compiled to an array-like for loop\n    for (const [name, loc] of Array.from(oldClassScope.undefinedPrivateNames)) {\n      if (current) {\n        if (!current.undefinedPrivateNames.has(name)) {\n          current.undefinedPrivateNames.set(name, loc);\n        }\n      } else {\n        this.parser.raise(Errors.InvalidPrivateFieldResolution, {\n          at: loc,\n          identifierName: name,\n        });\n      }\n    }\n  }\n\n  declarePrivateName(\n    name: string,\n    elementType: ClassElementTypes,\n    loc: Position,\n  ) {\n    const { privateNames, loneAccessors, undefinedPrivateNames } =\n      this.current();\n    let redefined = privateNames.has(name);\n\n    if (elementType & CLASS_ELEMENT_KIND_ACCESSOR) {\n      const accessor = redefined && loneAccessors.get(name);\n      if (accessor) {\n        const oldStatic = accessor & CLASS_ELEMENT_FLAG_STATIC;\n        const newStatic = elementType & CLASS_ELEMENT_FLAG_STATIC;\n\n        const oldKind = accessor & CLASS_ELEMENT_KIND_ACCESSOR;\n        const newKind = elementType & CLASS_ELEMENT_KIND_ACCESSOR;\n\n        // The private name can be duplicated only if it is used by\n        // two accessors with different kind (get and set), and if\n        // they have the same placement (static or not).\n        redefined = oldKind === newKind || oldStatic !== newStatic;\n\n        if (!redefined) loneAccessors.delete(name);\n      } else if (!redefined) {\n        loneAccessors.set(name, elementType);\n      }\n    }\n\n    if (redefined) {\n      this.parser.raise(Errors.PrivateNameRedeclaration, {\n        at: loc,\n        identifierName: name,\n      });\n    }\n\n    privateNames.add(name);\n    undefinedPrivateNames.delete(name);\n  }\n\n  usePrivateName(name: string, loc: Position) {\n    let classScope;\n    for (classScope of this.stack) {\n      if (classScope.privateNames.has(name)) return;\n    }\n\n    if (classScope) {\n      classScope.undefinedPrivateNames.set(name, loc);\n    } else {\n      // top-level\n      this.parser.raise(Errors.InvalidPrivateFieldResolution, {\n        at: loc,\n        identifierName: name,\n      });\n    }\n  }\n}\n","import { Errors, type ParseErrorConstructor } from \"../parse-error\";\nimport { Position } from \"./location\";\nimport type { Node } from \"../types\";\nimport Tokenizer from \"../tokenizer\";\n\n/**\n * @module util/expression-scope\n\nExpressionScope is used to track declaration errors in these ambiguous patterns:\n\n- CoverParenthesizedExpressionAndArrowParameterList\n  e.g. we don't know if `({ x })` is an parenthesized expression or an\n  arrow function parameters until we see an `=>` after `)`.\n\n- CoverCallExpressionAndAsyncArrowHead\n   e.g. we don't know if `async({ x })` is a call expression or an async arrow\n   function parameters until we see an `=>` after `)`\n\nThe following declaration errors (@see parser-errors/standard) will be recorded in\nsome expression scopes and thrown later when we know what the ambiguous pattern is\n\n- AwaitBindingIdentifier\n- AwaitExpressionFormalParameter\n- YieldInParameter\n- InvalidParenthesizedAssignment when parenthesized is an identifier\n\nThere are four different expression scope\n- Expression\n  A general scope that represents program / function body / static block. No errors\n  will be recorded nor thrown in this scope.\n\n- MaybeArrowParameterDeclaration\n  A scope that represents ambiguous arrow head e.g. `(x)`. Errors will be recorded\n  alongside parent scopes and thrown when `ExpressionScopeHandler#validateAsPattern`\n  is called.\n\n- MaybeAsyncArrowParameterDeclaration\n  A scope that represents ambiguous async arrow head e.g. `async(x)`. Errors will\n  be recorded alongside parent scopes and thrown when\n  `ExpressionScopeHandler#validateAsPattern` is called.\n\n- ParameterDeclaration\n  A scope that represents unambiguous function parameters `function(x)`. Errors\n  recorded in this scope will be thrown immediately. No errors will be recorded in\n  this scope.\n\n// @see {@link https://docs.google.com/document/d/1FAvEp9EUK-G8kHfDIEo_385Hs2SUBCYbJ5H-NnLvq8M|V8 Expression Scope design docs}\n */\n\nconst kExpression = 0,\n  kMaybeArrowParameterDeclaration = 1,\n  kMaybeAsyncArrowParameterDeclaration = 2,\n  kParameterDeclaration = 3;\n\ntype ExpressionScopeType = 0 | 1 | 2 | 3;\n\nclass ExpressionScope {\n  type: ExpressionScopeType;\n\n  constructor(type: ExpressionScopeType = kExpression) {\n    this.type = type;\n  }\n\n  canBeArrowParameterDeclaration(): this is ArrowHeadParsingScope {\n    return (\n      this.type === kMaybeAsyncArrowParameterDeclaration ||\n      this.type === kMaybeArrowParameterDeclaration\n    );\n  }\n\n  isCertainlyParameterDeclaration() {\n    return this.type === kParameterDeclaration;\n  }\n}\n\ntype ArrowHeadParsingParameterInitializerError =\n  | typeof Errors.AwaitExpressionFormalParameter\n  | typeof Errors.YieldInParameter;\ntype ArrowHeadParsingDeclarationError =\n  | ArrowHeadParsingParameterInitializerError\n  | typeof Errors.InvalidParenthesizedAssignment\n  | typeof Errors.AwaitBindingIdentifier;\n\nclass ArrowHeadParsingScope extends ExpressionScope {\n  declarationErrors: Map<number, [ParseErrorConstructor<{}>, Position]> =\n    new Map();\n  constructor(type: 1 | 2) {\n    super(type);\n  }\n  recordDeclarationError(\n    ParsingErrorClass: ParseErrorConstructor<{}>,\n    {\n      at,\n    }: {\n      at: Position;\n    },\n  ) {\n    const index = at.index;\n\n    this.declarationErrors.set(index, [ParsingErrorClass, at]);\n  }\n  clearDeclarationError(index: number) {\n    this.declarationErrors.delete(index);\n  }\n  iterateErrors(\n    iterator: (a: [ArrowHeadParsingDeclarationError, Position]) => void,\n  ) {\n    this.declarationErrors.forEach(iterator);\n  }\n}\n\nexport default class ExpressionScopeHandler {\n  parser: Tokenizer;\n  stack: Array<ExpressionScope> = [new ExpressionScope()];\n\n  constructor(parser: Tokenizer) {\n    this.parser = parser;\n  }\n  enter(scope: ExpressionScope) {\n    this.stack.push(scope);\n  }\n\n  exit() {\n    this.stack.pop();\n  }\n\n  /**\n   * Record likely parameter initializer errors\n   *\n   * When current scope is a ParameterDeclaration, the error will be thrown immediately,\n   * otherwise it will be recorded to any ancestry MaybeArrowParameterDeclaration and\n   * MaybeAsyncArrowParameterDeclaration scope until an Expression scope is seen.\n   * @param {number} pos Error position\n   * @param {ErrorTemplate} template Error template\n   * @memberof ExpressionScopeHandler\n   */\n  recordParameterInitializerError(\n    toParseError: ArrowHeadParsingParameterInitializerError,\n    {\n      at: node,\n    }: {\n      at: Node;\n    },\n  ): void {\n    const origin = { at: node.loc.start };\n    const { stack } = this;\n    let i = stack.length - 1;\n    let scope: ExpressionScope = stack[i];\n    while (!scope.isCertainlyParameterDeclaration()) {\n      if (scope.canBeArrowParameterDeclaration()) {\n        scope.recordDeclarationError(toParseError, origin);\n      } else {\n        /*:: invariant(scope.type == kExpression) */\n        // Type-Expression is the boundary where initializer error can populate to\n        return;\n      }\n      scope = stack[--i];\n    }\n    this.parser.raise(toParseError, origin);\n  }\n\n  /**\n   * Record errors that must be thrown if the current pattern ends up being an arrow\n   * function parameter. This is used to record parenthesized identifiers, and to record\n   * \"a as T\" and \"<T> a\" type assertions when parsing typescript.\n   *\n   * A parenthesized identifier (or type assertion) in LHS can be ambiguous because the assignment\n   * can be transformed to an assignable later, but not vice versa:\n   * For example, in `([(a) = []] = []) => {}`, we think `(a) = []` is an LHS in `[(a) = []]`,\n   * an LHS within `[(a) = []] = []`. However the LHS chain is then transformed by toAssignable,\n   * and we should throw assignment `(a)`, which is only valid in LHS. Hence we record the\n   * location of parenthesized `(a)` to current scope if it is one of MaybeArrowParameterDeclaration\n   * and MaybeAsyncArrowParameterDeclaration\n   *\n   * Unlike `recordParameterInitializerError`, we don't record to ancestry scope because we\n   * validate arrow head parsing scope before exit, and then the LHS will be unambiguous:\n   * For example, in `( x = ( [(a) = []] = [] ) ) => {}`, we should not record `(a)` in `( x = ... ) =>`\n   * arrow scope because when we finish parsing `( [(a) = []] = [] )`, it is an unambiguous assignment\n   * expression and can not be cast to pattern\n   * @param {ParseErrorConstructor<{||}>} error\n   * @param {Node} payload.at\n   * @returns {void}\n   * @memberof ExpressionScopeHandler\n   */\n  recordArrowParemeterBindingError(\n    error: ParseErrorConstructor<{}>,\n    {\n      at: node,\n    }: {\n      at: Node;\n    },\n  ): void {\n    const { stack } = this;\n    const scope: ExpressionScope = stack[stack.length - 1];\n    const origin = { at: node.loc.start };\n    if (scope.isCertainlyParameterDeclaration()) {\n      this.parser.raise(error, origin);\n    } else if (scope.canBeArrowParameterDeclaration()) {\n      scope.recordDeclarationError(error, origin);\n    } else {\n      return;\n    }\n  }\n\n  /**\n   * Record likely async arrow parameter errors\n   *\n   * Errors will be recorded to any ancestry MaybeAsyncArrowParameterDeclaration\n   * scope until an Expression scope is seen.\n   * @param {number} pos\n   * @param {ErrorTemplate} template\n   * @memberof ExpressionScopeHandler\n   */\n  recordAsyncArrowParametersError({ at }: { at: Position }): void {\n    const { stack } = this;\n    let i = stack.length - 1;\n    let scope: ExpressionScope = stack[i];\n    while (scope.canBeArrowParameterDeclaration()) {\n      if (scope.type === kMaybeAsyncArrowParameterDeclaration) {\n        scope.recordDeclarationError(Errors.AwaitBindingIdentifier, { at });\n      }\n      scope = stack[--i];\n    }\n  }\n\n  validateAsPattern(): void {\n    const { stack } = this;\n    const currentScope = stack[stack.length - 1];\n    if (!currentScope.canBeArrowParameterDeclaration()) return;\n    currentScope.iterateErrors(([toParseError, loc]) => {\n      this.parser.raise(toParseError, { at: loc });\n      // iterate from parent scope\n      let i = stack.length - 2;\n      let scope = stack[i];\n      while (scope.canBeArrowParameterDeclaration()) {\n        scope.clearDeclarationError(loc.index);\n        scope = stack[--i];\n      }\n    });\n  }\n}\n\nexport function newParameterDeclarationScope() {\n  return new ExpressionScope(kParameterDeclaration);\n}\n\nexport function newArrowHeadScope() {\n  return new ArrowHeadParsingScope(kMaybeArrowParameterDeclaration);\n}\n\nexport function newAsyncArrowScope() {\n  return new ArrowHeadParsingScope(kMaybeAsyncArrowParameterDeclaration);\n}\n\nexport function newExpressionScope() {\n  return new ExpressionScope();\n}\n","export const // Initial Parameter flags\n  PARAM = 0b0000,\n  // track [Yield] production parameter\n  PARAM_YIELD = 0b0001,\n  // track [Await] production parameter\n  PARAM_AWAIT = 0b0010,\n  // track [Return] production parameter\n  PARAM_RETURN = 0b0100,\n  PARAM_IN = 0b1000; // track [In] production parameter\n\n// ProductionParameterHandler is a stack fashioned production parameter tracker\n// https://tc39.es/ecma262/#sec-grammar-notation\n// The tracked parameters are defined above.\n//\n// Whenever [+Await]/[+Yield] appears in the right-hand sides of a production,\n// we must enter a new tracking stack. For example when parsing\n//\n// AsyncFunctionDeclaration [Yield, Await]:\n//   async [no LineTerminator here] function BindingIdentifier[?Yield, ?Await]\n//     ( FormalParameters[~Yield, +Await] ) { AsyncFunctionBody }\n//\n// we must follow such process:\n//\n// 1. parse async keyword\n// 2. parse function keyword\n// 3. parse bindingIdentifier <= inherit current parameters: [?Await]\n// 4. enter new stack with (PARAM_AWAIT)\n// 5. parse formal parameters <= must have [Await] parameter [+Await]\n// 6. parse function body\n// 7. exit current stack\n\nexport type ParamKind =\n  | typeof PARAM\n  | typeof PARAM_AWAIT\n  | typeof PARAM_IN\n  | typeof PARAM_RETURN\n  | typeof PARAM_YIELD;\n\nexport default class ProductionParameterHandler {\n  stacks: Array<number> = [];\n  enter(flags: number) {\n    this.stacks.push(flags);\n  }\n\n  exit() {\n    this.stacks.pop();\n  }\n\n  currentFlags(): number {\n    return this.stacks[this.stacks.length - 1];\n  }\n\n  get hasAwait(): boolean {\n    return (this.currentFlags() & PARAM_AWAIT) > 0;\n  }\n\n  get hasYield(): boolean {\n    return (this.currentFlags() & PARAM_YIELD) > 0;\n  }\n\n  get hasReturn(): boolean {\n    return (this.currentFlags() & PARAM_RETURN) > 0;\n  }\n\n  get hasIn(): boolean {\n    return (this.currentFlags() & PARAM_IN) > 0;\n  }\n}\n\nexport function functionFlags(\n  isAsync: boolean,\n  isGenerator: boolean,\n): ParamKind {\n  return ((isAsync ? PARAM_AWAIT : 0) |\n    (isGenerator ? PARAM_YIELD : 0)) as ParamKind;\n}\n","import { type Position } from \"../util/location\";\nimport {\n  tokenIsLiteralPropertyName,\n  tt,\n  type TokenType,\n} from \"../tokenizer/types\";\nimport Tokenizer from \"../tokenizer\";\nimport State from \"../tokenizer/state\";\nimport type { EstreePropertyDefinition, Node, ObjectProperty } from \"../types\";\nimport { lineBreak, skipWhiteSpaceToLineBreak } from \"../util/whitespace\";\nimport { isIdentifierChar } from \"../util/identifier\";\nimport ClassScopeHandler from \"../util/class-scope\";\nimport ExpressionScopeHandler from \"../util/expression-scope\";\nimport { SCOPE_PROGRAM } from \"../util/scopeflags\";\nimport ProductionParameterHandler, {\n  PARAM_AWAIT,\n  PARAM,\n} from \"../util/production-parameter\";\nimport {\n  Errors,\n  type ParseError,\n  type ParseErrorConstructor,\n} from \"../parse-error\";\nimport type Parser from \".\";\n\n/*::\nimport type ScopeHandler from \"../util/scope\";\n*/\n\ntype TryParse<Node, Error, Thrown, Aborted, FailState> = {\n  node: Node;\n  error: Error;\n  thrown: Thrown;\n  aborted: Aborted;\n  failState: FailState;\n};\n\n// ## Parser utilities\n\nexport default class UtilParser extends Tokenizer {\n  // Forward-declaration: defined in parser/index.js\n  /*::\n  +getScopeHandler: () => Class<ScopeHandler<*>>;\n  */\n\n  // TODO\n\n  addExtra(\n    node: Partial<Node>,\n    key: string,\n    value: any,\n    enumerable: boolean = true,\n  ): void {\n    if (!node) return;\n\n    const extra = (node.extra = node.extra || {});\n    if (enumerable) {\n      extra[key] = value;\n    } else {\n      Object.defineProperty(extra, key, { enumerable, value });\n    }\n  }\n\n  // Tests whether parsed token is a contextual keyword.\n\n  isContextual(token: TokenType): boolean {\n    return this.state.type === token && !this.state.containsEsc;\n  }\n\n  isUnparsedContextual(nameStart: number, name: string): boolean {\n    const nameEnd = nameStart + name.length;\n    if (this.input.slice(nameStart, nameEnd) === name) {\n      const nextCh = this.input.charCodeAt(nameEnd);\n      return !(\n        isIdentifierChar(nextCh) ||\n        // check if `nextCh is between 0xd800 - 0xdbff,\n        // if `nextCh` is NaN, `NaN & 0xfc00` is 0, the function\n        // returns true\n        (nextCh & 0xfc00) === 0xd800\n      );\n    }\n    return false;\n  }\n\n  isLookaheadContextual(name: string): boolean {\n    const next = this.nextTokenStart();\n    return this.isUnparsedContextual(next, name);\n  }\n\n  // Consumes contextual keyword if possible.\n\n  eatContextual(token: TokenType): boolean {\n    if (this.isContextual(token)) {\n      this.next();\n      return true;\n    }\n    return false;\n  }\n\n  // Asserts that following token is given contextual keyword.\n\n  expectContextual(\n    token: TokenType,\n    toParseError?: ParseErrorConstructor<any>,\n  ): void {\n    if (!this.eatContextual(token)) {\n      if (toParseError != null) {\n        throw this.raise(toParseError, { at: this.state.startLoc });\n      }\n      throw this.unexpected(null, token);\n    }\n  }\n\n  // Test whether a semicolon can be inserted at the current position.\n\n  canInsertSemicolon(): boolean {\n    return (\n      this.match(tt.eof) ||\n      this.match(tt.braceR) ||\n      this.hasPrecedingLineBreak()\n    );\n  }\n\n  hasPrecedingLineBreak(): boolean {\n    return lineBreak.test(\n      this.input.slice(this.state.lastTokEndLoc.index, this.state.start),\n    );\n  }\n\n  hasFollowingLineBreak(): boolean {\n    skipWhiteSpaceToLineBreak.lastIndex = this.state.end;\n    return skipWhiteSpaceToLineBreak.test(this.input);\n  }\n\n  // TODO\n\n  isLineTerminator(): boolean {\n    return this.eat(tt.semi) || this.canInsertSemicolon();\n  }\n\n  // Consume a semicolon, or, failing that, see if we are allowed to\n  // pretend that there is a semicolon at this position.\n\n  semicolon(allowAsi: boolean = true): void {\n    if (allowAsi ? this.isLineTerminator() : this.eat(tt.semi)) return;\n    this.raise(Errors.MissingSemicolon, { at: this.state.lastTokEndLoc });\n  }\n\n  // Expect a token of a given type. If found, consume it, otherwise,\n  // raise an unexpected token error at given pos.\n\n  expect(type: TokenType, loc?: Position | null): void {\n    this.eat(type) || this.unexpected(loc, type);\n  }\n\n  // tryParse will clone parser state.\n  // It is expensive and should be used with cautions\n  tryParse<T extends Node | ReadonlyArray<Node>>(\n    fn: (abort: (node?: T) => never) => T,\n    oldState: State = this.state.clone(),\n  ):\n    | TryParse<T, null, false, false, null>\n    | TryParse<T | null, ParseError<any>, boolean, false, State>\n    | TryParse<T | null, null, false, true, State> {\n    const abortSignal: {\n      node: T | null;\n    } = { node: null };\n    try {\n      const node = fn((node = null) => {\n        abortSignal.node = node;\n        throw abortSignal;\n      });\n      if (this.state.errors.length > oldState.errors.length) {\n        const failState = this.state;\n        this.state = oldState;\n        // tokensLength should be preserved during error recovery mode\n        // since the parser does not halt and will instead parse the\n        // remaining tokens\n        this.state.tokensLength = failState.tokensLength;\n        return {\n          node,\n          error: failState.errors[oldState.errors.length] as ParseError<any>,\n          thrown: false,\n          aborted: false,\n          failState,\n        };\n      }\n\n      return {\n        node,\n        error: null,\n        thrown: false,\n        aborted: false,\n        failState: null,\n      };\n    } catch (error) {\n      const failState = this.state;\n      this.state = oldState;\n      if (error instanceof SyntaxError) {\n        // @ts-expect-error casting general syntax error to parse error\n        return { node: null, error, thrown: true, aborted: false, failState };\n      }\n      if (error === abortSignal) {\n        return {\n          node: abortSignal.node,\n          error: null,\n          thrown: false,\n          aborted: true,\n          failState,\n        };\n      }\n\n      throw error;\n    }\n  }\n\n  checkExpressionErrors(\n    refExpressionErrors: ExpressionErrors | undefined | null,\n    andThrow: boolean,\n  ) {\n    if (!refExpressionErrors) return false;\n    const {\n      shorthandAssignLoc,\n      doubleProtoLoc,\n      privateKeyLoc,\n      optionalParametersLoc,\n    } = refExpressionErrors;\n\n    const hasErrors =\n      !!shorthandAssignLoc ||\n      !!doubleProtoLoc ||\n      !!optionalParametersLoc ||\n      !!privateKeyLoc;\n\n    if (!andThrow) {\n      return hasErrors;\n    }\n\n    if (shorthandAssignLoc != null) {\n      this.raise(Errors.InvalidCoverInitializedName, {\n        at: shorthandAssignLoc,\n      });\n    }\n\n    if (doubleProtoLoc != null) {\n      this.raise(Errors.DuplicateProto, { at: doubleProtoLoc });\n    }\n\n    if (privateKeyLoc != null) {\n      this.raise(Errors.UnexpectedPrivateField, { at: privateKeyLoc });\n    }\n\n    if (optionalParametersLoc != null) {\n      this.unexpected(optionalParametersLoc);\n    }\n  }\n\n  /**\n   * Test if current token is a literal property name\n   * https://tc39.es/ecma262/#prod-LiteralPropertyName\n   * LiteralPropertyName:\n   *   IdentifierName\n   *   StringLiteral\n   *   NumericLiteral\n   *   BigIntLiteral\n   */\n  isLiteralPropertyName(): boolean {\n    return tokenIsLiteralPropertyName(this.state.type);\n  }\n\n  /*\n   * Test if given node is a PrivateName\n   * will be overridden in ESTree plugin\n   */\n  isPrivateName(node: Node): boolean {\n    return node.type === \"PrivateName\";\n  }\n\n  /*\n   * Return the string value of a given private name\n   * WITHOUT `#`\n   * @see {@link https://tc39.es/ecma262/#sec-static-semantics-stringvalue}\n   */\n  getPrivateNameSV(node: Node): string {\n    return node.id.name;\n  }\n\n  /*\n   * Return whether the given node is a member/optional chain that\n   * contains a private name as its property\n   * It is overridden in ESTree plugin\n   */\n  hasPropertyAsPrivateName(node: Node): boolean {\n    return (\n      (node.type === \"MemberExpression\" ||\n        node.type === \"OptionalMemberExpression\") &&\n      this.isPrivateName(node.property)\n    );\n  }\n\n  isOptionalChain(node: Node): boolean {\n    return (\n      node.type === \"OptionalMemberExpression\" ||\n      node.type === \"OptionalCallExpression\"\n    );\n  }\n\n  isObjectProperty(\n    node: Node,\n  ): node is ObjectProperty | EstreePropertyDefinition {\n    return node.type === \"ObjectProperty\";\n  }\n\n  isObjectMethod(node: Node): boolean {\n    return node.type === \"ObjectMethod\";\n  }\n\n  initializeScopes(\n    this: Parser,\n    inModule: boolean = this.options.sourceType === \"module\",\n  ): () => void {\n    // Initialize state\n    const oldLabels = this.state.labels;\n    this.state.labels = [];\n\n    const oldExportedIdentifiers = this.exportedIdentifiers;\n    this.exportedIdentifiers = new Set();\n\n    // initialize scopes\n    const oldInModule = this.inModule;\n    this.inModule = inModule;\n\n    const oldScope = this.scope;\n    const ScopeHandler = this.getScopeHandler();\n    this.scope = new ScopeHandler(this, inModule);\n\n    const oldProdParam = this.prodParam;\n    this.prodParam = new ProductionParameterHandler();\n\n    const oldClassScope = this.classScope;\n    this.classScope = new ClassScopeHandler(this);\n\n    const oldExpressionScope = this.expressionScope;\n    this.expressionScope = new ExpressionScopeHandler(this);\n\n    return () => {\n      // Revert state\n      this.state.labels = oldLabels;\n      this.exportedIdentifiers = oldExportedIdentifiers;\n\n      // Revert scopes\n      this.inModule = oldInModule;\n      this.scope = oldScope;\n      this.prodParam = oldProdParam;\n      this.classScope = oldClassScope;\n      this.expressionScope = oldExpressionScope;\n    };\n  }\n\n  enterInitialScopes() {\n    let paramFlags = PARAM;\n    if (this.inModule) {\n      paramFlags |= PARAM_AWAIT;\n    }\n    this.scope.enter(SCOPE_PROGRAM);\n    this.prodParam.enter(paramFlags);\n  }\n\n  checkDestructuringPrivate(refExpressionErrors: ExpressionErrors) {\n    const { privateKeyLoc } = refExpressionErrors;\n    if (privateKeyLoc !== null) {\n      this.expectPlugin(\"destructuringPrivate\", privateKeyLoc);\n    }\n  }\n}\n\n/**\n * The ExpressionErrors is a context struct used to track ambiguous patterns\n * When we are sure the parsed pattern is a RHS, which means it is not a pattern,\n * we will throw on this position on invalid assign syntax, otherwise it will be reset to -1\n *\n * Types of ExpressionErrors:\n *\n * - **shorthandAssignLoc**: track initializer `=` position\n * - **doubleProtoLoc**: track the duplicate `__proto__` key position\n * - **privateKey**: track private key `#p` position\n * - **optionalParametersLoc**: track the optional paramter (`?`).\n * It's only used by typescript and flow plugins\n */\nexport class ExpressionErrors {\n  shorthandAssignLoc: Position | undefined | null = null;\n  doubleProtoLoc: Position | undefined | null = null;\n  privateKeyLoc: Position | undefined | null = null;\n  optionalParametersLoc: Position | undefined | null = null;\n}\n","import type Parser from \"./index\";\nimport UtilParser from \"./util\";\nimport { SourceLocation, type Position } from \"../util/location\";\nimport type { Comment, Node as NodeType, NodeBase } from \"../types\";\n\n// Start an AST node, attaching a start offset.\n\nclass Node implements NodeBase {\n  constructor(parser: Parser, pos: number, loc: Position) {\n    this.start = pos;\n    this.end = 0;\n    this.loc = new SourceLocation(loc);\n    if (parser?.options.ranges) this.range = [pos, 0];\n    if (parser?.filename) this.loc.filename = parser.filename;\n  }\n\n  type: string = \"\";\n  declare start: number;\n  declare end: number;\n  declare loc: SourceLocation;\n  declare range: [number, number];\n  declare leadingComments: Array<Comment>;\n  declare trailingComments: Array<Comment>;\n  declare innerComments: Array<Comment>;\n  declare extra: {\n    [key: string]: any;\n  };\n}\nconst NodePrototype = Node.prototype;\n\nif (!process.env.BABEL_8_BREAKING) {\n  // @ts-expect-error\n  NodePrototype.__clone = function (): Node {\n    // @ts-expect-error\n    const newNode: any = new Node();\n    const keys = Object.keys(this);\n    for (let i = 0, length = keys.length; i < length; i++) {\n      const key = keys[i];\n      // Do not clone comments that are already attached to the node\n      if (\n        key !== \"leadingComments\" &&\n        key !== \"trailingComments\" &&\n        key !== \"innerComments\"\n      ) {\n        newNode[key] =\n          // @ts-expect-error: key must present in this\n          this[key];\n      }\n    }\n\n    return newNode;\n  };\n}\n\nfunction clonePlaceholder(node: any): any {\n  return cloneIdentifier(node);\n}\n\nexport function cloneIdentifier(node: any): any {\n  // We don't need to clone `typeAnnotations` and `optional`: because\n  // cloneIdentifier is only used in object shorthand and named import/export.\n  // Neither of them allow type annotations after the identifier or optional identifier\n  const { type, start, end, loc, range, extra, name } = node;\n  const cloned = Object.create(NodePrototype);\n  cloned.type = type;\n  cloned.start = start;\n  cloned.end = end;\n  cloned.loc = loc;\n  cloned.range = range;\n  cloned.extra = extra;\n  cloned.name = name;\n  if (type === \"Placeholder\") {\n    cloned.expectedNode = node.expectedNode;\n  }\n  return cloned;\n}\n\nexport function cloneStringLiteral(node: any): any {\n  const { type, start, end, loc, range, extra } = node;\n  if (type === \"Placeholder\") {\n    return clonePlaceholder(node);\n  }\n  const cloned = Object.create(NodePrototype);\n  cloned.type = type;\n  cloned.start = start;\n  cloned.end = end;\n  cloned.loc = loc;\n  cloned.range = range;\n  if (node.raw !== undefined) {\n    // estree set node.raw instead of node.extra\n    cloned.raw = node.raw;\n  } else {\n    cloned.extra = extra;\n  }\n  cloned.value = node.value;\n  return cloned;\n}\n\nexport type Undone<T extends NodeType> = Omit<T, \"type\">;\n\nexport class NodeUtils extends UtilParser {\n  startNode<T extends NodeType>(): Undone<T> {\n    // @ts-expect-error\n    return new Node(this, this.state.start, this.state.startLoc);\n  }\n\n  startNodeAt<T extends NodeType>(pos: number, loc: Position): Undone<T> {\n    // @ts-expect-error\n    return new Node(this, pos, loc);\n  }\n\n  /** Start a new node with a previous node's location. */\n  startNodeAtNode<T extends NodeType>(type: Undone<NodeType>): Undone<T> {\n    return this.startNodeAt(type.start, type.loc.start);\n  }\n\n  // Finish an AST node, adding `type` and `end` properties.\n\n  finishNode<T extends NodeType>(node: Undone<T>, type: T[\"type\"]): T {\n    return this.finishNodeAt(node, type, this.state.lastTokEndLoc);\n  }\n\n  // Finish node at given position\n\n  finishNodeAt<T extends NodeType>(\n    node: Omit<T, \"type\">,\n    type: T[\"type\"],\n    endLoc: Position,\n  ): T {\n    if (process.env.NODE_ENV !== \"production\" && node.end > 0) {\n      throw new Error(\n        \"Do not call finishNode*() twice on the same node.\" +\n          \" Instead use resetEndLocation() or change type directly.\",\n      );\n    }\n    // @ts-expect-error migrate to Babel types AST typings\n    node.type = type;\n    // @ts-expect-error migrate to Babel types AST typings\n    node.end = endLoc.index;\n    node.loc.end = endLoc;\n    if (this.options.ranges) node.range[1] = endLoc.index;\n    if (this.options.attachComment) this.processComment(node as T);\n    return node as T;\n  }\n\n  resetStartLocation(node: NodeBase, start: number, startLoc: Position): void {\n    node.start = start;\n    node.loc.start = startLoc;\n    if (this.options.ranges) node.range[0] = start;\n  }\n\n  resetEndLocation(\n    node: NodeBase,\n    endLoc: Position = this.state.lastTokEndLoc,\n  ): void {\n    node.end = endLoc.index;\n    node.loc.end = endLoc;\n    if (this.options.ranges) node.range[1] = endLoc.index;\n  }\n\n  /**\n   * Reset the start location of node to the start location of locationNode\n   */\n  resetStartLocationFromNode(node: NodeBase, locationNode: NodeBase): void {\n    this.resetStartLocation(node, locationNode.start, locationNode.loc.start);\n  }\n}\n","/*:: declare var invariant; */\n\nimport type Parser from \"../../parser\";\nimport {\n  tokenIsIdentifier,\n  tokenIsKeyword,\n  tokenIsKeywordOrIdentifier,\n  tokenIsLiteralPropertyName,\n  tokenLabelName,\n  tt,\n  type TokenType,\n  tokenIsFlowInterfaceOrTypeOrOpaque,\n} from \"../../tokenizer/types\";\nimport * as N from \"../../types\";\nimport { Position } from \"../../util/location\";\nimport { types as tc } from \"../../tokenizer/context\";\nimport * as charCodes from \"charcodes\";\nimport { isIteratorStart } from \"../../util/identifier\";\nimport FlowScopeHandler from \"./scope\";\nimport {\n  BIND_LEXICAL,\n  BIND_VAR,\n  BIND_FUNCTION,\n  BIND_FLOW_DECLARE_FN,\n  SCOPE_ARROW,\n  SCOPE_FUNCTION,\n  SCOPE_OTHER,\n  type BindingTypes,\n} from \"../../util/scopeflags\";\nimport type { ExpressionErrors } from \"../../parser/util\";\nimport { Errors, ParseErrorEnum } from \"../../parse-error\";\nimport { cloneIdentifier, type Undone } from \"../../parser/node\";\n\nconst reservedTypes = new Set([\n  \"_\",\n  \"any\",\n  \"bool\",\n  \"boolean\",\n  \"empty\",\n  \"extends\",\n  \"false\",\n  \"interface\",\n  \"mixed\",\n  \"null\",\n  \"number\",\n  \"static\",\n  \"string\",\n  \"true\",\n  \"typeof\",\n  \"void\",\n]);\n\n/* eslint sort-keys: \"error\" */\n// The Errors key follows https://github.com/facebook/flow/blob/master/src/parser/parse_error.ml unless it does not exist\nconst FlowErrors = ParseErrorEnum`flow`({\n  AmbiguousConditionalArrow:\n    \"Ambiguous expression: wrap the arrow functions in parentheses to disambiguate.\",\n  AmbiguousDeclareModuleKind:\n    \"Found both `declare module.exports` and `declare export` in the same module. Modules can only have 1 since they are either an ES module or they are a CommonJS module.\",\n  // TODO: When we get proper string enums in typescript make this ReservedType.\n  // Not really worth it to do the whole $Values dance with reservedTypes set.\n  AssignReservedType: ({ reservedType }: { reservedType: string }) =>\n    `Cannot overwrite reserved type ${reservedType}.`,\n  DeclareClassElement:\n    \"The `declare` modifier can only appear on class fields.\",\n  DeclareClassFieldInitializer:\n    \"Initializers are not allowed in fields with the `declare` modifier.\",\n  DuplicateDeclareModuleExports:\n    \"Duplicate `declare module.exports` statement.\",\n  EnumBooleanMemberNotInitialized: ({\n    memberName,\n    enumName,\n  }: {\n    memberName: string;\n    enumName: string;\n  }) =>\n    `Boolean enum members need to be initialized. Use either \\`${memberName} = true,\\` or \\`${memberName} = false,\\` in enum \\`${enumName}\\`.`,\n  EnumDuplicateMemberName: ({\n    memberName,\n    enumName,\n  }: {\n    memberName: string;\n    enumName: string;\n  }) =>\n    `Enum member names need to be unique, but the name \\`${memberName}\\` has already been used before in enum \\`${enumName}\\`.`,\n  EnumInconsistentMemberValues: ({ enumName }: { enumName: string }) =>\n    `Enum \\`${enumName}\\` has inconsistent member initializers. Either use no initializers, or consistently use literals (either booleans, numbers, or strings) for all member initializers.`,\n  EnumInvalidExplicitType: ({\n    invalidEnumType,\n    enumName,\n  }: {\n    invalidEnumType: string;\n    enumName: string;\n  }) =>\n    `Enum type \\`${invalidEnumType}\\` is not valid. Use one of \\`boolean\\`, \\`number\\`, \\`string\\`, or \\`symbol\\` in enum \\`${enumName}\\`.`,\n  EnumInvalidExplicitTypeUnknownSupplied: ({\n    enumName,\n  }: {\n    enumName: string;\n  }) =>\n    `Supplied enum type is not valid. Use one of \\`boolean\\`, \\`number\\`, \\`string\\`, or \\`symbol\\` in enum \\`${enumName}\\`.`,\n\n  // TODO: When moving to typescript, we should either have each of the\n  // following errors only accept the specific strings they want:\n  //\n  // ...PrimaryType: explicitType: \"string\" | \"number\" | \"boolean\"\n  // ...SymbolType: explicitType: \"symbol\"\n  // ...UnknownType: explicitType: null\n  //\n  // Or, alternatively, merge these three errors together into one\n  // `EnumInvalidMemberInitializer` error that can accept `EnumExplicitType`\n  // without alteration, and then just have its message change based on the\n  // explicitType.\n  EnumInvalidMemberInitializerPrimaryType: ({\n    enumName,\n    memberName,\n    explicitType,\n  }: {\n    enumName: string;\n    memberName: string;\n    explicitType: EnumExplicitType;\n  }) =>\n    `Enum \\`${enumName}\\` has type \\`${explicitType}\\`, so the initializer of \\`${memberName}\\` needs to be a ${explicitType} literal.`,\n  EnumInvalidMemberInitializerSymbolType: ({\n    enumName,\n    memberName,\n  }: {\n    enumName: string;\n    memberName: string;\n    explicitType: EnumExplicitType;\n  }) =>\n    `Symbol enum members cannot be initialized. Use \\`${memberName},\\` in enum \\`${enumName}\\`.`,\n  EnumInvalidMemberInitializerUnknownType: ({\n    enumName,\n    memberName,\n  }: {\n    enumName: string;\n    memberName: string;\n    explicitType: EnumExplicitType;\n  }) =>\n    `The enum member initializer for \\`${memberName}\\` needs to be a literal (either a boolean, number, or string) in enum \\`${enumName}\\`.`,\n  EnumInvalidMemberName: ({\n    enumName,\n    memberName,\n    suggestion,\n  }: {\n    enumName: string;\n    memberName: string;\n    suggestion: string;\n  }) =>\n    `Enum member names cannot start with lowercase 'a' through 'z'. Instead of using \\`${memberName}\\`, consider using \\`${suggestion}\\`, in enum \\`${enumName}\\`.`,\n  EnumNumberMemberNotInitialized: ({\n    enumName,\n    memberName,\n  }: {\n    enumName: string;\n    memberName: string;\n  }) =>\n    `Number enum members need to be initialized, e.g. \\`${memberName} = 1\\` in enum \\`${enumName}\\`.`,\n  EnumStringMemberInconsistentlyInitailized: ({\n    enumName,\n  }: {\n    enumName: string;\n  }) =>\n    `String enum members need to consistently either all use initializers, or use no initializers, in enum \\`${enumName}\\`.`,\n  GetterMayNotHaveThisParam: \"A getter cannot have a `this` parameter.\",\n  ImportTypeShorthandOnlyInPureImport:\n    \"The `type` and `typeof` keywords on named imports can only be used on regular `import` statements. It cannot be used with `import type` or `import typeof` statements.\",\n  InexactInsideExact:\n    \"Explicit inexact syntax cannot appear inside an explicit exact object type.\",\n  InexactInsideNonObject:\n    \"Explicit inexact syntax cannot appear in class or interface definitions.\",\n  InexactVariance: \"Explicit inexact syntax cannot have variance.\",\n  InvalidNonTypeImportInDeclareModule:\n    \"Imports within a `declare module` body must always be `import type` or `import typeof`.\",\n  MissingTypeParamDefault:\n    \"Type parameter declaration needs a default, since a preceding type parameter declaration has a default.\",\n  NestedDeclareModule:\n    \"`declare module` cannot be used inside another `declare module`.\",\n  NestedFlowComment: \"Cannot have a flow comment inside another flow comment.\",\n  PatternIsOptional: {\n    message:\n      \"A binding pattern parameter cannot be optional in an implementation signature.\",\n    // For consistency in TypeScript and Flow error codes\n    ...(!process.env.BABEL_8_BREAKING\n      ? { reasonCode: \"OptionalBindingPattern\" }\n      : {}),\n  },\n  SetterMayNotHaveThisParam: \"A setter cannot have a `this` parameter.\",\n  SpreadVariance: \"Spread properties cannot have variance.\",\n  ThisParamAnnotationRequired:\n    \"A type annotation is required for the `this` parameter.\",\n  ThisParamBannedInConstructor:\n    \"Constructors cannot have a `this` parameter; constructors don't bind `this` like other functions.\",\n  ThisParamMayNotBeOptional: \"The `this` parameter cannot be optional.\",\n  ThisParamMustBeFirst:\n    \"The `this` parameter must be the first function parameter.\",\n  ThisParamNoDefault: \"The `this` parameter may not have a default value.\",\n  TypeBeforeInitializer:\n    \"Type annotations must come before default assignments, e.g. instead of `age = 25: number` use `age: number = 25`.\",\n  TypeCastInPattern:\n    \"The type cast expression is expected to be wrapped with parenthesis.\",\n  UnexpectedExplicitInexactInObject:\n    \"Explicit inexact syntax must appear at the end of an inexact object.\",\n  UnexpectedReservedType: ({ reservedType }: { reservedType: string }) =>\n    `Unexpected reserved type ${reservedType}.`,\n  UnexpectedReservedUnderscore:\n    \"`_` is only allowed as a type argument to call or new.\",\n  UnexpectedSpaceBetweenModuloChecks:\n    \"Spaces between `%` and `checks` are not allowed here.\",\n  UnexpectedSpreadType:\n    \"Spread operator cannot appear in class or interface definitions.\",\n  UnexpectedSubtractionOperand:\n    'Unexpected token, expected \"number\" or \"bigint\".',\n  UnexpectedTokenAfterTypeParameter:\n    \"Expected an arrow function after this type parameter declaration.\",\n  UnexpectedTypeParameterBeforeAsyncArrowFunction:\n    \"Type parameters must come after the async keyword, e.g. instead of `<T> async () => {}`, use `async <T>() => {}`.\",\n  UnsupportedDeclareExportKind: ({\n    unsupportedExportKind,\n    suggestion,\n  }: {\n    unsupportedExportKind: string;\n    suggestion: string;\n  }) =>\n    `\\`declare export ${unsupportedExportKind}\\` is not supported. Use \\`${suggestion}\\` instead.`,\n  UnsupportedStatementInDeclareModule:\n    \"Only declares and type imports are allowed inside declare module.\",\n  UnterminatedFlowComment: \"Unterminated flow-comment.\",\n});\n/* eslint-disable sort-keys */\n\nfunction isEsModuleType(bodyElement: N.Node): boolean {\n  return (\n    bodyElement.type === \"DeclareExportAllDeclaration\" ||\n    (bodyElement.type === \"DeclareExportDeclaration\" &&\n      (!bodyElement.declaration ||\n        (bodyElement.declaration.type !== \"TypeAlias\" &&\n          bodyElement.declaration.type !== \"InterfaceDeclaration\")))\n  );\n}\n\nfunction hasTypeImportKind(node: N.Node): boolean {\n  return node.importKind === \"type\" || node.importKind === \"typeof\";\n}\n\nfunction isMaybeDefaultImport(type: TokenType): boolean {\n  return tokenIsKeywordOrIdentifier(type) && type !== tt._from;\n}\n\nconst exportSuggestions = {\n  const: \"declare export var\",\n  let: \"declare export var\",\n  type: \"export type\",\n  interface: \"export interface\",\n};\n\n// Like Array#filter, but returns a tuple [ acceptedElements, discardedElements ]\nfunction partition<T>(\n  list: T[],\n  test: (c: T, b: number, a: T[]) => boolean | undefined | null,\n): [T[], T[]] {\n  const list1: T[] = [];\n  const list2: T[] = [];\n  for (let i = 0; i < list.length; i++) {\n    (test(list[i], i, list) ? list1 : list2).push(list[i]);\n  }\n  return [list1, list2];\n}\n\nconst FLOW_PRAGMA_REGEX = /\\*?\\s*@((?:no)?flow)\\b/;\n\n// Flow enums types\ntype EnumExplicitType = null | \"boolean\" | \"number\" | \"string\" | \"symbol\";\n\ntype EnumContext = {\n  enumName: string;\n  explicitType: EnumExplicitType;\n  memberName: string;\n};\n\ntype EnumMemberInit =\n  | {\n      type: \"number\";\n      loc: Position;\n      value: N.Node;\n    }\n  | {\n      type: \"string\";\n      loc: Position;\n      value: N.Node;\n    }\n  | {\n      type: \"boolean\";\n      loc: Position;\n      value: N.Node;\n    }\n  | {\n      type: \"invalid\";\n      loc: Position;\n    }\n  | {\n      type: \"none\";\n      loc: Position;\n    };\n\nexport default (superClass: {\n  new (...args: any): Parser;\n}): {\n  new (...args: any): Parser;\n} =>\n  class extends superClass {\n    // The value of the @flow/@noflow pragma. Initially undefined, transitions\n    // to \"@flow\" or \"@noflow\" if we see a pragma. Transitions to null if we are\n    // past the initial comment.\n    flowPragma: void | null | \"flow\" | \"noflow\" = undefined;\n\n    getScopeHandler(): {\n      new (...args: any): FlowScopeHandler;\n    } {\n      return FlowScopeHandler;\n    }\n\n    shouldParseTypes(): boolean {\n      return this.getPluginOption(\"flow\", \"all\") || this.flowPragma === \"flow\";\n    }\n\n    shouldParseEnums(): boolean {\n      return !!this.getPluginOption(\"flow\", \"enums\");\n    }\n\n    finishToken(type: TokenType, val: any): void {\n      if (\n        type !== tt.string &&\n        type !== tt.semi &&\n        type !== tt.interpreterDirective\n      ) {\n        if (this.flowPragma === undefined) {\n          this.flowPragma = null;\n        }\n      }\n      return super.finishToken(type, val);\n    }\n\n    addComment(comment: N.Comment): void {\n      if (this.flowPragma === undefined) {\n        // Try to parse a flow pragma.\n        const matches = FLOW_PRAGMA_REGEX.exec(comment.value);\n        if (!matches) {\n          // do nothing\n        } else if (matches[1] === \"flow\") {\n          this.flowPragma = \"flow\";\n        } else if (matches[1] === \"noflow\") {\n          this.flowPragma = \"noflow\";\n        } else {\n          throw new Error(\"Unexpected flow pragma\");\n        }\n      }\n      return super.addComment(comment);\n    }\n\n    flowParseTypeInitialiser(tok?: TokenType): N.FlowType {\n      const oldInType = this.state.inType;\n      this.state.inType = true;\n      this.expect(tok || tt.colon);\n\n      const type = this.flowParseType();\n      this.state.inType = oldInType;\n      return type;\n    }\n\n    flowParsePredicate(): N.FlowPredicate {\n      const node = this.startNode();\n      const moduloLoc = this.state.startLoc;\n      this.next(); // eat `%`\n      this.expectContextual(tt._checks);\n      // Force '%' and 'checks' to be adjacent\n      if (this.state.lastTokStart > moduloLoc.index + 1) {\n        this.raise(FlowErrors.UnexpectedSpaceBetweenModuloChecks, {\n          at: moduloLoc,\n        });\n      }\n      if (this.eat(tt.parenL)) {\n        node.value = super.parseExpression();\n        this.expect(tt.parenR);\n        return this.finishNode(node, \"DeclaredPredicate\");\n      } else {\n        return this.finishNode(node, \"InferredPredicate\");\n      }\n    }\n\n    flowParseTypeAndPredicateInitialiser(): [\n      N.FlowType | undefined | null,\n      N.FlowPredicate | undefined | null,\n    ] {\n      const oldInType = this.state.inType;\n      this.state.inType = true;\n      this.expect(tt.colon);\n      let type = null;\n      let predicate = null;\n      if (this.match(tt.modulo)) {\n        this.state.inType = oldInType;\n        predicate = this.flowParsePredicate();\n      } else {\n        type = this.flowParseType();\n        this.state.inType = oldInType;\n        if (this.match(tt.modulo)) {\n          predicate = this.flowParsePredicate();\n        }\n      }\n      return [type, predicate];\n    }\n\n    flowParseDeclareClass(\n      node: Undone<N.FlowDeclareClass>,\n    ): N.FlowDeclareClass {\n      this.next();\n      this.flowParseInterfaceish(node, /*isClass*/ true);\n      return this.finishNode(node, \"DeclareClass\");\n    }\n\n    flowParseDeclareFunction(\n      node: Undone<N.FlowDeclareFunction>,\n    ): N.FlowDeclareFunction {\n      this.next();\n\n      const id = (node.id = this.parseIdentifier());\n\n      const typeNode = this.startNode();\n      const typeContainer = this.startNode<N.TypeAnnotation>();\n\n      if (this.match(tt.lt)) {\n        typeNode.typeParameters = this.flowParseTypeParameterDeclaration();\n      } else {\n        typeNode.typeParameters = null;\n      }\n\n      this.expect(tt.parenL);\n      const tmp = this.flowParseFunctionTypeParams();\n      typeNode.params = tmp.params;\n      typeNode.rest = tmp.rest;\n      typeNode.this = tmp._this;\n      this.expect(tt.parenR);\n\n      [typeNode.returnType, node.predicate] =\n        this.flowParseTypeAndPredicateInitialiser();\n\n      typeContainer.typeAnnotation = this.finishNode(\n        typeNode,\n        \"FunctionTypeAnnotation\",\n      );\n\n      id.typeAnnotation = this.finishNode(typeContainer, \"TypeAnnotation\");\n\n      this.resetEndLocation(id);\n      this.semicolon();\n\n      this.scope.declareName(\n        node.id.name,\n        BIND_FLOW_DECLARE_FN,\n        node.id.loc.start,\n      );\n\n      return this.finishNode(node, \"DeclareFunction\");\n    }\n\n    flowParseDeclare(\n      node: Undone<N.FlowDeclare>,\n      insideModule?: boolean,\n    ): N.FlowDeclare {\n      if (this.match(tt._class)) {\n        return this.flowParseDeclareClass(node);\n      } else if (this.match(tt._function)) {\n        return this.flowParseDeclareFunction(node);\n      } else if (this.match(tt._var)) {\n        return this.flowParseDeclareVariable(node);\n      } else if (this.eatContextual(tt._module)) {\n        if (this.match(tt.dot)) {\n          return this.flowParseDeclareModuleExports(node);\n        } else {\n          if (insideModule) {\n            this.raise(FlowErrors.NestedDeclareModule, {\n              at: this.state.lastTokStartLoc,\n            });\n          }\n          return this.flowParseDeclareModule(node);\n        }\n      } else if (this.isContextual(tt._type)) {\n        return this.flowParseDeclareTypeAlias(node);\n      } else if (this.isContextual(tt._opaque)) {\n        return this.flowParseDeclareOpaqueType(node);\n      } else if (this.isContextual(tt._interface)) {\n        return this.flowParseDeclareInterface(node);\n      } else if (this.match(tt._export)) {\n        return this.flowParseDeclareExportDeclaration(node, insideModule);\n      } else {\n        throw this.unexpected();\n      }\n    }\n\n    flowParseDeclareVariable(\n      node: Undone<N.FlowDeclareVariable>,\n    ): N.FlowDeclareVariable {\n      this.next();\n      node.id = this.flowParseTypeAnnotatableIdentifier(\n        /*allowPrimitiveOverride*/ true,\n      );\n      this.scope.declareName(node.id.name, BIND_VAR, node.id.loc.start);\n      this.semicolon();\n      return this.finishNode(node, \"DeclareVariable\");\n    }\n\n    flowParseDeclareModule(\n      node: Undone<N.FlowDeclareModule>,\n    ): N.FlowDeclareModule {\n      this.scope.enter(SCOPE_OTHER);\n\n      if (this.match(tt.string)) {\n        node.id = super.parseExprAtom();\n      } else {\n        node.id = this.parseIdentifier();\n      }\n\n      const bodyNode = (node.body = this.startNode());\n      // @ts-expect-error refine typings\n      const body = (bodyNode.body = []);\n      this.expect(tt.braceL);\n      while (!this.match(tt.braceR)) {\n        let bodyNode = this.startNode<N.ImportDeclaration>();\n\n        if (this.match(tt._import)) {\n          this.next();\n          if (!this.isContextual(tt._type) && !this.match(tt._typeof)) {\n            this.raise(FlowErrors.InvalidNonTypeImportInDeclareModule, {\n              at: this.state.lastTokStartLoc,\n            });\n          }\n          super.parseImport(bodyNode);\n        } else {\n          this.expectContextual(\n            tt._declare,\n            FlowErrors.UnsupportedStatementInDeclareModule,\n          );\n          // @ts-expect-error refine typings\n          bodyNode = this.flowParseDeclare(bodyNode, true);\n        }\n\n        body.push(bodyNode);\n      }\n\n      this.scope.exit();\n\n      this.expect(tt.braceR);\n\n      this.finishNode(bodyNode, \"BlockStatement\");\n\n      let kind: \"CommonJS\" | \"ES\" | null = null;\n      let hasModuleExport = false;\n      body.forEach(bodyElement => {\n        if (isEsModuleType(bodyElement)) {\n          if (kind === \"CommonJS\") {\n            this.raise(FlowErrors.AmbiguousDeclareModuleKind, {\n              at: bodyElement,\n            });\n          }\n          kind = \"ES\";\n        } else if (bodyElement.type === \"DeclareModuleExports\") {\n          if (hasModuleExport) {\n            this.raise(FlowErrors.DuplicateDeclareModuleExports, {\n              at: bodyElement,\n            });\n          }\n          if (kind === \"ES\") {\n            this.raise(FlowErrors.AmbiguousDeclareModuleKind, {\n              at: bodyElement,\n            });\n          }\n          kind = \"CommonJS\";\n          hasModuleExport = true;\n        }\n      });\n\n      node.kind = kind || \"CommonJS\";\n      return this.finishNode(node, \"DeclareModule\");\n    }\n\n    flowParseDeclareExportDeclaration(\n      node: Undone<N.FlowDeclareExportDeclaration>,\n      insideModule?: boolean | null,\n    ): N.FlowDeclareExportDeclaration {\n      this.expect(tt._export);\n\n      if (this.eat(tt._default)) {\n        if (this.match(tt._function) || this.match(tt._class)) {\n          // declare export default class ...\n          // declare export default function ...\n          node.declaration = this.flowParseDeclare(this.startNode());\n        } else {\n          // declare export default [type];\n          node.declaration = this.flowParseType();\n          this.semicolon();\n        }\n        node.default = true;\n\n        return this.finishNode(node, \"DeclareExportDeclaration\");\n      } else {\n        if (\n          this.match(tt._const) ||\n          this.isLet() ||\n          ((this.isContextual(tt._type) || this.isContextual(tt._interface)) &&\n            !insideModule)\n        ) {\n          const label = this.state.value as\n            | \"const\"\n            | \"let\"\n            | \"type\"\n            | \"interface\";\n          throw this.raise(FlowErrors.UnsupportedDeclareExportKind, {\n            at: this.state.startLoc,\n            unsupportedExportKind: label,\n            suggestion: exportSuggestions[label],\n          });\n        }\n\n        if (\n          this.match(tt._var) || // declare export var ...\n          this.match(tt._function) || // declare export function ...\n          this.match(tt._class) || // declare export class ...\n          this.isContextual(tt._opaque) // declare export opaque ..\n        ) {\n          node.declaration = this.flowParseDeclare(this.startNode());\n          node.default = false;\n\n          return this.finishNode(node, \"DeclareExportDeclaration\");\n        } else if (\n          this.match(tt.star) || // declare export * from ''\n          this.match(tt.braceL) || // declare export {} ...\n          this.isContextual(tt._interface) || // declare export interface ...\n          this.isContextual(tt._type) || // declare export type ...\n          this.isContextual(tt._opaque) // declare export opaque type ...\n        ) {\n          node = this.parseExport(\n            node as Undone<N.ExportNamedDeclaration | N.ExportAllDeclaration>,\n          );\n          if (node.type === \"ExportNamedDeclaration\") {\n            node.type = \"ExportDeclaration\";\n            node.default = false;\n            delete node.exportKind;\n          }\n\n          node.type = \"Declare\" + node.type;\n\n          return node as N.Node;\n        }\n      }\n\n      throw this.unexpected();\n    }\n\n    flowParseDeclareModuleExports(\n      node: Undone<N.FlowDeclareModuleExports>,\n    ): N.FlowDeclareModuleExports {\n      this.next();\n      this.expectContextual(tt._exports);\n      node.typeAnnotation = this.flowParseTypeAnnotation();\n      this.semicolon();\n\n      return this.finishNode(node, \"DeclareModuleExports\");\n    }\n\n    flowParseDeclareTypeAlias(\n      node: Undone<N.FlowDeclareTypeAlias>,\n    ): N.FlowDeclareTypeAlias {\n      this.next();\n      const finished = this.flowParseTypeAlias(node);\n      // Don't do finishNode as we don't want to process comments twice\n      finished.type = \"DeclareTypeAlias\";\n      return finished;\n    }\n\n    flowParseDeclareOpaqueType(\n      node: Undone<N.FlowDeclareOpaqueType>,\n    ): N.FlowDeclareOpaqueType {\n      this.next();\n      const finished = this.flowParseOpaqueType(node, true);\n      // Don't do finishNode as we don't want to process comments twice\n      finished.type = \"DeclareOpaqueType\";\n      return finished;\n    }\n\n    flowParseDeclareInterface(\n      node: Undone<N.FlowDeclareInterface>,\n    ): N.FlowDeclareInterface {\n      this.next();\n      this.flowParseInterfaceish(node);\n      return this.finishNode(node, \"DeclareInterface\");\n    }\n\n    // Interfaces\n\n    flowParseInterfaceish(\n      node: Undone<N.FlowDeclare>,\n      isClass: boolean = false,\n    ): void {\n      node.id = this.flowParseRestrictedIdentifier(\n        /* liberal */ !isClass,\n        /* declaration */ true,\n      );\n\n      this.scope.declareName(\n        node.id.name,\n        isClass ? BIND_FUNCTION : BIND_LEXICAL,\n        node.id.loc.start,\n      );\n\n      if (this.match(tt.lt)) {\n        node.typeParameters = this.flowParseTypeParameterDeclaration();\n      } else {\n        node.typeParameters = null;\n      }\n\n      node.extends = [];\n      node.implements = [];\n      node.mixins = [];\n\n      if (this.eat(tt._extends)) {\n        do {\n          node.extends.push(this.flowParseInterfaceExtends());\n        } while (!isClass && this.eat(tt.comma));\n      }\n\n      if (this.isContextual(tt._mixins)) {\n        this.next();\n        do {\n          node.mixins.push(this.flowParseInterfaceExtends());\n        } while (this.eat(tt.comma));\n      }\n\n      if (this.isContextual(tt._implements)) {\n        this.next();\n        do {\n          node.implements.push(this.flowParseInterfaceExtends());\n        } while (this.eat(tt.comma));\n      }\n\n      node.body = this.flowParseObjectType({\n        allowStatic: isClass,\n        allowExact: false,\n        allowSpread: false,\n        allowProto: isClass,\n        allowInexact: false,\n      });\n    }\n\n    flowParseInterfaceExtends(): N.FlowInterfaceExtends {\n      const node = this.startNode();\n\n      node.id = this.flowParseQualifiedTypeIdentifier();\n      if (this.match(tt.lt)) {\n        node.typeParameters = this.flowParseTypeParameterInstantiation();\n      } else {\n        node.typeParameters = null;\n      }\n\n      return this.finishNode(node, \"InterfaceExtends\");\n    }\n\n    flowParseInterface(node: Undone<N.FlowInterface>): N.FlowInterface {\n      this.flowParseInterfaceish(node);\n      return this.finishNode(node, \"InterfaceDeclaration\");\n    }\n\n    checkNotUnderscore(word: string) {\n      if (word === \"_\") {\n        this.raise(FlowErrors.UnexpectedReservedUnderscore, {\n          at: this.state.startLoc,\n        });\n      }\n    }\n\n    checkReservedType(word: string, startLoc: Position, declaration?: boolean) {\n      if (!reservedTypes.has(word)) return;\n\n      this.raise(\n        declaration\n          ? FlowErrors.AssignReservedType\n          : FlowErrors.UnexpectedReservedType,\n        {\n          at: startLoc,\n          reservedType: word,\n        },\n      );\n    }\n\n    flowParseRestrictedIdentifier(\n      liberal?: boolean,\n      declaration?: boolean,\n    ): N.Identifier {\n      this.checkReservedType(\n        this.state.value,\n        this.state.startLoc,\n        declaration,\n      );\n      return this.parseIdentifier(liberal);\n    }\n\n    // Type aliases\n\n    flowParseTypeAlias(node: Undone<N.FlowTypeAlias>): N.FlowTypeAlias {\n      node.id = this.flowParseRestrictedIdentifier(\n        /* liberal */ false,\n        /* declaration */ true,\n      );\n      this.scope.declareName(node.id.name, BIND_LEXICAL, node.id.loc.start);\n\n      if (this.match(tt.lt)) {\n        node.typeParameters = this.flowParseTypeParameterDeclaration();\n      } else {\n        node.typeParameters = null;\n      }\n\n      node.right = this.flowParseTypeInitialiser(tt.eq);\n      this.semicolon();\n\n      return this.finishNode(node, \"TypeAlias\");\n    }\n\n    flowParseOpaqueType(\n      node: Undone<N.FlowOpaqueType>,\n      declare: boolean,\n    ): N.FlowOpaqueType {\n      this.expectContextual(tt._type);\n      node.id = this.flowParseRestrictedIdentifier(\n        /* liberal */ true,\n        /* declaration */ true,\n      );\n      this.scope.declareName(node.id.name, BIND_LEXICAL, node.id.loc.start);\n\n      if (this.match(tt.lt)) {\n        node.typeParameters = this.flowParseTypeParameterDeclaration();\n      } else {\n        node.typeParameters = null;\n      }\n\n      // Parse the supertype\n      node.supertype = null;\n      if (this.match(tt.colon)) {\n        node.supertype = this.flowParseTypeInitialiser(tt.colon);\n      }\n\n      node.impltype = null;\n      if (!declare) {\n        node.impltype = this.flowParseTypeInitialiser(tt.eq);\n      }\n      this.semicolon();\n\n      return this.finishNode(node, \"OpaqueType\");\n    }\n\n    // Type annotations\n\n    flowParseTypeParameter(requireDefault: boolean = false): N.TypeParameter {\n      const nodeStartLoc = this.state.startLoc;\n\n      const node = this.startNode<N.TypeParameter>();\n\n      const variance = this.flowParseVariance();\n\n      const ident = this.flowParseTypeAnnotatableIdentifier();\n      node.name = ident.name;\n      // @ts-expect-error migrate to Babel types\n      node.variance = variance;\n      // @ts-expect-error migrate to Babel types\n      node.bound = ident.typeAnnotation;\n\n      if (this.match(tt.eq)) {\n        this.eat(tt.eq);\n        // @ts-expect-error migrate to Babel types\n        node.default = this.flowParseType();\n      } else {\n        if (requireDefault) {\n          this.raise(FlowErrors.MissingTypeParamDefault, { at: nodeStartLoc });\n        }\n      }\n\n      return this.finishNode(node, \"TypeParameter\");\n    }\n\n    flowParseTypeParameterDeclaration(): N.TypeParameterDeclaration {\n      const oldInType = this.state.inType;\n      const node = this.startNode<N.TypeParameterDeclaration>();\n      node.params = [];\n\n      this.state.inType = true;\n\n      // istanbul ignore else: this condition is already checked at all call sites\n      if (this.match(tt.lt) || this.match(tt.jsxTagStart)) {\n        this.next();\n      } else {\n        this.unexpected();\n      }\n\n      let defaultRequired = false;\n\n      do {\n        const typeParameter = this.flowParseTypeParameter(defaultRequired);\n\n        node.params.push(typeParameter);\n\n        if (typeParameter.default) {\n          defaultRequired = true;\n        }\n\n        if (!this.match(tt.gt)) {\n          this.expect(tt.comma);\n        }\n      } while (!this.match(tt.gt));\n      this.expect(tt.gt);\n\n      this.state.inType = oldInType;\n\n      return this.finishNode(node, \"TypeParameterDeclaration\");\n    }\n\n    flowParseTypeParameterInstantiation(): N.TypeParameterInstantiation {\n      const node = this.startNode<N.TypeParameterInstantiation>();\n      const oldInType = this.state.inType;\n      node.params = [];\n\n      this.state.inType = true;\n\n      this.expect(tt.lt);\n      const oldNoAnonFunctionType = this.state.noAnonFunctionType;\n      this.state.noAnonFunctionType = false;\n      while (!this.match(tt.gt)) {\n        node.params.push(this.flowParseType());\n        if (!this.match(tt.gt)) {\n          this.expect(tt.comma);\n        }\n      }\n      this.state.noAnonFunctionType = oldNoAnonFunctionType;\n      this.expect(tt.gt);\n\n      this.state.inType = oldInType;\n\n      return this.finishNode(node, \"TypeParameterInstantiation\");\n    }\n\n    flowParseTypeParameterInstantiationCallOrNew(): N.TypeParameterInstantiation {\n      const node = this.startNode<N.TypeParameterInstantiation>();\n      const oldInType = this.state.inType;\n      node.params = [];\n\n      this.state.inType = true;\n\n      this.expect(tt.lt);\n      while (!this.match(tt.gt)) {\n        node.params.push(this.flowParseTypeOrImplicitInstantiation());\n        if (!this.match(tt.gt)) {\n          this.expect(tt.comma);\n        }\n      }\n      this.expect(tt.gt);\n\n      this.state.inType = oldInType;\n\n      return this.finishNode(node, \"TypeParameterInstantiation\");\n    }\n\n    flowParseInterfaceType(): N.FlowInterfaceType {\n      const node = this.startNode<N.FlowInterfaceType>();\n      this.expectContextual(tt._interface);\n\n      node.extends = [];\n      if (this.eat(tt._extends)) {\n        do {\n          node.extends.push(this.flowParseInterfaceExtends());\n        } while (this.eat(tt.comma));\n      }\n\n      node.body = this.flowParseObjectType({\n        allowStatic: false,\n        allowExact: false,\n        allowSpread: false,\n        allowProto: false,\n        allowInexact: false,\n      });\n\n      return this.finishNode(node, \"InterfaceTypeAnnotation\");\n    }\n\n    flowParseObjectPropertyKey(): N.Expression {\n      return this.match(tt.num) || this.match(tt.string)\n        ? super.parseExprAtom()\n        : this.parseIdentifier(true);\n    }\n\n    flowParseObjectTypeIndexer(\n      node: Undone<N.FlowObjectTypeIndexer>,\n      isStatic: boolean,\n      variance?: N.FlowVariance | null,\n    ): N.FlowObjectTypeIndexer {\n      node.static = isStatic;\n\n      // Note: bracketL has already been consumed\n      if (this.lookahead().type === tt.colon) {\n        node.id = this.flowParseObjectPropertyKey();\n        node.key = this.flowParseTypeInitialiser();\n      } else {\n        node.id = null;\n        node.key = this.flowParseType();\n      }\n      this.expect(tt.bracketR);\n      node.value = this.flowParseTypeInitialiser();\n      node.variance = variance;\n\n      return this.finishNode(node, \"ObjectTypeIndexer\");\n    }\n\n    flowParseObjectTypeInternalSlot(\n      node: Undone<N.FlowObjectTypeInternalSlot>,\n      isStatic: boolean,\n    ): N.FlowObjectTypeInternalSlot {\n      node.static = isStatic;\n      // Note: both bracketL have already been consumed\n      node.id = this.flowParseObjectPropertyKey();\n      this.expect(tt.bracketR);\n      this.expect(tt.bracketR);\n      if (this.match(tt.lt) || this.match(tt.parenL)) {\n        node.method = true;\n        node.optional = false;\n        node.value = this.flowParseObjectTypeMethodish(\n          this.startNodeAt(node.start, node.loc.start),\n        );\n      } else {\n        node.method = false;\n        if (this.eat(tt.question)) {\n          node.optional = true;\n        }\n        node.value = this.flowParseTypeInitialiser();\n      }\n      return this.finishNode(node, \"ObjectTypeInternalSlot\");\n    }\n\n    flowParseObjectTypeMethodish(\n      node: Undone<N.FlowFunctionTypeAnnotation>,\n    ): N.FlowFunctionTypeAnnotation {\n      node.params = [];\n      node.rest = null;\n      node.typeParameters = null;\n      node.this = null;\n\n      if (this.match(tt.lt)) {\n        node.typeParameters = this.flowParseTypeParameterDeclaration();\n      }\n\n      this.expect(tt.parenL);\n      if (this.match(tt._this)) {\n        node.this = this.flowParseFunctionTypeParam(/* first */ true);\n        // match Flow parser behavior\n        node.this.name = null;\n        if (!this.match(tt.parenR)) {\n          this.expect(tt.comma);\n        }\n      }\n      while (!this.match(tt.parenR) && !this.match(tt.ellipsis)) {\n        node.params.push(this.flowParseFunctionTypeParam(false));\n        if (!this.match(tt.parenR)) {\n          this.expect(tt.comma);\n        }\n      }\n\n      if (this.eat(tt.ellipsis)) {\n        node.rest = this.flowParseFunctionTypeParam(false);\n      }\n      this.expect(tt.parenR);\n      node.returnType = this.flowParseTypeInitialiser();\n\n      return this.finishNode(node, \"FunctionTypeAnnotation\");\n    }\n\n    flowParseObjectTypeCallProperty(\n      node: Undone<N.FlowObjectTypeCallProperty>,\n      isStatic: boolean,\n    ): N.FlowObjectTypeCallProperty {\n      const valueNode = this.startNode();\n      node.static = isStatic;\n      node.value = this.flowParseObjectTypeMethodish(valueNode);\n      return this.finishNode(node, \"ObjectTypeCallProperty\");\n    }\n\n    flowParseObjectType({\n      allowStatic,\n      allowExact,\n      allowSpread,\n      allowProto,\n      allowInexact,\n    }: {\n      allowStatic: boolean;\n      allowExact: boolean;\n      allowSpread: boolean;\n      allowProto: boolean;\n      allowInexact: boolean;\n    }): N.FlowObjectTypeAnnotation {\n      const oldInType = this.state.inType;\n      this.state.inType = true;\n\n      const nodeStart = this.startNode();\n\n      nodeStart.callProperties = [];\n      nodeStart.properties = [];\n      nodeStart.indexers = [];\n      nodeStart.internalSlots = [];\n\n      let endDelim;\n      let exact;\n      let inexact = false;\n      if (allowExact && this.match(tt.braceBarL)) {\n        this.expect(tt.braceBarL);\n        endDelim = tt.braceBarR;\n        exact = true;\n      } else {\n        this.expect(tt.braceL);\n        endDelim = tt.braceR;\n        exact = false;\n      }\n\n      nodeStart.exact = exact;\n\n      while (!this.match(endDelim)) {\n        let isStatic = false;\n        let protoStartLoc: Position | undefined | null = null;\n        let inexactStartLoc: Position | undefined | null = null;\n        const node = this.startNode();\n\n        if (allowProto && this.isContextual(tt._proto)) {\n          const lookahead = this.lookahead();\n\n          if (lookahead.type !== tt.colon && lookahead.type !== tt.question) {\n            this.next();\n            protoStartLoc = this.state.startLoc;\n            allowStatic = false;\n          }\n        }\n\n        if (allowStatic && this.isContextual(tt._static)) {\n          const lookahead = this.lookahead();\n\n          // static is a valid identifier name\n          if (lookahead.type !== tt.colon && lookahead.type !== tt.question) {\n            this.next();\n            isStatic = true;\n          }\n        }\n\n        const variance = this.flowParseVariance();\n\n        if (this.eat(tt.bracketL)) {\n          if (protoStartLoc != null) {\n            this.unexpected(protoStartLoc);\n          }\n          if (this.eat(tt.bracketL)) {\n            if (variance) {\n              this.unexpected(variance.loc.start);\n            }\n            nodeStart.internalSlots.push(\n              this.flowParseObjectTypeInternalSlot(node, isStatic),\n            );\n          } else {\n            nodeStart.indexers.push(\n              this.flowParseObjectTypeIndexer(node, isStatic, variance),\n            );\n          }\n        } else if (this.match(tt.parenL) || this.match(tt.lt)) {\n          if (protoStartLoc != null) {\n            this.unexpected(protoStartLoc);\n          }\n          if (variance) {\n            this.unexpected(variance.loc.start);\n          }\n          nodeStart.callProperties.push(\n            this.flowParseObjectTypeCallProperty(node, isStatic),\n          );\n        } else {\n          let kind = \"init\";\n\n          if (this.isContextual(tt._get) || this.isContextual(tt._set)) {\n            const lookahead = this.lookahead();\n            if (tokenIsLiteralPropertyName(lookahead.type)) {\n              kind = this.state.value;\n              this.next();\n            }\n          }\n\n          const propOrInexact = this.flowParseObjectTypeProperty(\n            node,\n            isStatic,\n            protoStartLoc,\n            variance,\n            kind,\n            allowSpread,\n            allowInexact ?? !exact,\n          );\n\n          if (propOrInexact === null) {\n            inexact = true;\n            inexactStartLoc = this.state.lastTokStartLoc;\n          } else {\n            nodeStart.properties.push(propOrInexact);\n          }\n        }\n\n        this.flowObjectTypeSemicolon();\n\n        if (\n          inexactStartLoc &&\n          !this.match(tt.braceR) &&\n          !this.match(tt.braceBarR)\n        ) {\n          this.raise(FlowErrors.UnexpectedExplicitInexactInObject, {\n            at: inexactStartLoc,\n          });\n        }\n      }\n\n      this.expect(endDelim);\n\n      /* The inexact flag should only be added on ObjectTypeAnnotations that\n       * are not the body of an interface, declare interface, or declare class.\n       * Since spreads are only allowed in object types, checking that is\n       * sufficient here.\n       */\n      if (allowSpread) {\n        nodeStart.inexact = inexact;\n      }\n\n      const out = this.finishNode(nodeStart, \"ObjectTypeAnnotation\");\n\n      this.state.inType = oldInType;\n\n      return out;\n    }\n\n    flowParseObjectTypeProperty(\n      node: Undone<N.FlowObjectTypeProperty | N.FlowObjectTypeSpreadProperty>,\n      isStatic: boolean,\n      protoStartLoc: Position | undefined | null,\n      variance: N.FlowVariance | undefined | null,\n      kind: string,\n      allowSpread: boolean,\n      allowInexact: boolean,\n    ): N.FlowObjectTypeProperty | N.FlowObjectTypeSpreadProperty | null {\n      if (this.eat(tt.ellipsis)) {\n        const isInexactToken =\n          this.match(tt.comma) ||\n          this.match(tt.semi) ||\n          this.match(tt.braceR) ||\n          this.match(tt.braceBarR);\n\n        if (isInexactToken) {\n          if (!allowSpread) {\n            this.raise(FlowErrors.InexactInsideNonObject, {\n              at: this.state.lastTokStartLoc,\n            });\n          } else if (!allowInexact) {\n            this.raise(FlowErrors.InexactInsideExact, {\n              at: this.state.lastTokStartLoc,\n            });\n          }\n          if (variance) {\n            this.raise(FlowErrors.InexactVariance, { at: variance });\n          }\n\n          return null;\n        }\n\n        if (!allowSpread) {\n          this.raise(FlowErrors.UnexpectedSpreadType, {\n            at: this.state.lastTokStartLoc,\n          });\n        }\n        if (protoStartLoc != null) {\n          this.unexpected(protoStartLoc);\n        }\n        if (variance) {\n          this.raise(FlowErrors.SpreadVariance, { at: variance });\n        }\n\n        node.argument = this.flowParseType();\n        return this.finishNode(node, \"ObjectTypeSpreadProperty\");\n      } else {\n        node.key = this.flowParseObjectPropertyKey();\n        node.static = isStatic;\n        node.proto = protoStartLoc != null;\n        node.kind = kind;\n\n        let optional = false;\n        if (this.match(tt.lt) || this.match(tt.parenL)) {\n          // This is a method property\n          node.method = true;\n\n          if (protoStartLoc != null) {\n            this.unexpected(protoStartLoc);\n          }\n          if (variance) {\n            this.unexpected(variance.loc.start);\n          }\n\n          node.value = this.flowParseObjectTypeMethodish(\n            this.startNodeAt(node.start, node.loc.start),\n          );\n          if (kind === \"get\" || kind === \"set\") {\n            this.flowCheckGetterSetterParams(node);\n          }\n          /** Declared classes/interfaces do not allow spread */\n          if (\n            !allowSpread &&\n            node.key.name === \"constructor\" &&\n            node.value.this\n          ) {\n            this.raise(FlowErrors.ThisParamBannedInConstructor, {\n              at: node.value.this,\n            });\n          }\n        } else {\n          if (kind !== \"init\") this.unexpected();\n\n          node.method = false;\n\n          if (this.eat(tt.question)) {\n            optional = true;\n          }\n          node.value = this.flowParseTypeInitialiser();\n          node.variance = variance;\n        }\n\n        node.optional = optional;\n\n        return this.finishNode(node, \"ObjectTypeProperty\");\n      }\n    }\n\n    // This is similar to checkGetterSetterParams, but as\n    // @babel/parser uses non estree properties we cannot reuse it here\n    flowCheckGetterSetterParams(\n      property: Undone<\n        N.FlowObjectTypeProperty | N.FlowObjectTypeSpreadProperty\n      >,\n    ): void {\n      const paramCount = property.kind === \"get\" ? 0 : 1;\n      const length =\n        property.value.params.length + (property.value.rest ? 1 : 0);\n\n      if (property.value.this) {\n        this.raise(\n          property.kind === \"get\"\n            ? FlowErrors.GetterMayNotHaveThisParam\n            : FlowErrors.SetterMayNotHaveThisParam,\n          { at: property.value.this },\n        );\n      }\n\n      if (length !== paramCount) {\n        this.raise(\n          property.kind === \"get\"\n            ? Errors.BadGetterArity\n            : Errors.BadSetterArity,\n          { at: property },\n        );\n      }\n\n      if (property.kind === \"set\" && property.value.rest) {\n        this.raise(Errors.BadSetterRestParameter, { at: property });\n      }\n    }\n\n    flowObjectTypeSemicolon(): void {\n      if (\n        !this.eat(tt.semi) &&\n        !this.eat(tt.comma) &&\n        !this.match(tt.braceR) &&\n        !this.match(tt.braceBarR)\n      ) {\n        this.unexpected();\n      }\n    }\n\n    flowParseQualifiedTypeIdentifier(\n      startPos?: number,\n      startLoc?: Position,\n      id?: N.Identifier,\n    ): N.FlowQualifiedTypeIdentifier {\n      startPos = startPos || this.state.start;\n      startLoc = startLoc || this.state.startLoc;\n      let node: N.Identifier | N.FlowQualifiedTypeIdentifier =\n        id || this.flowParseRestrictedIdentifier(true);\n\n      while (this.eat(tt.dot)) {\n        const node2 = this.startNodeAt<N.FlowQualifiedTypeIdentifier>(\n          startPos,\n          startLoc,\n        );\n        node2.qualification = node;\n        node2.id = this.flowParseRestrictedIdentifier(true);\n        node = this.finishNode(node2, \"QualifiedTypeIdentifier\");\n      }\n\n      return node;\n    }\n\n    flowParseGenericType(\n      startPos: number,\n      startLoc: Position,\n      id: N.Identifier,\n    ): N.FlowGenericTypeAnnotation {\n      const node = this.startNodeAt(startPos, startLoc);\n\n      node.typeParameters = null;\n      node.id = this.flowParseQualifiedTypeIdentifier(startPos, startLoc, id);\n\n      if (this.match(tt.lt)) {\n        node.typeParameters = this.flowParseTypeParameterInstantiation();\n      }\n\n      return this.finishNode(node, \"GenericTypeAnnotation\");\n    }\n\n    flowParseTypeofType(): N.FlowTypeofTypeAnnotation {\n      const node = this.startNode();\n      this.expect(tt._typeof);\n      node.argument = this.flowParsePrimaryType();\n      return this.finishNode(node, \"TypeofTypeAnnotation\");\n    }\n\n    flowParseTupleType(): N.FlowTupleTypeAnnotation {\n      const node = this.startNode();\n      node.types = [];\n      this.expect(tt.bracketL);\n      // We allow trailing commas\n      while (this.state.pos < this.length && !this.match(tt.bracketR)) {\n        node.types.push(this.flowParseType());\n        if (this.match(tt.bracketR)) break;\n        this.expect(tt.comma);\n      }\n      this.expect(tt.bracketR);\n      return this.finishNode(node, \"TupleTypeAnnotation\");\n    }\n\n    flowParseFunctionTypeParam(first: boolean): N.FlowFunctionTypeParam {\n      let name = null;\n      let optional = false;\n      let typeAnnotation = null;\n      const node = this.startNode<N.FlowFunctionTypeParam>();\n      const lh = this.lookahead();\n      const isThis = this.state.type === tt._this;\n\n      if (lh.type === tt.colon || lh.type === tt.question) {\n        if (isThis && !first) {\n          this.raise(FlowErrors.ThisParamMustBeFirst, { at: node });\n        }\n        name = this.parseIdentifier(isThis);\n        if (this.eat(tt.question)) {\n          optional = true;\n          if (isThis) {\n            this.raise(FlowErrors.ThisParamMayNotBeOptional, { at: node });\n          }\n        }\n        typeAnnotation = this.flowParseTypeInitialiser();\n      } else {\n        typeAnnotation = this.flowParseType();\n      }\n      node.name = name;\n      node.optional = optional;\n      node.typeAnnotation = typeAnnotation;\n      return this.finishNode(node, \"FunctionTypeParam\");\n    }\n\n    reinterpretTypeAsFunctionTypeParam(\n      type: N.FlowType,\n    ): N.FlowFunctionTypeParam {\n      const node = this.startNodeAt(type.start, type.loc.start);\n      node.name = null;\n      node.optional = false;\n      node.typeAnnotation = type;\n      return this.finishNode(node, \"FunctionTypeParam\");\n    }\n\n    flowParseFunctionTypeParams(params: N.FlowFunctionTypeParam[] = []): {\n      params: N.FlowFunctionTypeParam[];\n      rest: N.FlowFunctionTypeParam | undefined | null;\n      _this: N.FlowFunctionTypeParam | undefined | null;\n    } {\n      let rest: N.FlowFunctionTypeParam | undefined | null = null;\n      let _this: N.FlowFunctionTypeParam | undefined | null = null;\n      if (this.match(tt._this)) {\n        _this = this.flowParseFunctionTypeParam(/* first */ true);\n        // match Flow parser behavior\n        _this.name = null;\n        if (!this.match(tt.parenR)) {\n          this.expect(tt.comma);\n        }\n      }\n      while (!this.match(tt.parenR) && !this.match(tt.ellipsis)) {\n        params.push(this.flowParseFunctionTypeParam(false));\n        if (!this.match(tt.parenR)) {\n          this.expect(tt.comma);\n        }\n      }\n      if (this.eat(tt.ellipsis)) {\n        rest = this.flowParseFunctionTypeParam(false);\n      }\n      return { params, rest, _this };\n    }\n\n    flowIdentToTypeAnnotation(\n      startPos: number,\n      startLoc: Position,\n      node: Undone<N.FlowTypeAnnotation>,\n      id: N.Identifier,\n    ): N.FlowTypeAnnotation {\n      switch (id.name) {\n        case \"any\":\n          return this.finishNode(node, \"AnyTypeAnnotation\");\n\n        case \"bool\":\n        case \"boolean\":\n          return this.finishNode(node, \"BooleanTypeAnnotation\");\n\n        case \"mixed\":\n          return this.finishNode(node, \"MixedTypeAnnotation\");\n\n        case \"empty\":\n          return this.finishNode(node, \"EmptyTypeAnnotation\");\n\n        case \"number\":\n          return this.finishNode(node, \"NumberTypeAnnotation\");\n\n        case \"string\":\n          return this.finishNode(node, \"StringTypeAnnotation\");\n\n        case \"symbol\":\n          return this.finishNode(node, \"SymbolTypeAnnotation\");\n\n        default:\n          this.checkNotUnderscore(id.name);\n          return this.flowParseGenericType(startPos, startLoc, id);\n      }\n    }\n\n    // The parsing of types roughly parallels the parsing of expressions, and\n    // primary types are kind of like primary expressions...they're the\n    // primitives with which other types are constructed.\n    flowParsePrimaryType(): N.FlowTypeAnnotation {\n      const startPos = this.state.start;\n      const startLoc = this.state.startLoc;\n      const node = this.startNode();\n      let tmp;\n      let type;\n      let isGroupedType = false;\n      const oldNoAnonFunctionType = this.state.noAnonFunctionType;\n\n      switch (this.state.type) {\n        case tt.braceL:\n          return this.flowParseObjectType({\n            allowStatic: false,\n            allowExact: false,\n            allowSpread: true,\n            allowProto: false,\n            allowInexact: true,\n          });\n\n        case tt.braceBarL:\n          return this.flowParseObjectType({\n            allowStatic: false,\n            allowExact: true,\n            allowSpread: true,\n            allowProto: false,\n            allowInexact: false,\n          });\n\n        case tt.bracketL:\n          this.state.noAnonFunctionType = false;\n          type = this.flowParseTupleType();\n          this.state.noAnonFunctionType = oldNoAnonFunctionType;\n          return type;\n\n        case tt.lt:\n          node.typeParameters = this.flowParseTypeParameterDeclaration();\n          this.expect(tt.parenL);\n          tmp = this.flowParseFunctionTypeParams();\n          node.params = tmp.params;\n          node.rest = tmp.rest;\n          node.this = tmp._this;\n          this.expect(tt.parenR);\n\n          this.expect(tt.arrow);\n\n          node.returnType = this.flowParseType();\n\n          return this.finishNode(node, \"FunctionTypeAnnotation\");\n\n        case tt.parenL:\n          this.next();\n\n          // Check to see if this is actually a grouped type\n          if (!this.match(tt.parenR) && !this.match(tt.ellipsis)) {\n            if (tokenIsIdentifier(this.state.type) || this.match(tt._this)) {\n              const token = this.lookahead().type;\n              isGroupedType = token !== tt.question && token !== tt.colon;\n            } else {\n              isGroupedType = true;\n            }\n          }\n\n          if (isGroupedType) {\n            this.state.noAnonFunctionType = false;\n            type = this.flowParseType();\n            this.state.noAnonFunctionType = oldNoAnonFunctionType;\n\n            // A `,` or a `) =>` means this is an anonymous function type\n            if (\n              this.state.noAnonFunctionType ||\n              !(\n                this.match(tt.comma) ||\n                (this.match(tt.parenR) && this.lookahead().type === tt.arrow)\n              )\n            ) {\n              this.expect(tt.parenR);\n              return type;\n            } else {\n              // Eat a comma if there is one\n              this.eat(tt.comma);\n            }\n          }\n\n          if (type) {\n            tmp = this.flowParseFunctionTypeParams([\n              this.reinterpretTypeAsFunctionTypeParam(type),\n            ]);\n          } else {\n            tmp = this.flowParseFunctionTypeParams();\n          }\n\n          node.params = tmp.params;\n          node.rest = tmp.rest;\n          node.this = tmp._this;\n\n          this.expect(tt.parenR);\n\n          this.expect(tt.arrow);\n\n          node.returnType = this.flowParseType();\n\n          node.typeParameters = null;\n\n          return this.finishNode(node, \"FunctionTypeAnnotation\");\n\n        case tt.string:\n          return this.parseLiteral<N.StringLiteralTypeAnnotation>(\n            this.state.value,\n            \"StringLiteralTypeAnnotation\",\n          );\n\n        case tt._true:\n        case tt._false:\n          node.value = this.match(tt._true);\n          this.next();\n          return this.finishNode(\n            node as Undone<N.BooleanLiteralTypeAnnotation>,\n            \"BooleanLiteralTypeAnnotation\",\n          );\n\n        case tt.plusMin:\n          if (this.state.value === \"-\") {\n            this.next();\n            if (this.match(tt.num)) {\n              return this.parseLiteralAtNode<N.NumberLiteralTypeAnnotation>(\n                -this.state.value,\n                \"NumberLiteralTypeAnnotation\",\n                node,\n              );\n            }\n\n            if (this.match(tt.bigint)) {\n              return this.parseLiteralAtNode<N.BigIntLiteralTypeAnnotation>(\n                -this.state.value,\n                \"BigIntLiteralTypeAnnotation\",\n                node,\n              );\n            }\n\n            throw this.raise(FlowErrors.UnexpectedSubtractionOperand, {\n              at: this.state.startLoc,\n            });\n          }\n\n          throw this.unexpected();\n        case tt.num:\n          return this.parseLiteral(\n            this.state.value,\n            \"NumberLiteralTypeAnnotation\",\n          );\n\n        case tt.bigint:\n          return this.parseLiteral(\n            this.state.value,\n            \"BigIntLiteralTypeAnnotation\",\n          );\n\n        case tt._void:\n          this.next();\n          return this.finishNode(node, \"VoidTypeAnnotation\");\n\n        case tt._null:\n          this.next();\n          return this.finishNode(node, \"NullLiteralTypeAnnotation\");\n\n        case tt._this:\n          this.next();\n          return this.finishNode(node, \"ThisTypeAnnotation\");\n\n        case tt.star:\n          this.next();\n          return this.finishNode(node, \"ExistsTypeAnnotation\");\n\n        case tt._typeof:\n          return this.flowParseTypeofType();\n\n        default:\n          if (tokenIsKeyword(this.state.type)) {\n            const label = tokenLabelName(this.state.type);\n            this.next();\n            return super.createIdentifier(node as Undone<N.Identifier>, label);\n          } else if (tokenIsIdentifier(this.state.type)) {\n            if (this.isContextual(tt._interface)) {\n              return this.flowParseInterfaceType();\n            }\n\n            return this.flowIdentToTypeAnnotation(\n              startPos,\n              startLoc,\n              node,\n              this.parseIdentifier(),\n            );\n          }\n      }\n\n      throw this.unexpected();\n    }\n\n    flowParsePostfixType(): N.FlowTypeAnnotation {\n      const startPos = this.state.start;\n      const startLoc = this.state.startLoc;\n      let type = this.flowParsePrimaryType();\n      let seenOptionalIndexedAccess = false;\n      while (\n        (this.match(tt.bracketL) || this.match(tt.questionDot)) &&\n        !this.canInsertSemicolon()\n      ) {\n        const node = this.startNodeAt(startPos, startLoc);\n        const optional = this.eat(tt.questionDot);\n        seenOptionalIndexedAccess = seenOptionalIndexedAccess || optional;\n        this.expect(tt.bracketL);\n        if (!optional && this.match(tt.bracketR)) {\n          node.elementType = type;\n          this.next(); // eat `]`\n          type = this.finishNode(node, \"ArrayTypeAnnotation\");\n        } else {\n          node.objectType = type;\n          node.indexType = this.flowParseType();\n          this.expect(tt.bracketR);\n          if (seenOptionalIndexedAccess) {\n            node.optional = optional;\n            type = this.finishNode<N.FlowOptionalIndexedAccessType>(\n              // @ts-expect-error todo(flow->ts)\n              node,\n              \"OptionalIndexedAccessType\",\n            );\n          } else {\n            type = this.finishNode<N.FlowIndexedAccessType>(\n              // @ts-expect-error todo(flow->ts)\n              node,\n              \"IndexedAccessType\",\n            );\n          }\n        }\n      }\n      return type;\n    }\n\n    flowParsePrefixType(): N.FlowTypeAnnotation {\n      const node = this.startNode();\n      if (this.eat(tt.question)) {\n        node.typeAnnotation = this.flowParsePrefixType();\n        return this.finishNode(node, \"NullableTypeAnnotation\");\n      } else {\n        return this.flowParsePostfixType();\n      }\n    }\n\n    flowParseAnonFunctionWithoutParens(): N.FlowTypeAnnotation {\n      const param = this.flowParsePrefixType();\n      if (!this.state.noAnonFunctionType && this.eat(tt.arrow)) {\n        // TODO: This should be a type error. Passing in a SourceLocation, and it expects a Position.\n        const node = this.startNodeAt(param.start, param.loc.start);\n        node.params = [this.reinterpretTypeAsFunctionTypeParam(param)];\n        node.rest = null;\n        node.this = null;\n        node.returnType = this.flowParseType();\n        node.typeParameters = null;\n        return this.finishNode(node, \"FunctionTypeAnnotation\");\n      }\n      return param;\n    }\n\n    flowParseIntersectionType(): N.FlowTypeAnnotation {\n      const node = this.startNode();\n      this.eat(tt.bitwiseAND);\n      const type = this.flowParseAnonFunctionWithoutParens();\n      node.types = [type];\n      while (this.eat(tt.bitwiseAND)) {\n        node.types.push(this.flowParseAnonFunctionWithoutParens());\n      }\n      return node.types.length === 1\n        ? type\n        : this.finishNode(node, \"IntersectionTypeAnnotation\");\n    }\n\n    flowParseUnionType(): N.FlowTypeAnnotation {\n      const node = this.startNode();\n      this.eat(tt.bitwiseOR);\n      const type = this.flowParseIntersectionType();\n      node.types = [type];\n      while (this.eat(tt.bitwiseOR)) {\n        node.types.push(this.flowParseIntersectionType());\n      }\n      return node.types.length === 1\n        ? type\n        : this.finishNode(node, \"UnionTypeAnnotation\");\n    }\n\n    flowParseType(): N.FlowTypeAnnotation {\n      const oldInType = this.state.inType;\n      this.state.inType = true;\n      const type = this.flowParseUnionType();\n      this.state.inType = oldInType;\n      return type;\n    }\n\n    flowParseTypeOrImplicitInstantiation(): N.FlowTypeAnnotation {\n      if (this.state.type === tt.name && this.state.value === \"_\") {\n        const startPos = this.state.start;\n        const startLoc = this.state.startLoc;\n        const node = this.parseIdentifier();\n        return this.flowParseGenericType(startPos, startLoc, node);\n      } else {\n        return this.flowParseType();\n      }\n    }\n\n    flowParseTypeAnnotation(): N.FlowTypeAnnotation {\n      const node = this.startNode<N.FlowTypeAnnotation>();\n      node.typeAnnotation = this.flowParseTypeInitialiser();\n      return this.finishNode(node, \"TypeAnnotation\");\n    }\n\n    flowParseTypeAnnotatableIdentifier(\n      allowPrimitiveOverride?: boolean,\n    ): N.Identifier {\n      const ident = allowPrimitiveOverride\n        ? this.parseIdentifier()\n        : this.flowParseRestrictedIdentifier();\n      if (this.match(tt.colon)) {\n        // @ts-expect-error: refine typings\n        ident.typeAnnotation = this.flowParseTypeAnnotation();\n        this.resetEndLocation(ident);\n      }\n      return ident;\n    }\n\n    typeCastToParameter(node: N.Node): N.Node {\n      node.expression.typeAnnotation = node.typeAnnotation;\n\n      this.resetEndLocation(node.expression, node.typeAnnotation.loc.end);\n\n      return node.expression;\n    }\n\n    flowParseVariance(): N.FlowVariance | undefined | null {\n      let variance = null;\n      if (this.match(tt.plusMin)) {\n        variance = this.startNode<N.FlowVariance>();\n        if (this.state.value === \"+\") {\n          variance.kind = \"plus\";\n        } else {\n          variance.kind = \"minus\";\n        }\n        this.next();\n        return this.finishNode(variance, \"Variance\");\n      }\n      return variance;\n    }\n\n    // ==================================\n    // Overrides\n    // ==================================\n\n    parseFunctionBody(\n      node: N.Function,\n      allowExpressionBody?: boolean | null,\n      isMethod: boolean = false,\n    ): void {\n      if (allowExpressionBody) {\n        return this.forwardNoArrowParamsConversionAt(node, () =>\n          super.parseFunctionBody(node, true, isMethod),\n        );\n      }\n\n      return super.parseFunctionBody(node, false, isMethod);\n    }\n\n    parseFunctionBodyAndFinish<\n      T extends\n        | N.Function\n        | N.TSDeclareMethod\n        | N.TSDeclareFunction\n        | N.ClassPrivateMethod,\n    >(node: Undone<T>, type: T[\"type\"], isMethod: boolean = false): T {\n      if (this.match(tt.colon)) {\n        const typeNode = this.startNode<N.TypeAnnotation>();\n\n        [\n          typeNode.typeAnnotation,\n          // @ts-expect-error predicate may not exist\n          node.predicate,\n        ] = this.flowParseTypeAndPredicateInitialiser();\n\n        node.returnType = typeNode.typeAnnotation\n          ? this.finishNode(typeNode, \"TypeAnnotation\")\n          : null;\n      }\n\n      return super.parseFunctionBodyAndFinish(node, type, isMethod);\n    }\n\n    // interfaces and enums\n    parseStatement(context?: string | null, topLevel?: boolean): N.Statement {\n      // strict mode handling of `interface` since it's a reserved word\n      if (this.state.strict && this.isContextual(tt._interface)) {\n        const lookahead = this.lookahead();\n        if (tokenIsKeywordOrIdentifier(lookahead.type)) {\n          const node = this.startNode<N.FlowInterface>();\n          this.next();\n          return this.flowParseInterface(node);\n        }\n      } else if (this.shouldParseEnums() && this.isContextual(tt._enum)) {\n        const node = this.startNode();\n        this.next();\n        return this.flowParseEnumDeclaration(node);\n      }\n      const stmt = super.parseStatement(context, topLevel);\n      // We will parse a flow pragma in any comment before the first statement.\n      if (this.flowPragma === undefined && !this.isValidDirective(stmt)) {\n        this.flowPragma = null;\n      }\n      return stmt;\n    }\n\n    // declares, interfaces and type aliases\n    parseExpressionStatement(\n      node: N.ExpressionStatement,\n      expr: N.Expression,\n    ): N.ExpressionStatement {\n      if (expr.type === \"Identifier\") {\n        if (expr.name === \"declare\") {\n          if (\n            this.match(tt._class) ||\n            tokenIsIdentifier(this.state.type) ||\n            this.match(tt._function) ||\n            this.match(tt._var) ||\n            this.match(tt._export)\n          ) {\n            // @ts-expect-error: refine typings\n            return this.flowParseDeclare(node);\n          }\n        } else if (tokenIsIdentifier(this.state.type)) {\n          if (expr.name === \"interface\") {\n            // @ts-expect-error: refine typings\n            return this.flowParseInterface(node);\n          } else if (expr.name === \"type\") {\n            // @ts-expect-error: refine typings\n            return this.flowParseTypeAlias(node);\n          } else if (expr.name === \"opaque\") {\n            // @ts-expect-error: refine typings\n            return this.flowParseOpaqueType(node, false);\n          }\n        }\n      }\n\n      return super.parseExpressionStatement(node, expr);\n    }\n\n    // export type\n    shouldParseExportDeclaration(): boolean {\n      const { type } = this.state;\n      if (\n        tokenIsFlowInterfaceOrTypeOrOpaque(type) ||\n        (this.shouldParseEnums() && type === tt._enum)\n      ) {\n        return !this.state.containsEsc;\n      }\n      return super.shouldParseExportDeclaration();\n    }\n\n    isExportDefaultSpecifier(): boolean {\n      const { type } = this.state;\n      if (\n        tokenIsFlowInterfaceOrTypeOrOpaque(type) ||\n        (this.shouldParseEnums() && type === tt._enum)\n      ) {\n        return this.state.containsEsc;\n      }\n\n      return super.isExportDefaultSpecifier();\n    }\n\n    parseExportDefaultExpression(): N.Expression | N.Declaration {\n      if (this.shouldParseEnums() && this.isContextual(tt._enum)) {\n        const node = this.startNode();\n        this.next();\n        return this.flowParseEnumDeclaration(node);\n      }\n      return super.parseExportDefaultExpression();\n    }\n\n    parseConditional(\n      expr: N.Expression,\n      startPos: number,\n      startLoc: Position,\n      refExpressionErrors?: ExpressionErrors | null,\n    ): N.Expression {\n      if (!this.match(tt.question)) return expr;\n\n      if (this.state.maybeInArrowParameters) {\n        const nextCh = this.lookaheadCharCode();\n        // These tokens cannot start an expression, so if one of them follows\n        // ? then we are probably in an arrow function parameters list and we\n        // don't parse the conditional expression.\n        if (\n          nextCh === charCodes.comma || // (a?, b) => c\n          nextCh === charCodes.equalsTo || // (a? = b) => c\n          nextCh === charCodes.colon || // (a?: b) => c\n          nextCh === charCodes.rightParenthesis // (a?) => c\n        ) {\n          /*:: invariant(refExpressionErrors != null) */\n          this.setOptionalParametersError(refExpressionErrors);\n          return expr;\n        }\n      }\n\n      this.expect(tt.question);\n      const state = this.state.clone();\n      const originalNoArrowAt = this.state.noArrowAt;\n      const node = this.startNodeAt(startPos, startLoc);\n      let { consequent, failed } = this.tryParseConditionalConsequent();\n      let [valid, invalid] = this.getArrowLikeExpressions(consequent);\n\n      if (failed || invalid.length > 0) {\n        const noArrowAt = [...originalNoArrowAt];\n\n        if (invalid.length > 0) {\n          this.state = state;\n          this.state.noArrowAt = noArrowAt;\n\n          for (let i = 0; i < invalid.length; i++) {\n            noArrowAt.push(invalid[i].start);\n          }\n\n          ({ consequent, failed } = this.tryParseConditionalConsequent());\n          [valid, invalid] = this.getArrowLikeExpressions(consequent);\n        }\n\n        if (failed && valid.length > 1) {\n          // if there are two or more possible correct ways of parsing, throw an\n          // error.\n          // e.g.   Source: a ? (b): c => (d): e => f\n          //      Result 1: a ? b : (c => ((d): e => f))\n          //      Result 2: a ? ((b): c => d) : (e => f)\n          this.raise(FlowErrors.AmbiguousConditionalArrow, {\n            at: state.startLoc,\n          });\n        }\n\n        if (failed && valid.length === 1) {\n          this.state = state;\n          noArrowAt.push(valid[0].start);\n          this.state.noArrowAt = noArrowAt;\n          ({ consequent, failed } = this.tryParseConditionalConsequent());\n        }\n      }\n\n      this.getArrowLikeExpressions(consequent, true);\n\n      this.state.noArrowAt = originalNoArrowAt;\n      this.expect(tt.colon);\n\n      node.test = expr;\n      node.consequent = consequent;\n      node.alternate = this.forwardNoArrowParamsConversionAt(node, () =>\n        this.parseMaybeAssign(undefined, undefined),\n      );\n\n      return this.finishNode(node, \"ConditionalExpression\");\n    }\n\n    tryParseConditionalConsequent(): {\n      consequent: N.Expression;\n      failed: boolean;\n    } {\n      this.state.noArrowParamsConversionAt.push(this.state.start);\n\n      const consequent = this.parseMaybeAssignAllowIn();\n      const failed = !this.match(tt.colon);\n\n      this.state.noArrowParamsConversionAt.pop();\n\n      return { consequent, failed };\n    }\n\n    // Given an expression, walks through out its arrow functions whose body is\n    // an expression and through out conditional expressions. It returns every\n    // function which has been parsed with a return type but could have been\n    // parenthesized expressions.\n    // These functions are separated into two arrays: one containing the ones\n    // whose parameters can be converted to assignable lists, one containing the\n    // others.\n    getArrowLikeExpressions(\n      node: N.Expression,\n      disallowInvalid?: boolean,\n    ): [N.ArrowFunctionExpression[], N.ArrowFunctionExpression[]] {\n      const stack = [node];\n      const arrows: N.ArrowFunctionExpression[] = [];\n\n      while (stack.length !== 0) {\n        const node = stack.pop();\n        if (node.type === \"ArrowFunctionExpression\") {\n          if (node.typeParameters || !node.returnType) {\n            // This is an arrow expression without ambiguity, so check its parameters\n            // @ts-expect-error: refine typings\n            this.finishArrowValidation(node);\n          } else {\n            // @ts-expect-error: refine typings\n            arrows.push(node);\n          }\n          stack.push(node.body);\n        } else if (node.type === \"ConditionalExpression\") {\n          stack.push(node.consequent);\n          stack.push(node.alternate);\n        }\n      }\n\n      if (disallowInvalid) {\n        arrows.forEach(node => this.finishArrowValidation(node));\n        return [arrows, []];\n      }\n\n      return partition(arrows, node =>\n        node.params.every(param => this.isAssignable(param, true)),\n      );\n    }\n\n    finishArrowValidation(node: N.ArrowFunctionExpression) {\n      this.toAssignableList(\n        // node.params is Expression[] instead of $ReadOnlyArray<Pattern> because it\n        // has not been converted yet.\n        node.params as any as N.Expression[],\n        node.extra?.trailingCommaLoc,\n        /* isLHS */ false,\n      );\n      // Enter scope, as checkParams defines bindings\n      this.scope.enter(SCOPE_FUNCTION | SCOPE_ARROW);\n      // Use super's method to force the parameters to be checked\n      super.checkParams(node, false, true);\n      this.scope.exit();\n    }\n\n    forwardNoArrowParamsConversionAt<T>(\n      node: Undone<N.Node>,\n      parse: () => T,\n    ): T {\n      let result: T;\n      if (this.state.noArrowParamsConversionAt.indexOf(node.start) !== -1) {\n        this.state.noArrowParamsConversionAt.push(this.state.start);\n        result = parse();\n        this.state.noArrowParamsConversionAt.pop();\n      } else {\n        result = parse();\n      }\n\n      return result;\n    }\n\n    parseParenItem(\n      node: N.Expression,\n      startPos: number,\n      startLoc: Position,\n    ): N.Expression {\n      node = super.parseParenItem(node, startPos, startLoc);\n      if (this.eat(tt.question)) {\n        node.optional = true;\n        // Include questionmark in location of node\n        // Don't use this.finishNode() as otherwise we might process comments twice and\n        // include already consumed parens\n        this.resetEndLocation(node);\n      }\n\n      if (this.match(tt.colon)) {\n        const typeCastNode = this.startNodeAt(startPos, startLoc);\n        typeCastNode.expression = node;\n        typeCastNode.typeAnnotation = this.flowParseTypeAnnotation();\n\n        return this.finishNode(typeCastNode, \"TypeCastExpression\");\n      }\n\n      return node;\n    }\n\n    assertModuleNodeAllowed(node: N.Node) {\n      if (\n        (node.type === \"ImportDeclaration\" &&\n          (node.importKind === \"type\" || node.importKind === \"typeof\")) ||\n        (node.type === \"ExportNamedDeclaration\" &&\n          node.exportKind === \"type\") ||\n        (node.type === \"ExportAllDeclaration\" && node.exportKind === \"type\")\n      ) {\n        // Allow Flowtype imports and exports in all conditions because\n        // Flow itself does not care about 'sourceType'.\n        return;\n      }\n\n      super.assertModuleNodeAllowed(node);\n    }\n\n    parseExport(\n      node: Undone<N.ExportNamedDeclaration | N.ExportAllDeclaration>,\n    ): N.AnyExport {\n      const decl = super.parseExport(node);\n      if (\n        decl.type === \"ExportNamedDeclaration\" ||\n        decl.type === \"ExportAllDeclaration\"\n      ) {\n        decl.exportKind = decl.exportKind || \"value\";\n      }\n      return decl;\n    }\n\n    parseExportDeclaration(\n      node: N.ExportNamedDeclaration,\n    ): N.Declaration | undefined | null {\n      if (this.isContextual(tt._type)) {\n        node.exportKind = \"type\";\n\n        const declarationNode = this.startNode();\n        this.next();\n\n        if (this.match(tt.braceL)) {\n          // export type { foo, bar };\n          node.specifiers = this.parseExportSpecifiers(\n            /* isInTypeExport */ true,\n          );\n          super.parseExportFrom(node);\n          return null;\n        } else {\n          // export type Foo = Bar;\n          // @ts-expect-error: refine typings\n          return this.flowParseTypeAlias(declarationNode);\n        }\n      } else if (this.isContextual(tt._opaque)) {\n        node.exportKind = \"type\";\n\n        const declarationNode = this.startNode();\n        this.next();\n        // export opaque type Foo = Bar;\n        // @ts-expect-error: refine typings\n        return this.flowParseOpaqueType(declarationNode, false);\n      } else if (this.isContextual(tt._interface)) {\n        node.exportKind = \"type\";\n        const declarationNode = this.startNode();\n        this.next();\n        // @ts-expect-error: refine typings\n        return this.flowParseInterface(declarationNode);\n      } else if (this.shouldParseEnums() && this.isContextual(tt._enum)) {\n        node.exportKind = \"value\";\n        const declarationNode = this.startNode();\n        this.next();\n        // @ts-expect-error: refine typings\n        return this.flowParseEnumDeclaration(declarationNode);\n      } else {\n        return super.parseExportDeclaration(node);\n      }\n    }\n\n    eatExportStar(node: N.Node): boolean {\n      if (super.eatExportStar(node)) return true;\n\n      if (this.isContextual(tt._type) && this.lookahead().type === tt.star) {\n        node.exportKind = \"type\";\n        this.next();\n        this.next();\n        return true;\n      }\n\n      return false;\n    }\n\n    maybeParseExportNamespaceSpecifier(node: N.Node): boolean {\n      const { startLoc } = this.state;\n      const hasNamespace = super.maybeParseExportNamespaceSpecifier(node);\n      if (hasNamespace && node.exportKind === \"type\") {\n        this.unexpected(startLoc);\n      }\n      return hasNamespace;\n    }\n\n    parseClassId(\n      node: N.Class,\n      isStatement: boolean,\n      optionalId?: boolean | null,\n    ) {\n      super.parseClassId(node, isStatement, optionalId);\n      if (this.match(tt.lt)) {\n        node.typeParameters = this.flowParseTypeParameterDeclaration();\n      }\n    }\n\n    parseClassMember(\n      classBody: N.ClassBody,\n      member: any,\n      state: N.ParseClassMemberState,\n    ): void {\n      const { startLoc } = this.state;\n      if (this.isContextual(tt._declare)) {\n        if (super.parseClassMemberFromModifier(classBody, member)) {\n          // 'declare' is a class element name\n          return;\n        }\n\n        member.declare = true;\n      }\n\n      super.parseClassMember(classBody, member, state);\n\n      if (member.declare) {\n        if (\n          member.type !== \"ClassProperty\" &&\n          member.type !== \"ClassPrivateProperty\" &&\n          member.type !== \"PropertyDefinition\" // Used by estree plugin\n        ) {\n          this.raise(FlowErrors.DeclareClassElement, { at: startLoc });\n        } else if (member.value) {\n          this.raise(FlowErrors.DeclareClassFieldInitializer, {\n            at: member.value,\n          });\n        }\n      }\n    }\n\n    isIterator(word: string): boolean {\n      return word === \"iterator\" || word === \"asyncIterator\";\n    }\n\n    readIterator(): void {\n      const word = super.readWord1();\n      const fullWord = \"@@\" + word;\n\n      // Allow @@iterator and @@asyncIterator as a identifier only inside type\n      if (!this.isIterator(word) || !this.state.inType) {\n        this.raise(Errors.InvalidIdentifier, {\n          at: this.state.curPosition(),\n          identifierName: fullWord,\n        });\n      }\n\n      this.finishToken(tt.name, fullWord);\n    }\n\n    // ensure that inside flow types, we bypass the jsx parser plugin\n    getTokenFromCode(code: number): void {\n      const next = this.input.charCodeAt(this.state.pos + 1);\n      if (code === charCodes.leftCurlyBrace && next === charCodes.verticalBar) {\n        return this.finishOp(tt.braceBarL, 2);\n      } else if (\n        this.state.inType &&\n        (code === charCodes.greaterThan || code === charCodes.lessThan)\n      ) {\n        return this.finishOp(code === charCodes.greaterThan ? tt.gt : tt.lt, 1);\n      } else if (this.state.inType && code === charCodes.questionMark) {\n        if (next === charCodes.dot) {\n          return this.finishOp(tt.questionDot, 2);\n        }\n        // allow double nullable types in Flow: ??string\n        return this.finishOp(tt.question, 1);\n      } else if (\n        isIteratorStart(code, next, this.input.charCodeAt(this.state.pos + 2))\n      ) {\n        this.state.pos += 2; // eat \"@@\"\n        return this.readIterator();\n      } else {\n        return super.getTokenFromCode(code);\n      }\n    }\n\n    isAssignable(node: N.Node, isBinding?: boolean): boolean {\n      if (node.type === \"TypeCastExpression\") {\n        return this.isAssignable(node.expression, isBinding);\n      } else {\n        return super.isAssignable(node, isBinding);\n      }\n    }\n\n    toAssignable(node: N.Node, isLHS: boolean = false): void {\n      if (\n        !isLHS &&\n        node.type === \"AssignmentExpression\" &&\n        node.left.type === \"TypeCastExpression\"\n      ) {\n        node.left = this.typeCastToParameter(node.left);\n      }\n      super.toAssignable(node, isLHS);\n    }\n\n    // turn type casts that we found in function parameter head into type annotated params\n    toAssignableList(\n      exprList: N.Expression[],\n      trailingCommaLoc: Position | undefined | null,\n      isLHS: boolean,\n    ): void {\n      for (let i = 0; i < exprList.length; i++) {\n        const expr = exprList[i];\n        if (expr?.type === \"TypeCastExpression\") {\n          exprList[i] = this.typeCastToParameter(expr);\n        }\n      }\n      super.toAssignableList(exprList, trailingCommaLoc, isLHS);\n    }\n\n    // this is a list of nodes, from something like a call expression, we need to filter the\n    // type casts that we've found that are illegal in this context\n    toReferencedList(\n      exprList: ReadonlyArray<N.Expression | undefined | null>,\n      isParenthesizedExpr?: boolean,\n    ): ReadonlyArray<N.Expression | undefined | null> {\n      for (let i = 0; i < exprList.length; i++) {\n        const expr = exprList[i];\n        if (\n          expr &&\n          expr.type === \"TypeCastExpression\" &&\n          !expr.extra?.parenthesized &&\n          (exprList.length > 1 || !isParenthesizedExpr)\n        ) {\n          this.raise(FlowErrors.TypeCastInPattern, {\n            at: expr.typeAnnotation,\n          });\n        }\n      }\n\n      return exprList;\n    }\n\n    parseArrayLike(\n      close: TokenType,\n      canBePattern: boolean,\n      isTuple: boolean,\n      refExpressionErrors?: ExpressionErrors | null,\n    ): N.ArrayExpression | N.TupleExpression {\n      const node = super.parseArrayLike(\n        close,\n        canBePattern,\n        isTuple,\n        refExpressionErrors,\n      );\n\n      // This could be an array pattern:\n      //   ([a: string, b: string]) => {}\n      // In this case, we don't have to call toReferencedList. We will\n      // call it, if needed, when we are sure that it is a parenthesized\n      // expression by calling toReferencedListDeep.\n      if (canBePattern && !this.state.maybeInArrowParameters) {\n        this.toReferencedList(node.elements);\n      }\n\n      return node;\n    }\n\n    isValidLVal(type: string, ...rest: [boolean, BindingTypes]) {\n      return type === \"TypeCastExpression\" || super.isValidLVal(type, ...rest);\n    }\n\n    // parse class property type annotations\n    parseClassProperty(node: N.ClassProperty): N.ClassProperty {\n      if (this.match(tt.colon)) {\n        // @ts-expect-error refine typings\n        node.typeAnnotation = this.flowParseTypeAnnotation();\n      }\n      return super.parseClassProperty(node);\n    }\n\n    parseClassPrivateProperty(\n      node: N.ClassPrivateProperty,\n    ): N.ClassPrivateProperty {\n      if (this.match(tt.colon)) {\n        // @ts-expect-error refine typings\n        node.typeAnnotation = this.flowParseTypeAnnotation();\n      }\n      return super.parseClassPrivateProperty(node);\n    }\n\n    // determine whether or not we're currently in the position where a class method would appear\n    isClassMethod(): boolean {\n      return this.match(tt.lt) || super.isClassMethod();\n    }\n\n    // determine whether or not we're currently in the position where a class property would appear\n    isClassProperty(): boolean {\n      return this.match(tt.colon) || super.isClassProperty();\n    }\n\n    isNonstaticConstructor(method: N.ClassMethod | N.ClassProperty): boolean {\n      return !this.match(tt.colon) && super.isNonstaticConstructor(method);\n    }\n\n    // parse type parameters for class methods\n    pushClassMethod(\n      classBody: N.ClassBody,\n      method: N.ClassMethod,\n      isGenerator: boolean,\n      isAsync: boolean,\n      isConstructor: boolean,\n      allowsDirectSuper: boolean,\n    ): void {\n      if ((method as any).variance) {\n        this.unexpected((method as any).variance.loc.start);\n      }\n      delete (method as any).variance;\n      if (this.match(tt.lt)) {\n        method.typeParameters = this.flowParseTypeParameterDeclaration();\n      }\n\n      super.pushClassMethod(\n        classBody,\n        method,\n        isGenerator,\n        isAsync,\n        isConstructor,\n        allowsDirectSuper,\n      );\n\n      if (method.params && isConstructor) {\n        const params = method.params;\n        if (params.length > 0 && this.isThisParam(params[0])) {\n          this.raise(FlowErrors.ThisParamBannedInConstructor, { at: method });\n        }\n        // estree support\n      } else if (\n        // @ts-expect-error TS does not know about the face that estree can replace ClassMethod with MethodDefinition\n        method.type === \"MethodDefinition\" &&\n        isConstructor &&\n        // @ts-expect-error estree\n        method.value.params\n      ) {\n        // @ts-expect-error estree\n        const params = method.value.params;\n        if (params.length > 0 && this.isThisParam(params[0])) {\n          this.raise(FlowErrors.ThisParamBannedInConstructor, { at: method });\n        }\n      }\n    }\n\n    pushClassPrivateMethod(\n      classBody: N.ClassBody,\n      method: N.ClassPrivateMethod,\n      isGenerator: boolean,\n      isAsync: boolean,\n    ): void {\n      if ((method as any).variance) {\n        this.unexpected((method as any).variance.loc.start);\n      }\n      delete (method as any).variance;\n      if (this.match(tt.lt)) {\n        method.typeParameters = this.flowParseTypeParameterDeclaration();\n      }\n\n      super.pushClassPrivateMethod(classBody, method, isGenerator, isAsync);\n    }\n\n    // parse a the super class type parameters and implements\n    parseClassSuper(node: N.Class): void {\n      super.parseClassSuper(node);\n      if (node.superClass && this.match(tt.lt)) {\n        node.superTypeParameters = this.flowParseTypeParameterInstantiation();\n      }\n      if (this.isContextual(tt._implements)) {\n        this.next();\n        const implemented: N.FlowClassImplements[] = (node.implements = []);\n        do {\n          const node = this.startNode();\n          node.id = this.flowParseRestrictedIdentifier(/*liberal*/ true);\n          if (this.match(tt.lt)) {\n            node.typeParameters = this.flowParseTypeParameterInstantiation();\n          } else {\n            node.typeParameters = null;\n          }\n          implemented.push(this.finishNode(node, \"ClassImplements\"));\n        } while (this.eat(tt.comma));\n      }\n    }\n\n    checkGetterSetterParams(method: N.ObjectMethod | N.ClassMethod): void {\n      super.checkGetterSetterParams(method);\n      const params = this.getObjectOrClassMethodParams(method);\n      if (params.length > 0) {\n        const param = params[0];\n        if (this.isThisParam(param) && method.kind === \"get\") {\n          this.raise(FlowErrors.GetterMayNotHaveThisParam, { at: param });\n        } else if (this.isThisParam(param)) {\n          this.raise(FlowErrors.SetterMayNotHaveThisParam, { at: param });\n        }\n      }\n    }\n\n    parsePropertyNamePrefixOperator(\n      node: N.ObjectOrClassMember | N.ClassMember,\n    ): void {\n      node.variance = this.flowParseVariance();\n    }\n\n    // parse type parameters for object method shorthand\n    parseObjPropValue(\n      prop: Undone<N.ObjectMethod | N.ObjectProperty>,\n      startPos: number | undefined | null,\n      startLoc: Position | undefined | null,\n      isGenerator: boolean,\n      isAsync: boolean,\n      isPattern: boolean,\n      isAccessor: boolean,\n      refExpressionErrors?: ExpressionErrors | null,\n    ): N.ObjectMethod | N.ObjectProperty {\n      if ((prop as any).variance) {\n        this.unexpected((prop as any).variance.loc.start);\n      }\n      delete (prop as any).variance;\n\n      let typeParameters;\n\n      // method shorthand\n      if (this.match(tt.lt) && !isAccessor) {\n        typeParameters = this.flowParseTypeParameterDeclaration();\n        if (!this.match(tt.parenL)) this.unexpected();\n      }\n\n      const result = super.parseObjPropValue(\n        prop,\n        startPos,\n        startLoc,\n        isGenerator,\n        isAsync,\n        isPattern,\n        isAccessor,\n        refExpressionErrors,\n      );\n\n      // add typeParameters if we found them\n      if (typeParameters) {\n        (result.value || result).typeParameters = typeParameters;\n      }\n      return result;\n    }\n\n    parseAssignableListItemTypes(param: N.Pattern): N.Pattern {\n      if (this.eat(tt.question)) {\n        if (param.type !== \"Identifier\") {\n          this.raise(FlowErrors.PatternIsOptional, { at: param });\n        }\n        if (this.isThisParam(param)) {\n          this.raise(FlowErrors.ThisParamMayNotBeOptional, { at: param });\n        }\n\n        (param as any as N.Identifier).optional = true;\n      }\n      if (this.match(tt.colon)) {\n        // @ts-expect-error: refine typings\n        param.typeAnnotation = this.flowParseTypeAnnotation();\n      } else if (this.isThisParam(param)) {\n        this.raise(FlowErrors.ThisParamAnnotationRequired, { at: param });\n      }\n\n      if (this.match(tt.eq) && this.isThisParam(param)) {\n        this.raise(FlowErrors.ThisParamNoDefault, { at: param });\n      }\n\n      this.resetEndLocation(param);\n      return param;\n    }\n\n    parseMaybeDefault(\n      startPos?: number | null,\n      startLoc?: Position | null,\n      left?: N.Pattern | null,\n    ): N.Pattern {\n      const node = super.parseMaybeDefault(startPos, startLoc, left);\n\n      if (\n        node.type === \"AssignmentPattern\" &&\n        node.typeAnnotation &&\n        node.right.start < node.typeAnnotation.start\n      ) {\n        this.raise(FlowErrors.TypeBeforeInitializer, {\n          at: node.typeAnnotation,\n        });\n      }\n\n      return node;\n    }\n\n    shouldParseDefaultImport(node: N.ImportDeclaration): boolean {\n      if (!hasTypeImportKind(node)) {\n        return super.shouldParseDefaultImport(node);\n      }\n\n      return isMaybeDefaultImport(this.state.type);\n    }\n\n    parseImportSpecifierLocal<\n      T extends\n        | N.ImportSpecifier\n        | N.ImportDefaultSpecifier\n        | N.ImportNamespaceSpecifier,\n    >(node: N.ImportDeclaration, specifier: Undone<T>, type: T[\"type\"]): void {\n      specifier.local = hasTypeImportKind(node)\n        ? this.flowParseRestrictedIdentifier(\n            /* liberal */ true,\n            /* declaration */ true,\n          )\n        : this.parseIdentifier();\n\n      node.specifiers.push(this.finishImportSpecifier(specifier, type));\n    }\n\n    // parse typeof and type imports\n    maybeParseDefaultImportSpecifier(node: N.ImportDeclaration): boolean {\n      node.importKind = \"value\";\n\n      let kind = null;\n      if (this.match(tt._typeof)) {\n        kind = \"typeof\" as const;\n      } else if (this.isContextual(tt._type)) {\n        kind = \"type\" as const;\n      }\n      if (kind) {\n        const lh = this.lookahead();\n        const { type } = lh;\n\n        // import type * is not allowed\n        if (kind === \"type\" && type === tt.star) {\n          // FIXME: lh.start?\n          this.unexpected(null, lh.type);\n        }\n\n        if (\n          isMaybeDefaultImport(type) ||\n          type === tt.braceL ||\n          type === tt.star\n        ) {\n          this.next();\n          node.importKind = kind;\n        }\n      }\n\n      return super.maybeParseDefaultImportSpecifier(node);\n    }\n\n    // parse import-type/typeof shorthand\n    parseImportSpecifier(\n      specifier: any,\n      importedIsString: boolean,\n      isInTypeOnlyImport: boolean,\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      isMaybeTypeOnly: boolean,\n    ): N.ImportSpecifier {\n      const firstIdent = specifier.imported;\n\n      let specifierTypeKind = null;\n      if (firstIdent.type === \"Identifier\") {\n        if (firstIdent.name === \"type\") {\n          specifierTypeKind = \"type\";\n        } else if (firstIdent.name === \"typeof\") {\n          specifierTypeKind = \"typeof\";\n        }\n      }\n\n      let isBinding = false;\n      if (this.isContextual(tt._as) && !this.isLookaheadContextual(\"as\")) {\n        const as_ident = this.parseIdentifier(true);\n        if (\n          specifierTypeKind !== null &&\n          !tokenIsKeywordOrIdentifier(this.state.type)\n        ) {\n          // `import {type as ,` or `import {type as }`\n          specifier.imported = as_ident;\n          specifier.importKind = specifierTypeKind;\n          specifier.local = cloneIdentifier(as_ident);\n        } else {\n          // `import {type as foo`\n          specifier.imported = firstIdent;\n          specifier.importKind = null;\n          specifier.local = this.parseIdentifier();\n        }\n      } else {\n        if (\n          specifierTypeKind !== null &&\n          tokenIsKeywordOrIdentifier(this.state.type)\n        ) {\n          // `import {type foo`\n          specifier.imported = this.parseIdentifier(true);\n          specifier.importKind = specifierTypeKind;\n        } else {\n          if (importedIsString) {\n            /*:: invariant(firstIdent instanceof N.StringLiteral) */\n            throw this.raise(Errors.ImportBindingIsString, {\n              at: specifier,\n              importName: firstIdent.value,\n            });\n          }\n          /*:: invariant(firstIdent instanceof N.Node) */\n          specifier.imported = firstIdent;\n          specifier.importKind = null;\n        }\n\n        if (this.eatContextual(tt._as)) {\n          specifier.local = this.parseIdentifier();\n        } else {\n          isBinding = true;\n          specifier.local = cloneIdentifier(specifier.imported);\n        }\n      }\n\n      const specifierIsTypeImport = hasTypeImportKind(specifier);\n\n      if (isInTypeOnlyImport && specifierIsTypeImport) {\n        this.raise(FlowErrors.ImportTypeShorthandOnlyInPureImport, {\n          at: specifier,\n        });\n      }\n\n      if (isInTypeOnlyImport || specifierIsTypeImport) {\n        this.checkReservedType(\n          specifier.local.name,\n          specifier.local.loc.start,\n          /* declaration */ true,\n        );\n      }\n\n      if (isBinding && !isInTypeOnlyImport && !specifierIsTypeImport) {\n        this.checkReservedWord(\n          specifier.local.name,\n          specifier.loc.start,\n          true,\n          true,\n        );\n      }\n\n      return this.finishImportSpecifier(specifier, \"ImportSpecifier\");\n    }\n\n    parseBindingAtom(): N.Pattern {\n      switch (this.state.type) {\n        case tt._this:\n          // \"this\" may be the name of a parameter, so allow it.\n          return this.parseIdentifier(/* liberal */ true);\n        default:\n          return super.parseBindingAtom();\n      }\n    }\n\n    // parse function type parameters - function foo<T>() {}\n    parseFunctionParams(\n      node: Undone<N.Function>,\n      allowModifiers?: boolean,\n    ): void {\n      // @ts-expect-error\n      const kind = node.kind;\n      if (kind !== \"get\" && kind !== \"set\" && this.match(tt.lt)) {\n        node.typeParameters = this.flowParseTypeParameterDeclaration();\n      }\n      super.parseFunctionParams(node, allowModifiers);\n    }\n\n    // parse flow type annotations on variable declarator heads - let foo: string = bar\n    parseVarId(\n      decl: N.VariableDeclarator,\n      kind: \"var\" | \"let\" | \"const\",\n    ): void {\n      super.parseVarId(decl, kind);\n      if (this.match(tt.colon)) {\n        // @ts-expect-error: refine typings\n        decl.id.typeAnnotation = this.flowParseTypeAnnotation();\n        this.resetEndLocation(decl.id); // set end position to end of type\n      }\n    }\n\n    // parse the return type of an async arrow function - let foo = (async (): number => {});\n    parseAsyncArrowFromCallExpression(\n      node: N.ArrowFunctionExpression,\n      call: N.CallExpression,\n    ): N.ArrowFunctionExpression {\n      if (this.match(tt.colon)) {\n        const oldNoAnonFunctionType = this.state.noAnonFunctionType;\n        this.state.noAnonFunctionType = true;\n        // @ts-expect-error refine typings\n        node.returnType = this.flowParseTypeAnnotation();\n        this.state.noAnonFunctionType = oldNoAnonFunctionType;\n      }\n\n      return super.parseAsyncArrowFromCallExpression(node, call);\n    }\n\n    // todo description\n    shouldParseAsyncArrow(): boolean {\n      return this.match(tt.colon) || super.shouldParseAsyncArrow();\n    }\n\n    // We need to support type parameter declarations for arrow functions. This\n    // is tricky. There are three situations we need to handle\n    //\n    // 1. This is either JSX or an arrow function. We'll try JSX first. If that\n    //    fails, we'll try an arrow function. If that fails, we'll throw the JSX\n    //    error.\n    // 2. This is an arrow function. We'll parse the type parameter declaration,\n    //    parse the rest, make sure the rest is an arrow function, and go from\n    //    there\n    // 3. This is neither. Just call the super method\n    parseMaybeAssign(\n      refExpressionErrors?: ExpressionErrors | null,\n      afterLeftParse?: Function,\n    ): N.Expression {\n      let state = null;\n\n      let jsx;\n\n      if (\n        this.hasPlugin(\"jsx\") &&\n        (this.match(tt.jsxTagStart) || this.match(tt.lt))\n      ) {\n        state = this.state.clone();\n\n        jsx = this.tryParse(\n          () => super.parseMaybeAssign(refExpressionErrors, afterLeftParse),\n          state,\n        );\n\n        /*:: invariant(!jsx.aborted) */\n        /*:: invariant(jsx.node != null) */\n        if (!jsx.error) return jsx.node;\n\n        // Remove `tc.j_expr` and `tc.j_oTag` from context added\n        // by parsing `jsxTagStart` to stop the JSX plugin from\n        // messing with the tokens\n        const { context } = this.state;\n        const currentContext = context[context.length - 1];\n        if (currentContext === tc.j_oTag || currentContext === tc.j_expr) {\n          context.pop();\n        }\n      }\n\n      if (jsx?.error || this.match(tt.lt)) {\n        state = state || this.state.clone();\n\n        let typeParameters: N.TypeParameterDeclaration;\n\n        const arrow = this.tryParse(abort => {\n          typeParameters = this.flowParseTypeParameterDeclaration();\n\n          const arrowExpression = this.forwardNoArrowParamsConversionAt(\n            typeParameters,\n            () => {\n              const result = super.parseMaybeAssign(\n                refExpressionErrors,\n                afterLeftParse,\n              );\n\n              this.resetStartLocationFromNode(result, typeParameters);\n\n              return result;\n            },\n          );\n\n          // <T>(() => {});\n          // <T>(() => {}: any);\n          if (arrowExpression.extra?.parenthesized) abort();\n\n          // The above can return a TypeCastExpression when the arrow\n          // expression is not wrapped in parens. See also `this.parseParenItem`.\n          // (<T>() => {}: any);\n          const expr = this.maybeUnwrapTypeCastExpression(arrowExpression);\n\n          if (expr.type !== \"ArrowFunctionExpression\") abort();\n\n          expr.typeParameters = typeParameters;\n          this.resetStartLocationFromNode(expr, typeParameters);\n\n          return arrowExpression;\n        }, state);\n\n        let arrowExpression:\n          | N.ArrowFunctionExpression\n          | N.TypeCastExpression\n          | undefined\n          | null = null;\n\n        if (\n          arrow.node &&\n          // @ts-expect-error: refine tryParse typings\n          this.maybeUnwrapTypeCastExpression(arrow.node).type ===\n            \"ArrowFunctionExpression\"\n        ) {\n          if (!arrow.error && !arrow.aborted) {\n            // <T> async () => {}\n            // @ts-expect-error: refine tryParse typings\n            if (arrow.node.async) {\n              /*:: invariant(typeParameters) */\n              this.raise(\n                FlowErrors.UnexpectedTypeParameterBeforeAsyncArrowFunction,\n                { at: typeParameters },\n              );\n            }\n            // @ts-expect-error: refine tryParse typings\n            return arrow.node;\n          }\n\n          // @ts-expect-error: refine typings\n          arrowExpression = arrow.node;\n        }\n\n        // If we are here, both JSX and Flow parsing attempts failed.\n        // Give the precedence to the JSX error, except if JSX had an\n        // unrecoverable error while Flow didn't.\n        // If the error is recoverable, we can only re-report it if there is\n        // a node we can return.\n\n        if (jsx?.node) {\n          /*:: invariant(jsx.failState) */\n          this.state = jsx.failState;\n          return jsx.node;\n        }\n\n        if (arrowExpression) {\n          /*:: invariant(arrow.failState) */\n          this.state = arrow.failState;\n          return arrowExpression;\n        }\n\n        if (jsx?.thrown) throw jsx.error;\n        if (arrow.thrown) throw arrow.error;\n\n        /*:: invariant(typeParameters) */\n        throw this.raise(FlowErrors.UnexpectedTokenAfterTypeParameter, {\n          at: typeParameters,\n        });\n      }\n\n      return super.parseMaybeAssign(refExpressionErrors, afterLeftParse);\n    }\n\n    // handle return types for arrow functions\n    parseArrow(\n      node: Undone<N.ArrowFunctionExpression>,\n    ): Undone<N.ArrowFunctionExpression> | undefined | null {\n      if (this.match(tt.colon)) {\n        // @ts-expect-error todo(flow->ts)\n        const result = this.tryParse(() => {\n          const oldNoAnonFunctionType = this.state.noAnonFunctionType;\n          this.state.noAnonFunctionType = true;\n\n          const typeNode = this.startNode<N.TypeAnnotation>();\n\n          [\n            typeNode.typeAnnotation,\n            // @ts-expect-error (destructuring not supported yet)\n            node.predicate,\n          ] = this.flowParseTypeAndPredicateInitialiser();\n\n          this.state.noAnonFunctionType = oldNoAnonFunctionType;\n\n          if (this.canInsertSemicolon()) this.unexpected();\n          if (!this.match(tt.arrow)) this.unexpected();\n\n          return typeNode;\n        });\n\n        if (result.thrown) return null;\n        /*:: invariant(result.node) */\n\n        if (result.error) this.state = result.failState;\n\n        // assign after it is clear it is an arrow\n        // @ts-expect-error todo(flow->ts)\n        node.returnType = result.node.typeAnnotation\n          ? this.finishNode(result.node, \"TypeAnnotation\")\n          : null;\n      }\n\n      return super.parseArrow(node);\n    }\n\n    shouldParseArrow(params: Array<N.Node>): boolean {\n      return this.match(tt.colon) || super.shouldParseArrow(params);\n    }\n\n    setArrowFunctionParameters(\n      node: N.ArrowFunctionExpression,\n      params: N.Pattern[],\n    ): void {\n      if (this.state.noArrowParamsConversionAt.indexOf(node.start) !== -1) {\n        node.params = params;\n      } else {\n        super.setArrowFunctionParameters(node, params);\n      }\n    }\n\n    checkParams(\n      node: N.Function,\n      allowDuplicates: boolean,\n      isArrowFunction?: boolean | null,\n    ): void {\n      if (\n        isArrowFunction &&\n        this.state.noArrowParamsConversionAt.indexOf(node.start) !== -1\n      ) {\n        return;\n      }\n\n      // ensure the `this` param is first, if it exists\n      for (let i = 0; i < node.params.length; i++) {\n        if (this.isThisParam(node.params[i]) && i > 0) {\n          this.raise(FlowErrors.ThisParamMustBeFirst, { at: node.params[i] });\n        }\n      }\n\n      return super.checkParams(node, allowDuplicates, isArrowFunction);\n    }\n\n    parseParenAndDistinguishExpression(canBeArrow: boolean): N.Expression {\n      return super.parseParenAndDistinguishExpression(\n        canBeArrow && this.state.noArrowAt.indexOf(this.state.start) === -1,\n      );\n    }\n\n    parseSubscripts(\n      base: N.Expression,\n      startPos: number,\n      startLoc: Position,\n      noCalls?: boolean | null,\n    ): N.Expression {\n      if (\n        base.type === \"Identifier\" &&\n        base.name === \"async\" &&\n        this.state.noArrowAt.indexOf(startPos) !== -1\n      ) {\n        this.next();\n\n        const node = this.startNodeAt(startPos, startLoc);\n        node.callee = base;\n        node.arguments = super.parseCallExpressionArguments(tt.parenR, false);\n        base = this.finishNode(node, \"CallExpression\");\n      } else if (\n        base.type === \"Identifier\" &&\n        base.name === \"async\" &&\n        this.match(tt.lt)\n      ) {\n        const state = this.state.clone();\n        const arrow = this.tryParse(\n          abort =>\n            this.parseAsyncArrowWithTypeParameters(startPos, startLoc) ||\n            abort(),\n          state,\n        );\n\n        /*:: invariant(arrow.node != null) */\n        // @ts-expect-error: refine tryParse typings\n        if (!arrow.error && !arrow.aborted) return arrow.node;\n\n        const result = this.tryParse(\n          () => super.parseSubscripts(base, startPos, startLoc, noCalls),\n          state,\n        );\n\n        if (result.node && !result.error) return result.node;\n\n        if (arrow.node) {\n          this.state = arrow.failState;\n          // @ts-expect-error: refine tryParse typings\n          return arrow.node;\n        }\n\n        if (result.node) {\n          this.state = result.failState;\n          return result.node;\n        }\n\n        throw arrow.error || result.error;\n      }\n\n      return super.parseSubscripts(base, startPos, startLoc, noCalls);\n    }\n\n    parseSubscript(\n      base: N.Expression,\n      startPos: number,\n      startLoc: Position,\n      noCalls: boolean | undefined | null,\n      subscriptState: N.ParseSubscriptState,\n    ): N.Expression {\n      if (this.match(tt.questionDot) && this.isLookaheadToken_lt()) {\n        subscriptState.optionalChainMember = true;\n        if (noCalls) {\n          subscriptState.stop = true;\n          return base;\n        }\n        this.next();\n        const node = this.startNodeAt<N.OptionalCallExpression>(\n          startPos,\n          startLoc,\n        );\n        node.callee = base;\n        node.typeArguments = this.flowParseTypeParameterInstantiation();\n        this.expect(tt.parenL);\n        node.arguments = this.parseCallExpressionArguments(tt.parenR, false);\n        node.optional = true;\n        return this.finishCallExpression(node, /* optional */ true);\n      } else if (!noCalls && this.shouldParseTypes() && this.match(tt.lt)) {\n        const node = this.startNodeAt<\n          N.OptionalCallExpression | N.CallExpression\n        >(startPos, startLoc);\n        node.callee = base;\n\n        const result = this.tryParse(() => {\n          node.typeArguments =\n            this.flowParseTypeParameterInstantiationCallOrNew();\n          this.expect(tt.parenL);\n          node.arguments = super.parseCallExpressionArguments(tt.parenR, false);\n          if (subscriptState.optionalChainMember) {\n            (node as Undone<N.OptionalCallExpression>).optional = false;\n          }\n          return this.finishCallExpression(\n            node,\n            subscriptState.optionalChainMember,\n          );\n        });\n\n        if (result.node) {\n          if (result.error) this.state = result.failState;\n          return result.node;\n        }\n      }\n\n      return super.parseSubscript(\n        base,\n        startPos,\n        startLoc,\n        noCalls,\n        subscriptState,\n      );\n    }\n\n    parseNewCallee(node: N.NewExpression): void {\n      super.parseNewCallee(node);\n\n      let targs = null;\n      if (this.shouldParseTypes() && this.match(tt.lt)) {\n        targs = this.tryParse(() =>\n          this.flowParseTypeParameterInstantiationCallOrNew(),\n        ).node;\n      }\n      node.typeArguments = targs;\n    }\n\n    parseAsyncArrowWithTypeParameters(\n      startPos: number,\n      startLoc: Position,\n    ): N.ArrowFunctionExpression | undefined | null {\n      const node = this.startNodeAt<N.ArrowFunctionExpression>(\n        startPos,\n        startLoc,\n      );\n      this.parseFunctionParams(node);\n      if (!this.parseArrow(node)) return;\n      return super.parseArrowExpression(\n        node,\n        /* params */ undefined,\n        /* isAsync */ true,\n      );\n    }\n\n    readToken_mult_modulo(code: number): void {\n      const next = this.input.charCodeAt(this.state.pos + 1);\n      if (\n        code === charCodes.asterisk &&\n        next === charCodes.slash &&\n        this.state.hasFlowComment\n      ) {\n        this.state.hasFlowComment = false;\n        this.state.pos += 2;\n        this.nextToken();\n        return;\n      }\n\n      super.readToken_mult_modulo(code);\n    }\n\n    readToken_pipe_amp(code: number): void {\n      const next = this.input.charCodeAt(this.state.pos + 1);\n      if (\n        code === charCodes.verticalBar &&\n        next === charCodes.rightCurlyBrace\n      ) {\n        // '|}'\n        this.finishOp(tt.braceBarR, 2);\n        return;\n      }\n\n      super.readToken_pipe_amp(code);\n    }\n\n    parseTopLevel(file: N.File, program: N.Program): N.File {\n      const fileNode = super.parseTopLevel(file, program);\n      if (this.state.hasFlowComment) {\n        this.raise(FlowErrors.UnterminatedFlowComment, {\n          at: this.state.curPosition(),\n        });\n      }\n      return fileNode;\n    }\n\n    skipBlockComment(): N.CommentBlock | void {\n      if (this.hasPlugin(\"flowComments\") && this.skipFlowComment()) {\n        if (this.state.hasFlowComment) {\n          throw this.raise(FlowErrors.NestedFlowComment, {\n            at: this.state.startLoc,\n          });\n        }\n        this.hasFlowCommentCompletion();\n        const commentSkip = this.skipFlowComment();\n        if (commentSkip) {\n          this.state.pos += commentSkip;\n          this.state.hasFlowComment = true;\n        }\n        return;\n      }\n\n      if (this.state.hasFlowComment) {\n        const end = this.input.indexOf(\"*-/\", this.state.pos + 2);\n        if (end === -1) {\n          throw this.raise(Errors.UnterminatedComment, {\n            at: this.state.curPosition(),\n          });\n        }\n        this.state.pos = end + 2 + 3;\n        return;\n      }\n\n      return super.skipBlockComment();\n    }\n\n    skipFlowComment(): number | false {\n      const { pos } = this.state;\n      let shiftToFirstNonWhiteSpace = 2;\n      while (\n        [charCodes.space, charCodes.tab].includes(\n          // @ts-expect-error testing whether a number is included\n          this.input.charCodeAt(pos + shiftToFirstNonWhiteSpace),\n        )\n      ) {\n        shiftToFirstNonWhiteSpace++;\n      }\n\n      const ch2 = this.input.charCodeAt(shiftToFirstNonWhiteSpace + pos);\n      const ch3 = this.input.charCodeAt(shiftToFirstNonWhiteSpace + pos + 1);\n\n      if (ch2 === charCodes.colon && ch3 === charCodes.colon) {\n        return shiftToFirstNonWhiteSpace + 2; // check for /*::\n      }\n      if (\n        this.input.slice(\n          shiftToFirstNonWhiteSpace + pos,\n          shiftToFirstNonWhiteSpace + pos + 12,\n        ) === \"flow-include\"\n      ) {\n        return shiftToFirstNonWhiteSpace + 12; // check for /*flow-include\n      }\n      if (ch2 === charCodes.colon && ch3 !== charCodes.colon) {\n        return shiftToFirstNonWhiteSpace; // check for /*:, advance up to :\n      }\n      return false;\n    }\n\n    hasFlowCommentCompletion(): void {\n      const end = this.input.indexOf(\"*/\", this.state.pos);\n      if (end === -1) {\n        throw this.raise(Errors.UnterminatedComment, {\n          at: this.state.curPosition(),\n        });\n      }\n    }\n\n    // Flow enum parsing\n\n    flowEnumErrorBooleanMemberNotInitialized(\n      loc: Position,\n      {\n        enumName,\n        memberName,\n      }: {\n        enumName: string;\n        memberName: string;\n      },\n    ): void {\n      this.raise(FlowErrors.EnumBooleanMemberNotInitialized, {\n        at: loc,\n        memberName,\n        enumName,\n      });\n    }\n\n    flowEnumErrorInvalidMemberInitializer(\n      loc: Position,\n      enumContext: EnumContext,\n    ) {\n      return this.raise(\n        !enumContext.explicitType\n          ? FlowErrors.EnumInvalidMemberInitializerUnknownType\n          : enumContext.explicitType === \"symbol\"\n          ? FlowErrors.EnumInvalidMemberInitializerSymbolType\n          : FlowErrors.EnumInvalidMemberInitializerPrimaryType,\n        {\n          at: loc,\n          ...enumContext,\n        },\n      );\n    }\n\n    flowEnumErrorNumberMemberNotInitialized(\n      loc: Position,\n      {\n        enumName,\n        memberName,\n      }: {\n        enumName: string;\n        memberName: string;\n      },\n    ): void {\n      this.raise(FlowErrors.EnumNumberMemberNotInitialized, {\n        at: loc,\n        enumName,\n        memberName,\n      });\n    }\n\n    flowEnumErrorStringMemberInconsistentlyInitailized(\n      node: N.Node,\n      {\n        enumName,\n      }: {\n        enumName: string;\n      },\n    ): void {\n      this.raise(FlowErrors.EnumStringMemberInconsistentlyInitailized, {\n        at: node,\n        enumName,\n      });\n    }\n\n    flowEnumMemberInit(): EnumMemberInit {\n      const startLoc = this.state.startLoc;\n      const endOfInit = () => this.match(tt.comma) || this.match(tt.braceR);\n      switch (this.state.type) {\n        case tt.num: {\n          const literal = this.parseNumericLiteral(this.state.value);\n          if (endOfInit()) {\n            return { type: \"number\", loc: literal.loc.start, value: literal };\n          }\n          return { type: \"invalid\", loc: startLoc };\n        }\n        case tt.string: {\n          const literal = this.parseStringLiteral(this.state.value);\n          if (endOfInit()) {\n            return { type: \"string\", loc: literal.loc.start, value: literal };\n          }\n          return { type: \"invalid\", loc: startLoc };\n        }\n        case tt._true:\n        case tt._false: {\n          const literal = this.parseBooleanLiteral(this.match(tt._true));\n          if (endOfInit()) {\n            return {\n              type: \"boolean\",\n              loc: literal.loc.start,\n              value: literal,\n            };\n          }\n          return { type: \"invalid\", loc: startLoc };\n        }\n        default:\n          return { type: \"invalid\", loc: startLoc };\n      }\n    }\n\n    flowEnumMemberRaw(): {\n      id: N.Node;\n      init: EnumMemberInit;\n    } {\n      const loc = this.state.startLoc;\n      const id = this.parseIdentifier(true);\n      const init = this.eat(tt.eq)\n        ? this.flowEnumMemberInit()\n        : { type: \"none\", loc };\n      // @ts-expect-error: fixme\n      return { id, init };\n    }\n\n    flowEnumCheckExplicitTypeMismatch(\n      loc: Position,\n      context: EnumContext,\n      expectedType: EnumExplicitType,\n    ): void {\n      const { explicitType } = context;\n      if (explicitType === null) {\n        return;\n      }\n      if (explicitType !== expectedType) {\n        this.flowEnumErrorInvalidMemberInitializer(loc, context);\n      }\n    }\n\n    flowEnumMembers({\n      enumName,\n      explicitType,\n    }: {\n      enumName: string;\n      explicitType: EnumExplicitType;\n    }): {\n      members: {\n        booleanMembers: Array<N.Node>;\n        numberMembers: Array<N.Node>;\n        stringMembers: Array<N.Node>;\n        defaultedMembers: Array<N.Node>;\n      };\n      hasUnknownMembers: boolean;\n    } {\n      const seenNames = new Set();\n      const members = {\n        // @ts-expect-error: migrate to Babel types\n        booleanMembers: [],\n        // @ts-expect-error: migrate to Babel types\n        numberMembers: [],\n        // @ts-expect-error: migrate to Babel types\n        stringMembers: [],\n        // @ts-expect-error: migrate to Babel types\n        defaultedMembers: [],\n      };\n      let hasUnknownMembers = false;\n      while (!this.match(tt.braceR)) {\n        if (this.eat(tt.ellipsis)) {\n          hasUnknownMembers = true;\n          break;\n        }\n        const memberNode = this.startNode();\n        const { id, init } = this.flowEnumMemberRaw();\n        const memberName = id.name;\n        if (memberName === \"\") {\n          continue;\n        }\n        if (/^[a-z]/.test(memberName)) {\n          this.raise(FlowErrors.EnumInvalidMemberName, {\n            at: id,\n            memberName,\n            suggestion: memberName[0].toUpperCase() + memberName.slice(1),\n            enumName,\n          });\n        }\n        if (seenNames.has(memberName)) {\n          this.raise(FlowErrors.EnumDuplicateMemberName, {\n            at: id,\n            memberName,\n            enumName,\n          });\n        }\n        seenNames.add(memberName);\n        const context = { enumName, explicitType, memberName };\n        memberNode.id = id;\n        switch (init.type) {\n          case \"boolean\": {\n            this.flowEnumCheckExplicitTypeMismatch(\n              init.loc,\n              context,\n              \"boolean\",\n            );\n            memberNode.init = init.value;\n            members.booleanMembers.push(\n              this.finishNode(memberNode, \"EnumBooleanMember\"),\n            );\n            break;\n          }\n          case \"number\": {\n            this.flowEnumCheckExplicitTypeMismatch(init.loc, context, \"number\");\n            memberNode.init = init.value;\n            members.numberMembers.push(\n              this.finishNode(memberNode, \"EnumNumberMember\"),\n            );\n            break;\n          }\n          case \"string\": {\n            this.flowEnumCheckExplicitTypeMismatch(init.loc, context, \"string\");\n            memberNode.init = init.value;\n            members.stringMembers.push(\n              this.finishNode(memberNode, \"EnumStringMember\"),\n            );\n            break;\n          }\n          case \"invalid\": {\n            throw this.flowEnumErrorInvalidMemberInitializer(init.loc, context);\n          }\n          case \"none\": {\n            switch (explicitType) {\n              case \"boolean\":\n                this.flowEnumErrorBooleanMemberNotInitialized(\n                  init.loc,\n                  context,\n                );\n                break;\n              case \"number\":\n                this.flowEnumErrorNumberMemberNotInitialized(init.loc, context);\n                break;\n              default:\n                members.defaultedMembers.push(\n                  this.finishNode(memberNode, \"EnumDefaultedMember\"),\n                );\n            }\n          }\n        }\n\n        if (!this.match(tt.braceR)) {\n          this.expect(tt.comma);\n        }\n      }\n      return { members, hasUnknownMembers };\n    }\n\n    flowEnumStringMembers(\n      initializedMembers: Array<N.Node>,\n      defaultedMembers: Array<N.Node>,\n      {\n        enumName,\n      }: {\n        enumName: string;\n      },\n    ): Array<N.Node> {\n      if (initializedMembers.length === 0) {\n        return defaultedMembers;\n      } else if (defaultedMembers.length === 0) {\n        return initializedMembers;\n      } else if (defaultedMembers.length > initializedMembers.length) {\n        for (const member of initializedMembers) {\n          this.flowEnumErrorStringMemberInconsistentlyInitailized(member, {\n            enumName,\n          });\n        }\n        return defaultedMembers;\n      } else {\n        for (const member of defaultedMembers) {\n          this.flowEnumErrorStringMemberInconsistentlyInitailized(member, {\n            enumName,\n          });\n        }\n        return initializedMembers;\n      }\n    }\n\n    flowEnumParseExplicitType({\n      enumName,\n    }: {\n      enumName: string;\n    }): EnumExplicitType {\n      if (!this.eatContextual(tt._of)) return null;\n\n      if (!tokenIsIdentifier(this.state.type)) {\n        throw this.raise(FlowErrors.EnumInvalidExplicitTypeUnknownSupplied, {\n          at: this.state.startLoc,\n          enumName,\n        });\n      }\n\n      const { value } = this.state;\n      this.next();\n\n      if (\n        value !== \"boolean\" &&\n        value !== \"number\" &&\n        value !== \"string\" &&\n        value !== \"symbol\"\n      ) {\n        this.raise(FlowErrors.EnumInvalidExplicitType, {\n          at: this.state.startLoc,\n          enumName,\n          invalidEnumType: value,\n        });\n      }\n\n      return value;\n    }\n\n    flowEnumBody(node: Undone<N.Node>, id: N.Node): N.Node {\n      const enumName = id.name;\n      const nameLoc = id.loc.start;\n      const explicitType = this.flowEnumParseExplicitType({ enumName });\n      this.expect(tt.braceL);\n      const { members, hasUnknownMembers } = this.flowEnumMembers({\n        enumName,\n        explicitType,\n      });\n      node.hasUnknownMembers = hasUnknownMembers;\n\n      switch (explicitType) {\n        case \"boolean\":\n          node.explicitType = true;\n          node.members = members.booleanMembers;\n          this.expect(tt.braceR);\n          return this.finishNode(node, \"EnumBooleanBody\");\n        case \"number\":\n          node.explicitType = true;\n          node.members = members.numberMembers;\n          this.expect(tt.braceR);\n          return this.finishNode(node, \"EnumNumberBody\");\n        case \"string\":\n          node.explicitType = true;\n          node.members = this.flowEnumStringMembers(\n            members.stringMembers,\n            members.defaultedMembers,\n            { enumName },\n          );\n          this.expect(tt.braceR);\n          return this.finishNode(node, \"EnumStringBody\");\n        case \"symbol\":\n          node.members = members.defaultedMembers;\n          this.expect(tt.braceR);\n          return this.finishNode(node, \"EnumSymbolBody\");\n        default: {\n          // `explicitType` is `null`\n          const empty = () => {\n            node.members = [];\n            this.expect(tt.braceR);\n            return this.finishNode(node, \"EnumStringBody\");\n          };\n          node.explicitType = false;\n\n          const boolsLen = members.booleanMembers.length;\n          const numsLen = members.numberMembers.length;\n          const strsLen = members.stringMembers.length;\n          const defaultedLen = members.defaultedMembers.length;\n\n          if (!boolsLen && !numsLen && !strsLen && !defaultedLen) {\n            return empty();\n          } else if (!boolsLen && !numsLen) {\n            node.members = this.flowEnumStringMembers(\n              members.stringMembers,\n              members.defaultedMembers,\n              { enumName },\n            );\n            this.expect(tt.braceR);\n            return this.finishNode(node, \"EnumStringBody\");\n          } else if (!numsLen && !strsLen && boolsLen >= defaultedLen) {\n            for (const member of members.defaultedMembers) {\n              this.flowEnumErrorBooleanMemberNotInitialized(member.loc.start, {\n                enumName,\n                memberName: member.id.name,\n              });\n            }\n            node.members = members.booleanMembers;\n            this.expect(tt.braceR);\n            return this.finishNode(node, \"EnumBooleanBody\");\n          } else if (!boolsLen && !strsLen && numsLen >= defaultedLen) {\n            for (const member of members.defaultedMembers) {\n              this.flowEnumErrorNumberMemberNotInitialized(member.loc.start, {\n                enumName,\n                memberName: member.id.name,\n              });\n            }\n            node.members = members.numberMembers;\n            this.expect(tt.braceR);\n            return this.finishNode(node, \"EnumNumberBody\");\n          } else {\n            this.raise(FlowErrors.EnumInconsistentMemberValues, {\n              at: nameLoc,\n              enumName,\n            });\n            return empty();\n          }\n        }\n      }\n    }\n\n    flowParseEnumDeclaration(node: Undone<N.Node>): N.Node {\n      const id = this.parseIdentifier();\n      node.id = id;\n      node.body = this.flowEnumBody(this.startNode(), id);\n      return this.finishNode(node, \"EnumDeclaration\");\n    }\n\n    // check if the next token is a tt.lt\n    isLookaheadToken_lt(): boolean {\n      const next = this.nextTokenStart();\n      if (this.input.charCodeAt(next) === charCodes.lessThan) {\n        const afterNext = this.input.charCodeAt(next + 1);\n        return (\n          afterNext !== charCodes.lessThan && afterNext !== charCodes.equalsTo\n        );\n      }\n      return false;\n    }\n\n    maybeUnwrapTypeCastExpression(node: N.Node) {\n      return node.type === \"TypeCastExpression\" ? node.expression : node;\n    }\n  };\n","const entities: {\n  __proto__: null;\n  [name: string]: string;\n} = {\n  __proto__: null,\n  quot: \"\\u0022\",\n  amp: \"&\",\n  apos: \"\\u0027\",\n  lt: \"<\",\n  gt: \">\",\n  nbsp: \"\\u00A0\",\n  iexcl: \"\\u00A1\",\n  cent: \"\\u00A2\",\n  pound: \"\\u00A3\",\n  curren: \"\\u00A4\",\n  yen: \"\\u00A5\",\n  brvbar: \"\\u00A6\",\n  sect: \"\\u00A7\",\n  uml: \"\\u00A8\",\n  copy: \"\\u00A9\",\n  ordf: \"\\u00AA\",\n  laquo: \"\\u00AB\",\n  not: \"\\u00AC\",\n  shy: \"\\u00AD\",\n  reg: \"\\u00AE\",\n  macr: \"\\u00AF\",\n  deg: \"\\u00B0\",\n  plusmn: \"\\u00B1\",\n  sup2: \"\\u00B2\",\n  sup3: \"\\u00B3\",\n  acute: \"\\u00B4\",\n  micro: \"\\u00B5\",\n  para: \"\\u00B6\",\n  middot: \"\\u00B7\",\n  cedil: \"\\u00B8\",\n  sup1: \"\\u00B9\",\n  ordm: \"\\u00BA\",\n  raquo: \"\\u00BB\",\n  frac14: \"\\u00BC\",\n  frac12: \"\\u00BD\",\n  frac34: \"\\u00BE\",\n  iquest: \"\\u00BF\",\n  Agrave: \"\\u00C0\",\n  Aacute: \"\\u00C1\",\n  Acirc: \"\\u00C2\",\n  Atilde: \"\\u00C3\",\n  Auml: \"\\u00C4\",\n  Aring: \"\\u00C5\",\n  AElig: \"\\u00C6\",\n  Ccedil: \"\\u00C7\",\n  Egrave: \"\\u00C8\",\n  Eacute: \"\\u00C9\",\n  Ecirc: \"\\u00CA\",\n  Euml: \"\\u00CB\",\n  Igrave: \"\\u00CC\",\n  Iacute: \"\\u00CD\",\n  Icirc: \"\\u00CE\",\n  Iuml: \"\\u00CF\",\n  ETH: \"\\u00D0\",\n  Ntilde: \"\\u00D1\",\n  Ograve: \"\\u00D2\",\n  Oacute: \"\\u00D3\",\n  Ocirc: \"\\u00D4\",\n  Otilde: \"\\u00D5\",\n  Ouml: \"\\u00D6\",\n  times: \"\\u00D7\",\n  Oslash: \"\\u00D8\",\n  Ugrave: \"\\u00D9\",\n  Uacute: \"\\u00DA\",\n  Ucirc: \"\\u00DB\",\n  Uuml: \"\\u00DC\",\n  Yacute: \"\\u00DD\",\n  THORN: \"\\u00DE\",\n  szlig: \"\\u00DF\",\n  agrave: \"\\u00E0\",\n  aacute: \"\\u00E1\",\n  acirc: \"\\u00E2\",\n  atilde: \"\\u00E3\",\n  auml: \"\\u00E4\",\n  aring: \"\\u00E5\",\n  aelig: \"\\u00E6\",\n  ccedil: \"\\u00E7\",\n  egrave: \"\\u00E8\",\n  eacute: \"\\u00E9\",\n  ecirc: \"\\u00EA\",\n  euml: \"\\u00EB\",\n  igrave: \"\\u00EC\",\n  iacute: \"\\u00ED\",\n  icirc: \"\\u00EE\",\n  iuml: \"\\u00EF\",\n  eth: \"\\u00F0\",\n  ntilde: \"\\u00F1\",\n  ograve: \"\\u00F2\",\n  oacute: \"\\u00F3\",\n  ocirc: \"\\u00F4\",\n  otilde: \"\\u00F5\",\n  ouml: \"\\u00F6\",\n  divide: \"\\u00F7\",\n  oslash: \"\\u00F8\",\n  ugrave: \"\\u00F9\",\n  uacute: \"\\u00FA\",\n  ucirc: \"\\u00FB\",\n  uuml: \"\\u00FC\",\n  yacute: \"\\u00FD\",\n  thorn: \"\\u00FE\",\n  yuml: \"\\u00FF\",\n  OElig: \"\\u0152\",\n  oelig: \"\\u0153\",\n  Scaron: \"\\u0160\",\n  scaron: \"\\u0161\",\n  Yuml: \"\\u0178\",\n  fnof: \"\\u0192\",\n  circ: \"\\u02C6\",\n  tilde: \"\\u02DC\",\n  Alpha: \"\\u0391\",\n  Beta: \"\\u0392\",\n  Gamma: \"\\u0393\",\n  Delta: \"\\u0394\",\n  Epsilon: \"\\u0395\",\n  Zeta: \"\\u0396\",\n  Eta: \"\\u0397\",\n  Theta: \"\\u0398\",\n  Iota: \"\\u0399\",\n  Kappa: \"\\u039A\",\n  Lambda: \"\\u039B\",\n  Mu: \"\\u039C\",\n  Nu: \"\\u039D\",\n  Xi: \"\\u039E\",\n  Omicron: \"\\u039F\",\n  Pi: \"\\u03A0\",\n  Rho: \"\\u03A1\",\n  Sigma: \"\\u03A3\",\n  Tau: \"\\u03A4\",\n  Upsilon: \"\\u03A5\",\n  Phi: \"\\u03A6\",\n  Chi: \"\\u03A7\",\n  Psi: \"\\u03A8\",\n  Omega: \"\\u03A9\",\n  alpha: \"\\u03B1\",\n  beta: \"\\u03B2\",\n  gamma: \"\\u03B3\",\n  delta: \"\\u03B4\",\n  epsilon: \"\\u03B5\",\n  zeta: \"\\u03B6\",\n  eta: \"\\u03B7\",\n  theta: \"\\u03B8\",\n  iota: \"\\u03B9\",\n  kappa: \"\\u03BA\",\n  lambda: \"\\u03BB\",\n  mu: \"\\u03BC\",\n  nu: \"\\u03BD\",\n  xi: \"\\u03BE\",\n  omicron: \"\\u03BF\",\n  pi: \"\\u03C0\",\n  rho: \"\\u03C1\",\n  sigmaf: \"\\u03C2\",\n  sigma: \"\\u03C3\",\n  tau: \"\\u03C4\",\n  upsilon: \"\\u03C5\",\n  phi: \"\\u03C6\",\n  chi: \"\\u03C7\",\n  psi: \"\\u03C8\",\n  omega: \"\\u03C9\",\n  thetasym: \"\\u03D1\",\n  upsih: \"\\u03D2\",\n  piv: \"\\u03D6\",\n  ensp: \"\\u2002\",\n  emsp: \"\\u2003\",\n  thinsp: \"\\u2009\",\n  zwnj: \"\\u200C\",\n  zwj: \"\\u200D\",\n  lrm: \"\\u200E\",\n  rlm: \"\\u200F\",\n  ndash: \"\\u2013\",\n  mdash: \"\\u2014\",\n  lsquo: \"\\u2018\",\n  rsquo: \"\\u2019\",\n  sbquo: \"\\u201A\",\n  ldquo: \"\\u201C\",\n  rdquo: \"\\u201D\",\n  bdquo: \"\\u201E\",\n  dagger: \"\\u2020\",\n  Dagger: \"\\u2021\",\n  bull: \"\\u2022\",\n  hellip: \"\\u2026\",\n  permil: \"\\u2030\",\n  prime: \"\\u2032\",\n  Prime: \"\\u2033\",\n  lsaquo: \"\\u2039\",\n  rsaquo: \"\\u203A\",\n  oline: \"\\u203E\",\n  frasl: \"\\u2044\",\n  euro: \"\\u20AC\",\n  image: \"\\u2111\",\n  weierp: \"\\u2118\",\n  real: \"\\u211C\",\n  trade: \"\\u2122\",\n  alefsym: \"\\u2135\",\n  larr: \"\\u2190\",\n  uarr: \"\\u2191\",\n  rarr: \"\\u2192\",\n  darr: \"\\u2193\",\n  harr: \"\\u2194\",\n  crarr: \"\\u21B5\",\n  lArr: \"\\u21D0\",\n  uArr: \"\\u21D1\",\n  rArr: \"\\u21D2\",\n  dArr: \"\\u21D3\",\n  hArr: \"\\u21D4\",\n  forall: \"\\u2200\",\n  part: \"\\u2202\",\n  exist: \"\\u2203\",\n  empty: \"\\u2205\",\n  nabla: \"\\u2207\",\n  isin: \"\\u2208\",\n  notin: \"\\u2209\",\n  ni: \"\\u220B\",\n  prod: \"\\u220F\",\n  sum: \"\\u2211\",\n  minus: \"\\u2212\",\n  lowast: \"\\u2217\",\n  radic: \"\\u221A\",\n  prop: \"\\u221D\",\n  infin: \"\\u221E\",\n  ang: \"\\u2220\",\n  and: \"\\u2227\",\n  or: \"\\u2228\",\n  cap: \"\\u2229\",\n  cup: \"\\u222A\",\n  int: \"\\u222B\",\n  there4: \"\\u2234\",\n  sim: \"\\u223C\",\n  cong: \"\\u2245\",\n  asymp: \"\\u2248\",\n  ne: \"\\u2260\",\n  equiv: \"\\u2261\",\n  le: \"\\u2264\",\n  ge: \"\\u2265\",\n  sub: \"\\u2282\",\n  sup: \"\\u2283\",\n  nsub: \"\\u2284\",\n  sube: \"\\u2286\",\n  supe: \"\\u2287\",\n  oplus: \"\\u2295\",\n  otimes: \"\\u2297\",\n  perp: \"\\u22A5\",\n  sdot: \"\\u22C5\",\n  lceil: \"\\u2308\",\n  rceil: \"\\u2309\",\n  lfloor: \"\\u230A\",\n  rfloor: \"\\u230B\",\n  lang: \"\\u2329\",\n  rang: \"\\u232A\",\n  loz: \"\\u25CA\",\n  spades: \"\\u2660\",\n  clubs: \"\\u2663\",\n  hearts: \"\\u2665\",\n  diams: \"\\u2666\",\n};\nexport default entities;\n","import * as charCodes from \"charcodes\";\n\nimport XHTMLEntities from \"./xhtml\";\nimport type Parser from \"../../parser\";\nimport type { ExpressionErrors } from \"../../parser/util\";\nimport {\n  tokenComesBeforeExpression,\n  tokenIsKeyword,\n  tokenLabelName,\n  type TokenType,\n  tt,\n} from \"../../tokenizer/types\";\nimport { TokContext, types as tc } from \"../../tokenizer/context\";\nimport * as N from \"../../types\";\nimport { isIdentifierChar, isIdentifierStart } from \"../../util/identifier\";\nimport type { Position } from \"../../util/location\";\nimport { isNewLine } from \"../../util/whitespace\";\nimport { Errors, ParseErrorEnum } from \"../../parse-error\";\nimport { type Undone } from \"../../parser/node\";\n\n/* eslint sort-keys: \"error\" */\nconst JsxErrors = ParseErrorEnum`jsx`({\n  AttributeIsEmpty:\n    \"JSX attributes must only be assigned a non-empty expression.\",\n  MissingClosingTagElement: ({ openingTagName }: { openingTagName: string }) =>\n    `Expected corresponding JSX closing tag for <${openingTagName}>.`,\n  MissingClosingTagFragment: \"Expected corresponding JSX closing tag for <>.\",\n  UnexpectedSequenceExpression:\n    \"Sequence expressions cannot be directly nested inside JSX. Did you mean to wrap it in parentheses (...)?\",\n  // FIXME: Unify with Errors.UnexpectedToken\n  UnexpectedToken: ({\n    unexpected,\n    HTMLEntity,\n  }: {\n    unexpected: string;\n    HTMLEntity: string;\n  }) =>\n    `Unexpected token \\`${unexpected}\\`. Did you mean \\`${HTMLEntity}\\` or \\`{'${unexpected}'}\\`?`,\n  UnsupportedJsxValue:\n    \"JSX value should be either an expression or a quoted JSX text.\",\n  UnterminatedJsxContent: \"Unterminated JSX contents.\",\n  UnwrappedAdjacentJSXElements:\n    \"Adjacent JSX elements must be wrapped in an enclosing tag. Did you want a JSX fragment <>...</>?\",\n});\n\n/* eslint-disable sort-keys */\n\nfunction isFragment(object?: N.JSXElement | null): boolean {\n  return object\n    ? object.type === \"JSXOpeningFragment\" ||\n        object.type === \"JSXClosingFragment\"\n    : false;\n}\n\n// Transforms JSX element name to string.\n\nfunction getQualifiedJSXName(\n  object: N.JSXIdentifier | N.JSXNamespacedName | N.JSXMemberExpression,\n): string {\n  if (object.type === \"JSXIdentifier\") {\n    return object.name;\n  }\n\n  if (object.type === \"JSXNamespacedName\") {\n    return object.namespace.name + \":\" + object.name.name;\n  }\n\n  if (object.type === \"JSXMemberExpression\") {\n    return (\n      getQualifiedJSXName(object.object) +\n      \".\" +\n      getQualifiedJSXName(object.property)\n    );\n  }\n\n  // istanbul ignore next\n  throw new Error(\"Node had unexpected type: \" + object.type);\n}\n\nexport default (superClass: {\n  new (...args: any): Parser;\n}): {\n  new (...args: any): Parser;\n} =>\n  class extends superClass {\n    // Reads inline JSX contents token.\n\n    jsxReadToken(): void {\n      let out = \"\";\n      let chunkStart = this.state.pos;\n      for (;;) {\n        if (this.state.pos >= this.length) {\n          throw this.raise(JsxErrors.UnterminatedJsxContent, {\n            at: this.state.startLoc,\n          });\n        }\n\n        const ch = this.input.charCodeAt(this.state.pos);\n\n        switch (ch) {\n          case charCodes.lessThan:\n          case charCodes.leftCurlyBrace:\n            if (this.state.pos === this.state.start) {\n              if (ch === charCodes.lessThan && this.state.canStartJSXElement) {\n                ++this.state.pos;\n                return this.finishToken(tt.jsxTagStart);\n              }\n              return super.getTokenFromCode(ch);\n            }\n            out += this.input.slice(chunkStart, this.state.pos);\n            return this.finishToken(tt.jsxText, out);\n\n          case charCodes.ampersand:\n            out += this.input.slice(chunkStart, this.state.pos);\n            out += this.jsxReadEntity();\n            chunkStart = this.state.pos;\n            break;\n\n          case charCodes.greaterThan:\n          case charCodes.rightCurlyBrace:\n            if (process.env.BABEL_8_BREAKING) {\n              this.raise(JsxErrors.UnexpectedToken, {\n                at: this.state.curPosition(),\n                unexpected: this.input[this.state.pos],\n                HTMLEntity:\n                  ch === charCodes.rightCurlyBrace ? \"&rbrace;\" : \"&gt;\",\n              });\n            }\n          /* falls through */\n\n          default:\n            if (isNewLine(ch)) {\n              out += this.input.slice(chunkStart, this.state.pos);\n              out += this.jsxReadNewLine(true);\n              chunkStart = this.state.pos;\n            } else {\n              ++this.state.pos;\n            }\n        }\n      }\n    }\n\n    jsxReadNewLine(normalizeCRLF: boolean): string {\n      const ch = this.input.charCodeAt(this.state.pos);\n      let out;\n      ++this.state.pos;\n      if (\n        ch === charCodes.carriageReturn &&\n        this.input.charCodeAt(this.state.pos) === charCodes.lineFeed\n      ) {\n        ++this.state.pos;\n        out = normalizeCRLF ? \"\\n\" : \"\\r\\n\";\n      } else {\n        out = String.fromCharCode(ch);\n      }\n      ++this.state.curLine;\n      this.state.lineStart = this.state.pos;\n\n      return out;\n    }\n\n    jsxReadString(quote: number): void {\n      let out = \"\";\n      let chunkStart = ++this.state.pos;\n      for (;;) {\n        if (this.state.pos >= this.length) {\n          throw this.raise(Errors.UnterminatedString, {\n            at: this.state.startLoc,\n          });\n        }\n\n        const ch = this.input.charCodeAt(this.state.pos);\n        if (ch === quote) break;\n        if (ch === charCodes.ampersand) {\n          out += this.input.slice(chunkStart, this.state.pos);\n          out += this.jsxReadEntity();\n          chunkStart = this.state.pos;\n        } else if (isNewLine(ch)) {\n          out += this.input.slice(chunkStart, this.state.pos);\n          out += this.jsxReadNewLine(false);\n          chunkStart = this.state.pos;\n        } else {\n          ++this.state.pos;\n        }\n      }\n      out += this.input.slice(chunkStart, this.state.pos++);\n      return this.finishToken(tt.string, out);\n    }\n\n    jsxReadEntity(): string {\n      const startPos = ++this.state.pos;\n      if (this.codePointAtPos(this.state.pos) === charCodes.numberSign) {\n        ++this.state.pos;\n\n        let radix = 10;\n        if (this.codePointAtPos(this.state.pos) === charCodes.lowercaseX) {\n          radix = 16;\n          ++this.state.pos;\n        }\n\n        const codePoint = this.readInt(\n          radix,\n          /* len */ undefined,\n          /* forceLen */ false,\n          /* allowNumSeparator */ \"bail\",\n        );\n        if (\n          codePoint !== null &&\n          this.codePointAtPos(this.state.pos) === charCodes.semicolon\n        ) {\n          ++this.state.pos;\n          return String.fromCodePoint(codePoint);\n        }\n      } else {\n        let count = 0;\n        let semi = false;\n        while (\n          count++ < 10 &&\n          this.state.pos < this.length &&\n          !(semi = this.codePointAtPos(this.state.pos) == charCodes.semicolon)\n        ) {\n          ++this.state.pos;\n        }\n\n        if (semi) {\n          const desc = this.input.slice(startPos, this.state.pos);\n          const entity = XHTMLEntities[desc];\n          ++this.state.pos;\n\n          if (entity) {\n            return entity;\n          }\n        }\n      }\n\n      // Not a valid entity\n      this.state.pos = startPos;\n      return \"&\";\n    }\n\n    // Read a JSX identifier (valid tag or attribute name).\n    //\n    // Optimized version since JSX identifiers can\"t contain\n    // escape characters and so can be read as single slice.\n    // Also assumes that first character was already checked\n    // by isIdentifierStart in readToken.\n\n    jsxReadWord(): void {\n      let ch;\n      const start = this.state.pos;\n      do {\n        ch = this.input.charCodeAt(++this.state.pos);\n      } while (isIdentifierChar(ch) || ch === charCodes.dash);\n      return this.finishToken(\n        tt.jsxName,\n        this.input.slice(start, this.state.pos),\n      );\n    }\n\n    // Parse next token as JSX identifier\n\n    jsxParseIdentifier(): N.JSXIdentifier {\n      const node = this.startNode();\n      if (this.match(tt.jsxName)) {\n        node.name = this.state.value;\n      } else if (tokenIsKeyword(this.state.type)) {\n        node.name = tokenLabelName(this.state.type);\n      } else {\n        this.unexpected();\n      }\n      this.next();\n      return this.finishNode(node, \"JSXIdentifier\");\n    }\n\n    // Parse namespaced identifier.\n\n    jsxParseNamespacedName(): N.JSXNamespacedName {\n      const startPos = this.state.start;\n      const startLoc = this.state.startLoc;\n      const name = this.jsxParseIdentifier();\n      if (!this.eat(tt.colon)) return name;\n\n      const node = this.startNodeAt(startPos, startLoc);\n      node.namespace = name;\n      node.name = this.jsxParseIdentifier();\n      return this.finishNode(node, \"JSXNamespacedName\");\n    }\n\n    // Parses element name in any form - namespaced, member\n    // or single identifier.\n\n    jsxParseElementName():\n      | N.JSXIdentifier\n      | N.JSXNamespacedName\n      | N.JSXMemberExpression {\n      const startPos = this.state.start;\n      const startLoc = this.state.startLoc;\n      let node = this.jsxParseNamespacedName();\n      if (node.type === \"JSXNamespacedName\") {\n        return node;\n      }\n      while (this.eat(tt.dot)) {\n        const newNode = this.startNodeAt(startPos, startLoc);\n        newNode.object = node;\n        newNode.property = this.jsxParseIdentifier();\n        node = this.finishNode(newNode, \"JSXMemberExpression\");\n      }\n      return node;\n    }\n\n    // Parses any type of JSX attribute value.\n\n    jsxParseAttributeValue(): N.Expression {\n      let node;\n      switch (this.state.type) {\n        case tt.braceL:\n          node = this.startNode();\n          this.setContext(tc.brace);\n          this.next();\n          node = this.jsxParseExpressionContainer(node, tc.j_oTag);\n          if (node.expression.type === \"JSXEmptyExpression\") {\n            this.raise(JsxErrors.AttributeIsEmpty, { at: node });\n          }\n          return node;\n\n        case tt.jsxTagStart:\n        case tt.string:\n          return this.parseExprAtom();\n\n        default:\n          throw this.raise(JsxErrors.UnsupportedJsxValue, {\n            at: this.state.startLoc,\n          });\n      }\n    }\n\n    // JSXEmptyExpression is unique type since it doesn't actually parse anything,\n    // and so it should start at the end of last read token (left brace) and finish\n    // at the beginning of the next one (right brace).\n\n    jsxParseEmptyExpression(): N.JSXEmptyExpression {\n      const node = this.startNodeAt(\n        this.state.lastTokEndLoc.index,\n        this.state.lastTokEndLoc,\n      );\n      return this.finishNodeAt(node, \"JSXEmptyExpression\", this.state.startLoc);\n    }\n\n    // Parse JSX spread child\n\n    jsxParseSpreadChild(node: Undone<N.JSXSpreadChild>): N.JSXSpreadChild {\n      this.next(); // ellipsis\n      node.expression = this.parseExpression();\n      this.setContext(tc.j_oTag);\n      this.state.canStartJSXElement = true;\n      this.expect(tt.braceR);\n\n      return this.finishNode(node, \"JSXSpreadChild\");\n    }\n\n    // Parses JSX expression enclosed into curly brackets.\n\n    jsxParseExpressionContainer(\n      node: Undone<N.JSXExpressionContainer>,\n      previousContext: TokContext,\n    ): N.JSXExpressionContainer {\n      if (this.match(tt.braceR)) {\n        node.expression = this.jsxParseEmptyExpression();\n      } else {\n        const expression = this.parseExpression();\n\n        if (process.env.BABEL_8_BREAKING) {\n          if (\n            expression.type === \"SequenceExpression\" &&\n            !expression.extra?.parenthesized\n          ) {\n            this.raise(JsxErrors.UnexpectedSequenceExpression, {\n              at: expression.expressions[1],\n            });\n          }\n        }\n\n        node.expression = expression;\n      }\n      this.setContext(previousContext);\n      this.state.canStartJSXElement = true;\n      this.expect(tt.braceR);\n\n      return this.finishNode(node, \"JSXExpressionContainer\");\n    }\n\n    // Parses following JSX attribute name-value pair.\n\n    jsxParseAttribute(): N.JSXAttribute {\n      const node = this.startNode();\n      if (this.match(tt.braceL)) {\n        this.setContext(tc.brace);\n        this.next();\n        this.expect(tt.ellipsis);\n        node.argument = this.parseMaybeAssignAllowIn();\n        this.setContext(tc.j_oTag);\n        this.state.canStartJSXElement = true;\n        this.expect(tt.braceR);\n        return this.finishNode(node, \"JSXSpreadAttribute\");\n      }\n      node.name = this.jsxParseNamespacedName();\n      node.value = this.eat(tt.eq) ? this.jsxParseAttributeValue() : null;\n      return this.finishNode(node, \"JSXAttribute\");\n    }\n\n    // Parses JSX opening tag starting after \"<\".\n\n    jsxParseOpeningElementAt(\n      startPos: number,\n      startLoc: Position,\n    ): N.JSXOpeningElement {\n      const node = this.startNodeAt<N.JSXOpeningElement | N.JSXOpeningFragment>(\n        startPos,\n        startLoc,\n      );\n      if (this.eat(tt.jsxTagEnd)) {\n        // @ts-expect-error migrate to Babel types\n        return this.finishNode(node, \"JSXOpeningFragment\");\n      }\n      node.name = this.jsxParseElementName();\n      return this.jsxParseOpeningElementAfterName(\n        node as Undone<N.JSXOpeningElement>,\n      );\n    }\n\n    jsxParseOpeningElementAfterName(\n      node: Undone<N.JSXOpeningElement>,\n    ): N.JSXOpeningElement {\n      const attributes: N.JSXAttribute[] = [];\n      while (!this.match(tt.slash) && !this.match(tt.jsxTagEnd)) {\n        attributes.push(this.jsxParseAttribute());\n      }\n      node.attributes = attributes;\n      node.selfClosing = this.eat(tt.slash);\n      this.expect(tt.jsxTagEnd);\n      return this.finishNode(node, \"JSXOpeningElement\");\n    }\n\n    // Parses JSX closing tag starting after \"</\".\n\n    jsxParseClosingElementAt(\n      startPos: number,\n      startLoc: Position,\n    ): N.JSXClosingElement {\n      const node = this.startNodeAt(startPos, startLoc);\n      if (this.eat(tt.jsxTagEnd)) {\n        return this.finishNode(node, \"JSXClosingFragment\");\n      }\n      node.name = this.jsxParseElementName();\n      this.expect(tt.jsxTagEnd);\n      return this.finishNode(node, \"JSXClosingElement\");\n    }\n\n    // Parses entire JSX element, including it\"s opening tag\n    // (starting after \"<\"), attributes, contents and closing tag.\n\n    jsxParseElementAt(startPos: number, startLoc: Position): N.JSXElement {\n      const node = this.startNodeAt(startPos, startLoc);\n      const children = [];\n      const openingElement = this.jsxParseOpeningElementAt(startPos, startLoc);\n      let closingElement = null;\n\n      if (!openingElement.selfClosing) {\n        contents: for (;;) {\n          switch (this.state.type) {\n            case tt.jsxTagStart:\n              startPos = this.state.start;\n              startLoc = this.state.startLoc;\n              this.next();\n              if (this.eat(tt.slash)) {\n                closingElement = this.jsxParseClosingElementAt(\n                  startPos,\n                  startLoc,\n                );\n                break contents;\n              }\n              children.push(this.jsxParseElementAt(startPos, startLoc));\n              break;\n\n            case tt.jsxText:\n              children.push(this.parseExprAtom());\n              break;\n\n            case tt.braceL: {\n              const node = this.startNode<\n                N.JSXSpreadChild | N.JSXExpressionContainer\n              >();\n              this.setContext(tc.brace);\n              this.next();\n              if (this.match(tt.ellipsis)) {\n                children.push(\n                  this.jsxParseSpreadChild(node as Undone<N.JSXSpreadChild>),\n                );\n              } else {\n                children.push(\n                  this.jsxParseExpressionContainer(\n                    node as Undone<N.JSXExpressionContainer>,\n                    tc.j_expr,\n                  ),\n                );\n              }\n\n              break;\n            }\n            // istanbul ignore next - should never happen\n            default:\n              throw this.unexpected();\n          }\n        }\n\n        if (\n          isFragment(openingElement) &&\n          !isFragment(closingElement) &&\n          closingElement !== null\n        ) {\n          this.raise(JsxErrors.MissingClosingTagFragment, {\n            at: closingElement,\n          });\n        } else if (!isFragment(openingElement) && isFragment(closingElement)) {\n          this.raise(JsxErrors.MissingClosingTagElement, {\n            at: closingElement,\n            openingTagName: getQualifiedJSXName(openingElement.name),\n          });\n        } else if (!isFragment(openingElement) && !isFragment(closingElement)) {\n          if (\n            getQualifiedJSXName(closingElement.name) !==\n            getQualifiedJSXName(openingElement.name)\n          ) {\n            this.raise(JsxErrors.MissingClosingTagElement, {\n              at: closingElement,\n              openingTagName: getQualifiedJSXName(openingElement.name),\n            });\n          }\n        }\n      }\n\n      if (isFragment(openingElement)) {\n        node.openingFragment = openingElement;\n        node.closingFragment = closingElement;\n      } else {\n        node.openingElement = openingElement;\n        node.closingElement = closingElement;\n      }\n      node.children = children;\n      if (this.match(tt.lt)) {\n        throw this.raise(JsxErrors.UnwrappedAdjacentJSXElements, {\n          at: this.state.startLoc,\n        });\n      }\n\n      return isFragment(openingElement)\n        ? this.finishNode(node, \"JSXFragment\")\n        : this.finishNode(node, \"JSXElement\");\n    }\n\n    // Parses entire JSX element from current position.\n\n    jsxParseElement(): N.JSXElement {\n      const startPos = this.state.start;\n      const startLoc = this.state.startLoc;\n      this.next();\n      return this.jsxParseElementAt(startPos, startLoc);\n    }\n\n    setContext(newContext: TokContext) {\n      const { context } = this.state;\n      context[context.length - 1] = newContext;\n    }\n\n    // ==================================\n    // Overrides\n    // ==================================\n\n    parseExprAtom(refExpressionErrors?: ExpressionErrors | null): N.Expression {\n      if (this.match(tt.jsxText)) {\n        return this.parseLiteral(this.state.value, \"JSXText\");\n      } else if (this.match(tt.jsxTagStart)) {\n        return this.jsxParseElement();\n      } else if (\n        this.match(tt.lt) &&\n        this.input.charCodeAt(this.state.pos) !== charCodes.exclamationMark\n      ) {\n        // In case we encounter an lt token here it will always be the start of\n        // jsx as the lt sign is not allowed in places that expect an expression\n        this.replaceToken(tt.jsxTagStart);\n        return this.jsxParseElement();\n      } else {\n        return super.parseExprAtom(refExpressionErrors);\n      }\n    }\n\n    skipSpace() {\n      const curContext = this.curContext();\n      if (!curContext.preserveSpace) super.skipSpace();\n    }\n\n    getTokenFromCode(code: number): void {\n      const context = this.curContext();\n\n      if (context === tc.j_expr) {\n        return this.jsxReadToken();\n      }\n\n      if (context === tc.j_oTag || context === tc.j_cTag) {\n        if (isIdentifierStart(code)) {\n          return this.jsxReadWord();\n        }\n\n        if (code === charCodes.greaterThan) {\n          ++this.state.pos;\n          return this.finishToken(tt.jsxTagEnd);\n        }\n\n        if (\n          (code === charCodes.quotationMark || code === charCodes.apostrophe) &&\n          context === tc.j_oTag\n        ) {\n          return this.jsxReadString(code);\n        }\n      }\n\n      if (\n        code === charCodes.lessThan &&\n        this.state.canStartJSXElement &&\n        this.input.charCodeAt(this.state.pos + 1) !== charCodes.exclamationMark\n      ) {\n        ++this.state.pos;\n        return this.finishToken(tt.jsxTagStart);\n      }\n\n      return super.getTokenFromCode(code);\n    }\n\n    updateContext(prevType: TokenType): void {\n      const { context, type } = this.state;\n      if (type === tt.slash && prevType === tt.jsxTagStart) {\n        // do not consider JSX expr -> JSX open tag -> ... anymore\n        // reconsider as closing tag context\n        context.splice(-2, 2, tc.j_cTag);\n        this.state.canStartJSXElement = false;\n      } else if (type === tt.jsxTagStart) {\n        // start opening tag context\n        context.push(tc.j_oTag);\n      } else if (type === tt.jsxTagEnd) {\n        const out = context[context.length - 1];\n        if ((out === tc.j_oTag && prevType === tt.slash) || out === tc.j_cTag) {\n          context.pop();\n          this.state.canStartJSXElement =\n            context[context.length - 1] === tc.j_expr;\n        } else {\n          this.setContext(tc.j_expr);\n          this.state.canStartJSXElement = true;\n        }\n      } else {\n        this.state.canStartJSXElement = tokenComesBeforeExpression(type);\n      }\n    }\n  };\n","import { Position } from \"../../util/location\";\nimport ScopeHandler, { Scope } from \"../../util/scope\";\nimport {\n  BIND_KIND_TYPE,\n  BIND_FLAGS_TS_ENUM,\n  BIND_FLAGS_TS_CONST_ENUM,\n  BIND_FLAGS_TS_EXPORT_ONLY,\n  BIND_KIND_VALUE,\n  BIND_FLAGS_CLASS,\n  type ScopeFlags,\n  type BindingTypes,\n} from \"../../util/scopeflags\";\nimport * as N from \"../../types\";\n\nclass TypeScriptScope extends Scope {\n  types: Set<string> = new Set();\n\n  // enums (which are also in .types)\n  enums: Set<string> = new Set();\n\n  // const enums (which are also in .enums and .types)\n  constEnums: Set<string> = new Set();\n\n  // classes (which are also in .lexical) and interface (which are also in .types)\n  classes: Set<string> = new Set();\n\n  // namespaces and ambient functions (or classes) are too difficult to track,\n  // especially without type analysis.\n  // We need to track them anyway, to avoid \"X is not defined\" errors\n  // when exporting them.\n  exportOnlyBindings: Set<string> = new Set();\n}\n\n// See https://github.com/babel/babel/pull/9766#discussion_r268920730 for an\n// explanation of how typescript handles scope.\n\nexport default class TypeScriptScopeHandler extends ScopeHandler<TypeScriptScope> {\n  createScope(flags: ScopeFlags): TypeScriptScope {\n    return new TypeScriptScope(flags);\n  }\n\n  declareName(name: string, bindingType: BindingTypes, loc: Position) {\n    const scope = this.currentScope();\n    if (bindingType & BIND_FLAGS_TS_EXPORT_ONLY) {\n      this.maybeExportDefined(scope, name);\n      scope.exportOnlyBindings.add(name);\n      return;\n    }\n\n    super.declareName(name, bindingType, loc);\n\n    if (bindingType & BIND_KIND_TYPE) {\n      if (!(bindingType & BIND_KIND_VALUE)) {\n        // \"Value\" bindings have already been registered by the superclass.\n        this.checkRedeclarationInScope(scope, name, bindingType, loc);\n        this.maybeExportDefined(scope, name);\n      }\n      scope.types.add(name);\n    }\n    if (bindingType & BIND_FLAGS_TS_ENUM) scope.enums.add(name);\n    if (bindingType & BIND_FLAGS_TS_CONST_ENUM) scope.constEnums.add(name);\n    if (bindingType & BIND_FLAGS_CLASS) scope.classes.add(name);\n  }\n\n  isRedeclaredInScope(\n    scope: TypeScriptScope,\n    name: string,\n    bindingType: BindingTypes,\n  ): boolean {\n    if (scope.enums.has(name)) {\n      if (bindingType & BIND_FLAGS_TS_ENUM) {\n        // Enums can be merged with other enums if they are both\n        //  const or both non-const.\n        const isConst = !!(bindingType & BIND_FLAGS_TS_CONST_ENUM);\n        const wasConst = scope.constEnums.has(name);\n        return isConst !== wasConst;\n      }\n      return true;\n    }\n    if (bindingType & BIND_FLAGS_CLASS && scope.classes.has(name)) {\n      if (scope.lexical.has(name)) {\n        // Classes can be merged with interfaces\n        return !!(bindingType & BIND_KIND_VALUE);\n      } else {\n        // Interface can be merged with other classes or interfaces\n        return false;\n      }\n    }\n    if (bindingType & BIND_KIND_TYPE && scope.types.has(name)) {\n      return true;\n    }\n\n    return super.isRedeclaredInScope(scope, name, bindingType);\n  }\n\n  checkLocalExport(id: N.Identifier) {\n    const topLevelScope = this.scopeStack[0];\n    const { name } = id;\n    if (\n      !topLevelScope.types.has(name) &&\n      !topLevelScope.exportOnlyBindings.has(name)\n    ) {\n      super.checkLocalExport(id);\n    }\n  }\n}\n","/*:: declare var invariant; */\n\nimport type State from \"../../tokenizer/state\";\nimport {\n  tokenIsIdentifier,\n  tokenIsTSDeclarationStart,\n  tokenIsTSTypeOperator,\n  tokenOperatorPrecedence,\n  tokenIsKeywordOrIdentifier,\n  tt,\n  type TokenType,\n  tokenIsTemplate,\n  tokenCanStartExpression,\n} from \"../../tokenizer/types\";\nimport { types as tc } from \"../../tokenizer/context\";\nimport * as N from \"../../types\";\nimport { Position, createPositionWithColumnOffset } from \"../../util/location\";\nimport type Parser from \"../../parser\";\nimport {\n  type BindingTypes,\n  SCOPE_TS_MODULE,\n  SCOPE_OTHER,\n  BIND_TS_ENUM,\n  BIND_TS_CONST_ENUM,\n  BIND_TS_TYPE,\n  BIND_TS_INTERFACE,\n  BIND_TS_AMBIENT,\n  BIND_TS_NAMESPACE,\n  BIND_CLASS,\n  BIND_LEXICAL,\n  BIND_NONE,\n} from \"../../util/scopeflags\";\nimport TypeScriptScopeHandler from \"./scope\";\nimport * as charCodes from \"charcodes\";\nimport type { ExpressionErrors } from \"../../parser/util\";\nimport { PARAM } from \"../../util/production-parameter\";\nimport { Errors, ParseErrorEnum } from \"../../parse-error\";\nimport { cloneIdentifier, type Undone } from \"../../parser/node\";\n\nconst getOwn = <T extends {}>(object: T, key: keyof T) =>\n  Object.hasOwnProperty.call(object, key) && object[key];\n\ntype TsModifier =\n  | \"readonly\"\n  | \"abstract\"\n  | \"declare\"\n  | \"static\"\n  | \"override\"\n  | N.Accessibility\n  | N.VarianceAnnotations;\n\nfunction nonNull<T>(x?: T | null): T {\n  if (x == null) {\n    throw new Error(`Unexpected ${x} value.`);\n  }\n  return x;\n}\n\nfunction assert(x: boolean): void {\n  if (!x) {\n    throw new Error(\"Assert fail\");\n  }\n}\n\ntype ParsingContext =\n  | \"EnumMembers\"\n  | \"HeritageClauseElement\"\n  | \"TupleElementTypes\"\n  | \"TypeMembers\"\n  | \"TypeParametersOrArguments\";\n\ntype ModifierBase = {\n  accessibility?: N.Accessibility;\n} & {\n  [key in TsModifier]?: boolean | undefined | null;\n};\n\n/* eslint sort-keys: \"error\" */\nconst TSErrors = ParseErrorEnum`typescript`({\n  AbstractMethodHasImplementation: ({ methodName }: { methodName: string }) =>\n    `Method '${methodName}' cannot have an implementation because it is marked abstract.`,\n  AbstractPropertyHasInitializer: ({\n    propertyName,\n  }: {\n    propertyName: string;\n  }) =>\n    `Property '${propertyName}' cannot have an initializer because it is marked abstract.`,\n  AccesorCannotDeclareThisParameter:\n    \"'get' and 'set' accessors cannot declare 'this' parameters.\",\n  AccesorCannotHaveTypeParameters: \"An accessor cannot have type parameters.\",\n  CannotFindName: ({ name }: { name: string }) => `Cannot find name '${name}'.`,\n  ClassMethodHasDeclare: \"Class methods cannot have the 'declare' modifier.\",\n  ClassMethodHasReadonly: \"Class methods cannot have the 'readonly' modifier.\",\n  ConstInitiailizerMustBeStringOrNumericLiteralOrLiteralEnumReference:\n    \"A 'const' initializer in an ambient context must be a string or numeric literal or literal enum reference.\",\n  ConstructorHasTypeParameters:\n    \"Type parameters cannot appear on a constructor declaration.\",\n  DeclareAccessor: ({ kind }: { kind: \"get\" | \"set\" }) =>\n    `'declare' is not allowed in ${kind}ters.`,\n  DeclareClassFieldHasInitializer:\n    \"Initializers are not allowed in ambient contexts.\",\n  DeclareFunctionHasImplementation:\n    \"An implementation cannot be declared in ambient contexts.\",\n  DuplicateAccessibilityModifier:\n    // `Accessibility modifier already seen: ${modifier}` would be more helpful.\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    ({ modifier }: { modifier: N.Accessibility }) =>\n      `Accessibility modifier already seen.`,\n  DuplicateModifier: ({ modifier }: { modifier: TsModifier }) =>\n    `Duplicate modifier: '${modifier}'.`,\n  // `token` matches the terminology used by typescript:\n  // https://github.com/microsoft/TypeScript/blob/main/src/compiler/types.ts#L2915\n  EmptyHeritageClauseType: ({ token }: { token: \"extends\" | \"implements\" }) =>\n    `'${token}' list cannot be empty.`,\n  EmptyTypeArguments: \"Type argument list cannot be empty.\",\n  EmptyTypeParameters: \"Type parameter list cannot be empty.\",\n  ExpectedAmbientAfterExportDeclare:\n    \"'export declare' must be followed by an ambient declaration.\",\n  ImportAliasHasImportType: \"An import alias can not use 'import type'.\",\n  IncompatibleModifiers: ({\n    modifiers,\n  }: {\n    modifiers: [TsModifier, TsModifier];\n  }) =>\n    `'${modifiers[0]}' modifier cannot be used with '${modifiers[1]}' modifier.`,\n  IndexSignatureHasAbstract:\n    \"Index signatures cannot have the 'abstract' modifier.\",\n  IndexSignatureHasAccessibility: ({\n    modifier,\n  }: {\n    modifier: N.Accessibility;\n  }) =>\n    `Index signatures cannot have an accessibility modifier ('${modifier}').`,\n  IndexSignatureHasDeclare:\n    \"Index signatures cannot have the 'declare' modifier.\",\n  IndexSignatureHasOverride:\n    \"'override' modifier cannot appear on an index signature.\",\n  IndexSignatureHasStatic:\n    \"Index signatures cannot have the 'static' modifier.\",\n  InitializerNotAllowedInAmbientContext:\n    \"Initializers are not allowed in ambient contexts.\",\n  InvalidModifierOnTypeMember: ({ modifier }: { modifier: TsModifier }) =>\n    `'${modifier}' modifier cannot appear on a type member.`,\n  InvalidModifierOnTypeParameter: ({ modifier }: { modifier: TsModifier }) =>\n    `'${modifier}' modifier cannot appear on a type parameter.`,\n  InvalidModifierOnTypeParameterPositions: ({\n    modifier,\n  }: {\n    modifier: TsModifier;\n  }) =>\n    `'${modifier}' modifier can only appear on a type parameter of a class, interface or type alias.`,\n  InvalidModifiersOrder: ({\n    orderedModifiers,\n  }: {\n    orderedModifiers: [TsModifier, TsModifier];\n  }) =>\n    `'${orderedModifiers[0]}' modifier must precede '${orderedModifiers[1]}' modifier.`,\n  InvalidPropertyAccessAfterInstantiationExpression:\n    \"Invalid property access after an instantiation expression. \" +\n    \"You can either wrap the instantiation expression in parentheses, or delete the type arguments.\",\n  InvalidTupleMemberLabel:\n    \"Tuple members must be labeled with a simple identifier.\",\n  MissingInterfaceName:\n    \"'interface' declarations must be followed by an identifier.\",\n  MixedLabeledAndUnlabeledElements:\n    \"Tuple members must all have names or all not have names.\",\n  NonAbstractClassHasAbstractMethod:\n    \"Abstract methods can only appear within an abstract class.\",\n  NonClassMethodPropertyHasAbstractModifer:\n    \"'abstract' modifier can only appear on a class, method, or property declaration.\",\n  OptionalTypeBeforeRequired:\n    \"A required element cannot follow an optional element.\",\n  OverrideNotInSubClass:\n    \"This member cannot have an 'override' modifier because its containing class does not extend another class.\",\n  PatternIsOptional:\n    \"A binding pattern parameter cannot be optional in an implementation signature.\",\n  PrivateElementHasAbstract:\n    \"Private elements cannot have the 'abstract' modifier.\",\n  PrivateElementHasAccessibility: ({\n    modifier,\n  }: {\n    modifier: N.Accessibility;\n  }) =>\n    `Private elements cannot have an accessibility modifier ('${modifier}').`,\n  ReadonlyForMethodSignature:\n    \"'readonly' modifier can only appear on a property declaration or index signature.\",\n  ReservedArrowTypeParam:\n    \"This syntax is reserved in files with the .mts or .cts extension. Add a trailing comma, as in `<T,>() => ...`.\",\n  ReservedTypeAssertion:\n    \"This syntax is reserved in files with the .mts or .cts extension. Use an `as` expression instead.\",\n  SetAccesorCannotHaveOptionalParameter:\n    \"A 'set' accessor cannot have an optional parameter.\",\n  SetAccesorCannotHaveRestParameter:\n    \"A 'set' accessor cannot have rest parameter.\",\n  SetAccesorCannotHaveReturnType:\n    \"A 'set' accessor cannot have a return type annotation.\",\n  SingleTypeParameterWithoutTrailingComma: ({\n    typeParameterName,\n  }: {\n    typeParameterName: string;\n  }) =>\n    `Single type parameter ${typeParameterName} should have a trailing comma. Example usage: <${typeParameterName},>.`,\n  StaticBlockCannotHaveModifier:\n    \"Static class blocks cannot have any modifier.\",\n  TypeAnnotationAfterAssign:\n    \"Type annotations must come before default assignments, e.g. instead of `age = 25: number` use `age: number = 25`.\",\n  TypeImportCannotSpecifyDefaultAndNamed:\n    \"A type-only import can specify a default import or named bindings, but not both.\",\n  TypeModifierIsUsedInTypeExports:\n    \"The 'type' modifier cannot be used on a named export when 'export type' is used on its export statement.\",\n  TypeModifierIsUsedInTypeImports:\n    \"The 'type' modifier cannot be used on a named import when 'import type' is used on its import statement.\",\n  UnexpectedParameterModifier:\n    \"A parameter property is only allowed in a constructor implementation.\",\n  UnexpectedReadonly:\n    \"'readonly' type modifier is only permitted on array and tuple literal types.\",\n  UnexpectedTypeAnnotation: \"Did not expect a type annotation here.\",\n  UnexpectedTypeCastInParameter: \"Unexpected type cast in parameter position.\",\n  UnsupportedImportTypeArgument:\n    \"Argument in a type import must be a string literal.\",\n  UnsupportedParameterPropertyKind:\n    \"A parameter property may not be declared using a binding pattern.\",\n  UnsupportedSignatureParameterKind: ({ type }: { type: string }) =>\n    `Name in a signature must be an Identifier, ObjectPattern or ArrayPattern, instead got ${type}.`,\n});\n\n/* eslint-disable sort-keys */\n\n// Doesn't handle \"void\" or \"null\" because those are keywords, not identifiers.\n// It also doesn't handle \"intrinsic\", since usually it's not a keyword.\nfunction keywordTypeFromName(\n  value: string,\n): N.TsKeywordTypeType | typeof undefined {\n  switch (value) {\n    case \"any\":\n      return \"TSAnyKeyword\";\n    case \"boolean\":\n      return \"TSBooleanKeyword\";\n    case \"bigint\":\n      return \"TSBigIntKeyword\";\n    case \"never\":\n      return \"TSNeverKeyword\";\n    case \"number\":\n      return \"TSNumberKeyword\";\n    case \"object\":\n      return \"TSObjectKeyword\";\n    case \"string\":\n      return \"TSStringKeyword\";\n    case \"symbol\":\n      return \"TSSymbolKeyword\";\n    case \"undefined\":\n      return \"TSUndefinedKeyword\";\n    case \"unknown\":\n      return \"TSUnknownKeyword\";\n    default:\n      return undefined;\n  }\n}\n\nfunction tsIsAccessModifier(modifier: string): modifier is N.Accessibility {\n  return (\n    modifier === \"private\" || modifier === \"public\" || modifier === \"protected\"\n  );\n}\n\nfunction tsIsVarianceAnnotations(\n  modifier: string,\n): modifier is N.VarianceAnnotations {\n  return modifier === \"in\" || modifier === \"out\";\n}\n\nexport default (superClass: {\n  new (...args: any): Parser;\n}): {\n  new (...args: any): Parser;\n} =>\n  // @ts-expect-error plugin may override interfaces\n  class extends superClass {\n    getScopeHandler(): {\n      new (...args: any): TypeScriptScopeHandler;\n    } {\n      return TypeScriptScopeHandler;\n    }\n\n    tsIsIdentifier(): boolean {\n      // TODO: actually a bit more complex in TypeScript, but shouldn't matter.\n      // See https://github.com/Microsoft/TypeScript/issues/15008\n      return tokenIsIdentifier(this.state.type);\n    }\n\n    tsTokenCanFollowModifier() {\n      return (\n        (this.match(tt.bracketL) ||\n          this.match(tt.braceL) ||\n          this.match(tt.star) ||\n          this.match(tt.ellipsis) ||\n          this.match(tt.privateName) ||\n          this.isLiteralPropertyName()) &&\n        !this.hasPrecedingLineBreak()\n      );\n    }\n\n    tsNextTokenCanFollowModifier() {\n      // Note: TypeScript's implementation is much more complicated because\n      // more things are considered modifiers there.\n      // This implementation only handles modifiers not handled by @babel/parser itself. And \"static\".\n      // TODO: Would be nice to avoid lookahead. Want a hasLineBreakUpNext() method...\n      this.next();\n      return this.tsTokenCanFollowModifier();\n    }\n\n    /** Parses a modifier matching one the given modifier names. */\n    tsParseModifier<T extends TsModifier>(\n      allowedModifiers: T[],\n      stopOnStartOfClassStaticBlock?: boolean,\n    ): T | undefined | null {\n      if (!tokenIsIdentifier(this.state.type) && this.state.type !== tt._in) {\n        return undefined;\n      }\n\n      const modifier = this.state.value;\n      if (allowedModifiers.indexOf(modifier) !== -1) {\n        if (stopOnStartOfClassStaticBlock && this.tsIsStartOfStaticBlocks()) {\n          return undefined;\n        }\n        if (this.tsTryParse(this.tsNextTokenCanFollowModifier.bind(this))) {\n          return modifier;\n        }\n      }\n      return undefined;\n    }\n\n    /** Parses a list of modifiers, in any order.\n     *  If you need a specific order, you must call this function multiple times:\n     *    this.tsParseModifiers({ modified: node, allowedModifiers: [\"public\"] });\n     *    this.tsParseModifiers({ modified: node, allowedModifiers: [\"abstract\", \"readonly\"] });\n     */\n    tsParseModifiers({\n      modified,\n      allowedModifiers,\n      disallowedModifiers,\n      stopOnStartOfClassStaticBlock,\n      errorTemplate = TSErrors.InvalidModifierOnTypeMember,\n    }: {\n      modified: ModifierBase;\n      allowedModifiers: readonly TsModifier[];\n      disallowedModifiers?: TsModifier[];\n      stopOnStartOfClassStaticBlock?: boolean;\n      // FIXME: make sure errorTemplate can receive `modifier`\n      errorTemplate?: any;\n    }): void {\n      const enforceOrder = (\n        loc: Position,\n        modifier: TsModifier,\n        before: TsModifier,\n        after: TsModifier,\n      ) => {\n        if (modifier === before && modified[after]) {\n          this.raise(TSErrors.InvalidModifiersOrder, {\n            at: loc,\n            orderedModifiers: [before, after],\n          });\n        }\n      };\n      const incompatible = (\n        loc: Position,\n        modifier: TsModifier,\n        mod1: TsModifier,\n        mod2: TsModifier,\n      ) => {\n        if (\n          (modified[mod1] && modifier === mod2) ||\n          (modified[mod2] && modifier === mod1)\n        ) {\n          this.raise(TSErrors.IncompatibleModifiers, {\n            at: loc,\n            modifiers: [mod1, mod2],\n          });\n        }\n      };\n\n      for (;;) {\n        const { startLoc } = this.state;\n        const modifier: TsModifier | undefined | null = this.tsParseModifier(\n          allowedModifiers.concat(disallowedModifiers ?? []),\n          stopOnStartOfClassStaticBlock,\n        );\n\n        if (!modifier) break;\n\n        if (tsIsAccessModifier(modifier)) {\n          if (modified.accessibility) {\n            this.raise(TSErrors.DuplicateAccessibilityModifier, {\n              at: startLoc,\n              modifier,\n            });\n          } else {\n            enforceOrder(startLoc, modifier, modifier, \"override\");\n            enforceOrder(startLoc, modifier, modifier, \"static\");\n            enforceOrder(startLoc, modifier, modifier, \"readonly\");\n\n            modified.accessibility = modifier;\n          }\n        } else if (tsIsVarianceAnnotations(modifier)) {\n          if (modified[modifier]) {\n            this.raise(TSErrors.DuplicateModifier, { at: startLoc, modifier });\n          }\n          modified[modifier] = true;\n\n          enforceOrder(startLoc, modifier, \"in\", \"out\");\n        } else {\n          if (Object.hasOwnProperty.call(modified, modifier)) {\n            this.raise(TSErrors.DuplicateModifier, { at: startLoc, modifier });\n          } else {\n            enforceOrder(startLoc, modifier, \"static\", \"readonly\");\n            enforceOrder(startLoc, modifier, \"static\", \"override\");\n            enforceOrder(startLoc, modifier, \"override\", \"readonly\");\n            enforceOrder(startLoc, modifier, \"abstract\", \"override\");\n\n            incompatible(startLoc, modifier, \"declare\", \"override\");\n            incompatible(startLoc, modifier, \"static\", \"abstract\");\n          }\n          modified[modifier] = true;\n        }\n\n        if (disallowedModifiers?.includes(modifier)) {\n          this.raise(errorTemplate, {\n            at: startLoc,\n            modifier,\n          });\n        }\n      }\n    }\n\n    tsIsListTerminator(kind: ParsingContext): boolean {\n      switch (kind) {\n        case \"EnumMembers\":\n        case \"TypeMembers\":\n          return this.match(tt.braceR);\n        case \"HeritageClauseElement\":\n          return this.match(tt.braceL);\n        case \"TupleElementTypes\":\n          return this.match(tt.bracketR);\n        case \"TypeParametersOrArguments\":\n          return this.match(tt.gt);\n      }\n\n      throw new Error(\"Unreachable\");\n    }\n\n    tsParseList<T extends N.Node>(\n      kind: ParsingContext,\n      parseElement: () => T,\n    ): T[] {\n      const result: T[] = [];\n      while (!this.tsIsListTerminator(kind)) {\n        // Skipping \"parseListElement\" from the TS source since that's just for error handling.\n        result.push(parseElement());\n      }\n      return result;\n    }\n\n    tsParseDelimitedList<T extends N.Node>(\n      kind: ParsingContext,\n      parseElement: () => T,\n      refTrailingCommaPos?: {\n        value: number;\n      },\n    ): T[] {\n      return nonNull(\n        this.tsParseDelimitedListWorker(\n          kind,\n          parseElement,\n          /* expectSuccess */ true,\n          refTrailingCommaPos,\n        ),\n      );\n    }\n\n    /**\n     * If !expectSuccess, returns undefined instead of failing to parse.\n     * If expectSuccess, parseElement should always return a defined value.\n     */\n    tsParseDelimitedListWorker<T extends N.Node>(\n      kind: ParsingContext,\n      parseElement: () => T | undefined | null,\n      expectSuccess: boolean,\n      refTrailingCommaPos?: {\n        value: number;\n      },\n    ): T[] | undefined | null {\n      const result = [];\n      let trailingCommaPos = -1;\n\n      for (;;) {\n        if (this.tsIsListTerminator(kind)) {\n          break;\n        }\n        trailingCommaPos = -1;\n\n        const element = parseElement();\n        if (element == null) {\n          return undefined;\n        }\n        result.push(element);\n\n        if (this.eat(tt.comma)) {\n          trailingCommaPos = this.state.lastTokStart;\n          continue;\n        }\n\n        if (this.tsIsListTerminator(kind)) {\n          break;\n        }\n\n        if (expectSuccess) {\n          // This will fail with an error about a missing comma\n          this.expect(tt.comma);\n        }\n        return undefined;\n      }\n\n      if (refTrailingCommaPos) {\n        refTrailingCommaPos.value = trailingCommaPos;\n      }\n\n      return result;\n    }\n\n    tsParseBracketedList<T extends N.Node>(\n      kind: ParsingContext,\n      parseElement: () => T,\n      bracket: boolean,\n      skipFirstToken: boolean,\n      refTrailingCommaPos?: {\n        value: number;\n      },\n    ): T[] {\n      if (!skipFirstToken) {\n        if (bracket) {\n          this.expect(tt.bracketL);\n        } else {\n          this.expect(tt.lt);\n        }\n      }\n\n      const result = this.tsParseDelimitedList(\n        kind,\n        parseElement,\n        refTrailingCommaPos,\n      );\n\n      if (bracket) {\n        this.expect(tt.bracketR);\n      } else {\n        this.expect(tt.gt);\n      }\n\n      return result;\n    }\n\n    tsParseImportType(): N.TsImportType {\n      const node = this.startNode<N.TsImportType>();\n      this.expect(tt._import);\n      this.expect(tt.parenL);\n      if (!this.match(tt.string)) {\n        this.raise(TSErrors.UnsupportedImportTypeArgument, {\n          at: this.state.startLoc,\n        });\n      }\n\n      // For compatibility to estree we cannot call parseLiteral directly here\n      node.argument = super.parseExprAtom() as N.StringLiteral;\n      this.expect(tt.parenR);\n\n      if (this.eat(tt.dot)) {\n        // In this instance, the entity name will actually itself be a\n        // qualifier, so allow it to be a reserved word as well.\n        node.qualifier = this.tsParseEntityName();\n      }\n      if (this.match(tt.lt)) {\n        node.typeParameters = this.tsParseTypeArguments();\n      }\n      return this.finishNode(node, \"TSImportType\");\n    }\n\n    tsParseEntityName(allowReservedWords: boolean = true): N.TsEntityName {\n      let entity: N.TsEntityName = this.parseIdentifier(allowReservedWords);\n      while (this.eat(tt.dot)) {\n        const node: Undone<N.TsQualifiedName> =\n          this.startNodeAtNode<N.TsQualifiedName>(entity);\n        node.left = entity;\n        node.right = this.parseIdentifier(allowReservedWords);\n        entity = this.finishNode(node, \"TSQualifiedName\");\n      }\n      return entity;\n    }\n\n    tsParseTypeReference(): N.TsTypeReference {\n      const node = this.startNode<N.TsTypeReference>();\n      node.typeName = this.tsParseEntityName();\n      if (!this.hasPrecedingLineBreak() && this.match(tt.lt)) {\n        node.typeParameters = this.tsParseTypeArguments();\n      }\n      return this.finishNode(node, \"TSTypeReference\");\n    }\n\n    tsParseThisTypePredicate(lhs: N.TsThisType): N.TsTypePredicate {\n      this.next();\n      const node = this.startNodeAtNode<N.TsTypePredicate>(lhs);\n      node.parameterName = lhs;\n      node.typeAnnotation = this.tsParseTypeAnnotation(/* eatColon */ false);\n      node.asserts = false;\n      return this.finishNode(node, \"TSTypePredicate\");\n    }\n\n    tsParseThisTypeNode(): N.TsThisType {\n      const node = this.startNode<N.TsThisType>();\n      this.next();\n      return this.finishNode(node, \"TSThisType\");\n    }\n\n    tsParseTypeQuery(): N.TsTypeQuery {\n      const node = this.startNode<N.TsTypeQuery>();\n      this.expect(tt._typeof);\n      if (this.match(tt._import)) {\n        node.exprName = this.tsParseImportType();\n      } else {\n        node.exprName = this.tsParseEntityName();\n      }\n      if (!this.hasPrecedingLineBreak() && this.match(tt.lt)) {\n        node.typeParameters = this.tsParseTypeArguments();\n      }\n      return this.finishNode(node, \"TSTypeQuery\");\n    }\n\n    tsParseInOutModifiers(node: N.TsTypeParameter) {\n      this.tsParseModifiers({\n        modified: node,\n        allowedModifiers: [\"in\", \"out\"],\n        disallowedModifiers: [\n          \"public\",\n          \"private\",\n          \"protected\",\n          \"readonly\",\n          \"declare\",\n          \"abstract\",\n          \"override\",\n        ],\n        errorTemplate: TSErrors.InvalidModifierOnTypeParameter,\n      });\n    }\n\n    // for better error recover\n    tsParseNoneModifiers(node: N.TsTypeParameter) {\n      this.tsParseModifiers({\n        modified: node,\n        allowedModifiers: [],\n        disallowedModifiers: [\"in\", \"out\"],\n        errorTemplate: TSErrors.InvalidModifierOnTypeParameterPositions,\n      });\n    }\n\n    tsParseTypeParameter(\n      parseModifiers: (\n        node: Undone<N.TsTypeParameter>,\n      ) => void = this.tsParseNoneModifiers.bind(this),\n    ): N.TsTypeParameter {\n      const node = this.startNode<N.TsTypeParameter>();\n\n      parseModifiers(node);\n\n      node.name = this.tsParseTypeParameterName();\n      node.constraint = this.tsEatThenParseType(tt._extends);\n      node.default = this.tsEatThenParseType(tt.eq);\n      return this.finishNode(node, \"TSTypeParameter\");\n    }\n\n    tsTryParseTypeParameters(\n      parseModifiers?: ((node: N.TsTypeParameter) => void) | null,\n    ): N.TsTypeParameterDeclaration | undefined | null {\n      if (this.match(tt.lt)) {\n        return this.tsParseTypeParameters(parseModifiers);\n      }\n    }\n\n    tsParseTypeParameters(\n      parseModifiers?: ((node: N.TsTypeParameter) => void) | null,\n    ) {\n      const node = this.startNode<N.TsTypeParameterDeclaration>();\n\n      if (this.match(tt.lt) || this.match(tt.jsxTagStart)) {\n        this.next();\n      } else {\n        this.unexpected();\n      }\n\n      const refTrailingCommaPos = { value: -1 };\n\n      node.params = this.tsParseBracketedList(\n        \"TypeParametersOrArguments\",\n        // @ts-expect-error refine typings\n        this.tsParseTypeParameter.bind(this, parseModifiers),\n        /* bracket */ false,\n        /* skipFirstToken */ true,\n        refTrailingCommaPos,\n      );\n      if (node.params.length === 0) {\n        this.raise(TSErrors.EmptyTypeParameters, { at: node });\n      }\n      if (refTrailingCommaPos.value !== -1) {\n        this.addExtra(node, \"trailingComma\", refTrailingCommaPos.value);\n      }\n      return this.finishNode(node, \"TSTypeParameterDeclaration\");\n    }\n\n    tsTryNextParseConstantContext(): N.TsTypeReference | undefined | null {\n      if (this.lookahead().type !== tt._const) return null;\n\n      this.next();\n      const typeReference = this.tsParseTypeReference();\n\n      // If the type reference has type parameters, then you are using it as a\n      // type and not as a const signifier. We'll *never* be able to find this\n      // name, since const isn't allowed as a type name. So in this instance we\n      // get to pretend we're the type checker.\n      if (typeReference.typeParameters) {\n        this.raise(TSErrors.CannotFindName, {\n          at: typeReference.typeName,\n          name: \"const\",\n        });\n      }\n\n      return typeReference;\n    }\n\n    // Note: In TypeScript implementation we must provide `yieldContext` and `awaitContext`,\n    // but here it's always false, because this is only used for types.\n    tsFillSignature(\n      returnToken: TokenType,\n      signature: Undone<N.TsSignatureDeclaration>,\n    ): void {\n      // Arrow fns *must* have return token (`=>`). Normal functions can omit it.\n      const returnTokenRequired = returnToken === tt.arrow;\n\n      // https://github.com/babel/babel/issues/9231\n      const paramsKey = process.env.BABEL_8_BREAKING ? \"params\" : \"parameters\";\n      const returnTypeKey = process.env.BABEL_8_BREAKING\n        ? \"returnType\"\n        : \"typeAnnotation\";\n\n      signature.typeParameters = this.tsTryParseTypeParameters();\n      this.expect(tt.parenL);\n      signature[paramsKey] = this.tsParseBindingListForSignature();\n      if (returnTokenRequired) {\n        signature[returnTypeKey] =\n          this.tsParseTypeOrTypePredicateAnnotation(returnToken);\n      } else if (this.match(returnToken)) {\n        signature[returnTypeKey] =\n          this.tsParseTypeOrTypePredicateAnnotation(returnToken);\n      }\n    }\n\n    tsParseBindingListForSignature(): Array<\n      N.Identifier | N.RestElement | N.ObjectPattern | N.ArrayPattern\n    > {\n      return super\n        .parseBindingList(tt.parenR, charCodes.rightParenthesis)\n        .map(pattern => {\n          if (\n            pattern.type !== \"Identifier\" &&\n            pattern.type !== \"RestElement\" &&\n            pattern.type !== \"ObjectPattern\" &&\n            pattern.type !== \"ArrayPattern\"\n          ) {\n            this.raise(TSErrors.UnsupportedSignatureParameterKind, {\n              at: pattern,\n              type: pattern.type,\n            });\n          }\n          return pattern as any;\n        });\n    }\n\n    tsParseTypeMemberSemicolon(): void {\n      if (!this.eat(tt.comma) && !this.isLineTerminator()) {\n        this.expect(tt.semi);\n      }\n    }\n\n    tsParseSignatureMember(\n      kind: \"TSCallSignatureDeclaration\" | \"TSConstructSignatureDeclaration\",\n      node: Undone<\n        N.TsCallSignatureDeclaration | N.TsConstructSignatureDeclaration\n      >,\n    ): N.TsCallSignatureDeclaration | N.TsConstructSignatureDeclaration {\n      this.tsFillSignature(tt.colon, node);\n      this.tsParseTypeMemberSemicolon();\n      return this.finishNode(node, kind);\n    }\n\n    tsIsUnambiguouslyIndexSignature() {\n      this.next(); // Skip '{'\n      if (tokenIsIdentifier(this.state.type)) {\n        this.next();\n        return this.match(tt.colon);\n      }\n      return false;\n    }\n\n    tsTryParseIndexSignature(\n      node: Undone<N.TsIndexSignature>,\n    ): N.TsIndexSignature | undefined | null {\n      if (\n        !(\n          this.match(tt.bracketL) &&\n          this.tsLookAhead(this.tsIsUnambiguouslyIndexSignature.bind(this))\n        )\n      ) {\n        return undefined;\n      }\n\n      this.expect(tt.bracketL);\n      const id = this.parseIdentifier();\n      id.typeAnnotation = this.tsParseTypeAnnotation();\n      this.resetEndLocation(id); // set end position to end of type\n\n      this.expect(tt.bracketR);\n      node.parameters = [id];\n\n      const type = this.tsTryParseTypeAnnotation();\n      if (type) node.typeAnnotation = type;\n      this.tsParseTypeMemberSemicolon();\n      return this.finishNode(node, \"TSIndexSignature\");\n    }\n\n    tsParsePropertyOrMethodSignature(\n      node: N.TsPropertySignature | N.TsMethodSignature,\n      readonly: boolean,\n    ): N.TsPropertySignature | N.TsMethodSignature {\n      if (this.eat(tt.question)) node.optional = true;\n      const nodeAny: any = node;\n\n      if (this.match(tt.parenL) || this.match(tt.lt)) {\n        if (readonly) {\n          this.raise(TSErrors.ReadonlyForMethodSignature, { at: node });\n        }\n        const method: N.TsMethodSignature = nodeAny;\n        if (method.kind && this.match(tt.lt)) {\n          this.raise(TSErrors.AccesorCannotHaveTypeParameters, {\n            at: this.state.curPosition(),\n          });\n        }\n        this.tsFillSignature(tt.colon, method);\n        this.tsParseTypeMemberSemicolon();\n        const paramsKey = process.env.BABEL_8_BREAKING\n          ? \"params\"\n          : \"parameters\";\n        const returnTypeKey = process.env.BABEL_8_BREAKING\n          ? \"returnType\"\n          : \"typeAnnotation\";\n        if (method.kind === \"get\") {\n          if (method[paramsKey].length > 0) {\n            this.raise(Errors.BadGetterArity, { at: this.state.curPosition() });\n            if (this.isThisParam(method[paramsKey][0])) {\n              this.raise(TSErrors.AccesorCannotDeclareThisParameter, {\n                at: this.state.curPosition(),\n              });\n            }\n          }\n        } else if (method.kind === \"set\") {\n          if (method[paramsKey].length !== 1) {\n            this.raise(Errors.BadSetterArity, { at: this.state.curPosition() });\n          } else {\n            const firstParameter = method[paramsKey][0];\n            if (this.isThisParam(firstParameter)) {\n              this.raise(TSErrors.AccesorCannotDeclareThisParameter, {\n                at: this.state.curPosition(),\n              });\n            }\n            if (\n              firstParameter.type === \"Identifier\" &&\n              firstParameter.optional\n            ) {\n              this.raise(TSErrors.SetAccesorCannotHaveOptionalParameter, {\n                at: this.state.curPosition(),\n              });\n            }\n            if (firstParameter.type === \"RestElement\") {\n              this.raise(TSErrors.SetAccesorCannotHaveRestParameter, {\n                at: this.state.curPosition(),\n              });\n            }\n          }\n          if (method[returnTypeKey]) {\n            this.raise(TSErrors.SetAccesorCannotHaveReturnType, {\n              at: method[returnTypeKey],\n            });\n          }\n        } else {\n          method.kind = \"method\";\n        }\n        return this.finishNode(method, \"TSMethodSignature\");\n      } else {\n        const property: N.TsPropertySignature = nodeAny;\n        if (readonly) property.readonly = true;\n        const type = this.tsTryParseTypeAnnotation();\n        if (type) property.typeAnnotation = type;\n        this.tsParseTypeMemberSemicolon();\n        return this.finishNode(property, \"TSPropertySignature\");\n      }\n    }\n\n    tsParseTypeMember(): N.TsTypeElement {\n      const node: any = this.startNode();\n\n      if (this.match(tt.parenL) || this.match(tt.lt)) {\n        return this.tsParseSignatureMember(\"TSCallSignatureDeclaration\", node);\n      }\n\n      if (this.match(tt._new)) {\n        const id = this.startNode<N.Identifier>();\n        this.next();\n        if (this.match(tt.parenL) || this.match(tt.lt)) {\n          return this.tsParseSignatureMember(\n            \"TSConstructSignatureDeclaration\",\n            node,\n          );\n        } else {\n          node.key = this.createIdentifier(id, \"new\");\n          return this.tsParsePropertyOrMethodSignature(node, false);\n        }\n      }\n\n      this.tsParseModifiers({\n        modified: node,\n        allowedModifiers: [\"readonly\"],\n        disallowedModifiers: [\n          \"declare\",\n          \"abstract\",\n          \"private\",\n          \"protected\",\n          \"public\",\n          \"static\",\n          \"override\",\n        ],\n      });\n\n      const idx = this.tsTryParseIndexSignature(node);\n      if (idx) {\n        return idx;\n      }\n\n      super.parsePropertyName(node);\n      if (\n        !node.computed &&\n        node.key.type === \"Identifier\" &&\n        (node.key.name === \"get\" || node.key.name === \"set\") &&\n        this.tsTokenCanFollowModifier()\n      ) {\n        node.kind = node.key.name;\n        super.parsePropertyName(node);\n      }\n      return this.tsParsePropertyOrMethodSignature(node, !!node.readonly);\n    }\n\n    tsParseTypeLiteral(): N.TsTypeLiteral {\n      const node = this.startNode<N.TsTypeLiteral>();\n      node.members = this.tsParseObjectTypeMembers();\n      return this.finishNode(node, \"TSTypeLiteral\");\n    }\n\n    tsParseObjectTypeMembers(): Array<N.TsTypeElement> {\n      this.expect(tt.braceL);\n      const members = this.tsParseList(\n        \"TypeMembers\",\n        this.tsParseTypeMember.bind(this),\n      );\n      this.expect(tt.braceR);\n      return members;\n    }\n\n    tsIsStartOfMappedType(): boolean {\n      this.next();\n      if (this.eat(tt.plusMin)) {\n        return this.isContextual(tt._readonly);\n      }\n      if (this.isContextual(tt._readonly)) {\n        this.next();\n      }\n      if (!this.match(tt.bracketL)) {\n        return false;\n      }\n      this.next();\n      if (!this.tsIsIdentifier()) {\n        return false;\n      }\n      this.next();\n      return this.match(tt._in);\n    }\n\n    tsParseMappedTypeParameter(): N.TsTypeParameter {\n      const node = this.startNode<N.TsTypeParameter>();\n      node.name = this.tsParseTypeParameterName();\n      node.constraint = this.tsExpectThenParseType(tt._in);\n      return this.finishNode(node, \"TSTypeParameter\");\n    }\n\n    tsParseMappedType(): N.TsMappedType {\n      const node = this.startNode<N.TsMappedType>();\n\n      this.expect(tt.braceL);\n\n      if (this.match(tt.plusMin)) {\n        node.readonly = this.state.value;\n        this.next();\n        this.expectContextual(tt._readonly);\n      } else if (this.eatContextual(tt._readonly)) {\n        node.readonly = true;\n      }\n\n      this.expect(tt.bracketL);\n      node.typeParameter = this.tsParseMappedTypeParameter();\n      node.nameType = this.eatContextual(tt._as) ? this.tsParseType() : null;\n\n      this.expect(tt.bracketR);\n\n      if (this.match(tt.plusMin)) {\n        node.optional = this.state.value;\n        this.next();\n        this.expect(tt.question);\n      } else if (this.eat(tt.question)) {\n        node.optional = true;\n      }\n\n      node.typeAnnotation = this.tsTryParseType();\n      this.semicolon();\n      this.expect(tt.braceR);\n\n      return this.finishNode(node, \"TSMappedType\");\n    }\n\n    tsParseTupleType(): N.TsTupleType {\n      const node = this.startNode<N.TsTupleType>();\n      node.elementTypes = this.tsParseBracketedList(\n        \"TupleElementTypes\",\n        this.tsParseTupleElementType.bind(this),\n        /* bracket */ true,\n        /* skipFirstToken */ false,\n      );\n\n      // Validate the elementTypes to ensure that no mandatory elements\n      // follow optional elements\n      let seenOptionalElement = false;\n      let labeledElements: boolean | null = null;\n      node.elementTypes.forEach(elementNode => {\n        const { type } = elementNode;\n\n        if (\n          seenOptionalElement &&\n          type !== \"TSRestType\" &&\n          type !== \"TSOptionalType\" &&\n          !(type === \"TSNamedTupleMember\" && elementNode.optional)\n        ) {\n          this.raise(TSErrors.OptionalTypeBeforeRequired, {\n            at: elementNode,\n          });\n        }\n\n        seenOptionalElement ||=\n          (type === \"TSNamedTupleMember\" && elementNode.optional) ||\n          type === \"TSOptionalType\";\n\n        // When checking labels, check the argument of the spread operator\n        let checkType = type;\n        if (type === \"TSRestType\") {\n          elementNode = elementNode.typeAnnotation;\n          checkType = elementNode.type;\n        }\n\n        const isLabeled = checkType === \"TSNamedTupleMember\";\n        labeledElements ??= isLabeled;\n        if (labeledElements !== isLabeled) {\n          this.raise(TSErrors.MixedLabeledAndUnlabeledElements, {\n            at: elementNode,\n          });\n        }\n      });\n\n      return this.finishNode(node, \"TSTupleType\");\n    }\n\n    tsParseTupleElementType(): N.TsType | N.TsNamedTupleMember {\n      // parses `...TsType[]`\n\n      const { start: startPos, startLoc } = this.state;\n\n      const rest = this.eat(tt.ellipsis);\n      let type: N.TsType | N.TsNamedTupleMember = this.tsParseType();\n      const optional = this.eat(tt.question);\n      const labeled = this.eat(tt.colon);\n\n      if (labeled) {\n        const labeledNode = this.startNodeAtNode<N.TsNamedTupleMember>(type);\n        labeledNode.optional = optional;\n\n        if (\n          type.type === \"TSTypeReference\" &&\n          !type.typeParameters &&\n          type.typeName.type === \"Identifier\"\n        ) {\n          labeledNode.label = type.typeName as N.Identifier;\n        } else {\n          this.raise(TSErrors.InvalidTupleMemberLabel, { at: type });\n          // This produces an invalid AST, but at least we don't drop\n          // nodes representing the invalid source.\n          // @ts-expect-error\n          labeledNode.label = type;\n        }\n\n        labeledNode.elementType = this.tsParseType();\n        type = this.finishNode(labeledNode, \"TSNamedTupleMember\");\n      } else if (optional) {\n        const optionalTypeNode = this.startNodeAtNode<N.TsOptionalType>(type);\n        optionalTypeNode.typeAnnotation = type;\n        type = this.finishNode(optionalTypeNode, \"TSOptionalType\");\n      }\n\n      if (rest) {\n        const restNode = this.startNodeAt<N.TsRestType>(startPos, startLoc);\n        restNode.typeAnnotation = type;\n        type = this.finishNode(restNode, \"TSRestType\");\n      }\n\n      return type;\n    }\n\n    tsParseParenthesizedType(): N.TsParenthesizedType {\n      const node = this.startNode<N.TsParenthesizedType>();\n      this.expect(tt.parenL);\n      node.typeAnnotation = this.tsParseType();\n      this.expect(tt.parenR);\n      return this.finishNode(node, \"TSParenthesizedType\");\n    }\n\n    tsParseFunctionOrConstructorType(\n      type: \"TSFunctionType\" | \"TSConstructorType\",\n      abstract?: boolean,\n    ): N.TsFunctionOrConstructorType {\n      const node = this.startNode<\n        N.TsFunctionOrConstructorType | N.TsConstructorType\n      >();\n      if (type === \"TSConstructorType\") {\n        // @ts-expect-error\n        node.abstract = !!abstract;\n        if (abstract) this.next();\n        this.next(); // eat `new`\n      }\n      this.tsInAllowConditionalTypesContext(() =>\n        this.tsFillSignature(tt.arrow, node),\n      );\n      return this.finishNode(node, type);\n    }\n\n    tsParseLiteralTypeNode(): N.TsLiteralType {\n      const node = this.startNode<N.TsLiteralType>();\n      // @ts-expect-error refine typings\n      node.literal = (() => {\n        switch (this.state.type) {\n          case tt.num:\n          case tt.bigint:\n          case tt.string:\n          case tt._true:\n          case tt._false:\n            // For compatibility to estree we cannot call parseLiteral directly here\n            return super.parseExprAtom();\n          default:\n            throw this.unexpected();\n        }\n      })();\n      return this.finishNode(node, \"TSLiteralType\");\n    }\n\n    tsParseTemplateLiteralType(): N.TsType {\n      const node = this.startNode<N.TsLiteralType>();\n      node.literal = super.parseTemplate(false);\n      return this.finishNode(node, \"TSLiteralType\");\n    }\n\n    parseTemplateSubstitution(): N.TsType | N.Node {\n      if (this.state.inType) return this.tsParseType();\n      return super.parseTemplateSubstitution();\n    }\n\n    tsParseThisTypeOrThisTypePredicate(): N.TsThisType | N.TsTypePredicate {\n      const thisKeyword = this.tsParseThisTypeNode();\n      if (this.isContextual(tt._is) && !this.hasPrecedingLineBreak()) {\n        return this.tsParseThisTypePredicate(thisKeyword);\n      } else {\n        return thisKeyword;\n      }\n    }\n\n    tsParseNonArrayType(): N.TsType {\n      switch (this.state.type) {\n        case tt.string:\n        case tt.num:\n        case tt.bigint:\n        case tt._true:\n        case tt._false:\n          return this.tsParseLiteralTypeNode();\n        case tt.plusMin:\n          if (this.state.value === \"-\") {\n            const node = this.startNode<N.TsLiteralType>();\n            const nextToken = this.lookahead();\n            if (nextToken.type !== tt.num && nextToken.type !== tt.bigint) {\n              throw this.unexpected();\n            }\n            // @ts-expect-error: parseMaybeUnary must returns unary expression\n            node.literal = this.parseMaybeUnary();\n            return this.finishNode(node, \"TSLiteralType\");\n          }\n          break;\n        case tt._this:\n          return this.tsParseThisTypeOrThisTypePredicate();\n        case tt._typeof:\n          return this.tsParseTypeQuery();\n        case tt._import:\n          return this.tsParseImportType();\n        case tt.braceL:\n          return this.tsLookAhead(this.tsIsStartOfMappedType.bind(this))\n            ? this.tsParseMappedType()\n            : this.tsParseTypeLiteral();\n        case tt.bracketL:\n          return this.tsParseTupleType();\n        case tt.parenL:\n          if (process.env.BABEL_8_BREAKING) {\n            if (!this.options.createParenthesizedExpressions) {\n              const startPos = this.state.start;\n              this.next();\n              const type = this.tsParseType();\n              this.expect(tt.parenR);\n              this.addExtra(type, \"parenthesized\", true);\n              this.addExtra(type, \"parenStart\", startPos);\n              return type;\n            }\n          }\n\n          return this.tsParseParenthesizedType();\n        case tt.templateNonTail:\n        case tt.templateTail:\n          return this.tsParseTemplateLiteralType();\n        default: {\n          const { type } = this.state;\n          if (\n            tokenIsIdentifier(type) ||\n            type === tt._void ||\n            type === tt._null\n          ) {\n            const nodeType =\n              type === tt._void\n                ? \"TSVoidKeyword\"\n                : type === tt._null\n                ? \"TSNullKeyword\"\n                : keywordTypeFromName(this.state.value);\n            if (\n              nodeType !== undefined &&\n              this.lookaheadCharCode() !== charCodes.dot\n            ) {\n              const node = this.startNode<N.TsKeywordType>();\n              this.next();\n              return this.finishNode(node, nodeType);\n            }\n            return this.tsParseTypeReference();\n          }\n        }\n      }\n\n      throw this.unexpected();\n    }\n\n    tsParseArrayTypeOrHigher(): N.TsType {\n      let type = this.tsParseNonArrayType();\n      while (!this.hasPrecedingLineBreak() && this.eat(tt.bracketL)) {\n        if (this.match(tt.bracketR)) {\n          const node = this.startNodeAtNode<N.TsArrayType>(type);\n          node.elementType = type;\n          this.expect(tt.bracketR);\n          type = this.finishNode(node, \"TSArrayType\");\n        } else {\n          const node = this.startNodeAtNode<N.TsIndexedAccessType>(type);\n          node.objectType = type;\n          node.indexType = this.tsParseType();\n          this.expect(tt.bracketR);\n          type = this.finishNode(node, \"TSIndexedAccessType\");\n        }\n      }\n      return type;\n    }\n\n    tsParseTypeOperator(): N.TsTypeOperator {\n      const node = this.startNode<N.TsTypeOperator>();\n      const operator = this.state.value;\n      this.next(); // eat operator\n      node.operator = operator;\n      node.typeAnnotation = this.tsParseTypeOperatorOrHigher();\n\n      if (operator === \"readonly\") {\n        this.tsCheckTypeAnnotationForReadOnly(\n          // @ts-expect-error todo(flow->ts)\n          node,\n        );\n      }\n\n      return this.finishNode(node, \"TSTypeOperator\");\n    }\n\n    tsCheckTypeAnnotationForReadOnly(node: N.Node) {\n      switch (node.typeAnnotation.type) {\n        case \"TSTupleType\":\n        case \"TSArrayType\":\n          return;\n        default:\n          this.raise(TSErrors.UnexpectedReadonly, { at: node });\n      }\n    }\n\n    tsParseInferType(): N.TsInferType {\n      const node = this.startNode<N.TsInferType>();\n      this.expectContextual(tt._infer);\n      const typeParameter = this.startNode<N.TsTypeParameter>();\n      typeParameter.name = this.tsParseTypeParameterName();\n      typeParameter.constraint = this.tsTryParse(() =>\n        this.tsParseConstraintForInferType(),\n      );\n      node.typeParameter = this.finishNode(typeParameter, \"TSTypeParameter\");\n      return this.finishNode(node, \"TSInferType\");\n    }\n\n    tsParseConstraintForInferType() {\n      if (this.eat(tt._extends)) {\n        const constraint = this.tsInDisallowConditionalTypesContext(() =>\n          this.tsParseType(),\n        );\n        if (\n          this.state.inDisallowConditionalTypesContext ||\n          !this.match(tt.question)\n        ) {\n          return constraint;\n        }\n      }\n    }\n\n    tsParseTypeOperatorOrHigher(): N.TsType {\n      const isTypeOperator =\n        tokenIsTSTypeOperator(this.state.type) && !this.state.containsEsc;\n      return isTypeOperator\n        ? this.tsParseTypeOperator()\n        : this.isContextual(tt._infer)\n        ? this.tsParseInferType()\n        : this.tsInAllowConditionalTypesContext(() =>\n            this.tsParseArrayTypeOrHigher(),\n          );\n    }\n\n    tsParseUnionOrIntersectionType(\n      kind: \"TSUnionType\" | \"TSIntersectionType\",\n      parseConstituentType: () => N.TsType,\n      operator: TokenType,\n    ): N.TsType {\n      const node = this.startNode<N.TsUnionType | N.TsIntersectionType>();\n      const hasLeadingOperator = this.eat(operator);\n      const types = [];\n      do {\n        types.push(parseConstituentType());\n      } while (this.eat(operator));\n      if (types.length === 1 && !hasLeadingOperator) {\n        return types[0];\n      }\n      node.types = types;\n      return this.finishNode(node, kind);\n    }\n\n    tsParseIntersectionTypeOrHigher(): N.TsType {\n      return this.tsParseUnionOrIntersectionType(\n        \"TSIntersectionType\",\n        this.tsParseTypeOperatorOrHigher.bind(this),\n        tt.bitwiseAND,\n      );\n    }\n\n    tsParseUnionTypeOrHigher() {\n      return this.tsParseUnionOrIntersectionType(\n        \"TSUnionType\",\n        this.tsParseIntersectionTypeOrHigher.bind(this),\n        tt.bitwiseOR,\n      );\n    }\n\n    tsIsStartOfFunctionType() {\n      if (this.match(tt.lt)) {\n        return true;\n      }\n      return (\n        this.match(tt.parenL) &&\n        this.tsLookAhead(this.tsIsUnambiguouslyStartOfFunctionType.bind(this))\n      );\n    }\n\n    tsSkipParameterStart(): boolean {\n      if (tokenIsIdentifier(this.state.type) || this.match(tt._this)) {\n        this.next();\n        return true;\n      }\n\n      if (this.match(tt.braceL)) {\n        // Return true if we can parse an object pattern without errors\n        const { errors } = this.state;\n        const previousErrorCount = errors.length;\n        try {\n          this.parseObjectLike(tt.braceR, true);\n          return errors.length === previousErrorCount;\n        } catch {\n          return false;\n        }\n      }\n\n      if (this.match(tt.bracketL)) {\n        this.next();\n        // Return true if we can parse an array pattern without errors\n        const { errors } = this.state;\n        const previousErrorCount = errors.length;\n        try {\n          super.parseBindingList(\n            tt.bracketR,\n            charCodes.rightSquareBracket,\n            true,\n          );\n          return errors.length === previousErrorCount;\n        } catch {\n          return false;\n        }\n      }\n\n      return false;\n    }\n\n    tsIsUnambiguouslyStartOfFunctionType(): boolean {\n      this.next();\n      if (this.match(tt.parenR) || this.match(tt.ellipsis)) {\n        // ( )\n        // ( ...\n        return true;\n      }\n      if (this.tsSkipParameterStart()) {\n        if (\n          this.match(tt.colon) ||\n          this.match(tt.comma) ||\n          this.match(tt.question) ||\n          this.match(tt.eq)\n        ) {\n          // ( xxx :\n          // ( xxx ,\n          // ( xxx ?\n          // ( xxx =\n          return true;\n        }\n        if (this.match(tt.parenR)) {\n          this.next();\n          if (this.match(tt.arrow)) {\n            // ( xxx ) =>\n            return true;\n          }\n        }\n      }\n      return false;\n    }\n\n    tsParseTypeOrTypePredicateAnnotation(\n      returnToken: TokenType,\n    ): N.TsTypeAnnotation {\n      return this.tsInType(() => {\n        const t = this.startNode<N.TsTypeAnnotation>();\n        this.expect(returnToken);\n\n        const node = this.startNode<N.TsTypePredicate>();\n\n        const asserts = !!this.tsTryParse(\n          this.tsParseTypePredicateAsserts.bind(this),\n        );\n\n        if (asserts && this.match(tt._this)) {\n          // When asserts is false, thisKeyword is handled by tsParseNonArrayType\n          // : asserts this is type\n          let thisTypePredicate = this.tsParseThisTypeOrThisTypePredicate();\n          // if it turns out to be a `TSThisType`, wrap it with `TSTypePredicate`\n          // : asserts this\n          if (thisTypePredicate.type === \"TSThisType\") {\n            node.parameterName = thisTypePredicate as N.TsThisType;\n            node.asserts = true;\n            (node as N.TsTypePredicate).typeAnnotation = null;\n            thisTypePredicate = this.finishNode(node, \"TSTypePredicate\");\n          } else {\n            this.resetStartLocationFromNode(thisTypePredicate, node);\n            (thisTypePredicate as N.TsTypePredicate).asserts = true;\n          }\n          t.typeAnnotation = thisTypePredicate;\n          return this.finishNode(t, \"TSTypeAnnotation\");\n        }\n\n        const typePredicateVariable =\n          this.tsIsIdentifier() &&\n          this.tsTryParse(this.tsParseTypePredicatePrefix.bind(this));\n\n        if (!typePredicateVariable) {\n          if (!asserts) {\n            // : type\n            return this.tsParseTypeAnnotation(/* eatColon */ false, t);\n          }\n\n          // : asserts foo\n          node.parameterName = this.parseIdentifier();\n          node.asserts = asserts;\n          (node as N.TsTypePredicate).typeAnnotation = null;\n          t.typeAnnotation = this.finishNode(node, \"TSTypePredicate\");\n          return this.finishNode(t, \"TSTypeAnnotation\");\n        }\n\n        // : asserts foo is type\n        const type = this.tsParseTypeAnnotation(/* eatColon */ false);\n        node.parameterName = typePredicateVariable;\n        node.typeAnnotation = type;\n        node.asserts = asserts;\n        t.typeAnnotation = this.finishNode(node, \"TSTypePredicate\");\n        return this.finishNode(t, \"TSTypeAnnotation\");\n      });\n    }\n\n    tsTryParseTypeOrTypePredicateAnnotation():\n      | N.TsTypeAnnotation\n      | undefined\n      | null {\n      return this.match(tt.colon)\n        ? this.tsParseTypeOrTypePredicateAnnotation(tt.colon)\n        : undefined;\n    }\n\n    tsTryParseTypeAnnotation(): N.TsTypeAnnotation | undefined | null {\n      return this.match(tt.colon) ? this.tsParseTypeAnnotation() : undefined;\n    }\n\n    tsTryParseType(): N.TsType | undefined | null {\n      return this.tsEatThenParseType(tt.colon);\n    }\n\n    tsParseTypePredicatePrefix(): N.Identifier | undefined | null {\n      const id = this.parseIdentifier();\n      if (this.isContextual(tt._is) && !this.hasPrecedingLineBreak()) {\n        this.next();\n        return id;\n      }\n    }\n\n    tsParseTypePredicateAsserts(): boolean {\n      if (this.state.type !== tt._asserts) {\n        return false;\n      }\n      const containsEsc = this.state.containsEsc;\n      this.next();\n      if (!tokenIsIdentifier(this.state.type) && !this.match(tt._this)) {\n        return false;\n      }\n\n      if (containsEsc) {\n        this.raise(Errors.InvalidEscapedReservedWord, {\n          at: this.state.lastTokStartLoc,\n          reservedWord: \"asserts\",\n        });\n      }\n\n      return true;\n    }\n\n    tsParseTypeAnnotation(\n      eatColon = true,\n      t: Undone<N.TsTypeAnnotation> = this.startNode<N.TsTypeAnnotation>(),\n    ): N.TsTypeAnnotation {\n      this.tsInType(() => {\n        if (eatColon) this.expect(tt.colon);\n        t.typeAnnotation = this.tsParseType();\n      });\n      return this.finishNode(t, \"TSTypeAnnotation\");\n    }\n\n    /** Be sure to be in a type context before calling this, using `tsInType`. */\n    tsParseType(): N.TsType {\n      // Need to set `state.inType` so that we don't parse JSX in a type context.\n      assert(this.state.inType);\n      const type = this.tsParseNonConditionalType();\n\n      if (\n        this.state.inDisallowConditionalTypesContext ||\n        this.hasPrecedingLineBreak() ||\n        !this.eat(tt._extends)\n      ) {\n        return type;\n      }\n      const node = this.startNodeAtNode<N.TsConditionalType>(type);\n      node.checkType = type;\n\n      node.extendsType = this.tsInDisallowConditionalTypesContext(() =>\n        this.tsParseNonConditionalType(),\n      );\n\n      this.expect(tt.question);\n      node.trueType = this.tsInAllowConditionalTypesContext(() =>\n        this.tsParseType(),\n      );\n\n      this.expect(tt.colon);\n      node.falseType = this.tsInAllowConditionalTypesContext(() =>\n        this.tsParseType(),\n      );\n\n      return this.finishNode(node, \"TSConditionalType\");\n    }\n\n    isAbstractConstructorSignature(): boolean {\n      return (\n        this.isContextual(tt._abstract) && this.lookahead().type === tt._new\n      );\n    }\n\n    tsParseNonConditionalType(): N.TsType {\n      if (this.tsIsStartOfFunctionType()) {\n        return this.tsParseFunctionOrConstructorType(\"TSFunctionType\");\n      }\n      if (this.match(tt._new)) {\n        // As in `new () => Date`\n        return this.tsParseFunctionOrConstructorType(\"TSConstructorType\");\n      } else if (this.isAbstractConstructorSignature()) {\n        // As in `abstract new () => Date`\n        return this.tsParseFunctionOrConstructorType(\n          \"TSConstructorType\",\n          /* abstract */ true,\n        );\n      }\n      return this.tsParseUnionTypeOrHigher();\n    }\n\n    tsParseTypeAssertion(): N.TsTypeAssertion {\n      if (this.getPluginOption(\"typescript\", \"disallowAmbiguousJSXLike\")) {\n        this.raise(TSErrors.ReservedTypeAssertion, { at: this.state.startLoc });\n      }\n\n      const node = this.startNode<N.TsTypeAssertion>();\n      const _const = this.tsTryNextParseConstantContext();\n      node.typeAnnotation = _const || this.tsNextThenParseType();\n      this.expect(tt.gt);\n      node.expression = this.parseMaybeUnary();\n      return this.finishNode(node, \"TSTypeAssertion\");\n    }\n\n    tsParseHeritageClause(\n      token: \"extends\" | \"implements\",\n    ): Array<N.TsExpressionWithTypeArguments> {\n      const originalStartLoc = this.state.startLoc;\n\n      const delimitedList = this.tsParseDelimitedList(\n        \"HeritageClauseElement\",\n        () => {\n          const node = this.startNode<N.TsExpressionWithTypeArguments>();\n          node.expression = this.tsParseEntityName();\n          if (this.match(tt.lt)) {\n            node.typeParameters = this.tsParseTypeArguments();\n          }\n\n          return this.finishNode(node, \"TSExpressionWithTypeArguments\");\n        },\n      );\n\n      if (!delimitedList.length) {\n        this.raise(TSErrors.EmptyHeritageClauseType, {\n          at: originalStartLoc,\n          token,\n        });\n      }\n\n      return delimitedList;\n    }\n\n    tsParseInterfaceDeclaration(\n      node: Undone<N.TsInterfaceDeclaration>,\n      properties: {\n        declare?: true;\n      } = {},\n    ): N.TsInterfaceDeclaration | undefined | null {\n      if (this.hasFollowingLineBreak()) return null;\n      this.expectContextual(tt._interface);\n      if (properties.declare) node.declare = true;\n      if (tokenIsIdentifier(this.state.type)) {\n        node.id = this.parseIdentifier();\n        this.checkIdentifier(node.id, BIND_TS_INTERFACE);\n      } else {\n        node.id = null;\n        this.raise(TSErrors.MissingInterfaceName, { at: this.state.startLoc });\n      }\n\n      node.typeParameters = this.tsTryParseTypeParameters(\n        this.tsParseInOutModifiers.bind(this),\n      );\n      if (this.eat(tt._extends)) {\n        node.extends = this.tsParseHeritageClause(\"extends\");\n      }\n      const body = this.startNode<N.TSInterfaceBody>();\n      body.body = this.tsInType(this.tsParseObjectTypeMembers.bind(this));\n      node.body = this.finishNode(body, \"TSInterfaceBody\");\n      return this.finishNode(node, \"TSInterfaceDeclaration\");\n    }\n\n    tsParseTypeAliasDeclaration(\n      node: N.TsTypeAliasDeclaration,\n    ): N.TsTypeAliasDeclaration {\n      node.id = this.parseIdentifier();\n      this.checkIdentifier(node.id, BIND_TS_TYPE);\n\n      node.typeAnnotation = this.tsInType(() => {\n        node.typeParameters = this.tsTryParseTypeParameters(\n          this.tsParseInOutModifiers.bind(this),\n        );\n\n        this.expect(tt.eq);\n\n        if (\n          this.isContextual(tt._intrinsic) &&\n          this.lookahead().type !== tt.dot\n        ) {\n          const node = this.startNode<N.TsKeywordType>();\n          this.next();\n          return this.finishNode(node, \"TSIntrinsicKeyword\");\n        }\n\n        return this.tsParseType();\n      });\n\n      this.semicolon();\n      return this.finishNode(node, \"TSTypeAliasDeclaration\");\n    }\n\n    tsInNoContext<T>(cb: () => T): T {\n      const oldContext = this.state.context;\n      this.state.context = [oldContext[0]];\n      try {\n        return cb();\n      } finally {\n        this.state.context = oldContext;\n      }\n    }\n\n    /**\n     * Runs `cb` in a type context.\n     * This should be called one token *before* the first type token,\n     * so that the call to `next()` is run in type context.\n     */\n    tsInType<T>(cb: () => T): T {\n      const oldInType = this.state.inType;\n      this.state.inType = true;\n      try {\n        return cb();\n      } finally {\n        this.state.inType = oldInType;\n      }\n    }\n\n    tsInDisallowConditionalTypesContext<T>(cb: () => T): T {\n      const oldInDisallowConditionalTypesContext =\n        this.state.inDisallowConditionalTypesContext;\n      this.state.inDisallowConditionalTypesContext = true;\n      try {\n        return cb();\n      } finally {\n        this.state.inDisallowConditionalTypesContext =\n          oldInDisallowConditionalTypesContext;\n      }\n    }\n\n    tsInAllowConditionalTypesContext<T>(cb: () => T): T {\n      const oldInDisallowConditionalTypesContext =\n        this.state.inDisallowConditionalTypesContext;\n      this.state.inDisallowConditionalTypesContext = false;\n      try {\n        return cb();\n      } finally {\n        this.state.inDisallowConditionalTypesContext =\n          oldInDisallowConditionalTypesContext;\n      }\n    }\n\n    tsEatThenParseType(token: TokenType): N.TsType | typeof undefined {\n      return !this.match(token) ? undefined : this.tsNextThenParseType();\n    }\n\n    tsExpectThenParseType(token: TokenType): N.TsType {\n      return this.tsDoThenParseType(() => this.expect(token));\n    }\n\n    tsNextThenParseType(): N.TsType {\n      return this.tsDoThenParseType(() => this.next());\n    }\n\n    tsDoThenParseType(cb: () => void): N.TsType {\n      return this.tsInType(() => {\n        cb();\n        return this.tsParseType();\n      });\n    }\n\n    tsParseEnumMember(): N.TsEnumMember {\n      const node = this.startNode<N.TsEnumMember>();\n      // Computed property names are grammar errors in an enum, so accept just string literal or identifier.\n      node.id = this.match(tt.string)\n        ? super.parseStringLiteral(this.state.value)\n        : this.parseIdentifier(/* liberal */ true);\n      if (this.eat(tt.eq)) {\n        node.initializer = super.parseMaybeAssignAllowIn();\n      }\n      return this.finishNode(node, \"TSEnumMember\");\n    }\n\n    tsParseEnumDeclaration(\n      node: Undone<N.TsEnumDeclaration>,\n      properties: {\n        const?: true;\n        declare?: true;\n      } = {},\n    ): N.TsEnumDeclaration {\n      if (properties.const) node.const = true;\n      if (properties.declare) node.declare = true;\n      this.expectContextual(tt._enum);\n      node.id = this.parseIdentifier();\n      this.checkIdentifier(\n        node.id,\n        node.const ? BIND_TS_CONST_ENUM : BIND_TS_ENUM,\n      );\n\n      this.expect(tt.braceL);\n      node.members = this.tsParseDelimitedList(\n        \"EnumMembers\",\n        this.tsParseEnumMember.bind(this),\n      );\n      this.expect(tt.braceR);\n      return this.finishNode(node, \"TSEnumDeclaration\");\n    }\n\n    tsParseModuleBlock(): N.TsModuleBlock {\n      const node = this.startNode<N.TsModuleBlock>();\n      this.scope.enter(SCOPE_OTHER);\n\n      this.expect(tt.braceL);\n      // Inside of a module block is considered \"top-level\", meaning it can have imports and exports.\n      super.parseBlockOrModuleBlockBody(\n        (node.body = []),\n        /* directives */ undefined,\n        /* topLevel */ true,\n        /* end */ tt.braceR,\n      );\n      this.scope.exit();\n      return this.finishNode(node, \"TSModuleBlock\");\n    }\n\n    tsParseModuleOrNamespaceDeclaration(\n      node: Undone<N.TsModuleDeclaration>,\n      nested: boolean = false,\n    ): N.TsModuleDeclaration {\n      node.id = this.parseIdentifier();\n\n      if (!nested) {\n        this.checkIdentifier(node.id, BIND_TS_NAMESPACE);\n      }\n\n      if (this.eat(tt.dot)) {\n        const inner = this.startNode<N.TsModuleDeclaration>();\n        this.tsParseModuleOrNamespaceDeclaration(inner, true);\n        // @ts-expect-error Fixme: refine typings\n        node.body = inner;\n      } else {\n        this.scope.enter(SCOPE_TS_MODULE);\n        this.prodParam.enter(PARAM);\n        node.body = this.tsParseModuleBlock();\n        this.prodParam.exit();\n        this.scope.exit();\n      }\n      return this.finishNode(node, \"TSModuleDeclaration\");\n    }\n\n    tsParseAmbientExternalModuleDeclaration(\n      node: N.TsModuleDeclaration,\n    ): N.TsModuleDeclaration {\n      if (this.isContextual(tt._global)) {\n        node.global = true;\n        node.id = this.parseIdentifier();\n      } else if (this.match(tt.string)) {\n        node.id = super.parseStringLiteral(this.state.value);\n      } else {\n        this.unexpected();\n      }\n      if (this.match(tt.braceL)) {\n        this.scope.enter(SCOPE_TS_MODULE);\n        this.prodParam.enter(PARAM);\n        node.body = this.tsParseModuleBlock();\n        this.prodParam.exit();\n        this.scope.exit();\n      } else {\n        this.semicolon();\n      }\n\n      return this.finishNode(node, \"TSModuleDeclaration\");\n    }\n\n    tsParseImportEqualsDeclaration(\n      node: Undone<N.TsImportEqualsDeclaration>,\n      isExport?: boolean,\n    ): N.TsImportEqualsDeclaration {\n      node.isExport = isExport || false;\n      node.id = this.parseIdentifier();\n      this.checkIdentifier(node.id, BIND_LEXICAL);\n      this.expect(tt.eq);\n      const moduleReference = this.tsParseModuleReference();\n      if (\n        node.importKind === \"type\" &&\n        moduleReference.type !== \"TSExternalModuleReference\"\n      ) {\n        this.raise(TSErrors.ImportAliasHasImportType, {\n          at: moduleReference,\n        });\n      }\n      node.moduleReference = moduleReference;\n      this.semicolon();\n      return this.finishNode(node, \"TSImportEqualsDeclaration\");\n    }\n\n    tsIsExternalModuleReference(): boolean {\n      return (\n        this.isContextual(tt._require) &&\n        this.lookaheadCharCode() === charCodes.leftParenthesis\n      );\n    }\n\n    tsParseModuleReference(): N.TsModuleReference {\n      return this.tsIsExternalModuleReference()\n        ? this.tsParseExternalModuleReference()\n        : this.tsParseEntityName(/* allowReservedWords */ false);\n    }\n\n    tsParseExternalModuleReference(): N.TsExternalModuleReference {\n      const node = this.startNode<N.TsExternalModuleReference>();\n      this.expectContextual(tt._require);\n      this.expect(tt.parenL);\n      if (!this.match(tt.string)) {\n        throw this.unexpected();\n      }\n      // For compatibility to estree we cannot call parseLiteral directly here\n      node.expression = super.parseExprAtom() as N.StringLiteral;\n      this.expect(tt.parenR);\n      return this.finishNode(node, \"TSExternalModuleReference\");\n    }\n\n    // Utilities\n\n    tsLookAhead<T>(f: () => T): T {\n      const state = this.state.clone();\n      const res = f();\n      this.state = state;\n      return res;\n    }\n\n    tsTryParseAndCatch<T extends N.NodeBase | undefined | null>(\n      f: () => T,\n    ): T | undefined | null {\n      const result = this.tryParse(\n        abort =>\n          // @ts-expect-error todo(flow->ts)\n          f() || abort(),\n      );\n\n      if (result.aborted || !result.node) return undefined;\n      if (result.error) this.state = result.failState;\n      // @ts-expect-error refine typings\n      return result.node;\n    }\n\n    tsTryParse<T>(f: () => T | undefined | false): T | undefined {\n      const state = this.state.clone();\n      const result = f();\n      if (result !== undefined && result !== false) {\n        return result;\n      } else {\n        this.state = state;\n        return undefined;\n      }\n    }\n\n    tsTryParseDeclare(nany: any): N.Declaration | undefined | null {\n      if (this.isLineTerminator()) {\n        return;\n      }\n      let starttype = this.state.type;\n      let kind: \"let\" | null;\n\n      if (this.isContextual(tt._let)) {\n        starttype = tt._var;\n        kind = \"let\" as const;\n      }\n\n      // @ts-expect-error refine typings\n      return this.tsInAmbientContext(() => {\n        if (starttype === tt._function) {\n          nany.declare = true;\n          return super.parseFunctionStatement(\n            nany,\n            /* async */ false,\n            /* declarationPosition */ true,\n          );\n        }\n\n        if (starttype === tt._class) {\n          // While this is also set by tsParseExpressionStatement, we need to set it\n          // before parsing the class declaration to know how to register it in the scope.\n          nany.declare = true;\n          return this.parseClass(\n            nany,\n            /* isStatement */ true,\n            /* optionalId */ false,\n          );\n        }\n\n        if (starttype === tt._enum) {\n          return this.tsParseEnumDeclaration(nany, { declare: true });\n        }\n\n        if (starttype === tt._global) {\n          return this.tsParseAmbientExternalModuleDeclaration(nany);\n        }\n\n        if (starttype === tt._const || starttype === tt._var) {\n          if (!this.match(tt._const) || !this.isLookaheadContextual(\"enum\")) {\n            nany.declare = true;\n            return this.parseVarStatement(nany, kind || this.state.value, true);\n          }\n\n          // `const enum = 0;` not allowed because \"enum\" is a strict mode reserved word.\n          this.expect(tt._const);\n          return this.tsParseEnumDeclaration(nany, {\n            const: true,\n            declare: true,\n          });\n        }\n\n        if (starttype === tt._interface) {\n          const result = this.tsParseInterfaceDeclaration(nany, {\n            declare: true,\n          });\n          if (result) return result;\n        }\n\n        if (tokenIsIdentifier(starttype)) {\n          return this.tsParseDeclaration(\n            nany,\n            this.state.value,\n            /* next */ true,\n          );\n        }\n      });\n    }\n\n    // Note: this won't be called unless the keyword is allowed in `shouldParseExportDeclaration`.\n    tsTryParseExportDeclaration(): N.Declaration | undefined | null {\n      return this.tsParseDeclaration(\n        this.startNode(),\n        this.state.value,\n        /* next */ true,\n      );\n    }\n\n    tsParseExpressionStatement(\n      node: Undone<N.TsModuleDeclaration>,\n      expr: N.Identifier,\n    ): N.Declaration | undefined | null {\n      switch (expr.name) {\n        case \"declare\": {\n          const declaration = this.tsTryParseDeclare(node);\n          if (declaration) {\n            declaration.declare = true;\n            return declaration;\n          }\n          break;\n        }\n        case \"global\":\n          // `global { }` (with no `declare`) may appear inside an ambient module declaration.\n          // Would like to use tsParseAmbientExternalModuleDeclaration here, but already ran past \"global\".\n          if (this.match(tt.braceL)) {\n            this.scope.enter(SCOPE_TS_MODULE);\n            this.prodParam.enter(PARAM);\n            const mod = node as Undone<N.TsModuleDeclaration>;\n            mod.global = true;\n            mod.id = expr;\n            mod.body = this.tsParseModuleBlock();\n            this.scope.exit();\n            this.prodParam.exit();\n            return this.finishNode(mod, \"TSModuleDeclaration\");\n          }\n          break;\n\n        default:\n          return this.tsParseDeclaration(node, expr.name, /* next */ false);\n      }\n    }\n\n    // Common to tsTryParseDeclare, tsTryParseExportDeclaration, and tsParseExpressionStatement.\n    tsParseDeclaration(\n      node: any,\n      value: string,\n      next: boolean,\n    ): N.Declaration | undefined | null {\n      // no declaration apart from enum can be followed by a line break.\n      switch (value) {\n        case \"abstract\":\n          if (\n            this.tsCheckLineTerminator(next) &&\n            (this.match(tt._class) || tokenIsIdentifier(this.state.type))\n          ) {\n            return this.tsParseAbstractDeclaration(node);\n          }\n          break;\n\n        case \"module\":\n          if (this.tsCheckLineTerminator(next)) {\n            if (this.match(tt.string)) {\n              return this.tsParseAmbientExternalModuleDeclaration(node);\n            } else if (tokenIsIdentifier(this.state.type)) {\n              return this.tsParseModuleOrNamespaceDeclaration(node);\n            }\n          }\n          break;\n\n        case \"namespace\":\n          if (\n            this.tsCheckLineTerminator(next) &&\n            tokenIsIdentifier(this.state.type)\n          ) {\n            return this.tsParseModuleOrNamespaceDeclaration(node);\n          }\n          break;\n\n        case \"type\":\n          if (\n            this.tsCheckLineTerminator(next) &&\n            tokenIsIdentifier(this.state.type)\n          ) {\n            return this.tsParseTypeAliasDeclaration(node);\n          }\n          break;\n      }\n    }\n\n    tsCheckLineTerminator(next: boolean) {\n      if (next) {\n        if (this.hasFollowingLineBreak()) return false;\n        this.next();\n        return true;\n      }\n      return !this.isLineTerminator();\n    }\n\n    tsTryParseGenericAsyncArrowFunction(\n      startPos: number,\n      startLoc: Position,\n    ): N.ArrowFunctionExpression | undefined | null {\n      if (!this.match(tt.lt)) {\n        return undefined;\n      }\n\n      const oldMaybeInArrowParameters = this.state.maybeInArrowParameters;\n      this.state.maybeInArrowParameters = true;\n\n      const res: Undone<N.ArrowFunctionExpression> | undefined | null =\n        this.tsTryParseAndCatch(() => {\n          const node = this.startNodeAt<N.ArrowFunctionExpression>(\n            startPos,\n            startLoc,\n          );\n          node.typeParameters = this.tsParseTypeParameters();\n          // Don't use overloaded parseFunctionParams which would look for \"<\" again.\n          super.parseFunctionParams(node);\n          node.returnType = this.tsTryParseTypeOrTypePredicateAnnotation();\n          this.expect(tt.arrow);\n          return node;\n        });\n\n      this.state.maybeInArrowParameters = oldMaybeInArrowParameters;\n\n      if (!res) {\n        return undefined;\n      }\n\n      return super.parseArrowExpression(\n        res,\n        /* params are already set */ null,\n        /* async */ true,\n      );\n    }\n\n    // Used when parsing type arguments from ES productions, where the first token\n    // has been created without state.inType. Thus we need to rescan the lt token.\n    tsParseTypeArgumentsInExpression(): N.TsTypeParameterInstantiation | void {\n      if (this.reScan_lt() !== tt.lt) {\n        return undefined;\n      }\n      return this.tsParseTypeArguments();\n    }\n\n    tsParseTypeArguments(): N.TsTypeParameterInstantiation {\n      const node = this.startNode<N.TsTypeParameterInstantiation>();\n      node.params = this.tsInType(() =>\n        // Temporarily remove a JSX parsing context, which makes us scan different tokens.\n        this.tsInNoContext(() => {\n          this.expect(tt.lt);\n          return this.tsParseDelimitedList(\n            \"TypeParametersOrArguments\",\n            this.tsParseType.bind(this),\n          );\n        }),\n      );\n      if (node.params.length === 0) {\n        this.raise(TSErrors.EmptyTypeArguments, { at: node });\n      }\n      this.expect(tt.gt);\n      return this.finishNode(node, \"TSTypeParameterInstantiation\");\n    }\n\n    tsIsDeclarationStart(): boolean {\n      return tokenIsTSDeclarationStart(this.state.type);\n    }\n\n    // ======================================================\n    // OVERRIDES\n    // ======================================================\n\n    isExportDefaultSpecifier(): boolean {\n      if (this.tsIsDeclarationStart()) return false;\n      return super.isExportDefaultSpecifier();\n    }\n\n    parseAssignableListItem(\n      allowModifiers: boolean | undefined | null,\n      decorators: N.Decorator[],\n    ): N.Pattern | N.TSParameterProperty {\n      // Store original location/position to include modifiers in range\n      const startPos = this.state.start;\n      const startLoc = this.state.startLoc;\n\n      let accessibility: N.Accessibility | undefined | null;\n      let readonly = false;\n      let override = false;\n      if (allowModifiers !== undefined) {\n        const modified: ModifierBase = {};\n        this.tsParseModifiers({\n          modified,\n          allowedModifiers: [\n            \"public\",\n            \"private\",\n            \"protected\",\n            \"override\",\n            \"readonly\",\n          ],\n        });\n        accessibility = modified.accessibility;\n        override = modified.override;\n        readonly = modified.readonly;\n        if (\n          allowModifiers === false &&\n          (accessibility || readonly || override)\n        ) {\n          this.raise(TSErrors.UnexpectedParameterModifier, { at: startLoc });\n        }\n      }\n\n      const left = this.parseMaybeDefault();\n      this.parseAssignableListItemTypes(left);\n      const elt = this.parseMaybeDefault(left.start, left.loc.start, left);\n      if (accessibility || readonly || override) {\n        const pp = this.startNodeAt<N.TSParameterProperty>(startPos, startLoc);\n        if (decorators.length) {\n          pp.decorators = decorators;\n        }\n        if (accessibility) pp.accessibility = accessibility;\n        if (readonly) pp.readonly = readonly;\n        if (override) pp.override = override;\n        if (elt.type !== \"Identifier\" && elt.type !== \"AssignmentPattern\") {\n          this.raise(TSErrors.UnsupportedParameterPropertyKind, { at: pp });\n        }\n        pp.parameter = elt as any as N.Identifier | N.AssignmentPattern;\n        return this.finishNode(pp, \"TSParameterProperty\");\n      }\n\n      if (decorators.length) {\n        left.decorators = decorators;\n      }\n\n      return elt;\n    }\n\n    isSimpleParameter(node: N.Pattern | N.TSParameterProperty) {\n      return (\n        (node.type === \"TSParameterProperty\" &&\n          super.isSimpleParameter(node.parameter)) ||\n        super.isSimpleParameter(node)\n      );\n    }\n\n    parseFunctionBodyAndFinish<\n      T extends\n        | N.Function\n        | N.TSDeclareMethod\n        | N.TSDeclareFunction\n        | N.ClassPrivateMethod,\n    >(node: Undone<T>, type: T[\"type\"], isMethod: boolean = false): T {\n      if (this.match(tt.colon)) {\n        node.returnType = this.tsParseTypeOrTypePredicateAnnotation(tt.colon);\n      }\n\n      const bodilessType =\n        type === \"FunctionDeclaration\"\n          ? \"TSDeclareFunction\"\n          : type === \"ClassMethod\" || type === \"ClassPrivateMethod\"\n          ? \"TSDeclareMethod\"\n          : undefined;\n      if (bodilessType && !this.match(tt.braceL) && this.isLineTerminator()) {\n        return this.finishNode(node, bodilessType);\n      }\n      if (bodilessType === \"TSDeclareFunction\" && this.state.isAmbientContext) {\n        this.raise(TSErrors.DeclareFunctionHasImplementation, { at: node });\n        if (\n          // @ts-expect-error\n          node.declare\n        ) {\n          return super.parseFunctionBodyAndFinish(node, bodilessType, isMethod);\n        }\n      }\n\n      return super.parseFunctionBodyAndFinish(node, type, isMethod);\n    }\n\n    registerFunctionStatementId(node: N.Function): void {\n      if (!node.body && node.id) {\n        // Function ids are validated after parsing their body.\n        // For bodyless function, we need to do it here.\n        this.checkIdentifier(node.id, BIND_TS_AMBIENT);\n      } else {\n        super.registerFunctionStatementId(node);\n      }\n    }\n\n    tsCheckForInvalidTypeCasts(items: Array<N.Expression | undefined | null>) {\n      items.forEach(node => {\n        if (node?.type === \"TSTypeCastExpression\") {\n          this.raise(TSErrors.UnexpectedTypeAnnotation, {\n            at: node.typeAnnotation,\n          });\n        }\n      });\n    }\n\n    toReferencedList(\n      exprList: Array<N.Expression | undefined | null>,\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      isInParens?: boolean,\n    ): Array<N.Expression | undefined | null> {\n      // Handles invalid scenarios like: `f(a:b)`, `(a:b);`, and `(a:b,c:d)`.\n      //\n      // Note that `f<T>(a:b)` goes through a different path and is handled\n      // in `parseSubscript` directly.\n      this.tsCheckForInvalidTypeCasts(exprList);\n      return exprList;\n    }\n\n    parseArrayLike(\n      ...args: [TokenType, boolean, boolean, ExpressionErrors | null]\n    ): N.ArrayExpression | N.TupleExpression {\n      const node = super.parseArrayLike(...args);\n\n      if (node.type === \"ArrayExpression\") {\n        this.tsCheckForInvalidTypeCasts(node.elements);\n      }\n\n      return node;\n    }\n\n    parseSubscript(\n      base: N.Expression,\n      startPos: number,\n      startLoc: Position,\n      noCalls: boolean | undefined | null,\n      state: N.ParseSubscriptState,\n    ): N.Expression {\n      if (!this.hasPrecedingLineBreak() && this.match(tt.bang)) {\n        // When ! is consumed as a postfix operator (non-null assertion),\n        // disallow JSX tag forming after. e.g. When parsing `p! < n.p!`\n        // `<n.p` can not be a start of JSX tag\n        this.state.canStartJSXElement = false;\n        this.next();\n\n        const nonNullExpression = this.startNodeAt<N.TsNonNullExpression>(\n          startPos,\n          startLoc,\n        );\n        nonNullExpression.expression = base;\n        return this.finishNode(nonNullExpression, \"TSNonNullExpression\");\n      }\n\n      let isOptionalCall = false;\n      if (\n        this.match(tt.questionDot) &&\n        this.lookaheadCharCode() === charCodes.lessThan\n      ) {\n        if (noCalls) {\n          state.stop = true;\n          return base;\n        }\n        state.optionalChainMember = isOptionalCall = true;\n        this.next();\n      }\n\n      // handles 'f<<T>'\n      if (this.match(tt.lt) || this.match(tt.bitShiftL)) {\n        let missingParenErrorLoc;\n        // tsTryParseAndCatch is expensive, so avoid if not necessary.\n        // There are number of things we are going to \"maybe\" parse, like type arguments on\n        // tagged template expressions. If any of them fail, walk it back and continue.\n        const result = this.tsTryParseAndCatch(() => {\n          if (!noCalls && this.atPossibleAsyncArrow(base)) {\n            // Almost certainly this is a generic async function `async <T>() => ...\n            // But it might be a call with a type argument `async<T>();`\n            const asyncArrowFn = this.tsTryParseGenericAsyncArrowFunction(\n              startPos,\n              startLoc,\n            );\n            if (asyncArrowFn) {\n              return asyncArrowFn;\n            }\n          }\n\n          const typeArguments = this.tsParseTypeArgumentsInExpression();\n          if (!typeArguments) return;\n\n          if (isOptionalCall && !this.match(tt.parenL)) {\n            missingParenErrorLoc = this.state.curPosition();\n            return;\n          }\n\n          if (tokenIsTemplate(this.state.type)) {\n            const result = super.parseTaggedTemplateExpression(\n              base,\n              startPos,\n              startLoc,\n              state,\n            );\n            result.typeParameters = typeArguments;\n            return result;\n          }\n\n          if (!noCalls && this.eat(tt.parenL)) {\n            const node = this.startNodeAt<N.CallExpression>(startPos, startLoc);\n            node.callee = base;\n            // possibleAsync always false here, because we would have handled it above.\n            // @ts-expect-error (won't be any undefined arguments)\n            node.arguments = this.parseCallExpressionArguments(\n              tt.parenR,\n              /* possibleAsync */ false,\n            );\n\n            // Handles invalid case: `f<T>(a:b)`\n            this.tsCheckForInvalidTypeCasts(node.arguments);\n\n            node.typeParameters = typeArguments;\n            if (state.optionalChainMember) {\n              // @ts-expect-error\n              node.optional = isOptionalCall;\n            }\n\n            return this.finishCallExpression(node, state.optionalChainMember);\n          }\n\n          const tokenType = this.state.type;\n          if (\n            // a<b>>c is not (a<b>)>c, but a<(b>>c)\n            tokenType === tt.gt ||\n            // a<b>c is (a<b)>c\n            (tokenType !== tt.parenL &&\n              tokenCanStartExpression(tokenType) &&\n              !this.hasPrecedingLineBreak())\n          ) {\n            // Bail out.\n            return;\n          }\n\n          const node = this.startNodeAt<N.TsInstantiationExpression>(\n            startPos,\n            startLoc,\n          );\n          node.expression = base;\n          node.typeParameters = typeArguments;\n          return this.finishNode(node, \"TSInstantiationExpression\");\n        });\n\n        if (missingParenErrorLoc) {\n          this.unexpected(missingParenErrorLoc, tt.parenL);\n        }\n\n        if (result) {\n          if (\n            result.type === \"TSInstantiationExpression\" &&\n            (this.match(tt.dot) ||\n              (this.match(tt.questionDot) &&\n                this.lookaheadCharCode() !== charCodes.leftParenthesis))\n          ) {\n            this.raise(\n              TSErrors.InvalidPropertyAccessAfterInstantiationExpression,\n              { at: this.state.startLoc },\n            );\n          }\n          return result;\n        }\n      }\n\n      return super.parseSubscript(base, startPos, startLoc, noCalls, state);\n    }\n\n    parseNewCallee(node: N.NewExpression): void {\n      super.parseNewCallee(node);\n\n      const { callee } = node;\n      if (\n        callee.type === \"TSInstantiationExpression\" &&\n        !callee.extra?.parenthesized\n      ) {\n        node.typeParameters = callee.typeParameters;\n        node.callee = callee.expression;\n      }\n    }\n\n    parseExprOp(\n      left: N.Expression,\n      leftStartPos: number,\n      leftStartLoc: Position,\n      minPrec: number,\n    ): N.Expression {\n      if (\n        tokenOperatorPrecedence(tt._in) > minPrec &&\n        !this.hasPrecedingLineBreak() &&\n        this.isContextual(tt._as)\n      ) {\n        const node = this.startNodeAt<N.TsAsExpression>(\n          leftStartPos,\n          leftStartLoc,\n        );\n        node.expression = left;\n        const _const = this.tsTryNextParseConstantContext();\n        if (_const) {\n          node.typeAnnotation = _const;\n        } else {\n          node.typeAnnotation = this.tsNextThenParseType();\n        }\n        this.finishNode(node, \"TSAsExpression\");\n        // rescan `<`, `>` because they were scanned when this.state.inType was true\n        this.reScan_lt_gt();\n        return this.parseExprOp(\n          // @ts-expect-error todo(flow->ts)\n          node,\n          leftStartPos,\n          leftStartLoc,\n          minPrec,\n        );\n      }\n\n      return super.parseExprOp(left, leftStartPos, leftStartLoc, minPrec);\n    }\n\n    checkReservedWord(\n      word: string,\n      startLoc: Position,\n      checkKeywords: boolean,\n      isBinding: boolean,\n    ): void {\n      // Strict mode words may be allowed as in `declare namespace N { const static: number; }`.\n      // And we have a type checker anyway, so don't bother having the parser do it.\n      if (!this.state.isAmbientContext) {\n        super.checkReservedWord(word, startLoc, checkKeywords, isBinding);\n      }\n    }\n\n    /*\n    Don't bother doing this check in TypeScript code because:\n    1. We may have a nested export statement with the same name:\n      export const x = 0;\n      export namespace N {\n        export const x = 1;\n      }\n    2. We have a type checker to warn us about this sort of thing.\n    */\n    checkDuplicateExports() {}\n\n    parseImport(\n      node: Undone<N.ImportDeclaration | N.TsImportEqualsDeclaration>,\n    ): N.AnyImport {\n      node.importKind = \"value\";\n      if (\n        tokenIsIdentifier(this.state.type) ||\n        this.match(tt.star) ||\n        this.match(tt.braceL)\n      ) {\n        let ahead = this.lookahead();\n\n        if (\n          this.isContextual(tt._type) &&\n          // import type, { a } from \"b\";\n          ahead.type !== tt.comma &&\n          // import type from \"a\";\n          ahead.type !== tt._from &&\n          // import type = require(\"a\");\n          ahead.type !== tt.eq\n        ) {\n          node.importKind = \"type\";\n          this.next();\n          ahead = this.lookahead();\n        }\n\n        if (tokenIsIdentifier(this.state.type) && ahead.type === tt.eq) {\n          return this.tsParseImportEqualsDeclaration(\n            node as Undone<N.TsImportEqualsDeclaration>,\n          );\n        }\n      }\n\n      const importNode = super.parseImport(node as Undone<N.ImportDeclaration>);\n      /*:: invariant(importNode.type !== \"TSImportEqualsDeclaration\") */\n\n      // `import type` can only be used on imports with named imports or with a\n      // default import - but not both\n      if (\n        importNode.importKind === \"type\" &&\n        // @ts-expect-error refine typings\n        importNode.specifiers.length > 1 &&\n        // @ts-expect-error refine typings\n        importNode.specifiers[0].type === \"ImportDefaultSpecifier\"\n      ) {\n        this.raise(TSErrors.TypeImportCannotSpecifyDefaultAndNamed, {\n          at: importNode,\n        });\n      }\n\n      return importNode;\n    }\n\n    parseExport(node: Undone<N.Node>): N.AnyExport {\n      if (this.match(tt._import)) {\n        // `export import A = B;`\n        this.next(); // eat `tt._import`\n        if (\n          this.isContextual(tt._type) &&\n          this.lookaheadCharCode() !== charCodes.equalsTo\n        ) {\n          node.importKind = \"type\";\n          this.next(); // eat \"type\"\n        } else {\n          node.importKind = \"value\";\n        }\n        return this.tsParseImportEqualsDeclaration(\n          node as Undone<N.TsImportEqualsDeclaration>,\n          /* isExport */ true,\n        );\n      } else if (this.eat(tt.eq)) {\n        // `export = x;`\n        const assign = node as Undone<N.TsExportAssignment>;\n        assign.expression = super.parseExpression();\n        this.semicolon();\n        return this.finishNode(assign, \"TSExportAssignment\");\n      } else if (this.eatContextual(tt._as)) {\n        // `export as namespace A;`\n        const decl = node as Undone<N.TsNamespaceExportDeclaration>;\n        // See `parseNamespaceExportDeclaration` in TypeScript's own parser\n        this.expectContextual(tt._namespace);\n        decl.id = this.parseIdentifier();\n        this.semicolon();\n        return this.finishNode(decl, \"TSNamespaceExportDeclaration\");\n      } else {\n        if (\n          this.isContextual(tt._type) &&\n          this.lookahead().type === tt.braceL\n        ) {\n          this.next();\n          node.exportKind = \"type\";\n        } else {\n          node.exportKind = \"value\";\n        }\n\n        return super.parseExport(\n          node as Undone<N.ExportAllDeclaration | N.ExportDefaultDeclaration>,\n        );\n      }\n    }\n\n    isAbstractClass(): boolean {\n      return (\n        this.isContextual(tt._abstract) && this.lookahead().type === tt._class\n      );\n    }\n\n    parseExportDefaultExpression(): N.Expression | N.Declaration {\n      if (this.isAbstractClass()) {\n        const cls = this.startNode<N.Class>();\n        this.next(); // Skip \"abstract\"\n        cls.abstract = true;\n        return this.parseClass(cls, true, true);\n      }\n\n      // export default interface allowed in:\n      // https://github.com/Microsoft/TypeScript/pull/16040\n      if (this.match(tt._interface)) {\n        const result = this.tsParseInterfaceDeclaration(\n          this.startNode<N.TsInterfaceDeclaration>(),\n        );\n        if (result) return result;\n      }\n\n      return super.parseExportDefaultExpression();\n    }\n\n    parseVarStatement(\n      node: N.VariableDeclaration,\n      kind: \"var\" | \"let\" | \"const\",\n      allowMissingInitializer: boolean = false,\n    ) {\n      const { isAmbientContext } = this.state;\n      const declaration = super.parseVarStatement(\n        node,\n        kind,\n        allowMissingInitializer || isAmbientContext,\n      );\n\n      if (!isAmbientContext) return declaration;\n\n      for (const { id, init } of declaration.declarations) {\n        // Empty initializer is the easy case that we want.\n        if (!init) continue;\n\n        // var and let aren't ever allowed initializers.\n        //\n        // If a const declaration has no type annotation and is initiailized to\n        // a string literal, numeric literal, or enum reference, then it is\n        // allowed. In an ideal world, we'd check whether init was *actually* an\n        // enum reference, but we allow anything that \"could be\" a literal enum\n        // in `isPossiblyLiteralEnum` since we don't have all the information\n        // that the typescript compiler has.\n        if (kind !== \"const\" || !!id.typeAnnotation) {\n          this.raise(TSErrors.InitializerNotAllowedInAmbientContext, {\n            at: init,\n          });\n        } else if (\n          init.type !== \"StringLiteral\" &&\n          init.type !== \"BooleanLiteral\" &&\n          init.type !== \"NumericLiteral\" &&\n          init.type !== \"BigIntLiteral\" &&\n          (init.type !== \"TemplateLiteral\" || init.expressions.length > 0) &&\n          !isPossiblyLiteralEnum(init)\n        ) {\n          this.raise(\n            TSErrors.ConstInitiailizerMustBeStringOrNumericLiteralOrLiteralEnumReference,\n            { at: init },\n          );\n        }\n      }\n\n      return declaration;\n    }\n\n    parseStatementContent(\n      context?: string | null,\n      topLevel?: boolean | null,\n    ): N.Statement {\n      if (this.match(tt._const) && this.isLookaheadContextual(\"enum\")) {\n        const node = this.startNode<N.TsEnumDeclaration>();\n        this.expect(tt._const); // eat 'const'\n        return this.tsParseEnumDeclaration(node, { const: true });\n      }\n\n      if (this.isContextual(tt._enum)) {\n        return this.tsParseEnumDeclaration(\n          this.startNode<N.TsEnumDeclaration>(),\n        );\n      }\n\n      if (this.isContextual(tt._interface)) {\n        const result = this.tsParseInterfaceDeclaration(this.startNode());\n        if (result) return result;\n      }\n\n      return super.parseStatementContent(context, topLevel);\n    }\n\n    parseAccessModifier(): N.Accessibility | undefined | null {\n      return this.tsParseModifier([\"public\", \"protected\", \"private\"]);\n    }\n\n    tsHasSomeModifiers(member: any, modifiers: readonly TsModifier[]): boolean {\n      return modifiers.some(modifier => {\n        if (tsIsAccessModifier(modifier)) {\n          return member.accessibility === modifier;\n        }\n        return !!member[modifier];\n      });\n    }\n\n    tsIsStartOfStaticBlocks() {\n      return (\n        this.isContextual(tt._static) &&\n        this.lookaheadCharCode() === charCodes.leftCurlyBrace\n      );\n    }\n\n    parseClassMember(\n      classBody: N.ClassBody,\n      member: any,\n      state: N.ParseClassMemberState,\n    ): void {\n      const modifiers = [\n        \"declare\",\n        \"private\",\n        \"public\",\n        \"protected\",\n        \"override\",\n        \"abstract\",\n        \"readonly\",\n        \"static\",\n      ] as const;\n      this.tsParseModifiers({\n        modified: member,\n        allowedModifiers: modifiers,\n        disallowedModifiers: [\"in\", \"out\"],\n        stopOnStartOfClassStaticBlock: true,\n        errorTemplate: TSErrors.InvalidModifierOnTypeParameterPositions,\n      });\n\n      const callParseClassMemberWithIsStatic = () => {\n        if (this.tsIsStartOfStaticBlocks()) {\n          this.next(); // eat \"static\"\n          this.next(); // eat \"{\"\n          if (this.tsHasSomeModifiers(member, modifiers)) {\n            this.raise(TSErrors.StaticBlockCannotHaveModifier, {\n              at: this.state.curPosition(),\n            });\n          }\n          super.parseClassStaticBlock(\n            classBody,\n            member as any as N.StaticBlock,\n          );\n        } else {\n          this.parseClassMemberWithIsStatic(\n            classBody,\n            member,\n            state,\n            !!member.static,\n          );\n        }\n      };\n      if (member.declare) {\n        this.tsInAmbientContext(callParseClassMemberWithIsStatic);\n      } else {\n        callParseClassMemberWithIsStatic();\n      }\n    }\n\n    parseClassMemberWithIsStatic(\n      classBody: N.ClassBody,\n      member: Undone<N.ClassMember | N.TsIndexSignature>,\n      state: N.ParseClassMemberState,\n      isStatic: boolean,\n    ): void {\n      const idx = this.tsTryParseIndexSignature(\n        member as Undone<N.TsIndexSignature>,\n      );\n      if (idx) {\n        classBody.body.push(idx);\n\n        if ((member as any).abstract) {\n          this.raise(TSErrors.IndexSignatureHasAbstract, { at: member });\n        }\n        if ((member as any).accessibility) {\n          this.raise(TSErrors.IndexSignatureHasAccessibility, {\n            at: member,\n            modifier: (member as any).accessibility,\n          });\n        }\n        if ((member as any).declare) {\n          this.raise(TSErrors.IndexSignatureHasDeclare, { at: member });\n        }\n        if ((member as any).override) {\n          this.raise(TSErrors.IndexSignatureHasOverride, { at: member });\n        }\n\n        return;\n      }\n\n      if (!this.state.inAbstractClass && (member as any).abstract) {\n        this.raise(TSErrors.NonAbstractClassHasAbstractMethod, {\n          at: member,\n        });\n      }\n\n      if ((member as any).override) {\n        if (!state.hadSuperClass) {\n          this.raise(TSErrors.OverrideNotInSubClass, { at: member });\n        }\n      }\n\n      /*:: invariant(member.type !== \"TSIndexSignature\") */\n\n      super.parseClassMemberWithIsStatic(\n        classBody,\n        member as Undone<N.ClassMember>,\n        state,\n        isStatic,\n      );\n    }\n\n    parsePostMemberNameModifiers(\n      methodOrProp: N.ClassMethod | N.ClassProperty | N.ClassPrivateProperty,\n    ): void {\n      const optional = this.eat(tt.question);\n      if (optional) methodOrProp.optional = true;\n\n      if ((methodOrProp as any).readonly && this.match(tt.parenL)) {\n        this.raise(TSErrors.ClassMethodHasReadonly, { at: methodOrProp });\n      }\n\n      if ((methodOrProp as any).declare && this.match(tt.parenL)) {\n        this.raise(TSErrors.ClassMethodHasDeclare, { at: methodOrProp });\n      }\n    }\n\n    // Note: The reason we do this in `parseExpressionStatement` and not `parseStatement`\n    // is that e.g. `type()` is valid JS, so we must try parsing that first.\n    // If it's really a type, we will parse `type` as the statement, and can correct it here\n    // by parsing the rest.\n    // @ts-expect-error plugin overrides interfaces\n    parseExpressionStatement(\n      node: Undone<N.ExpressionStatement>,\n      expr: N.Expression,\n    ): N.Statement {\n      const decl =\n        expr.type === \"Identifier\"\n          ? // @ts-expect-error refine typings\n            this.tsParseExpressionStatement(node, expr)\n          : undefined;\n      return decl || super.parseExpressionStatement(node, expr);\n    }\n\n    // export type\n    // Should be true for anything parsed by `tsTryParseExportDeclaration`.\n    shouldParseExportDeclaration(): boolean {\n      if (this.tsIsDeclarationStart()) return true;\n      return super.shouldParseExportDeclaration();\n    }\n\n    // An apparent conditional expression could actually be an optional parameter in an arrow function.\n    parseConditional(\n      expr: N.Expression,\n      startPos: number,\n      startLoc: Position,\n      refExpressionErrors?: ExpressionErrors | null,\n    ): N.Expression {\n      // only do the expensive clone if there is a question mark\n      // and if we come from inside parens\n      if (!this.state.maybeInArrowParameters || !this.match(tt.question)) {\n        return super.parseConditional(\n          expr,\n          startPos,\n          startLoc,\n          refExpressionErrors,\n        );\n      }\n\n      const result = this.tryParse(() =>\n        super.parseConditional(expr, startPos, startLoc),\n      );\n\n      if (!result.node) {\n        if (result.error) {\n          /*:: invariant(refExpressionErrors != null) */\n          super.setOptionalParametersError(refExpressionErrors, result.error);\n        }\n\n        return expr;\n      }\n      if (result.error) this.state = result.failState;\n      return result.node;\n    }\n\n    // Note: These \"type casts\" are *not* valid TS expressions.\n    // But we parse them here and change them when completing the arrow function.\n    parseParenItem(\n      node: N.Expression,\n      startPos: number,\n      startLoc: Position,\n    ): N.Expression {\n      node = super.parseParenItem(node, startPos, startLoc);\n      if (this.eat(tt.question)) {\n        node.optional = true;\n        // Include questionmark in location of node\n        // Don't use this.finishNode() as otherwise we might process comments twice and\n        // include already consumed parens\n        this.resetEndLocation(node);\n      }\n\n      if (this.match(tt.colon)) {\n        const typeCastNode = this.startNodeAt<N.TsTypeCastExpression>(\n          startPos,\n          startLoc,\n        );\n        typeCastNode.expression = node;\n        typeCastNode.typeAnnotation = this.tsParseTypeAnnotation();\n\n        return this.finishNode(typeCastNode, \"TSTypeCastExpression\");\n      }\n\n      return node;\n    }\n\n    parseExportDeclaration(\n      node: N.ExportNamedDeclaration,\n    ): N.Declaration | undefined | null {\n      if (!this.state.isAmbientContext && this.isContextual(tt._declare)) {\n        return this.tsInAmbientContext(() => this.parseExportDeclaration(node));\n      }\n\n      // Store original location/position\n      const startPos = this.state.start;\n      const startLoc = this.state.startLoc;\n\n      const isDeclare = this.eatContextual(tt._declare);\n\n      if (\n        isDeclare &&\n        (this.isContextual(tt._declare) || !this.shouldParseExportDeclaration())\n      ) {\n        throw this.raise(TSErrors.ExpectedAmbientAfterExportDeclare, {\n          at: this.state.startLoc,\n        });\n      }\n\n      const isIdentifier = tokenIsIdentifier(this.state.type);\n      const declaration: N.Declaration | undefined | null =\n        (isIdentifier && this.tsTryParseExportDeclaration()) ||\n        super.parseExportDeclaration(node);\n\n      if (!declaration) return null;\n\n      if (\n        declaration.type === \"TSInterfaceDeclaration\" ||\n        declaration.type === \"TSTypeAliasDeclaration\" ||\n        isDeclare\n      ) {\n        node.exportKind = \"type\";\n      }\n\n      if (isDeclare) {\n        // Reset location to include `declare` in range\n        this.resetStartLocation(declaration, startPos, startLoc);\n\n        declaration.declare = true;\n      }\n\n      return declaration;\n    }\n\n    parseClassId(\n      node: N.Class,\n      isStatement: boolean,\n      optionalId?: boolean | null,\n    ): void {\n      if ((!isStatement || optionalId) && this.isContextual(tt._implements)) {\n        return;\n      }\n\n      super.parseClassId(\n        node,\n        isStatement,\n        optionalId,\n        (node as any).declare ? BIND_TS_AMBIENT : BIND_CLASS,\n      );\n      const typeParameters = this.tsTryParseTypeParameters(\n        this.tsParseInOutModifiers.bind(this),\n      );\n      if (typeParameters) node.typeParameters = typeParameters;\n    }\n\n    parseClassPropertyAnnotation(\n      node: N.ClassProperty | N.ClassPrivateProperty,\n    ): void {\n      if (!node.optional && this.eat(tt.bang)) {\n        node.definite = true;\n      }\n\n      const type = this.tsTryParseTypeAnnotation();\n      if (type) node.typeAnnotation = type;\n    }\n\n    parseClassProperty(node: N.ClassProperty): N.ClassProperty {\n      this.parseClassPropertyAnnotation(node);\n\n      if (\n        this.state.isAmbientContext &&\n        !(node.readonly && !node.typeAnnotation) &&\n        this.match(tt.eq)\n      ) {\n        this.raise(TSErrors.DeclareClassFieldHasInitializer, {\n          at: this.state.startLoc,\n        });\n      }\n      if (node.abstract && this.match(tt.eq)) {\n        const { key } = node;\n        this.raise(TSErrors.AbstractPropertyHasInitializer, {\n          at: this.state.startLoc,\n          propertyName:\n            key.type === \"Identifier\" && !node.computed\n              ? key.name\n              : `[${this.input.slice(key.start, key.end)}]`,\n        });\n      }\n\n      return super.parseClassProperty(node);\n    }\n\n    parseClassPrivateProperty(\n      node: N.ClassPrivateProperty,\n    ): N.ClassPrivateProperty {\n      // @ts-expect-error\n      if (node.abstract) {\n        this.raise(TSErrors.PrivateElementHasAbstract, { at: node });\n      }\n\n      // @ts-expect-error\n      if (node.accessibility) {\n        this.raise(TSErrors.PrivateElementHasAccessibility, {\n          at: node,\n          // @ts-expect-error refine typings\n          modifier: node.accessibility,\n        });\n      }\n\n      this.parseClassPropertyAnnotation(node);\n      return super.parseClassPrivateProperty(node);\n    }\n\n    pushClassMethod(\n      classBody: N.ClassBody,\n      method: N.ClassMethod,\n      isGenerator: boolean,\n      isAsync: boolean,\n      isConstructor: boolean,\n      allowsDirectSuper: boolean,\n    ): void {\n      const typeParameters = this.tsTryParseTypeParameters();\n      if (typeParameters && isConstructor) {\n        this.raise(TSErrors.ConstructorHasTypeParameters, {\n          at: typeParameters,\n        });\n      }\n\n      // @ts-expect-error\n      const { declare = false, kind } = method;\n\n      if (declare && (kind === \"get\" || kind === \"set\")) {\n        this.raise(TSErrors.DeclareAccessor, { at: method, kind });\n      }\n      if (typeParameters) method.typeParameters = typeParameters;\n      super.pushClassMethod(\n        classBody,\n        method,\n        isGenerator,\n        isAsync,\n        isConstructor,\n        allowsDirectSuper,\n      );\n    }\n\n    pushClassPrivateMethod(\n      classBody: N.ClassBody,\n      method: N.ClassPrivateMethod,\n      isGenerator: boolean,\n      isAsync: boolean,\n    ): void {\n      const typeParameters = this.tsTryParseTypeParameters();\n      if (typeParameters) method.typeParameters = typeParameters;\n      super.pushClassPrivateMethod(classBody, method, isGenerator, isAsync);\n    }\n\n    declareClassPrivateMethodInScope(\n      node: N.ClassPrivateMethod | N.EstreeMethodDefinition | N.TSDeclareMethod,\n      kind: number,\n    ) {\n      if (node.type === \"TSDeclareMethod\") return;\n      // This happens when using the \"estree\" plugin.\n      if (node.type === \"MethodDefinition\" && !node.value.body) return;\n\n      super.declareClassPrivateMethodInScope(node, kind);\n    }\n\n    parseClassSuper(node: N.Class): void {\n      super.parseClassSuper(node);\n      // handle `extends f<<T>\n      if (node.superClass && (this.match(tt.lt) || this.match(tt.bitShiftL))) {\n        // @ts-expect-error refine typings\n        node.superTypeParameters = this.tsParseTypeArgumentsInExpression();\n      }\n      if (this.eatContextual(tt._implements)) {\n        node.implements = this.tsParseHeritageClause(\"implements\");\n      }\n    }\n\n    parseObjPropValue(\n      prop: Undone<N.ObjectMember>,\n      ...args: [\n        number | undefined | null,\n        Position | undefined | null,\n        boolean,\n        boolean,\n        boolean,\n        boolean,\n        ExpressionErrors | null,\n      ]\n    ): N.ObjectMethod | N.ObjectProperty {\n      const typeParameters = this.tsTryParseTypeParameters();\n      if (typeParameters) prop.typeParameters = typeParameters;\n\n      return super.parseObjPropValue(prop, ...args);\n    }\n\n    parseFunctionParams(node: N.Function, allowModifiers?: boolean): void {\n      const typeParameters = this.tsTryParseTypeParameters();\n      if (typeParameters) node.typeParameters = typeParameters;\n      super.parseFunctionParams(node, allowModifiers);\n    }\n\n    // `let x: number;`\n    parseVarId(\n      decl: N.VariableDeclarator,\n      kind: \"var\" | \"let\" | \"const\",\n    ): void {\n      super.parseVarId(decl, kind);\n      if (\n        decl.id.type === \"Identifier\" &&\n        !this.hasPrecedingLineBreak() &&\n        this.eat(tt.bang)\n      ) {\n        decl.definite = true;\n      }\n\n      const type = this.tsTryParseTypeAnnotation();\n      if (type) {\n        decl.id.typeAnnotation = type;\n        this.resetEndLocation(decl.id); // set end position to end of type\n      }\n    }\n\n    // parse the return type of an async arrow function - let foo = (async (): number => {});\n    parseAsyncArrowFromCallExpression(\n      node: N.ArrowFunctionExpression,\n      call: N.CallExpression,\n    ): N.ArrowFunctionExpression {\n      if (this.match(tt.colon)) {\n        node.returnType = this.tsParseTypeAnnotation();\n      }\n      return super.parseAsyncArrowFromCallExpression(node, call);\n    }\n\n    parseMaybeAssign(\n      ...args: [ExpressionErrors | null, Function]\n    ): N.Expression {\n      // Note: When the JSX plugin is on, type assertions (`<T> x`) aren't valid syntax.\n\n      let state: State | undefined | null;\n      let jsx;\n      let typeCast;\n\n      if (\n        this.hasPlugin(\"jsx\") &&\n        (this.match(tt.jsxTagStart) || this.match(tt.lt))\n      ) {\n        // Prefer to parse JSX if possible. But may be an arrow fn.\n        state = this.state.clone();\n\n        jsx = this.tryParse(() => super.parseMaybeAssign(...args), state);\n\n        /*:: invariant(!jsx.aborted) */\n        /*:: invariant(jsx.node != null) */\n        if (!jsx.error) return jsx.node;\n\n        // Remove `tc.j_expr` or `tc.j_oTag` from context added\n        // by parsing `jsxTagStart` to stop the JSX plugin from\n        // messing with the tokens\n        const { context } = this.state;\n        const currentContext = context[context.length - 1];\n        if (currentContext === tc.j_oTag || currentContext === tc.j_expr) {\n          context.pop();\n        }\n      }\n\n      if (!jsx?.error && !this.match(tt.lt)) {\n        return super.parseMaybeAssign(...args);\n      }\n\n      // Either way, we're looking at a '<': tt.jsxTagStart or relational.\n\n      // If the state was cloned in the JSX parsing branch above but there\n      // have been any error in the tryParse call, this.state is set to state\n      // so we still need to clone it.\n      if (!state || state === this.state) state = this.state.clone();\n\n      let typeParameters: N.TsTypeParameterDeclaration | undefined | null;\n      const arrow = this.tryParse(abort => {\n        // This is similar to TypeScript's `tryParseParenthesizedArrowFunctionExpression`.\n        typeParameters = this.tsParseTypeParameters();\n        const expr = super.parseMaybeAssign(...args);\n\n        if (\n          expr.type !== \"ArrowFunctionExpression\" ||\n          expr.extra?.parenthesized\n        ) {\n          abort();\n        }\n\n        // Correct TypeScript code should have at least 1 type parameter, but don't crash on bad code.\n        if (typeParameters?.params.length !== 0) {\n          this.resetStartLocationFromNode(expr, typeParameters);\n        }\n        expr.typeParameters = typeParameters;\n\n        if (process.env.BABEL_8_BREAKING) {\n          if (\n            this.hasPlugin(\"jsx\") &&\n            expr.typeParameters.params.length === 1 &&\n            !expr.typeParameters.extra?.trailingComma\n          ) {\n            // report error if single type parameter used without trailing comma.\n            const parameter = expr.typeParameters.params[0];\n            if (!parameter.constraint) {\n              // A single type parameter must either have constraints\n              // or a trailing comma, otherwise it's ambiguous with JSX.\n              this.raise(TSErrors.SingleTypeParameterWithoutTrailingComma, {\n                at: createPositionWithColumnOffset(parameter.loc.end, 1),\n                typeParameterName: parameter.name.name,\n              });\n            }\n          }\n        }\n\n        return expr;\n      }, state);\n\n      /*:: invariant(arrow.node != null) */\n      if (!arrow.error && !arrow.aborted) {\n        // This error is reported outside of the this.tryParse call so that\n        // in case of <T>(x) => 2, we don't consider <T>(x) as a type assertion\n        // because of this error.\n        if (typeParameters) this.reportReservedArrowTypeParam(typeParameters);\n        // @ts-expect-error refine typings\n        return arrow.node;\n      }\n\n      if (!jsx) {\n        // Try parsing a type cast instead of an arrow function.\n        // This will never happen outside of JSX.\n        // (Because in JSX the '<' should be a jsxTagStart and not a relational.\n        assert(!this.hasPlugin(\"jsx\"));\n\n        // This will start with a type assertion (via parseMaybeUnary).\n        // But don't directly call `this.tsParseTypeAssertion` because we want to handle any binary after it.\n        typeCast = this.tryParse(() => super.parseMaybeAssign(...args), state);\n        /*:: invariant(!typeCast.aborted) */\n        /*:: invariant(typeCast.node != null) */\n        if (!typeCast.error) return typeCast.node;\n      }\n\n      if (jsx?.node) {\n        /*:: invariant(jsx.failState) */\n        this.state = jsx.failState;\n        return jsx.node;\n      }\n\n      if (arrow.node) {\n        /*:: invariant(arrow.failState) */\n        this.state = arrow.failState;\n        if (typeParameters) this.reportReservedArrowTypeParam(typeParameters);\n        // @ts-expect-error refine typings\n        return arrow.node;\n      }\n\n      if (typeCast?.node) {\n        /*:: invariant(typeCast.failState) */\n        this.state = typeCast.failState;\n        return typeCast.node;\n      }\n\n      if (jsx?.thrown) throw jsx.error;\n      if (arrow.thrown) throw arrow.error;\n      if (typeCast?.thrown) throw typeCast.error;\n\n      throw jsx?.error || arrow.error || typeCast?.error;\n    }\n\n    reportReservedArrowTypeParam(node: any) {\n      if (\n        node.params.length === 1 &&\n        !node.extra?.trailingComma &&\n        this.getPluginOption(\"typescript\", \"disallowAmbiguousJSXLike\")\n      ) {\n        this.raise(TSErrors.ReservedArrowTypeParam, { at: node });\n      }\n    }\n\n    // Handle type assertions\n    parseMaybeUnary(\n      refExpressionErrors?: ExpressionErrors | null,\n    ): N.Expression {\n      if (!this.hasPlugin(\"jsx\") && this.match(tt.lt)) {\n        return this.tsParseTypeAssertion();\n      } else {\n        return super.parseMaybeUnary(refExpressionErrors);\n      }\n    }\n\n    parseArrow(\n      node: Undone<N.ArrowFunctionExpression>,\n    ): Undone<N.ArrowFunctionExpression> | undefined | null {\n      if (this.match(tt.colon)) {\n        // This is different from how the TS parser does it.\n        // TS uses lookahead. The Babel Parser parses it as a parenthesized expression and converts.\n\n        const result = this.tryParse(abort => {\n          const returnType = this.tsParseTypeOrTypePredicateAnnotation(\n            tt.colon,\n          );\n          if (this.canInsertSemicolon() || !this.match(tt.arrow)) abort();\n          return returnType;\n        });\n\n        if (result.aborted) return;\n\n        if (!result.thrown) {\n          if (result.error) this.state = result.failState;\n          // @ts-expect-error refine typings\n          node.returnType = result.node;\n        }\n      }\n\n      return super.parseArrow(node);\n    }\n\n    // Allow type annotations inside of a parameter list.\n    parseAssignableListItemTypes(param: N.Pattern) {\n      if (this.eat(tt.question)) {\n        if (\n          param.type !== \"Identifier\" &&\n          !this.state.isAmbientContext &&\n          !this.state.inType\n        ) {\n          this.raise(TSErrors.PatternIsOptional, { at: param });\n        }\n\n        (param as any as N.Identifier).optional = true;\n      }\n      const type = this.tsTryParseTypeAnnotation();\n      if (type) param.typeAnnotation = type;\n      this.resetEndLocation(param);\n\n      return param;\n    }\n\n    isAssignable(node: N.Node, isBinding?: boolean): boolean {\n      switch (node.type) {\n        case \"TSTypeCastExpression\":\n          return this.isAssignable(node.expression, isBinding);\n        case \"TSParameterProperty\":\n          return true;\n        default:\n          return super.isAssignable(node, isBinding);\n      }\n    }\n\n    toAssignable(node: N.Node, isLHS: boolean = false): void {\n      switch (node.type) {\n        case \"ParenthesizedExpression\":\n          this.toAssignableParenthesizedExpression(node, isLHS);\n          break;\n        case \"TSAsExpression\":\n        case \"TSNonNullExpression\":\n        case \"TSTypeAssertion\":\n          if (isLHS) {\n            this.expressionScope.recordArrowParemeterBindingError(\n              TSErrors.UnexpectedTypeCastInParameter,\n              { at: node },\n            );\n          } else {\n            this.raise(TSErrors.UnexpectedTypeCastInParameter, { at: node });\n          }\n          this.toAssignable(node.expression, isLHS);\n          break;\n        case \"AssignmentExpression\":\n          if (!isLHS && node.left.type === \"TSTypeCastExpression\") {\n            node.left = this.typeCastToParameter(node.left);\n          }\n        /* fall through */\n        default:\n          super.toAssignable(node, isLHS);\n      }\n    }\n\n    toAssignableParenthesizedExpression(node: N.Node, isLHS: boolean): void {\n      switch (node.expression.type) {\n        case \"TSAsExpression\":\n        case \"TSNonNullExpression\":\n        case \"TSTypeAssertion\":\n        case \"ParenthesizedExpression\":\n          this.toAssignable(node.expression, isLHS);\n          break;\n        default:\n          super.toAssignable(node, isLHS);\n      }\n    }\n\n    checkToRestConversion(node: N.Node, allowPattern: boolean): void {\n      switch (node.type) {\n        case \"TSAsExpression\":\n        case \"TSTypeAssertion\":\n        case \"TSNonNullExpression\":\n          this.checkToRestConversion(node.expression, false);\n          break;\n        default:\n          super.checkToRestConversion(node, allowPattern);\n      }\n    }\n\n    // @ts-expect-error plugin overrides interfaces\n    isValidLVal(\n      type:\n        | \"TSTypeCastExpression\"\n        | \"TSParameterProperty\"\n        | \"TSNonNullExpression\"\n        | \"TSAsExpression\"\n        | \"TSTypeAssertion\",\n      isUnparenthesizedInAssign: boolean,\n      binding: BindingTypes,\n    ) {\n      return (\n        getOwn(\n          {\n            // Allow \"typecasts\" to appear on the left of assignment expressions,\n            // because it may be in an arrow function.\n            // e.g. `const f = (foo: number = 0) => foo;`\n            TSTypeCastExpression: true,\n            TSParameterProperty: \"parameter\",\n            TSNonNullExpression: \"expression\",\n            TSAsExpression: (binding !== BIND_NONE ||\n              !isUnparenthesizedInAssign) && [\"expression\", true],\n            TSTypeAssertion: (binding !== BIND_NONE ||\n              !isUnparenthesizedInAssign) && [\"expression\", true],\n          },\n          type,\n        ) || super.isValidLVal(type, isUnparenthesizedInAssign, binding)\n      );\n    }\n\n    parseBindingAtom(): N.Pattern {\n      switch (this.state.type) {\n        case tt._this:\n          // \"this\" may be the name of a parameter, so allow it.\n          return this.parseIdentifier(/* liberal */ true);\n        default:\n          return super.parseBindingAtom();\n      }\n    }\n\n    parseMaybeDecoratorArguments(expr: N.Expression): N.Expression {\n      // handles `@f<<T>`\n      if (this.match(tt.lt) || this.match(tt.bitShiftL)) {\n        const typeArguments = this.tsParseTypeArgumentsInExpression();\n\n        if (this.match(tt.parenL)) {\n          const call = super.parseMaybeDecoratorArguments(expr);\n          call.typeParameters = typeArguments;\n          return call;\n        }\n\n        this.unexpected(null, tt.parenL);\n      }\n\n      return super.parseMaybeDecoratorArguments(expr);\n    }\n\n    checkCommaAfterRest(\n      close: typeof charCodes[keyof typeof charCodes],\n    ): boolean {\n      if (\n        this.state.isAmbientContext &&\n        this.match(tt.comma) &&\n        this.lookaheadCharCode() === close\n      ) {\n        this.next();\n        return false;\n      } else {\n        return super.checkCommaAfterRest(close);\n      }\n    }\n\n    // === === === === === === === === === === === === === === === ===\n    // Note: All below methods are duplicates of something in flow.js.\n    // Not sure what the best way to combine these is.\n    // === === === === === === === === === === === === === === === ===\n\n    isClassMethod(): boolean {\n      return this.match(tt.lt) || super.isClassMethod();\n    }\n\n    isClassProperty(): boolean {\n      return (\n        this.match(tt.bang) || this.match(tt.colon) || super.isClassProperty()\n      );\n    }\n\n    parseMaybeDefault(\n      ...args: [\n        startPos?: number | null,\n        startLoc?: Position | null,\n        left?: N.Pattern | null,\n      ]\n    ): N.Pattern {\n      const node = super.parseMaybeDefault(...args);\n\n      if (\n        node.type === \"AssignmentPattern\" &&\n        node.typeAnnotation &&\n        node.right.start < node.typeAnnotation.start\n      ) {\n        this.raise(TSErrors.TypeAnnotationAfterAssign, {\n          at: node.typeAnnotation,\n        });\n      }\n\n      return node;\n    }\n\n    // ensure that inside types, we bypass the jsx parser plugin\n    getTokenFromCode(code: number): void {\n      if (this.state.inType) {\n        if (code === charCodes.greaterThan) {\n          return this.finishOp(tt.gt, 1);\n        }\n        if (code === charCodes.lessThan) {\n          return this.finishOp(tt.lt, 1);\n        }\n      }\n      return super.getTokenFromCode(code);\n    }\n\n    // used after we have finished parsing types\n    reScan_lt_gt() {\n      const { type } = this.state;\n      if (type === tt.lt) {\n        this.state.pos -= 1;\n        this.readToken_lt();\n      } else if (type === tt.gt) {\n        this.state.pos -= 1;\n        this.readToken_gt();\n      }\n    }\n\n    reScan_lt() {\n      const { type } = this.state;\n      if (type === tt.bitShiftL) {\n        this.state.pos -= 2;\n        this.finishOp(tt.lt, 1);\n        return tt.lt;\n      }\n      return type;\n    }\n\n    toAssignableList(\n      exprList: N.Expression[],\n      ...args: [Position | undefined | null, boolean]\n    ): void {\n      for (let i = 0; i < exprList.length; i++) {\n        const expr = exprList[i];\n        if (expr?.type === \"TSTypeCastExpression\") {\n          exprList[i] = this.typeCastToParameter(\n            expr as N.TsTypeCastExpression,\n          );\n        }\n      }\n      super.toAssignableList(exprList, ...args);\n    }\n\n    typeCastToParameter(node: N.TsTypeCastExpression): N.Node {\n      node.expression.typeAnnotation = node.typeAnnotation;\n\n      this.resetEndLocation(node.expression, node.typeAnnotation.loc.end);\n\n      return node.expression;\n    }\n\n    shouldParseArrow(params: Array<N.Node>) {\n      if (this.match(tt.colon)) {\n        return params.every(expr => this.isAssignable(expr, true));\n      }\n      return super.shouldParseArrow(params);\n    }\n\n    shouldParseAsyncArrow(): boolean {\n      return this.match(tt.colon) || super.shouldParseAsyncArrow();\n    }\n\n    canHaveLeadingDecorator() {\n      // Avoid unnecessary lookahead in checking for abstract class unless needed!\n      return super.canHaveLeadingDecorator() || this.isAbstractClass();\n    }\n\n    jsxParseOpeningElementAfterName(\n      node: N.JSXOpeningElement,\n    ): N.JSXOpeningElement {\n      // handles `<Component<<T>`\n      if (this.match(tt.lt) || this.match(tt.bitShiftL)) {\n        const typeArguments = this.tsTryParseAndCatch(() =>\n          // @ts-expect-error: refine typings\n          this.tsParseTypeArgumentsInExpression(),\n        );\n        // @ts-expect-error: refine typings\n        if (typeArguments) node.typeParameters = typeArguments;\n      }\n      // @ts-expect-error calling JSX methods\n      return super.jsxParseOpeningElementAfterName(node);\n    }\n\n    getGetterSetterExpectedParamCount(\n      method: N.ObjectMethod | N.ClassMethod,\n    ): number {\n      const baseCount = super.getGetterSetterExpectedParamCount(method);\n      const params = this.getObjectOrClassMethodParams(method);\n      const firstParam = params[0];\n      const hasContextParam = firstParam && this.isThisParam(firstParam);\n\n      return hasContextParam ? baseCount + 1 : baseCount;\n    }\n\n    parseCatchClauseParam(): N.Pattern {\n      const param = super.parseCatchClauseParam();\n      const type = this.tsTryParseTypeAnnotation();\n\n      if (type) {\n        param.typeAnnotation = type;\n        this.resetEndLocation(param);\n      }\n\n      return param;\n    }\n\n    tsInAmbientContext<T>(cb: () => T): T {\n      const oldIsAmbientContext = this.state.isAmbientContext;\n      this.state.isAmbientContext = true;\n      try {\n        return cb();\n      } finally {\n        this.state.isAmbientContext = oldIsAmbientContext;\n      }\n    }\n\n    parseClass<T extends N.Class>(\n      node: Undone<T>,\n      ...args: [boolean, boolean]\n    ): T {\n      const oldInAbstractClass = this.state.inAbstractClass;\n      this.state.inAbstractClass = !!(node as any).abstract;\n      try {\n        return super.parseClass(node, ...args);\n      } finally {\n        this.state.inAbstractClass = oldInAbstractClass;\n      }\n    }\n\n    tsParseAbstractDeclaration(\n      node: any,\n    ): N.ClassDeclaration | N.TsInterfaceDeclaration | undefined | null {\n      if (this.match(tt._class)) {\n        node.abstract = true;\n        return this.parseClass<N.ClassDeclaration>(\n          node as N.ClassDeclaration,\n          /* isStatement */ true,\n          /* optionalId */ false,\n        );\n      } else if (this.isContextual(tt._interface)) {\n        // for invalid abstract interface\n\n        // To avoid\n        //   abstract interface\n        //   Foo {}\n        if (!this.hasFollowingLineBreak()) {\n          node.abstract = true;\n          this.raise(TSErrors.NonClassMethodPropertyHasAbstractModifer, {\n            at: node,\n          });\n          return this.tsParseInterfaceDeclaration(\n            node as N.TsInterfaceDeclaration,\n          );\n        }\n      } else {\n        this.unexpected(null, tt._class);\n      }\n    }\n\n    parseMethod<\n      T extends N.ObjectMethod | N.ClassMethod | N.ClassPrivateMethod,\n    >(\n      ...args: [\n        Undone<T>,\n        boolean,\n        boolean,\n        boolean,\n        boolean,\n        T[\"type\"],\n        boolean,\n      ]\n    ) {\n      const method = super.parseMethod(...args);\n      // @ts-expect-error abstract is not in ObjectMethod\n      if (method.abstract) {\n        const hasBody = this.hasPlugin(\"estree\")\n          ? // @ts-expect-error estree typings\n            !!method.value.body\n          : !!method.body;\n        if (hasBody) {\n          const { key } = method;\n          this.raise(TSErrors.AbstractMethodHasImplementation, {\n            at: method,\n            methodName:\n              key.type === \"Identifier\" && !method.computed\n                ? key.name\n                : `[${this.input.slice(key.start, key.end)}]`,\n          });\n        }\n      }\n      return method;\n    }\n\n    tsParseTypeParameterName(): N.Identifier | string {\n      const typeName: N.Identifier = this.parseIdentifier();\n      return process.env.BABEL_8_BREAKING ? typeName : typeName.name;\n    }\n\n    shouldParseAsAmbientContext(): boolean {\n      return !!this.getPluginOption(\"typescript\", \"dts\");\n    }\n\n    parse() {\n      if (this.shouldParseAsAmbientContext()) {\n        this.state.isAmbientContext = true;\n      }\n      return super.parse();\n    }\n\n    getExpression() {\n      if (this.shouldParseAsAmbientContext()) {\n        this.state.isAmbientContext = true;\n      }\n      return super.getExpression();\n    }\n\n    parseExportSpecifier(\n      node: any,\n      isString: boolean,\n      isInTypeExport: boolean,\n      isMaybeTypeOnly: boolean,\n    ) {\n      if (!isString && isMaybeTypeOnly) {\n        this.parseTypeOnlyImportExportSpecifier(\n          node,\n          /* isImport */ false,\n          isInTypeExport,\n        );\n        return this.finishNode<N.ExportSpecifier>(node, \"ExportSpecifier\");\n      }\n      node.exportKind = \"value\";\n      return super.parseExportSpecifier(\n        node,\n        isString,\n        isInTypeExport,\n        isMaybeTypeOnly,\n      );\n    }\n\n    parseImportSpecifier(\n      specifier: any,\n      importedIsString: boolean,\n      isInTypeOnlyImport: boolean,\n      isMaybeTypeOnly: boolean,\n    ): N.ImportSpecifier {\n      if (!importedIsString && isMaybeTypeOnly) {\n        this.parseTypeOnlyImportExportSpecifier(\n          specifier,\n          /* isImport */ true,\n          isInTypeOnlyImport,\n        );\n        return this.finishNode<N.ImportSpecifier>(specifier, \"ImportSpecifier\");\n      }\n      specifier.importKind = \"value\";\n      return super.parseImportSpecifier(\n        specifier,\n        importedIsString,\n        isInTypeOnlyImport,\n        isMaybeTypeOnly,\n      );\n    }\n\n    parseTypeOnlyImportExportSpecifier(\n      node: any,\n      isImport: boolean,\n      isInTypeOnlyImportExport: boolean,\n    ): void {\n      const leftOfAsKey = isImport ? \"imported\" : \"local\";\n      const rightOfAsKey = isImport ? \"local\" : \"exported\";\n\n      let leftOfAs = node[leftOfAsKey];\n      let rightOfAs;\n\n      let hasTypeSpecifier = false;\n      let canParseAsKeyword = true;\n\n      const loc = leftOfAs.loc.start;\n\n      // https://github.com/microsoft/TypeScript/blob/fc4f9d83d5939047aa6bb2a43965c6e9bbfbc35b/src/compiler/parser.ts#L7411-L7456\n      // import { type } from \"mod\";          - hasTypeSpecifier: false, leftOfAs: type\n      // import { type as } from \"mod\";       - hasTypeSpecifier: true,  leftOfAs: as\n      // import { type as as } from \"mod\";    - hasTypeSpecifier: false, leftOfAs: type, rightOfAs: as\n      // import { type as as as } from \"mod\"; - hasTypeSpecifier: true,  leftOfAs: as,   rightOfAs: as\n      if (this.isContextual(tt._as)) {\n        // { type as ...? }\n        const firstAs = this.parseIdentifier();\n        if (this.isContextual(tt._as)) {\n          // { type as as ...? }\n          const secondAs = this.parseIdentifier();\n          if (tokenIsKeywordOrIdentifier(this.state.type)) {\n            // { type as as something }\n            hasTypeSpecifier = true;\n            leftOfAs = firstAs;\n            rightOfAs = isImport\n              ? this.parseIdentifier()\n              : this.parseModuleExportName();\n            canParseAsKeyword = false;\n          } else {\n            // { type as as }\n            rightOfAs = secondAs;\n            canParseAsKeyword = false;\n          }\n        } else if (tokenIsKeywordOrIdentifier(this.state.type)) {\n          // { type as something }\n          canParseAsKeyword = false;\n          rightOfAs = isImport\n            ? this.parseIdentifier()\n            : this.parseModuleExportName();\n        } else {\n          // { type as }\n          hasTypeSpecifier = true;\n          leftOfAs = firstAs;\n        }\n      } else if (tokenIsKeywordOrIdentifier(this.state.type)) {\n        // { type something ...? }\n        hasTypeSpecifier = true;\n        if (isImport) {\n          leftOfAs = this.parseIdentifier(true);\n          if (!this.isContextual(tt._as)) {\n            this.checkReservedWord(\n              leftOfAs.name,\n              leftOfAs.loc.start,\n              true,\n              true,\n            );\n          }\n        } else {\n          leftOfAs = this.parseModuleExportName();\n        }\n      }\n      if (hasTypeSpecifier && isInTypeOnlyImportExport) {\n        this.raise(\n          isImport\n            ? TSErrors.TypeModifierIsUsedInTypeImports\n            : TSErrors.TypeModifierIsUsedInTypeExports,\n          { at: loc },\n        );\n      }\n\n      node[leftOfAsKey] = leftOfAs;\n      node[rightOfAsKey] = rightOfAs;\n\n      const kindKey = isImport ? \"importKind\" : \"exportKind\";\n      node[kindKey] = hasTypeSpecifier ? \"type\" : \"value\";\n\n      if (canParseAsKeyword && this.eatContextual(tt._as)) {\n        node[rightOfAsKey] = isImport\n          ? this.parseIdentifier()\n          : this.parseModuleExportName();\n      }\n      if (!node[rightOfAsKey]) {\n        node[rightOfAsKey] = cloneIdentifier(node[leftOfAsKey]);\n      }\n      if (isImport) {\n        this.checkIdentifier(node[rightOfAsKey], BIND_LEXICAL);\n      }\n    }\n  };\n\nfunction isPossiblyLiteralEnum(expression: N.Expression): boolean {\n  if (expression.type !== \"MemberExpression\") return false;\n\n  const { computed, property } = expression;\n\n  if (\n    computed &&\n    property.type !== \"StringLiteral\" &&\n    (property.type !== \"TemplateLiteral\" || property.expressions.length > 0)\n  ) {\n    return false;\n  }\n\n  return isUncomputedMemberExpressionChain(expression.object);\n}\n\nfunction isUncomputedMemberExpressionChain(expression: N.Expression): boolean {\n  if (expression.type === \"Identifier\") return true;\n  if (expression.type !== \"MemberExpression\") return false;\n  if (expression.computed) return false;\n\n  return isUncomputedMemberExpressionChain(expression.object);\n}\n","import * as charCodes from \"charcodes\";\n\nimport { tokenLabelName, tt } from \"../tokenizer/types\";\nimport type Parser from \"../parser\";\nimport * as N from \"../types\";\nimport { ParseErrorEnum } from \"../parse-error\";\nimport type { Undone } from \"../parser/node\";\nimport type { Position } from \"../util/location\";\n\ntype $Call1<F extends (...args: any) => any, A> = F extends (\n  a: A,\n  ...args: any\n) => infer R\n  ? R\n  : never;\n\nexport type PlaceholderTypes =\n  | \"Identifier\"\n  | \"StringLiteral\"\n  | \"Expression\"\n  | \"Statement\"\n  | \"Declaration\"\n  | \"BlockStatement\"\n  | \"ClassBody\"\n  | \"Pattern\";\n\n// $PropertyType doesn't support enums. Use a fake \"switch\" (GetPlaceholderNode)\n//type MaybePlaceholder<T: PlaceholderTypes> = $PropertyType<N, T> | N.Placeholder<T>;\n\ntype _Switch<Value, Cases, Index> = $Call1<\n  // @ts-expect-error Fixme broken fake switch\n  (a: Cases[Index][0]) => Cases[Index][1],\n  Value\n>;\n\ntype $Switch<Value, Cases> = _Switch<Value, Cases, any>;\ntype NodeOf<T extends PlaceholderTypes> = $Switch<\n  T,\n  [\n    [\"Identifier\", N.Identifier],\n    [\"StringLiteral\", N.StringLiteral],\n    [\"Expression\", N.Expression],\n    [\"Statement\", N.Statement],\n    [\"Declaration\", N.Declaration],\n    [\"BlockStatement\", N.BlockStatement],\n    [\"ClassBody\", N.ClassBody],\n    [\"Pattern\", N.Pattern],\n  ]\n>;\n\n// Placeholder<T> breaks everything, because its type is incompatible with\n// the substituted nodes.\ntype MaybePlaceholder<T extends PlaceholderTypes> = NodeOf<T>; // | Placeholder<T>\n\n/* eslint sort-keys: \"error\" */\nconst PlaceholderErrors = ParseErrorEnum`placeholders`({\n  ClassNameIsRequired: \"A class name is required.\",\n  UnexpectedSpace: \"Unexpected space in placeholder.\",\n});\n\n/* eslint-disable sort-keys */\n\nexport default (superClass: {\n  new (...args: any): Parser;\n}): {\n  new (...args: any): Parser;\n} =>\n  // @ts-expect-error Plugin will override parser interface\n  class extends superClass {\n    parsePlaceholder<T extends PlaceholderTypes>(\n      expectedNode: T,\n    ): /*?N.Placeholder<T>*/ MaybePlaceholder<T> | undefined | null {\n      if (this.match(tt.placeholder)) {\n        const node = this.startNode();\n        this.next();\n        this.assertNoSpace();\n\n        // We can't use this.parseIdentifier because\n        // we don't want nested placeholders.\n        node.name = super.parseIdentifier(/* liberal */ true);\n\n        this.assertNoSpace();\n        this.expect(tt.placeholder);\n        // @ts-expect-error placeholder typings\n        return this.finishPlaceholder(node, expectedNode);\n      }\n    }\n\n    finishPlaceholder<T extends PlaceholderTypes>(\n      node: N.Node,\n      expectedNode: T,\n    ): /*N.Placeholder<T>*/ MaybePlaceholder<T> {\n      const isFinished = !!(node.expectedNode && node.type === \"Placeholder\");\n      node.expectedNode = expectedNode;\n\n      return isFinished ? node : this.finishNode(node, \"Placeholder\");\n    }\n\n    /* ============================================================ *\n     * tokenizer/index.js                                           *\n     * ============================================================ */\n\n    getTokenFromCode(code: number) {\n      if (\n        code === charCodes.percentSign &&\n        this.input.charCodeAt(this.state.pos + 1) === charCodes.percentSign\n      ) {\n        return this.finishOp(tt.placeholder, 2);\n      }\n      // @ts-expect-error placeholder typings\n      return super.getTokenFromCode(...arguments);\n    }\n\n    /* ============================================================ *\n     * parser/expression.js                                         *\n     * ============================================================ */\n\n    parseExprAtom(): MaybePlaceholder<\"Expression\"> {\n      return (\n        this.parsePlaceholder(\"Expression\") || super.parseExprAtom(...arguments)\n      );\n    }\n\n    // @ts-expect-error Plugin will override parser interface\n    parseIdentifier(): MaybePlaceholder<\"Identifier\"> {\n      // NOTE: This function only handles identifiers outside of\n      // expressions and binding patterns, since they are already\n      // handled by the parseExprAtom and parseBindingAtom functions.\n      // This is needed, for example, to parse \"class %%NAME%% {}\".\n      return (\n        this.parsePlaceholder(\"Identifier\") ||\n        super.parseIdentifier(...arguments)\n      );\n    }\n\n    checkReservedWord(\n      word: string,\n      startLoc: Position,\n      checkKeywords: boolean,\n      isBinding: boolean,\n    ): void {\n      // Sometimes we call #checkReservedWord(node.name), expecting\n      // that node is an Identifier. If it is a Placeholder, name\n      // will be undefined.\n      if (word !== undefined) {\n        super.checkReservedWord(word, startLoc, checkKeywords, isBinding);\n      }\n    }\n\n    /* ============================================================ *\n     * parser/lval.js                                               *\n     * ============================================================ */\n\n    // @ts-expect-error Plugin will override parser interface\n    parseBindingAtom(): MaybePlaceholder<\"Pattern\"> {\n      return this.parsePlaceholder(\"Pattern\") || super.parseBindingAtom();\n    }\n\n    // @ts-expect-error Plugin will override parser interface\n    isValidLVal(type: string, ...rest: [boolean, BindingTypes]) {\n      return type === \"Placeholder\" || super.isValidLVal(type, ...rest);\n    }\n\n    toAssignable(node: N.Node, isLHS: boolean): void {\n      if (\n        node &&\n        node.type === \"Placeholder\" &&\n        node.expectedNode === \"Expression\"\n      ) {\n        node.expectedNode = \"Pattern\";\n      } else {\n        super.toAssignable(node, isLHS);\n      }\n    }\n\n    /* ============================================================ *\n     * parser/statement.js                                          *\n     * ============================================================ */\n\n    isLet(context?: string | null): boolean {\n      if (super.isLet(context)) {\n        return true;\n      }\n\n      // Replicate the original checks that lead to looking ahead for an\n      // identifier.\n      if (!this.isContextual(tt._let)) {\n        return false;\n      }\n      if (context) return false;\n\n      // Accept \"let %%\" as the start of \"let %%placeholder%%\", as though the\n      // placeholder were an identifier.\n      const nextToken = this.lookahead();\n      if (nextToken.type === tt.placeholder) {\n        return true;\n      }\n\n      return false;\n    }\n\n    verifyBreakContinue(\n      node: N.BreakStatement | N.ContinueStatement,\n      isBreak: boolean,\n    ) {\n      // @ts-expect-error: node.label could be Placeholder\n      if (node.label && node.label.type === \"Placeholder\") return;\n      super.verifyBreakContinue(node, isBreak);\n    }\n\n    // @ts-expect-error Plugin will override parser interface\n    parseExpressionStatement(\n      node: MaybePlaceholder<\"Statement\">,\n      expr: N.Expression,\n    ): MaybePlaceholder<\"Statement\"> {\n      if (\n        expr.type !== \"Placeholder\" ||\n        (expr.extra && expr.extra.parenthesized)\n      ) {\n        // @ts-expect-error placeholder typings\n        return super.parseExpressionStatement(node, expr);\n      }\n\n      if (this.match(tt.colon)) {\n        // @ts-expect-error\n        const stmt: N.LabeledStatement = node;\n        // @ts-expect-error: Fixme: placeholder typings\n        stmt.label = this.finishPlaceholder(expr, \"Identifier\");\n        this.next();\n        stmt.body = super.parseStatement(\"label\");\n        return this.finishNode(stmt, \"LabeledStatement\");\n      }\n\n      this.semicolon();\n      // @ts-expect-error: Fixme: placeholder typings\n      node.name = expr.name;\n      return this.finishPlaceholder(node, \"Statement\");\n    }\n    // @ts-expect-error Plugin will override parser interface\n    parseBlock(): MaybePlaceholder<\"BlockStatement\"> {\n      return (\n        this.parsePlaceholder(\"BlockStatement\") ||\n        super.parseBlock(...arguments)\n      );\n    }\n    // @ts-expect-error Plugin will override parser interface\n    parseFunctionId(): MaybePlaceholder<\"Identifier\"> | undefined | null {\n      return (\n        this.parsePlaceholder(\"Identifier\") ||\n        super.parseFunctionId(...arguments)\n      );\n    }\n    // @ts-expect-error Plugin will override parser interface\n    parseClass<T extends N.Class>(\n      node: T,\n      isStatement: /* T === ClassDeclaration */ boolean,\n      optionalId?: boolean,\n    ): T {\n      const type = isStatement ? \"ClassDeclaration\" : \"ClassExpression\";\n\n      this.next();\n      this.takeDecorators(node);\n      const oldStrict = this.state.strict;\n\n      const placeholder = this.parsePlaceholder(\"Identifier\");\n      if (placeholder) {\n        if (\n          this.match(tt._extends) ||\n          this.match(tt.placeholder) ||\n          this.match(tt.braceL)\n        ) {\n          // @ts-expect-error: placeholder typings\n          node.id = placeholder;\n        } else if (optionalId || !isStatement) {\n          node.id = null;\n          // @ts-expect-error: placeholder typings\n          node.body = this.finishPlaceholder(placeholder, \"ClassBody\");\n          return this.finishNode(node, type);\n        } else {\n          throw this.raise(PlaceholderErrors.ClassNameIsRequired, {\n            at: this.state.startLoc,\n          });\n        }\n      } else {\n        this.parseClassId(node, isStatement, optionalId);\n      }\n\n      super.parseClassSuper(node);\n      // @ts-expect-error placeholder typings\n      node.body =\n        this.parsePlaceholder(\"ClassBody\") ||\n        super.parseClassBody(!!node.superClass, oldStrict);\n      return this.finishNode(node, type);\n    }\n    // @ts-expect-error Plugin will override parser interface\n    parseExport(node: N.Node): N.Node {\n      const placeholder = this.parsePlaceholder(\"Identifier\");\n      // @ts-expect-error placeholder typings\n      if (!placeholder) return super.parseExport(...arguments);\n\n      if (!this.isContextual(tt._from) && !this.match(tt.comma)) {\n        // export %%DECL%%;\n        node.specifiers = [];\n        node.source = null;\n        node.declaration = this.finishPlaceholder(placeholder, \"Declaration\");\n        return this.finishNode(node, \"ExportNamedDeclaration\");\n      }\n\n      // export %%NAME%% from \"foo\";\n      this.expectPlugin(\"exportDefaultFrom\");\n      const specifier = this.startNode();\n      specifier.exported = placeholder;\n      node.specifiers = [this.finishNode(specifier, \"ExportDefaultSpecifier\")];\n\n      return super.parseExport(node);\n    }\n\n    isExportDefaultSpecifier(): boolean {\n      if (this.match(tt._default)) {\n        const next = this.nextTokenStart();\n        if (this.isUnparsedContextual(next, \"from\")) {\n          if (\n            this.input.startsWith(\n              tokenLabelName(tt.placeholder),\n              this.nextTokenStartSince(next + 4),\n            )\n          ) {\n            return true;\n          }\n        }\n      }\n      return super.isExportDefaultSpecifier();\n    }\n\n    maybeParseExportDefaultSpecifier(node: N.Node): boolean {\n      if (node.specifiers && node.specifiers.length > 0) {\n        // \"export %%NAME%%\" has already been parsed by #parseExport.\n        return true;\n      }\n      return super.maybeParseExportDefaultSpecifier(node);\n    }\n\n    checkExport(node: N.ExportNamedDeclaration): void {\n      const { specifiers } = node;\n      if (specifiers?.length) {\n        node.specifiers = specifiers.filter(\n          // @ts-expect-error placeholder typings\n          node => node.exported.type === \"Placeholder\",\n        );\n      }\n      super.checkExport(node);\n      node.specifiers = specifiers;\n    }\n\n    parseImport(\n      node: Undone<N.ImportDeclaration>,\n    ): N.ImportDeclaration | N.TsImportEqualsDeclaration {\n      const placeholder = this.parsePlaceholder(\"Identifier\");\n      // @ts-expect-error placeholder typings\n      if (!placeholder) return super.parseImport(...arguments);\n\n      node.specifiers = [];\n\n      if (!this.isContextual(tt._from) && !this.match(tt.comma)) {\n        // import %%STRING%%;\n        // @ts-expect-error placeholder typings\n        node.source = this.finishPlaceholder(placeholder, \"StringLiteral\");\n        this.semicolon();\n        return this.finishNode(node, \"ImportDeclaration\");\n      }\n\n      // import %%DEFAULT%% ...\n      const specifier =\n        this.startNodeAtNode<N.ImportDefaultSpecifier>(placeholder);\n      // @ts-expect-error placeholder typings\n      specifier.local = placeholder;\n      node.specifiers.push(\n        this.finishNode(specifier, \"ImportDefaultSpecifier\"),\n      );\n\n      if (this.eat(tt.comma)) {\n        // import %%DEFAULT%%, * as ...\n        const hasStarImport = this.maybeParseStarImportSpecifier(node);\n\n        // import %%DEFAULT%%, { ...\n        if (!hasStarImport) this.parseNamedImportSpecifiers(node);\n      }\n\n      this.expectContextual(tt._from);\n      // @ts-expect-error placeholder typings\n      node.source = this.parseImportSource();\n      this.semicolon();\n      return this.finishNode(node, \"ImportDeclaration\");\n    }\n\n    // @ts-expect-error placeholder typings\n    parseImportSource(): MaybePlaceholder<\"StringLiteral\"> {\n      // import ... from %%STRING%%;\n\n      return (\n        this.parsePlaceholder(\"StringLiteral\") ||\n        // @ts-expect-error placeholder typings\n        super.parseImportSource(...arguments)\n      );\n    }\n\n    // Throws if the current token and the prev one are separated by a space.\n    assertNoSpace(): void {\n      if (this.state.start > this.state.lastTokEndLoc.index) {\n        this.raise(PlaceholderErrors.UnexpectedSpace, {\n          at: this.state.lastTokEndLoc,\n        });\n      }\n    }\n  };\n","import type Parser from \"../parser\";\nimport { tokenIsIdentifier, tt } from \"../tokenizer/types\";\nimport * as N from \"../types\";\n\nexport default (superClass: {\n  new (...args: any): Parser;\n}): {\n  new (...args: any): Parser;\n} =>\n  class extends superClass {\n    parseV8Intrinsic(): N.Expression | void {\n      if (this.match(tt.modulo)) {\n        const v8IntrinsicStartLoc = this.state.startLoc;\n        // let the `loc` of Identifier starts from `%`\n        const node = this.startNode<N.Identifier>();\n        this.next(); // eat '%'\n        if (tokenIsIdentifier(this.state.type)) {\n          const name = this.parseIdentifierName(this.state.start);\n          const identifier = this.createIdentifier(node, name);\n          // @ts-expect-error: avoid mutating AST types\n          identifier.type = \"V8IntrinsicIdentifier\";\n          if (this.match(tt.parenL)) {\n            return identifier;\n          }\n        }\n        this.unexpected(v8IntrinsicStartLoc);\n      }\n    }\n\n    /* ============================================================ *\n     * parser/expression.js                                         *\n     * ============================================================ */\n\n    parseExprAtom(): N.Expression {\n      return this.parseV8Intrinsic() || super.parseExprAtom(...arguments);\n    }\n  };\n","import type Parser from \"./parser\";\nimport type { PluginConfig } from \"./typings\";\n\nexport type Plugin = PluginConfig;\n\nexport type PluginList = PluginConfig[];\n\nexport type MixinPlugin = (superClass: { new (...args: any): Parser }) => {\n  new (...args: any): Parser;\n};\n\n// This function’s second parameter accepts either a string (plugin name) or an\n// array pair (plugin name and options object). If an options object is given,\n// then each value is non-recursively checked for identity with the actual\n// option value of each plugin in the first argument (which is an array of\n// plugin names or array pairs).\nexport function hasPlugin(\n  plugins: PluginList,\n  expectedConfig: PluginConfig,\n): boolean {\n  // The expectedOptions object is by default an empty object if the given\n  // expectedConfig argument does not give an options object (i.e., if it is a\n  // string).\n  const [expectedName, expectedOptions] =\n    typeof expectedConfig === \"string\" ? [expectedConfig, {}] : expectedConfig;\n\n  const expectedKeys = Object.keys(expectedOptions);\n\n  const expectedOptionsIsEmpty = expectedKeys.length === 0;\n\n  return plugins.some(p => {\n    if (typeof p === \"string\") {\n      return expectedOptionsIsEmpty && p === expectedName;\n    } else {\n      const [pluginName, pluginOptions] = p;\n      if (pluginName !== expectedName) {\n        return false;\n      }\n      for (const key of expectedKeys) {\n        // @ts-expect-error key may not exist in plugin options\n        if (pluginOptions[key] !== expectedOptions[key]) {\n          return false;\n        }\n      }\n      return true;\n    }\n  });\n}\n\nexport function getPluginOption(\n  plugins: PluginList,\n  name: string,\n  option: string,\n) {\n  const plugin = plugins.find(plugin => {\n    if (Array.isArray(plugin)) {\n      return plugin[0] === name;\n    } else {\n      return plugin === name;\n    }\n  });\n\n  if (plugin && Array.isArray(plugin)) {\n    // @ts-expect-error Fixme: should check whether option is defined\n    return plugin[1][option];\n  }\n\n  return null;\n}\n\nconst PIPELINE_PROPOSALS = [\"minimal\", \"fsharp\", \"hack\", \"smart\"];\nconst TOPIC_TOKENS = [\"^^\", \"@@\", \"^\", \"%\", \"#\"];\nconst RECORD_AND_TUPLE_SYNTAX_TYPES = [\"hash\", \"bar\"];\n\nexport function validatePlugins(plugins: PluginList) {\n  if (hasPlugin(plugins, \"decorators\")) {\n    if (hasPlugin(plugins, \"decorators-legacy\")) {\n      throw new Error(\n        \"Cannot use the decorators and decorators-legacy plugin together\",\n      );\n    }\n\n    const decoratorsBeforeExport = getPluginOption(\n      plugins,\n      \"decorators\",\n      \"decoratorsBeforeExport\",\n    );\n    if (decoratorsBeforeExport == null) {\n      throw new Error(\n        \"The 'decorators' plugin requires a 'decoratorsBeforeExport' option,\" +\n          \" whose value must be a boolean. If you are migrating from\" +\n          \" Babylon/Babel 6 or want to use the old decorators proposal, you\" +\n          \" should use the 'decorators-legacy' plugin instead of 'decorators'.\",\n      );\n    } else if (typeof decoratorsBeforeExport !== \"boolean\") {\n      throw new Error(\"'decoratorsBeforeExport' must be a boolean.\");\n    }\n  }\n\n  if (hasPlugin(plugins, \"flow\") && hasPlugin(plugins, \"typescript\")) {\n    throw new Error(\"Cannot combine flow and typescript plugins.\");\n  }\n\n  if (hasPlugin(plugins, \"placeholders\") && hasPlugin(plugins, \"v8intrinsic\")) {\n    throw new Error(\"Cannot combine placeholders and v8intrinsic plugins.\");\n  }\n\n  if (hasPlugin(plugins, \"pipelineOperator\")) {\n    const proposal = getPluginOption(plugins, \"pipelineOperator\", \"proposal\");\n\n    if (!PIPELINE_PROPOSALS.includes(proposal)) {\n      const proposalList = PIPELINE_PROPOSALS.map(p => `\"${p}\"`).join(\", \");\n      throw new Error(\n        `\"pipelineOperator\" requires \"proposal\" option whose value must be one of: ${proposalList}.`,\n      );\n    }\n\n    const tupleSyntaxIsHash = hasPlugin(plugins, [\n      \"recordAndTuple\",\n      { syntaxType: \"hash\" },\n    ]);\n\n    if (proposal === \"hack\") {\n      if (hasPlugin(plugins, \"placeholders\")) {\n        throw new Error(\n          \"Cannot combine placeholders plugin and Hack-style pipes.\",\n        );\n      }\n\n      if (hasPlugin(plugins, \"v8intrinsic\")) {\n        throw new Error(\n          \"Cannot combine v8intrinsic plugin and Hack-style pipes.\",\n        );\n      }\n\n      const topicToken = getPluginOption(\n        plugins,\n        \"pipelineOperator\",\n        \"topicToken\",\n      );\n\n      if (!TOPIC_TOKENS.includes(topicToken)) {\n        const tokenList = TOPIC_TOKENS.map(t => `\"${t}\"`).join(\", \");\n\n        throw new Error(\n          `\"pipelineOperator\" in \"proposal\": \"hack\" mode also requires a \"topicToken\" option whose value must be one of: ${tokenList}.`,\n        );\n      }\n\n      if (topicToken === \"#\" && tupleSyntaxIsHash) {\n        throw new Error(\n          'Plugin conflict between `[\"pipelineOperator\", { proposal: \"hack\", topicToken: \"#\" }]` and `[\"recordAndtuple\", { syntaxType: \"hash\"}]`.',\n        );\n      }\n    } else if (proposal === \"smart\" && tupleSyntaxIsHash) {\n      throw new Error(\n        'Plugin conflict between `[\"pipelineOperator\", { proposal: \"smart\" }]` and `[\"recordAndtuple\", { syntaxType: \"hash\"}]`.',\n      );\n    }\n  }\n\n  if (hasPlugin(plugins, \"moduleAttributes\")) {\n    if (process.env.BABEL_8_BREAKING) {\n      throw new Error(\n        \"`moduleAttributes` has been removed in Babel 8, please use `importAssertions` parser plugin, or `@babel/plugin-syntax-import-assertions`.\",\n      );\n    } else {\n      if (hasPlugin(plugins, \"importAssertions\")) {\n        throw new Error(\n          \"Cannot combine importAssertions and moduleAttributes plugins.\",\n        );\n      }\n      const moduleAttributesVersionPluginOption = getPluginOption(\n        plugins,\n        \"moduleAttributes\",\n        \"version\",\n      );\n      if (moduleAttributesVersionPluginOption !== \"may-2020\") {\n        throw new Error(\n          \"The 'moduleAttributes' plugin requires a 'version' option,\" +\n            \" representing the last proposal update. Currently, the\" +\n            \" only supported value is 'may-2020'.\",\n        );\n      }\n    }\n  }\n\n  if (\n    hasPlugin(plugins, \"recordAndTuple\") &&\n    !RECORD_AND_TUPLE_SYNTAX_TYPES.includes(\n      getPluginOption(plugins, \"recordAndTuple\", \"syntaxType\"),\n    )\n  ) {\n    throw new Error(\n      \"'recordAndTuple' requires 'syntaxType' option whose value should be one of: \" +\n        RECORD_AND_TUPLE_SYNTAX_TYPES.map(p => `'${p}'`).join(\", \"),\n    );\n  }\n\n  if (\n    hasPlugin(plugins, \"asyncDoExpressions\") &&\n    !hasPlugin(plugins, \"doExpressions\")\n  ) {\n    const error = new Error(\n      \"'asyncDoExpressions' requires 'doExpressions', please add 'doExpressions' to parser plugins.\",\n    );\n    // @ts-expect-error\n    error.missingPlugins = \"doExpressions\"; // so @babel/core can provide better error message\n    throw error;\n  }\n}\n\n// These plugins are defined using a mixin which extends the parser class.\n\nimport estree from \"./plugins/estree\";\nimport flow from \"./plugins/flow\";\nimport jsx from \"./plugins/jsx\";\nimport typescript from \"./plugins/typescript\";\nimport placeholders from \"./plugins/placeholders\";\nimport v8intrinsic from \"./plugins/v8intrinsic\";\n\n// NOTE: order is important. estree must come first; placeholders must come last.\nexport const mixinPlugins: {\n  [name: string]: MixinPlugin;\n} = {\n  estree,\n  jsx,\n  flow,\n  typescript,\n  v8intrinsic,\n  placeholders,\n};\n\nexport const mixinPluginNames = Object.keys(mixinPlugins) as ReadonlyArray<\n  \"estree\" | \"jsx\" | \"flow\" | \"typescript\" | \"v8intrinsic\" | \"placeholders\"\n>;\n","import type { PluginList } from \"./plugin-utils\";\n\n// A second optional argument can be given to further configure\n// the parser process. These options are recognized:\n\nexport type SourceType = \"script\" | \"module\" | \"unambiguous\";\n\nexport type Options = {\n  sourceType: SourceType;\n  sourceFilename?: string;\n  startColumn: number;\n  startLine: number;\n  allowAwaitOutsideFunction: boolean;\n  allowReturnOutsideFunction: boolean;\n  allowImportExportEverywhere: boolean;\n  allowSuperOutsideMethod: boolean;\n  allowUndeclaredExports: boolean;\n  plugins: PluginList;\n  strictMode: boolean | undefined | null;\n  ranges: boolean;\n  tokens: boolean;\n  createParenthesizedExpressions: boolean;\n  errorRecovery: boolean;\n  attachComment: boolean;\n};\n\nexport const defaultOptions: Options = {\n  // Source type (\"script\" or \"module\") for different semantics\n  sourceType: \"script\",\n  // Source filename.\n  sourceFilename: undefined,\n  // Column (0-based) from which to start counting source. Useful for\n  // integration with other tools.\n  startColumn: 0,\n  // Line (1-based) from which to start counting source. Useful for\n  // integration with other tools.\n  startLine: 1,\n  // When enabled, await at the top level is not considered an\n  // error.\n  allowAwaitOutsideFunction: false,\n  // When enabled, a return at the top level is not considered an\n  // error.\n  allowReturnOutsideFunction: false,\n  // When enabled, import/export statements are not constrained to\n  // appearing at the top of the program.\n  allowImportExportEverywhere: false,\n  // TODO\n  allowSuperOutsideMethod: false,\n  // When enabled, export statements can reference undeclared variables.\n  allowUndeclaredExports: false,\n  // An array of plugins to enable\n  plugins: [],\n  // TODO\n  strictMode: null,\n  // Nodes have their start and end characters offsets recorded in\n  // `start` and `end` properties (directly on the node, rather than\n  // the `loc` object, which holds line/column data. To also add a\n  // [semi-standardized][range] `range` property holding a `[start,\n  // end]` array with the same numbers, set the `ranges` option to\n  // `true`.\n  //\n  // [range]: https://bugzilla.mozilla.org/show_bug.cgi?id=745678\n  ranges: false,\n  // Adds all parsed tokens to a `tokens` property on the `File` node\n  tokens: false,\n  // Whether to create ParenthesizedExpression AST nodes (if false\n  // the parser sets extra.parenthesized on the expression nodes instead).\n  createParenthesizedExpressions: false,\n  // When enabled, errors are attached to the AST instead of being directly thrown.\n  // Some errors will still throw, because @babel/parser can't always recover.\n  errorRecovery: false,\n  // When enabled, comments will be attached to adjacent AST nodes as one of\n  // `leadingComments`, `trailingComments` and `innerComments`. The comment attachment\n  // is vital to preserve comments after transform. If you don't print AST back,\n  // consider set this option to `false` for performance\n  attachComment: true,\n};\n\n// Interpret and default an options object\n\nexport function getOptions(opts?: Options | null): Options {\n  const options: any = {};\n  for (const key of Object.keys(defaultOptions)) {\n    // @ts-expect-error key may not exist in opts\n    options[key] = opts && opts[key] != null ? opts[key] : defaultOptions[key];\n  }\n  return options;\n}\n","/*:: declare var invariant; */\nimport * as charCodes from \"charcodes\";\nimport { tt, type TokenType } from \"../tokenizer/types\";\nimport type {\n  AssignmentPattern,\n  TSParameterProperty,\n  Decorator,\n  Expression,\n  Identifier,\n  Node,\n  Pattern,\n  RestElement,\n  SpreadElement,\n  /*:: ObjectOrClassMember, */\n  /*:: ClassMember, */\n  ObjectMember,\n  ObjectExpression,\n  ArrayExpression,\n  ArrayPattern,\n  /*:: TsNamedTypeElementBase, */\n  /*:: PrivateName, */\n  /*:: ObjectExpression, */\n  /*:: ObjectPattern, */\n} from \"../types\";\nimport type { Position } from \"../util/location\";\nimport {\n  isStrictBindOnlyReservedWord,\n  isStrictBindReservedWord,\n} from \"../util/identifier\";\nimport { NodeUtils, type Undone } from \"./node\";\nimport {\n  type BindingTypes,\n  BIND_NONE,\n  BIND_SCOPE_LEXICAL,\n} from \"../util/scopeflags\";\nimport { ExpressionErrors } from \"./util\";\nimport { Errors, type LValAncestor } from \"../parse-error\";\nimport type Parser from \"./index\";\n\nconst getOwn = <T extends {}>(object: T, key: keyof T) =>\n  Object.hasOwnProperty.call(object, key) && object[key];\n\nconst unwrapParenthesizedExpression = (node: Node): Node => {\n  return node.type === \"ParenthesizedExpression\"\n    ? unwrapParenthesizedExpression(node.expression)\n    : node;\n};\n\nexport default class LValParser extends NodeUtils {\n  // Forward-declaration: defined in expression.js\n  /*::\n  +parseIdentifier: (liberal?: boolean) => Identifier;\n  +parseMaybeAssignAllowIn: (\n    refExpressionErrors?: ?ExpressionErrors,\n    afterLeftParse?: Function,\n  ) => Expression;\n  +parseObjectLike: <T: ObjectPattern | ObjectExpression>(\n    close: TokenType,\n    isPattern: boolean,\n    isRecord?: ?boolean,\n    refExpressionErrors?: ?ExpressionErrors,\n  ) => T;\n  +parseObjPropValue: (\n    prop: any,\n    startPos: ?number,\n    startLoc: ?Position,\n    isGenerator: boolean,\n    isAsync: boolean,\n    isPattern: boolean,\n    isAccessor: boolean,\n    refExpressionErrors?: ?ExpressionErrors,\n  ) => void;\n  +parsePropertyName: (\n    prop: ObjectOrClassMember | ClassMember | TsNamedTypeElementBase,\n  ) => Expression | Identifier;\n  +parsePrivateName: () => PrivateName\n  */\n  // Forward-declaration: defined in statement.js\n  /*::\n  +parseDecorator: () => Decorator;\n  */\n\n  /**\n   * Convert existing expression atom to assignable pattern\n   * if possible. Also checks invalid destructuring targets:\n\n   - Parenthesized Destructuring patterns\n   - RestElement is not the last element\n   - Missing `=` in assignment pattern\n\n   NOTE: There is a corresponding \"isAssignable\" method.\n   When this one is updated, please check if also that one needs to be updated.\n\n   * @param {Node} node The expression atom\n   * @param {boolean} [isLHS=false] Whether we are parsing a LeftHandSideExpression.\n   *                                If isLHS is `true`, the following cases are allowed: `[(a)] = [0]`, `[(a.b)] = [0]`\n   *                                If isLHS is `false`, we are in an arrow function parameters list.\n   * @memberof LValParser\n   */\n  toAssignable(node: Node, isLHS: boolean = false): void {\n    let parenthesized = undefined;\n    if (node.type === \"ParenthesizedExpression\" || node.extra?.parenthesized) {\n      parenthesized = unwrapParenthesizedExpression(node);\n      if (isLHS) {\n        // an LHS can be reinterpreted to a binding pattern but not vice versa.\n        // therefore a parenthesized identifier is ambiguous until we are sure it is an assignment expression\n        // i.e. `([(a) = []] = []) => {}`\n        // see also `recordArrowParemeterBindingError` signature in packages/babel-parser/src/util/expression-scope.js\n        if (parenthesized.type === \"Identifier\") {\n          this.expressionScope.recordArrowParemeterBindingError(\n            Errors.InvalidParenthesizedAssignment,\n            { at: node },\n          );\n        } else if (parenthesized.type !== \"MemberExpression\") {\n          // A parenthesized member expression can be in LHS but not in pattern.\n          // If the LHS is later interpreted as a pattern, `checkLVal` will throw for member expression binding\n          // i.e. `([(a.b) = []] = []) => {}`\n          this.raise(Errors.InvalidParenthesizedAssignment, { at: node });\n        }\n      } else {\n        this.raise(Errors.InvalidParenthesizedAssignment, { at: node });\n      }\n    }\n\n    switch (node.type) {\n      case \"Identifier\":\n      case \"ObjectPattern\":\n      case \"ArrayPattern\":\n      case \"AssignmentPattern\":\n      case \"RestElement\":\n        break;\n\n      case \"ObjectExpression\":\n        node.type = \"ObjectPattern\";\n        for (\n          let i = 0, length = node.properties.length, last = length - 1;\n          i < length;\n          i++\n        ) {\n          const prop = node.properties[i];\n          const isLast = i === last;\n          this.toAssignableObjectExpressionProp(prop, isLast, isLHS);\n\n          if (\n            isLast &&\n            prop.type === \"RestElement\" &&\n            node.extra?.trailingCommaLoc\n          ) {\n            this.raise(Errors.RestTrailingComma, {\n              at: node.extra.trailingCommaLoc,\n            });\n          }\n        }\n        break;\n\n      case \"ObjectProperty\": {\n        const { key, value } = node;\n        if (this.isPrivateName(key)) {\n          this.classScope.usePrivateName(\n            this.getPrivateNameSV(key),\n            key.loc.start,\n          );\n        }\n        this.toAssignable(value, isLHS);\n        break;\n      }\n\n      case \"SpreadElement\": {\n        throw new Error(\n          \"Internal @babel/parser error (this is a bug, please report it).\" +\n            \" SpreadElement should be converted by .toAssignable's caller.\",\n        );\n      }\n\n      case \"ArrayExpression\":\n        node.type = \"ArrayPattern\";\n        this.toAssignableList(\n          node.elements,\n          node.extra?.trailingCommaLoc,\n          isLHS,\n        );\n        break;\n\n      case \"AssignmentExpression\":\n        if (node.operator !== \"=\") {\n          this.raise(Errors.MissingEqInAssignment, { at: node.left.loc.end });\n        }\n\n        node.type = \"AssignmentPattern\";\n        delete node.operator;\n        this.toAssignable(node.left, isLHS);\n        break;\n\n      case \"ParenthesizedExpression\":\n        /*::invariant (parenthesized !== undefined) */\n        this.toAssignable(parenthesized, isLHS);\n        break;\n\n      default:\n      // We don't know how to deal with this node. It will\n      // be reported by a later call to checkLVal\n    }\n  }\n\n  toAssignableObjectExpressionProp(\n    prop: Node,\n    isLast: boolean,\n    isLHS: boolean,\n  ) {\n    if (prop.type === \"ObjectMethod\") {\n      this.raise(\n        prop.kind === \"get\" || prop.kind === \"set\"\n          ? Errors.PatternHasAccessor\n          : Errors.PatternHasMethod,\n        { at: prop.key },\n      );\n    } else if (prop.type === \"SpreadElement\") {\n      prop.type = \"RestElement\";\n      const arg = prop.argument;\n      this.checkToRestConversion(arg, /* allowPattern */ false);\n      this.toAssignable(arg, isLHS);\n\n      if (!isLast) {\n        this.raise(Errors.RestTrailingComma, { at: prop });\n      }\n    } else {\n      this.toAssignable(prop, isLHS);\n    }\n  }\n\n  // Convert list of expression atoms to binding list.\n\n  toAssignableList(\n    exprList: Expression[],\n    trailingCommaLoc: Position | undefined | null,\n    isLHS: boolean,\n  ): void {\n    const end = exprList.length - 1;\n\n    for (let i = 0; i <= end; i++) {\n      const elt = exprList[i];\n      if (!elt) continue;\n\n      if (elt.type === \"SpreadElement\") {\n        elt.type = \"RestElement\";\n        const arg = elt.argument;\n        this.checkToRestConversion(arg, /* allowPattern */ true);\n        this.toAssignable(arg, isLHS);\n      } else {\n        this.toAssignable(elt, isLHS);\n      }\n\n      if (elt.type === \"RestElement\") {\n        if (i < end) {\n          this.raise(Errors.RestTrailingComma, { at: elt });\n        } else if (trailingCommaLoc) {\n          this.raise(Errors.RestTrailingComma, { at: trailingCommaLoc });\n        }\n      }\n    }\n  }\n\n  isAssignable(node: Node, isBinding?: boolean): boolean {\n    switch (node.type) {\n      case \"Identifier\":\n      case \"ObjectPattern\":\n      case \"ArrayPattern\":\n      case \"AssignmentPattern\":\n      case \"RestElement\":\n        return true;\n\n      case \"ObjectExpression\": {\n        const last = node.properties.length - 1;\n        return (node.properties as ObjectExpression[\"properties\"]).every(\n          (prop, i) => {\n            return (\n              prop.type !== \"ObjectMethod\" &&\n              (i === last || prop.type !== \"SpreadElement\") &&\n              this.isAssignable(prop)\n            );\n          },\n        );\n      }\n\n      case \"ObjectProperty\":\n        return this.isAssignable(node.value);\n\n      case \"SpreadElement\":\n        return this.isAssignable(node.argument);\n\n      case \"ArrayExpression\":\n        return (node as ArrayExpression).elements.every(\n          element => element === null || this.isAssignable(element),\n        );\n\n      case \"AssignmentExpression\":\n        return node.operator === \"=\";\n\n      case \"ParenthesizedExpression\":\n        return this.isAssignable(node.expression);\n\n      case \"MemberExpression\":\n      case \"OptionalMemberExpression\":\n        return !isBinding;\n\n      default:\n        return false;\n    }\n  }\n\n  // Convert list of expression atoms to a list of\n\n  toReferencedList(\n    exprList: ReadonlyArray<Expression | undefined | null>,\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    isParenthesizedExpr?: boolean,\n  ): ReadonlyArray<Expression | undefined | null> {\n    return exprList;\n  }\n\n  toReferencedListDeep(\n    exprList: ReadonlyArray<Expression | undefined | null>,\n    isParenthesizedExpr?: boolean,\n  ): void {\n    this.toReferencedList(exprList, isParenthesizedExpr);\n\n    for (const expr of exprList) {\n      if (expr?.type === \"ArrayExpression\") {\n        this.toReferencedListDeep(expr.elements);\n      }\n    }\n  }\n\n  // Parses spread element.\n\n  parseSpread(\n    this: Parser,\n    refExpressionErrors?: ExpressionErrors | null,\n  ): SpreadElement {\n    const node = this.startNode<SpreadElement>();\n    this.next();\n    node.argument = this.parseMaybeAssignAllowIn(\n      refExpressionErrors,\n      undefined,\n    );\n    return this.finishNode(node, \"SpreadElement\");\n  }\n\n  // https://tc39.es/ecma262/#prod-BindingRestProperty\n  // https://tc39.es/ecma262/#prod-BindingRestElement\n  parseRestBinding(this: Parser): RestElement {\n    const node = this.startNode<RestElement>();\n    this.next(); // eat `...`\n    node.argument = this.parseBindingAtom();\n    return this.finishNode(node, \"RestElement\");\n  }\n\n  // Parses lvalue (assignable) atom.\n  parseBindingAtom(this: Parser): Pattern {\n    // https://tc39.es/ecma262/#prod-BindingPattern\n    switch (this.state.type) {\n      case tt.bracketL: {\n        const node = this.startNode<ArrayPattern>();\n        this.next();\n        // @ts-expect-error: Fixme: TSParameterProperty can not be assigned to node.elements\n        node.elements = this.parseBindingList(\n          tt.bracketR,\n          charCodes.rightSquareBracket,\n          true,\n        );\n        return this.finishNode(node, \"ArrayPattern\");\n      }\n\n      case tt.braceL:\n        return this.parseObjectLike(tt.braceR, true);\n    }\n\n    // https://tc39.es/ecma262/#prod-BindingIdentifier\n    return this.parseIdentifier();\n  }\n\n  // https://tc39.es/ecma262/#prod-BindingElementList\n  parseBindingList(\n    this: Parser,\n    close: TokenType,\n    closeCharCode: typeof charCodes[keyof typeof charCodes],\n    allowEmpty?: boolean,\n    allowModifiers?: boolean,\n  ): Array<Pattern | TSParameterProperty> {\n    const elts: Array<Pattern | TSParameterProperty> = [];\n    let first = true;\n    while (!this.eat(close)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(tt.comma);\n      }\n      if (allowEmpty && this.match(tt.comma)) {\n        elts.push(null);\n      } else if (this.eat(close)) {\n        break;\n      } else if (this.match(tt.ellipsis)) {\n        elts.push(this.parseAssignableListItemTypes(this.parseRestBinding()));\n        if (!this.checkCommaAfterRest(closeCharCode)) {\n          this.expect(close);\n          break;\n        }\n      } else {\n        const decorators = [];\n        if (this.match(tt.at) && this.hasPlugin(\"decorators\")) {\n          this.raise(Errors.UnsupportedParameterDecorator, {\n            at: this.state.startLoc,\n          });\n        }\n        // invariant: hasPlugin(\"decorators-legacy\")\n        while (this.match(tt.at)) {\n          decorators.push(this.parseDecorator());\n        }\n        elts.push(this.parseAssignableListItem(allowModifiers, decorators));\n      }\n    }\n    return elts;\n  }\n\n  // https://tc39.es/ecma262/#prod-BindingRestProperty\n  parseBindingRestProperty(\n    this: Parser,\n    prop: Undone<RestElement>,\n  ): RestElement {\n    this.next(); // eat '...'\n    // Don't use parseRestBinding() as we only allow Identifier here.\n    prop.argument = this.parseIdentifier();\n    this.checkCommaAfterRest(charCodes.rightCurlyBrace);\n    return this.finishNode(prop, \"RestElement\");\n  }\n\n  // https://tc39.es/ecma262/#prod-BindingProperty\n  parseBindingProperty(this: Parser): ObjectMember | RestElement {\n    const prop = this.startNode<ObjectMember | RestElement>();\n    const { type, start: startPos, startLoc } = this.state;\n    if (type === tt.ellipsis) {\n      return this.parseBindingRestProperty(prop as Undone<RestElement>);\n    } else if (type === tt.privateName) {\n      this.expectPlugin(\"destructuringPrivate\", startLoc);\n      this.classScope.usePrivateName(this.state.value, startLoc);\n      (prop as Undone<ObjectMember>).key = this.parsePrivateName();\n    } else {\n      this.parsePropertyName(prop as Undone<ObjectMember>);\n    }\n    (prop as Undone<ObjectMember>).method = false;\n    return this.parseObjPropValue(\n      prop as Undone<ObjectMember>,\n      startPos,\n      startLoc,\n      false /* isGenerator */,\n      false /* isAsync */,\n      true /* isPattern */,\n      false /* isAccessor */,\n    );\n  }\n\n  parseAssignableListItem(\n    this: Parser,\n    allowModifiers: boolean | undefined | null,\n    decorators: Decorator[],\n  ): Pattern | TSParameterProperty {\n    const left = this.parseMaybeDefault();\n    this.parseAssignableListItemTypes(left);\n    const elt = this.parseMaybeDefault(left.start, left.loc.start, left);\n    if (decorators.length) {\n      left.decorators = decorators;\n    }\n    return elt;\n  }\n\n  // Used by flow/typescript plugin to add type annotations to binding elements\n  parseAssignableListItemTypes(param: Pattern): Pattern {\n    return param;\n  }\n\n  // Parses assignment pattern around given atom if possible.\n  // https://tc39.es/ecma262/#prod-BindingElement\n  parseMaybeDefault(\n    this: Parser,\n    startPos?: number | null,\n    startLoc?: Position | null,\n    left?: Pattern | null,\n  ): Pattern {\n    startLoc = startLoc ?? this.state.startLoc;\n    startPos = startPos ?? this.state.start;\n    left = left ?? this.parseBindingAtom();\n    if (!this.eat(tt.eq)) return left;\n\n    const node = this.startNodeAt<AssignmentPattern>(startPos, startLoc);\n    node.left = left;\n    node.right = this.parseMaybeAssignAllowIn();\n    return this.finishNode(node, \"AssignmentPattern\");\n  }\n  /**\n   * Return information use in determining whether a Node of a given type is an LVal,\n   * possibly given certain additional context information.\n   *\n   * Subclasser notes: This method has kind of a lot of mixed, but related,\n   * responsibilities. If we can definitively determine with the information\n   * provided that this either *is* or *isn't* a valid `LVal`, then the return\n   * value is easy: just return `true` or `false`. However, if it is a valid\n   * LVal *ancestor*, and thus it's descendents must be subsquently visited to\n   * continue the \"investigation\", then this method should return the relevant\n   * child key as a `string`. In some special cases, you additionally want to\n   * convey that this node should be treated as if it were parenthesized. In\n   * that case, a tuple of [key: string, parenthesized: boolean] is returned.\n   * The `string`-only return option is actually just a shorthand for:\n   * `[key: string, parenthesized: false]`.\n   *\n   * @param {NodeType} type A Node `type` string\n   * @param {boolean} isUnparenthesizedInAssign\n   *        Whether the node in question is unparenthesized and its parent\n   *        is either an assignment pattern or an assignment expression.\n   * @param {BindingTypes} binding\n   *        The binding operation that is being considered for this potential\n   *        LVal.\n   * @returns { boolean | string | [string, boolean] }\n   *          `true` or `false` if we can immediately determine whether the node\n   *          type in question can be treated as an `LVal`.\n   *          A `string` key to traverse if we must check this child.\n   *          A `[string, boolean]` tuple if we need to check this child and\n   *          treat is as parenthesized.\n   */\n  isValidLVal(\n    type: string,\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    isUnparenthesizedInAssign: boolean,\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    binding: BindingTypes,\n  ): string | boolean {\n    return getOwn(\n      {\n        AssignmentPattern: \"left\",\n        RestElement: \"argument\",\n        ObjectProperty: \"value\",\n        ParenthesizedExpression: \"expression\",\n        ArrayPattern: \"elements\",\n        ObjectPattern: \"properties\",\n      },\n      // @ts-expect-error refine string to enum\n      type,\n    );\n  }\n\n  /**\n   * Verify that a target expression is an lval (something that can be assigned to).\n   *\n   * @param {Expression} expression The expression in question to check.\n   * @param {Object} options A set of options described below.\n   * @param {LValAncestor} options.in\n   *        The relevant ancestor to provide context information for the error\n   *        if the check fails.\n   * @param {BindingTypes} [options.binding=BIND_NONE]\n   *        The desired binding type. If the given expression is an identifier\n   *        and `binding` is not `BIND_NONE`, `checkLVal` will register binding\n   *        to the parser scope See also `src/util/scopeflags.js`\n   * @param {Set<string>|false} [options.checkClashes=false]\n   *        An optional string set to check if an identifier name is included.\n   *        `checkLVal` will add checked identifier name to `checkClashes` It is\n   *        used in tracking duplicates in function parameter lists. If it is\n   *        false, `checkLVal` will skip duplicate checks\n   * @param {boolean} [options.allowingSloppyLetBinding]\n   *        Whether an identifier named \"let\" should be allowed in sloppy mode.\n   *        Defaults to `true` unless lexical scope its being used. This property\n   *        is only relevant if the parser's state is in sloppy mode.\n   * @param {boolean} [options.strictModeChanged=false]\n   *        Whether an identifier has been parsed in a sloppy context but should\n   *        be reinterpreted as strict-mode. e.g. `(arguments) => { \"use strict \"}`\n   * @param {boolean} [options.hasParenthesizedAncestor=false]\n   *        This is only used internally during recursive calls, and you should\n   *        not have to set it yourself.\n   * @memberof LValParser\n   */\n\n  checkLVal(\n    expression: Expression | ObjectMember | RestElement,\n    {\n      in: ancestor,\n      binding = BIND_NONE,\n      checkClashes = false,\n      strictModeChanged = false,\n      allowingSloppyLetBinding = !(binding & BIND_SCOPE_LEXICAL),\n      hasParenthesizedAncestor = false,\n    }: {\n      in: LValAncestor;\n      binding?: BindingTypes;\n      checkClashes?: Set<string> | false;\n      strictModeChanged?: boolean;\n      allowingSloppyLetBinding?: boolean;\n      hasParenthesizedAncestor?: boolean;\n    },\n  ): void {\n    const type = expression.type;\n\n    // If we find here an ObjectMethod, it's because this was originally\n    // an ObjectExpression which has then been converted.\n    // toAssignable already reported this error with a nicer message.\n    if (this.isObjectMethod(expression)) return;\n\n    if (type === \"MemberExpression\") {\n      if (binding !== BIND_NONE) {\n        this.raise(Errors.InvalidPropertyBindingPattern, { at: expression });\n      }\n      return;\n    }\n\n    if (expression.type === \"Identifier\") {\n      this.checkIdentifier(\n        expression as Identifier,\n        binding,\n        strictModeChanged,\n        allowingSloppyLetBinding,\n      );\n\n      const { name } = expression as Identifier;\n\n      if (checkClashes) {\n        if (checkClashes.has(name)) {\n          this.raise(Errors.ParamDupe, { at: expression });\n        } else {\n          checkClashes.add(name);\n        }\n      }\n\n      return;\n    }\n\n    const validity = this.isValidLVal(\n      expression.type,\n      !(hasParenthesizedAncestor || expression.extra?.parenthesized) &&\n        ancestor.type === \"AssignmentExpression\",\n      binding,\n    );\n\n    if (validity === true) return;\n    if (validity === false) {\n      const ParseErrorClass =\n        binding === BIND_NONE ? Errors.InvalidLhs : Errors.InvalidLhsBinding;\n\n      this.raise(ParseErrorClass, {\n        at: expression,\n        ancestor:\n          ancestor.type === \"UpdateExpression\"\n            ? { type: \"UpdateExpression\", prefix: ancestor.prefix }\n            : { type: ancestor.type },\n      });\n      return;\n    }\n\n    const [key, isParenthesizedExpression] = Array.isArray(validity)\n      ? validity\n      : [validity, type === \"ParenthesizedExpression\"];\n    const nextAncestor =\n      expression.type === \"ArrayPattern\" ||\n      expression.type === \"ObjectPattern\" ||\n      expression.type === \"ParenthesizedExpression\"\n        ? expression\n        : ancestor;\n\n    // Flow has difficulty tracking `key` and `expression`, but only if we use\n    // null-proto objects. If we use normal objects, everything works fine.\n    // @ts-expect-error\n    for (const child of [].concat(expression[key])) {\n      if (child) {\n        this.checkLVal(child, {\n          // @ts-expect-error: refine types\n          in: nextAncestor,\n          binding,\n          checkClashes,\n          allowingSloppyLetBinding,\n          strictModeChanged,\n          hasParenthesizedAncestor: isParenthesizedExpression,\n        });\n      }\n    }\n  }\n\n  checkIdentifier(\n    at: Identifier,\n    bindingType: BindingTypes,\n    strictModeChanged: boolean = false,\n    allowLetBinding: boolean = !(bindingType & BIND_SCOPE_LEXICAL),\n  ) {\n    if (\n      this.state.strict &&\n      (strictModeChanged\n        ? isStrictBindReservedWord(at.name, this.inModule)\n        : isStrictBindOnlyReservedWord(at.name))\n    ) {\n      if (bindingType === BIND_NONE) {\n        this.raise(Errors.StrictEvalArguments, { at, referenceName: at.name });\n      } else {\n        this.raise(Errors.StrictEvalArgumentsBinding, {\n          at,\n          bindingName: at.name,\n        });\n      }\n    }\n\n    if (!allowLetBinding && at.name === \"let\") {\n      this.raise(Errors.LetInLexicalBinding, { at });\n    }\n\n    if (!(bindingType & BIND_NONE)) {\n      this.declareNameFromIdentifier(at, bindingType);\n    }\n  }\n\n  declareNameFromIdentifier(identifier: Identifier, binding: BindingTypes) {\n    this.scope.declareName(identifier.name, binding, identifier.loc.start);\n  }\n\n  checkToRestConversion(node: Node, allowPattern: boolean): void {\n    switch (node.type) {\n      case \"ParenthesizedExpression\":\n        this.checkToRestConversion(node.expression, allowPattern);\n        break;\n      case \"Identifier\":\n      case \"MemberExpression\":\n        break;\n      case \"ArrayExpression\":\n      case \"ObjectExpression\":\n        if (allowPattern) break;\n      /* falls through */\n      default:\n        this.raise(Errors.InvalidRestAssignmentPattern, { at: node });\n    }\n  }\n\n  checkCommaAfterRest(\n    close: typeof charCodes[keyof typeof charCodes],\n  ): boolean {\n    if (!this.match(tt.comma)) {\n      return false;\n    }\n\n    this.raise(\n      this.lookaheadCharCode() === close\n        ? Errors.RestTrailingComma\n        : Errors.ElementAfterRest,\n      { at: this.state.startLoc },\n    );\n\n    return true;\n  }\n}\n","// A recursive descent parser operates by defining functions for all\n// syntactic elements, and recursively calling those, each function\n// advancing the input stream and returning an AST node. Precedence\n// of constructs (for example, the fact that `!x[1]` means `!(x[1])`\n// instead of `(!x)[1]` is handled by the fact that the parser\n// function that parses unary prefix operators is called first, and\n// in turn calls the function that parses `[]` subscripts — that\n// way, it'll receive the node for `x[1]` already parsed, and wraps\n// *that* in the unary operator node.\n//\n// Acorn uses an [operator precedence parser][opp] to handle binary\n// operator precedence, because it is much more compact than using\n// the technique outlined above, which uses different, nesting\n// functions to specify precedence, for all of the ten binary\n// precedence levels that JavaScript defines.\n//\n// [opp]: http://en.wikipedia.org/wiki/Operator-precedence_parser\n\nimport {\n  tokenCanStartExpression,\n  tokenIsAssignment,\n  tokenIsIdentifier,\n  tokenIsKeywordOrIdentifier,\n  tokenIsOperator,\n  tokenIsPostfix,\n  tokenIsPrefix,\n  tokenIsRightAssociative,\n  tokenIsTemplate,\n  tokenKeywordOrIdentifierIsKeyword,\n  tokenLabelName,\n  tokenOperatorPrecedence,\n  tt,\n  type TokenType,\n} from \"../tokenizer/types\";\nimport * as N from \"../types\";\nimport LValParser from \"./lval\";\nimport {\n  isKeyword,\n  isReservedWord,\n  isStrictReservedWord,\n  isStrictBindReservedWord,\n  isIdentifierStart,\n  canBeReservedWord,\n} from \"../util/identifier\";\nimport { Position, createPositionWithColumnOffset } from \"../util/location\";\nimport * as charCodes from \"charcodes\";\nimport {\n  BIND_OUTSIDE,\n  BIND_VAR,\n  SCOPE_ARROW,\n  SCOPE_CLASS,\n  SCOPE_DIRECT_SUPER,\n  SCOPE_FUNCTION,\n  SCOPE_SUPER,\n} from \"../util/scopeflags\";\nimport { ExpressionErrors } from \"./util\";\nimport {\n  PARAM_AWAIT,\n  PARAM_IN,\n  PARAM_RETURN,\n  functionFlags,\n} from \"../util/production-parameter\";\nimport {\n  newArrowHeadScope,\n  newAsyncArrowScope,\n  newExpressionScope,\n} from \"../util/expression-scope\";\nimport { Errors, type ParseError } from \"../parse-error\";\nimport { UnparenthesizedPipeBodyDescriptions } from \"../parse-error/pipeline-operator-errors\";\nimport { setInnerComments } from \"./comments\";\nimport { cloneIdentifier, type Undone } from \"./node\";\nimport type Parser from \".\";\n\n/*::\nimport type { SourceType } from \"../options\";\ndeclare var invariant;\n*/\n\nexport default class ExpressionParser extends LValParser {\n  // Forward-declaration: defined in statement.js\n  /*::\n  +parseBlock: (\n    allowDirectives?: boolean,\n    createNewLexicalScope?: boolean,\n    afterBlockParse?: (hasStrictModeDirective: boolean) => void,\n  ) => N.BlockStatement;\n  +parseClass: (\n    node: N.Class,\n    isStatement: boolean,\n    optionalId?: boolean,\n  ) => N.Class;\n  +parseDecorators: (allowExport?: boolean) => void;\n  +parseFunction: <T: N.NormalFunction>(\n    node: T,\n    statement?: number,\n    allowExpressionBody?: boolean,\n    isAsync?: boolean,\n  ) => T;\n  +parseFunctionParams: (node: N.Function, allowModifiers?: boolean) => void;\n  +takeDecorators: (node: N.HasDecorators) => void;\n  +parseBlockOrModuleBlockBody: (\n    body: N.Statement[],\n    directives: ?(N.Directive[]),\n    topLevel: boolean,\n    end: TokenType,\n    afterBlockParse?: (hasStrictModeDirective: boolean) => void\n  ) => void\n  +parseProgram: (\n    program: N.Program, end: TokenType, sourceType?: SourceType\n  ) => N.Program\n  */\n\n  // For object literal, check if property __proto__ has been used more than once.\n  // If the expression is a destructuring assignment, then __proto__ may appear\n  // multiple times. Otherwise, __proto__ is a duplicated key.\n\n  // For record expression, check if property __proto__ exists\n\n  checkProto(\n    prop: N.ObjectMember | N.SpreadElement,\n    isRecord: boolean | undefined | null,\n    protoRef: {\n      used: boolean;\n    },\n    refExpressionErrors?: ExpressionErrors | null,\n  ): void {\n    if (\n      prop.type === \"SpreadElement\" ||\n      this.isObjectMethod(prop) ||\n      prop.computed ||\n      // @ts-expect-error\n      prop.shorthand\n    ) {\n      return;\n    }\n\n    const key = prop.key;\n    // It is either an Identifier or a String/NumericLiteral\n    const name = key.type === \"Identifier\" ? key.name : key.value;\n\n    if (name === \"__proto__\") {\n      if (isRecord) {\n        this.raise(Errors.RecordNoProto, { at: key });\n        return;\n      }\n      if (protoRef.used) {\n        if (refExpressionErrors) {\n          // Store the first redefinition's position, otherwise ignore because\n          // we are parsing ambiguous pattern\n          if (refExpressionErrors.doubleProtoLoc === null) {\n            refExpressionErrors.doubleProtoLoc = key.loc.start;\n          }\n        } else {\n          this.raise(Errors.DuplicateProto, { at: key });\n        }\n      }\n\n      protoRef.used = true;\n    }\n  }\n\n  shouldExitDescending(expr: N.Expression, potentialArrowAt: number): boolean {\n    return (\n      expr.type === \"ArrowFunctionExpression\" && expr.start === potentialArrowAt\n    );\n  }\n\n  // Convenience method to parse an Expression only\n  getExpression(this: Parser): N.Expression & N.ParserOutput {\n    this.enterInitialScopes();\n    this.nextToken();\n    const expr = this.parseExpression();\n    if (!this.match(tt.eof)) {\n      this.unexpected();\n    }\n    // Unlike parseTopLevel, we need to drain remaining commentStacks\n    // because the top level node is _not_ Program.\n    this.finalizeRemainingComments();\n    expr.comments = this.state.comments;\n    expr.errors = this.state.errors;\n    if (this.options.tokens) {\n      expr.tokens = this.tokens;\n    }\n    // @ts-expect-error fixme: refine types\n    return expr;\n  }\n\n  // ### Expression parsing\n\n  // These nest, from the most general expression type at the top to\n  // 'atomic', nondivisible expression types at the bottom. Most of\n  // the functions will simply let the function (s) below them parse,\n  // and, *if* the syntactic construct they handle is present, wrap\n  // the AST node that the inner parser gave them in another node.\n\n  // Parse a full expression.\n  // - `disallowIn`\n  //   is used to forbid the `in` operator (in for loops initialization expressions)\n  //   When `disallowIn` is true, the production parameter [In] is not present.\n\n  // - `refExpressionErrors `\n  //   provides reference for storing '=' operator inside shorthand\n  //   property assignment in contexts where both object expression\n  //   and object pattern might appear (so it's possible to raise\n  //   delayed syntax error at correct position).\n\n  parseExpression(\n    this: Parser,\n    disallowIn?: boolean,\n    refExpressionErrors?: ExpressionErrors,\n  ): N.Expression {\n    if (disallowIn) {\n      return this.disallowInAnd(() =>\n        this.parseExpressionBase(refExpressionErrors),\n      );\n    }\n    return this.allowInAnd(() => this.parseExpressionBase(refExpressionErrors));\n  }\n\n  // https://tc39.es/ecma262/#prod-Expression\n  parseExpressionBase(\n    this: Parser,\n    refExpressionErrors?: ExpressionErrors,\n  ): N.Expression {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    const expr = this.parseMaybeAssign(refExpressionErrors);\n    if (this.match(tt.comma)) {\n      const node = this.startNodeAt(startPos, startLoc);\n      node.expressions = [expr];\n      while (this.eat(tt.comma)) {\n        node.expressions.push(this.parseMaybeAssign(refExpressionErrors));\n      }\n      this.toReferencedList(node.expressions);\n      return this.finishNode(node, \"SequenceExpression\");\n    }\n    return expr;\n  }\n\n  // Set [~In] parameter for assignment expression\n  parseMaybeAssignDisallowIn(\n    this: Parser,\n    refExpressionErrors?: ExpressionErrors | null,\n    afterLeftParse?: Function,\n  ) {\n    return this.disallowInAnd(() =>\n      this.parseMaybeAssign(refExpressionErrors, afterLeftParse),\n    );\n  }\n\n  // Set [+In] parameter for assignment expression\n  parseMaybeAssignAllowIn(\n    this: Parser,\n    refExpressionErrors?: ExpressionErrors | null,\n    afterLeftParse?: Function,\n  ) {\n    return this.allowInAnd(() =>\n      this.parseMaybeAssign(refExpressionErrors, afterLeftParse),\n    );\n  }\n\n  // This method is only used by\n  // the typescript and flow plugins.\n  setOptionalParametersError(\n    refExpressionErrors: ExpressionErrors,\n    resultError?: ParseError<any>,\n  ) {\n    refExpressionErrors.optionalParametersLoc =\n      resultError?.loc ?? this.state.startLoc;\n  }\n\n  // Parse an assignment expression. This includes applications of\n  // operators like `+=`.\n  // https://tc39.es/ecma262/#prod-AssignmentExpression\n  parseMaybeAssign(\n    this: Parser,\n    refExpressionErrors?: ExpressionErrors | null,\n    afterLeftParse?: Function,\n  ): N.Expression {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    if (this.isContextual(tt._yield)) {\n      if (this.prodParam.hasYield) {\n        let left = this.parseYield();\n        if (afterLeftParse) {\n          left = afterLeftParse.call(this, left, startPos, startLoc);\n        }\n        return left;\n      }\n    }\n\n    let ownExpressionErrors;\n    if (refExpressionErrors) {\n      ownExpressionErrors = false;\n    } else {\n      refExpressionErrors = new ExpressionErrors();\n      ownExpressionErrors = true;\n    }\n    const { type } = this.state;\n\n    if (type === tt.parenL || tokenIsIdentifier(type)) {\n      this.state.potentialArrowAt = this.state.start;\n    }\n\n    let left = this.parseMaybeConditional(refExpressionErrors);\n    if (afterLeftParse) {\n      left = afterLeftParse.call(this, left, startPos, startLoc);\n    }\n    if (tokenIsAssignment(this.state.type)) {\n      const node = this.startNodeAt<N.AssignmentExpression>(startPos, startLoc);\n      const operator = this.state.value;\n      node.operator = operator;\n\n      if (this.match(tt.eq)) {\n        this.toAssignable(left, /* isLHS */ true);\n        node.left = left;\n\n        if (\n          refExpressionErrors.doubleProtoLoc != null &&\n          refExpressionErrors.doubleProtoLoc.index >= startPos\n        ) {\n          refExpressionErrors.doubleProtoLoc = null; // reset because double __proto__ is valid in assignment expression\n        }\n        if (\n          refExpressionErrors.shorthandAssignLoc != null &&\n          refExpressionErrors.shorthandAssignLoc.index >= startPos\n        ) {\n          refExpressionErrors.shorthandAssignLoc = null; // reset because shorthand default was used correctly\n        }\n        if (\n          refExpressionErrors.privateKeyLoc != null &&\n          refExpressionErrors.privateKeyLoc.index >= startPos\n        ) {\n          this.checkDestructuringPrivate(refExpressionErrors);\n          refExpressionErrors.privateKeyLoc = null; // reset because `({ #x: x })` is an assignable pattern\n        }\n      } else {\n        node.left = left;\n      }\n\n      this.next();\n      node.right = this.parseMaybeAssign();\n      this.checkLVal(left, {\n        in: this.finishNode(node, \"AssignmentExpression\"),\n      });\n      // @ts-expect-error todo(flow->ts) improve node types\n      return node;\n    } else if (ownExpressionErrors) {\n      this.checkExpressionErrors(refExpressionErrors, true);\n    }\n\n    return left;\n  }\n\n  // Parse a ternary conditional (`?:`) operator.\n  // https://tc39.es/ecma262/#prod-ConditionalExpression\n\n  parseMaybeConditional(\n    this: Parser,\n    refExpressionErrors: ExpressionErrors,\n  ): N.Expression {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    const potentialArrowAt = this.state.potentialArrowAt;\n    const expr = this.parseExprOps(refExpressionErrors);\n\n    if (this.shouldExitDescending(expr, potentialArrowAt)) {\n      return expr;\n    }\n\n    return this.parseConditional(expr, startPos, startLoc, refExpressionErrors);\n  }\n\n  parseConditional(\n    this: Parser,\n    expr: N.Expression,\n    startPos: number,\n    startLoc: Position,\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    refExpressionErrors?: ExpressionErrors | null,\n  ): N.Expression {\n    if (this.eat(tt.question)) {\n      const node = this.startNodeAt(startPos, startLoc);\n      node.test = expr;\n      node.consequent = this.parseMaybeAssignAllowIn();\n      this.expect(tt.colon);\n      node.alternate = this.parseMaybeAssign();\n      return this.finishNode(node, \"ConditionalExpression\");\n    }\n    return expr;\n  }\n\n  parseMaybeUnaryOrPrivate(\n    this: Parser,\n    refExpressionErrors?: ExpressionErrors,\n  ): N.Expression | N.PrivateName {\n    return this.match(tt.privateName)\n      ? this.parsePrivateName()\n      : this.parseMaybeUnary(refExpressionErrors);\n  }\n\n  // Start the precedence parser.\n  // https://tc39.es/ecma262/#prod-ShortCircuitExpression\n\n  parseExprOps(\n    this: Parser,\n    refExpressionErrors: ExpressionErrors,\n  ): N.Expression {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    const potentialArrowAt = this.state.potentialArrowAt;\n    const expr = this.parseMaybeUnaryOrPrivate(refExpressionErrors);\n\n    if (this.shouldExitDescending(expr, potentialArrowAt)) {\n      return expr;\n    }\n\n    return this.parseExprOp(expr, startPos, startLoc, -1);\n  }\n\n  // Parse binary operators with the operator precedence parsing\n  // algorithm. `left` is the left-hand side of the operator.\n  // `minPrec` provides context that allows the function to stop and\n  // defer further parser to one of its callers when it encounters an\n  // operator that has a lower precedence than the set it is parsing.\n\n  parseExprOp(\n    this: Parser,\n    left: N.Expression | N.PrivateName,\n    leftStartPos: number,\n    leftStartLoc: Position,\n    minPrec: number,\n  ): N.Expression {\n    if (this.isPrivateName(left)) {\n      // https://tc39.es/ecma262/#prod-RelationalExpression\n      // RelationalExpression [In, Yield, Await]\n      //   [+In] PrivateIdentifier in ShiftExpression[?Yield, ?Await]\n\n      const value = this.getPrivateNameSV(left);\n\n      if (\n        minPrec >= tokenOperatorPrecedence(tt._in) ||\n        !this.prodParam.hasIn ||\n        !this.match(tt._in)\n      ) {\n        this.raise(Errors.PrivateInExpectedIn, {\n          at: left,\n          identifierName: value,\n        });\n      }\n\n      this.classScope.usePrivateName(value, left.loc.start);\n    }\n\n    const op = this.state.type;\n    if (tokenIsOperator(op) && (this.prodParam.hasIn || !this.match(tt._in))) {\n      let prec = tokenOperatorPrecedence(op);\n      if (prec > minPrec) {\n        if (op === tt.pipeline) {\n          this.expectPlugin(\"pipelineOperator\");\n          if (this.state.inFSharpPipelineDirectBody) {\n            return left;\n          }\n          this.checkPipelineAtInfixOperator(left, leftStartLoc);\n        }\n        const node = this.startNodeAt<N.LogicalExpression | N.BinaryExpression>(\n          leftStartPos,\n          leftStartLoc,\n        );\n        node.left = left;\n        node.operator = this.state.value;\n\n        const logical = op === tt.logicalOR || op === tt.logicalAND;\n        const coalesce = op === tt.nullishCoalescing;\n\n        if (coalesce) {\n          // Handle the precedence of `tt.coalesce` as equal to the range of logical expressions.\n          // In other words, `node.right` shouldn't contain logical expressions in order to check the mixed error.\n          prec = tokenOperatorPrecedence(tt.logicalAND);\n        }\n\n        this.next();\n\n        if (\n          op === tt.pipeline &&\n          this.hasPlugin([\"pipelineOperator\", { proposal: \"minimal\" }])\n        ) {\n          if (this.state.type === tt._await && this.prodParam.hasAwait) {\n            throw this.raise(Errors.UnexpectedAwaitAfterPipelineBody, {\n              at: this.state.startLoc,\n            });\n          }\n        }\n\n        node.right = this.parseExprOpRightExpr(op, prec);\n        const finishedNode = this.finishNode(\n          node,\n          logical || coalesce ? \"LogicalExpression\" : \"BinaryExpression\",\n        );\n        /* this check is for all ?? operators\n         * a ?? b && c for this example\n         * when op is coalesce and nextOp is logical (&&), throw at the pos of nextOp that it can not be mixed.\n         * Symmetrically it also throws when op is logical and nextOp is coalesce\n         */\n        const nextOp = this.state.type;\n        if (\n          (coalesce && (nextOp === tt.logicalOR || nextOp === tt.logicalAND)) ||\n          (logical && nextOp === tt.nullishCoalescing)\n        ) {\n          throw this.raise(Errors.MixingCoalesceWithLogical, {\n            at: this.state.startLoc,\n          });\n        }\n\n        return this.parseExprOp(\n          finishedNode,\n          leftStartPos,\n          leftStartLoc,\n          minPrec,\n        );\n      }\n    }\n    return left;\n  }\n\n  // Helper function for `parseExprOp`. Parse the right-hand side of binary-\n  // operator expressions, then apply any operator-specific functions.\n\n  parseExprOpRightExpr(\n    this: Parser,\n    op: TokenType,\n    prec: number,\n  ): N.Expression {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    switch (op) {\n      case tt.pipeline:\n        switch (this.getPluginOption(\"pipelineOperator\", \"proposal\")) {\n          case \"hack\":\n            return this.withTopicBindingContext(() => {\n              return this.parseHackPipeBody();\n            });\n\n          case \"smart\":\n            return this.withTopicBindingContext(() => {\n              if (this.prodParam.hasYield && this.isContextual(tt._yield)) {\n                throw this.raise(Errors.PipeBodyIsTighter, {\n                  at: this.state.startLoc,\n                });\n              }\n              return this.parseSmartPipelineBodyInStyle(\n                this.parseExprOpBaseRightExpr(op, prec),\n                startPos,\n                startLoc,\n              );\n            });\n\n          case \"fsharp\":\n            return this.withSoloAwaitPermittingContext(() => {\n              return this.parseFSharpPipelineBody(prec);\n            });\n        }\n\n      // Falls through.\n      default:\n        return this.parseExprOpBaseRightExpr(op, prec);\n    }\n  }\n\n  // Helper function for `parseExprOpRightExpr`. Parse the right-hand side of\n  // binary-operator expressions without applying any operator-specific functions.\n\n  parseExprOpBaseRightExpr(\n    this: Parser,\n    op: TokenType,\n    prec: number,\n  ): N.Expression {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n\n    return this.parseExprOp(\n      this.parseMaybeUnaryOrPrivate(),\n      startPos,\n      startLoc,\n      tokenIsRightAssociative(op) ? prec - 1 : prec,\n    );\n  }\n\n  parseHackPipeBody(this: Parser): N.Expression {\n    const { startLoc } = this.state;\n    const body = this.parseMaybeAssign();\n    const requiredParentheses = UnparenthesizedPipeBodyDescriptions.has(\n      // @ts-expect-error TS2345: Argument of type 'string' is not assignable to parameter of type '\"ArrowFunctionExpression\" | \"YieldExpression\" | \"AssignmentExpression\" | \"ConditionalExpression\"'.\n      body.type,\n    );\n\n    // TODO: Check how to handle type casts in Flow and TS once they are supported\n    if (requiredParentheses && !body.extra?.parenthesized) {\n      this.raise(Errors.PipeUnparenthesizedBody, {\n        at: startLoc,\n        // @ts-expect-error TS2322: Type 'string' is not assignable to type '\"AssignmentExpression\" | \"ArrowFunctionExpression\" | \"ConditionalExpression\" | \"YieldExpression\"'.\n        type: body.type,\n      });\n    }\n    if (!this.topicReferenceWasUsedInCurrentContext()) {\n      // A Hack pipe body must use the topic reference at least once.\n      this.raise(Errors.PipeTopicUnused, { at: startLoc });\n    }\n\n    return body;\n  }\n\n  checkExponentialAfterUnary(\n    node: N.AwaitExpression | Undone<N.UnaryExpression>,\n  ) {\n    if (this.match(tt.exponent)) {\n      this.raise(Errors.UnexpectedTokenUnaryExponentiation, {\n        at: node.argument,\n      });\n    }\n  }\n\n  // Parse unary operators, both prefix and postfix.\n  // https://tc39.es/ecma262/#prod-UnaryExpression\n  parseMaybeUnary(\n    this: Parser,\n    refExpressionErrors?: ExpressionErrors | null,\n    sawUnary?: boolean,\n  ): N.Expression {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    const isAwait = this.isContextual(tt._await);\n\n    if (isAwait && this.isAwaitAllowed()) {\n      this.next();\n      const expr = this.parseAwait(startPos, startLoc);\n      if (!sawUnary) this.checkExponentialAfterUnary(expr);\n      return expr;\n    }\n    const update = this.match(tt.incDec);\n    const node = this.startNode<N.UnaryExpression | N.UpdateExpression>();\n    if (tokenIsPrefix(this.state.type)) {\n      node.operator = this.state.value;\n      node.prefix = true;\n\n      if (this.match(tt._throw)) {\n        this.expectPlugin(\"throwExpressions\");\n      }\n      const isDelete = this.match(tt._delete);\n      this.next();\n\n      node.argument = this.parseMaybeUnary(null, true);\n\n      this.checkExpressionErrors(refExpressionErrors, true);\n\n      if (this.state.strict && isDelete) {\n        const arg = node.argument;\n\n        if (arg.type === \"Identifier\") {\n          this.raise(Errors.StrictDelete, { at: node });\n        } else if (this.hasPropertyAsPrivateName(arg)) {\n          this.raise(Errors.DeletePrivateField, { at: node });\n        }\n      }\n\n      if (!update) {\n        if (!sawUnary) {\n          this.checkExponentialAfterUnary(node as Undone<N.UnaryExpression>);\n        }\n        return this.finishNode(node, \"UnaryExpression\");\n      }\n    }\n\n    const expr = this.parseUpdate(\n      // @ts-expect-error using \"Undone\" node as \"done\"\n      node,\n      update,\n      refExpressionErrors,\n    );\n\n    if (isAwait) {\n      const { type } = this.state;\n      const startsExpr = this.hasPlugin(\"v8intrinsic\")\n        ? tokenCanStartExpression(type)\n        : tokenCanStartExpression(type) && !this.match(tt.modulo);\n      if (startsExpr && !this.isAmbiguousAwait()) {\n        this.raiseOverwrite(Errors.AwaitNotInAsyncContext, { at: startLoc });\n        return this.parseAwait(startPos, startLoc);\n      }\n    }\n\n    return expr;\n  }\n\n  // https://tc39.es/ecma262/#prod-UpdateExpression\n  parseUpdate(\n    this: Parser,\n    node: N.Expression,\n    update: boolean,\n    refExpressionErrors?: ExpressionErrors | null,\n  ): N.Expression {\n    if (update) {\n      // @ts-expect-error Type 'Node' is missing the following properties from type 'Undone<UpdateExpression>': prefix, operator, argument\n      const updateExpressionNode = node as Undone<N.UpdateExpression>;\n      this.checkLVal(updateExpressionNode.argument, {\n        in: this.finishNode(updateExpressionNode, \"UpdateExpression\"),\n      });\n      return node;\n    }\n\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    let expr = this.parseExprSubscripts(refExpressionErrors);\n    if (this.checkExpressionErrors(refExpressionErrors, false)) return expr;\n    while (tokenIsPostfix(this.state.type) && !this.canInsertSemicolon()) {\n      const node = this.startNodeAt<N.UpdateExpression>(startPos, startLoc);\n      node.operator = this.state.value;\n      node.prefix = false;\n      node.argument = expr;\n      this.next();\n      this.checkLVal(expr, {\n        in: (expr = this.finishNode(node, \"UpdateExpression\")),\n      });\n    }\n    return expr;\n  }\n\n  // Parse call, dot, and `[]`-subscript expressions.\n  // https://tc39.es/ecma262/#prod-LeftHandSideExpression\n  parseExprSubscripts(\n    this: Parser,\n    refExpressionErrors?: ExpressionErrors | null,\n  ): N.Expression {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    const potentialArrowAt = this.state.potentialArrowAt;\n    const expr = this.parseExprAtom(refExpressionErrors);\n\n    if (this.shouldExitDescending(expr, potentialArrowAt)) {\n      return expr;\n    }\n\n    return this.parseSubscripts(expr, startPos, startLoc);\n  }\n\n  parseSubscripts(\n    this: Parser,\n    base: N.Expression,\n    startPos: number,\n    startLoc: Position,\n    noCalls?: boolean | null,\n  ): N.Expression {\n    const state = {\n      optionalChainMember: false,\n      maybeAsyncArrow: this.atPossibleAsyncArrow(base),\n      stop: false,\n    };\n    do {\n      base = this.parseSubscript(base, startPos, startLoc, noCalls, state);\n\n      // After parsing a subscript, this isn't \"async\" for sure.\n      state.maybeAsyncArrow = false;\n    } while (!state.stop);\n    return base;\n  }\n\n  /**\n   * @param state Set 'state.stop = true' to indicate that we should stop parsing subscripts.\n   *   state.optionalChainMember to indicate that the member is currently in OptionalChain\n   */\n  parseSubscript(\n    this: Parser,\n    base: N.Expression,\n    startPos: number,\n    startLoc: Position,\n    noCalls: boolean | undefined | null,\n    state: N.ParseSubscriptState,\n  ): N.Expression {\n    const { type } = this.state;\n    if (!noCalls && type === tt.doubleColon) {\n      return this.parseBind(base, startPos, startLoc, noCalls, state);\n    } else if (tokenIsTemplate(type)) {\n      return this.parseTaggedTemplateExpression(\n        base,\n        startPos,\n        startLoc,\n        state,\n      );\n    }\n\n    let optional = false;\n\n    if (type === tt.questionDot) {\n      if (noCalls && this.lookaheadCharCode() === charCodes.leftParenthesis) {\n        // stop at `?.` when parsing `new a?.()`\n        state.stop = true;\n        return base;\n      }\n      state.optionalChainMember = optional = true;\n      this.next();\n    }\n\n    if (!noCalls && this.match(tt.parenL)) {\n      return this.parseCoverCallAndAsyncArrowHead(\n        base,\n        startPos,\n        startLoc,\n        state,\n        optional,\n      );\n    } else {\n      const computed = this.eat(tt.bracketL);\n      if (computed || optional || this.eat(tt.dot)) {\n        return this.parseMember(\n          base,\n          startPos,\n          startLoc,\n          state,\n          computed,\n          optional,\n        );\n      } else {\n        state.stop = true;\n        return base;\n      }\n    }\n  }\n\n  // base[?Yield, ?Await] [ Expression[+In, ?Yield, ?Await] ]\n  // base[?Yield, ?Await] . IdentifierName\n  // base[?Yield, ?Await] . PrivateIdentifier\n  //   where `base` is one of CallExpression, MemberExpression and OptionalChain\n  parseMember(\n    this: Parser,\n    base: N.Expression,\n    startPos: number,\n    startLoc: Position,\n    state: N.ParseSubscriptState,\n    computed: boolean,\n    optional: boolean,\n  ): N.OptionalMemberExpression | N.MemberExpression {\n    const node = this.startNodeAt<\n      N.OptionalMemberExpression | N.MemberExpression\n    >(startPos, startLoc);\n    node.object = base;\n    node.computed = computed;\n    if (computed) {\n      node.property = this.parseExpression();\n      this.expect(tt.bracketR);\n    } else if (this.match(tt.privateName)) {\n      if (base.type === \"Super\") {\n        this.raise(Errors.SuperPrivateField, { at: startLoc });\n      }\n      this.classScope.usePrivateName(this.state.value, this.state.startLoc);\n      node.property = this.parsePrivateName();\n    } else {\n      node.property = this.parseIdentifier(true);\n    }\n\n    if (state.optionalChainMember) {\n      (node as N.OptionalMemberExpression).optional = optional;\n      return this.finishNode(node, \"OptionalMemberExpression\");\n    } else {\n      return this.finishNode(node, \"MemberExpression\");\n    }\n  }\n\n  // https://github.com/tc39/proposal-bind-operator#syntax\n  parseBind(\n    this: Parser,\n    base: N.Expression,\n    startPos: number,\n    startLoc: Position,\n    noCalls: boolean | undefined | null,\n    state: N.ParseSubscriptState,\n  ): N.Expression {\n    const node = this.startNodeAt(startPos, startLoc);\n    node.object = base;\n    this.next(); // eat '::'\n    node.callee = this.parseNoCallExpr();\n    state.stop = true;\n    return this.parseSubscripts(\n      this.finishNode(node, \"BindExpression\"),\n      startPos,\n      startLoc,\n      noCalls,\n    );\n  }\n\n  // https://tc39.es/ecma262/#prod-CoverCallExpressionAndAsyncArrowHead\n  // CoverCallExpressionAndAsyncArrowHead\n  // CallExpression[?Yield, ?Await] Arguments[?Yield, ?Await]\n  // OptionalChain[?Yield, ?Await] Arguments[?Yield, ?Await]\n  parseCoverCallAndAsyncArrowHead(\n    this: Parser,\n    base: N.Expression,\n    startPos: number,\n    startLoc: Position,\n    state: N.ParseSubscriptState,\n    optional: boolean,\n  ): N.Expression {\n    const oldMaybeInArrowParameters = this.state.maybeInArrowParameters;\n    let refExpressionErrors: ExpressionErrors | null = null;\n\n    this.state.maybeInArrowParameters = true;\n    this.next(); // eat `(`\n\n    const node = this.startNodeAt<N.CallExpression | N.OptionalCallExpression>(\n      startPos,\n      startLoc,\n    );\n    node.callee = base;\n    const { maybeAsyncArrow, optionalChainMember } = state;\n\n    if (maybeAsyncArrow) {\n      this.expressionScope.enter(newAsyncArrowScope());\n      refExpressionErrors = new ExpressionErrors();\n    }\n\n    if (optionalChainMember) {\n      // @ts-expect-error when optionalChainMember is true, node must be an optional call\n      node.optional = optional;\n    }\n\n    if (optional) {\n      node.arguments = this.parseCallExpressionArguments(tt.parenR);\n    } else {\n      node.arguments = this.parseCallExpressionArguments(\n        tt.parenR,\n        base.type === \"Import\",\n        base.type !== \"Super\",\n        // @ts-expect-error todo(flow->ts)\n        node,\n        refExpressionErrors,\n      );\n    }\n    let finishedNode:\n      | N.CallExpression\n      | N.OptionalCallExpression\n      | N.ArrowFunctionExpression = this.finishCallExpression(\n      node,\n      optionalChainMember,\n    );\n\n    if (maybeAsyncArrow && this.shouldParseAsyncArrow() && !optional) {\n      /*:: invariant(refExpressionErrors != null) */\n      state.stop = true;\n      this.checkDestructuringPrivate(refExpressionErrors);\n      this.expressionScope.validateAsPattern();\n      this.expressionScope.exit();\n      finishedNode = this.parseAsyncArrowFromCallExpression(\n        this.startNodeAt<N.ArrowFunctionExpression>(startPos, startLoc),\n        finishedNode as N.CallExpression,\n      );\n    } else {\n      if (maybeAsyncArrow) {\n        this.checkExpressionErrors(refExpressionErrors, true);\n        this.expressionScope.exit();\n      }\n      this.toReferencedArguments(finishedNode);\n    }\n\n    this.state.maybeInArrowParameters = oldMaybeInArrowParameters;\n\n    return finishedNode;\n  }\n\n  toReferencedArguments(\n    node: N.CallExpression | N.OptionalCallExpression,\n    isParenthesizedExpr?: boolean,\n  ) {\n    this.toReferencedListDeep(node.arguments, isParenthesizedExpr);\n  }\n\n  // MemberExpression [?Yield, ?Await] TemplateLiteral[?Yield, ?Await, +Tagged]\n  // CallExpression [?Yield, ?Await] TemplateLiteral[?Yield, ?Await, +Tagged]\n  parseTaggedTemplateExpression(\n    this: Parser,\n    base: N.Expression,\n    startPos: number,\n    startLoc: Position,\n    state: N.ParseSubscriptState,\n  ): N.TaggedTemplateExpression {\n    const node = this.startNodeAt<N.TaggedTemplateExpression>(\n      startPos,\n      startLoc,\n    );\n    node.tag = base;\n    node.quasi = this.parseTemplate(true);\n    if (state.optionalChainMember) {\n      this.raise(Errors.OptionalChainingNoTemplate, { at: startLoc });\n    }\n    return this.finishNode(node, \"TaggedTemplateExpression\");\n  }\n\n  atPossibleAsyncArrow(base: N.Expression): boolean {\n    return (\n      base.type === \"Identifier\" &&\n      base.name === \"async\" &&\n      this.state.lastTokEndLoc.index === base.end &&\n      !this.canInsertSemicolon() &&\n      // check there are no escape sequences, such as \\u{61}sync\n      base.end - base.start === 5 &&\n      base.start === this.state.potentialArrowAt\n    );\n  }\n\n  finishCallExpression<T extends N.CallExpression | N.OptionalCallExpression>(\n    node: Undone<T>,\n    optional: boolean,\n  ): T {\n    if (node.callee.type === \"Import\") {\n      if (node.arguments.length === 2) {\n        if (process.env.BABEL_8_BREAKING) {\n          this.expectPlugin(\"importAssertions\");\n        } else {\n          if (!this.hasPlugin(\"moduleAttributes\")) {\n            this.expectPlugin(\"importAssertions\");\n          }\n        }\n      }\n      if (node.arguments.length === 0 || node.arguments.length > 2) {\n        this.raise(Errors.ImportCallArity, {\n          at: node,\n          maxArgumentCount:\n            this.hasPlugin(\"importAssertions\") ||\n            this.hasPlugin(\"moduleAttributes\")\n              ? 2\n              : 1,\n        });\n      } else {\n        for (const arg of node.arguments) {\n          if (arg.type === \"SpreadElement\") {\n            this.raise(Errors.ImportCallSpreadArgument, { at: arg });\n          }\n        }\n      }\n    }\n    return this.finishNode(\n      node,\n      optional ? \"OptionalCallExpression\" : \"CallExpression\",\n    );\n  }\n\n  parseCallExpressionArguments(\n    this: Parser,\n    close: TokenType,\n    dynamicImport?: boolean,\n    allowPlaceholder?: boolean,\n    nodeForExtra?: N.Node | null,\n    refExpressionErrors?: ExpressionErrors | null,\n  ): Array<N.Expression | undefined | null> {\n    const elts: N.Expression[] = [];\n    let first = true;\n    const oldInFSharpPipelineDirectBody = this.state.inFSharpPipelineDirectBody;\n    this.state.inFSharpPipelineDirectBody = false;\n\n    while (!this.eat(close)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(tt.comma);\n        if (this.match(close)) {\n          if (\n            dynamicImport &&\n            !this.hasPlugin(\"importAssertions\") &&\n            !this.hasPlugin(\"moduleAttributes\")\n          ) {\n            this.raise(Errors.ImportCallArgumentTrailingComma, {\n              at: this.state.lastTokStartLoc,\n            });\n          }\n          if (nodeForExtra) {\n            this.addTrailingCommaExtraToNode(nodeForExtra);\n          }\n          this.next();\n          break;\n        }\n      }\n\n      elts.push(\n        this.parseExprListItem(false, refExpressionErrors, allowPlaceholder),\n      );\n    }\n\n    this.state.inFSharpPipelineDirectBody = oldInFSharpPipelineDirectBody;\n\n    return elts;\n  }\n\n  shouldParseAsyncArrow(): boolean {\n    return this.match(tt.arrow) && !this.canInsertSemicolon();\n  }\n\n  parseAsyncArrowFromCallExpression(\n    this: Parser,\n    node: Undone<N.ArrowFunctionExpression>,\n    call: N.CallExpression,\n  ): N.ArrowFunctionExpression {\n    this.resetPreviousNodeTrailingComments(call);\n    this.expect(tt.arrow);\n    this.parseArrowExpression(\n      node,\n      call.arguments,\n      true,\n      call.extra?.trailingCommaLoc,\n    );\n    // mark inner comments of `async()` as inner comments of `async () =>`\n    if (call.innerComments) {\n      setInnerComments(node, call.innerComments);\n    }\n    // mark trailing comments of `async` to be inner comments\n    if (call.callee.trailingComments) {\n      setInnerComments(node, call.callee.trailingComments);\n    }\n    return node as N.ArrowFunctionExpression;\n  }\n\n  // Parse a no-call expression (like argument of `new` or `::` operators).\n  // https://tc39.es/ecma262/#prod-MemberExpression\n  parseNoCallExpr(this: Parser): N.Expression {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    return this.parseSubscripts(this.parseExprAtom(), startPos, startLoc, true);\n  }\n\n  // Parse an atomic expression — either a single token that is an\n  // expression, an expression started by a keyword like `function` or\n  // `new`, or an expression wrapped in punctuation like `()`, `[]`,\n  // or `{}`.\n\n  // https://tc39.es/ecma262/#prod-PrimaryExpression\n  // https://tc39.es/ecma262/#prod-AsyncArrowFunction\n  // PrimaryExpression\n  // Super\n  // Import\n  // AsyncArrowFunction\n\n  parseExprAtom(\n    this: Parser,\n    refExpressionErrors?: ExpressionErrors | null,\n  ): N.Expression {\n    let node;\n\n    const { type } = this.state;\n    switch (type) {\n      case tt._super:\n        return this.parseSuper();\n\n      case tt._import:\n        node = this.startNode<N.MetaProperty | N.Import>();\n        this.next();\n\n        if (this.match(tt.dot)) {\n          return this.parseImportMetaProperty(node as Undone<N.MetaProperty>);\n        }\n\n        if (!this.match(tt.parenL)) {\n          this.raise(Errors.UnsupportedImport, {\n            at: this.state.lastTokStartLoc,\n          });\n        }\n        return this.finishNode(node, \"Import\");\n      case tt._this:\n        node = this.startNode();\n        this.next();\n        return this.finishNode(node, \"ThisExpression\");\n\n      case tt._do: {\n        return this.parseDo(this.startNode(), false);\n      }\n\n      case tt.slash:\n      case tt.slashAssign: {\n        this.readRegexp();\n        return this.parseRegExpLiteral(this.state.value);\n      }\n\n      case tt.num:\n        return this.parseNumericLiteral(this.state.value);\n\n      case tt.bigint:\n        return this.parseBigIntLiteral(this.state.value);\n\n      case tt.decimal:\n        return this.parseDecimalLiteral(this.state.value);\n\n      case tt.string:\n        return this.parseStringLiteral(this.state.value);\n\n      case tt._null:\n        return this.parseNullLiteral();\n\n      case tt._true:\n        return this.parseBooleanLiteral(true);\n      case tt._false:\n        return this.parseBooleanLiteral(false);\n\n      case tt.parenL: {\n        const canBeArrow = this.state.potentialArrowAt === this.state.start;\n        return this.parseParenAndDistinguishExpression(canBeArrow);\n      }\n\n      case tt.bracketBarL:\n      case tt.bracketHashL: {\n        return this.parseArrayLike(\n          this.state.type === tt.bracketBarL ? tt.bracketBarR : tt.bracketR,\n          /* canBePattern */ false,\n          /* isTuple */ true,\n        );\n      }\n      case tt.bracketL: {\n        return this.parseArrayLike(\n          tt.bracketR,\n          /* canBePattern */ true,\n          /* isTuple */ false,\n          refExpressionErrors,\n        );\n      }\n      case tt.braceBarL:\n      case tt.braceHashL: {\n        return this.parseObjectLike(\n          this.state.type === tt.braceBarL ? tt.braceBarR : tt.braceR,\n          /* isPattern */ false,\n          /* isRecord */ true,\n        );\n      }\n      case tt.braceL: {\n        return this.parseObjectLike(\n          tt.braceR,\n          /* isPattern */ false,\n          /* isRecord */ false,\n          refExpressionErrors,\n        );\n      }\n      case tt._function:\n        return this.parseFunctionOrFunctionSent();\n\n      case tt.at:\n        this.parseDecorators();\n      // fall through\n      case tt._class:\n        node = this.startNode<N.Class>();\n        this.takeDecorators(node);\n        return this.parseClass(node, false);\n\n      case tt._new:\n        return this.parseNewOrNewTarget();\n\n      case tt.templateNonTail:\n      case tt.templateTail:\n        return this.parseTemplate(false);\n\n      // BindExpression[Yield]\n      //   :: MemberExpression[?Yield]\n      case tt.doubleColon: {\n        node = this.startNode();\n        this.next();\n        node.object = null;\n        const callee = (node.callee = this.parseNoCallExpr());\n        if (callee.type === \"MemberExpression\") {\n          return this.finishNode(node, \"BindExpression\");\n        } else {\n          throw this.raise(Errors.UnsupportedBind, { at: callee });\n        }\n      }\n\n      case tt.privateName: {\n        // Standalone private names are only allowed in \"#x in obj\"\n        // expressions, and they are directly handled by callers of\n        // parseExprOp. If we reach this, the input is always invalid.\n        // We can throw a better error message and recover, rather than\n        // just throwing \"Unexpected token\" (which is the default\n        // behavior of this big switch statement).\n        this.raise(Errors.PrivateInExpectedIn, {\n          at: this.state.startLoc,\n          identifierName: this.state.value,\n        });\n        return this.parsePrivateName();\n      }\n\n      case tt.moduloAssign: {\n        return this.parseTopicReferenceThenEqualsSign(tt.modulo, \"%\");\n      }\n\n      case tt.xorAssign: {\n        return this.parseTopicReferenceThenEqualsSign(tt.bitwiseXOR, \"^\");\n      }\n\n      case tt.doubleCaret:\n      case tt.doubleAt: {\n        return this.parseTopicReference(\"hack\");\n      }\n\n      case tt.bitwiseXOR:\n      case tt.modulo:\n      case tt.hash: {\n        const pipeProposal = this.getPluginOption(\n          \"pipelineOperator\",\n          \"proposal\",\n        );\n\n        if (pipeProposal) {\n          return this.parseTopicReference(pipeProposal);\n        } else {\n          throw this.unexpected();\n        }\n      }\n\n      case tt.lt: {\n        const lookaheadCh = this.input.codePointAt(this.nextTokenStart());\n        if (\n          isIdentifierStart(lookaheadCh) || // Element/Type Parameter <foo>\n          lookaheadCh === charCodes.greaterThan // Fragment <>\n        ) {\n          this.expectOnePlugin([\"jsx\", \"flow\", \"typescript\"]);\n          break;\n        } else {\n          throw this.unexpected();\n        }\n      }\n\n      default:\n        if (tokenIsIdentifier(type)) {\n          if (\n            this.isContextual(tt._module) &&\n            this.lookaheadCharCode() === charCodes.leftCurlyBrace &&\n            !this.hasFollowingLineBreak()\n          ) {\n            return this.parseModuleExpression();\n          }\n          const canBeArrow = this.state.potentialArrowAt === this.state.start;\n          const containsEsc = this.state.containsEsc;\n          const id = this.parseIdentifier();\n\n          if (\n            !containsEsc &&\n            id.name === \"async\" &&\n            !this.canInsertSemicolon()\n          ) {\n            const { type } = this.state;\n            if (type === tt._function) {\n              this.resetPreviousNodeTrailingComments(id);\n              this.next();\n              return this.parseFunction(\n                this.startNodeAtNode(id),\n                undefined,\n                true,\n              );\n            } else if (tokenIsIdentifier(type)) {\n              // If the next token begins with \"=\", commit to parsing an async\n              // arrow function. (Peeking ahead for \"=\" lets us avoid a more\n              // expensive full-token lookahead on this common path.)\n              if (this.lookaheadCharCode() === charCodes.equalsTo) {\n                // although `id` is not used in async arrow unary function,\n                // we don't need to reset `async`'s trailing comments because\n                // it will be attached to the upcoming async arrow binding identifier\n                return this.parseAsyncArrowUnaryFunction(\n                  this.startNodeAtNode(id),\n                );\n              } else {\n                // Otherwise, treat \"async\" as an identifier and let calling code\n                // deal with the current tt.name token.\n                return id;\n              }\n            } else if (type === tt._do) {\n              this.resetPreviousNodeTrailingComments(id);\n              return this.parseDo(this.startNodeAtNode(id), true);\n            }\n          }\n\n          if (\n            canBeArrow &&\n            this.match(tt.arrow) &&\n            !this.canInsertSemicolon()\n          ) {\n            this.next();\n            return this.parseArrowExpression(\n              this.startNodeAtNode(id),\n              [id],\n              false,\n            );\n          }\n\n          return id;\n        } else {\n          throw this.unexpected();\n        }\n    }\n  }\n\n  // This helper method should only be called\n  // when the parser has reached a potential Hack pipe topic token\n  // that is followed by an equals sign.\n  // See <https://github.com/js-choi/proposal-hack-pipes>.\n  // If we find ^= or %= in an expression position\n  // (i.e., the tt.moduloAssign or tt.xorAssign token types), and if the\n  // Hack-pipes proposal is active with ^ or % as its topicToken, then the ^ or\n  // % could be the topic token (e.g., in x |> ^==y or x |> ^===y), and so we\n  // reparse the current token as ^ or %.\n  // Otherwise, this throws an unexpected-token error.\n  parseTopicReferenceThenEqualsSign(\n    topicTokenType: TokenType,\n    topicTokenValue: string,\n  ): N.Expression {\n    const pipeProposal = this.getPluginOption(\"pipelineOperator\", \"proposal\");\n\n    if (pipeProposal) {\n      // Set the most-recent token to be a topic token\n      // given by the tokenType and tokenValue.\n      // Now the next readToken() call (in parseTopicReference)\n      // will consume that “topic token”.\n      this.state.type = topicTokenType;\n      this.state.value = topicTokenValue;\n      // Rewind the tokenizer to the end of the “topic token”, so that the\n      // following token starts at the equals sign after that topic token.\n      this.state.pos--;\n      this.state.end--;\n      // This is safe to do since the preceding character was either ^ or %, and\n      // thus not a newline.\n      this.state.endLoc = createPositionWithColumnOffset(this.state.endLoc, -1);\n      // Now actually consume the topic token.\n      return this.parseTopicReference(pipeProposal);\n    } else {\n      throw this.unexpected();\n    }\n  }\n\n  // This helper method should only be called\n  // when the proposal-pipeline-operator plugin is active,\n  // and when the parser has reached a potential Hack pipe topic token.\n  // Although a pipe-operator proposal is assumed to be active,\n  // its configuration might not match the current token’s type.\n  // See <https://github.com/js-choi/proposal-hack-pipes>.\n  parseTopicReference(pipeProposal: string): N.Expression {\n    const node = this.startNode<N.TopicReference>();\n    const startLoc = this.state.startLoc;\n    const tokenType = this.state.type;\n\n    // Consume the current token.\n    this.next();\n\n    // If the pipe-operator plugin’s configuration matches the current token’s type,\n    // then this will return `node`, will have been finished as a topic reference.\n    // Otherwise, this will throw a `PipeTopicUnconfiguredToken` error.\n    return this.finishTopicReference(node, startLoc, pipeProposal, tokenType);\n  }\n\n  // This helper method attempts to finish the given `node`\n  // into a topic-reference node for the given `pipeProposal`.\n  // See <https://github.com/js-choi/proposal-hack-pipes>.\n  //\n  // The method assumes that any topic token was consumed before it was called.\n  //\n  // If the `pipelineOperator` plugin is active,\n  // and if the given `tokenType` matches the plugin’s configuration,\n  // then this method will return the finished `node`.\n  //\n  // If the `pipelineOperator` plugin is active,\n  // but if the given `tokenType` does not match the plugin’s configuration,\n  // then this method will throw a `PipeTopicUnconfiguredToken` error.\n  finishTopicReference(\n    node: Undone<N.Node>,\n    startLoc: Position,\n    pipeProposal: string,\n    tokenType: TokenType,\n  ): N.Expression {\n    if (\n      this.testTopicReferenceConfiguration(pipeProposal, startLoc, tokenType)\n    ) {\n      // The token matches the plugin’s configuration.\n      // The token is therefore a topic reference.\n\n      // Determine the node type for the topic reference\n      // that is appropriate for the active pipe-operator proposal.\n      const nodeType =\n        pipeProposal === \"smart\"\n          ? \"PipelinePrimaryTopicReference\"\n          : // The proposal must otherwise be \"hack\",\n            // as enforced by testTopicReferenceConfiguration.\n            \"TopicReference\";\n\n      if (!this.topicReferenceIsAllowedInCurrentContext()) {\n        this.raise(\n          // The topic reference is not allowed in the current context:\n          // it is outside of a pipe body.\n          // Raise recoverable errors.\n          pipeProposal === \"smart\"\n            ? Errors.PrimaryTopicNotAllowed\n            : // In this case, `pipeProposal === \"hack\"` is true.\n              Errors.PipeTopicUnbound,\n          { at: startLoc },\n        );\n      }\n\n      // Register the topic reference so that its pipe body knows\n      // that its topic was used at least once.\n      this.registerTopicReference();\n\n      return this.finishNode(node, nodeType);\n    } else {\n      // The token does not match the plugin’s configuration.\n      throw this.raise(Errors.PipeTopicUnconfiguredToken, {\n        at: startLoc,\n        token: tokenLabelName(tokenType),\n      });\n    }\n  }\n\n  // This helper method tests whether the given token type\n  // matches the pipelineOperator parser plugin’s configuration.\n  // If the active pipe proposal is Hack style,\n  // and if the given token is the same as the plugin configuration’s `topicToken`,\n  // then this is a valid topic reference.\n  // If the active pipe proposal is smart mix,\n  // then the topic token must always be `#`.\n  // If the active pipe proposal is neither (e.g., \"minimal\" or \"fsharp\"),\n  // then an error is thrown.\n  testTopicReferenceConfiguration(\n    pipeProposal: string,\n    startLoc: Position,\n    tokenType: TokenType,\n  ): boolean {\n    switch (pipeProposal) {\n      case \"hack\": {\n        return this.hasPlugin([\n          \"pipelineOperator\",\n          {\n            // @ts-expect-error token must have a label\n            topicToken: tokenLabelName(tokenType),\n          },\n        ]);\n      }\n      case \"smart\":\n        return tokenType === tt.hash;\n      default:\n        throw this.raise(Errors.PipeTopicRequiresHackPipes, { at: startLoc });\n    }\n  }\n\n  // async [no LineTerminator here] AsyncArrowBindingIdentifier[?Yield] [no LineTerminator here] => AsyncConciseBody[?In]\n  parseAsyncArrowUnaryFunction(\n    this: Parser,\n    node: Undone<N.ArrowFunctionExpression>,\n  ): N.ArrowFunctionExpression {\n    // We don't need to push a new ParameterDeclarationScope here since we are sure\n    // 1) it is an async arrow, 2) no biding pattern is allowed in params\n    this.prodParam.enter(functionFlags(true, this.prodParam.hasYield));\n    const params = [this.parseIdentifier()];\n    this.prodParam.exit();\n    if (this.hasPrecedingLineBreak()) {\n      this.raise(Errors.LineTerminatorBeforeArrow, {\n        at: this.state.curPosition(),\n      });\n    }\n    this.expect(tt.arrow);\n    // let foo = async bar => {};\n    return this.parseArrowExpression(node, params, true);\n  }\n\n  // https://github.com/tc39/proposal-do-expressions\n  // https://github.com/tc39/proposal-async-do-expressions\n  parseDo(\n    this: Parser,\n    node: Undone<N.DoExpression>,\n    isAsync: boolean,\n  ): N.DoExpression {\n    this.expectPlugin(\"doExpressions\");\n    if (isAsync) {\n      this.expectPlugin(\"asyncDoExpressions\");\n    }\n    node.async = isAsync;\n    this.next(); // eat `do`\n    const oldLabels = this.state.labels;\n    this.state.labels = [];\n    if (isAsync) {\n      // AsyncDoExpression :\n      // async [no LineTerminator here] do Block[~Yield, +Await, ~Return]\n      this.prodParam.enter(PARAM_AWAIT);\n      node.body = this.parseBlock();\n      this.prodParam.exit();\n    } else {\n      node.body = this.parseBlock();\n    }\n\n    this.state.labels = oldLabels;\n    return this.finishNode(node, \"DoExpression\");\n  }\n\n  // Parse the `super` keyword\n  parseSuper(): N.Super {\n    const node = this.startNode<N.Super>();\n    this.next(); // eat `super`\n    if (\n      this.match(tt.parenL) &&\n      !this.scope.allowDirectSuper &&\n      !this.options.allowSuperOutsideMethod\n    ) {\n      this.raise(Errors.SuperNotAllowed, { at: node });\n    } else if (\n      !this.scope.allowSuper &&\n      !this.options.allowSuperOutsideMethod\n    ) {\n      this.raise(Errors.UnexpectedSuper, { at: node });\n    }\n\n    if (\n      !this.match(tt.parenL) &&\n      !this.match(tt.bracketL) &&\n      !this.match(tt.dot)\n    ) {\n      this.raise(Errors.UnsupportedSuper, { at: node });\n    }\n\n    return this.finishNode(node, \"Super\");\n  }\n\n  parsePrivateName(): N.PrivateName {\n    const node = this.startNode<N.PrivateName>();\n    const id = this.startNodeAt<N.Identifier>(\n      this.state.start + 1,\n      // The position is hardcoded because we merge `#` and name into a single\n      // tt.privateName token\n      new Position(\n        this.state.curLine,\n        this.state.start + 1 - this.state.lineStart,\n        this.state.start + 1,\n      ),\n    );\n    const name = this.state.value;\n    this.next(); // eat #name;\n    node.id = this.createIdentifier(id, name);\n    return this.finishNode(node, \"PrivateName\");\n  }\n\n  parseFunctionOrFunctionSent(\n    this: Parser,\n  ): N.FunctionExpression | N.MetaProperty {\n    const node = this.startNode<N.FunctionExpression | N.MetaProperty>();\n\n    // We do not do parseIdentifier here because when parseFunctionOrFunctionSent\n    // is called we already know that the current token is a \"name\" with the value \"function\"\n    // This will improve perf a tiny little bit as we do not do validation but more importantly\n    // here is that parseIdentifier will remove an item from the expression stack\n    // if \"function\" or \"class\" is parsed as identifier (in objects e.g.), which should not happen here.\n    this.next(); // eat `function`\n\n    if (this.prodParam.hasYield && this.match(tt.dot)) {\n      const meta = this.createIdentifier(\n        this.startNodeAtNode<N.Identifier>(node),\n        \"function\",\n      );\n      this.next(); // eat `.`\n      // https://github.com/tc39/proposal-function.sent#syntax-1\n      if (this.match(tt._sent)) {\n        this.expectPlugin(\"functionSent\");\n      } else if (!this.hasPlugin(\"functionSent\")) {\n        // The code wasn't `function.sent` but just `function.`, so a simple error is less confusing.\n        this.unexpected();\n      }\n      return this.parseMetaProperty(\n        node as Undone<N.MetaProperty>,\n        meta,\n        \"sent\",\n      );\n    }\n    return this.parseFunction(node as Undone<N.FunctionExpression>);\n  }\n\n  parseMetaProperty(\n    node: Undone<N.MetaProperty>,\n    meta: N.Identifier,\n    propertyName: string,\n  ): N.MetaProperty {\n    node.meta = meta;\n\n    const containsEsc = this.state.containsEsc;\n\n    node.property = this.parseIdentifier(true);\n\n    if (node.property.name !== propertyName || containsEsc) {\n      this.raise(Errors.UnsupportedMetaProperty, {\n        at: node.property,\n        target: meta.name,\n        onlyValidPropertyName: propertyName,\n      });\n    }\n\n    return this.finishNode(node, \"MetaProperty\");\n  }\n\n  // https://tc39.es/ecma262/#prod-ImportMeta\n  parseImportMetaProperty(node: Undone<N.MetaProperty>): N.MetaProperty {\n    const id = this.createIdentifier(\n      this.startNodeAtNode<N.Identifier>(node),\n      \"import\",\n    );\n    this.next(); // eat `.`\n\n    if (this.isContextual(tt._meta)) {\n      if (!this.inModule) {\n        this.raise(Errors.ImportMetaOutsideModule, { at: id });\n      }\n      this.sawUnambiguousESM = true;\n    }\n\n    return this.parseMetaProperty(node, id, \"meta\");\n  }\n\n  parseLiteralAtNode<T extends N.Node>(\n    value: any,\n    type: T[\"type\"],\n    node: any,\n  ): T {\n    this.addExtra(node, \"rawValue\", value);\n    this.addExtra(node, \"raw\", this.input.slice(node.start, this.state.end));\n    node.value = value;\n    this.next();\n    return this.finishNode<T>(node, type);\n  }\n\n  parseLiteral<T extends N.Node>(value: any, type: T[\"type\"]): T {\n    const node = this.startNode();\n    return this.parseLiteralAtNode(value, type, node);\n  }\n\n  parseStringLiteral(value: any) {\n    return this.parseLiteral<N.StringLiteral>(value, \"StringLiteral\");\n  }\n\n  parseNumericLiteral(value: any) {\n    return this.parseLiteral<N.NumericLiteral>(value, \"NumericLiteral\");\n  }\n\n  parseBigIntLiteral(value: any) {\n    return this.parseLiteral<N.BigIntLiteral>(value, \"BigIntLiteral\");\n  }\n\n  parseDecimalLiteral(value: any) {\n    return this.parseLiteral<N.DecimalLiteral>(value, \"DecimalLiteral\");\n  }\n\n  parseRegExpLiteral(value: {\n    value: any;\n    pattern: string;\n    flags: N.RegExpLiteral[\"flags\"];\n  }) {\n    const node = this.parseLiteral<N.RegExpLiteral>(\n      value.value,\n      \"RegExpLiteral\",\n    );\n    node.pattern = value.pattern;\n    node.flags = value.flags;\n    return node;\n  }\n\n  parseBooleanLiteral(value: boolean) {\n    const node = this.startNode<N.BooleanLiteral>();\n    node.value = value;\n    this.next();\n    return this.finishNode(node, \"BooleanLiteral\");\n  }\n\n  parseNullLiteral() {\n    const node = this.startNode<N.NullLiteral>();\n    this.next();\n    return this.finishNode(node, \"NullLiteral\");\n  }\n\n  // https://tc39.es/ecma262/#prod-CoverParenthesizedExpressionAndArrowParameterList\n  parseParenAndDistinguishExpression(\n    this: Parser,\n    canBeArrow: boolean,\n  ): N.Expression {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n\n    let val;\n    this.next(); // eat `(`\n    this.expressionScope.enter(newArrowHeadScope());\n\n    const oldMaybeInArrowParameters = this.state.maybeInArrowParameters;\n    const oldInFSharpPipelineDirectBody = this.state.inFSharpPipelineDirectBody;\n    this.state.maybeInArrowParameters = true;\n    this.state.inFSharpPipelineDirectBody = false;\n\n    const innerStartPos = this.state.start;\n    const innerStartLoc = this.state.startLoc;\n    const exprList: N.Expression[] = [];\n    const refExpressionErrors = new ExpressionErrors();\n    let first = true;\n    let spreadStartLoc;\n    let optionalCommaStartLoc;\n\n    while (!this.match(tt.parenR)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(\n          tt.comma,\n          refExpressionErrors.optionalParametersLoc === null\n            ? null\n            : refExpressionErrors.optionalParametersLoc,\n        );\n        if (this.match(tt.parenR)) {\n          optionalCommaStartLoc = this.state.startLoc;\n          break;\n        }\n      }\n\n      if (this.match(tt.ellipsis)) {\n        const spreadNodeStartPos = this.state.start;\n        const spreadNodeStartLoc = this.state.startLoc;\n        spreadStartLoc = this.state.startLoc;\n        exprList.push(\n          this.parseParenItem(\n            this.parseRestBinding(),\n            spreadNodeStartPos,\n            spreadNodeStartLoc,\n          ),\n        );\n\n        if (!this.checkCommaAfterRest(charCodes.rightParenthesis)) {\n          break;\n        }\n      } else {\n        exprList.push(\n          this.parseMaybeAssignAllowIn(\n            refExpressionErrors,\n            this.parseParenItem,\n          ),\n        );\n      }\n    }\n\n    const innerEndLoc = this.state.lastTokEndLoc;\n    this.expect(tt.parenR);\n\n    this.state.maybeInArrowParameters = oldMaybeInArrowParameters;\n    this.state.inFSharpPipelineDirectBody = oldInFSharpPipelineDirectBody;\n\n    let arrowNode = this.startNodeAt<N.ArrowFunctionExpression>(\n      startPos,\n      startLoc,\n    );\n    if (\n      canBeArrow &&\n      this.shouldParseArrow(exprList) &&\n      (arrowNode = this.parseArrow(arrowNode))\n    ) {\n      this.checkDestructuringPrivate(refExpressionErrors);\n      this.expressionScope.validateAsPattern();\n      this.expressionScope.exit();\n      this.parseArrowExpression(arrowNode, exprList, false);\n      // @ts-expect-error todo(flow->ts) improve node types\n      return arrowNode;\n    }\n    this.expressionScope.exit();\n\n    if (!exprList.length) {\n      this.unexpected(this.state.lastTokStartLoc);\n    }\n    if (optionalCommaStartLoc) this.unexpected(optionalCommaStartLoc);\n    if (spreadStartLoc) this.unexpected(spreadStartLoc);\n    this.checkExpressionErrors(refExpressionErrors, true);\n\n    this.toReferencedListDeep(exprList, /* isParenthesizedExpr */ true);\n    if (exprList.length > 1) {\n      val = this.startNodeAt<N.SequenceExpression>(\n        innerStartPos,\n        innerStartLoc,\n      );\n      val.expressions = exprList;\n      // finish node at current location so it can pick up comments after `)`\n      this.finishNode(val, \"SequenceExpression\");\n      this.resetEndLocation(val, innerEndLoc);\n    } else {\n      val = exprList[0];\n    }\n\n    return this.wrapParenthesis(\n      startPos,\n      startLoc,\n      // @ts-expect-error todo(flow->ts)\n      val,\n    );\n  }\n\n  wrapParenthesis(\n    startPos: number,\n    startLoc: Position,\n    expression: N.Expression,\n  ): N.Expression {\n    if (!this.options.createParenthesizedExpressions) {\n      this.addExtra(expression, \"parenthesized\", true);\n      this.addExtra(expression, \"parenStart\", startPos);\n\n      this.takeSurroundingComments(\n        expression,\n        startPos,\n        this.state.lastTokEndLoc.index,\n      );\n\n      return expression;\n    }\n\n    const parenExpression = this.startNodeAt<N.ParenthesizedExpression>(\n      startPos,\n      startLoc,\n    );\n    parenExpression.expression = expression;\n    return this.finishNode(parenExpression, \"ParenthesizedExpression\");\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars -- `params` is used in typescript plugin\n  shouldParseArrow(params: Array<N.Node>): boolean {\n    return !this.canInsertSemicolon();\n  }\n\n  parseArrow(\n    node: Undone<N.ArrowFunctionExpression>,\n  ): Undone<N.ArrowFunctionExpression> | undefined {\n    if (this.eat(tt.arrow)) {\n      return node;\n    }\n  }\n\n  parseParenItem(\n    node: N.Expression,\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    startPos: number,\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    startLoc: Position,\n  ): N.Expression {\n    return node;\n  }\n\n  parseNewOrNewTarget(this: Parser): N.NewExpression | N.MetaProperty {\n    const node = this.startNode<N.NewExpression | N.MetaProperty>();\n    this.next();\n    if (this.match(tt.dot)) {\n      // https://tc39.es/ecma262/#prod-NewTarget\n      const meta = this.createIdentifier(\n        this.startNodeAtNode<N.Identifier>(node),\n        \"new\",\n      );\n      this.next();\n      const metaProp = this.parseMetaProperty(\n        node as Undone<N.MetaProperty>,\n        meta,\n        \"target\",\n      );\n\n      if (!this.scope.inNonArrowFunction && !this.scope.inClass) {\n        this.raise(Errors.UnexpectedNewTarget, { at: metaProp });\n      }\n\n      return metaProp;\n    }\n\n    return this.parseNew(node as Undone<N.NewExpression>);\n  }\n\n  // New's precedence is slightly tricky. It must allow its argument to\n  // be a `[]` or dot subscript expression, but not a call — at least,\n  // not without wrapping it in parentheses. Thus, it uses the noCalls\n  // argument to parseSubscripts to prevent it from consuming the\n  // argument list.\n  // https://tc39.es/ecma262/#prod-NewExpression\n  parseNew(this: Parser, node: Undone<N.NewExpression>): N.NewExpression {\n    this.parseNewCallee(node);\n\n    if (this.eat(tt.parenL)) {\n      const args = this.parseExprList(tt.parenR);\n      this.toReferencedList(args);\n      // (parseExprList should be all non-null in this case)\n      node.arguments = args;\n    } else {\n      node.arguments = [];\n    }\n\n    return this.finishNode(node, \"NewExpression\");\n  }\n\n  parseNewCallee(this: Parser, node: Undone<N.NewExpression>): void {\n    node.callee = this.parseNoCallExpr();\n    if (node.callee.type === \"Import\") {\n      this.raise(Errors.ImportCallNotNewExpression, { at: node.callee });\n    } else if (this.isOptionalChain(node.callee)) {\n      this.raise(Errors.OptionalChainingNoNew, {\n        at: this.state.lastTokEndLoc,\n      });\n    } else if (this.eat(tt.questionDot)) {\n      this.raise(Errors.OptionalChainingNoNew, {\n        at: this.state.startLoc,\n      });\n    }\n  }\n\n  // Parse template expression.\n\n  parseTemplateElement(isTagged: boolean): N.TemplateElement {\n    const { start, startLoc, end, value } = this.state;\n    const elemStart = start + 1;\n    const elem = this.startNodeAt<N.TemplateElement>(\n      elemStart,\n      createPositionWithColumnOffset(startLoc, 1),\n    );\n    if (value === null) {\n      if (!isTagged) {\n        this.raise(Errors.InvalidEscapeSequenceTemplate, {\n          // FIXME: explain\n          at: createPositionWithColumnOffset(startLoc, 2),\n        });\n      }\n    }\n\n    const isTail = this.match(tt.templateTail);\n    const endOffset = isTail ? -1 : -2;\n    const elemEnd = end + endOffset;\n    elem.value = {\n      raw: this.input.slice(elemStart, elemEnd).replace(/\\r\\n?/g, \"\\n\"),\n      cooked: value === null ? null : value.slice(1, endOffset),\n    };\n    elem.tail = isTail;\n    this.next();\n    const finishedNode = this.finishNode(elem, \"TemplateElement\");\n    this.resetEndLocation(\n      finishedNode,\n      createPositionWithColumnOffset(this.state.lastTokEndLoc, endOffset),\n    );\n    return finishedNode;\n  }\n\n  // https://tc39.es/ecma262/#prod-TemplateLiteral\n  parseTemplate(this: Parser, isTagged: boolean): N.TemplateLiteral {\n    const node = this.startNode<N.TemplateLiteral>();\n    node.expressions = [];\n    let curElt = this.parseTemplateElement(isTagged);\n    node.quasis = [curElt];\n    while (!curElt.tail) {\n      node.expressions.push(this.parseTemplateSubstitution());\n      this.readTemplateContinuation();\n      node.quasis.push((curElt = this.parseTemplateElement(isTagged)));\n    }\n    return this.finishNode(node, \"TemplateLiteral\");\n  }\n\n  // This is overwritten by the TypeScript plugin to parse template types\n  parseTemplateSubstitution(this: Parser): N.Expression {\n    return this.parseExpression();\n  }\n\n  // Parse an object literal, binding pattern, or record.\n\n  parseObjectLike(\n    close: TokenType,\n    isPattern: true,\n    isRecord?: boolean | null,\n    refExpressionErrors?: ExpressionErrors | null,\n  ): N.ObjectPattern;\n  parseObjectLike(\n    close: TokenType,\n    isPattern: false,\n    isRecord?: false | null,\n    refExpressionErrors?: ExpressionErrors | null,\n  ): N.ObjectExpression;\n  parseObjectLike(\n    close: TokenType,\n    isPattern: false,\n    isRecord?: true,\n    refExpressionErrors?: ExpressionErrors | null,\n  ): N.RecordExpression;\n  parseObjectLike<T extends N.ObjectPattern | N.ObjectExpression>(\n    this: Parser,\n    close: TokenType,\n    isPattern: boolean,\n    isRecord?: boolean | null,\n    refExpressionErrors?: ExpressionErrors | null,\n  ): T {\n    if (isRecord) {\n      this.expectPlugin(\"recordAndTuple\");\n    }\n    const oldInFSharpPipelineDirectBody = this.state.inFSharpPipelineDirectBody;\n    this.state.inFSharpPipelineDirectBody = false;\n    const propHash: any = Object.create(null);\n    let first = true;\n    const node = this.startNode<\n      N.ObjectExpression | N.ObjectPattern | N.RecordExpression\n    >();\n\n    node.properties = [];\n    this.next();\n\n    while (!this.match(close)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(tt.comma);\n        if (this.match(close)) {\n          this.addTrailingCommaExtraToNode(\n            // @ts-expect-error todo(flow->ts) improve node types\n            node,\n          );\n          break;\n        }\n      }\n\n      let prop;\n      if (isPattern) {\n        prop = this.parseBindingProperty();\n      } else {\n        prop = this.parsePropertyDefinition(refExpressionErrors);\n        this.checkProto(prop, isRecord, propHash, refExpressionErrors);\n      }\n\n      if (\n        isRecord &&\n        !this.isObjectProperty(prop) &&\n        prop.type !== \"SpreadElement\"\n      ) {\n        this.raise(Errors.InvalidRecordProperty, { at: prop });\n      }\n\n      // @ts-expect-error\n      if (prop.shorthand) {\n        this.addExtra(prop, \"shorthand\", true);\n      }\n\n      // @ts-expect-error Fixme: refine typings\n      node.properties.push(prop);\n    }\n\n    this.next();\n\n    this.state.inFSharpPipelineDirectBody = oldInFSharpPipelineDirectBody;\n    let type = \"ObjectExpression\";\n    if (isPattern) {\n      type = \"ObjectPattern\";\n    } else if (isRecord) {\n      type = \"RecordExpression\";\n    }\n    // @ts-expect-error type is well defined\n    return this.finishNode(node, type);\n  }\n\n  addTrailingCommaExtraToNode(node: N.Node): void {\n    this.addExtra(node, \"trailingComma\", this.state.lastTokStart);\n    this.addExtra(node, \"trailingCommaLoc\", this.state.lastTokStartLoc, false);\n  }\n\n  // Check grammar production:\n  //   IdentifierName *_opt PropertyName\n  // It is used in `parsePropertyDefinition` to detect AsyncMethod and Accessors\n  maybeAsyncOrAccessorProp(prop: Undone<N.ObjectProperty>): boolean {\n    return (\n      !prop.computed &&\n      prop.key.type === \"Identifier\" &&\n      (this.isLiteralPropertyName() ||\n        this.match(tt.bracketL) ||\n        this.match(tt.star))\n    );\n  }\n\n  // https://tc39.es/ecma262/#prod-PropertyDefinition\n  parsePropertyDefinition(\n    this: Parser,\n    refExpressionErrors?: ExpressionErrors | null,\n  ): N.ObjectMember | N.SpreadElement {\n    let decorators = [];\n    if (this.match(tt.at)) {\n      if (this.hasPlugin(\"decorators\")) {\n        this.raise(Errors.UnsupportedPropertyDecorator, {\n          at: this.state.startLoc,\n        });\n      }\n\n      // we needn't check if decorators (stage 0) plugin is enabled since it's checked by\n      // the call to this.parseDecorator\n      while (this.match(tt.at)) {\n        decorators.push(this.parseDecorator());\n      }\n    }\n\n    const prop = this.startNode<N.ObjectProperty>();\n    let isAsync = false;\n    let isAccessor = false;\n    let startPos;\n    let startLoc;\n\n    if (this.match(tt.ellipsis)) {\n      if (decorators.length) this.unexpected();\n      return this.parseSpread();\n    }\n\n    if (decorators.length) {\n      prop.decorators = decorators;\n      decorators = [];\n    }\n\n    prop.method = false;\n\n    if (refExpressionErrors) {\n      startPos = this.state.start;\n      startLoc = this.state.startLoc;\n    }\n\n    let isGenerator = this.eat(tt.star);\n    this.parsePropertyNamePrefixOperator(prop);\n    const containsEsc = this.state.containsEsc;\n    const key = this.parsePropertyName(prop, refExpressionErrors);\n\n    if (!isGenerator && !containsEsc && this.maybeAsyncOrAccessorProp(prop)) {\n      const keyName = key.name;\n      // https://tc39.es/ecma262/#prod-AsyncMethod\n      // https://tc39.es/ecma262/#prod-AsyncGeneratorMethod\n      if (keyName === \"async\" && !this.hasPrecedingLineBreak()) {\n        isAsync = true;\n        this.resetPreviousNodeTrailingComments(key);\n        isGenerator = this.eat(tt.star);\n        this.parsePropertyName(prop);\n      }\n      // get PropertyName[?Yield, ?Await] () { FunctionBody[~Yield, ~Await] }\n      // set PropertyName[?Yield, ?Await] ( PropertySetParameterList ) { FunctionBody[~Yield, ~Await] }\n      if (keyName === \"get\" || keyName === \"set\") {\n        isAccessor = true;\n        this.resetPreviousNodeTrailingComments(key);\n        prop.kind = keyName;\n        if (this.match(tt.star)) {\n          isGenerator = true;\n          this.raise(Errors.AccessorIsGenerator, {\n            at: this.state.curPosition(),\n            kind: keyName,\n          });\n          this.next();\n        }\n        this.parsePropertyName(prop);\n      }\n    }\n\n    return this.parseObjPropValue(\n      prop,\n      startPos,\n      startLoc,\n      isGenerator,\n      isAsync,\n      false /* isPattern */,\n      isAccessor,\n      refExpressionErrors,\n    );\n  }\n\n  getGetterSetterExpectedParamCount(\n    method: N.ObjectMethod | N.ClassMethod,\n  ): number {\n    return method.kind === \"get\" ? 0 : 1;\n  }\n\n  // This exists so we can override within the ESTree plugin\n  getObjectOrClassMethodParams(method: N.ObjectMethod | N.ClassMethod) {\n    return method.params;\n  }\n\n  // get methods aren't allowed to have any parameters\n  // set methods must have exactly 1 parameter which is not a rest parameter\n  checkGetterSetterParams(method: N.ObjectMethod | N.ClassMethod): void {\n    const paramCount = this.getGetterSetterExpectedParamCount(method);\n    const params = this.getObjectOrClassMethodParams(method);\n\n    if (params.length !== paramCount) {\n      this.raise(\n        method.kind === \"get\" ? Errors.BadGetterArity : Errors.BadSetterArity,\n        { at: method },\n      );\n    }\n\n    if (\n      method.kind === \"set\" &&\n      params[params.length - 1]?.type === \"RestElement\"\n    ) {\n      this.raise(Errors.BadSetterRestParameter, { at: method });\n    }\n  }\n\n  // https://tc39.es/ecma262/#prod-MethodDefinition\n  parseObjectMethod(\n    this: Parser,\n    prop: Undone<N.ObjectMethod>,\n    isGenerator: boolean,\n    isAsync: boolean,\n    isPattern: boolean,\n    isAccessor: boolean,\n  ): N.ObjectMethod | undefined | null {\n    if (isAccessor) {\n      // isAccessor implies isAsync: false, isPattern: false, isGenerator: false\n      const finishedProp = this.parseMethod(\n        prop,\n        // This _should_ be false, but with error recovery, we allow it to be\n        // set for informational purposes\n        isGenerator,\n        /* isAsync */ false,\n        /* isConstructor */ false,\n        false,\n        \"ObjectMethod\",\n      );\n      this.checkGetterSetterParams(finishedProp);\n      return finishedProp;\n    }\n\n    if (isAsync || isGenerator || this.match(tt.parenL)) {\n      if (isPattern) this.unexpected();\n      prop.kind = \"method\";\n      prop.method = true;\n      return this.parseMethod(\n        prop,\n        isGenerator,\n        isAsync,\n        /* isConstructor */ false,\n        false,\n        \"ObjectMethod\",\n      );\n    }\n  }\n\n  // if `isPattern` is true, parse https://tc39.es/ecma262/#prod-BindingProperty\n  // else https://tc39.es/ecma262/#prod-PropertyDefinition\n  parseObjectProperty(\n    this: Parser,\n    prop: Undone<N.ObjectProperty>,\n    startPos: number | undefined | null,\n    startLoc: Position | undefined | null,\n    isPattern: boolean,\n    refExpressionErrors?: ExpressionErrors | null,\n  ): N.ObjectProperty | undefined | null {\n    prop.shorthand = false;\n\n    if (this.eat(tt.colon)) {\n      prop.value = isPattern\n        ? this.parseMaybeDefault(this.state.start, this.state.startLoc)\n        : this.parseMaybeAssignAllowIn(refExpressionErrors);\n\n      return this.finishNode(prop, \"ObjectProperty\");\n    }\n\n    if (!prop.computed && prop.key.type === \"Identifier\") {\n      // PropertyDefinition:\n      //   IdentifierReference\n      //   CoverInitializedName\n      // Note: `{ eval } = {}` will be checked in `checkLVal` later.\n      this.checkReservedWord(prop.key.name, prop.key.loc.start, true, false);\n\n      if (isPattern) {\n        prop.value = this.parseMaybeDefault(\n          startPos,\n          startLoc,\n          cloneIdentifier(prop.key),\n        );\n      } else if (this.match(tt.eq)) {\n        const shorthandAssignLoc = this.state.startLoc;\n        if (refExpressionErrors != null) {\n          if (refExpressionErrors.shorthandAssignLoc === null) {\n            refExpressionErrors.shorthandAssignLoc = shorthandAssignLoc;\n          }\n        } else {\n          this.raise(Errors.InvalidCoverInitializedName, {\n            at: shorthandAssignLoc,\n          });\n        }\n        prop.value = this.parseMaybeDefault(\n          startPos,\n          startLoc,\n          cloneIdentifier(prop.key),\n        );\n      } else {\n        prop.value = cloneIdentifier(prop.key);\n      }\n      prop.shorthand = true;\n\n      return this.finishNode(prop, \"ObjectProperty\");\n    }\n  }\n\n  parseObjPropValue(\n    this: Parser,\n    prop: Undone<N.ObjectMethod | N.ObjectProperty>,\n    startPos: number | undefined | null,\n    startLoc: Position | undefined | null,\n    isGenerator: boolean,\n    isAsync: boolean,\n    isPattern: boolean,\n    isAccessor: boolean,\n    refExpressionErrors?: ExpressionErrors | null,\n  ): N.ObjectMethod | N.ObjectProperty {\n    const node =\n      this.parseObjectMethod(\n        prop as Undone<N.ObjectMethod>,\n        isGenerator,\n        isAsync,\n        isPattern,\n        isAccessor,\n      ) ||\n      this.parseObjectProperty(\n        prop as Undone<N.ObjectProperty>,\n        startPos,\n        startLoc,\n        isPattern,\n        refExpressionErrors,\n      );\n\n    if (!node) this.unexpected();\n\n    return node;\n  }\n\n  // https://tc39.es/ecma262/#prod-PropertyName\n  // when refExpressionErrors presents, it will parse private name\n  // and record the position of the first private name\n  parsePropertyName(\n    this: Parser,\n    prop:\n      | Undone<N.ObjectOrClassMember | N.ClassMember>\n      | N.TsNamedTypeElementBase,\n    refExpressionErrors?: ExpressionErrors | null,\n  ): N.Expression | N.Identifier {\n    if (this.eat(tt.bracketL)) {\n      (prop as Undone<N.ObjectOrClassMember>).computed = true;\n      prop.key = this.parseMaybeAssignAllowIn();\n      this.expect(tt.bracketR);\n    } else {\n      // We check if it's valid for it to be a private name when we push it.\n      const { type, value } = this.state;\n      let key;\n      // most un-computed property names are identifiers\n      if (tokenIsKeywordOrIdentifier(type)) {\n        key = this.parseIdentifier(true);\n      } else {\n        switch (type) {\n          case tt.num:\n            key = this.parseNumericLiteral(value);\n            break;\n          case tt.string:\n            key = this.parseStringLiteral(value);\n            break;\n          case tt.bigint:\n            key = this.parseBigIntLiteral(value);\n            break;\n          case tt.decimal:\n            key = this.parseDecimalLiteral(value);\n            break;\n          case tt.privateName: {\n            // the class private key has been handled in parseClassElementName\n            const privateKeyLoc = this.state.startLoc;\n            if (refExpressionErrors != null) {\n              if (refExpressionErrors.privateKeyLoc === null) {\n                refExpressionErrors.privateKeyLoc = privateKeyLoc;\n              }\n            } else {\n              this.raise(Errors.UnexpectedPrivateField, {\n                at: privateKeyLoc,\n              });\n            }\n            key = this.parsePrivateName();\n            break;\n          }\n          default:\n            throw this.unexpected();\n        }\n      }\n      (prop as any).key = key;\n      if (type !== tt.privateName) {\n        // ClassPrivateProperty is never computed, so we don't assign in that case.\n        prop.computed = false;\n      }\n    }\n\n    return prop.key;\n  }\n\n  // Initialize empty function node.\n\n  initFunction(\n    node: N.BodilessFunctionOrMethodBase,\n    isAsync?: boolean | null,\n  ): void {\n    node.id = null;\n    node.generator = false;\n    node.async = !!isAsync;\n  }\n\n  // Parse object or class method.\n\n  parseMethod<T extends N.ObjectMethod | N.ClassMethod | N.ClassPrivateMethod>(\n    this: Parser,\n    node: Undone<T>,\n    isGenerator: boolean,\n    isAsync: boolean,\n    isConstructor: boolean,\n    allowDirectSuper: boolean,\n    type: T[\"type\"],\n    inClassScope: boolean = false,\n  ): T {\n    this.initFunction(node, isAsync);\n    node.generator = !!isGenerator;\n    const allowModifiers = isConstructor; // For TypeScript parameter properties\n    this.scope.enter(\n      SCOPE_FUNCTION |\n        SCOPE_SUPER |\n        (inClassScope ? SCOPE_CLASS : 0) |\n        (allowDirectSuper ? SCOPE_DIRECT_SUPER : 0),\n    );\n    this.prodParam.enter(functionFlags(isAsync, node.generator));\n    this.parseFunctionParams(node, allowModifiers);\n    const finishedNode = this.parseFunctionBodyAndFinish(node, type, true);\n    this.prodParam.exit();\n    this.scope.exit();\n\n    return finishedNode;\n  }\n\n  // parse an array literal or tuple literal\n  // https://tc39.es/ecma262/#prod-ArrayLiteral\n  // https://tc39.es/proposal-record-tuple/#prod-TupleLiteral\n  parseArrayLike(\n    this: Parser,\n    close: TokenType,\n    canBePattern: boolean,\n    isTuple: boolean,\n    refExpressionErrors?: ExpressionErrors | null,\n  ): N.ArrayExpression | N.TupleExpression {\n    if (isTuple) {\n      this.expectPlugin(\"recordAndTuple\");\n    }\n    const oldInFSharpPipelineDirectBody = this.state.inFSharpPipelineDirectBody;\n    this.state.inFSharpPipelineDirectBody = false;\n    const node = this.startNode<N.ArrayExpression | N.TupleExpression>();\n    this.next();\n    node.elements = this.parseExprList(\n      close,\n      /* allowEmpty */ !isTuple,\n      refExpressionErrors,\n      // @ts-expect-error todo(flow->ts)\n      node,\n    );\n    this.state.inFSharpPipelineDirectBody = oldInFSharpPipelineDirectBody;\n    return this.finishNode(\n      node,\n      isTuple ? \"TupleExpression\" : \"ArrayExpression\",\n    );\n  }\n\n  // Parse arrow function expression.\n  // If the parameters are provided, they will be converted to an\n  // assignable list.\n  parseArrowExpression(\n    this: Parser,\n    node: Undone<N.ArrowFunctionExpression>,\n    params: N.Expression[] | undefined | null,\n    isAsync: boolean,\n    trailingCommaLoc?: Position | null,\n  ): N.ArrowFunctionExpression {\n    this.scope.enter(SCOPE_FUNCTION | SCOPE_ARROW);\n    let flags = functionFlags(isAsync, false);\n    // ConciseBody[In] :\n    //   [lookahead ≠ {] ExpressionBody[?In, ~Await]\n    //   { FunctionBody[~Yield, ~Await] }\n    if (!this.match(tt.braceL) && this.prodParam.hasIn) {\n      flags |= PARAM_IN;\n    }\n    this.prodParam.enter(flags);\n    this.initFunction(node, isAsync);\n    const oldMaybeInArrowParameters = this.state.maybeInArrowParameters;\n\n    if (params) {\n      this.state.maybeInArrowParameters = true;\n      this.setArrowFunctionParameters(node, params, trailingCommaLoc);\n    }\n    this.state.maybeInArrowParameters = false;\n    this.parseFunctionBody(node, true);\n\n    this.prodParam.exit();\n    this.scope.exit();\n    this.state.maybeInArrowParameters = oldMaybeInArrowParameters;\n\n    return this.finishNode(node, \"ArrowFunctionExpression\");\n  }\n\n  setArrowFunctionParameters(\n    node: Undone<N.ArrowFunctionExpression>,\n    params: N.Expression[],\n    trailingCommaLoc?: Position | null,\n  ): void {\n    this.toAssignableList(params, trailingCommaLoc, false);\n    node.params = params as (N.Pattern | N.TSParameterProperty)[];\n  }\n\n  parseFunctionBodyAndFinish<\n    T extends\n      | N.Function\n      | N.TSDeclareMethod\n      | N.TSDeclareFunction\n      | N.ClassPrivateMethod,\n  >(node: Undone<T>, type: T[\"type\"], isMethod: boolean = false): T {\n    // @ts-expect-error (node is not bodiless if we get here)\n    this.parseFunctionBody(node, false, isMethod);\n    return this.finishNode(node, type);\n  }\n\n  // Parse function body and check parameters.\n  parseFunctionBody(\n    this: Parser,\n    node: Undone<N.Function>,\n    allowExpression?: boolean | null,\n    isMethod: boolean = false,\n  ): void {\n    const isExpression = allowExpression && !this.match(tt.braceL);\n    this.expressionScope.enter(newExpressionScope());\n\n    if (isExpression) {\n      // https://tc39.es/ecma262/#prod-ExpressionBody\n      (node as Undone<N.ArrowFunctionExpression>).body =\n        this.parseMaybeAssign();\n      this.checkParams(node, false, allowExpression, false);\n    } else {\n      const oldStrict = this.state.strict;\n      // Start a new scope with regard to labels\n      // flag (restore them to their old value afterwards).\n      const oldLabels = this.state.labels;\n      this.state.labels = [];\n\n      // FunctionBody[Yield, Await]:\n      //   StatementList[?Yield, ?Await, +Return] opt\n      this.prodParam.enter(this.prodParam.currentFlags() | PARAM_RETURN);\n      node.body = this.parseBlock(\n        true,\n        false,\n        // Strict mode function checks after we parse the statements in the function body.\n        (hasStrictModeDirective: boolean) => {\n          const nonSimple = !this.isSimpleParamList(node.params);\n\n          if (hasStrictModeDirective && nonSimple) {\n            // This logic is here to align the error location with the ESTree plugin.\n            this.raise(Errors.IllegalLanguageModeDirective, {\n              at:\n                // @ts-expect-error\n                (node.kind === \"method\" || node.kind === \"constructor\") &&\n                // @ts-expect-error\n                !!node.key\n                  ? // @ts-expect-error node.key has been gaurded\n                    node.key.loc.end\n                  : node,\n            });\n          }\n\n          const strictModeChanged = !oldStrict && this.state.strict;\n\n          // Add the params to varDeclaredNames to ensure that an error is thrown\n          // if a let/const declaration in the function clashes with one of the params.\n          this.checkParams(\n            node,\n            !this.state.strict && !allowExpression && !isMethod && !nonSimple,\n            allowExpression,\n            strictModeChanged,\n          );\n\n          // Ensure the function name isn't a forbidden identifier in strict mode, e.g. 'eval'\n          if (this.state.strict && node.id) {\n            this.checkIdentifier(node.id, BIND_OUTSIDE, strictModeChanged);\n          }\n        },\n      );\n      this.prodParam.exit();\n      this.state.labels = oldLabels;\n    }\n    this.expressionScope.exit();\n  }\n\n  isSimpleParameter(node: N.Pattern | N.TSParameterProperty) {\n    return node.type === \"Identifier\";\n  }\n\n  isSimpleParamList(\n    params: ReadonlyArray<N.Pattern | N.TSParameterProperty>,\n  ): boolean {\n    for (let i = 0, len = params.length; i < len; i++) {\n      if (!this.isSimpleParameter(params[i])) return false;\n    }\n    return true;\n  }\n\n  checkParams(\n    node: Undone<N.Function>,\n    allowDuplicates: boolean,\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    isArrowFunction?: boolean | null,\n    strictModeChanged: boolean = true,\n  ): void {\n    const checkClashes = !allowDuplicates && new Set<string>();\n    // We create a fake node with the \"ephemeral\" type `FormalParameters`[1]\n    // since we just store an array of parameters. Perhaps someday we can have\n    // something like class FormalParameters extends Array { ... }, which would\n    // also be helpful when traversing this node.\n    //\n    // 1. https://tc39.es/ecma262/#prod-FormalParameters\n    const formalParameters = { type: \"FormalParameters\" } as const;\n    for (const param of node.params) {\n      this.checkLVal(param, {\n        in: formalParameters,\n        binding: BIND_VAR,\n        checkClashes,\n        strictModeChanged,\n      });\n    }\n  }\n\n  // Parses a comma-separated list of expressions, and returns them as\n  // an array. `close` is the token type that ends the list, and\n  // `allowEmpty` can be turned on to allow subsequent commas with\n  // nothing in between them to be parsed as `null` (which is needed\n  // for array literals).\n\n  parseExprList(\n    this: Parser,\n    close: TokenType,\n    allowEmpty?: boolean,\n    refExpressionErrors?: ExpressionErrors | null,\n    nodeForExtra?: N.Node | null,\n  ): (N.Expression | null)[] {\n    const elts: (N.Expression | null)[] = [];\n    let first = true;\n\n    while (!this.eat(close)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(tt.comma);\n        if (this.match(close)) {\n          if (nodeForExtra) {\n            this.addTrailingCommaExtraToNode(nodeForExtra);\n          }\n          this.next();\n          break;\n        }\n      }\n\n      elts.push(this.parseExprListItem(allowEmpty, refExpressionErrors));\n    }\n    return elts;\n  }\n\n  parseExprListItem(\n    this: Parser,\n    allowEmpty?: boolean,\n    refExpressionErrors?: ExpressionErrors | null,\n    allowPlaceholder?: boolean | null,\n  ): N.Expression | null;\n  parseExprListItem(\n    this: Parser,\n    allowEmpty?: false,\n    refExpressionErrors?: ExpressionErrors | null,\n    allowPlaceholder?: boolean | null,\n  ): N.Expression;\n  parseExprListItem(\n    this: Parser,\n    allowEmpty?: boolean | null,\n    refExpressionErrors?: ExpressionErrors | null,\n    allowPlaceholder?: boolean | null,\n  ): N.Expression | null {\n    let elt;\n    if (this.match(tt.comma)) {\n      if (!allowEmpty) {\n        this.raise(Errors.UnexpectedToken, {\n          at: this.state.curPosition(),\n          unexpected: \",\",\n        });\n      }\n      elt = null;\n    } else if (this.match(tt.ellipsis)) {\n      const spreadNodeStartPos = this.state.start;\n      const spreadNodeStartLoc = this.state.startLoc;\n\n      elt = this.parseParenItem(\n        this.parseSpread(refExpressionErrors),\n        spreadNodeStartPos,\n        spreadNodeStartLoc,\n      );\n    } else if (this.match(tt.question)) {\n      this.expectPlugin(\"partialApplication\");\n      if (!allowPlaceholder) {\n        this.raise(Errors.UnexpectedArgumentPlaceholder, {\n          at: this.state.startLoc,\n        });\n      }\n      const node = this.startNode();\n      this.next();\n      elt = this.finishNode(node, \"ArgumentPlaceholder\");\n    } else {\n      elt = this.parseMaybeAssignAllowIn(\n        refExpressionErrors,\n        this.parseParenItem,\n      );\n    }\n    return elt;\n  }\n\n  // Parse the next token as an identifier. If `liberal` is true (used\n  // when parsing properties), it will also convert keywords into\n  // identifiers.\n  // This shouldn't be used to parse the keywords of meta properties, since they\n  // are not identifiers and cannot contain escape sequences.\n\n  parseIdentifier(liberal?: boolean): N.Identifier {\n    const node = this.startNode<N.Identifier>();\n    const name = this.parseIdentifierName(node.start, liberal);\n\n    return this.createIdentifier(node, name);\n  }\n\n  createIdentifier(\n    node: Omit<N.Identifier, \"type\">,\n    name: string,\n  ): N.Identifier {\n    node.name = name;\n    node.loc.identifierName = name;\n\n    return this.finishNode(node, \"Identifier\");\n  }\n\n  parseIdentifierName(pos: number, liberal?: boolean): string {\n    let name: string;\n\n    const { startLoc, type } = this.state;\n\n    if (tokenIsKeywordOrIdentifier(type)) {\n      name = this.state.value;\n    } else {\n      throw this.unexpected();\n    }\n\n    const tokenIsKeyword = tokenKeywordOrIdentifierIsKeyword(type);\n\n    if (liberal) {\n      // If the current token is not used as a keyword, set its type to \"tt.name\".\n      // This will prevent this.next() from throwing about unexpected escapes.\n      if (tokenIsKeyword) {\n        this.replaceToken(tt.name);\n      }\n    } else {\n      this.checkReservedWord(name, startLoc, tokenIsKeyword, false);\n    }\n\n    this.next();\n\n    return name;\n  }\n\n  checkReservedWord(\n    word: string,\n    startLoc: Position,\n    checkKeywords: boolean,\n    isBinding: boolean,\n  ): void {\n    // Every JavaScript reserved word is 10 characters or less.\n    if (word.length > 10) {\n      return;\n    }\n    // Most identifiers are not reservedWord-like, they don't need special\n    // treatments afterward, which very likely ends up throwing errors\n    if (!canBeReservedWord(word)) {\n      return;\n    }\n\n    if (word === \"yield\") {\n      if (this.prodParam.hasYield) {\n        this.raise(Errors.YieldBindingIdentifier, { at: startLoc });\n        return;\n      }\n    } else if (word === \"await\") {\n      if (this.prodParam.hasAwait) {\n        this.raise(Errors.AwaitBindingIdentifier, { at: startLoc });\n        return;\n      }\n\n      if (this.scope.inStaticBlock) {\n        this.raise(Errors.AwaitBindingIdentifierInStaticBlock, {\n          at: startLoc,\n        });\n        return;\n      }\n\n      this.expressionScope.recordAsyncArrowParametersError({ at: startLoc });\n    } else if (word === \"arguments\") {\n      if (this.scope.inClassAndNotInNonArrowFunction) {\n        this.raise(Errors.ArgumentsInClass, { at: startLoc });\n        return;\n      }\n    }\n\n    if (checkKeywords && isKeyword(word)) {\n      this.raise(Errors.UnexpectedKeyword, {\n        at: startLoc,\n        keyword: word,\n      });\n      return;\n    }\n\n    const reservedTest = !this.state.strict\n      ? isReservedWord\n      : isBinding\n      ? isStrictBindReservedWord\n      : isStrictReservedWord;\n\n    if (reservedTest(word, this.inModule)) {\n      this.raise(Errors.UnexpectedReservedWord, {\n        at: startLoc,\n        reservedWord: word,\n      });\n    }\n  }\n\n  isAwaitAllowed(): boolean {\n    if (this.prodParam.hasAwait) return true;\n    if (this.options.allowAwaitOutsideFunction && !this.scope.inFunction) {\n      return true;\n    }\n    return false;\n  }\n\n  // Parses await expression inside async function.\n\n  parseAwait(\n    this: Parser,\n    startPos: number,\n    startLoc: Position,\n  ): N.AwaitExpression {\n    const node = this.startNodeAt<N.AwaitExpression>(startPos, startLoc);\n\n    this.expressionScope.recordParameterInitializerError(\n      Errors.AwaitExpressionFormalParameter,\n      {\n        // @ts-expect-error todo(flow->ts)\n        at: node,\n      },\n    );\n\n    if (this.eat(tt.star)) {\n      this.raise(Errors.ObsoleteAwaitStar, { at: node });\n    }\n\n    if (!this.scope.inFunction && !this.options.allowAwaitOutsideFunction) {\n      if (this.isAmbiguousAwait()) {\n        this.ambiguousScriptDifferentAst = true;\n      } else {\n        this.sawUnambiguousESM = true;\n      }\n    }\n\n    if (!this.state.soloAwait) {\n      node.argument = this.parseMaybeUnary(null, true);\n    }\n\n    return this.finishNode(node, \"AwaitExpression\");\n  }\n\n  isAmbiguousAwait(): boolean {\n    if (this.hasPrecedingLineBreak()) return true;\n    const { type } = this.state;\n    return (\n      // All the following expressions are ambiguous:\n      //   await + 0, await - 0, await ( 0 ), await [ 0 ], await / 0 /u, await ``\n      type === tt.plusMin ||\n      type === tt.parenL ||\n      type === tt.bracketL ||\n      tokenIsTemplate(type) ||\n      // Sometimes the tokenizer generates tt.slash for regexps, and this is\n      // handler by parseExprAtom\n      type === tt.regexp ||\n      type === tt.slash ||\n      // This code could be parsed both as a modulo operator or as an intrinsic:\n      //   await %x(0)\n      (this.hasPlugin(\"v8intrinsic\") && type === tt.modulo)\n    );\n  }\n\n  // Parses yield expression inside generator.\n\n  parseYield(this: Parser): N.YieldExpression {\n    const node = this.startNode<N.YieldExpression>();\n\n    this.expressionScope.recordParameterInitializerError(\n      Errors.YieldInParameter,\n      {\n        // @ts-expect-error todo(flow->ts)\n        at: node,\n      },\n    );\n\n    this.next();\n    let delegating = false;\n    let argument: N.Expression | null = null;\n    if (!this.hasPrecedingLineBreak()) {\n      delegating = this.eat(tt.star);\n      switch (this.state.type) {\n        case tt.semi:\n        case tt.eof:\n        case tt.braceR:\n        case tt.parenR:\n        case tt.bracketR:\n        case tt.braceBarR:\n        case tt.colon:\n        case tt.comma:\n          // The above is the complete set of tokens that can\n          // follow an AssignmentExpression, and none of them\n          // can start an AssignmentExpression\n          if (!delegating) break;\n        /* fallthrough */\n        default:\n          argument = this.parseMaybeAssign();\n      }\n    }\n    node.delegate = delegating;\n    node.argument = argument;\n    return this.finishNode(node, \"YieldExpression\");\n  }\n\n  // Validates a pipeline (for any of the pipeline Babylon plugins) at the point\n  // of the infix operator `|>`.\n\n  checkPipelineAtInfixOperator(left: N.Expression, leftStartLoc: Position) {\n    if (this.hasPlugin([\"pipelineOperator\", { proposal: \"smart\" }])) {\n      if (left.type === \"SequenceExpression\") {\n        // Ensure that the pipeline head is not a comma-delimited\n        // sequence expression.\n        this.raise(Errors.PipelineHeadSequenceExpression, {\n          at: leftStartLoc,\n        });\n      }\n    }\n  }\n\n  parseSmartPipelineBodyInStyle(\n    childExpr: N.Expression,\n    startPos: number,\n    startLoc: Position,\n  ) {\n    if (this.isSimpleReference(childExpr)) {\n      const bodyNode = this.startNodeAt<N.PipelineBareFunction>(\n        startPos,\n        startLoc,\n      );\n      bodyNode.callee = childExpr;\n      return this.finishNode(bodyNode, \"PipelineBareFunction\");\n    } else {\n      const bodyNode = this.startNodeAt<N.PipelineTopicExpression>(\n        startPos,\n        startLoc,\n      );\n      this.checkSmartPipeTopicBodyEarlyErrors(startLoc);\n      bodyNode.expression = childExpr;\n      return this.finishNode(bodyNode, \"PipelineTopicExpression\");\n    }\n  }\n\n  isSimpleReference(expression: N.Expression): boolean {\n    switch (expression.type) {\n      case \"MemberExpression\":\n        return (\n          !expression.computed && this.isSimpleReference(expression.object)\n        );\n      case \"Identifier\":\n        return true;\n      default:\n        return false;\n    }\n  }\n\n  // This helper method is to be called immediately\n  // after a topic-style smart-mix pipe body is parsed.\n  // The `startLoc` is the starting position of the pipe body.\n\n  checkSmartPipeTopicBodyEarlyErrors(startLoc: Position): void {\n    // If the following token is invalidly `=>`, then throw a human-friendly error\n    // instead of something like 'Unexpected token, expected \";\"'.\n    // For example, `x => x |> y => #` (assuming `#` is the topic reference)\n    // groups into `x => (x |> y) => #`,\n    // and `(x |> y) => #` is an invalid arrow function.\n    // This is because smart-mix `|>` has tighter precedence than `=>`.\n    if (this.match(tt.arrow)) {\n      throw this.raise(Errors.PipelineBodyNoArrow, { at: this.state.startLoc });\n    }\n\n    // A topic-style smart-mix pipe body must use the topic reference at least once.\n    if (!this.topicReferenceWasUsedInCurrentContext()) {\n      this.raise(Errors.PipelineTopicUnused, { at: startLoc });\n    }\n  }\n\n  // Enable topic references from outer contexts within Hack-style pipe bodies.\n  // The function modifies the parser's topic-context state to enable or disable\n  // the use of topic references.\n  // The function then calls a callback, then resets the parser\n  // to the old topic-context state that it had before the function was called.\n\n  withTopicBindingContext<T>(callback: () => T): T {\n    const outerContextTopicState = this.state.topicContext;\n    this.state.topicContext = {\n      // Enable the use of the primary topic reference.\n      maxNumOfResolvableTopics: 1,\n      // Hide the use of any topic references from outer contexts.\n      maxTopicIndex: null,\n    };\n\n    try {\n      return callback();\n    } finally {\n      this.state.topicContext = outerContextTopicState;\n    }\n  }\n\n  // This helper method is used only with the deprecated smart-mix pipe proposal.\n  // Disables topic references from outer contexts within syntax constructs\n  // such as the bodies of iteration statements.\n  // The function modifies the parser's topic-context state to enable or disable\n  // the use of topic references with the smartPipelines plugin. They then run a\n  // callback, then they reset the parser to the old topic-context state that it\n  // had before the function was called.\n\n  withSmartMixTopicForbiddingContext<T>(callback: () => T): T {\n    if (this.hasPlugin([\"pipelineOperator\", { proposal: \"smart\" }])) {\n      // Reset the parser’s topic context only if the smart-mix pipe proposal is active.\n      const outerContextTopicState = this.state.topicContext;\n      this.state.topicContext = {\n        // Disable the use of the primary topic reference.\n        maxNumOfResolvableTopics: 0,\n        // Hide the use of any topic references from outer contexts.\n        maxTopicIndex: null,\n      };\n\n      try {\n        return callback();\n      } finally {\n        this.state.topicContext = outerContextTopicState;\n      }\n    } else {\n      // If the pipe proposal is \"minimal\", \"fsharp\", or \"hack\",\n      // or if no pipe proposal is active,\n      // then the callback result is returned\n      // without touching any extra parser state.\n      return callback();\n    }\n  }\n\n  withSoloAwaitPermittingContext<T>(callback: () => T): T {\n    const outerContextSoloAwaitState = this.state.soloAwait;\n    this.state.soloAwait = true;\n\n    try {\n      return callback();\n    } finally {\n      this.state.soloAwait = outerContextSoloAwaitState;\n    }\n  }\n\n  allowInAnd<T>(callback: () => T): T {\n    const flags = this.prodParam.currentFlags();\n    const prodParamToSet = PARAM_IN & ~flags;\n    if (prodParamToSet) {\n      this.prodParam.enter(flags | PARAM_IN);\n      try {\n        return callback();\n      } finally {\n        this.prodParam.exit();\n      }\n    }\n    return callback();\n  }\n\n  disallowInAnd<T>(callback: () => T): T {\n    const flags = this.prodParam.currentFlags();\n    const prodParamToClear = PARAM_IN & flags;\n    if (prodParamToClear) {\n      this.prodParam.enter(flags & ~PARAM_IN);\n      try {\n        return callback();\n      } finally {\n        this.prodParam.exit();\n      }\n    }\n    return callback();\n  }\n\n  // Register the use of a topic reference within the current\n  // topic-binding context.\n  registerTopicReference(): void {\n    this.state.topicContext.maxTopicIndex = 0;\n  }\n\n  topicReferenceIsAllowedInCurrentContext(): boolean {\n    return this.state.topicContext.maxNumOfResolvableTopics >= 1;\n  }\n\n  topicReferenceWasUsedInCurrentContext(): boolean {\n    return (\n      this.state.topicContext.maxTopicIndex != null &&\n      this.state.topicContext.maxTopicIndex >= 0\n    );\n  }\n\n  parseFSharpPipelineBody(this: Parser, prec: number): N.Expression {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n\n    this.state.potentialArrowAt = this.state.start;\n    const oldInFSharpPipelineDirectBody = this.state.inFSharpPipelineDirectBody;\n    this.state.inFSharpPipelineDirectBody = true;\n\n    const ret = this.parseExprOp(\n      this.parseMaybeUnaryOrPrivate(),\n      startPos,\n      startLoc,\n      prec,\n    );\n\n    this.state.inFSharpPipelineDirectBody = oldInFSharpPipelineDirectBody;\n\n    return ret;\n  }\n\n  // https://github.com/tc39/proposal-js-module-blocks\n  parseModuleExpression(this: Parser): N.ModuleExpression {\n    this.expectPlugin(\"moduleBlocks\");\n    const node = this.startNode<N.ModuleExpression>();\n    this.next(); // eat \"module\"\n    this.eat(tt.braceL);\n\n    const revertScopes = this.initializeScopes(/** inModule */ true);\n    this.enterInitialScopes();\n\n    const program = this.startNode<N.Program>();\n    try {\n      node.body = this.parseProgram(program, tt.braceR, \"module\");\n    } finally {\n      revertScopes();\n    }\n    this.eat(tt.braceR);\n    return this.finishNode<N.ModuleExpression>(node, \"ModuleExpression\");\n  }\n\n  // Used in Flow plugin\n  parsePropertyNamePrefixOperator(\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    prop: Undone<N.ObjectOrClassMember | N.ClassMember>,\n  ): void {}\n}\n","import * as N from \"../types\";\nimport {\n  tokenIsIdentifier,\n  tokenIsLoop,\n  tokenIsTemplate,\n  tt,\n  type TokenType,\n  getExportedToken,\n} from \"../tokenizer/types\";\nimport ExpressionParser from \"./expression\";\nimport { Errors } from \"../parse-error\";\nimport { isIdentifierChar, isIdentifierStart } from \"../util/identifier\";\nimport { lineBreak } from \"../util/whitespace\";\nimport * as charCodes from \"charcodes\";\nimport {\n  BIND_CLASS,\n  BIND_LEXICAL,\n  BIND_VAR,\n  BIND_FUNCTION,\n  SCOPE_CLASS,\n  SCOPE_FUNCTION,\n  SCOPE_OTHER,\n  SCOPE_SIMPLE_CATCH,\n  SCOPE_STATIC_BLOCK,\n  SCOPE_SUPER,\n  CLASS_ELEMENT_OTHER,\n  CLASS_ELEMENT_INSTANCE_GETTER,\n  CLASS_ELEMENT_INSTANCE_SETTER,\n  CLASS_ELEMENT_STATIC_GETTER,\n  CLASS_ELEMENT_STATIC_SETTER,\n  type BindingTypes,\n} from \"../util/scopeflags\";\nimport { ExpressionErrors } from \"./util\";\nimport { PARAM, functionFlags } from \"../util/production-parameter\";\nimport {\n  newExpressionScope,\n  newParameterDeclarationScope,\n} from \"../util/expression-scope\";\nimport type { SourceType } from \"../options\";\nimport { Token } from \"../tokenizer\";\nimport { Position, createPositionWithColumnOffset } from \"../util/location\";\nimport { cloneStringLiteral, cloneIdentifier, type Undone } from \"./node\";\nimport type Parser from \"./index\";\n\nconst loopLabel = { kind: \"loop\" } as const,\n  switchLabel = { kind: \"switch\" } as const;\n\nconst FUNC_NO_FLAGS = 0b000,\n  FUNC_STATEMENT = 0b001,\n  FUNC_HANGING_STATEMENT = 0b010,\n  FUNC_NULLABLE_ID = 0b100;\n\nconst loneSurrogate = /[\\uD800-\\uDFFF]/u;\n\nconst keywordRelationalOperator = /in(?:stanceof)?/y;\n\n/**\n * Convert tokens for backward Babel 7 compat.\n * tt.privateName => tt.hash + tt.name\n * tt.templateTail => tt.backquote/tt.braceR + tt.template + tt.backquote\n * tt.templateNonTail => tt.backquote/tt.braceR + tt.template + tt.dollarBraceL\n * For performance reasons this routine mutates `tokens`, it is okay\n * here since we execute `parseTopLevel` once for every file.\n * @param {*} tokens\n * @returns\n */\nfunction babel7CompatTokens(tokens: (Token | N.Comment)[], input: string) {\n  for (let i = 0; i < tokens.length; i++) {\n    const token = tokens[i];\n    const { type } = token;\n    if (typeof type === \"number\") {\n      if (!process.env.BABEL_8_BREAKING) {\n        if (type === tt.privateName) {\n          const { loc, start, value, end } = token;\n          const hashEndPos = start + 1;\n          const hashEndLoc = createPositionWithColumnOffset(loc.start, 1);\n          tokens.splice(\n            i,\n            1,\n            new Token({\n              // @ts-expect-error: hacky way to create token\n              type: getExportedToken(tt.hash),\n              value: \"#\",\n              start: start,\n              end: hashEndPos,\n              startLoc: loc.start,\n              endLoc: hashEndLoc,\n            }),\n            new Token({\n              // @ts-expect-error: hacky way to create token\n              type: getExportedToken(tt.name),\n              value: value,\n              start: hashEndPos,\n              end: end,\n              startLoc: hashEndLoc,\n              endLoc: loc.end,\n            }),\n          );\n          i++;\n          continue;\n        }\n\n        if (tokenIsTemplate(type)) {\n          const { loc, start, value, end } = token;\n          const backquoteEnd = start + 1;\n          const backquoteEndLoc = createPositionWithColumnOffset(loc.start, 1);\n          let startToken;\n          if (input.charCodeAt(start) === charCodes.graveAccent) {\n            startToken = new Token({\n              // @ts-expect-error: hacky way to create token\n              type: getExportedToken(tt.backQuote),\n              value: \"`\",\n              start: start,\n              end: backquoteEnd,\n              startLoc: loc.start,\n              endLoc: backquoteEndLoc,\n            });\n          } else {\n            startToken = new Token({\n              // @ts-expect-error: hacky way to create token\n              type: getExportedToken(tt.braceR),\n              value: \"}\",\n              start: start,\n              end: backquoteEnd,\n              startLoc: loc.start,\n              endLoc: backquoteEndLoc,\n            });\n          }\n          let templateValue,\n            templateElementEnd,\n            templateElementEndLoc,\n            endToken;\n          if (type === tt.templateTail) {\n            // ends with '`'\n            templateElementEnd = end - 1;\n            templateElementEndLoc = createPositionWithColumnOffset(loc.end, -1);\n            templateValue = value === null ? null : value.slice(1, -1);\n            endToken = new Token({\n              // @ts-expect-error: hacky way to create token\n              type: getExportedToken(tt.backQuote),\n              value: \"`\",\n              start: templateElementEnd,\n              end: end,\n              startLoc: templateElementEndLoc,\n              endLoc: loc.end,\n            });\n          } else {\n            // ends with `${`\n            templateElementEnd = end - 2;\n            templateElementEndLoc = createPositionWithColumnOffset(loc.end, -2);\n            templateValue = value === null ? null : value.slice(1, -2);\n            endToken = new Token({\n              // @ts-expect-error: hacky way to create token\n              type: getExportedToken(tt.dollarBraceL),\n              value: \"${\",\n              start: templateElementEnd,\n              end: end,\n              startLoc: templateElementEndLoc,\n              endLoc: loc.end,\n            });\n          }\n          tokens.splice(\n            i,\n            1,\n            startToken,\n            new Token({\n              // @ts-expect-error: hacky way to create token\n              type: getExportedToken(tt.template),\n              value: templateValue,\n              start: backquoteEnd,\n              end: templateElementEnd,\n              startLoc: backquoteEndLoc,\n              endLoc: templateElementEndLoc,\n            }),\n            endToken,\n          );\n          i += 2;\n          continue;\n        }\n      }\n      // @ts-expect-error: we manipulate `token` for performance reasons\n      token.type = getExportedToken(type);\n    }\n  }\n  return tokens;\n}\nexport default class StatementParser extends ExpressionParser {\n  // ### Statement parsing\n\n  // Parse a program. Initializes the parser, reads any number of\n  // statements, and wraps them in a Program node.  Optionally takes a\n  // `program` argument.  If present, the statements will be appended\n  // to its body instead of creating a new node.\n\n  parseTopLevel(this: Parser, file: N.File, program: N.Program): N.File {\n    file.program = this.parseProgram(program);\n    file.comments = this.state.comments;\n\n    if (this.options.tokens) {\n      file.tokens = babel7CompatTokens(this.tokens, this.input);\n    }\n\n    return this.finishNode(file, \"File\");\n  }\n\n  parseProgram(\n    this: Parser,\n    program: Undone<N.Program>,\n    end: TokenType = tt.eof,\n    sourceType: SourceType = this.options.sourceType,\n  ): N.Program {\n    program.sourceType = sourceType;\n    program.interpreter = this.parseInterpreterDirective();\n    this.parseBlockBody(program, true, true, end);\n    if (\n      this.inModule &&\n      !this.options.allowUndeclaredExports &&\n      this.scope.undefinedExports.size > 0\n    ) {\n      for (const [localName, at] of Array.from(this.scope.undefinedExports)) {\n        this.raise(Errors.ModuleExportUndefined, { at, localName });\n      }\n    }\n    return this.finishNode(program, \"Program\");\n  }\n\n  // TODO\n\n  /**\n   * cast a Statement to a Directive. This method mutates input statement.\n   *\n   * @param {N.Statement} stmt\n   * @returns {N.Directive}\n   * @memberof StatementParser\n   */\n  stmtToDirective(stmt: N.Statement): N.Directive {\n    const directive = stmt as any;\n    directive.type = \"Directive\";\n    directive.value = directive.expression;\n    delete directive.expression;\n\n    const directiveLiteral = directive.value;\n    const expressionValue = directiveLiteral.value;\n    const raw = this.input.slice(directiveLiteral.start, directiveLiteral.end);\n    const val = (directiveLiteral.value = raw.slice(1, -1)); // remove quotes\n\n    this.addExtra(directiveLiteral, \"raw\", raw);\n    this.addExtra(directiveLiteral, \"rawValue\", val);\n    this.addExtra(directiveLiteral, \"expressionValue\", expressionValue);\n\n    directiveLiteral.type = \"DirectiveLiteral\";\n\n    return directive;\n  }\n\n  parseInterpreterDirective(): N.InterpreterDirective | null {\n    if (!this.match(tt.interpreterDirective)) {\n      return null;\n    }\n\n    const node = this.startNode<N.InterpreterDirective>();\n    node.value = this.state.value;\n    this.next();\n    return this.finishNode(node, \"InterpreterDirective\");\n  }\n\n  isLet(context?: string | null): boolean {\n    if (!this.isContextual(tt._let)) {\n      return false;\n    }\n    return this.isLetKeyword(context);\n  }\n\n  /**\n   * Assuming we have seen a contextual `let`, check if it starts a variable declaration\n   so that `left` should be interpreted as a `let` keyword.\n   *\n   * @param {?string} context When `context` is non nullish, it will return early and _skip_ checking\n                              if the next token after `let` is `{` or a keyword relational operator\n   * @returns {boolean}\n   * @memberof StatementParser\n   */\n  isLetKeyword(context?: string | null): boolean {\n    const next = this.nextTokenStart();\n    const nextCh = this.codePointAtPos(next);\n    // For ambiguous cases, determine if a LexicalDeclaration (or only a\n    // Statement) is allowed here. If context is not empty then only a Statement\n    // is allowed. However, `let [` is an explicit negative lookahead for\n    // ExpressionStatement, so special-case it first.\n    // Also, `let \\` is never valid as an expression so this must be a keyword.\n    if (\n      nextCh === charCodes.backslash ||\n      nextCh === charCodes.leftSquareBracket\n    ) {\n      return true;\n    }\n    if (context) return false;\n\n    if (nextCh === charCodes.leftCurlyBrace) return true;\n\n    if (isIdentifierStart(nextCh)) {\n      keywordRelationalOperator.lastIndex = next;\n      if (keywordRelationalOperator.test(this.input)) {\n        // We have seen `in` or `instanceof` so far, now check if the identfier\n        // ends here\n        const endCh = this.codePointAtPos(keywordRelationalOperator.lastIndex);\n        if (!isIdentifierChar(endCh) && endCh !== charCodes.backslash) {\n          return false;\n        }\n      }\n      return true;\n    }\n    return false;\n  }\n\n  // Parse a single statement.\n  //\n  // If expecting a statement and finding a slash operator, parse a\n  // regular expression literal. This is to handle cases like\n  // `if (foo) /blah/.exec(foo)`, where looking at the previous token\n  // does not help.\n  // https://tc39.es/ecma262/#prod-Statement\n  // ImportDeclaration and ExportDeclaration are also handled here so we can throw recoverable errors\n  // when they are not at the top level\n  parseStatement(\n    this: Parser,\n    context?: string | null,\n    topLevel?: boolean,\n  ): N.Statement {\n    if (this.match(tt.at)) {\n      this.parseDecorators(true);\n    }\n    return this.parseStatementContent(context, topLevel);\n  }\n\n  parseStatementContent(\n    this: Parser,\n    context?: string | null,\n    topLevel?: boolean | null,\n  ): N.Statement {\n    let starttype = this.state.type;\n    const node = this.startNode();\n    let kind;\n\n    if (this.isLet(context)) {\n      starttype = tt._var;\n      kind = \"let\";\n    }\n\n    // Most types of statements are recognized by the keyword they\n    // start with. Many are trivial to parse, some require a bit of\n    // complexity.\n\n    switch (starttype) {\n      case tt._break:\n        return this.parseBreakContinueStatement(node, /* isBreak */ true);\n      case tt._continue:\n        return this.parseBreakContinueStatement(node, /* isBreak */ false);\n      case tt._debugger:\n        return this.parseDebuggerStatement(node as Undone<N.DebuggerStatement>);\n      case tt._do:\n        return this.parseDoStatement(node as Undone<N.DoWhileStatement>);\n      case tt._for:\n        return this.parseForStatement(node as Undone<N.ForStatement>);\n      case tt._function:\n        if (this.lookaheadCharCode() === charCodes.dot) break;\n        if (context) {\n          if (this.state.strict) {\n            this.raise(Errors.StrictFunction, { at: this.state.startLoc });\n          } else if (context !== \"if\" && context !== \"label\") {\n            this.raise(Errors.SloppyFunction, { at: this.state.startLoc });\n          }\n        }\n        return this.parseFunctionStatement(\n          node as Undone<N.FunctionDeclaration>,\n          false,\n          !context,\n        );\n\n      case tt._class:\n        if (context) this.unexpected();\n        return this.parseClass(node as Undone<N.ClassDeclaration>, true);\n\n      case tt._if:\n        return this.parseIfStatement(node as Undone<N.IfStatement>);\n      case tt._return:\n        return this.parseReturnStatement(node as Undone<N.ReturnStatement>);\n      case tt._switch:\n        return this.parseSwitchStatement(node as Undone<N.SwitchStatement>);\n      case tt._throw:\n        return this.parseThrowStatement(node as Undone<N.ThrowStatement>);\n      case tt._try:\n        return this.parseTryStatement(node as Undone<N.TryStatement>);\n\n      case tt._const:\n      case tt._var:\n        kind = kind || this.state.value;\n        if (context && kind !== \"var\") {\n          this.raise(Errors.UnexpectedLexicalDeclaration, {\n            at: this.state.startLoc,\n          });\n        }\n        return this.parseVarStatement(\n          node as Undone<N.VariableDeclaration>,\n          kind,\n        );\n\n      case tt._while:\n        return this.parseWhileStatement(node as Undone<N.WhileStatement>);\n      case tt._with:\n        return this.parseWithStatement(node as Undone<N.WithStatement>);\n      case tt.braceL:\n        return this.parseBlock();\n      case tt.semi:\n        return this.parseEmptyStatement(node as Undone<N.EmptyStatement>);\n      case tt._import: {\n        const nextTokenCharCode = this.lookaheadCharCode();\n        if (\n          nextTokenCharCode === charCodes.leftParenthesis || // import()\n          nextTokenCharCode === charCodes.dot // import.meta\n        ) {\n          break;\n        }\n      }\n      // fall through\n      case tt._export: {\n        if (!this.options.allowImportExportEverywhere && !topLevel) {\n          this.raise(Errors.UnexpectedImportExport, {\n            at: this.state.startLoc,\n          });\n        }\n\n        this.next(); // eat `import`/`export`\n\n        let result;\n        if (starttype === tt._import) {\n          result = this.parseImport(node as Undone<N.ImportDeclaration>);\n\n          if (\n            result.type === \"ImportDeclaration\" &&\n            (!result.importKind || result.importKind === \"value\")\n          ) {\n            this.sawUnambiguousESM = true;\n          }\n        } else {\n          result = this.parseExport(\n            node as Undone<\n              | N.ExportAllDeclaration\n              | N.ExportDefaultDeclaration\n              | N.ExportDefaultDeclaration\n            >,\n          );\n\n          if (\n            (result.type === \"ExportNamedDeclaration\" &&\n              (!result.exportKind || result.exportKind === \"value\")) ||\n            (result.type === \"ExportAllDeclaration\" &&\n              (!result.exportKind || result.exportKind === \"value\")) ||\n            result.type === \"ExportDefaultDeclaration\"\n          ) {\n            this.sawUnambiguousESM = true;\n          }\n        }\n\n        this.assertModuleNodeAllowed(result);\n\n        return result;\n      }\n\n      default: {\n        if (this.isAsyncFunction()) {\n          if (context) {\n            this.raise(Errors.AsyncFunctionInSingleStatementContext, {\n              at: this.state.startLoc,\n            });\n          }\n          this.next();\n          return this.parseFunctionStatement(\n            node as Undone<N.FunctionDeclaration>,\n            true,\n            !context,\n          );\n        }\n      }\n    }\n\n    // If the statement does not start with a statement keyword or a\n    // brace, it's an ExpressionStatement or LabeledStatement. We\n    // simply start parsing an expression, and afterwards, if the\n    // next token is a colon and the expression was a simple\n    // Identifier node, we switch to interpreting it as a label.\n    const maybeName = this.state.value;\n    const expr = this.parseExpression();\n\n    if (\n      tokenIsIdentifier(starttype) &&\n      expr.type === \"Identifier\" &&\n      this.eat(tt.colon)\n    ) {\n      return this.parseLabeledStatement(\n        node as Undone<N.LabeledStatement>,\n        maybeName,\n        // @ts-expect-error migrate to Babel types\n        expr,\n        context,\n      );\n    } else {\n      return this.parseExpressionStatement(\n        node as Undone<N.ExpressionStatement>,\n        expr,\n      );\n    }\n  }\n\n  assertModuleNodeAllowed(node: N.Node): void {\n    if (!this.options.allowImportExportEverywhere && !this.inModule) {\n      this.raise(Errors.ImportOutsideModule, { at: node });\n    }\n  }\n\n  takeDecorators(node: N.HasDecorators): void {\n    const decorators =\n      this.state.decoratorStack[this.state.decoratorStack.length - 1];\n    if (decorators.length) {\n      node.decorators = decorators;\n      this.resetStartLocationFromNode(node, decorators[0]);\n      this.state.decoratorStack[this.state.decoratorStack.length - 1] = [];\n    }\n  }\n\n  canHaveLeadingDecorator(): boolean {\n    return this.match(tt._class);\n  }\n\n  parseDecorators(this: Parser, allowExport?: boolean): void {\n    const currentContextDecorators =\n      this.state.decoratorStack[this.state.decoratorStack.length - 1];\n    while (this.match(tt.at)) {\n      const decorator = this.parseDecorator();\n      currentContextDecorators.push(decorator);\n    }\n\n    if (this.match(tt._export)) {\n      if (!allowExport) {\n        this.unexpected();\n      }\n\n      if (\n        this.hasPlugin(\"decorators\") &&\n        !this.getPluginOption(\"decorators\", \"decoratorsBeforeExport\")\n      ) {\n        this.raise(Errors.DecoratorExportClass, { at: this.state.startLoc });\n      }\n    } else if (!this.canHaveLeadingDecorator()) {\n      throw this.raise(Errors.UnexpectedLeadingDecorator, {\n        at: this.state.startLoc,\n      });\n    }\n  }\n\n  parseDecorator(this: Parser): N.Decorator {\n    this.expectOnePlugin([\"decorators\", \"decorators-legacy\"]);\n\n    const node = this.startNode<N.Decorator>();\n    this.next();\n\n    if (this.hasPlugin(\"decorators\")) {\n      // Every time a decorator class expression is evaluated, a new empty array is pushed onto the stack\n      // So that the decorators of any nested class expressions will be dealt with separately\n      this.state.decoratorStack.push([]);\n\n      const startPos = this.state.start;\n      const startLoc = this.state.startLoc;\n      let expr: N.Expression;\n\n      if (this.match(tt.parenL)) {\n        const startPos = this.state.start;\n        const startLoc = this.state.startLoc;\n        this.next(); // eat '('\n        expr = this.parseExpression();\n        this.expect(tt.parenR);\n        expr = this.wrapParenthesis(startPos, startLoc, expr);\n      } else {\n        expr = this.parseIdentifier(false);\n\n        while (this.eat(tt.dot)) {\n          const node = this.startNodeAt(startPos, startLoc);\n          node.object = expr;\n          node.property = this.parseIdentifier(true);\n          node.computed = false;\n          expr = this.finishNode(node, \"MemberExpression\");\n        }\n      }\n\n      node.expression = this.parseMaybeDecoratorArguments(expr);\n      this.state.decoratorStack.pop();\n    } else {\n      node.expression = this.parseExprSubscripts();\n    }\n    return this.finishNode(node, \"Decorator\");\n  }\n\n  parseMaybeDecoratorArguments(this: Parser, expr: N.Expression): N.Expression {\n    if (this.eat(tt.parenL)) {\n      const node = this.startNodeAtNode(expr);\n      node.callee = expr;\n      node.arguments = this.parseCallExpressionArguments(tt.parenR, false);\n      this.toReferencedList(node.arguments);\n      return this.finishNode(node, \"CallExpression\");\n    }\n\n    return expr;\n  }\n\n  parseBreakContinueStatement(\n    node: Undone<N.Node>,\n    isBreak: true,\n  ): N.BreakStatement;\n  parseBreakContinueStatement(\n    node: Undone<N.Node>,\n    isBreak: false,\n  ): N.ContinueStatement;\n  parseBreakContinueStatement(\n    node: Undone<N.BreakStatement | N.ContinueStatement>,\n    isBreak: boolean,\n  ): N.BreakStatement | N.ContinueStatement {\n    this.next();\n\n    if (this.isLineTerminator()) {\n      node.label = null;\n    } else {\n      node.label = this.parseIdentifier();\n      this.semicolon();\n    }\n\n    this.verifyBreakContinue(node, isBreak);\n\n    return this.finishNode(\n      node,\n      isBreak ? \"BreakStatement\" : \"ContinueStatement\",\n    );\n  }\n\n  verifyBreakContinue(\n    node: Undone<N.BreakStatement | N.ContinueStatement>,\n    isBreak: boolean,\n  ) {\n    let i;\n    for (i = 0; i < this.state.labels.length; ++i) {\n      const lab = this.state.labels[i];\n      if (node.label == null || lab.name === node.label.name) {\n        if (lab.kind != null && (isBreak || lab.kind === \"loop\")) break;\n        if (node.label && isBreak) break;\n      }\n    }\n    if (i === this.state.labels.length) {\n      const type = isBreak ? \"BreakStatement\" : \"ContinueStatement\";\n      this.raise(Errors.IllegalBreakContinue, { at: node, type });\n    }\n  }\n\n  parseDebuggerStatement(\n    node: Undone<N.DebuggerStatement>,\n  ): N.DebuggerStatement {\n    this.next();\n    this.semicolon();\n    return this.finishNode(node, \"DebuggerStatement\");\n  }\n\n  parseHeaderExpression(this: Parser): N.Expression {\n    this.expect(tt.parenL);\n    const val = this.parseExpression();\n    this.expect(tt.parenR);\n    return val;\n  }\n\n  parseDoStatement(\n    this: Parser,\n    node: Undone<N.DoWhileStatement>,\n  ): N.DoWhileStatement {\n    this.next();\n    this.state.labels.push(loopLabel);\n\n    // Parse the loop body's body.\n    node.body =\n      // For the smartPipelines plugin: Disable topic references from outer\n      // contexts within the loop body. They are permitted in test expressions,\n      // outside of the loop body.\n      this.withSmartMixTopicForbiddingContext(() =>\n        // Parse the loop body's body.\n        this.parseStatement(\"do\"),\n      );\n\n    this.state.labels.pop();\n\n    this.expect(tt._while);\n    node.test = this.parseHeaderExpression();\n    this.eat(tt.semi);\n    return this.finishNode(node, \"DoWhileStatement\");\n  }\n\n  // Disambiguating between a `for` and a `for`/`in` or `for`/`of`\n  // loop is non-trivial. Basically, we have to parse the init `var`\n  // statement or expression, disallowing the `in` operator (see\n  // the second parameter to `parseExpression`), and then check\n  // whether the next token is `in` or `of`. When there is no init\n  // part (semicolon immediately after the opening parenthesis), it\n  // is a regular `for` loop.\n\n  parseForStatement(\n    this: Parser,\n    node: Undone<N.ForStatement | N.ForInOf>,\n  ): N.ForLike {\n    this.next();\n    this.state.labels.push(loopLabel);\n\n    let awaitAt = null;\n\n    if (this.isAwaitAllowed() && this.eatContextual(tt._await)) {\n      awaitAt = this.state.lastTokStartLoc;\n    }\n    this.scope.enter(SCOPE_OTHER);\n    this.expect(tt.parenL);\n\n    if (this.match(tt.semi)) {\n      if (awaitAt !== null) {\n        this.unexpected(awaitAt);\n      }\n      return this.parseFor(node as Undone<N.ForStatement>, null);\n    }\n\n    const startsWithLet = this.isContextual(tt._let);\n    const isLet = startsWithLet && this.isLetKeyword();\n    if (this.match(tt._var) || this.match(tt._const) || isLet) {\n      const initNode = this.startNode<N.VariableDeclaration>();\n      const kind = isLet ? \"let\" : this.state.value;\n      this.next();\n      this.parseVar(initNode, true, kind);\n      const init = this.finishNode(initNode, \"VariableDeclaration\");\n\n      if (\n        (this.match(tt._in) || this.isContextual(tt._of)) &&\n        init.declarations.length === 1\n      ) {\n        return this.parseForIn(node as Undone<N.ForInOf>, init, awaitAt);\n      }\n      if (awaitAt !== null) {\n        this.unexpected(awaitAt);\n      }\n      return this.parseFor(node as Undone<N.ForStatement>, init);\n    }\n\n    // Check whether the first token is possibly a contextual keyword, so that\n    // we can forbid `for (async of` if this turns out to be a for-of loop.\n    const startsWithAsync = this.isContextual(tt._async);\n\n    const refExpressionErrors = new ExpressionErrors();\n    const init = this.parseExpression(true, refExpressionErrors);\n    const isForOf = this.isContextual(tt._of);\n    if (isForOf) {\n      // Check for leading tokens that are forbidden in for-of loops:\n      if (startsWithLet) {\n        this.raise(Errors.ForOfLet, { at: init });\n      }\n\n      if (\n        // `for await (async of []);` is allowed.\n        awaitAt === null &&\n        startsWithAsync &&\n        init.type === \"Identifier\"\n      ) {\n        // This catches the case where the `async` in `for (async of` was\n        // parsed as an identifier. If it was parsed as the start of an async\n        // arrow function (e.g. `for (async of => {} of []);`), the LVal check\n        // further down will raise a more appropriate error.\n        this.raise(Errors.ForOfAsync, { at: init });\n      }\n    }\n    if (isForOf || this.match(tt._in)) {\n      this.checkDestructuringPrivate(refExpressionErrors);\n      this.toAssignable(init, /* isLHS */ true);\n      const type = isForOf ? \"ForOfStatement\" : \"ForInStatement\";\n      this.checkLVal(init, { in: { type } });\n      return this.parseForIn(\n        node as Undone<N.ForInStatement | N.ForOfStatement>,\n        // @ts-expect-error init has been transformed to an assignable\n        init,\n        awaitAt,\n      );\n    } else {\n      this.checkExpressionErrors(refExpressionErrors, true);\n    }\n    if (awaitAt !== null) {\n      this.unexpected(awaitAt);\n    }\n    return this.parseFor(node as Undone<N.ForStatement>, init);\n  }\n\n  parseFunctionStatement(\n    this: Parser,\n    node: Undone<N.FunctionDeclaration>,\n    isAsync?: boolean,\n    declarationPosition?: boolean,\n  ): N.FunctionDeclaration {\n    this.next();\n    return this.parseFunction(\n      node,\n      FUNC_STATEMENT | (declarationPosition ? 0 : FUNC_HANGING_STATEMENT),\n      isAsync,\n    );\n  }\n\n  parseIfStatement(this: Parser, node: Undone<N.IfStatement>) {\n    this.next();\n    node.test = this.parseHeaderExpression();\n    node.consequent = this.parseStatement(\"if\");\n    node.alternate = this.eat(tt._else) ? this.parseStatement(\"if\") : null;\n    return this.finishNode(node, \"IfStatement\");\n  }\n\n  parseReturnStatement(this: Parser, node: Undone<N.ReturnStatement>) {\n    if (!this.prodParam.hasReturn && !this.options.allowReturnOutsideFunction) {\n      this.raise(Errors.IllegalReturn, { at: this.state.startLoc });\n    }\n\n    this.next();\n\n    // In `return` (and `break`/`continue`), the keywords with\n    // optional arguments, we eagerly look for a semicolon or the\n    // possibility to insert one.\n\n    if (this.isLineTerminator()) {\n      node.argument = null;\n    } else {\n      node.argument = this.parseExpression();\n      this.semicolon();\n    }\n\n    return this.finishNode(node, \"ReturnStatement\");\n  }\n\n  parseSwitchStatement(this: Parser, node: Undone<N.SwitchStatement>) {\n    this.next();\n    node.discriminant = this.parseHeaderExpression();\n    const cases: N.SwitchStatement[\"cases\"] = (node.cases = []);\n    this.expect(tt.braceL);\n    this.state.labels.push(switchLabel);\n    this.scope.enter(SCOPE_OTHER);\n\n    // Statements under must be grouped (by label) in SwitchCase\n    // nodes. `cur` is used to keep the node that we are currently\n    // adding statements to.\n\n    let cur;\n    for (let sawDefault; !this.match(tt.braceR); ) {\n      if (this.match(tt._case) || this.match(tt._default)) {\n        const isCase = this.match(tt._case);\n        if (cur) this.finishNode(cur, \"SwitchCase\");\n        // @ts-expect-error Fixme\n        cases.push((cur = this.startNode()));\n        cur.consequent = [];\n        this.next();\n        if (isCase) {\n          cur.test = this.parseExpression();\n        } else {\n          if (sawDefault) {\n            this.raise(Errors.MultipleDefaultsInSwitch, {\n              at: this.state.lastTokStartLoc,\n            });\n          }\n          sawDefault = true;\n          cur.test = null;\n        }\n        this.expect(tt.colon);\n      } else {\n        if (cur) {\n          cur.consequent.push(this.parseStatement(null));\n        } else {\n          this.unexpected();\n        }\n      }\n    }\n    this.scope.exit();\n    if (cur) this.finishNode(cur, \"SwitchCase\");\n    this.next(); // Closing brace\n    this.state.labels.pop();\n    return this.finishNode(node, \"SwitchStatement\");\n  }\n\n  parseThrowStatement(this: Parser, node: Undone<N.ThrowStatement>) {\n    this.next();\n    if (this.hasPrecedingLineBreak()) {\n      this.raise(Errors.NewlineAfterThrow, { at: this.state.lastTokEndLoc });\n    }\n    node.argument = this.parseExpression();\n    this.semicolon();\n    return this.finishNode(node, \"ThrowStatement\");\n  }\n\n  parseCatchClauseParam(this: Parser): N.Pattern {\n    const param = this.parseBindingAtom();\n\n    const simple = param.type === \"Identifier\";\n    this.scope.enter(simple ? SCOPE_SIMPLE_CATCH : 0);\n    this.checkLVal(param, {\n      in: { type: \"CatchClause\" },\n      binding: BIND_LEXICAL,\n      allowingSloppyLetBinding: true,\n    });\n\n    return param;\n  }\n\n  parseTryStatement(\n    this: Parser,\n    node: Undone<N.TryStatement>,\n  ): N.TryStatement {\n    this.next();\n\n    node.block = this.parseBlock();\n    node.handler = null;\n\n    if (this.match(tt._catch)) {\n      const clause = this.startNode<N.CatchClause>();\n      this.next();\n      if (this.match(tt.parenL)) {\n        this.expect(tt.parenL);\n        clause.param = this.parseCatchClauseParam();\n        this.expect(tt.parenR);\n      } else {\n        clause.param = null;\n        this.scope.enter(SCOPE_OTHER);\n      }\n\n      // Parse the catch clause's body.\n      clause.body =\n        // For the smartPipelines plugin: Disable topic references from outer\n        // contexts within the catch clause's body.\n        this.withSmartMixTopicForbiddingContext(() =>\n          // Parse the catch clause's body.\n          this.parseBlock(false, false),\n        );\n\n      this.scope.exit();\n      node.handler = this.finishNode(clause, \"CatchClause\");\n    }\n\n    node.finalizer = this.eat(tt._finally) ? this.parseBlock() : null;\n\n    if (!node.handler && !node.finalizer) {\n      this.raise(Errors.NoCatchOrFinally, { at: node });\n    }\n\n    return this.finishNode(node, \"TryStatement\");\n  }\n\n  parseVarStatement(\n    this: Parser,\n    node: Undone<N.VariableDeclaration>,\n    kind: \"var\" | \"let\" | \"const\",\n    allowMissingInitializer: boolean = false,\n  ): N.VariableDeclaration {\n    this.next();\n    this.parseVar(node, false, kind, allowMissingInitializer);\n    this.semicolon();\n    return this.finishNode(node, \"VariableDeclaration\");\n  }\n\n  parseWhileStatement(\n    this: Parser,\n    node: Undone<N.WhileStatement>,\n  ): N.WhileStatement {\n    this.next();\n    node.test = this.parseHeaderExpression();\n    this.state.labels.push(loopLabel);\n\n    // Parse the loop body.\n    node.body =\n      // For the smartPipelines plugin:\n      // Disable topic references from outer contexts within the loop body.\n      // They are permitted in test expressions, outside of the loop body.\n      this.withSmartMixTopicForbiddingContext(() =>\n        // Parse loop body.\n        this.parseStatement(\"while\"),\n      );\n\n    this.state.labels.pop();\n\n    return this.finishNode(node, \"WhileStatement\");\n  }\n\n  parseWithStatement(\n    this: Parser,\n    node: Undone<N.WithStatement>,\n  ): N.WithStatement {\n    if (this.state.strict) {\n      this.raise(Errors.StrictWith, { at: this.state.startLoc });\n    }\n    this.next();\n    node.object = this.parseHeaderExpression();\n\n    // Parse the statement body.\n    node.body =\n      // For the smartPipelines plugin:\n      // Disable topic references from outer contexts within the with statement's body.\n      // They are permitted in function default-parameter expressions, which are\n      // part of the outer context, outside of the with statement's body.\n      this.withSmartMixTopicForbiddingContext(() =>\n        // Parse the statement body.\n        this.parseStatement(\"with\"),\n      );\n\n    return this.finishNode(node, \"WithStatement\");\n  }\n\n  parseEmptyStatement(node: Undone<N.EmptyStatement>): N.EmptyStatement {\n    this.next();\n    return this.finishNode(node, \"EmptyStatement\");\n  }\n\n  parseLabeledStatement(\n    this: Parser,\n    node: Undone<N.LabeledStatement>,\n    maybeName: string,\n    expr: N.Identifier,\n    context?: string | null,\n  ): N.LabeledStatement {\n    for (const label of this.state.labels) {\n      if (label.name === maybeName) {\n        this.raise(Errors.LabelRedeclaration, {\n          at: expr,\n          labelName: maybeName,\n        });\n      }\n    }\n\n    const kind = tokenIsLoop(this.state.type)\n      ? \"loop\"\n      : this.match(tt._switch)\n      ? \"switch\"\n      : null;\n    for (let i = this.state.labels.length - 1; i >= 0; i--) {\n      const label = this.state.labels[i];\n      if (label.statementStart === node.start) {\n        label.statementStart = this.state.start;\n        label.kind = kind;\n      } else {\n        break;\n      }\n    }\n\n    this.state.labels.push({\n      name: maybeName,\n      kind: kind,\n      statementStart: this.state.start,\n    });\n    node.body = this.parseStatement(\n      context\n        ? context.indexOf(\"label\") === -1\n          ? context + \"label\"\n          : context\n        : \"label\",\n    );\n\n    this.state.labels.pop();\n    node.label = expr;\n    return this.finishNode(node, \"LabeledStatement\");\n  }\n\n  parseExpressionStatement(\n    node: Undone<N.ExpressionStatement>,\n    expr: N.Expression,\n  ) {\n    node.expression = expr;\n    this.semicolon();\n    return this.finishNode(node, \"ExpressionStatement\");\n  }\n\n  // Parse a semicolon-enclosed block of statements, handling `\"use\n  // strict\"` declarations when `allowDirectives` is true (used for\n  // function bodies).\n\n  parseBlock(\n    this: Parser,\n    allowDirectives: boolean = false,\n    createNewLexicalScope: boolean = true,\n    afterBlockParse?: (hasStrictModeDirective: boolean) => void,\n  ): N.BlockStatement {\n    const node = this.startNode<N.BlockStatement>();\n    if (allowDirectives) {\n      this.state.strictErrors.clear();\n    }\n    this.expect(tt.braceL);\n    if (createNewLexicalScope) {\n      this.scope.enter(SCOPE_OTHER);\n    }\n    this.parseBlockBody(\n      node,\n      allowDirectives,\n      false,\n      tt.braceR,\n      afterBlockParse,\n    );\n    if (createNewLexicalScope) {\n      this.scope.exit();\n    }\n    return this.finishNode(node, \"BlockStatement\");\n  }\n\n  isValidDirective(stmt: N.Statement): boolean {\n    return (\n      stmt.type === \"ExpressionStatement\" &&\n      stmt.expression.type === \"StringLiteral\" &&\n      !stmt.expression.extra.parenthesized\n    );\n  }\n\n  parseBlockBody(\n    this: Parser,\n    node: Undone<N.BlockStatementLike>,\n    allowDirectives: boolean | undefined | null,\n    topLevel: boolean,\n    end: TokenType,\n    afterBlockParse?: (hasStrictModeDirective: boolean) => void,\n  ): void {\n    const body: N.BlockStatementLike[\"body\"] = (node.body = []);\n    const directives: N.BlockStatementLike[\"directives\"] = (node.directives =\n      []);\n    this.parseBlockOrModuleBlockBody(\n      body,\n      allowDirectives ? directives : undefined,\n      topLevel,\n      end,\n      afterBlockParse,\n    );\n  }\n\n  // Undefined directives means that directives are not allowed.\n  // https://tc39.es/ecma262/#prod-Block\n  // https://tc39.es/ecma262/#prod-ModuleBody\n  parseBlockOrModuleBlockBody(\n    this: Parser,\n    body: N.Statement[],\n    directives: N.Directive[] | undefined | null,\n    topLevel: boolean,\n    end: TokenType,\n    afterBlockParse?: (hasStrictModeDirective: boolean) => void,\n  ): void {\n    const oldStrict = this.state.strict;\n    let hasStrictModeDirective = false;\n    let parsedNonDirective = false;\n\n    while (!this.match(end)) {\n      const stmt = this.parseStatement(null, topLevel);\n\n      if (directives && !parsedNonDirective) {\n        if (this.isValidDirective(stmt)) {\n          const directive = this.stmtToDirective(stmt);\n          directives.push(directive);\n\n          if (\n            !hasStrictModeDirective &&\n            directive.value.value === \"use strict\"\n          ) {\n            hasStrictModeDirective = true;\n            this.setStrict(true);\n          }\n\n          continue;\n        }\n        parsedNonDirective = true;\n        // clear strict errors since the strict mode will not change within the block\n        this.state.strictErrors.clear();\n      }\n      body.push(stmt);\n    }\n\n    if (afterBlockParse) {\n      afterBlockParse.call(this, hasStrictModeDirective);\n    }\n\n    if (!oldStrict) {\n      this.setStrict(false);\n    }\n\n    this.next();\n  }\n\n  // Parse a regular `for` loop. The disambiguation code in\n  // `parseStatement` will already have parsed the init statement or\n  // expression.\n\n  parseFor(\n    this: Parser,\n    node: Undone<N.ForStatement>,\n    init?: N.VariableDeclaration | N.Expression | null,\n  ): N.ForStatement {\n    node.init = init;\n    this.semicolon(/* allowAsi */ false);\n    node.test = this.match(tt.semi) ? null : this.parseExpression();\n    this.semicolon(/* allowAsi */ false);\n    node.update = this.match(tt.parenR) ? null : this.parseExpression();\n    this.expect(tt.parenR);\n\n    // Parse the loop body.\n    node.body =\n      // For the smartPipelines plugin: Disable topic references from outer\n      // contexts within the loop body. They are permitted in test expressions,\n      // outside of the loop body.\n      this.withSmartMixTopicForbiddingContext(() =>\n        // Parse the loop body.\n        this.parseStatement(\"for\"),\n      );\n\n    this.scope.exit();\n    this.state.labels.pop();\n\n    return this.finishNode(node, \"ForStatement\");\n  }\n\n  // Parse a `for`/`in` and `for`/`of` loop, which are almost\n  // same from parser's perspective.\n\n  parseForIn(\n    this: Parser,\n    node: Undone<N.ForInOf>,\n    init: N.VariableDeclaration | N.AssignmentPattern,\n    awaitAt?: Position | null,\n  ): N.ForInOf {\n    const isForIn = this.match(tt._in);\n    this.next();\n\n    if (isForIn) {\n      if (awaitAt !== null) this.unexpected(awaitAt);\n    } else {\n      node.await = awaitAt !== null;\n    }\n\n    if (\n      init.type === \"VariableDeclaration\" &&\n      init.declarations[0].init != null &&\n      (!isForIn ||\n        this.state.strict ||\n        init.kind !== \"var\" ||\n        init.declarations[0].id.type !== \"Identifier\")\n    ) {\n      this.raise(Errors.ForInOfLoopInitializer, {\n        at: init,\n        type: isForIn ? \"ForInStatement\" : \"ForOfStatement\",\n      });\n    }\n\n    if (init.type === \"AssignmentPattern\") {\n      this.raise(Errors.InvalidLhs, {\n        at: init,\n        ancestor: { type: \"ForStatement\" },\n      });\n    }\n\n    node.left = init;\n    node.right = isForIn\n      ? this.parseExpression()\n      : this.parseMaybeAssignAllowIn();\n    this.expect(tt.parenR);\n\n    // Parse the loop body.\n    node.body =\n      // For the smartPipelines plugin:\n      // Disable topic references from outer contexts within the loop body.\n      // They are permitted in test expressions, outside of the loop body.\n      this.withSmartMixTopicForbiddingContext(() =>\n        // Parse loop body.\n        this.parseStatement(\"for\"),\n      );\n\n    this.scope.exit();\n    this.state.labels.pop();\n\n    return this.finishNode(node, isForIn ? \"ForInStatement\" : \"ForOfStatement\");\n  }\n\n  // Parse a list of variable declarations.\n\n  parseVar(\n    this: Parser,\n    node: Undone<N.VariableDeclaration>,\n    isFor: boolean,\n    kind: \"var\" | \"let\" | \"const\",\n    allowMissingInitializer: boolean = false,\n  ): Undone<N.VariableDeclaration> {\n    const declarations: N.VariableDeclarator[] = (node.declarations = []);\n    node.kind = kind;\n    for (;;) {\n      const decl = this.startNode<N.VariableDeclarator>();\n      this.parseVarId(decl, kind);\n      decl.init = !this.eat(tt.eq)\n        ? null\n        : isFor\n        ? this.parseMaybeAssignDisallowIn()\n        : this.parseMaybeAssignAllowIn();\n\n      if (decl.init === null && !allowMissingInitializer) {\n        if (\n          decl.id.type !== \"Identifier\" &&\n          !(isFor && (this.match(tt._in) || this.isContextual(tt._of)))\n        ) {\n          this.raise(Errors.DeclarationMissingInitializer, {\n            at: this.state.lastTokEndLoc,\n            kind: \"destructuring\",\n          });\n        } else if (\n          kind === \"const\" &&\n          !(this.match(tt._in) || this.isContextual(tt._of))\n        ) {\n          this.raise(Errors.DeclarationMissingInitializer, {\n            at: this.state.lastTokEndLoc,\n            kind: \"const\",\n          });\n        }\n      }\n      declarations.push(this.finishNode(decl, \"VariableDeclarator\"));\n      if (!this.eat(tt.comma)) break;\n    }\n    return node;\n  }\n\n  parseVarId(\n    this: Parser,\n    decl: Undone<N.VariableDeclarator>,\n    kind: \"var\" | \"let\" | \"const\",\n  ): void {\n    decl.id = this.parseBindingAtom();\n    this.checkLVal(decl.id, {\n      in: { type: \"VariableDeclarator\" },\n      binding: kind === \"var\" ? BIND_VAR : BIND_LEXICAL,\n    });\n  }\n\n  // Parse a function declaration or literal (depending on the\n  // `isStatement` parameter).\n\n  parseFunction<T extends N.NormalFunction>(\n    this: Parser,\n    node: Undone<T>,\n    statement: number = FUNC_NO_FLAGS,\n    isAsync: boolean = false,\n  ): T {\n    const isStatement = statement & FUNC_STATEMENT;\n    const isHangingStatement = statement & FUNC_HANGING_STATEMENT;\n    const requireId = !!isStatement && !(statement & FUNC_NULLABLE_ID);\n\n    this.initFunction(node, isAsync);\n\n    if (this.match(tt.star) && isHangingStatement) {\n      this.raise(Errors.GeneratorInSingleStatementContext, {\n        at: this.state.startLoc,\n      });\n    }\n    node.generator = this.eat(tt.star);\n\n    if (isStatement) {\n      node.id = this.parseFunctionId(requireId);\n    }\n\n    const oldMaybeInArrowParameters = this.state.maybeInArrowParameters;\n    this.state.maybeInArrowParameters = false;\n    this.scope.enter(SCOPE_FUNCTION);\n    this.prodParam.enter(functionFlags(isAsync, node.generator));\n\n    if (!isStatement) {\n      node.id = this.parseFunctionId();\n    }\n\n    this.parseFunctionParams(node, /* allowModifiers */ false);\n\n    // For the smartPipelines plugin: Disable topic references from outer\n    // contexts within the function body. They are permitted in function\n    // default-parameter expressions, outside of the function body.\n    this.withSmartMixTopicForbiddingContext(() => {\n      // Parse the function body.\n      this.parseFunctionBodyAndFinish(\n        node,\n        isStatement ? \"FunctionDeclaration\" : \"FunctionExpression\",\n      );\n    });\n\n    this.prodParam.exit();\n    this.scope.exit();\n\n    if (isStatement && !isHangingStatement) {\n      // We need to register this _after_ parsing the function body\n      // because of TypeScript body-less function declarations,\n      // which shouldn't be added to the scope.\n      this.registerFunctionStatementId(node as T);\n    }\n\n    this.state.maybeInArrowParameters = oldMaybeInArrowParameters;\n    return node as T;\n  }\n\n  parseFunctionId(requireId?: boolean): N.Identifier | undefined | null {\n    return requireId || tokenIsIdentifier(this.state.type)\n      ? this.parseIdentifier()\n      : null;\n  }\n\n  parseFunctionParams(\n    this: Parser,\n    node: Undone<N.Function>,\n    allowModifiers?: boolean,\n  ): void {\n    this.expect(tt.parenL);\n    this.expressionScope.enter(newParameterDeclarationScope());\n    node.params = this.parseBindingList(\n      tt.parenR,\n      charCodes.rightParenthesis,\n      /* allowEmpty */ false,\n      allowModifiers,\n    );\n\n    this.expressionScope.exit();\n  }\n\n  registerFunctionStatementId(node: N.Function): void {\n    if (!node.id) return;\n\n    // If it is a regular function declaration in sloppy mode, then it is\n    // subject to Annex B semantics (BIND_FUNCTION). Otherwise, the binding\n    // mode depends on properties of the current scope (see\n    // treatFunctionsAsVar).\n    this.scope.declareName(\n      node.id.name,\n      this.state.strict || node.generator || node.async\n        ? this.scope.treatFunctionsAsVar\n          ? BIND_VAR\n          : BIND_LEXICAL\n        : BIND_FUNCTION,\n      node.id.loc.start,\n    );\n  }\n\n  // Parse a class declaration or literal (depending on the\n  // `isStatement` parameter).\n\n  parseClass<T extends N.Class>(\n    this: Parser,\n    node: Undone<T>,\n    isStatement: /* T === ClassDeclaration */ boolean,\n    optionalId?: boolean,\n  ): T {\n    this.next();\n    this.takeDecorators(node);\n\n    // A class definition is always strict mode code.\n    const oldStrict = this.state.strict;\n    this.state.strict = true;\n\n    this.parseClassId(node, isStatement, optionalId);\n    this.parseClassSuper(node);\n    // this.state.strict is restored in parseClassBody\n    node.body = this.parseClassBody(!!node.superClass, oldStrict);\n\n    return this.finishNode(\n      node,\n      isStatement ? \"ClassDeclaration\" : \"ClassExpression\",\n    );\n  }\n\n  isClassProperty(): boolean {\n    return this.match(tt.eq) || this.match(tt.semi) || this.match(tt.braceR);\n  }\n\n  isClassMethod(): boolean {\n    return this.match(tt.parenL);\n  }\n\n  isNonstaticConstructor(method: N.ClassMethod | N.ClassProperty): boolean {\n    return (\n      !method.computed &&\n      !method.static &&\n      (method.key.name === \"constructor\" || // Identifier\n        method.key.value === \"constructor\") // String literal\n    );\n  }\n\n  // https://tc39.es/ecma262/#prod-ClassBody\n  parseClassBody(\n    this: Parser,\n    hadSuperClass: boolean,\n    oldStrict: boolean,\n  ): N.ClassBody {\n    this.classScope.enter();\n\n    const state: N.ParseClassMemberState = {\n      hadConstructor: false,\n      hadSuperClass,\n    };\n    let decorators: N.Decorator[] = [];\n    const classBody = this.startNode<N.ClassBody>();\n    classBody.body = [];\n\n    this.expect(tt.braceL);\n\n    // For the smartPipelines plugin: Disable topic references from outer\n    // contexts within the class body.\n    this.withSmartMixTopicForbiddingContext(() => {\n      // Parse the contents within the braces.\n      while (!this.match(tt.braceR)) {\n        if (this.eat(tt.semi)) {\n          if (decorators.length > 0) {\n            throw this.raise(Errors.DecoratorSemicolon, {\n              at: this.state.lastTokEndLoc,\n            });\n          }\n          continue;\n        }\n\n        if (this.match(tt.at)) {\n          decorators.push(this.parseDecorator());\n          continue;\n        }\n\n        const member = this.startNode<N.ClassMember>();\n\n        // steal the decorators if there are any\n        if (decorators.length) {\n          // @ts-expect-error Fixme\n          member.decorators = decorators;\n          this.resetStartLocationFromNode(member, decorators[0]);\n          decorators = [];\n        }\n\n        this.parseClassMember(classBody, member, state);\n\n        if (\n          // @ts-expect-error Fixme\n          member.kind === \"constructor\" &&\n          // @ts-expect-error Fixme\n          member.decorators &&\n          // @ts-expect-error Fixme\n          member.decorators.length > 0\n        ) {\n          this.raise(Errors.DecoratorConstructor, { at: member });\n        }\n      }\n    });\n\n    this.state.strict = oldStrict;\n\n    this.next(); // eat `}`\n\n    if (decorators.length) {\n      throw this.raise(Errors.TrailingDecorator, { at: this.state.startLoc });\n    }\n\n    this.classScope.exit();\n\n    return this.finishNode(classBody, \"ClassBody\");\n  }\n\n  // returns true if the current identifier is a method/field name,\n  // false if it is a modifier\n  parseClassMemberFromModifier(\n    this: Parser,\n    classBody: Undone<N.ClassBody>,\n    member: Undone<N.ClassMember>,\n  ): boolean {\n    const key = this.parseIdentifier(true); // eats the modifier\n\n    if (this.isClassMethod()) {\n      const method: N.ClassMethod = member as any;\n\n      // a method named like the modifier\n      method.kind = \"method\";\n      method.computed = false;\n      method.key = key;\n      method.static = false;\n      this.pushClassMethod(\n        classBody,\n        method,\n        false,\n        false,\n        /* isConstructor */ false,\n        false,\n      );\n      return true;\n    } else if (this.isClassProperty()) {\n      const prop: N.ClassProperty = member as any;\n\n      // a property named like the modifier\n      prop.computed = false;\n      prop.key = key;\n      prop.static = false;\n      classBody.body.push(this.parseClassProperty(prop));\n      return true;\n    }\n    this.resetPreviousNodeTrailingComments(key);\n    return false;\n  }\n\n  parseClassMember(\n    this: Parser,\n    classBody: Undone<N.ClassBody>,\n    member: Undone<N.ClassMember>,\n    state: N.ParseClassMemberState,\n  ): void {\n    const isStatic = this.isContextual(tt._static);\n\n    if (isStatic) {\n      if (this.parseClassMemberFromModifier(classBody, member)) {\n        // a class element named 'static'\n        return;\n      }\n      if (this.eat(tt.braceL)) {\n        this.parseClassStaticBlock(classBody, member as any as N.StaticBlock);\n        return;\n      }\n    }\n\n    this.parseClassMemberWithIsStatic(classBody, member, state, isStatic);\n  }\n\n  parseClassMemberWithIsStatic(\n    this: Parser,\n    classBody: Undone<N.ClassBody>,\n    member: Undone<N.ClassMember>,\n    state: N.ParseClassMemberState,\n    isStatic: boolean,\n  ) {\n    // @ts-expect-error: Fixme: convert $FlowSubtype to TS\n    const publicMethod: $FlowSubtype<N.ClassMethod> = member;\n    // @ts-expect-error: Fixme: convert $FlowSubtype to TS\n    const privateMethod: $FlowSubtype<N.ClassPrivateMethod> = member;\n    // @ts-expect-error: Fixme: convert $FlowSubtype to TS\n    const publicProp: $FlowSubtype<N.ClassProperty> = member;\n    // @ts-expect-error: Fixme: convert $FlowSubtype to TS\n    const privateProp: $FlowSubtype<N.ClassPrivateProperty> = member;\n    // @ts-expect-error: Fixme: convert $FlowSubtype to TS\n    const accessorProp: $FlowSubtype<N.ClassAccessorProperty> = member;\n\n    const method: typeof publicMethod | typeof privateMethod = publicMethod;\n    const publicMember: typeof publicMethod | typeof publicProp = publicMethod;\n\n    member.static = isStatic;\n    this.parsePropertyNamePrefixOperator(member);\n\n    if (this.eat(tt.star)) {\n      // a generator\n      method.kind = \"method\";\n      const isPrivateName = this.match(tt.privateName);\n      this.parseClassElementName(method);\n\n      if (isPrivateName) {\n        // Private generator method\n        this.pushClassPrivateMethod(classBody, privateMethod, true, false);\n        return;\n      }\n\n      if (this.isNonstaticConstructor(publicMethod)) {\n        this.raise(Errors.ConstructorIsGenerator, {\n          at: publicMethod.key,\n        });\n      }\n\n      this.pushClassMethod(\n        classBody,\n        publicMethod,\n        true,\n        false,\n        /* isConstructor */ false,\n        false,\n      );\n\n      return;\n    }\n\n    const isContextual =\n      tokenIsIdentifier(this.state.type) && !this.state.containsEsc;\n    const isPrivate = this.match(tt.privateName);\n    const key = this.parseClassElementName(member);\n    const maybeQuestionTokenStartLoc = this.state.startLoc;\n\n    this.parsePostMemberNameModifiers(publicMember);\n\n    if (this.isClassMethod()) {\n      method.kind = \"method\";\n\n      if (isPrivate) {\n        this.pushClassPrivateMethod(classBody, privateMethod, false, false);\n        return;\n      }\n\n      // a normal method\n      const isConstructor = this.isNonstaticConstructor(publicMethod);\n      let allowsDirectSuper = false;\n      if (isConstructor) {\n        publicMethod.kind = \"constructor\";\n\n        // TypeScript allows multiple overloaded constructor declarations.\n        if (state.hadConstructor && !this.hasPlugin(\"typescript\")) {\n          this.raise(Errors.DuplicateConstructor, { at: key });\n        }\n        if (isConstructor && this.hasPlugin(\"typescript\") && member.override) {\n          this.raise(Errors.OverrideOnConstructor, { at: key });\n        }\n        state.hadConstructor = true;\n        allowsDirectSuper = state.hadSuperClass;\n      }\n\n      this.pushClassMethod(\n        classBody,\n        publicMethod,\n        false,\n        false,\n        isConstructor,\n        allowsDirectSuper,\n      );\n    } else if (this.isClassProperty()) {\n      if (isPrivate) {\n        this.pushClassPrivateProperty(classBody, privateProp);\n      } else {\n        this.pushClassProperty(classBody, publicProp);\n      }\n    } else if (\n      isContextual &&\n      key.name === \"async\" &&\n      !this.isLineTerminator()\n    ) {\n      // an async method\n      this.resetPreviousNodeTrailingComments(key);\n      const isGenerator = this.eat(tt.star);\n\n      if (publicMember.optional) {\n        this.unexpected(maybeQuestionTokenStartLoc);\n      }\n\n      method.kind = \"method\";\n      // The so-called parsed name would have been \"async\": get the real name.\n      const isPrivate = this.match(tt.privateName);\n      this.parseClassElementName(method);\n      this.parsePostMemberNameModifiers(publicMember);\n\n      if (isPrivate) {\n        // private async method\n        this.pushClassPrivateMethod(\n          classBody,\n          privateMethod,\n          isGenerator,\n          true,\n        );\n      } else {\n        if (this.isNonstaticConstructor(publicMethod)) {\n          this.raise(Errors.ConstructorIsAsync, { at: publicMethod.key });\n        }\n\n        this.pushClassMethod(\n          classBody,\n          publicMethod,\n          isGenerator,\n          true,\n          /* isConstructor */ false,\n          false,\n        );\n      }\n    } else if (\n      isContextual &&\n      (key.name === \"get\" || key.name === \"set\") &&\n      !(this.match(tt.star) && this.isLineTerminator())\n    ) {\n      // `get\\n*` is an uninitialized property named 'get' followed by a generator.\n      // a getter or setter\n      this.resetPreviousNodeTrailingComments(key);\n      method.kind = key.name;\n      // The so-called parsed name would have been \"get/set\": get the real name.\n      const isPrivate = this.match(tt.privateName);\n      this.parseClassElementName(publicMethod);\n\n      if (isPrivate) {\n        // private getter/setter\n        this.pushClassPrivateMethod(classBody, privateMethod, false, false);\n      } else {\n        if (this.isNonstaticConstructor(publicMethod)) {\n          this.raise(Errors.ConstructorIsAccessor, { at: publicMethod.key });\n        }\n        this.pushClassMethod(\n          classBody,\n          publicMethod,\n          false,\n          false,\n          /* isConstructor */ false,\n          false,\n        );\n      }\n\n      this.checkGetterSetterParams(publicMethod);\n    } else if (\n      isContextual &&\n      key.name === \"accessor\" &&\n      !this.isLineTerminator()\n    ) {\n      this.expectPlugin(\"decoratorAutoAccessors\");\n      this.resetPreviousNodeTrailingComments(key);\n\n      // The so-called parsed name would have been \"accessor\": get the real name.\n      const isPrivate = this.match(tt.privateName);\n      this.parseClassElementName(publicProp);\n      this.pushClassAccessorProperty(classBody, accessorProp, isPrivate);\n    } else if (this.isLineTerminator()) {\n      // an uninitialized class property (due to ASI, since we don't otherwise recognize the next token)\n      if (isPrivate) {\n        this.pushClassPrivateProperty(classBody, privateProp);\n      } else {\n        this.pushClassProperty(classBody, publicProp);\n      }\n    } else {\n      this.unexpected();\n    }\n  }\n\n  // https://tc39.es/ecma262/#prod-ClassElementName\n  parseClassElementName(\n    this: Parser,\n    member: Undone<N.ClassMember>,\n  ): N.Expression | N.Identifier {\n    const { type, value } = this.state;\n    if (\n      (type === tt.name || type === tt.string) &&\n      member.static &&\n      value === \"prototype\"\n    ) {\n      this.raise(Errors.StaticPrototype, { at: this.state.startLoc });\n    }\n\n    if (type === tt.privateName) {\n      if (value === \"constructor\") {\n        this.raise(Errors.ConstructorClassPrivateField, {\n          at: this.state.startLoc,\n        });\n      }\n      const key = this.parsePrivateName();\n      member.key = key;\n      return key;\n    }\n\n    return this.parsePropertyName(member);\n  }\n\n  parseClassStaticBlock(\n    this: Parser,\n    classBody: Undone<N.ClassBody>,\n    member: Undone<\n      N.StaticBlock & {\n        decorators?: Array<N.Decorator>;\n      }\n    >,\n  ) {\n    // Start a new lexical scope\n    this.scope.enter(SCOPE_CLASS | SCOPE_STATIC_BLOCK | SCOPE_SUPER);\n    // Start a new scope with regard to loop labels\n    const oldLabels = this.state.labels;\n    this.state.labels = [];\n    // ClassStaticBlockStatementList:\n    //   StatementList[~Yield, ~Await, ~Return] opt\n    this.prodParam.enter(PARAM);\n    const body: N.Node[] = (member.body = []);\n    this.parseBlockOrModuleBlockBody(body, undefined, false, tt.braceR);\n    this.prodParam.exit();\n    this.scope.exit();\n    this.state.labels = oldLabels;\n    classBody.body.push(this.finishNode<N.StaticBlock>(member, \"StaticBlock\"));\n    if (member.decorators?.length) {\n      this.raise(Errors.DecoratorStaticBlock, { at: member });\n    }\n  }\n\n  pushClassProperty(\n    this: Parser,\n    classBody: Undone<N.ClassBody>,\n    prop: N.ClassProperty,\n  ) {\n    if (\n      !prop.computed &&\n      (prop.key.name === \"constructor\" || prop.key.value === \"constructor\")\n    ) {\n      // Non-computed field, which is either an identifier named \"constructor\"\n      // or a string literal named \"constructor\"\n      this.raise(Errors.ConstructorClassField, { at: prop.key });\n    }\n\n    classBody.body.push(this.parseClassProperty(prop));\n  }\n\n  pushClassPrivateProperty(\n    this: Parser,\n    classBody: Undone<N.ClassBody>,\n    prop: Undone<N.ClassPrivateProperty>,\n  ) {\n    const node = this.parseClassPrivateProperty(prop);\n    classBody.body.push(node);\n\n    this.classScope.declarePrivateName(\n      this.getPrivateNameSV(node.key),\n      CLASS_ELEMENT_OTHER,\n      node.key.loc.start,\n    );\n  }\n\n  pushClassAccessorProperty(\n    this: Parser,\n    classBody: Undone<N.ClassBody>,\n    prop: N.ClassAccessorProperty,\n    isPrivate: boolean,\n  ) {\n    if (!isPrivate && !prop.computed) {\n      // Not private, so not node is not a PrivateName and we can safely cast\n      const key = prop.key as N.Expression;\n\n      if (key.name === \"constructor\" || key.value === \"constructor\") {\n        // Non-computed field, which is either an identifier named \"constructor\"\n        // or a string literal named \"constructor\"\n        this.raise(Errors.ConstructorClassField, { at: key });\n      }\n    }\n\n    const node = this.parseClassAccessorProperty(prop);\n    classBody.body.push(node);\n\n    if (isPrivate) {\n      this.classScope.declarePrivateName(\n        this.getPrivateNameSV(node.key),\n        CLASS_ELEMENT_OTHER,\n        node.key.loc.start,\n      );\n    }\n  }\n\n  pushClassMethod(\n    this: Parser,\n    classBody: Undone<N.ClassBody>,\n    method: Undone<N.ClassMethod>,\n    isGenerator: boolean,\n    isAsync: boolean,\n    isConstructor: boolean,\n    allowsDirectSuper: boolean,\n  ): void {\n    classBody.body.push(\n      this.parseMethod(\n        method,\n        isGenerator,\n        isAsync,\n        isConstructor,\n        allowsDirectSuper,\n        \"ClassMethod\",\n        true,\n      ),\n    );\n  }\n\n  pushClassPrivateMethod(\n    this: Parser,\n    classBody: Undone<N.ClassBody>,\n    method: Undone<N.ClassPrivateMethod>,\n    isGenerator: boolean,\n    isAsync: boolean,\n  ): void {\n    const node = this.parseMethod(\n      method,\n      isGenerator,\n      isAsync,\n      /* isConstructor */ false,\n      false,\n      \"ClassPrivateMethod\",\n      true,\n    );\n    classBody.body.push(node);\n\n    const kind =\n      node.kind === \"get\"\n        ? node.static\n          ? CLASS_ELEMENT_STATIC_GETTER\n          : CLASS_ELEMENT_INSTANCE_GETTER\n        : node.kind === \"set\"\n        ? node.static\n          ? CLASS_ELEMENT_STATIC_SETTER\n          : CLASS_ELEMENT_INSTANCE_SETTER\n        : CLASS_ELEMENT_OTHER;\n    this.declareClassPrivateMethodInScope(node, kind);\n  }\n\n  declareClassPrivateMethodInScope(\n    node: Undone<\n      N.ClassPrivateMethod | N.EstreeMethodDefinition | N.TSDeclareMethod\n    >,\n    kind: number,\n  ) {\n    this.classScope.declarePrivateName(\n      this.getPrivateNameSV(node.key),\n      kind,\n      node.key.loc.start,\n    );\n  }\n\n  // Overridden in typescript.js\n  parsePostMemberNameModifiers(\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    methodOrProp: Undone<N.ClassMethod | N.ClassProperty>,\n  ): void {}\n\n  // https://tc39.es/ecma262/#prod-FieldDefinition\n  parseClassPrivateProperty(\n    this: Parser,\n    node: Undone<N.ClassPrivateProperty>,\n  ): N.ClassPrivateProperty {\n    this.parseInitializer(node);\n    this.semicolon();\n    return this.finishNode(node, \"ClassPrivateProperty\");\n  }\n\n  // https://tc39.es/ecma262/#prod-FieldDefinition\n  parseClassProperty(this: Parser, node: N.ClassProperty): N.ClassProperty {\n    this.parseInitializer(node);\n    this.semicolon();\n    return this.finishNode(node, \"ClassProperty\");\n  }\n\n  parseClassAccessorProperty(\n    this: Parser,\n    node: N.ClassAccessorProperty,\n  ): N.ClassAccessorProperty {\n    this.parseInitializer(node);\n    this.semicolon();\n    return this.finishNode(node, \"ClassAccessorProperty\");\n  }\n\n  // https://tc39.es/ecma262/#prod-Initializer\n  parseInitializer(\n    this: Parser,\n    node: Undone<\n      N.ClassProperty | N.ClassPrivateProperty | N.ClassAccessorProperty\n    >,\n  ): void {\n    this.scope.enter(SCOPE_CLASS | SCOPE_SUPER);\n    this.expressionScope.enter(newExpressionScope());\n    this.prodParam.enter(PARAM);\n    node.value = this.eat(tt.eq) ? this.parseMaybeAssignAllowIn() : null;\n    this.expressionScope.exit();\n    this.prodParam.exit();\n    this.scope.exit();\n  }\n\n  parseClassId(\n    node: Undone<N.Class>,\n    isStatement: boolean,\n    optionalId?: boolean | null,\n    bindingType: BindingTypes = BIND_CLASS,\n  ): void {\n    if (tokenIsIdentifier(this.state.type)) {\n      node.id = this.parseIdentifier();\n      if (isStatement) {\n        this.declareNameFromIdentifier(node.id, bindingType);\n      }\n    } else {\n      if (optionalId || !isStatement) {\n        node.id = null;\n      } else {\n        throw this.raise(Errors.MissingClassName, { at: this.state.startLoc });\n      }\n    }\n  }\n\n  // https://tc39.es/ecma262/#prod-ClassHeritage\n  parseClassSuper(this: Parser, node: Undone<N.Class>): void {\n    node.superClass = this.eat(tt._extends) ? this.parseExprSubscripts() : null;\n  }\n\n  // Parses module export declaration.\n  // https://tc39.es/ecma262/#prod-ExportDeclaration\n\n  parseExport(\n    this: Parser,\n    node: Undone<\n      | N.ExportDefaultDeclaration\n      | N.ExportAllDeclaration\n      | N.ExportNamedDeclaration\n    >,\n  ): N.AnyExport {\n    const hasDefault = this.maybeParseExportDefaultSpecifier(\n      // @ts-expect-error todo(flow->ts)\n      node,\n    );\n    const parseAfterDefault = !hasDefault || this.eat(tt.comma);\n    const hasStar =\n      parseAfterDefault &&\n      this.eatExportStar(\n        // @ts-expect-error todo(flow->ts)\n        node,\n      );\n    const hasNamespace =\n      hasStar &&\n      this.maybeParseExportNamespaceSpecifier(\n        // @ts-expect-error todo(flow->ts)\n        node,\n      );\n    const parseAfterNamespace =\n      parseAfterDefault && (!hasNamespace || this.eat(tt.comma));\n    const isFromRequired = hasDefault || hasStar;\n\n    if (hasStar && !hasNamespace) {\n      if (hasDefault) this.unexpected();\n      this.parseExportFrom(node as Undone<N.ExportNamedDeclaration>, true);\n\n      return this.finishNode(node, \"ExportAllDeclaration\");\n    }\n\n    const hasSpecifiers = this.maybeParseExportNamedSpecifiers(\n      // @ts-expect-error todo(flow->ts)\n      node,\n    );\n\n    if (\n      (hasDefault && parseAfterDefault && !hasStar && !hasSpecifiers) ||\n      (hasNamespace && parseAfterNamespace && !hasSpecifiers)\n    ) {\n      throw this.unexpected(null, tt.braceL);\n    }\n\n    let hasDeclaration;\n    if (isFromRequired || hasSpecifiers) {\n      hasDeclaration = false;\n      this.parseExportFrom(\n        node as Undone<N.ExportNamedDeclaration>,\n        isFromRequired,\n      );\n    } else {\n      hasDeclaration = this.maybeParseExportDeclaration(\n        node as Undone<N.ExportNamedDeclaration>,\n      );\n    }\n\n    if (isFromRequired || hasSpecifiers || hasDeclaration) {\n      this.checkExport(\n        node as Undone<N.ExportNamedDeclaration>,\n        true,\n        false,\n        !!(node as Undone<N.ExportNamedDeclaration>).source,\n      );\n      return this.finishNode(node, \"ExportNamedDeclaration\");\n    }\n\n    if (this.eat(tt._default)) {\n      // export default ...\n      (node as Undone<N.ExportDefaultDeclaration>).declaration =\n        this.parseExportDefaultExpression();\n      this.checkExport(node as Undone<N.ExportDefaultDeclaration>, true, true);\n\n      return this.finishNode(node, \"ExportDefaultDeclaration\");\n    }\n\n    throw this.unexpected(null, tt.braceL);\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  eatExportStar(node: N.Node): boolean {\n    return this.eat(tt.star);\n  }\n\n  maybeParseExportDefaultSpecifier(node: N.Node): boolean {\n    if (this.isExportDefaultSpecifier()) {\n      // export defaultObj ...\n      this.expectPlugin(\"exportDefaultFrom\");\n      const specifier = this.startNode();\n      specifier.exported = this.parseIdentifier(true);\n      node.specifiers = [this.finishNode(specifier, \"ExportDefaultSpecifier\")];\n      return true;\n    }\n    return false;\n  }\n\n  maybeParseExportNamespaceSpecifier(node: N.Node): boolean {\n    if (this.isContextual(tt._as)) {\n      if (!node.specifiers) node.specifiers = [];\n\n      const specifier = this.startNodeAt(\n        this.state.lastTokStart,\n        this.state.lastTokStartLoc,\n      );\n\n      this.next();\n\n      specifier.exported = this.parseModuleExportName();\n      node.specifiers.push(\n        this.finishNode(specifier, \"ExportNamespaceSpecifier\"),\n      );\n      return true;\n    }\n    return false;\n  }\n\n  maybeParseExportNamedSpecifiers(node: N.Node): boolean {\n    if (this.match(tt.braceL)) {\n      if (!node.specifiers) node.specifiers = [];\n      const isTypeExport = node.exportKind === \"type\";\n      node.specifiers.push(...this.parseExportSpecifiers(isTypeExport));\n\n      node.source = null;\n      node.declaration = null;\n      if (this.hasPlugin(\"importAssertions\")) {\n        node.assertions = [];\n      }\n\n      return true;\n    }\n    return false;\n  }\n\n  maybeParseExportDeclaration(\n    this: Parser,\n    node: Undone<N.ExportNamedDeclaration>,\n  ): boolean {\n    if (this.shouldParseExportDeclaration()) {\n      node.specifiers = [];\n      node.source = null;\n      if (this.hasPlugin(\"importAssertions\")) {\n        node.assertions = [];\n      }\n      node.declaration = this.parseExportDeclaration(node);\n      return true;\n    }\n    return false;\n  }\n\n  isAsyncFunction(): boolean {\n    if (!this.isContextual(tt._async)) return false;\n    const next = this.nextTokenStart();\n    return (\n      !lineBreak.test(this.input.slice(this.state.pos, next)) &&\n      this.isUnparsedContextual(next, \"function\")\n    );\n  }\n\n  parseExportDefaultExpression(this: Parser): N.Expression | N.Declaration {\n    const expr = this.startNode();\n\n    const isAsync = this.isAsyncFunction();\n\n    if (this.match(tt._function) || isAsync) {\n      this.next();\n      if (isAsync) {\n        this.next();\n      }\n\n      return this.parseFunction(\n        expr as Undone<N.FunctionExpression>,\n        FUNC_STATEMENT | FUNC_NULLABLE_ID,\n        isAsync,\n      );\n    }\n\n    if (this.match(tt._class)) {\n      return this.parseClass(expr as Undone<N.ClassExpression>, true, true);\n    }\n\n    if (this.match(tt.at)) {\n      if (\n        this.hasPlugin(\"decorators\") &&\n        this.getPluginOption(\"decorators\", \"decoratorsBeforeExport\")\n      ) {\n        this.raise(Errors.DecoratorBeforeExport, { at: this.state.startLoc });\n      }\n      this.parseDecorators(false);\n      return this.parseClass(expr as Undone<N.ClassExpression>, true, true);\n    }\n\n    if (this.match(tt._const) || this.match(tt._var) || this.isLet()) {\n      throw this.raise(Errors.UnsupportedDefaultExport, {\n        at: this.state.startLoc,\n      });\n    }\n\n    const res = this.parseMaybeAssignAllowIn();\n    this.semicolon();\n    return res;\n  }\n\n  parseExportDeclaration(\n    this: Parser,\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    node: Undone<N.ExportNamedDeclaration>,\n  ): N.Declaration | undefined | null {\n    return this.parseStatement(null) as N.Declaration;\n  }\n\n  isExportDefaultSpecifier(): boolean {\n    const { type } = this.state;\n    if (tokenIsIdentifier(type)) {\n      if ((type === tt._async && !this.state.containsEsc) || type === tt._let) {\n        return false;\n      }\n      if (\n        (type === tt._type || type === tt._interface) &&\n        !this.state.containsEsc\n      ) {\n        const { type: nextType } = this.lookahead();\n        // If we see any variable name other than `from` after `type` keyword,\n        // we consider it as flow/typescript type exports\n        // note that this approach may fail on some pedantic cases\n        // export type from = number\n        if (\n          (tokenIsIdentifier(nextType) && nextType !== tt._from) ||\n          nextType === tt.braceL\n        ) {\n          this.expectOnePlugin([\"flow\", \"typescript\"]);\n          return false;\n        }\n      }\n    } else if (!this.match(tt._default)) {\n      return false;\n    }\n\n    const next = this.nextTokenStart();\n    const hasFrom = this.isUnparsedContextual(next, \"from\");\n    if (\n      this.input.charCodeAt(next) === charCodes.comma ||\n      (tokenIsIdentifier(this.state.type) && hasFrom)\n    ) {\n      return true;\n    }\n    // lookahead again when `export default from` is seen\n    if (this.match(tt._default) && hasFrom) {\n      const nextAfterFrom = this.input.charCodeAt(\n        this.nextTokenStartSince(next + 4),\n      );\n      return (\n        nextAfterFrom === charCodes.quotationMark ||\n        nextAfterFrom === charCodes.apostrophe\n      );\n    }\n    return false;\n  }\n\n  parseExportFrom(\n    this: Parser,\n    node: Undone<N.ExportNamedDeclaration>,\n    expect?: boolean,\n  ): void {\n    if (this.eatContextual(tt._from)) {\n      node.source = this.parseImportSource();\n      this.checkExport(node);\n      const assertions = this.maybeParseImportAssertions();\n      if (assertions) {\n        node.assertions = assertions;\n        this.checkJSONModuleImport(node);\n      }\n    } else if (expect) {\n      this.unexpected();\n    }\n\n    this.semicolon();\n  }\n\n  shouldParseExportDeclaration(): boolean {\n    const { type } = this.state;\n    if (type === tt.at) {\n      this.expectOnePlugin([\"decorators\", \"decorators-legacy\"]);\n      if (this.hasPlugin(\"decorators\")) {\n        if (this.getPluginOption(\"decorators\", \"decoratorsBeforeExport\")) {\n          throw this.raise(Errors.DecoratorBeforeExport, {\n            at: this.state.startLoc,\n          });\n        }\n\n        return true;\n      }\n    }\n\n    return (\n      type === tt._var ||\n      type === tt._const ||\n      type === tt._function ||\n      type === tt._class ||\n      this.isLet() ||\n      this.isAsyncFunction()\n    );\n  }\n\n  checkExport(\n    node: Undone<N.ExportNamedDeclaration | N.ExportDefaultDeclaration>,\n    checkNames?: boolean,\n    isDefault?: boolean,\n    isFrom?: boolean,\n  ): void {\n    if (checkNames) {\n      // Check for duplicate exports\n      if (isDefault) {\n        // Default exports\n        this.checkDuplicateExports(node, \"default\");\n        if (this.hasPlugin(\"exportDefaultFrom\")) {\n          const declaration = (node as any as N.ExportDefaultDeclaration)\n            .declaration;\n          if (\n            declaration.type === \"Identifier\" &&\n            declaration.name === \"from\" &&\n            declaration.end - declaration.start === 4 && // does not contain escape\n            !declaration.extra?.parenthesized\n          ) {\n            this.raise(Errors.ExportDefaultFromAsIdentifier, {\n              at: declaration,\n            });\n          }\n        }\n        // @ts-expect-error node.specifiers may not exist\n      } else if (node.specifiers && node.specifiers.length) {\n        // Named exports\n        // @ts-expect-error node.specifiers may not exist\n        for (const specifier of node.specifiers) {\n          const { exported } = specifier;\n          const exportName =\n            exported.type === \"Identifier\" ? exported.name : exported.value;\n          this.checkDuplicateExports(specifier, exportName);\n          if (!isFrom && specifier.local) {\n            const { local } = specifier;\n            if (local.type !== \"Identifier\") {\n              this.raise(Errors.ExportBindingIsString, {\n                at: specifier,\n                localName: local.value,\n                exportName,\n              });\n            } else {\n              // check for keywords used as local names\n              this.checkReservedWord(local.name, local.loc.start, true, false);\n              // check if export is defined\n              this.scope.checkLocalExport(local);\n            }\n          }\n        }\n      } else if (node.declaration) {\n        // Exported declarations\n        if (\n          node.declaration.type === \"FunctionDeclaration\" ||\n          node.declaration.type === \"ClassDeclaration\"\n        ) {\n          const id = node.declaration.id;\n          if (!id) throw new Error(\"Assertion failure\");\n\n          this.checkDuplicateExports(node, id.name);\n        } else if (node.declaration.type === \"VariableDeclaration\") {\n          for (const declaration of node.declaration.declarations) {\n            this.checkDeclaration(declaration.id);\n          }\n        }\n      }\n    }\n\n    const currentContextDecorators =\n      this.state.decoratorStack[this.state.decoratorStack.length - 1];\n    // If node.declaration is a class, it will take all decorators in the current context.\n    // Thus we should throw if we see non-empty decorators here.\n    if (currentContextDecorators.length) {\n      throw this.raise(Errors.UnsupportedDecoratorExport, { at: node });\n    }\n  }\n\n  checkDeclaration(node: N.Pattern | N.ObjectProperty): void {\n    if (node.type === \"Identifier\") {\n      this.checkDuplicateExports(node, node.name);\n    } else if (node.type === \"ObjectPattern\") {\n      for (const prop of node.properties) {\n        this.checkDeclaration(prop);\n      }\n    } else if (node.type === \"ArrayPattern\") {\n      for (const elem of node.elements) {\n        if (elem) {\n          this.checkDeclaration(elem);\n        }\n      }\n    } else if (node.type === \"ObjectProperty\") {\n      // @ts-expect-error migrate to Babel types\n      this.checkDeclaration(node.value);\n    } else if (node.type === \"RestElement\") {\n      this.checkDeclaration(node.argument);\n    } else if (node.type === \"AssignmentPattern\") {\n      this.checkDeclaration(node.left);\n    }\n  }\n\n  checkDuplicateExports(\n    node: Undone<\n      | N.Identifier\n      | N.StringLiteral\n      | N.ExportNamedDeclaration\n      | N.ExportSpecifier\n      | N.ExportDefaultSpecifier\n    >,\n    exportName: string,\n  ): void {\n    if (this.exportedIdentifiers.has(exportName)) {\n      if (exportName === \"default\") {\n        this.raise(Errors.DuplicateDefaultExport, { at: node });\n      } else {\n        this.raise(Errors.DuplicateExport, { at: node, exportName });\n      }\n    }\n    this.exportedIdentifiers.add(exportName);\n  }\n\n  // Parses a comma-separated list of module exports.\n\n  parseExportSpecifiers(isInTypeExport: boolean): Array<N.ExportSpecifier> {\n    const nodes = [];\n    let first = true;\n\n    // export { x, y as z } [from '...']\n    this.expect(tt.braceL);\n\n    while (!this.eat(tt.braceR)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(tt.comma);\n        if (this.eat(tt.braceR)) break;\n      }\n      const isMaybeTypeOnly = this.isContextual(tt._type);\n      const isString = this.match(tt.string);\n      const node = this.startNode();\n      node.local = this.parseModuleExportName();\n      nodes.push(\n        this.parseExportSpecifier(\n          node,\n          isString,\n          isInTypeExport,\n          isMaybeTypeOnly,\n        ),\n      );\n    }\n\n    return nodes;\n  }\n\n  parseExportSpecifier(\n    node: any,\n    isString: boolean,\n    /* eslint-disable @typescript-eslint/no-unused-vars -- used in TypeScript parser */\n    isInTypeExport: boolean,\n    isMaybeTypeOnly: boolean,\n    /* eslint-enable @typescript-eslint/no-unused-vars */\n  ): N.ExportSpecifier {\n    if (this.eatContextual(tt._as)) {\n      node.exported = this.parseModuleExportName();\n    } else if (isString) {\n      node.exported = cloneStringLiteral(node.local);\n    } else if (!node.exported) {\n      node.exported = cloneIdentifier(node.local);\n    }\n    return this.finishNode<N.ExportSpecifier>(node, \"ExportSpecifier\");\n  }\n\n  // https://tc39.es/ecma262/#prod-ModuleExportName\n  parseModuleExportName(): N.StringLiteral | N.Identifier {\n    if (this.match(tt.string)) {\n      const result = this.parseStringLiteral(this.state.value);\n      const surrogate = result.value.match(loneSurrogate);\n      if (surrogate) {\n        this.raise(Errors.ModuleExportNameHasLoneSurrogate, {\n          at: result,\n          surrogateCharCode: surrogate[0].charCodeAt(0),\n        });\n      }\n      return result;\n    }\n    return this.parseIdentifier(true);\n  }\n\n  isJSONModuleImport(\n    node: Undone<\n      N.ExportAllDeclaration | N.ExportNamedDeclaration | N.ImportDeclaration\n    >,\n  ): boolean {\n    if (node.assertions != null) {\n      return node.assertions.some(({ key, value }) => {\n        return (\n          value.value === \"json\" &&\n          (key.type === \"Identifier\"\n            ? key.name === \"type\"\n            : key.value === \"type\")\n        );\n      });\n    }\n    return false;\n  }\n\n  checkJSONModuleImport(\n    node: Undone<\n      N.ExportAllDeclaration | N.ExportNamedDeclaration | N.ImportDeclaration\n    >,\n  ) {\n    // @ts-expect-error Fixme: node.type must be undefined because they are undone\n    if (this.isJSONModuleImport(node) && node.type !== \"ExportAllDeclaration\") {\n      // @ts-expect-error\n      const { specifiers } = node;\n      // @ts-expect-error\n      if (node.specifiers != null) {\n        // @ts-expect-error refine specifier types\n        const nonDefaultNamedSpecifier = specifiers.find(specifier => {\n          let imported;\n          if (specifier.type === \"ExportSpecifier\") {\n            imported = specifier.local;\n          } else if (specifier.type === \"ImportSpecifier\") {\n            imported = specifier.imported;\n          }\n          if (imported !== undefined) {\n            return imported.type === \"Identifier\"\n              ? imported.name !== \"default\"\n              : imported.value !== \"default\";\n          }\n        });\n        if (nonDefaultNamedSpecifier !== undefined) {\n          this.raise(Errors.ImportJSONBindingNotDefault, {\n            at: nonDefaultNamedSpecifier.loc.start,\n          });\n        }\n      }\n    }\n  }\n\n  // Parses import declaration.\n  // https://tc39.es/ecma262/#prod-ImportDeclaration\n\n  parseImport(this: Parser, node: Undone<N.ImportDeclaration>): N.AnyImport {\n    // import '...'\n    node.specifiers = [];\n    if (!this.match(tt.string)) {\n      // check if we have a default import like\n      // import React from \"react\";\n      const hasDefault = this.maybeParseDefaultImportSpecifier(node);\n      /* we are checking if we do not have a default import, then it is obvious that we need named imports\n       * import { get } from \"axios\";\n       * but if we do have a default import\n       * we need to check if we have a comma after that and\n       * that is where this `|| this.eat` condition comes into play\n       */\n      const parseNext = !hasDefault || this.eat(tt.comma);\n      // if we do have to parse the next set of specifiers, we first check for star imports\n      // import React, * from \"react\";\n      const hasStar = parseNext && this.maybeParseStarImportSpecifier(node);\n      // now we check if we need to parse the next imports\n      // but only if they are not importing * (everything)\n      if (parseNext && !hasStar) this.parseNamedImportSpecifiers(node);\n      this.expectContextual(tt._from);\n    }\n    node.source = this.parseImportSource();\n    // https://github.com/tc39/proposal-import-assertions\n    // parse module import assertions if the next token is `assert` or ignore\n    // and finish the ImportDeclaration node.\n    const assertions = this.maybeParseImportAssertions();\n    if (assertions) {\n      node.assertions = assertions;\n    } else if (!process.env.BABEL_8_BREAKING) {\n      const attributes = this.maybeParseModuleAttributes();\n      if (attributes) {\n        // @ts-expect-error attributes have been deprecated\n        node.attributes = attributes;\n      }\n    }\n    this.checkJSONModuleImport(node);\n\n    this.semicolon();\n    return this.finishNode(node, \"ImportDeclaration\");\n  }\n\n  parseImportSource(this: Parser): N.StringLiteral {\n    if (!this.match(tt.string)) this.unexpected();\n    return this.parseExprAtom() as N.StringLiteral;\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  shouldParseDefaultImport(node: Undone<N.ImportDeclaration>): boolean {\n    return tokenIsIdentifier(this.state.type);\n  }\n\n  parseImportSpecifierLocal<\n    T extends\n      | N.ImportSpecifier\n      | N.ImportDefaultSpecifier\n      | N.ImportNamespaceSpecifier,\n  >(\n    node: Undone<N.ImportDeclaration>,\n    specifier: Undone<T>,\n    type: T[\"type\"],\n  ): void {\n    specifier.local = this.parseIdentifier();\n    node.specifiers.push(this.finishImportSpecifier(specifier, type));\n  }\n\n  finishImportSpecifier<\n    T extends\n      | N.ImportSpecifier\n      | N.ImportDefaultSpecifier\n      | N.ImportNamespaceSpecifier,\n  >(specifier: Undone<T>, type: T[\"type\"]) {\n    this.checkLVal(specifier.local, {\n      // @ts-expect-error refine types\n      in: specifier,\n      binding: BIND_LEXICAL,\n    });\n    return this.finishNode(specifier, type);\n  }\n\n  /**\n   * parse assert entries\n   *\n   * @see {@link https://tc39.es/proposal-import-assertions/#prod-AssertEntries |AssertEntries}\n   * @returns {N.ImportAttribute[]}\n   * @memberof StatementParser\n   */\n  parseAssertEntries(): N.ImportAttribute[] {\n    const attrs = [];\n    const attrNames = new Set();\n\n    do {\n      if (this.match(tt.braceR)) {\n        break;\n      }\n\n      const node = this.startNode<N.ImportAttribute>();\n\n      // parse AssertionKey : IdentifierName, StringLiteral\n      const keyName = this.state.value;\n      // check if we already have an entry for an attribute\n      // if a duplicate entry is found, throw an error\n      // for now this logic will come into play only when someone declares `type` twice\n      if (attrNames.has(keyName)) {\n        this.raise(Errors.ModuleAttributesWithDuplicateKeys, {\n          at: this.state.startLoc,\n          key: keyName,\n        });\n      }\n      attrNames.add(keyName);\n      if (this.match(tt.string)) {\n        node.key = this.parseStringLiteral(keyName);\n      } else {\n        node.key = this.parseIdentifier(true);\n      }\n      this.expect(tt.colon);\n\n      if (!this.match(tt.string)) {\n        throw this.raise(Errors.ModuleAttributeInvalidValue, {\n          at: this.state.startLoc,\n        });\n      }\n      node.value = this.parseStringLiteral(this.state.value);\n      attrs.push(this.finishNode(node, \"ImportAttribute\"));\n    } while (this.eat(tt.comma));\n\n    return attrs;\n  }\n\n  /**\n   * parse module attributes\n   * @deprecated It will be removed in Babel 8\n   * @returns\n   * @memberof StatementParser\n   */\n  maybeParseModuleAttributes() {\n    if (this.match(tt._with) && !this.hasPrecedingLineBreak()) {\n      this.expectPlugin(\"moduleAttributes\");\n      this.next();\n    } else {\n      if (this.hasPlugin(\"moduleAttributes\")) return [];\n      return null;\n    }\n    const attrs = [];\n    const attributes = new Set();\n    do {\n      const node = this.startNode();\n      node.key = this.parseIdentifier(true);\n\n      if (node.key.name !== \"type\") {\n        this.raise(Errors.ModuleAttributeDifferentFromType, {\n          at: node.key,\n        });\n      }\n\n      if (attributes.has(node.key.name)) {\n        this.raise(Errors.ModuleAttributesWithDuplicateKeys, {\n          at: node.key,\n          key: node.key.name,\n        });\n      }\n      attributes.add(node.key.name);\n      this.expect(tt.colon);\n      if (!this.match(tt.string)) {\n        throw this.raise(Errors.ModuleAttributeInvalidValue, {\n          at: this.state.startLoc,\n        });\n      }\n      node.value = this.parseStringLiteral(this.state.value);\n      this.finishNode(node, \"ImportAttribute\");\n      attrs.push(node);\n    } while (this.eat(tt.comma));\n\n    return attrs;\n  }\n\n  maybeParseImportAssertions() {\n    // [no LineTerminator here] AssertClause\n    if (this.isContextual(tt._assert) && !this.hasPrecedingLineBreak()) {\n      this.expectPlugin(\"importAssertions\");\n      this.next(); // eat `assert`\n    } else {\n      if (this.hasPlugin(\"importAssertions\")) return [];\n      return null;\n    }\n    // https://tc39.es/proposal-import-assertions/#prod-AssertClause\n    this.eat(tt.braceL);\n    const attrs = this.parseAssertEntries();\n    this.eat(tt.braceR);\n\n    return attrs;\n  }\n\n  maybeParseDefaultImportSpecifier(node: Undone<N.ImportDeclaration>): boolean {\n    if (this.shouldParseDefaultImport(node)) {\n      // import defaultObj, { x, y as z } from '...'\n      this.parseImportSpecifierLocal(\n        node,\n        this.startNode<N.ImportDefaultSpecifier>(),\n        \"ImportDefaultSpecifier\",\n      );\n      return true;\n    }\n    return false;\n  }\n\n  maybeParseStarImportSpecifier(node: Undone<N.ImportDeclaration>): boolean {\n    if (this.match(tt.star)) {\n      const specifier = this.startNode<N.ImportNamespaceSpecifier>();\n      this.next();\n      this.expectContextual(tt._as);\n\n      this.parseImportSpecifierLocal(\n        node,\n        specifier,\n        \"ImportNamespaceSpecifier\",\n      );\n      return true;\n    }\n    return false;\n  }\n\n  parseNamedImportSpecifiers(node: Undone<N.ImportDeclaration>) {\n    let first = true;\n    this.expect(tt.braceL);\n    while (!this.eat(tt.braceR)) {\n      if (first) {\n        first = false;\n      } else {\n        // Detect an attempt to deep destructure\n        if (this.eat(tt.colon)) {\n          throw this.raise(Errors.DestructureNamedImport, {\n            at: this.state.startLoc,\n          });\n        }\n\n        this.expect(tt.comma);\n        if (this.eat(tt.braceR)) break;\n      }\n\n      const specifier = this.startNode<N.ImportSpecifier>();\n      const importedIsString = this.match(tt.string);\n      const isMaybeTypeOnly = this.isContextual(tt._type);\n      specifier.imported = this.parseModuleExportName();\n      const importSpecifier = this.parseImportSpecifier(\n        specifier,\n        importedIsString,\n        node.importKind === \"type\" || node.importKind === \"typeof\",\n        isMaybeTypeOnly,\n      );\n      node.specifiers.push(importSpecifier);\n    }\n  }\n\n  // https://tc39.es/ecma262/#prod-ImportSpecifier\n  parseImportSpecifier(\n    specifier: Undone<N.ImportSpecifier>,\n    importedIsString: boolean,\n    /* eslint-disable @typescript-eslint/no-unused-vars -- used in TypeScript and Flow parser */\n    isInTypeOnlyImport: boolean,\n    isMaybeTypeOnly: boolean,\n    /* eslint-enable @typescript-eslint/no-unused-vars */\n  ): N.ImportSpecifier {\n    if (this.eatContextual(tt._as)) {\n      specifier.local = this.parseIdentifier();\n    } else {\n      const { imported } = specifier;\n      if (importedIsString) {\n        throw this.raise(Errors.ImportBindingIsString, {\n          at: specifier,\n          importName: (imported as N.StringLiteral).value,\n        });\n      }\n      this.checkReservedWord(\n        (imported as N.Identifier).name,\n        specifier.loc.start,\n        true,\n        true,\n      );\n      if (!specifier.local) {\n        specifier.local = cloneIdentifier(imported);\n      }\n    }\n    return this.finishImportSpecifier(specifier, \"ImportSpecifier\");\n  }\n\n  // This is used in flow and typescript plugin\n  // Determine whether a parameter is a this param\n  isThisParam(\n    param: N.Pattern | N.Identifier | N.TSParameterProperty,\n  ): boolean {\n    return param.type === \"Identifier\" && param.name === \"this\";\n  }\n}\n","import type { Options } from \"../options\";\nimport type { File, Program /*::, JSXOpeningElement */ } from \"../types\";\nimport type { PluginList } from \"../plugin-utils\";\nimport { getOptions } from \"../options\";\nimport StatementParser from \"./statement\";\nimport ScopeHandler from \"../util/scope\";\n\nexport type PluginsMap = Map<\n  string,\n  {\n    [x: string]: any;\n  }\n>;\n\nexport default class Parser extends StatementParser {\n  // Forward-declaration so typescript plugin can override jsx plugin\n  /*::\n  +jsxParseOpeningElementAfterName: (\n    node: JSXOpeningElement,\n  ) => JSXOpeningElement;\n  */\n\n  constructor(options: Options | undefined | null, input: string) {\n    options = getOptions(options);\n    super(options, input);\n\n    this.options = options;\n    this.initializeScopes();\n    this.plugins = pluginsMap(this.options.plugins);\n    this.filename = options.sourceFilename;\n  }\n\n  // This can be overwritten, for example, by the TypeScript plugin.\n  getScopeHandler(): {\n    new (...args: any): ScopeHandler<any>;\n  } {\n    return ScopeHandler;\n  }\n\n  parse(): File {\n    this.enterInitialScopes();\n    const file = this.startNode() as File;\n    const program = this.startNode() as Program;\n    this.nextToken();\n    file.errors = null;\n    this.parseTopLevel(file, program);\n    file.errors = this.state.errors;\n    return file;\n  }\n}\n\nfunction pluginsMap(plugins: PluginList): PluginsMap {\n  const pluginMap: PluginsMap = new Map();\n  for (const plugin of plugins) {\n    const [name, options] = Array.isArray(plugin) ? plugin : [plugin, {}];\n    if (!pluginMap.has(name)) pluginMap.set(name, options || {});\n  }\n  return pluginMap;\n}\n","import { type Options } from \"./options\";\nimport {\n  hasPlugin,\n  validatePlugins,\n  mixinPluginNames,\n  mixinPlugins,\n  type PluginList,\n} from \"./plugin-utils\";\nimport type {\n  PluginConfig as ParserPlugin,\n  FlowPluginOptions,\n  RecordAndTuplePluginOptions,\n  PipelineOperatorPluginOptions,\n} from \"./typings\";\nimport Parser from \"./parser\";\n\nimport {\n  ExportedTokenType,\n  getExportedToken,\n  tt as internalTokenTypes,\n  type InternalTokenTypes,\n} from \"./tokenizer/types\";\nimport \"./tokenizer/context\";\n\nimport type { Expression, File } from \"./types\";\n\nexport function parse(input: string, options?: Options): File {\n  if (options?.sourceType === \"unambiguous\") {\n    options = {\n      ...options,\n    };\n    try {\n      options.sourceType = \"module\";\n      const parser = getParser(options, input);\n      const ast = parser.parse();\n\n      if (parser.sawUnambiguousESM) {\n        return ast;\n      }\n\n      if (parser.ambiguousScriptDifferentAst) {\n        // Top level await introduces code which can be both a valid script and\n        // a valid module, but which produces different ASTs:\n        //    await\n        //    0\n        // can be parsed either as an AwaitExpression, or as two ExpressionStatements.\n        try {\n          options.sourceType = \"script\";\n          return getParser(options, input).parse();\n        } catch {}\n      } else {\n        // This is both a valid module and a valid script, but\n        // we parse it as a script by default\n        ast.program.sourceType = \"script\";\n      }\n\n      return ast;\n    } catch (moduleError) {\n      try {\n        options.sourceType = \"script\";\n        return getParser(options, input).parse();\n      } catch {}\n\n      throw moduleError;\n    }\n  } else {\n    return getParser(options, input).parse();\n  }\n}\n\nexport function parseExpression(input: string, options?: Options): Expression {\n  const parser = getParser(options, input);\n  if (parser.options.strictMode) {\n    parser.state.strict = true;\n  }\n  return parser.getExpression();\n}\n\nfunction generateExportedTokenTypes(\n  internalTokenTypes: InternalTokenTypes,\n): Record<string, ExportedTokenType> {\n  const tokenTypes: Record<string, ExportedTokenType> = {};\n  for (const typeName of Object.keys(internalTokenTypes)) {\n    tokenTypes[typeName] = getExportedToken(internalTokenTypes[typeName]);\n  }\n  return tokenTypes;\n}\n\nexport const tokTypes = generateExportedTokenTypes(internalTokenTypes);\n\nfunction getParser(options: Options | undefined | null, input: string): Parser {\n  let cls = Parser;\n  if (options?.plugins) {\n    validatePlugins(options.plugins);\n    cls = getParserClass(options.plugins);\n  }\n\n  return new cls(options, input);\n}\n\nconst parserClassCache: { [key: string]: { new (...args: any): Parser } } = {};\n\n/** Get a Parser class with plugins applied. */\nfunction getParserClass(pluginsFromOptions: PluginList): {\n  new (...args: any): Parser;\n} {\n  const pluginList = mixinPluginNames.filter(name =>\n    hasPlugin(pluginsFromOptions, name),\n  );\n\n  const key = pluginList.join(\"/\");\n  let cls = parserClassCache[key];\n  if (!cls) {\n    cls = Parser;\n    for (const plugin of pluginList) {\n      cls = mixinPlugins[plugin](cls);\n    }\n    parserClassCache[key] = cls;\n  }\n  return cls;\n}\n\nexport type {\n  FlowPluginOptions,\n  ParserPlugin,\n  PipelineOperatorPluginOptions,\n  RecordAndTuplePluginOptions,\n};\nexport type ParserOptions = Partial<Options>;\n","import {\r\n  Observable,\r\n  combineLatestWith,\r\n  map,\r\n  catchError,\r\n  shareReplay,\r\n} from 'rxjs';\r\nimport { getDevicesFromProps, resolveValue } from './devices-props';\r\nimport { HomeAssistantDataAccess } from './home-assistant-data-access';\r\nimport { getAllDevices$ } from './repo/devices';\r\nimport { logging } from './utils/logging';\r\n\r\ninterface IDeviceV2 {\r\n  id: string;\r\n  status: { [key: string]: any };\r\n  subs: { [key: string]: any };\r\n}\r\n\r\nconst getDeviceSubsV2 = (device: {\r\n  [prop: string]: string;\r\n}): { [key: string]: any } =>\r\n  Object.keys(device).reduce<{ [key: string]: any }>((acc, x) => {\r\n    const list = getDevicesFromProps(device[x]);\r\n\r\n    if (list) {\r\n      list.forEach((item) => {\r\n        const key = `${item.domain}.${item.name}`;\r\n        acc[key] = true;\r\n      });\r\n    }\r\n    return acc;\r\n  }, {});\r\n\r\nexport const getDeviceStatusV2$ = (socket: HomeAssistantDataAccess) =>\r\n  new Observable<{ [key: string]: any }>((obs) => {\r\n    let devicesState: { [key: string]: any } = {};\r\n    const entitesState: { [key: string]: any } = {};\r\n\r\n    const getDevices$: Observable<{\r\n      devices: IDeviceV2[];\r\n      allSubs: { [key: string]: any };\r\n    }> = getAllDevices$().pipe(\r\n      map((devices) => {\r\n        return devices.map((device) => {\r\n          const subs = getDeviceSubsV2(device.states);\r\n\r\n          return {\r\n            id: device.id,\r\n            status: device.states,\r\n            subs,\r\n          };\r\n        });\r\n      }),\r\n      map((deviceSubs) => {\r\n        return {\r\n          devices: deviceSubs,\r\n          allSubs: deviceSubs.reduce<{ [key: string]: any }>((acc, i) => {\r\n            acc = { ...(acc || {}), ...i.subs };\r\n            return acc;\r\n          }, {}),\r\n        };\r\n      })\r\n    );\r\n\r\n    const entityStatus$ = getDevices$\r\n      .pipe(\r\n        combineLatestWith(socket.getEntityStatus()),\r\n        map(([devices, entites]) => {\r\n          entites.forEach((x) => {\r\n            if (!x || !x.entity_id) {\r\n              logging.error('getEntityStatus() entites empty');\r\n              return;\r\n            }\r\n            const [domain, name] = x.entity_id.split('.');\r\n            entitesState[domain] = { ...(entitesState[domain] || {}) };\r\n            entitesState[domain][name] = {\r\n              state: x.state,\r\n            };\r\n            // TODO: Remove Attribute mapping\r\n            Object.keys(x.attributes).forEach((a) => {\r\n              entitesState[domain][name][a] = x.attributes[a];\r\n            });\r\n            entitesState[domain][name]['attributes'] = { ...x.attributes };\r\n          });\r\n\r\n          return devices.devices.reduce<{ [key: string]: any }>((acc, y) => {\r\n            acc[y.id] = Object.keys(y.status).reduce<{ [key: string]: any }>(\r\n              (acc2, i) => ({\r\n                ...acc2,\r\n                [i]: resolveValue(y.status[i], entitesState),\r\n              }),\r\n              {}\r\n            );\r\n            return acc;\r\n          }, {});\r\n        }),\r\n        catchError((err, caught) => {\r\n          logging.error('getEntityStatus()', err);\r\n          return caught;\r\n        })\r\n      )\r\n      .subscribe({\r\n        next: (msg) => {\r\n          devicesState = msg;\r\n          obs.next(devicesState);\r\n        },\r\n      });\r\n\r\n    const entityStatusUpdated$ = getDevices$\r\n      .pipe(\r\n        combineLatestWith(socket.getEntityStatusUpdated()),\r\n        map(([devices, update]) => {\r\n          let found = false;\r\n\r\n          if (!update || update.entity_id === undefined) {\r\n            return {\r\n              found: false,\r\n              devices: {},\r\n            };\r\n          }\r\n\r\n          if (update.entity_id in devices.allSubs) {\r\n            logging.info(`got update for ${update.entity_id}`);\r\n            found = true;\r\n\r\n            const [domain, name] = update.entity_id.split('.');\r\n            entitesState[domain] = { ...(entitesState[domain] || {}) };\r\n            entitesState[domain][name] = {\r\n              state: update.state,\r\n            };\r\n            // TODO: Remove Attribute mapping\r\n            Object.keys(update.attributes).forEach((a) => {\r\n              entitesState[domain][name][a] = update.attributes[a];\r\n            });\r\n            entitesState[domain][name]['attributes'] = { ...update.attributes };\r\n          }\r\n\r\n          let updatedDevices: { [key: string]: any } = {};\r\n\r\n          if (found) {\r\n            updatedDevices = devices.devices.reduce<{\r\n              [key: string]: any;\r\n            }>((acc, y) => {\r\n              acc[y.id] = Object.keys(y.status).reduce<{\r\n                [key: string]: any;\r\n              }>(\r\n                (acc2, i) => ({\r\n                  ...acc2,\r\n                  [i]: resolveValue(y.status[i], entitesState),\r\n                }),\r\n                {}\r\n              );\r\n              return acc;\r\n            }, {});\r\n          }\r\n\r\n          return {\r\n            devices: updatedDevices,\r\n            found,\r\n          };\r\n        }),\r\n        catchError((err, caught) => {\r\n          logging.error('getEntityStatusUpdated()', err);\r\n          return caught;\r\n        })\r\n      )\r\n      .subscribe({\r\n        next: (msg) => {\r\n          if (msg.found) {\r\n            if (JSON.stringify(devicesState) !== JSON.stringify(msg.devices)) {\r\n              devicesState = msg.devices;\r\n              obs.next(devicesState);\r\n            } else {\r\n              logging.debug('Device state has not changed');\r\n            }\r\n          }\r\n        },\r\n      });\r\n\r\n    return () => {\r\n      console.warn('unsub');\r\n      entityStatus$.unsubscribe();\r\n      entityStatusUpdated$.unsubscribe();\r\n    };\r\n  }).pipe(shareReplay(1));\r\n","import { parse } from '@babel/parser';\r\nimport { ExpressionStatement, Identifier, Program, Node } from '@babel/types';\r\nimport { logging } from './utils/logging';\r\n\r\nexport interface DeviceFromProps {\r\n  domain: string;\r\n  name: string;\r\n  prop: string;\r\n}\r\n\r\nconst cleanSwitchDomain = (v: string): string =>\r\n  v.replace('switch.', '__switch.');\r\n\r\nconst restoreSwitchDomain = (v: string): string =>\r\n  v.replace('__switch', 'switch');\r\n\r\nconst fn: { [key: string]: (...args: any[]) => any } = {\r\n  equals: (...args: any[]) => {\r\n    // console.log('equals', args);\r\n    return args[0] === args[1];\r\n  },\r\n  toNum: (...args: any[]) => {\r\n    // console.log('toNum', args[0]);\r\n    return parseFloat(args[0]);\r\n  },\r\n  toInt: (...args: any[]) => {\r\n    // console.log('toInt', args[0]);\r\n    return parseInt(args[0]);\r\n  },\r\n};\r\n\r\nconst resolveType = (node: Node, object: any, resolve: boolean): any => {\r\n  if (node.type === 'StringLiteral') {\r\n    return node.value;\r\n  }\r\n\r\n  if (node.type === 'NumericLiteral') {\r\n    return node.value;\r\n  }\r\n\r\n  if (node.type === 'MemberExpression') {\r\n    const o = resolveType(node.object, object, resolve);\r\n    const p = resolveType(node.property, object, resolve);\r\n    if (resolve) {\r\n      const r = typeof o === 'string' ? object[o][p] : o[p];\r\n      return r;\r\n    }\r\n\r\n    if (typeof o === 'string') {\r\n      object[o] = {};\r\n      object[o][p] = {};\r\n      return object[o][p];\r\n    }\r\n\r\n    return (o[p] = {});\r\n  }\r\n\r\n  if (node.type === 'Identifier') {\r\n    return restoreSwitchDomain(node.name);\r\n  }\r\n\r\n  if (node.type === 'CallExpression') {\r\n    return fn[(node.callee as Identifier).name](\r\n      ...resolveTypes(node.arguments, object, resolve)\r\n    );\r\n  }\r\n\r\n  if (node.type === 'BooleanLiteral') {\r\n    return node.value;\r\n  }\r\n\r\n  logging.error('unknown resolveType', node.type, node);\r\n};\r\n\r\nconst resolveTypes = (nodes: Node[], object: any, resolve: boolean): any[] => {\r\n  return nodes.map((x) => resolveType(x, object, resolve));\r\n};\r\n\r\nexport const resolveValue = (value: string, object: any) => {\r\n  const ast = parse(cleanSwitchDomain(value), {\r\n    sourceType: 'module',\r\n    plugins: [],\r\n  });\r\n\r\n  const body = (ast.program as Program).body;\r\n\r\n  const expressionStatement: ExpressionStatement[] = body.filter(\r\n    (x) => x.type === 'ExpressionStatement'\r\n  ) as ExpressionStatement[];\r\n\r\n  const results = expressionStatement.map((x) => {\r\n    const expression = x.expression;\r\n    return resolveType(expression, object, true);\r\n  });\r\n  return results[0];\r\n};\r\n\r\nconst findReferances = (value: string): { [key: string]: any } => {\r\n  const object = {};\r\n  const ast = parse(value, {\r\n    sourceType: 'module',\r\n    plugins: [],\r\n  });\r\n\r\n  const body = (ast.program as Program).body;\r\n\r\n  const expressionStatement: ExpressionStatement[] = body.filter(\r\n    (x) => x.type === 'ExpressionStatement'\r\n  ) as ExpressionStatement[];\r\n\r\n  expressionStatement.forEach((x) => {\r\n    const expression = x.expression;\r\n    resolveType(expression, object, false);\r\n  });\r\n  return object;\r\n};\r\n\r\nexport const getDevicesFromProps = (\r\n  stringOrExpression: string\r\n): DeviceFromProps[] | undefined => {\r\n  const deviceProp = cleanSwitchDomain(stringOrExpression);\r\n\r\n  const referances = findReferances(deviceProp);\r\n\r\n  // console.log('getDevicesFromProps.referances', referances);\r\n\r\n  if (!referances) {\r\n    return;\r\n  }\r\n\r\n  const results: DeviceFromProps[] = [];\r\n\r\n  Object.keys(referances).forEach((d) => {\r\n    Object.keys(referances[d]).forEach((e) => {\r\n      Object.keys(referances[d][e]).forEach((p) => {\r\n        results.push({\r\n          domain: restoreSwitchDomain(d),\r\n          name: e,\r\n          prop: p,\r\n        });\r\n      });\r\n    });\r\n  });\r\n\r\n  return results;\r\n};\r\n","import chalk from 'chalk';\r\n\r\nconst l = (v: string, ...parms: any[]) => console.log(v, ...parms);\r\n\r\nconst info = () => `[${new Date().toLocaleString()}]`;\r\n\r\nexport const LoggingLevel = {\r\n  Debug: 0,\r\n  Info: 1,\r\n  Warn: 2,\r\n  Error: 3,\r\n} as const;\r\n\r\nlet logLevel = LoggingLevel.Debug;\r\n\r\nexport const setLogLevel = (level: string) => {\r\n  console.log('Setting Log Level', level);\r\n  logLevel = (LoggingLevel as any)[level] || LoggingLevel.Debug;\r\n};\r\n\r\nexport const logging = {\r\n  error: (msg: string, ...parms: any[]) => {\r\n    l(chalk.red(info(), 'ERROR:', msg), ...parms);\r\n  },\r\n\r\n  warn: (msg: string, ...parms: any[]) => {\r\n    if (logLevel <= 2) {\r\n      l(chalk.yellow(info(), 'WARNING:', msg), ...parms);\r\n    }\r\n  },\r\n  log: (msg: string, ...parms: any[]) => {\r\n    if (logLevel <= 1) {\r\n      l(chalk.green(info(), 'LOG:', msg), ...parms);\r\n    }\r\n  },\r\n  info: (msg: string, ...parms: any[]) => {\r\n    if (logLevel <= 1) {\r\n      l(chalk.green(info(), 'INFO:', msg), ...parms);\r\n    }\r\n  },\r\n  debug: (msg: string, ...parms: any[]) => {\r\n    if (logLevel <= 0) {\r\n      l(chalk.gray(info(), 'DEBUG:', msg), ...parms);\r\n    }\r\n  },\r\n};\r\n","import { logging } from '../utils/logging';\r\nimport { firstValueFrom, map, Observable, shareReplay } from 'rxjs';\r\nimport { fileStore$, writeToFile } from './base';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nconst getDeviceDehumidifier = () => ({\r\n  // online: true,\r\n  on: `equals(switch.kogan_8.state, 'on')`,\r\n  currentFanSpeedSetting: 'low_key',\r\n  humiditySetpointPercent: '40',\r\n  humidityAmbientPercent: 'toInt(sensor.d1_mini_3_humidity.state)',\r\n});\r\n\r\nconst getDeviceClimate = (deviceName: string) => ({\r\n  thermostatMode: `climate.${deviceName}_climate.state`,\r\n  thermostatTemperatureSetpoint: `toInt(climate.${deviceName}_climate.temperature)`,\r\n  thermostatTemperatureAmbient: `toInt(sensor.${deviceName}_temperature.state)`,\r\n  thermostatHumidityAmbient: `toInt(sensor.${deviceName}_humidity.state)`,\r\n});\r\n\r\nexport interface IDevice {\r\n  id: string;\r\n  name: string;\r\n  room?: string;\r\n  states: { [prop: string]: string };\r\n  attributes: { [prop: string]: string };\r\n  traits: string[];\r\n  deviceType: string;\r\n}\r\n\r\nlet base$: Observable<{ [id: string]: IDevice }>;\r\nlet save: (devices: { [id: string]: IDevice }) => Promise<void>;\r\n\r\nexport const getAllDevices$ = (): Observable<IDevice[]> => {\r\n  return base$.pipe(map((x) => Object.values(x)));\r\n};\r\n\r\nexport const getDeviceById$ = (id: string): Observable<IDevice | undefined> => {\r\n  return getAllDevices$().pipe(map((x) => x.find((x) => x.id === id)));\r\n};\r\n\r\nexport const updateDevice = async (id: string, device: Partial<IDevice>) => {\r\n  const currentDevice = await firstValueFrom(getDeviceById$(id));\r\n  if (currentDevice) {\r\n    const d = { ...currentDevice, ...device };\r\n    const all = await firstValueFrom(base$);\r\n    all[id] = d;\r\n    await save(all);\r\n  } else {\r\n    logging.error('updateDevice failed, device does not exist');\r\n  }\r\n};\r\n\r\nexport const createDevice = async (device: IDevice) => {\r\n  const all = (await firstValueFrom(base$)) || {};\r\n  device.id = device.id || uuidv4();\r\n  all[device.id] = device;\r\n  await save(all);\r\n};\r\n\r\nexport const deleteDevice = async (id: string) => {\r\n  const all = (await firstValueFrom(base$)) || {};\r\n  delete all[id];\r\n  await save(all);\r\n};\r\n\r\nexport const importDevice = async (devices: { [id: string]: IDevice }) => {\r\n  await save(devices);\r\n};\r\n\r\nexport const init = (fileName: string) => {\r\n  if (base$) {\r\n    logging.warn('Devices already ready to run');\r\n    return;\r\n  }\r\n\r\n  base$ = fileStore$(fileName).pipe(\r\n    map((x) => {\r\n      const d = x ? (JSON.parse(x) as { [id: string]: IDevice }) : {};\r\n      logging.debug('file output', x, d);\r\n      return d;\r\n    }),\r\n    shareReplay(1)\r\n  );\r\n\r\n  save = async (devices: { [id: string]: IDevice }) => {\r\n    return writeToFile(fileName, JSON.stringify(devices));\r\n  };\r\n\r\n  firstValueFrom(base$).then((devices) => {\r\n    logging.debug('Checking file', devices);\r\n    if (!devices || Object.keys(devices).length === 0) {\r\n      //   d1_mini_4: getDeviceClimate('d1_mini_4'),\r\n      // d1_mini_3: getDeviceClimate('d1_mini_3'),\r\n      // wroom_32_1: getDeviceClimate('wroom_32_1'),\r\n      // dehumidifier: getDeviceDehumidifier(),\r\n\r\n      const mockClimate = ['d1_mini_4', 'd1_mini_3', 'wroom_32_1'];\r\n      const mockDehumidifier = ['dehumidifier'];\r\n\r\n      mockClimate.forEach((x) => {\r\n        const d: IDevice = {\r\n          id: uuidv4(),\r\n          name: x,\r\n          states: getDeviceClimate(x),\r\n          attributes: {},\r\n          deviceType: 'action.devices.types.THERMOSTAT',\r\n          traits: ['action.devices.traits.TemperatureSetting'],\r\n        };\r\n        createDevice(d);\r\n      });\r\n\r\n      mockDehumidifier.forEach((x) => {\r\n        const d: IDevice = {\r\n          id: uuidv4(),\r\n          name: x,\r\n          states: getDeviceDehumidifier(),\r\n          attributes: {},\r\n          deviceType: 'action.devices.types.DEHUMIDIFIER',\r\n          traits: ['action.devices.traits.OnOff'],\r\n        };\r\n        createDevice(d);\r\n      });\r\n\r\n      // const d: IDevice = {\r\n      //   id: uuidv4(),\r\n      //   name: 'demo',\r\n      //   states: {},\r\n      //   attributes: {},\r\n      //   deviceType: 'action.devices.types.SWITCH',\r\n      //   traits: ['action.devices.traits.OnOff'],\r\n      // };\r\n      // createDevice(d);\r\n    }\r\n  });\r\n};\r\n","import { Observable } from 'rxjs';\r\nimport { watchFile, unwatchFile, writeFileSync, existsSync } from 'fs';\r\nimport { writeFile, readFile } from 'fs/promises';\r\nimport { logging } from '../utils/logging';\r\n\r\nexport const fileStore$ = (fileName: string): Observable<string> => {\r\n  logging.log(`fileStore$ ${fileName}`);\r\n\r\n  if (!existsSync(fileName)) {\r\n    logging.debug(`File does not exist ${fileName}`);\r\n    writeFileSync(fileName, '', 'utf8');\r\n  } else {\r\n    logging.debug(`File exists ${fileName}`);\r\n  }\r\n\r\n  return new Observable((obs) => {\r\n    logging.debug(`creating watch on ${fileName}`);\r\n\r\n    readFile(fileName, 'utf8').then((x) => {\r\n      obs.next(x);\r\n    });\r\n\r\n    watchFile(fileName, () => {\r\n      logging.log(`file Changed ${fileName}`);\r\n      readFile(fileName, 'utf8').then((x) => {\r\n        obs.next(x);\r\n      });\r\n    });\r\n\r\n    // logging.debug('File watcher', watcher);\r\n\r\n    return () => unwatchFile(fileName);\r\n  });\r\n};\r\n\r\nexport const readToFile = (fileName: string) => {\r\n  return readFile(fileName, 'utf8');\r\n};\r\n\r\nexport const writeToFile = async (fileName: string, contents: string) => {\r\n  return writeFile(fileName, contents, 'utf8');\r\n};\r\n","import { ReplaySubject } from 'rxjs';\r\nimport { webSocket, WebSocketSubject } from 'rxjs/webSocket';\r\nimport { logging } from './utils/logging';\r\n\r\nexport interface IMassageBase {\r\n  type: string;\r\n  id?: number;\r\n  access_token?: string;\r\n  success?: boolean;\r\n  event?: {\r\n    event_type?: string;\r\n  };\r\n  event_type?: string;\r\n}\r\n\r\nexport class HomeAssistantWebSocket {\r\n  private webSocketSubject!: WebSocketSubject<IMassageBase>;\r\n\r\n  private homeAssistantResult: ReplaySubject<IMassageBase> = new ReplaySubject(\r\n    1\r\n  );\r\n\r\n  private subscribedMessages: IMassageBase[] = [];\r\n\r\n  constructor(private url: string, private token: string) {\r\n    this.initWebSocket();\r\n  }\r\n\r\n  initWebSocket() {\r\n    this.webSocketSubject = webSocket<IMassageBase>({\r\n      url: this.url,\r\n      closeObserver: {\r\n        next: () => {\r\n          logging.error('Home Assistant Web Socket Closed');\r\n          setTimeout(() => {\r\n            logging.debug('Re connecting');\r\n            this.initWebSocket();\r\n          }, 5000);\r\n        },\r\n      },\r\n    });\r\n\r\n    this.webSocketSubject.subscribe({\r\n      next: (msg) => {\r\n        this.processMessage(msg);\r\n      },\r\n      error: () => {\r\n        logging.error('HomeAssistantWebSocket ws error');\r\n        this.webSocketSubject.complete();\r\n      },\r\n      complete: () => {\r\n        logging.warn('webSocket completed');\r\n      },\r\n    });\r\n  }\r\n\r\n  messages() {\r\n    return this.homeAssistantResult.asObservable();\r\n  }\r\n\r\n  next(massageBase: IMassageBase) {\r\n    this.subscribedMessages.push(massageBase);\r\n\r\n    if (!this.webSocketSubject) {\r\n      this.initWebSocket();\r\n    } else {\r\n      logging.debug('Adding Messages - WS Open', massageBase);\r\n      this.webSocketSubject.next(massageBase);\r\n    }\r\n  }\r\n\r\n  private processMessage(msg: IMassageBase) {\r\n    if (msg.type === 'auth_required') {\r\n      this.webSocketSubject.next({\r\n        type: 'auth',\r\n        access_token: this.token,\r\n      });\r\n    } else if (msg.type === 'auth_ok') {\r\n      this.subscribedMessages.forEach((m) => {\r\n        logging.debug('Adding Messages', m);\r\n        this.webSocketSubject.next(m);\r\n      });\r\n    } else if (msg.type === 'result') {\r\n      this.homeAssistantResult.next(msg);\r\n    } else if (msg.type === 'event') {\r\n      this.homeAssistantResult.next(msg);\r\n    } else if (msg.type === 'auth_invalid') {\r\n      logging.error('Auth Error', (msg as any).message);\r\n      logging.info('Token', {\r\n        token: this.token,\r\n        url: this.url,\r\n      });\r\n    } else {\r\n      logging.warn('processMessage unknown', msg);\r\n    }\r\n  }\r\n}\r\n","import { IHomeAssistantArea, IHomeAssistantDevice, IHomeAssistantEntity, IHomeAssistantEntityStatus, IHomeAssistantService } from './home-assistant-entities';\r\nimport { Observable, filter, map, shareReplay } from 'rxjs';\r\nimport { HomeAssistantWebSocket, IMassageBase } from './home-assistant-web-socket';\r\n\r\nexport class HomeAssistantDataAccess {\r\n  private homeAssistantWebSocket: HomeAssistantWebSocket;\r\n\r\n  private entityStatus?: Observable<IHomeAssistantEntityStatus[]>;\r\n  private entityStatusUpdated?: Observable<IHomeAssistantEntityStatus>;\r\n\r\n  private areas?: Observable<IHomeAssistantArea[]>;\r\n  private entities?: Observable<IHomeAssistantEntity[]>;\r\n  private devices?: Observable<IHomeAssistantDevice[]>;\r\n  private services?: Observable<IHomeAssistantService>\r\n\r\n  private counter = 1;\r\n\r\n  constructor(private url: string, private token: string) {\r\n    this.homeAssistantWebSocket = new HomeAssistantWebSocket(url, token);\r\n  }\r\n\r\n  getEntityStatus(): Observable<IHomeAssistantEntityStatus[]> {\r\n    if (!this.entityStatus) {\r\n      this.entityStatus = this.createSubScription(\r\n        {\r\n          id: this.counter,\r\n          type: 'get_states'\r\n        },\r\n        this.counter++\r\n      ).pipe(\r\n        map(msg => {\r\n          return (msg as any).result as IHomeAssistantEntityStatus[];\r\n        }),\r\n        shareReplay(1)\r\n      );\r\n    }\r\n    return this.entityStatus;\r\n  }\r\n\r\n  getEntityStatusUpdated(): Observable<IHomeAssistantEntityStatus> {\r\n    if (!this.entityStatusUpdated) {\r\n      this.entityStatusUpdated = this.createSubScription(\r\n        {\r\n          id: this.counter,\r\n          type: 'subscribe_events',\r\n          event_type: 'state_changed'\r\n        },\r\n        this.counter++\r\n      ).pipe(\r\n        filter(x => x.event?.event_type === 'state_changed'),\r\n        map(msg => {\r\n          return (msg as any).event.data\r\n            .new_state as IHomeAssistantEntityStatus;\r\n        }),\r\n        shareReplay(1)\r\n      );\r\n    }\r\n    return this.entityStatusUpdated;\r\n  }\r\n\r\n  getAreas() {\r\n    if (!this.areas) {\r\n      this.areas = this.createSubScription(\r\n        {\r\n          id: this.counter,\r\n          type: 'config/area_registry/list'\r\n        },\r\n        this.counter++\r\n      ).pipe(\r\n        map(msg => {\r\n          return (msg as any).result as IHomeAssistantArea[];\r\n        }),\r\n        shareReplay(1)\r\n      );\r\n    }\r\n\r\n    return this.areas;\r\n  }\r\n\r\n  getEntities() {\r\n    if (!this.entities) {\r\n      this.entities = this.createSubScription(\r\n        {\r\n          id: this.counter,\r\n          type: 'config/entity_registry/list'\r\n        },\r\n        this.counter++\r\n      ).pipe(\r\n        map(msg => {\r\n          return (msg as any).result as IHomeAssistantEntity[];\r\n        }),\r\n        shareReplay(1)\r\n      );\r\n    }\r\n\r\n    return this.entities;\r\n  }\r\n\r\n  getServices(): Observable<IHomeAssistantService> {\r\n    if (!this.services) {\r\n      this.services = this.createSubScription(\r\n        {\r\n          id: this.counter,\r\n          type: 'get_services'\r\n        },\r\n        this.counter++\r\n      ).pipe(\r\n        map(msg => {\r\n          return (msg as any).result; // as IHomeAssistantEntity[];\r\n        }),\r\n        shareReplay(1)\r\n      );\r\n    }\r\n\r\n    return this.services;\r\n  }\r\n\r\n  getDevices() {\r\n    if (!this.devices) {\r\n      this.devices = this.createSubScription(\r\n        {\r\n          id: this.counter,\r\n          type: 'config/device_registry/list'\r\n        },\r\n        this.counter++\r\n      ).pipe(\r\n        map(msg => {\r\n          return (msg as any).result as IHomeAssistantDevice[];\r\n        }),\r\n        shareReplay(1)\r\n      );\r\n    }\r\n\r\n    return this.devices;\r\n  }\r\n\r\n  private createSubScription(iniMessage: IMassageBase, resultId: number) {\r\n    this.homeAssistantWebSocket.next(iniMessage);\r\n\r\n    return this.homeAssistantWebSocket\r\n      .messages()\r\n      .pipe(filter(x => x.id === resultId));\r\n  }\r\n}\r\n\r\nlet instance: HomeAssistantDataAccess;\r\n\r\nexport const getHomeAssistantDataAccess = (url: string, token: string) => {\r\n  if (!instance) {\r\n    instance = new HomeAssistantDataAccess(url, token);\r\n  }\r\n  return instance;\r\n};\r\n","// WARNING: This is not a drop in replacement solution and\r\n// it might not work for some edge cases. Test your code!\r\nexport const get = (obj: any, path: string | string[], defValue?: any) => {\r\n  // If path is not defined or it has false value\r\n  if (!path) return undefined;\r\n  // Check if path is string or array. Regex : ensure that we do not have '.' and brackets.\r\n  // Regex explained: https://regexr.com/58j0k\r\n  const pathArray = Array.isArray(path) ? path : path.match(/([^[.\\]])+/g);\r\n  // Find value\r\n  const result = (pathArray || []).reduce(\r\n    (prevObj, key) => prevObj && prevObj[key],\r\n    obj\r\n  );\r\n  // If found value is undefined return default value; otherwise return the value\r\n  return result === undefined ? defValue : result;\r\n};\r\n","import { IDeviceTraits } from \"./device-models\";\r\n\r\nexport const deviceTraits: { [trait: string]: IDeviceTraits } = {\r\n  'action.devices.traits.CameraStream': {\r\n    type: 'action.devices.traits.CameraStream',\r\n    humanName: 'CameraStream',\r\n    states: {},\r\n    attributes: {},\r\n    commands: [],\r\n  },\r\n  'action.devices.traits.TemperatureSetting': {\r\n    type: 'action.devices.traits.TemperatureSetting',\r\n    humanName: 'TemperatureSetting',\r\n    states: {\r\n      activeThermostatMode: {\r\n        type: 'string',\r\n        supportedValues: [\r\n          'off',\r\n          'heat',\r\n          'cool',\r\n          'on',\r\n          'heatcool',\r\n          'auto',\r\n          'fan-only',\r\n          'purifier',\r\n          'eco',\r\n          'dry',\r\n        ],\r\n        hint: 'Currently active mode of the device, from the list of availableThermostatModes. If no mode is currently active, set to none.',\r\n      },\r\n      targetTempReachedEstimateUnixTimestampSec: {\r\n        type: 'integer',\r\n        hint: 'A timestamp representing the estimated time when the target temperature will be reached.',\r\n      },\r\n      thermostatHumidityAmbient: {\r\n        type: 'number',\r\n        hint: 'Represents the relative level of the ambient humidity, if supported by the device.',\r\n      },\r\n      thermostatMode: {\r\n        type: 'string',\r\n        required: true,\r\n        supportedValues: [\r\n          'off',\r\n          'heat',\r\n          'cool',\r\n          'on',\r\n          'heatcool',\r\n          'auto',\r\n          'fan-only',\r\n          'purifier',\r\n          'eco',\r\n          'dry',\r\n        ],\r\n        hint: 'Current mode of the device, from the list of availableThermostatModes.',\r\n      },\r\n      thermostatTemperatureAmbient: {\r\n        type: 'number',\r\n        required: true,\r\n        hint: 'Current observed temperature, in degrees Celsius.',\r\n      },\r\n      thermostatTemperatureSetpoint: {\r\n        type: 'number',\r\n        required: true,\r\n        hint: 'Current temperature set point (single target), in degrees Celsius.',\r\n      },\r\n    },\r\n    attributes: {\r\n      availableThermostatModes: {\r\n        type: 'array',\r\n        required: true,\r\n        supportedValues: [\r\n          'off',\r\n          'heat',\r\n          'cool',\r\n          'on',\r\n          'heatcool',\r\n          'auto',\r\n          'fan-only',\r\n          'purifier',\r\n          'eco',\r\n          'dry',\r\n        ],\r\n        hint: 'Describes the thermostat modes this device can support.',\r\n      },\r\n      thermostatTemperatureRange: {\r\n        type: 'object',\r\n        hint: 'Contains two float values that indicate the supported temperature range for this device (in degrees Celsius).',\r\n      },\r\n      minThresholdCelsius: {\r\n        type: 'number',\r\n        required: true,\r\n        hint: 'Minimum threshold of the temperature range.',\r\n      },\r\n      maxThresholdCelsius: {\r\n        type: 'number',\r\n        required: true,\r\n        hint: 'Maximum threshold of the temperature range.',\r\n      },\r\n      thermostatTemperatureUnit: {\r\n        type: 'string',\r\n        required: true,\r\n        supportedValues: ['C', 'F'],\r\n        hint: 'The display unit the device is set to by default. Google reports temperature information using the display unit.',\r\n      },\r\n    },\r\n    commands: [\r\n      {\r\n        command: 'action.devices.commands.ThermostatTemperatureSetpoint',\r\n        params: {\r\n          thermostatTemperatureSetpoint: {\r\n            type: 'number',\r\n            hint: 'Target temperature setpoint. Supports up to one decimal place.',\r\n            required: true,\r\n          },\r\n        },\r\n      },\r\n      {\r\n        command: 'action.devices.commands.ThermostatTemperatureSetRange',\r\n        params: {\r\n          thermostatTemperatureSetpointHigh: {\r\n            type: 'number',\r\n            hint: 'High target setpoint for the range. Requires heatcool mode support.',\r\n            required: true,\r\n          },\r\n          thermostatTemperatureSetpointLow: {\r\n            type: 'number',\r\n            hint: 'Low target setpoint for the range. Requires heatcool mode support.',\r\n            required: true,\r\n          },\r\n        },\r\n      },\r\n      {\r\n        command: 'action.devices.commands.ThermostatSetMode',\r\n        params: {\r\n          thermostatMode: {\r\n            type: 'string',\r\n            hint: 'Target mode, from the list of availableThermostatModes.',\r\n            required: true,\r\n            supportedValues: [\r\n              'off',\r\n              'heat',\r\n              'cool',\r\n              'on',\r\n              'heatcool',\r\n              'auto',\r\n              'fan-only',\r\n              'purifier',\r\n              'eco',\r\n              'dry',\r\n            ],\r\n          },\r\n        },\r\n      },\r\n      {\r\n        command: 'action.devices.commands.TemperatureRelative',\r\n        params: {\r\n          thermostatTemperatureRelativeDegree: {\r\n            type: 'number',\r\n            hint: 'The exact number of degrees for the temperature to change (for example, \"Turn down 5 degrees\").',\r\n            required: true,\r\n          },\r\n          thermostatTemperatureRelativeWeight: {\r\n            type: 'integer',\r\n            hint: 'This indicates the amount of ambiguous temperature change from a small amount (\"Turn down a little\"), to a large amount (\"A lot warmer\").',\r\n            required: true,\r\n          },\r\n        },\r\n      },\r\n    ],\r\n  },\r\n  'action.devices.traits.OnOff': {\r\n    type: 'action.devices.traits.OnOff',\r\n    humanName: 'OnOff',\r\n    states: {\r\n      on: {\r\n        type: 'boolean',\r\n        required: true,\r\n        hint: 'Whether a device with an on/off switch is on or off.',\r\n      },\r\n    },\r\n    attributes: {\r\n      commandOnlyOnOff: {\r\n        type: 'boolean',\r\n        hint: 'Indicates if the device can only controlled through commands, and cannot be queried for state information.',\r\n      },\r\n      queryOnlyOnOff: {\r\n        type: 'boolean',\r\n        hint: 'Indicates if the device can only be queried for state information, and cannot be controlled through commands.',\r\n      },\r\n    },\r\n    commands: [\r\n      {\r\n        command: 'action.devices.commands.OnOff',\r\n        params: {\r\n          on: {\r\n            type: 'boolean',\r\n            required: true,\r\n            hint: 'Whether to turn the device on or off.',\r\n          },\r\n        },\r\n      },\r\n    ],\r\n  },\r\n  'action.devices.traits.Volume': {\r\n    type: 'action.devices.traits.Volume',\r\n    humanName: 'Volume',\r\n    states: {},\r\n    attributes: {},\r\n    commands: [],\r\n  },\r\n  'action.devices.traits.FanSpeed': {\r\n    type: 'action.devices.traits.FanSpeed',\r\n    humanName: 'FanSpeed',\r\n    states: {},\r\n    attributes: {},\r\n    commands: [],\r\n  },\r\n  'action.devices.traits.HumiditySetting': {\r\n    type: 'action.devices.traits.HumiditySetting',\r\n    humanName: 'HumiditySetting',\r\n    states: {},\r\n    attributes: {},\r\n    commands: [],\r\n  },\r\n  'action.devices.traits.StartStop': {\r\n    type: 'action.devices.traits.StartStop',\r\n    humanName: 'StartStop',\r\n    states: {\r\n      humiditySetpointPercent: {\r\n        type: 'integer',\r\n        hint: 'Indicates the current target humidity percentage of the device. Must fall within humiditySetpointRange.',\r\n      },\r\n      humidityAmbientPercent: {\r\n        type: 'integer',\r\n        hint: 'Indicates the current ambient humidity reading of the device as a percentage.',\r\n      },\r\n    },\r\n    attributes: {},\r\n    commands: [],\r\n  },\r\n};\r\n","import { IDeviceTraits, IDeviceType } from './device-models';\r\n\r\nexport const deviceTypes: IDeviceType[] = [\r\n  {\r\n    type: 'action.devices.types.CAMERA',\r\n    humanName: 'Camera',\r\n    attributes: {\r\n      cameraStreamSupportedProtocols: 'array',\r\n      cameraStreamNeedAuthToken: 'boolean',\r\n      cameraStreamNeedDrmEncryption: 'boolean',\r\n    },\r\n    traits: ['action.devices.traits.CameraStream'],\r\n  },\r\n  {\r\n    type: 'action.devices.types.THERMOSTAT',\r\n    humanName: 'Thermostat',\r\n    traits: ['action.devices.traits.TemperatureSetting'],\r\n  },\r\n  {\r\n    type: 'action.devices.types.SWITCH',\r\n    humanName: 'Switch',\r\n    traits: ['action.devices.traits.OnOff'],\r\n  },\r\n  {\r\n    type: 'action.devices.types.SPEAKER',\r\n    humanName: 'Speaker',\r\n    traits: ['action.devices.traits.Volume'],\r\n  },\r\n  {\r\n    type: 'action.devices.types.LIGHT',\r\n    humanName: 'Light',\r\n    traits: ['action.devices.traits.OnOff'],\r\n  },\r\n  {\r\n    type: 'action.devices.types.FAN',\r\n    humanName: 'Fan',\r\n    traits: ['action.devices.traits.OnOff'],\r\n  },\r\n  {\r\n    type: 'action.devices.types.MICROWAVE',\r\n    humanName: 'Microwave',\r\n    traits: ['action.devices.traits.OnOff'],\r\n  },\r\n  {\r\n    type: 'action.devices.types.COFFEE_MAKER',\r\n    humanName: 'Coffee Maker',\r\n    traits: ['action.devices.traits.OnOff'],\r\n  },\r\n  {\r\n    type: 'action.devices.types.AC_UNIT',\r\n    humanName: 'AC Unit',\r\n    traits: [],\r\n  },\r\n  {\r\n    type: 'action.devices.types.DEHUMIDIFIER',\r\n    humanName: 'Dehumidifier',\r\n    traits: [\r\n      'action.devices.traits.OnOff',\r\n      'action.devices.traits.FanSpeed',\r\n      'action.devices.traits.HumiditySetting',\r\n      'action.devices.traits.StartStop',\r\n    ],\r\n  },\r\n];\r\n","import ansiStyles from '#ansi-styles';\nimport supportsColor from '#supports-color';\nimport { // eslint-disable-line import/order\n\tstringReplaceAll,\n\tstringEncaseCRLFWithFirstIndex,\n} from './utilities.js';\n\nconst {stdout: stdoutColor, stderr: stderrColor} = supportsColor;\n\nconst GENERATOR = Symbol('GENERATOR');\nconst STYLER = Symbol('STYLER');\nconst IS_EMPTY = Symbol('IS_EMPTY');\n\n// `supportsColor.level` → `ansiStyles.color[name]` mapping\nconst levelMapping = [\n\t'ansi',\n\t'ansi',\n\t'ansi256',\n\t'ansi16m',\n];\n\nconst styles = Object.create(null);\n\nconst applyOptions = (object, options = {}) => {\n\tif (options.level && !(Number.isInteger(options.level) && options.level >= 0 && options.level <= 3)) {\n\t\tthrow new Error('The `level` option should be an integer from 0 to 3');\n\t}\n\n\t// Detect level if not set manually\n\tconst colorLevel = stdoutColor ? stdoutColor.level : 0;\n\tobject.level = options.level === undefined ? colorLevel : options.level;\n};\n\nexport class Chalk {\n\tconstructor(options) {\n\t\t// eslint-disable-next-line no-constructor-return\n\t\treturn chalkFactory(options);\n\t}\n}\n\nconst chalkFactory = options => {\n\tconst chalk = (...strings) => strings.join(' ');\n\tapplyOptions(chalk, options);\n\n\tObject.setPrototypeOf(chalk, createChalk.prototype);\n\n\treturn chalk;\n};\n\nfunction createChalk(options) {\n\treturn chalkFactory(options);\n}\n\nObject.setPrototypeOf(createChalk.prototype, Function.prototype);\n\nfor (const [styleName, style] of Object.entries(ansiStyles)) {\n\tstyles[styleName] = {\n\t\tget() {\n\t\t\tconst builder = createBuilder(this, createStyler(style.open, style.close, this[STYLER]), this[IS_EMPTY]);\n\t\t\tObject.defineProperty(this, styleName, {value: builder});\n\t\t\treturn builder;\n\t\t},\n\t};\n}\n\nstyles.visible = {\n\tget() {\n\t\tconst builder = createBuilder(this, this[STYLER], true);\n\t\tObject.defineProperty(this, 'visible', {value: builder});\n\t\treturn builder;\n\t},\n};\n\nconst getModelAnsi = (model, level, type, ...arguments_) => {\n\tif (model === 'rgb') {\n\t\tif (level === 'ansi16m') {\n\t\t\treturn ansiStyles[type].ansi16m(...arguments_);\n\t\t}\n\n\t\tif (level === 'ansi256') {\n\t\t\treturn ansiStyles[type].ansi256(ansiStyles.rgbToAnsi256(...arguments_));\n\t\t}\n\n\t\treturn ansiStyles[type].ansi(ansiStyles.rgbToAnsi(...arguments_));\n\t}\n\n\tif (model === 'hex') {\n\t\treturn getModelAnsi('rgb', level, type, ...ansiStyles.hexToRgb(...arguments_));\n\t}\n\n\treturn ansiStyles[type][model](...arguments_);\n};\n\nconst usedModels = ['rgb', 'hex', 'ansi256'];\n\nfor (const model of usedModels) {\n\tstyles[model] = {\n\t\tget() {\n\t\t\tconst {level} = this;\n\t\t\treturn function (...arguments_) {\n\t\t\t\tconst styler = createStyler(getModelAnsi(model, levelMapping[level], 'color', ...arguments_), ansiStyles.color.close, this[STYLER]);\n\t\t\t\treturn createBuilder(this, styler, this[IS_EMPTY]);\n\t\t\t};\n\t\t},\n\t};\n\n\tconst bgModel = 'bg' + model[0].toUpperCase() + model.slice(1);\n\tstyles[bgModel] = {\n\t\tget() {\n\t\t\tconst {level} = this;\n\t\t\treturn function (...arguments_) {\n\t\t\t\tconst styler = createStyler(getModelAnsi(model, levelMapping[level], 'bgColor', ...arguments_), ansiStyles.bgColor.close, this[STYLER]);\n\t\t\t\treturn createBuilder(this, styler, this[IS_EMPTY]);\n\t\t\t};\n\t\t},\n\t};\n}\n\nconst proto = Object.defineProperties(() => {}, {\n\t...styles,\n\tlevel: {\n\t\tenumerable: true,\n\t\tget() {\n\t\t\treturn this[GENERATOR].level;\n\t\t},\n\t\tset(level) {\n\t\t\tthis[GENERATOR].level = level;\n\t\t},\n\t},\n});\n\nconst createStyler = (open, close, parent) => {\n\tlet openAll;\n\tlet closeAll;\n\tif (parent === undefined) {\n\t\topenAll = open;\n\t\tcloseAll = close;\n\t} else {\n\t\topenAll = parent.openAll + open;\n\t\tcloseAll = close + parent.closeAll;\n\t}\n\n\treturn {\n\t\topen,\n\t\tclose,\n\t\topenAll,\n\t\tcloseAll,\n\t\tparent,\n\t};\n};\n\nconst createBuilder = (self, _styler, _isEmpty) => {\n\t// Single argument is hot path, implicit coercion is faster than anything\n\t// eslint-disable-next-line no-implicit-coercion\n\tconst builder = (...arguments_) => applyStyle(builder, (arguments_.length === 1) ? ('' + arguments_[0]) : arguments_.join(' '));\n\n\t// We alter the prototype because we must return a function, but there is\n\t// no way to create a function with a different prototype\n\tObject.setPrototypeOf(builder, proto);\n\n\tbuilder[GENERATOR] = self;\n\tbuilder[STYLER] = _styler;\n\tbuilder[IS_EMPTY] = _isEmpty;\n\n\treturn builder;\n};\n\nconst applyStyle = (self, string) => {\n\tif (self.level <= 0 || !string) {\n\t\treturn self[IS_EMPTY] ? '' : string;\n\t}\n\n\tlet styler = self[STYLER];\n\n\tif (styler === undefined) {\n\t\treturn string;\n\t}\n\n\tconst {openAll, closeAll} = styler;\n\tif (string.includes('\\u001B')) {\n\t\twhile (styler !== undefined) {\n\t\t\t// Replace any instances already present with a re-opening code\n\t\t\t// otherwise only the part of the string until said closing code\n\t\t\t// will be colored, and the rest will simply be 'plain'.\n\t\t\tstring = stringReplaceAll(string, styler.close, styler.open);\n\n\t\t\tstyler = styler.parent;\n\t\t}\n\t}\n\n\t// We can move both next actions out of loop, because remaining actions in loop won't have\n\t// any/visible effect on parts we add here. Close the styling before a linebreak and reopen\n\t// after next line to fix a bleed issue on macOS: https://github.com/chalk/chalk/pull/92\n\tconst lfIndex = string.indexOf('\\n');\n\tif (lfIndex !== -1) {\n\t\tstring = stringEncaseCRLFWithFirstIndex(string, closeAll, openAll, lfIndex);\n\t}\n\n\treturn openAll + string + closeAll;\n};\n\nObject.defineProperties(createChalk.prototype, styles);\n\nconst chalk = createChalk();\nexport const chalkStderr = createChalk({level: stderrColor ? stderrColor.level : 0});\n\nexport {\n\tstdoutColor as supportsColor,\n\tstderrColor as supportsColorStderr,\n};\n\nexport default chalk;\n","// TODO: When targeting Node.js 16, use `String.prototype.replaceAll`.\nexport function stringReplaceAll(string, substring, replacer) {\n\tlet index = string.indexOf(substring);\n\tif (index === -1) {\n\t\treturn string;\n\t}\n\n\tconst substringLength = substring.length;\n\tlet endIndex = 0;\n\tlet returnValue = '';\n\tdo {\n\t\treturnValue += string.substr(endIndex, index - endIndex) + substring + replacer;\n\t\tendIndex = index + substringLength;\n\t\tindex = string.indexOf(substring, endIndex);\n\t} while (index !== -1);\n\n\treturnValue += string.slice(endIndex);\n\treturn returnValue;\n}\n\nexport function stringEncaseCRLFWithFirstIndex(string, prefix, postfix, index) {\n\tlet endIndex = 0;\n\tlet returnValue = '';\n\tdo {\n\t\tconst gotCR = string[index - 1] === '\\r';\n\t\treturnValue += string.substr(endIndex, (gotCR ? index - 1 : index) - endIndex) + prefix + (gotCR ? '\\r\\n' : '\\n') + postfix;\n\t\tendIndex = index + 1;\n\t\tindex = string.indexOf('\\n', endIndex);\n\t} while (index !== -1);\n\n\treturnValue += string.slice(endIndex);\n\treturn returnValue;\n}\n","const ANSI_BACKGROUND_OFFSET = 10;\n\nconst wrapAnsi16 = (offset = 0) => code => `\\u001B[${code + offset}m`;\n\nconst wrapAnsi256 = (offset = 0) => code => `\\u001B[${38 + offset};5;${code}m`;\n\nconst wrapAnsi16m = (offset = 0) => (red, green, blue) => `\\u001B[${38 + offset};2;${red};${green};${blue}m`;\n\nfunction assembleStyles() {\n\tconst codes = new Map();\n\tconst styles = {\n\t\tmodifier: {\n\t\t\treset: [0, 0],\n\t\t\t// 21 isn't widely supported and 22 does the same thing\n\t\t\tbold: [1, 22],\n\t\t\tdim: [2, 22],\n\t\t\titalic: [3, 23],\n\t\t\tunderline: [4, 24],\n\t\t\toverline: [53, 55],\n\t\t\tinverse: [7, 27],\n\t\t\thidden: [8, 28],\n\t\t\tstrikethrough: [9, 29],\n\t\t},\n\t\tcolor: {\n\t\t\tblack: [30, 39],\n\t\t\tred: [31, 39],\n\t\t\tgreen: [32, 39],\n\t\t\tyellow: [33, 39],\n\t\t\tblue: [34, 39],\n\t\t\tmagenta: [35, 39],\n\t\t\tcyan: [36, 39],\n\t\t\twhite: [37, 39],\n\n\t\t\t// Bright color\n\t\t\tblackBright: [90, 39],\n\t\t\tredBright: [91, 39],\n\t\t\tgreenBright: [92, 39],\n\t\t\tyellowBright: [93, 39],\n\t\t\tblueBright: [94, 39],\n\t\t\tmagentaBright: [95, 39],\n\t\t\tcyanBright: [96, 39],\n\t\t\twhiteBright: [97, 39],\n\t\t},\n\t\tbgColor: {\n\t\t\tbgBlack: [40, 49],\n\t\t\tbgRed: [41, 49],\n\t\t\tbgGreen: [42, 49],\n\t\t\tbgYellow: [43, 49],\n\t\t\tbgBlue: [44, 49],\n\t\t\tbgMagenta: [45, 49],\n\t\t\tbgCyan: [46, 49],\n\t\t\tbgWhite: [47, 49],\n\n\t\t\t// Bright color\n\t\t\tbgBlackBright: [100, 49],\n\t\t\tbgRedBright: [101, 49],\n\t\t\tbgGreenBright: [102, 49],\n\t\t\tbgYellowBright: [103, 49],\n\t\t\tbgBlueBright: [104, 49],\n\t\t\tbgMagentaBright: [105, 49],\n\t\t\tbgCyanBright: [106, 49],\n\t\t\tbgWhiteBright: [107, 49],\n\t\t},\n\t};\n\n\t// Alias bright black as gray (and grey)\n\tstyles.color.gray = styles.color.blackBright;\n\tstyles.bgColor.bgGray = styles.bgColor.bgBlackBright;\n\tstyles.color.grey = styles.color.blackBright;\n\tstyles.bgColor.bgGrey = styles.bgColor.bgBlackBright;\n\n\tfor (const [groupName, group] of Object.entries(styles)) {\n\t\tfor (const [styleName, style] of Object.entries(group)) {\n\t\t\tstyles[styleName] = {\n\t\t\t\topen: `\\u001B[${style[0]}m`,\n\t\t\t\tclose: `\\u001B[${style[1]}m`,\n\t\t\t};\n\n\t\t\tgroup[styleName] = styles[styleName];\n\n\t\t\tcodes.set(style[0], style[1]);\n\t\t}\n\n\t\tObject.defineProperty(styles, groupName, {\n\t\t\tvalue: group,\n\t\t\tenumerable: false,\n\t\t});\n\t}\n\n\tObject.defineProperty(styles, 'codes', {\n\t\tvalue: codes,\n\t\tenumerable: false,\n\t});\n\n\tstyles.color.close = '\\u001B[39m';\n\tstyles.bgColor.close = '\\u001B[49m';\n\n\tstyles.color.ansi = wrapAnsi16();\n\tstyles.color.ansi256 = wrapAnsi256();\n\tstyles.color.ansi16m = wrapAnsi16m();\n\tstyles.bgColor.ansi = wrapAnsi16(ANSI_BACKGROUND_OFFSET);\n\tstyles.bgColor.ansi256 = wrapAnsi256(ANSI_BACKGROUND_OFFSET);\n\tstyles.bgColor.ansi16m = wrapAnsi16m(ANSI_BACKGROUND_OFFSET);\n\n\t// From https://github.com/Qix-/color-convert/blob/3f0e0d4e92e235796ccb17f6e85c72094a651f49/conversions.js\n\tObject.defineProperties(styles, {\n\t\trgbToAnsi256: {\n\t\t\tvalue: (red, green, blue) => {\n\t\t\t\t// We use the extended greyscale palette here, with the exception of\n\t\t\t\t// black and white. normal palette only has 4 greyscale shades.\n\t\t\t\tif (red === green && green === blue) {\n\t\t\t\t\tif (red < 8) {\n\t\t\t\t\t\treturn 16;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (red > 248) {\n\t\t\t\t\t\treturn 231;\n\t\t\t\t\t}\n\n\t\t\t\t\treturn Math.round(((red - 8) / 247) * 24) + 232;\n\t\t\t\t}\n\n\t\t\t\treturn 16\n\t\t\t\t\t+ (36 * Math.round(red / 255 * 5))\n\t\t\t\t\t+ (6 * Math.round(green / 255 * 5))\n\t\t\t\t\t+ Math.round(blue / 255 * 5);\n\t\t\t},\n\t\t\tenumerable: false,\n\t\t},\n\t\thexToRgb: {\n\t\t\tvalue: hex => {\n\t\t\t\tconst matches = /(?<colorString>[a-f\\d]{6}|[a-f\\d]{3})/i.exec(hex.toString(16));\n\t\t\t\tif (!matches) {\n\t\t\t\t\treturn [0, 0, 0];\n\t\t\t\t}\n\n\t\t\t\tlet {colorString} = matches.groups;\n\n\t\t\t\tif (colorString.length === 3) {\n\t\t\t\t\tcolorString = [...colorString].map(character => character + character).join('');\n\t\t\t\t}\n\n\t\t\t\tconst integer = Number.parseInt(colorString, 16);\n\n\t\t\t\treturn [\n\t\t\t\t\t/* eslint-disable no-bitwise */\n\t\t\t\t\t(integer >> 16) & 0xFF,\n\t\t\t\t\t(integer >> 8) & 0xFF,\n\t\t\t\t\tinteger & 0xFF,\n\t\t\t\t\t/* eslint-enable no-bitwise */\n\t\t\t\t];\n\t\t\t},\n\t\t\tenumerable: false,\n\t\t},\n\t\thexToAnsi256: {\n\t\t\tvalue: hex => styles.rgbToAnsi256(...styles.hexToRgb(hex)),\n\t\t\tenumerable: false,\n\t\t},\n\t\tansi256ToAnsi: {\n\t\t\tvalue: code => {\n\t\t\t\tif (code < 8) {\n\t\t\t\t\treturn 30 + code;\n\t\t\t\t}\n\n\t\t\t\tif (code < 16) {\n\t\t\t\t\treturn 90 + (code - 8);\n\t\t\t\t}\n\n\t\t\t\tlet red;\n\t\t\t\tlet green;\n\t\t\t\tlet blue;\n\n\t\t\t\tif (code >= 232) {\n\t\t\t\t\tred = (((code - 232) * 10) + 8) / 255;\n\t\t\t\t\tgreen = red;\n\t\t\t\t\tblue = red;\n\t\t\t\t} else {\n\t\t\t\t\tcode -= 16;\n\n\t\t\t\t\tconst remainder = code % 36;\n\n\t\t\t\t\tred = Math.floor(code / 36) / 5;\n\t\t\t\t\tgreen = Math.floor(remainder / 6) / 5;\n\t\t\t\t\tblue = (remainder % 6) / 5;\n\t\t\t\t}\n\n\t\t\t\tconst value = Math.max(red, green, blue) * 2;\n\n\t\t\t\tif (value === 0) {\n\t\t\t\t\treturn 30;\n\t\t\t\t}\n\n\t\t\t\t// eslint-disable-next-line no-bitwise\n\t\t\t\tlet result = 30 + ((Math.round(blue) << 2) | (Math.round(green) << 1) | Math.round(red));\n\n\t\t\t\tif (value === 2) {\n\t\t\t\t\tresult += 60;\n\t\t\t\t}\n\n\t\t\t\treturn result;\n\t\t\t},\n\t\t\tenumerable: false,\n\t\t},\n\t\trgbToAnsi: {\n\t\t\tvalue: (red, green, blue) => styles.ansi256ToAnsi(styles.rgbToAnsi256(red, green, blue)),\n\t\t\tenumerable: false,\n\t\t},\n\t\thexToAnsi: {\n\t\t\tvalue: hex => styles.ansi256ToAnsi(styles.hexToAnsi256(hex)),\n\t\t\tenumerable: false,\n\t\t},\n\t});\n\n\treturn styles;\n}\n\nconst ansiStyles = assembleStyles();\n\nexport default ansiStyles;\n","import process from 'node:process';\nimport os from 'node:os';\nimport tty from 'node:tty';\n\n// From: https://github.com/sindresorhus/has-flag/blob/main/index.js\nfunction hasFlag(flag, argv = process.argv) {\n\tconst prefix = flag.startsWith('-') ? '' : (flag.length === 1 ? '-' : '--');\n\tconst position = argv.indexOf(prefix + flag);\n\tconst terminatorPosition = argv.indexOf('--');\n\treturn position !== -1 && (terminatorPosition === -1 || position < terminatorPosition);\n}\n\nconst {env} = process;\n\nlet flagForceColor;\nif (\n\thasFlag('no-color')\n\t|| hasFlag('no-colors')\n\t|| hasFlag('color=false')\n\t|| hasFlag('color=never')\n) {\n\tflagForceColor = 0;\n} else if (\n\thasFlag('color')\n\t|| hasFlag('colors')\n\t|| hasFlag('color=true')\n\t|| hasFlag('color=always')\n) {\n\tflagForceColor = 1;\n}\n\nfunction envForceColor() {\n\tif ('FORCE_COLOR' in env) {\n\t\tif (env.FORCE_COLOR === 'true') {\n\t\t\treturn 1;\n\t\t}\n\n\t\tif (env.FORCE_COLOR === 'false') {\n\t\t\treturn 0;\n\t\t}\n\n\t\treturn env.FORCE_COLOR.length === 0 ? 1 : Math.min(Number.parseInt(env.FORCE_COLOR, 10), 3);\n\t}\n}\n\nfunction translateLevel(level) {\n\tif (level === 0) {\n\t\treturn false;\n\t}\n\n\treturn {\n\t\tlevel,\n\t\thasBasic: true,\n\t\thas256: level >= 2,\n\t\thas16m: level >= 3,\n\t};\n}\n\nfunction _supportsColor(haveStream, {streamIsTTY, sniffFlags = true} = {}) {\n\tconst noFlagForceColor = envForceColor();\n\tif (noFlagForceColor !== undefined) {\n\t\tflagForceColor = noFlagForceColor;\n\t}\n\n\tconst forceColor = sniffFlags ? flagForceColor : noFlagForceColor;\n\n\tif (forceColor === 0) {\n\t\treturn 0;\n\t}\n\n\tif (sniffFlags) {\n\t\tif (hasFlag('color=16m')\n\t\t\t|| hasFlag('color=full')\n\t\t\t|| hasFlag('color=truecolor')) {\n\t\t\treturn 3;\n\t\t}\n\n\t\tif (hasFlag('color=256')) {\n\t\t\treturn 2;\n\t\t}\n\t}\n\n\tif (haveStream && !streamIsTTY && forceColor === undefined) {\n\t\treturn 0;\n\t}\n\n\tconst min = forceColor || 0;\n\n\tif (env.TERM === 'dumb') {\n\t\treturn min;\n\t}\n\n\tif (process.platform === 'win32') {\n\t\t// Windows 10 build 10586 is the first Windows release that supports 256 colors.\n\t\t// Windows 10 build 14931 is the first release that supports 16m/TrueColor.\n\t\tconst osRelease = os.release().split('.');\n\t\tif (\n\t\t\tNumber(osRelease[0]) >= 10\n\t\t\t&& Number(osRelease[2]) >= 10_586\n\t\t) {\n\t\t\treturn Number(osRelease[2]) >= 14_931 ? 3 : 2;\n\t\t}\n\n\t\treturn 1;\n\t}\n\n\tif ('CI' in env) {\n\t\tif (['TRAVIS', 'CIRCLECI', 'APPVEYOR', 'GITLAB_CI', 'GITHUB_ACTIONS', 'BUILDKITE', 'DRONE'].some(sign => sign in env) || env.CI_NAME === 'codeship') {\n\t\t\treturn 1;\n\t\t}\n\n\t\treturn min;\n\t}\n\n\tif ('TEAMCITY_VERSION' in env) {\n\t\treturn /^(9\\.(0*[1-9]\\d*)\\.|\\d{2,}\\.)/.test(env.TEAMCITY_VERSION) ? 1 : 0;\n\t}\n\n\t// Check for Azure DevOps pipelines\n\tif ('TF_BUILD' in env && 'AGENT_NAME' in env) {\n\t\treturn 1;\n\t}\n\n\tif (env.COLORTERM === 'truecolor') {\n\t\treturn 3;\n\t}\n\n\tif ('TERM_PROGRAM' in env) {\n\t\tconst version = Number.parseInt((env.TERM_PROGRAM_VERSION || '').split('.')[0], 10);\n\n\t\tswitch (env.TERM_PROGRAM) {\n\t\t\tcase 'iTerm.app':\n\t\t\t\treturn version >= 3 ? 3 : 2;\n\t\t\tcase 'Apple_Terminal':\n\t\t\t\treturn 2;\n\t\t\t// No default\n\t\t}\n\t}\n\n\tif (/-256(color)?$/i.test(env.TERM)) {\n\t\treturn 2;\n\t}\n\n\tif (/^screen|^xterm|^vt100|^vt220|^rxvt|color|ansi|cygwin|linux/i.test(env.TERM)) {\n\t\treturn 1;\n\t}\n\n\tif ('COLORTERM' in env) {\n\t\treturn 1;\n\t}\n\n\treturn min;\n}\n\nexport function createSupportsColor(stream, options = {}) {\n\tconst level = _supportsColor(stream, {\n\t\tstreamIsTTY: stream && stream.isTTY,\n\t\t...options,\n\t});\n\n\treturn translateLevel(level);\n}\n\nconst supportsColor = {\n\tstdout: createSupportsColor({isTTY: tty.isatty(1)}),\n\tstderr: createSupportsColor({isTTY: tty.isatty(2)}),\n};\n\nexport default supportsColor;\n","import createWebSocketStream from './lib/stream.js';\nimport Receiver from './lib/receiver.js';\nimport Sender from './lib/sender.js';\nimport WebSocket from './lib/websocket.js';\nimport WebSocketServer from './lib/websocket-server.js';\n\nexport { createWebSocketStream, Receiver, Sender, WebSocket, WebSocketServer };\nexport default WebSocket;\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nmd = (module) => {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","import dotenv from 'dotenv';\r\ndotenv.config();\r\n(global as any).WebSocket = require('ws');\r\n\r\nimport express from 'express';\r\nimport { apiInit } from './api-endpoints';\r\nimport { clientInit } from './client-endpoints';\r\nimport { getConfig } from './config';\r\nimport { webSocketInit } from './websocket-endpoint';\r\nimport * as http from 'http';\r\nimport * as https from 'https';\r\nimport { init, logging } from '@ha-assistant/listner';\r\nimport { authInit } from './auth-endpoints';\r\nimport { googleInit } from './google-endpoints';\r\nimport { lookupInit } from './lookup-endpoints';\r\nimport { existsSync, readFileSync } from 'fs';\r\n\r\nconst cors = require('cors');\r\n\r\nconst app = express();\r\n\r\napp.use(cors());\r\napp.use(express.json()) // for parsing application/json\r\napp.use(express.urlencoded({ extended: true })) // for parsing application/x-www-form-urlencoded\r\n\r\nconst config = getConfig();\r\n\r\ninit(config.deviceStore);\r\n\r\nclientInit(app, config);\r\napiInit(app);\r\nlookupInit(app);\r\nauthInit(app);\r\ngoogleInit(app);\r\n\r\nconst server = http.createServer(app);\r\n\r\nwebSocketInit(server);\r\n\r\napp.use(function (req, res, next) {\r\n  logging.warn('404', req.url, req.method);\r\n  res.status(404).send('Unable to find the requested resource!');\r\n});\r\n\r\nserver.listen(config.port, () => {\r\n  logging.log(`server started at http://localhost:${config.port}`);\r\n});\r\n\r\nif (existsSync('/ssl/privkey.pem')) {\r\n  https\r\n    .createServer(\r\n      {\r\n        key: readFileSync('/ssl/privkey.pem'),\r\n        cert: readFileSync('/ssl/fullchain.pem'),\r\n      },\r\n      app\r\n    )\r\n    .listen(config.port + 1, () => {\r\n      logging.log(`server started at https://localhost:${config.port + 1}`);\r\n    });\r\n} else {\r\n  logging.warn('cert dos not exist');\r\n}\r\n\r\nconst handle = (signal: number) => {\r\n  logging.error(`*^!@4=> Received event: ${signal}`);\r\n};\r\nprocess.on('SIGHUP', handle);\r\n"],"names":["logging","createDevice","updateDevice","deleteDevice","getHomeAssistantDataAccess","importDevice","getConfig","firstValueFrom","apiInit","app","config","socket","homeAssistaneSocketUri","homeAssistaneApiKey","post","req","res","log","body","device","sendStatus","put","id","params","delete","get","debug","rooms","getAreas","send","download","deviceStore","devices","JSON","parse","format","authInit","query","response_url","responseUrl","decodeURIComponent","redirect","warn","redirect_uri","state","redirectUrl","encodeURIComponent","all","grantType","grant_type","secondsInDay","HTTP_STATUS_OK","token","token_type","access_token","refresh_token","expires_in","status","json","express","clientInit","use","static","host","process","env","NODE_ENV","port","referer","noRefererHost","protocol","ingressUrl","refererHost","replace","clientConfig","socketUrl","inferWebsocketUrl","set","stringify","readFileSync","existsSync","setLogLevel","readFileAsJson","filePath","info","rawdata","toString","options","logLevel","LOG_LEVEL","INFER_WEBSOCKET_URL","SERVER_PORT","parseInt","INGRESS_URL","HASSIO_TOKEN","HA_SOCKET_URL","DEVICE_STORE","onSync","onQuery","onDisconnect","onExecute","getUser","headers","authorization","accessToken","substr","Promise","rej","googleInit","payload","results","inputs","map","x","intent","sync","requestId","execute","then","lookupInit","lookupFunctions","label","detail","entities","getEntities","s","reduce","acc","i","entity_id","d","split","Object","keys","domain","n","a","getEntityStatus","entity","find","startsWith","item","name","resolve","commands","ids","states","on","online","errorCode","getDeviceStatusV2$","statusMap","getAllDevices$","agentUserId","type","deviceType","traits","defaultNames","nicknames","willReportState","roomHint","room","WebSocket","webSocketInit","server","lastDevicesStatus","lastDevices","wss","Server","path","sendAll","message","clients","forEach","client","readyState","OPEN","ws","value","fromCache","toLocaleString","e","subscribe","next","Position","constructor","line","col","index","column","SourceLocation","start","end","filename","identifierName","createPositionWithColumnOffset","position","columnOffset","ParseErrorCode","reflect","last","length","object","key","instantiate","properties","descriptors","filter","descriptor","enumerable","instance","defineProperty","configurable","assign","ImportMetaOutsideModule","code","SourceTypeModuleError","ImportOutsideModule","NodeDescriptions","ArrayPattern","AssignmentExpression","AssignmentPattern","ArrowFunctionExpression","ConditionalExpression","CatchClause","ForOfStatement","ForInStatement","ForStatement","FormalParameters","Identifier","ImportSpecifier","ImportDefaultSpecifier","ImportNamespaceSpecifier","ObjectPattern","ParenthesizedExpression","RestElement","UpdateExpression","true","false","VariableDeclarator","YieldExpression","toNodeDescription","prefix","String","AccessorIsGenerator","kind","ArgumentsInClass","AsyncFunctionInSingleStatementContext","AwaitBindingIdentifier","AwaitBindingIdentifierInStaticBlock","AwaitExpressionFormalParameter","AwaitNotInAsyncContext","AwaitNotInAsyncFunction","BadGetterArity","BadSetterArity","BadSetterRestParameter","ConstructorClassField","ConstructorClassPrivateField","ConstructorIsAccessor","ConstructorIsAsync","ConstructorIsGenerator","DeclarationMissingInitializer","DecoratorBeforeExport","DecoratorConstructor","DecoratorExportClass","DecoratorSemicolon","DecoratorStaticBlock","DeletePrivateField","DestructureNamedImport","DuplicateConstructor","DuplicateDefaultExport","DuplicateExport","exportName","DuplicateProto","DuplicateRegExpFlags","ElementAfterRest","EscapedCharNotAnIdentifier","ExportBindingIsString","localName","ExportDefaultFromAsIdentifier","ForInOfLoopInitializer","ForOfAsync","ForOfLet","GeneratorInSingleStatementContext","IllegalBreakContinue","IllegalLanguageModeDirective","IllegalReturn","ImportBindingIsString","importName","ImportCallArgumentTrailingComma","ImportCallArity","maxArgumentCount","ImportCallNotNewExpression","ImportCallSpreadArgument","ImportJSONBindingNotDefault","IncompatibleRegExpUVFlags","InvalidBigIntLiteral","InvalidCodePoint","InvalidCoverInitializedName","InvalidDecimal","InvalidDigit","radix","InvalidEscapeSequence","InvalidEscapeSequenceTemplate","InvalidEscapedReservedWord","reservedWord","InvalidIdentifier","InvalidLhs","ancestor","InvalidLhsBinding","InvalidNumber","InvalidOrMissingExponent","InvalidOrUnexpectedToken","unexpected","InvalidParenthesizedAssignment","InvalidPrivateFieldResolution","InvalidPropertyBindingPattern","InvalidRecordProperty","InvalidRestAssignmentPattern","LabelRedeclaration","labelName","LetInLexicalBinding","LineTerminatorBeforeArrow","MalformedRegExpFlags","MissingClassName","MissingEqInAssignment","MissingSemicolon","MissingPlugin","missingPlugin","join","MissingOneOfPlugins","MissingUnicodeEscape","MixingCoalesceWithLogical","ModuleAttributeDifferentFromType","ModuleAttributeInvalidValue","ModuleAttributesWithDuplicateKeys","ModuleExportNameHasLoneSurrogate","surrogateCharCode","ModuleExportUndefined","MultipleDefaultsInSwitch","NewlineAfterThrow","NoCatchOrFinally","NumberIdentifier","NumericSeparatorInEscapeSequence","ObsoleteAwaitStar","OptionalChainingNoNew","OptionalChainingNoTemplate","OverrideOnConstructor","ParamDupe","PatternHasAccessor","PatternHasMethod","PrivateInExpectedIn","PrivateNameRedeclaration","RecordExpressionBarIncorrectEndSyntaxType","RecordExpressionBarIncorrectStartSyntaxType","RecordExpressionHashIncorrectStartSyntaxType","RecordNoProto","RestTrailingComma","SloppyFunction","StaticPrototype","SuperNotAllowed","SuperPrivateField","TrailingDecorator","TupleExpressionBarIncorrectEndSyntaxType","TupleExpressionBarIncorrectStartSyntaxType","TupleExpressionHashIncorrectStartSyntaxType","UnexpectedArgumentPlaceholder","UnexpectedAwaitAfterPipelineBody","UnexpectedDigitAfterHash","UnexpectedImportExport","UnexpectedKeyword","keyword","UnexpectedLeadingDecorator","UnexpectedLexicalDeclaration","UnexpectedNewTarget","UnexpectedNumericSeparator","UnexpectedPrivateField","UnexpectedReservedWord","UnexpectedSuper","UnexpectedToken","expected","UnexpectedTokenUnaryExponentiation","UnsupportedBind","UnsupportedDecoratorExport","UnsupportedDefaultExport","UnsupportedImport","UnsupportedMetaProperty","target","onlyValidPropertyName","UnsupportedParameterDecorator","UnsupportedPropertyDecorator","UnsupportedSuper","UnterminatedComment","UnterminatedRegExp","UnterminatedString","UnterminatedTemplate","VarRedeclaration","YieldBindingIdentifier","YieldInParameter","ZeroDigitNumericSeparator","StrictDelete","StrictEvalArguments","referenceName","StrictEvalArgumentsBinding","bindingName","StrictFunction","StrictNumericEscape","StrictOctalLiteral","StrictWith","UnparenthesizedPipeBodyDescriptions","Set","PipeBodyIsTighter","PipeTopicRequiresHackPipes","PipeTopicUnbound","PipeTopicUnconfiguredToken","PipeTopicUnused","PipeUnparenthesizedBody","PipelineBodyNoArrow","PipelineBodySequenceExpression","PipelineHeadSequenceExpression","PipelineTopicUnused","PrimaryTopicNotAllowed","PrimaryTopicRequiresSmartPipeline","toParseErrorConstructor","toMessage","_excluded","loc","details","SyntaxError","clone","overrides","pos","ParseErrorEnum","argument","syntaxPlugin","Array","isArray","parseErrorTemplates","ParseErrorConstructors","reasonCode","template","rest","_excluded2","Errors","ModuleErrors","StandardErrors","StrictModeErrors","PipelineOperatorErrors","toUnenumerable","toESTreeLocation","node","superClass","file","tokens","parseRegExpLiteral","pattern","flags","regex","RegExp","estreeParseLiteral","parseBigIntLiteral","bigInt","BigInt","bigint","parseDecimalLiteral","decimal","parseLiteral","parseStringLiteral","parseNumericLiteral","parseNullLiteral","parseBooleanLiteral","directiveToStmt","directive","directiveLiteral","stmt","startNodeAt","expression","extra","expressionValue","raw","finishNodeAt","slice","initFunction","isAsync","checkDeclaration","isObjectProperty","getObjectOrClassMethodParams","method","isValidDirective","parenthesized","parseBlockBody","args","directiveStatements","directives","concat","pushClassMethod","classBody","isGenerator","isConstructor","allowsDirectSuper","parseMethod","typeParameters","push","parsePrivateName","getPluginOption","convertPrivateNameToPrivateIdentifier","getPrivateNameSV","isPrivateName","parseFunctionBody","allowExpression","isMethod","allowDirectSuper","inClassScope","funcNode","startNode","computed","finishNode","parseClassProperty","propertyNode","parseClassPrivateProperty","parseObjectMethod","prop","isPattern","isAccessor","shorthand","parseObjectProperty","startPos","startLoc","refExpressionErrors","isValidLVal","isUnparenthesizedInAssign","binding","isAssignable","isBinding","toAssignable","isLHS","classScope","usePrivateName","toAssignableObjectExpressionProp","isLast","raise","at","finishCallExpression","unfinished","optional","callee","source","arguments","hasPlugin","attributes","toReferencedArguments","parseExport","exported","specifiers","parseSubscript","base","noCalls","optionalChainMember","substring","stop","chain","startNodeAtNode","hasPropertyAsPrivateName","isOptionalChain","isObjectMethod","endLoc","resetStartLocation","resetEndLocation","lastTokEndLoc","TokContext","preserveSpace","types","brace","j_oTag","j_cTag","j_expr","beforeExpr","startsExpr","isLoop","isAssign","postfix","ExportedTokenType","conf","rightAssociative","binop","updateContext","keywords","Map","createKeyword","createToken","createBinop","tokenTypeCounter","tokenTypes","tokenLabels","tokenBinops","tokenBeforeExprs","tokenStartsExprs","tokenPrefixes","createKeywordLike","tt","bracketL","bracketHashL","bracketBarL","bracketR","bracketBarR","braceL","braceBarL","braceHashL","braceR","braceBarR","parenL","parenR","comma","semi","colon","doubleColon","dot","question","questionDot","arrow","ellipsis","backQuote","dollarBraceL","templateTail","templateNonTail","hash","interpreterDirective","eq","slashAssign","xorAssign","moduloAssign","incDec","bang","tilde","doubleCaret","doubleAt","pipeline","nullishCoalescing","logicalOR","logicalAND","bitwiseOR","bitwiseXOR","bitwiseAND","equality","lt","gt","relational","bitShift","bitShiftL","bitShiftR","plusMin","modulo","star","slash","exponent","_in","_instanceof","_break","_case","_catch","_continue","_debugger","_default","_else","_finally","_function","_if","_return","_switch","_throw","_try","_var","_const","_with","_new","_this","_super","_class","_extends","_export","_import","_null","_true","_false","_typeof","_void","_delete","_do","_for","_while","_as","_assert","_async","_await","_from","_get","_let","_meta","_of","_sent","_set","_static","_yield","_asserts","_checks","_exports","_global","_implements","_intrinsic","_infer","_is","_mixins","_proto","_require","_keyof","_readonly","_unique","_abstract","_declare","_enum","_module","_namespace","_interface","_type","_opaque","string","num","regexp","privateName","eof","jsxName","jsxText","jsxTagStart","jsxTagEnd","placeholder","tokenIsIdentifier","tokenKeywordOrIdentifierIsKeyword","tokenIsKeywordOrIdentifier","tokenIsLiteralPropertyName","tokenComesBeforeExpression","tokenCanStartExpression","tokenIsAssignment","tokenIsFlowInterfaceOrTypeOrOpaque","tokenIsLoop","tokenIsKeyword","tokenIsOperator","tokenIsPostfix","tokenIsPrefix","tokenIsTSTypeOperator","tokenIsTSDeclarationStart","tokenLabelName","tokenOperatorPrecedence","tokenIsRightAssociative","tokenIsTemplate","getExportedToken","context","pop","tc","nonASCIIidentifierStartChars","nonASCIIidentifierChars","nonASCIIidentifierStart","nonASCIIidentifier","astralIdentifierStartCodes","astralIdentifierCodes","isInAstralSet","isIdentifierStart","test","fromCharCode","isIdentifierChar","reservedWords","strict","strictBind","reservedWordsStrictSet","reservedWordsStrictBindSet","isReservedWord","word","inModule","isStrictReservedWord","has","isStrictBindOnlyReservedWord","isStrictBindReservedWord","isKeyword","isIteratorStart","current","next2","reservedWordLikeSet","canBeReservedWord","SCOPE_OTHER","SCOPE_PROGRAM","SCOPE_FUNCTION","SCOPE_ARROW","SCOPE_SIMPLE_CATCH","SCOPE_SUPER","SCOPE_DIRECT_SUPER","SCOPE_CLASS","SCOPE_STATIC_BLOCK","SCOPE_TS_MODULE","SCOPE_VAR","BIND_KIND_VALUE","BIND_KIND_TYPE","BIND_SCOPE_VAR","BIND_SCOPE_LEXICAL","BIND_SCOPE_FUNCTION","BIND_FLAGS_NONE","BIND_FLAGS_CLASS","BIND_FLAGS_TS_ENUM","BIND_FLAGS_TS_CONST_ENUM","BIND_FLAGS_TS_EXPORT_ONLY","BIND_FLAGS_FLOW_DECLARE_FN","BIND_CLASS","BIND_LEXICAL","BIND_VAR","BIND_FUNCTION","BIND_TS_INTERFACE","BIND_TS_TYPE","BIND_TS_ENUM","BIND_TS_AMBIENT","BIND_NONE","BIND_OUTSIDE","BIND_TS_CONST_ENUM","BIND_TS_NAMESPACE","BIND_FLOW_DECLARE_FN","CLASS_ELEMENT_FLAG_STATIC","CLASS_ELEMENT_KIND_GETTER","CLASS_ELEMENT_KIND_SETTER","CLASS_ELEMENT_KIND_ACCESSOR","CLASS_ELEMENT_STATIC_GETTER","CLASS_ELEMENT_STATIC_SETTER","CLASS_ELEMENT_INSTANCE_GETTER","CLASS_ELEMENT_INSTANCE_SETTER","CLASS_ELEMENT_OTHER","BaseParser","sawUnambiguousESM","ambiguousScriptDifferentAst","pluginConfig","plugins","pluginName","pluginOptions","actualOptions","plugin","setTrailingComments","comments","trailingComments","undefined","unshift","setLeadingComments","leadingComments","setInnerComments","innerComments","adjustInnerComments","elements","commentWS","lastElement","CommentsParser","addComment","comment","processComment","commentStack","commentStackLength","lastCommentWS","leadingNode","nodeStart","commentEnd","containingNode","finalizeComment","splice","trailingNode","commentStart","input","charCodeAt","finalizeRemainingComments","resetPreviousNodeTrailingComments","takeSurroundingComments","lineBreak","lineBreakG","isNewLine","skipWhiteSpace","skipWhiteSpaceInLine","skipWhiteSpaceToLineBreak","isWhitespace","State","curLine","lineStart","errors","potentialArrowAt","noArrowAt","noArrowParamsConversionAt","maybeInArrowParameters","inType","noAnonFunctionType","hasFlowComment","isAmbientContext","inAbstractClass","inDisallowConditionalTypesContext","topicContext","maxNumOfResolvableTopics","maxTopicIndex","soloAwait","inFSharpPipelineDirectBody","labels","decoratorStack","lastTokStartLoc","lastTokStart","ct","canStartJSXElement","containsEsc","strictErrors","tokensLength","init","strictMode","sourceType","startLine","startColumn","curPosition","skipArrays","val","isDigit","forbiddenNumericSeparatorSiblings","decBinOct","hex","isAllowedNumericSeparatorSibling","bin","ch","oct","dec","readStringContents","initialPos","initialLineStart","initialCurLine","out","containsInvalid","chunkStart","unterminated","isStringEnd","escaped","readEscapedChar","str","inTemplate","throwOnInvalid","readHexChar","readCodePoint","fromCodePoint","strictNumericEscape","match","octalStr","octal","len","forceLen","readInt","invalidEscapeSequence","allowNumSeparator","forbiddenSiblings","isAllowedSibling","invalid","total","Infinity","prev","numericSeparatorInEscapeSequence","Number","isNaN","unexpectedNumericSeparator","invalidDigit","indexOf","invalidCodePoint","buildPosition","VALID_REGEX_FLAGS","Token","Tokenizer","isLookahead","errorHandlers_readInt","errorRecovery","errorBuilder","errorHandlers_readCodePoint","errorHandlers_readStringContents_string","recordStrictModeErrors","errorHandlers_readStringContents_template","pushToken","checkKeywordEscapes","nextToken","eat","createLookaheadState","curContext","lookahead","old","curr","nextTokenStart","nextTokenStartSince","lastIndex","lookaheadCharCode","codePointAtPos","cp","trail","setStrict","toParseError","clear","skipSpace","finishToken","getTokenFromCode","skipBlockComment","skipLineComment","startSkip","spaceStart","loop","attachComment","commentWhitespace","prevType","replaceToken","readToken_numberSign","readToken_interpreter","nextPos","expectPlugin","readWord1","finishOp","readToken_dot","readNumber","readToken_slash","readToken_mult_modulo","width","readToken_pipe_amp","readToken_caret","proposal","topicToken","lookaheadCh","codePointAt","readToken_atSign","readToken_plus_min","readToken_lt","readToken_gt","size","readToken_eq_excl","readToken_question","readTemplateToken","readRadixNumber","readString","readWord","readRegexp","inClass","content","mods","char","includes","isBigInt","startsWithDot","isFloat","isDecimal","hasExponent","isOctal","hasLeadingZero","integer","underscorePos","parseFloat","quote","readTemplateContinuation","opening","firstCode","escStart","identifierCheck","esc","keywordTypes","raiseProperties","error","raiseOverwrite","expectOnePlugin","pluginNames","some","Scope","var","lexical","functions","ScopeHandler","parser","scopeStack","undefinedExports","inFunction","currentVarScopeFlags","allowSuper","currentThisScopeFlags","inClassAndNotInNonArrowFunction","inStaticBlock","inNonArrowFunction","treatFunctionsAsVar","treatFunctionsAsVarInScope","currentScope","createScope","enter","exit","scope","declareName","bindingType","checkRedeclarationInScope","add","maybeExportDefined","isRedeclaredInScope","values","checkLocalExport","topLevelScope","FlowScope","declareFunctions","FlowScopeHandler","ClassScope","privateNames","loneAccessors","undefinedPrivateNames","ClassScopeHandler","stack","oldClassScope","from","declarePrivateName","elementType","redefined","accessor","oldStatic","newStatic","oldKind","newKind","kExpression","kMaybeArrowParameterDeclaration","kMaybeAsyncArrowParameterDeclaration","kParameterDeclaration","ExpressionScope","canBeArrowParameterDeclaration","isCertainlyParameterDeclaration","ArrowHeadParsingScope","declarationErrors","recordDeclarationError","ParsingErrorClass","clearDeclarationError","iterateErrors","iterator","ExpressionScopeHandler","recordParameterInitializerError","origin","recordArrowParemeterBindingError","recordAsyncArrowParametersError","validateAsPattern","newParameterDeclarationScope","newArrowHeadScope","newAsyncArrowScope","newExpressionScope","PARAM","PARAM_YIELD","PARAM_AWAIT","PARAM_RETURN","PARAM_IN","ProductionParameterHandler","stacks","currentFlags","hasAwait","hasYield","hasReturn","hasIn","functionFlags","UtilParser","addExtra","isContextual","isUnparsedContextual","nameStart","nameEnd","nextCh","isLookaheadContextual","eatContextual","expectContextual","canInsertSemicolon","hasPrecedingLineBreak","hasFollowingLineBreak","isLineTerminator","semicolon","allowAsi","expect","tryParse","fn","oldState","abortSignal","failState","thrown","aborted","checkExpressionErrors","andThrow","shorthandAssignLoc","doubleProtoLoc","privateKeyLoc","optionalParametersLoc","hasErrors","isLiteralPropertyName","property","initializeScopes","oldLabels","oldExportedIdentifiers","exportedIdentifiers","oldInModule","oldScope","getScopeHandler","oldProdParam","prodParam","oldExpressionScope","expressionScope","enterInitialScopes","paramFlags","checkDestructuringPrivate","ExpressionErrors","Node","ranges","range","NodePrototype","prototype","__clone","newNode","clonePlaceholder","cloneIdentifier","cloned","create","expectedNode","cloneStringLiteral","NodeUtils","resetStartLocationFromNode","locationNode","reservedTypes","FlowErrors","AmbiguousConditionalArrow","AmbiguousDeclareModuleKind","AssignReservedType","reservedType","DeclareClassElement","DeclareClassFieldInitializer","DuplicateDeclareModuleExports","EnumBooleanMemberNotInitialized","memberName","enumName","EnumDuplicateMemberName","EnumInconsistentMemberValues","EnumInvalidExplicitType","invalidEnumType","EnumInvalidExplicitTypeUnknownSupplied","EnumInvalidMemberInitializerPrimaryType","explicitType","EnumInvalidMemberInitializerSymbolType","EnumInvalidMemberInitializerUnknownType","EnumInvalidMemberName","suggestion","EnumNumberMemberNotInitialized","EnumStringMemberInconsistentlyInitailized","GetterMayNotHaveThisParam","ImportTypeShorthandOnlyInPureImport","InexactInsideExact","InexactInsideNonObject","InexactVariance","InvalidNonTypeImportInDeclareModule","MissingTypeParamDefault","NestedDeclareModule","NestedFlowComment","PatternIsOptional","SetterMayNotHaveThisParam","SpreadVariance","ThisParamAnnotationRequired","ThisParamBannedInConstructor","ThisParamMayNotBeOptional","ThisParamMustBeFirst","ThisParamNoDefault","TypeBeforeInitializer","TypeCastInPattern","UnexpectedExplicitInexactInObject","UnexpectedReservedType","UnexpectedReservedUnderscore","UnexpectedSpaceBetweenModuloChecks","UnexpectedSpreadType","UnexpectedSubtractionOperand","UnexpectedTokenAfterTypeParameter","UnexpectedTypeParameterBeforeAsyncArrowFunction","UnsupportedDeclareExportKind","unsupportedExportKind","UnsupportedStatementInDeclareModule","UnterminatedFlowComment","isEsModuleType","bodyElement","declaration","hasTypeImportKind","importKind","isMaybeDefaultImport","exportSuggestions","const","let","interface","partition","list","list1","list2","FLOW_PRAGMA_REGEX","flowPragma","shouldParseTypes","shouldParseEnums","matches","exec","Error","flowParseTypeInitialiser","tok","oldInType","flowParseType","flowParsePredicate","moduloLoc","parseExpression","flowParseTypeAndPredicateInitialiser","predicate","flowParseDeclareClass","flowParseInterfaceish","flowParseDeclareFunction","parseIdentifier","typeNode","typeContainer","flowParseTypeParameterDeclaration","tmp","flowParseFunctionTypeParams","this","returnType","typeAnnotation","flowParseDeclare","insideModule","flowParseDeclareVariable","flowParseDeclareModuleExports","flowParseDeclareModule","flowParseDeclareTypeAlias","flowParseDeclareOpaqueType","flowParseDeclareInterface","flowParseDeclareExportDeclaration","flowParseTypeAnnotatableIdentifier","parseExprAtom","bodyNode","parseImport","hasModuleExport","default","isLet","exportKind","flowParseTypeAnnotation","finished","flowParseTypeAlias","flowParseOpaqueType","isClass","flowParseRestrictedIdentifier","extends","implements","mixins","flowParseInterfaceExtends","flowParseObjectType","allowStatic","allowExact","allowSpread","allowProto","allowInexact","flowParseQualifiedTypeIdentifier","flowParseTypeParameterInstantiation","flowParseInterface","checkNotUnderscore","checkReservedType","liberal","right","declare","supertype","impltype","flowParseTypeParameter","requireDefault","nodeStartLoc","variance","flowParseVariance","ident","bound","defaultRequired","typeParameter","oldNoAnonFunctionType","flowParseTypeParameterInstantiationCallOrNew","flowParseTypeOrImplicitInstantiation","flowParseInterfaceType","flowParseObjectPropertyKey","flowParseObjectTypeIndexer","isStatic","flowParseObjectTypeInternalSlot","flowParseObjectTypeMethodish","flowParseFunctionTypeParam","flowParseObjectTypeCallProperty","valueNode","callProperties","indexers","internalSlots","endDelim","exact","inexact","protoStartLoc","inexactStartLoc","propOrInexact","flowParseObjectTypeProperty","flowObjectTypeSemicolon","isInexactToken","proto","flowCheckGetterSetterParams","paramCount","node2","qualification","flowParseGenericType","flowParseTypeofType","flowParsePrimaryType","flowParseTupleType","first","lh","isThis","reinterpretTypeAsFunctionTypeParam","flowIdentToTypeAnnotation","isGroupedType","parseLiteralAtNode","createIdentifier","flowParsePostfixType","seenOptionalIndexedAccess","objectType","indexType","flowParsePrefixType","flowParseAnonFunctionWithoutParens","param","flowParseIntersectionType","flowParseUnionType","allowPrimitiveOverride","typeCastToParameter","allowExpressionBody","forwardNoArrowParamsConversionAt","parseFunctionBodyAndFinish","parseStatement","topLevel","flowParseEnumDeclaration","parseExpressionStatement","expr","shouldParseExportDeclaration","isExportDefaultSpecifier","parseExportDefaultExpression","parseConditional","setOptionalParametersError","originalNoArrowAt","consequent","failed","tryParseConditionalConsequent","valid","getArrowLikeExpressions","alternate","parseMaybeAssign","parseMaybeAssignAllowIn","disallowInvalid","arrows","finishArrowValidation","every","toAssignableList","trailingCommaLoc","checkParams","result","parseParenItem","typeCastNode","assertModuleNodeAllowed","decl","parseExportDeclaration","declarationNode","parseExportSpecifiers","parseExportFrom","eatExportStar","maybeParseExportNamespaceSpecifier","hasNamespace","parseClassId","isStatement","optionalId","parseClassMember","member","parseClassMemberFromModifier","isIterator","readIterator","fullWord","left","exprList","toReferencedList","isParenthesizedExpr","parseArrayLike","close","canBePattern","isTuple","isClassMethod","isClassProperty","isNonstaticConstructor","isThisParam","pushClassPrivateMethod","parseClassSuper","superTypeParameters","implemented","checkGetterSetterParams","parsePropertyNamePrefixOperator","parseObjPropValue","parseAssignableListItemTypes","parseMaybeDefault","shouldParseDefaultImport","parseImportSpecifierLocal","specifier","local","finishImportSpecifier","maybeParseDefaultImportSpecifier","parseImportSpecifier","importedIsString","isInTypeOnlyImport","isMaybeTypeOnly","firstIdent","imported","specifierTypeKind","as_ident","specifierIsTypeImport","checkReservedWord","parseBindingAtom","parseFunctionParams","allowModifiers","parseVarId","parseAsyncArrowFromCallExpression","call","shouldParseAsyncArrow","afterLeftParse","jsx","currentContext","abort","arrowExpression","maybeUnwrapTypeCastExpression","async","parseArrow","shouldParseArrow","setArrowFunctionParameters","allowDuplicates","isArrowFunction","parseParenAndDistinguishExpression","canBeArrow","parseSubscripts","parseCallExpressionArguments","parseAsyncArrowWithTypeParameters","subscriptState","isLookaheadToken_lt","typeArguments","parseNewCallee","targs","parseArrowExpression","parseTopLevel","program","fileNode","skipFlowComment","hasFlowCommentCompletion","commentSkip","shiftToFirstNonWhiteSpace","ch2","ch3","flowEnumErrorBooleanMemberNotInitialized","flowEnumErrorInvalidMemberInitializer","enumContext","flowEnumErrorNumberMemberNotInitialized","flowEnumErrorStringMemberInconsistentlyInitailized","flowEnumMemberInit","endOfInit","literal","flowEnumMemberRaw","flowEnumCheckExplicitTypeMismatch","expectedType","flowEnumMembers","seenNames","members","booleanMembers","numberMembers","stringMembers","defaultedMembers","hasUnknownMembers","memberNode","toUpperCase","flowEnumStringMembers","initializedMembers","flowEnumParseExplicitType","flowEnumBody","nameLoc","empty","boolsLen","numsLen","strsLen","defaultedLen","afterNext","__proto__","quot","amp","apos","nbsp","iexcl","cent","pound","curren","yen","brvbar","sect","uml","copy","ordf","laquo","not","shy","reg","macr","deg","plusmn","sup2","sup3","acute","micro","para","middot","cedil","sup1","ordm","raquo","frac14","frac12","frac34","iquest","Agrave","Aacute","Acirc","Atilde","Auml","Aring","AElig","Ccedil","Egrave","Eacute","Ecirc","Euml","Igrave","Iacute","Icirc","Iuml","ETH","Ntilde","Ograve","Oacute","Ocirc","Otilde","Ouml","times","Oslash","Ugrave","Uacute","Ucirc","Uuml","Yacute","THORN","szlig","agrave","aacute","acirc","atilde","auml","aring","aelig","ccedil","egrave","eacute","ecirc","euml","igrave","iacute","icirc","iuml","eth","ntilde","ograve","oacute","ocirc","otilde","ouml","divide","oslash","ugrave","uacute","ucirc","uuml","yacute","thorn","yuml","OElig","oelig","Scaron","scaron","Yuml","fnof","circ","Alpha","Beta","Gamma","Delta","Epsilon","Zeta","Eta","Theta","Iota","Kappa","Lambda","Mu","Nu","Xi","Omicron","Pi","Rho","Sigma","Tau","Upsilon","Phi","Chi","Psi","Omega","alpha","beta","gamma","delta","epsilon","zeta","eta","theta","iota","kappa","lambda","mu","nu","xi","omicron","pi","rho","sigmaf","sigma","tau","upsilon","phi","chi","psi","omega","thetasym","upsih","piv","ensp","emsp","thinsp","zwnj","zwj","lrm","rlm","ndash","mdash","lsquo","rsquo","sbquo","ldquo","rdquo","bdquo","dagger","Dagger","bull","hellip","permil","prime","Prime","lsaquo","rsaquo","oline","frasl","euro","image","weierp","real","trade","alefsym","larr","uarr","rarr","darr","harr","crarr","lArr","uArr","rArr","dArr","hArr","forall","part","exist","nabla","isin","notin","ni","prod","sum","minus","lowast","radic","infin","ang","and","or","cap","cup","int","there4","sim","cong","asymp","ne","equiv","le","ge","sub","sup","nsub","sube","supe","oplus","otimes","perp","sdot","lceil","rceil","lfloor","rfloor","lang","rang","loz","spades","clubs","hearts","diams","JsxErrors","AttributeIsEmpty","MissingClosingTagElement","openingTagName","MissingClosingTagFragment","UnexpectedSequenceExpression","HTMLEntity","UnsupportedJsxValue","UnterminatedJsxContent","UnwrappedAdjacentJSXElements","isFragment","getQualifiedJSXName","namespace","jsxReadToken","jsxReadEntity","jsxReadNewLine","normalizeCRLF","jsxReadString","codePoint","count","desc","XHTMLEntities","jsxReadWord","jsxParseIdentifier","jsxParseNamespacedName","jsxParseElementName","jsxParseAttributeValue","setContext","jsxParseExpressionContainer","jsxParseEmptyExpression","jsxParseSpreadChild","previousContext","jsxParseAttribute","jsxParseOpeningElementAt","jsxParseOpeningElementAfterName","selfClosing","jsxParseClosingElementAt","jsxParseElementAt","children","openingElement","closingElement","contents","openingFragment","closingFragment","jsxParseElement","newContext","TypeScriptScope","enums","constEnums","classes","exportOnlyBindings","TypeScriptScopeHandler","isConst","wasConst","getOwn","hasOwnProperty","nonNull","assert","TSErrors","AbstractMethodHasImplementation","methodName","AbstractPropertyHasInitializer","propertyName","AccesorCannotDeclareThisParameter","AccesorCannotHaveTypeParameters","CannotFindName","ClassMethodHasDeclare","ClassMethodHasReadonly","ConstInitiailizerMustBeStringOrNumericLiteralOrLiteralEnumReference","ConstructorHasTypeParameters","DeclareAccessor","DeclareClassFieldHasInitializer","DeclareFunctionHasImplementation","DuplicateAccessibilityModifier","modifier","DuplicateModifier","EmptyHeritageClauseType","EmptyTypeArguments","EmptyTypeParameters","ExpectedAmbientAfterExportDeclare","ImportAliasHasImportType","IncompatibleModifiers","modifiers","IndexSignatureHasAbstract","IndexSignatureHasAccessibility","IndexSignatureHasDeclare","IndexSignatureHasOverride","IndexSignatureHasStatic","InitializerNotAllowedInAmbientContext","InvalidModifierOnTypeMember","InvalidModifierOnTypeParameter","InvalidModifierOnTypeParameterPositions","InvalidModifiersOrder","orderedModifiers","InvalidPropertyAccessAfterInstantiationExpression","InvalidTupleMemberLabel","MissingInterfaceName","MixedLabeledAndUnlabeledElements","NonAbstractClassHasAbstractMethod","NonClassMethodPropertyHasAbstractModifer","OptionalTypeBeforeRequired","OverrideNotInSubClass","PrivateElementHasAbstract","PrivateElementHasAccessibility","ReadonlyForMethodSignature","ReservedArrowTypeParam","ReservedTypeAssertion","SetAccesorCannotHaveOptionalParameter","SetAccesorCannotHaveRestParameter","SetAccesorCannotHaveReturnType","SingleTypeParameterWithoutTrailingComma","typeParameterName","StaticBlockCannotHaveModifier","TypeAnnotationAfterAssign","TypeImportCannotSpecifyDefaultAndNamed","TypeModifierIsUsedInTypeExports","TypeModifierIsUsedInTypeImports","UnexpectedParameterModifier","UnexpectedReadonly","UnexpectedTypeAnnotation","UnexpectedTypeCastInParameter","UnsupportedImportTypeArgument","UnsupportedParameterPropertyKind","UnsupportedSignatureParameterKind","keywordTypeFromName","tsIsAccessModifier","tsIsVarianceAnnotations","tsIsIdentifier","tsTokenCanFollowModifier","tsNextTokenCanFollowModifier","tsParseModifier","allowedModifiers","stopOnStartOfClassStaticBlock","tsIsStartOfStaticBlocks","tsTryParse","bind","tsParseModifiers","modified","disallowedModifiers","errorTemplate","enforceOrder","before","after","incompatible","mod1","mod2","accessibility","tsIsListTerminator","tsParseList","parseElement","tsParseDelimitedList","refTrailingCommaPos","tsParseDelimitedListWorker","expectSuccess","trailingCommaPos","element","tsParseBracketedList","bracket","skipFirstToken","tsParseImportType","qualifier","tsParseEntityName","tsParseTypeArguments","allowReservedWords","tsParseTypeReference","typeName","tsParseThisTypePredicate","lhs","parameterName","tsParseTypeAnnotation","asserts","tsParseThisTypeNode","tsParseTypeQuery","exprName","tsParseInOutModifiers","tsParseNoneModifiers","tsParseTypeParameter","parseModifiers","tsParseTypeParameterName","constraint","tsEatThenParseType","tsTryParseTypeParameters","tsParseTypeParameters","tsTryNextParseConstantContext","typeReference","tsFillSignature","returnToken","signature","returnTokenRequired","paramsKey","returnTypeKey","tsParseBindingListForSignature","tsParseTypeOrTypePredicateAnnotation","parseBindingList","tsParseTypeMemberSemicolon","tsParseSignatureMember","tsIsUnambiguouslyIndexSignature","tsTryParseIndexSignature","tsLookAhead","parameters","tsTryParseTypeAnnotation","tsParsePropertyOrMethodSignature","readonly","nodeAny","firstParameter","tsParseTypeMember","idx","parsePropertyName","tsParseTypeLiteral","tsParseObjectTypeMembers","tsIsStartOfMappedType","tsParseMappedTypeParameter","tsExpectThenParseType","tsParseMappedType","nameType","tsParseType","tsTryParseType","tsParseTupleType","elementTypes","tsParseTupleElementType","seenOptionalElement","labeledElements","elementNode","checkType","isLabeled","labeled","labeledNode","optionalTypeNode","restNode","tsParseParenthesizedType","tsParseFunctionOrConstructorType","abstract","tsInAllowConditionalTypesContext","tsParseLiteralTypeNode","tsParseTemplateLiteralType","parseTemplate","parseTemplateSubstitution","tsParseThisTypeOrThisTypePredicate","thisKeyword","tsParseNonArrayType","parseMaybeUnary","nodeType","tsParseArrayTypeOrHigher","tsParseTypeOperator","operator","tsParseTypeOperatorOrHigher","tsCheckTypeAnnotationForReadOnly","tsParseInferType","tsParseConstraintForInferType","tsInDisallowConditionalTypesContext","isTypeOperator","tsParseUnionOrIntersectionType","parseConstituentType","hasLeadingOperator","tsParseIntersectionTypeOrHigher","tsParseUnionTypeOrHigher","tsIsStartOfFunctionType","tsIsUnambiguouslyStartOfFunctionType","tsSkipParameterStart","previousErrorCount","parseObjectLike","tsInType","t","tsParseTypePredicateAsserts","thisTypePredicate","typePredicateVariable","tsParseTypePredicatePrefix","tsTryParseTypeOrTypePredicateAnnotation","eatColon","tsParseNonConditionalType","extendsType","trueType","falseType","isAbstractConstructorSignature","tsParseTypeAssertion","tsNextThenParseType","tsParseHeritageClause","originalStartLoc","delimitedList","tsParseInterfaceDeclaration","checkIdentifier","tsParseTypeAliasDeclaration","tsInNoContext","cb","oldContext","oldInDisallowConditionalTypesContext","tsDoThenParseType","tsParseEnumMember","initializer","tsParseEnumDeclaration","tsParseModuleBlock","parseBlockOrModuleBlockBody","tsParseModuleOrNamespaceDeclaration","nested","inner","tsParseAmbientExternalModuleDeclaration","global","tsParseImportEqualsDeclaration","isExport","moduleReference","tsParseModuleReference","tsIsExternalModuleReference","tsParseExternalModuleReference","f","tsTryParseAndCatch","tsTryParseDeclare","nany","starttype","tsInAmbientContext","parseFunctionStatement","parseClass","parseVarStatement","tsParseDeclaration","tsTryParseExportDeclaration","tsParseExpressionStatement","mod","tsCheckLineTerminator","tsParseAbstractDeclaration","tsTryParseGenericAsyncArrowFunction","oldMaybeInArrowParameters","tsParseTypeArgumentsInExpression","reScan_lt","tsIsDeclarationStart","parseAssignableListItem","decorators","override","elt","pp","parameter","isSimpleParameter","bodilessType","registerFunctionStatementId","tsCheckForInvalidTypeCasts","items","isInParens","nonNullExpression","isOptionalCall","missingParenErrorLoc","atPossibleAsyncArrow","asyncArrowFn","parseTaggedTemplateExpression","tokenType","parseExprOp","leftStartPos","leftStartLoc","minPrec","reScan_lt_gt","checkKeywords","checkDuplicateExports","ahead","importNode","isAbstractClass","cls","allowMissingInitializer","declarations","expressions","isPossiblyLiteralEnum","parseStatementContent","parseAccessModifier","tsHasSomeModifiers","callParseClassMemberWithIsStatic","parseClassStaticBlock","parseClassMemberWithIsStatic","hadSuperClass","parsePostMemberNameModifiers","methodOrProp","isDeclare","isIdentifier","parseClassPropertyAnnotation","definite","declareClassPrivateMethodInScope","typeCast","reportReservedArrowTypeParam","trailingComma","toAssignableParenthesizedExpression","checkToRestConversion","allowPattern","TSTypeCastExpression","TSParameterProperty","TSNonNullExpression","TSAsExpression","TSTypeAssertion","parseMaybeDecoratorArguments","checkCommaAfterRest","canHaveLeadingDecorator","getGetterSetterExpectedParamCount","baseCount","firstParam","hasContextParam","parseCatchClauseParam","oldIsAmbientContext","oldInAbstractClass","hasBody","shouldParseAsAmbientContext","getExpression","parseExportSpecifier","isString","isInTypeExport","parseTypeOnlyImportExportSpecifier","isImport","isInTypeOnlyImportExport","leftOfAsKey","rightOfAsKey","leftOfAs","rightOfAs","hasTypeSpecifier","canParseAsKeyword","firstAs","secondAs","parseModuleExportName","kindKey","isUncomputedMemberExpressionChain","PlaceholderErrors","ClassNameIsRequired","UnexpectedSpace","parsePlaceholder","assertNoSpace","finishPlaceholder","isFinished","verifyBreakContinue","isBreak","parseBlock","parseFunctionId","takeDecorators","oldStrict","parseClassBody","maybeParseExportDefaultSpecifier","checkExport","hasStarImport","maybeParseStarImportSpecifier","parseNamedImportSpecifiers","parseImportSource","parseV8Intrinsic","v8IntrinsicStartLoc","parseIdentifierName","identifier","expectedConfig","expectedName","expectedOptions","expectedKeys","expectedOptionsIsEmpty","p","option","PIPELINE_PROPOSALS","TOPIC_TOKENS","RECORD_AND_TUPLE_SYNTAX_TYPES","validatePlugins","decoratorsBeforeExport","proposalList","tupleSyntaxIsHash","syntaxType","tokenList","moduleAttributesVersionPluginOption","missingPlugins","mixinPlugins","estree","flow","typescript","v8intrinsic","placeholders","mixinPluginNames","defaultOptions","sourceFilename","allowAwaitOutsideFunction","allowReturnOutsideFunction","allowImportExportEverywhere","allowSuperOutsideMethod","allowUndeclaredExports","createParenthesizedExpressions","getOptions","opts","unwrapParenthesizedExpression","LValParser","arg","toReferencedListDeep","parseSpread","parseRestBinding","closeCharCode","allowEmpty","elts","parseDecorator","parseBindingRestProperty","parseBindingProperty","ObjectProperty","checkLVal","in","checkClashes","strictModeChanged","allowingSloppyLetBinding","hasParenthesizedAncestor","validity","ParseErrorClass","isParenthesizedExpression","nextAncestor","child","allowLetBinding","declareNameFromIdentifier","ExpressionParser","checkProto","isRecord","protoRef","used","shouldExitDescending","disallowIn","disallowInAnd","parseExpressionBase","allowInAnd","parseMaybeAssignDisallowIn","resultError","parseYield","ownExpressionErrors","parseMaybeConditional","parseExprOps","parseMaybeUnaryOrPrivate","op","prec","checkPipelineAtInfixOperator","logical","coalesce","parseExprOpRightExpr","finishedNode","nextOp","withTopicBindingContext","parseHackPipeBody","parseSmartPipelineBodyInStyle","parseExprOpBaseRightExpr","withSoloAwaitPermittingContext","parseFSharpPipelineBody","requiredParentheses","topicReferenceWasUsedInCurrentContext","checkExponentialAfterUnary","sawUnary","isAwait","isAwaitAllowed","parseAwait","update","isDelete","parseUpdate","isAmbiguousAwait","updateExpressionNode","parseExprSubscripts","maybeAsyncArrow","parseBind","parseCoverCallAndAsyncArrowHead","parseMember","parseNoCallExpr","tag","quasi","dynamicImport","allowPlaceholder","nodeForExtra","oldInFSharpPipelineDirectBody","addTrailingCommaExtraToNode","parseExprListItem","parseSuper","parseImportMetaProperty","parseDo","parseFunctionOrFunctionSent","parseDecorators","parseNewOrNewTarget","parseTopicReferenceThenEqualsSign","parseTopicReference","pipeProposal","parseModuleExpression","parseFunction","parseAsyncArrowUnaryFunction","topicTokenType","topicTokenValue","finishTopicReference","testTopicReferenceConfiguration","topicReferenceIsAllowedInCurrentContext","registerTopicReference","meta","parseMetaProperty","innerStartPos","innerStartLoc","spreadStartLoc","optionalCommaStartLoc","spreadNodeStartPos","spreadNodeStartLoc","innerEndLoc","arrowNode","wrapParenthesis","parenExpression","metaProp","parseNew","parseExprList","parseTemplateElement","isTagged","elemStart","elem","isTail","endOffset","elemEnd","cooked","tail","curElt","quasis","propHash","parsePropertyDefinition","maybeAsyncOrAccessorProp","keyName","finishedProp","generator","isExpression","hasStrictModeDirective","nonSimple","isSimpleParamList","formalParameters","reservedTest","delegating","delegate","childExpr","isSimpleReference","checkSmartPipeTopicBodyEarlyErrors","callback","outerContextTopicState","withSmartMixTopicForbiddingContext","outerContextSoloAwaitState","prodParamToSet","prodParamToClear","ret","revertScopes","parseProgram","loopLabel","switchLabel","FUNC_NO_FLAGS","FUNC_STATEMENT","FUNC_HANGING_STATEMENT","FUNC_NULLABLE_ID","loneSurrogate","keywordRelationalOperator","babel7CompatTokens","hashEndPos","hashEndLoc","backquoteEnd","backquoteEndLoc","startToken","templateValue","templateElementEnd","templateElementEndLoc","endToken","StatementParser","interpreter","parseInterpreterDirective","stmtToDirective","isLetKeyword","endCh","parseBreakContinueStatement","parseDebuggerStatement","parseDoStatement","parseForStatement","parseIfStatement","parseReturnStatement","parseSwitchStatement","parseThrowStatement","parseTryStatement","parseWhileStatement","parseWithStatement","parseEmptyStatement","nextTokenCharCode","isAsyncFunction","maybeName","parseLabeledStatement","allowExport","currentContextDecorators","decorator","lab","parseHeaderExpression","awaitAt","parseFor","startsWithLet","initNode","parseVar","parseForIn","startsWithAsync","isForOf","declarationPosition","discriminant","cases","cur","sawDefault","isCase","simple","block","handler","clause","finalizer","statementStart","allowDirectives","createNewLexicalScope","afterBlockParse","parsedNonDirective","isForIn","await","isFor","statement","isHangingStatement","requireId","hadConstructor","publicMethod","privateMethod","publicProp","privateProp","accessorProp","publicMember","parseClassElementName","isPrivate","maybeQuestionTokenStartLoc","pushClassPrivateProperty","pushClassProperty","pushClassAccessorProperty","parseClassAccessorProperty","parseInitializer","hasDefault","parseAfterDefault","hasStar","parseAfterNamespace","isFromRequired","hasSpecifiers","maybeParseExportNamedSpecifiers","hasDeclaration","maybeParseExportDeclaration","isTypeExport","assertions","nextType","hasFrom","nextAfterFrom","maybeParseImportAssertions","checkJSONModuleImport","checkNames","isDefault","isFrom","nodes","surrogate","isJSONModuleImport","nonDefaultNamedSpecifier","parseNext","maybeParseModuleAttributes","parseAssertEntries","attrs","attrNames","importSpecifier","Parser","pluginsMap","pluginMap","getParser","ast","moduleError","generateExportedTokenTypes","internalTokenTypes","tokTypes","getParserClass","parserClassCache","pluginsFromOptions","pluginList","Observable","combineLatestWith","catchError","shareReplay","chalk","l","v","parms","console","Date","LoggingLevel","Debug","Info","Warn","level","msg","red","yellow","green","gray","cleanSwitchDomain","restoreSwitchDomain","equals","toNum","toInt","resolveType","o","r","resolveTypes","resolveValue","expressionStatement","findReferances","getDevicesFromProps","stringOrExpression","deviceProp","referances","watchFile","unwatchFile","writeFileSync","writeFile","readFile","fileStore$","fileName","obs","writeToFile","v4","uuidv4","getDeviceDehumidifier","currentFanSpeedSetting","humiditySetpointPercent","humidityAmbientPercent","getDeviceClimate","deviceName","thermostatMode","thermostatTemperatureSetpoint","thermostatTemperatureAmbient","thermostatHumidityAmbient","base$","save","pipe","getDeviceById$","currentDevice","mockClimate","mockDehumidifier","getDeviceSubsV2","devicesState","entitesState","getDevices$","subs","deviceSubs","allSubs","entityStatus$","entites","y","acc2","err","caught","entityStatusUpdated$","getEntityStatusUpdated","found","updatedDevices","unsubscribe","ReplaySubject","webSocket","HomeAssistantWebSocket","url","homeAssistantResult","subscribedMessages","initWebSocket","webSocketSubject","closeObserver","setTimeout","processMessage","complete","messages","asObservable","massageBase","m","HomeAssistantDataAccess","counter","homeAssistantWebSocket","entityStatus","createSubScription","entityStatusUpdated","event_type","event","data","new_state","areas","getServices","services","getDevices","iniMessage","resultId","obj","defValue","pathArray","prevObj","deviceTraits","humanName","activeThermostatMode","supportedValues","hint","targetTempReachedEstimateUnixTimestampSec","required","availableThermostatModes","thermostatTemperatureRange","minThresholdCelsius","maxThresholdCelsius","thermostatTemperatureUnit","command","thermostatTemperatureSetpointHigh","thermostatTemperatureSetpointLow","thermostatTemperatureRelativeDegree","thermostatTemperatureRelativeWeight","commandOnlyOnOff","queryOnlyOnOff","deviceTypes","cameraStreamSupportedProtocols","cameraStreamNeedAuthToken","cameraStreamNeedDrmEncryption","dotenv","require","http","https","cors","urlencoded","extended","createServer","listen","cert","handle","signal"],"sourceRoot":""}