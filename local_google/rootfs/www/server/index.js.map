{"version":3,"file":"index.js","mappings":"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GAAG,EAAE,EAAE,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,EAAE,EAAE,GAAG,GAAG,GAAG,EAAE,EAAE,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,EAAE,EAAE,EAAE,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,GAAG,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,GAAG,GAAG,EAAE,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,EAAE,EAAE,IAAI,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,IAAI,GAAG,IAAI,GAAG,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,IAAI,EAAE,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,IAAI,EAAE,EAAE,EAAE,EAAE,GAAG,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,GAAG,GAAG,EAAE,IAAI,GAAG,IAAI,EAAE,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,KAAK,GAAG,GAAG,KAAK,KAAK,IAAI,KAAK,IAAI,EAAE,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,IAAI,GAAG,IAAI,GAAG,EAAE,EAAE,GAAG,GAAG,GAAG,EAAE,EAAE,EAAE,GAAG,KAAK,EAAE,KAAK,GAAG,EAAE,KAAK,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,IAAI,GAAG,EAAE,GAAG,EAAE,EAAE,IAAI,KAAK,IAAI,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,KAAK,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,KAAK,GAAG,IAAI,GAAG,GAAG,EAAE,GAAG,EAAE,IAAI,GAAG,GAAG,GAAG,KAAK,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,IAAI,GAAG,GAAG,EAAE,EAAE,KAAK,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,KAAK,MAAM,GAAG,KAAK,EAAE,IAAI,EAAE,KAAK,GAAG,KAAK,KAAK,IAAI,KAAK,MAE55CC,GAAwB,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,IAAI,EAAE,IAAI,EAAE,EAAE,EAAE,IAAI,EAAE,IAAI,GAAG,GAAG,EAAE,IAAI,EAAE,GAAG,GAAG,GAAG,GAAG,EAAE,EAAE,GAAG,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,G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","sources":["webpack://@ha-assistant/server/../../node_modules/express/lib/ sync","webpack://@ha-assistant/server/../../node_modules/accepts/index.js","webpack://@ha-assistant/server/../../node_modules/array-flatten/array-flatten.js","webpack://@ha-assistant/server/../../node_modules/body-parser/index.js","webpack://@ha-assistant/server/../../node_modules/body-parser/lib/read.js","webpack://@ha-assistant/server/../../node_modules/body-parser/lib/types/json.js","webpack://@ha-assistant/server/../../node_modules/body-parser/lib/types/raw.js","webpack://@ha-assistant/server/../../node_modules/body-parser/lib/types/text.js","webpack://@ha-assistant/server/../../node_modules/body-parser/lib/types/urlencoded.js","webpack://@ha-assistant/server/../../node_modules/body-parser/node_modules/debug/src/browser.js","webpack://@ha-assistant/server/../../node_modules/body-parser/node_modules/debug/src/debug.js","webpack://@ha-assistant/server/../../node_modules/body-parser/node_modules/debug/src/index.js","webpack://@ha-assistant/server/../../node_modules/body-parser/node_modules/debug/src/node.js","webpack://@ha-assistant/server/../../node_modules/body-parser/node_modules/ms/index.js","webpack://@ha-assistant/server/../../node_modules/bufferutil/fallback.js","webpack://@ha-assistant/server/../../node_modules/bufferutil/index.js","webpack://@ha-assistant/server/../../node_modules/bytes/index.js","webpack://@ha-assistant/server/../../node_modules/call-bind/callBound.js","webpack://@ha-assistant/server/../../node_modules/call-bind/index.js","webpack://@ha-assistant/server/../../node_modules/content-disposition/index.js","webpack://@ha-assistant/server/../../node_modules/content-disposition/node_modules/safe-buffer/index.js","webpack://@ha-assistant/server/../../node_modules/content-type/index.js","webpack://@ha-assistant/server/../../node_modules/cookie-signature/index.js","webpack://@ha-assistant/server/../../node_modules/cookie/index.js","webpack://@ha-assistant/server/../../node_modules/cors/lib/index.js","webpack://@ha-assistant/server/../../node_modules/depd/index.js","webpack://@ha-assistant/server/../../node_modules/destroy/index.js","webpack://@ha-assistant/server/../../node_modules/dotenv/lib/main.js","webpack://@ha-assistant/server/../../node_modules/ee-first/index.js","webpack://@ha-assistant/server/../../node_modules/encodeurl/index.js","webpack://@ha-assistant/server/../../node_modules/escape-html/index.js","webpack://@ha-assistant/server/../../node_modules/etag/index.js","webpack://@ha-assistant/server/../../node_modules/express/index.js","webpack://@ha-assistant/server/../../node_modules/express/lib/application.js","webpack://@ha-assistant/server/../../node_modules/express/lib/express.js","webpack://@ha-assistant/server/../../node_modules/express/lib/middleware/init.js","webpack://@ha-assistant/server/../../node_modules/express/lib/middleware/query.js","webpack://@ha-assistant/server/../../node_modules/express/lib/request.js","webpack://@ha-assistant/server/../../node_modules/express/lib/response.js","webpack://@ha-assistant/server/../../node_modules/express/lib/router/index.js","webpack://@ha-assistant/server/../../node_modules/express/lib/router/layer.js","webpack://@ha-assistant/server/../../node_modules/express/lib/router/route.js","webpack://@ha-assistant/server/../../node_modules/express/lib/utils.js","webpack://@ha-assistant/server/../../node_modules/express/lib/view.js","webpack://@ha-assistant/server/../../node_modules/express/node_modules/debug/src/browser.js","webpack://@ha-assistant/server/../../node_modules/express/node_modules/debug/src/debug.js","webpack://@ha-assistant/server/../../node_modules/express/node_modules/debug/src/index.js","webpack://@ha-assistant/server/../../node_modules/express/node_modules/debug/src/node.js","webpack://@ha-assistant/server/../../node_modules/express/node_modules/ms/index.js","webpack://@ha-assistant/server/../../node_modules/express/node_modules/safe-buffer/index.js","webpack://@ha-assistant/server/../../node_modules/finalhandler/index.js","webpack://@ha-assistant/server/../../node_modules/finalhandler/node_modules/debug/src/browser.js","webpack://@ha-assistant/server/../../node_modules/finalhandler/node_modules/debug/src/debug.js","webpack://@ha-assistant/server/../../node_modules/finalhandler/node_modules/debug/src/index.js","webpack://@ha-assistant/server/../../node_modules/finalhandler/node_modules/debug/src/node.js","webpack://@ha-assistant/server/../../node_modules/finalhandler/node_modules/ms/index.js","webpack://@ha-assistant/server/../../node_modules/forwarded/index.js","webpack://@ha-assistant/server/../../node_modules/fresh/index.js","webpack://@ha-assistant/server/../../node_modules/function-bind/implementation.js","webpack://@ha-assistant/server/../../node_modules/function-bind/index.js","webpack://@ha-assistant/server/../../node_modules/get-intrinsic/index.js","webpack://@ha-assistant/server/../../node_modules/has-symbols/index.js","webpack://@ha-assistant/server/../../node_modules/has-symbols/shams.js","webpack://@ha-assistant/server/../../node_modules/has/src/index.js","webpack://@ha-assistant/server/../../node_modules/http-errors/index.js","webpack://@ha-assistant/server/../../node_modules/iconv-lite/encodings/dbcs-codec.js","webpack://@ha-assistant/server/../../node_modules/iconv-lite/encodings/dbcs-data.js","webpack://@ha-assistant/server/../../node_modules/iconv-lite/encodings/index.js","webpack://@ha-assistant/server/../../node_modules/iconv-lite/encodings/internal.js","webpack://@ha-assistant/server/../../node_modules/iconv-lite/encodings/sbcs-codec.js","webpack://@ha-assistant/server/../../node_modules/iconv-lite/encodings/sbcs-data-generated.js","webpack://@ha-assistant/server/../../node_modules/iconv-lite/encodings/sbcs-data.js","webpack://@ha-assistant/server/../../node_modules/iconv-lite/encodings/utf16.js","webpack://@ha-assistant/server/../../node_modules/iconv-lite/encodings/utf7.js","webpack://@ha-assistant/server/../../node_modules/iconv-lite/lib/bom-handling.js","webpack://@ha-assistant/server/../../node_modules/iconv-lite/lib/extend-node.js","webpack://@ha-assistant/server/../../node_modules/iconv-lite/lib/index.js","webpack://@ha-assistant/server/../../node_modules/iconv-lite/lib/streams.js","webpack://@ha-assistant/server/../../node_modules/inherits/inherits.js","webpack://@ha-assistant/server/../../node_modules/inherits/inherits_browser.js","webpack://@ha-assistant/server/../../node_modules/ipaddr.js/lib/ipaddr.js","webpack://@ha-assistant/server/../../node_modules/media-typer/index.js","webpack://@ha-assistant/server/../../node_modules/merge-descriptors/index.js","webpack://@ha-assistant/server/../../node_modules/methods/index.js","webpack://@ha-assistant/server/../../node_modules/mime-db/index.js","webpack://@ha-assistant/server/../../node_modules/mime-types/index.js","webpack://@ha-assistant/server/../../node_modules/mime/mime.js","webpack://@ha-assistant/server/../../node_modules/negotiator/index.js","webpack://@ha-assistant/server/../../node_modules/negotiator/lib/charset.js","webpack://@ha-assistant/server/../../node_modules/negotiator/lib/encoding.js","webpack://@ha-assistant/server/../../node_modules/negotiator/lib/language.js","webpack://@ha-assistant/server/../../node_modules/negotiator/lib/mediaType.js","webpack://@ha-assistant/server/../../node_modules/node-gyp-build/index.js","webpack://@ha-assistant/server/../../node_modules/object-assign/index.js","webpack://@ha-assistant/server/../../node_modules/object-inspect/index.js","webpack://@ha-assistant/server/../../node_modules/object-inspect/util.inspect.js","webpack://@ha-assistant/server/../../node_modules/on-finished/index.js","webpack://@ha-assistant/server/../../node_modules/parseurl/index.js","webpack://@ha-assistant/server/../../node_modules/path-to-regexp/index.js","webpack://@ha-assistant/server/../../node_modules/proxy-addr/index.js","webpack://@ha-assistant/server/../../node_modules/qs/lib/formats.js","webpack://@ha-assistant/server/../../node_modules/qs/lib/index.js","webpack://@ha-assistant/server/../../node_modules/qs/lib/parse.js","webpack://@ha-assistant/server/../../node_modules/qs/lib/stringify.js","webpack://@ha-assistant/server/../../node_modules/qs/lib/utils.js","webpack://@ha-assistant/server/../../node_modules/range-parser/index.js","webpack://@ha-assistant/server/../../node_modules/raw-body/index.js","webpack://@ha-assistant/server/../../node_modules/rxjs/src/index.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/AsyncSubject.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/BehaviorSubject.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/Notification.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/NotificationFactories.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/Observable.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/ReplaySubject.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/Scheduler.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/Subject.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/Subscriber.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/Subscription.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/config.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/firstValueFrom.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/lastValueFrom.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/observable/ConnectableObservable.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/observable/bindCallback.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/observable/bindCallbackInternals.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/observable/bindNodeCallback.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/observable/combineLatest.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/observable/concat.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/observable/connectable.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/observable/defer.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/observable/dom/WebSocketSubject.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/observable/dom/animationFrames.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/observable/dom/webSocket.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/observable/empty.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/observable/forkJoin.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/observable/from.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/observable/fromEvent.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/observable/fromEventPattern.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/observable/fromSubscribable.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/observable/generate.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/observable/iif.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/observable/innerFrom.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/observable/interval.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/observable/merge.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/observable/never.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/observable/of.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/observable/onErrorResumeNext.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/observable/pairs.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/observable/partition.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/observable/race.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/observable/range.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/observable/throwError.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/observable/timer.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/observable/using.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/observable/zip.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/operators/OperatorSubscriber.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/operators/audit.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/operators/auditTime.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/operators/buffer.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/operators/bufferCount.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/operators/bufferTime.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/operators/bufferToggle.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/operators/bufferWhen.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/operators/catchError.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/operators/combineAll.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/operators/combineLatest.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/operators/combineLatestAll.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/operators/combineLatestWith.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/operators/concat.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/operators/concatAll.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/operators/concatMap.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/operators/concatMapTo.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/operators/concatWith.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/operators/connect.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/operators/count.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/operators/debounce.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/operators/debounceTime.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/operators/defaultIfEmpty.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/operators/delay.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/operators/delayWhen.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/operators/dematerialize.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/operators/distinct.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/operators/distinctUntilChanged.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/operators/distinctUntilKeyChanged.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/operators/elementAt.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/operators/endWith.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/operators/every.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/operators/exhaust.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/operators/exhaustAll.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/operators/exhaustMap.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/operators/expand.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/operators/filter.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/operators/finalize.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/operators/find.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/operators/findIndex.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/operators/first.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/operators/flatMap.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/operators/groupBy.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/operators/ignoreElements.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/operators/isEmpty.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/operators/joinAllInternals.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/operators/last.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/operators/map.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/operators/mapTo.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/operators/materialize.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/operators/max.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/operators/merge.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/operators/mergeAll.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/operators/mergeInternals.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/operators/mergeMap.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/operators/mergeMapTo.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/operators/mergeScan.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/operators/mergeWith.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/operators/min.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/operators/multicast.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/operators/observeOn.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/operators/onErrorResumeNext.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/operators/pairwise.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/operators/pluck.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/operators/publish.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/operators/publishBehavior.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/operators/publishLast.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/operators/publishReplay.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/operators/raceWith.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/operators/reduce.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/operators/refCount.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/operators/repeat.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/operators/repeatWhen.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/operators/retry.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/operators/retryWhen.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/operators/sample.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/operators/sampleTime.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/operators/scan.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/operators/scanInternals.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/operators/sequenceEqual.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/operators/share.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/operators/shareReplay.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/operators/single.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/operators/skip.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/operators/skipLast.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/operators/skipUntil.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/operators/skipWhile.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/operators/startWith.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/operators/subscribeOn.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/operators/switchAll.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/operators/switchMap.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/operators/switchMapTo.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/operators/switchScan.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/operators/take.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/operators/takeLast.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/operators/takeUntil.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/operators/takeWhile.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/operators/tap.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/operators/throttle.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/operators/throttleTime.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/operators/throwIfEmpty.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/operators/timeInterval.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/operators/timeout.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/operators/timeoutWith.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/operators/timestamp.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/operators/toArray.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/operators/window.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/operators/windowCount.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/operators/windowTime.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/operators/windowToggle.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/operators/windowWhen.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/operators/withLatestFrom.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/operators/zip.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/operators/zipAll.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/operators/zipWith.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/scheduled/scheduleArray.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/scheduled/scheduleAsyncIterable.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/scheduled/scheduleIterable.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/scheduled/scheduleObservable.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/scheduled/schedulePromise.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/scheduled/scheduleReadableStreamLike.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/scheduled/scheduled.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/scheduler/Action.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/scheduler/AnimationFrameAction.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/scheduler/AnimationFrameScheduler.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/scheduler/AsapAction.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/scheduler/AsapScheduler.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/scheduler/AsyncAction.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/scheduler/AsyncScheduler.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/scheduler/QueueAction.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/scheduler/QueueScheduler.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/scheduler/VirtualTimeScheduler.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/scheduler/animationFrame.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/scheduler/animationFrameProvider.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/scheduler/asap.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/scheduler/async.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/scheduler/dateTimestampProvider.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/scheduler/immediateProvider.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/scheduler/intervalProvider.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/scheduler/performanceTimestampProvider.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/scheduler/queue.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/scheduler/timeoutProvider.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/symbol/iterator.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/symbol/observable.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/util/ArgumentOutOfRangeError.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/util/EmptyError.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/util/Immediate.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/util/NotFoundError.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/util/ObjectUnsubscribedError.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/util/SequenceError.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/util/UnsubscriptionError.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/util/args.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/util/argsArgArrayOrObject.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/util/argsOrArgArray.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/util/arrRemove.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/util/createErrorClass.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/util/createObject.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/util/errorContext.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/util/executeSchedule.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/util/identity.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/util/isArrayLike.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/util/isAsyncIterable.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/util/isDate.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/util/isFunction.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/util/isInteropObservable.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/util/isIterable.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/util/isObservable.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/util/isPromise.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/util/isReadableStreamLike.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/util/isScheduler.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/util/lift.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/util/mapOneOrManyArgs.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/util/noop.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/util/not.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/util/pipe.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/util/reportUnhandledError.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/internal/util/throwUnobservableError.ts","webpack://@ha-assistant/server/../../node_modules/rxjs/src/webSocket/index.ts","webpack://@ha-assistant/server/../../node_modules/safer-buffer/safer.js","webpack://@ha-assistant/server/../../node_modules/send/index.js","webpack://@ha-assistant/server/../../node_modules/send/node_modules/debug/node_modules/ms/index.js","webpack://@ha-assistant/server/../../node_modules/send/node_modules/debug/src/browser.js","webpack://@ha-assistant/server/../../node_modules/send/node_modules/debug/src/debug.js","webpack://@ha-assistant/server/../../node_modules/send/node_modules/debug/src/index.js","webpack://@ha-assistant/server/../../node_modules/send/node_modules/debug/src/node.js","webpack://@ha-assistant/server/../../node_modules/send/node_modules/ms/index.js","webpack://@ha-assistant/server/../../node_modules/serve-static/index.js","webpack://@ha-assistant/server/../../node_modules/setprototypeof/index.js","webpack://@ha-assistant/server/../../node_modules/side-channel/index.js","webpack://@ha-assistant/server/../../node_modules/statuses/index.js","webpack://@ha-assistant/server/../../node_modules/toidentifier/index.js","webpack://@ha-assistant/server/../../node_modules/type-is/index.js","webpack://@ha-assistant/server/../../node_modules/unpipe/index.js","webpack://@ha-assistant/server/../../node_modules/utf-8-validate/fallback.js","webpack://@ha-assistant/server/../../node_modules/utf-8-validate/index.js","webpack://@ha-assistant/server/../../node_modules/utils-merge/index.js","webpack://@ha-assistant/server/../../node_modules/vary/index.js","webpack://@ha-assistant/server/../../node_modules/ws/index.js","webpack://@ha-assistant/server/../../node_modules/ws/lib/buffer-util.js","webpack://@ha-assistant/server/../../node_modules/ws/lib/constants.js","webpack://@ha-assistant/server/../../node_modules/ws/lib/event-target.js","webpack://@ha-assistant/server/../../node_modules/ws/lib/extension.js","webpack://@ha-assistant/server/../../node_modules/ws/lib/limiter.js","webpack://@ha-assistant/server/../../node_modules/ws/lib/permessage-deflate.js","webpack://@ha-assistant/server/../../node_modules/ws/lib/receiver.js","webpack://@ha-assistant/server/../../node_modules/ws/lib/sender.js","webpack://@ha-assistant/server/../../node_modules/ws/lib/stream.js","webpack://@ha-assistant/server/../../node_modules/ws/lib/subprotocol.js","webpack://@ha-assistant/server/../../node_modules/ws/lib/validation.js","webpack://@ha-assistant/server/../../node_modules/ws/lib/websocket-server.js","webpack://@ha-assistant/server/../../node_modules/ws/lib/websocket.js","webpack://@ha-assistant/server/external node-commonjs \"async_hooks\"","webpack://@ha-assistant/server/external node-commonjs \"buffer\"","webpack://@ha-assistant/server/external node-commonjs \"crypto\"","webpack://@ha-assistant/server/external node-commonjs \"events\"","webpack://@ha-assistant/server/external node-commonjs \"fs\"","webpack://@ha-assistant/server/external node-commonjs \"http\"","webpack://@ha-assistant/server/external node-commonjs \"https\"","webpack://@ha-assistant/server/external node-commonjs \"net\"","webpack://@ha-assistant/server/external node-commonjs \"os\"","webpack://@ha-assistant/server/external node-commonjs \"path\"","webpack://@ha-assistant/server/external node-commonjs \"querystring\"","webpack://@ha-assistant/server/external node-commonjs \"stream\"","webpack://@ha-assistant/server/external node-commonjs \"string_decoder\"","webpack://@ha-assistant/server/external node-commonjs \"tls\"","webpack://@ha-assistant/server/external node-commonjs \"tty\"","webpack://@ha-assistant/server/external node-commonjs \"url\"","webpack://@ha-assistant/server/external node-commonjs \"util\"","webpack://@ha-assistant/server/external node-commonjs \"zlib\"","webpack://@ha-assistant/server/../../node_modules/@babel/parser/src/util/location.js","webpack://@ha-assistant/server/../../node_modules/@babel/parser/src/parse-error/credentials.js","webpack://@ha-assistant/server/../../node_modules/@babel/parser/src/parse-error/to-node-description.js","webpack://@ha-assistant/server/../../node_modules/@babel/parser/src/parse-error/pipeline-operator-errors.js","webpack://@ha-assistant/server/../../node_modules/@babel/parser/src/parse-error.js","webpack://@ha-assistant/server/../../node_modules/@babel/parser/src/parse-error/module-errors.js","webpack://@ha-assistant/server/../../node_modules/@babel/parser/src/parse-error/standard-errors.js","webpack://@ha-assistant/server/../../node_modules/@babel/parser/src/parse-error/strict-mode-errors.js","webpack://@ha-assistant/server/../../node_modules/@babel/parser/src/plugins/estree.js","webpack://@ha-assistant/server/../../node_modules/@babel/parser/src/tokenizer/context.js","webpack://@ha-assistant/server/../../node_modules/@babel/parser/src/tokenizer/types.js","webpack://@ha-assistant/server/../../node_modules/@babel/babel-helper-validator-identifier/src/identifier.ts","webpack://@ha-assistant/server/../../node_modules/@babel/babel-helper-validator-identifier/src/keyword.ts","webpack://@ha-assistant/server/../../node_modules/@babel/parser/src/util/identifier.js","webpack://@ha-assistant/server/../../node_modules/@babel/parser/src/util/scopeflags.js","webpack://@ha-assistant/server/../../node_modules/@babel/parser/src/parser/comments.js","webpack://@ha-assistant/server/../../node_modules/@babel/parser/src/util/whitespace.js","webpack://@ha-assistant/server/../../node_modules/@babel/parser/src/tokenizer/state.js","webpack://@ha-assistant/server/../../node_modules/@babel/parser/src/tokenizer/index.js","webpack://@ha-assistant/server/../../node_modules/@babel/parser/src/util/scope.js","webpack://@ha-assistant/server/../../node_modules/@babel/parser/src/plugins/flow/scope.js","webpack://@ha-assistant/server/../../node_modules/@babel/parser/src/util/class-scope.js","webpack://@ha-assistant/server/../../node_modules/@babel/parser/src/util/expression-scope.js","webpack://@ha-assistant/server/../../node_modules/@babel/parser/src/util/production-parameter.js","webpack://@ha-assistant/server/../../node_modules/@babel/parser/src/parser/util.js","webpack://@ha-assistant/server/../../node_modules/@babel/parser/src/parser/node.js","webpack://@ha-assistant/server/../../node_modules/@babel/parser/src/plugins/flow/index.js","webpack://@ha-assistant/server/../../node_modules/@babel/parser/src/plugins/jsx/xhtml.js","webpack://@ha-assistant/server/../../node_modules/@babel/parser/src/plugins/jsx/index.js","webpack://@ha-assistant/server/../../node_modules/@babel/parser/src/plugins/typescript/scope.js","webpack://@ha-assistant/server/../../node_modules/@babel/parser/src/plugins/typescript/index.js","webpack://@ha-assistant/server/../../node_modules/@babel/parser/src/plugins/placeholders.js","webpack://@ha-assistant/server/../../node_modules/@babel/parser/src/plugin-utils.js","webpack://@ha-assistant/server/../../node_modules/@babel/parser/src/plugins/v8intrinsic.js","webpack://@ha-assistant/server/../../node_modules/@babel/parser/src/options.js","webpack://@ha-assistant/server/../../node_modules/@babel/parser/src/parser/lval.js","webpack://@ha-assistant/server/../../node_modules/@babel/parser/src/parser/statement.js","webpack://@ha-assistant/server/../../node_modules/@babel/parser/src/parser/index.js","webpack://@ha-assistant/server/../../node_modules/@babel/parser/src/parser/expression.js","webpack://@ha-assistant/server/../../node_modules/@babel/parser/src/parser/base.js","webpack://@ha-assistant/server/../../node_modules/@babel/parser/src/index.js","webpack://@ha-assistant/server/webpack/bootstrap","webpack://@ha-assistant/server/webpack/runtime/compat get default export","webpack://@ha-assistant/server/webpack/runtime/define property getters","webpack://@ha-assistant/server/webpack/runtime/hasOwnProperty shorthand","webpack://@ha-assistant/server/webpack/runtime/node module decorator","webpack://@ha-assistant/server/./src/config.ts","webpack://@ha-assistant/server/../../libs/listner/src/home-assistant-data-access.ts","webpack://@ha-assistant/server/../../libs/listner/src/devices-props.ts","webpack://@ha-assistant/server/../../libs/listner/src/devices.ts","webpack://@ha-assistant/server/../../libs/listner/src/utils/logging.ts","webpack://@ha-assistant/server/../../libs/listner/src/home-assistant-web-socket.ts","webpack://@ha-assistant/server/../../node_modules/ws/wrapper.mjs","webpack://@ha-assistant/server/./src/websocket-endpoint.ts","webpack://@ha-assistant/server/./src/index.ts","webpack://@ha-assistant/server/./src/client-endpoints.ts","webpack://@ha-assistant/server/./src/api-endpoints.ts","webpack://@ha-assistant/server/../../libs/listner/src/devices-state.ts"],"sourcesContent":["function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = () => ([]);\nwebpackEmptyContext.resolve = webpackEmptyContext;\nwebpackEmptyContext.id = 480;\nmodule.exports = webpackEmptyContext;","/*!\n * accepts\n * Copyright(c) 2014 Jonathan Ong\n * Copyright(c) 2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * Module dependencies.\n * @private\n */\n\nvar Negotiator = require('negotiator')\nvar mime = require('mime-types')\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = Accepts\n\n/**\n * Create a new Accepts object for the given req.\n *\n * @param {object} req\n * @public\n */\n\nfunction Accepts (req) {\n  if (!(this instanceof Accepts)) {\n    return new Accepts(req)\n  }\n\n  this.headers = req.headers\n  this.negotiator = new Negotiator(req)\n}\n\n/**\n * Check if the given `type(s)` is acceptable, returning\n * the best match when true, otherwise `undefined`, in which\n * case you should respond with 406 \"Not Acceptable\".\n *\n * The `type` value may be a single mime type string\n * such as \"application/json\", the extension name\n * such as \"json\" or an array `[\"json\", \"html\", \"text/plain\"]`. When a list\n * or array is given the _best_ match, if any is returned.\n *\n * Examples:\n *\n *     // Accept: text/html\n *     this.types('html');\n *     // => \"html\"\n *\n *     // Accept: text/*, application/json\n *     this.types('html');\n *     // => \"html\"\n *     this.types('text/html');\n *     // => \"text/html\"\n *     this.types('json', 'text');\n *     // => \"json\"\n *     this.types('application/json');\n *     // => \"application/json\"\n *\n *     // Accept: text/*, application/json\n *     this.types('image/png');\n *     this.types('png');\n *     // => undefined\n *\n *     // Accept: text/*;q=.5, application/json\n *     this.types(['html', 'json']);\n *     this.types('html', 'json');\n *     // => \"json\"\n *\n * @param {String|Array} types...\n * @return {String|Array|Boolean}\n * @public\n */\n\nAccepts.prototype.type =\nAccepts.prototype.types = function (types_) {\n  var types = types_\n\n  // support flattened arguments\n  if (types && !Array.isArray(types)) {\n    types = new Array(arguments.length)\n    for (var i = 0; i < types.length; i++) {\n      types[i] = arguments[i]\n    }\n  }\n\n  // no types, return all requested types\n  if (!types || types.length === 0) {\n    return this.negotiator.mediaTypes()\n  }\n\n  // no accept header, return first given type\n  if (!this.headers.accept) {\n    return types[0]\n  }\n\n  var mimes = types.map(extToMime)\n  var accepts = this.negotiator.mediaTypes(mimes.filter(validMime))\n  var first = accepts[0]\n\n  return first\n    ? types[mimes.indexOf(first)]\n    : false\n}\n\n/**\n * Return accepted encodings or best fit based on `encodings`.\n *\n * Given `Accept-Encoding: gzip, deflate`\n * an array sorted by quality is returned:\n *\n *     ['gzip', 'deflate']\n *\n * @param {String|Array} encodings...\n * @return {String|Array}\n * @public\n */\n\nAccepts.prototype.encoding =\nAccepts.prototype.encodings = function (encodings_) {\n  var encodings = encodings_\n\n  // support flattened arguments\n  if (encodings && !Array.isArray(encodings)) {\n    encodings = new Array(arguments.length)\n    for (var i = 0; i < encodings.length; i++) {\n      encodings[i] = arguments[i]\n    }\n  }\n\n  // no encodings, return all requested encodings\n  if (!encodings || encodings.length === 0) {\n    return this.negotiator.encodings()\n  }\n\n  return this.negotiator.encodings(encodings)[0] || false\n}\n\n/**\n * Return accepted charsets or best fit based on `charsets`.\n *\n * Given `Accept-Charset: utf-8, iso-8859-1;q=0.2, utf-7;q=0.5`\n * an array sorted by quality is returned:\n *\n *     ['utf-8', 'utf-7', 'iso-8859-1']\n *\n * @param {String|Array} charsets...\n * @return {String|Array}\n * @public\n */\n\nAccepts.prototype.charset =\nAccepts.prototype.charsets = function (charsets_) {\n  var charsets = charsets_\n\n  // support flattened arguments\n  if (charsets && !Array.isArray(charsets)) {\n    charsets = new Array(arguments.length)\n    for (var i = 0; i < charsets.length; i++) {\n      charsets[i] = arguments[i]\n    }\n  }\n\n  // no charsets, return all requested charsets\n  if (!charsets || charsets.length === 0) {\n    return this.negotiator.charsets()\n  }\n\n  return this.negotiator.charsets(charsets)[0] || false\n}\n\n/**\n * Return accepted languages or best fit based on `langs`.\n *\n * Given `Accept-Language: en;q=0.8, es, pt`\n * an array sorted by quality is returned:\n *\n *     ['es', 'pt', 'en']\n *\n * @param {String|Array} langs...\n * @return {Array|String}\n * @public\n */\n\nAccepts.prototype.lang =\nAccepts.prototype.langs =\nAccepts.prototype.language =\nAccepts.prototype.languages = function (languages_) {\n  var languages = languages_\n\n  // support flattened arguments\n  if (languages && !Array.isArray(languages)) {\n    languages = new Array(arguments.length)\n    for (var i = 0; i < languages.length; i++) {\n      languages[i] = arguments[i]\n    }\n  }\n\n  // no languages, return all requested languages\n  if (!languages || languages.length === 0) {\n    return this.negotiator.languages()\n  }\n\n  return this.negotiator.languages(languages)[0] || false\n}\n\n/**\n * Convert extnames to mime.\n *\n * @param {String} type\n * @return {String}\n * @private\n */\n\nfunction extToMime (type) {\n  return type.indexOf('/') === -1\n    ? mime.lookup(type)\n    : type\n}\n\n/**\n * Check if mime is valid.\n *\n * @param {String} type\n * @return {String}\n * @private\n */\n\nfunction validMime (type) {\n  return typeof type === 'string'\n}\n","'use strict'\n\n/**\n * Expose `arrayFlatten`.\n */\nmodule.exports = arrayFlatten\n\n/**\n * Recursive flatten function with depth.\n *\n * @param  {Array}  array\n * @param  {Array}  result\n * @param  {Number} depth\n * @return {Array}\n */\nfunction flattenWithDepth (array, result, depth) {\n  for (var i = 0; i < array.length; i++) {\n    var value = array[i]\n\n    if (depth > 0 && Array.isArray(value)) {\n      flattenWithDepth(value, result, depth - 1)\n    } else {\n      result.push(value)\n    }\n  }\n\n  return result\n}\n\n/**\n * Recursive flatten function. Omitting depth is slightly faster.\n *\n * @param  {Array} array\n * @param  {Array} result\n * @return {Array}\n */\nfunction flattenForever (array, result) {\n  for (var i = 0; i < array.length; i++) {\n    var value = array[i]\n\n    if (Array.isArray(value)) {\n      flattenForever(value, result)\n    } else {\n      result.push(value)\n    }\n  }\n\n  return result\n}\n\n/**\n * Flatten an array, with the ability to define a depth.\n *\n * @param  {Array}  array\n * @param  {Number} depth\n * @return {Array}\n */\nfunction arrayFlatten (array, depth) {\n  if (depth == null) {\n    return flattenForever(array, [])\n  }\n\n  return flattenWithDepth(array, [], depth)\n}\n","/*!\n * body-parser\n * Copyright(c) 2014-2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * Module dependencies.\n * @private\n */\n\nvar deprecate = require('depd')('body-parser')\n\n/**\n * Cache of loaded parsers.\n * @private\n */\n\nvar parsers = Object.create(null)\n\n/**\n * @typedef Parsers\n * @type {function}\n * @property {function} json\n * @property {function} raw\n * @property {function} text\n * @property {function} urlencoded\n */\n\n/**\n * Module exports.\n * @type {Parsers}\n */\n\nexports = module.exports = deprecate.function(bodyParser,\n  'bodyParser: use individual json/urlencoded middlewares')\n\n/**\n * JSON parser.\n * @public\n */\n\nObject.defineProperty(exports, 'json', {\n  configurable: true,\n  enumerable: true,\n  get: createParserGetter('json')\n})\n\n/**\n * Raw parser.\n * @public\n */\n\nObject.defineProperty(exports, 'raw', {\n  configurable: true,\n  enumerable: true,\n  get: createParserGetter('raw')\n})\n\n/**\n * Text parser.\n * @public\n */\n\nObject.defineProperty(exports, 'text', {\n  configurable: true,\n  enumerable: true,\n  get: createParserGetter('text')\n})\n\n/**\n * URL-encoded parser.\n * @public\n */\n\nObject.defineProperty(exports, 'urlencoded', {\n  configurable: true,\n  enumerable: true,\n  get: createParserGetter('urlencoded')\n})\n\n/**\n * Create a middleware to parse json and urlencoded bodies.\n *\n * @param {object} [options]\n * @return {function}\n * @deprecated\n * @public\n */\n\nfunction bodyParser (options) {\n  var opts = {}\n\n  // exclude type option\n  if (options) {\n    for (var prop in options) {\n      if (prop !== 'type') {\n        opts[prop] = options[prop]\n      }\n    }\n  }\n\n  var _urlencoded = exports.urlencoded(opts)\n  var _json = exports.json(opts)\n\n  return function bodyParser (req, res, next) {\n    _json(req, res, function (err) {\n      if (err) return next(err)\n      _urlencoded(req, res, next)\n    })\n  }\n}\n\n/**\n * Create a getter for loading a parser.\n * @private\n */\n\nfunction createParserGetter (name) {\n  return function get () {\n    return loadParser(name)\n  }\n}\n\n/**\n * Load a parser module.\n * @private\n */\n\nfunction loadParser (parserName) {\n  var parser = parsers[parserName]\n\n  if (parser !== undefined) {\n    return parser\n  }\n\n  // this uses a switch for static require analysis\n  switch (parserName) {\n    case 'json':\n      parser = require('./lib/types/json')\n      break\n    case 'raw':\n      parser = require('./lib/types/raw')\n      break\n    case 'text':\n      parser = require('./lib/types/text')\n      break\n    case 'urlencoded':\n      parser = require('./lib/types/urlencoded')\n      break\n  }\n\n  // store to prevent invoking require()\n  return (parsers[parserName] = parser)\n}\n","/*!\n * body-parser\n * Copyright(c) 2014-2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * Module dependencies.\n * @private\n */\n\nvar createError = require('http-errors')\nvar destroy = require('destroy')\nvar getBody = require('raw-body')\nvar iconv = require('iconv-lite')\nvar onFinished = require('on-finished')\nvar unpipe = require('unpipe')\nvar zlib = require('zlib')\n\n/**\n * Module exports.\n */\n\nmodule.exports = read\n\n/**\n * Read a request into a buffer and parse.\n *\n * @param {object} req\n * @param {object} res\n * @param {function} next\n * @param {function} parse\n * @param {function} debug\n * @param {object} options\n * @private\n */\n\nfunction read (req, res, next, parse, debug, options) {\n  var length\n  var opts = options\n  var stream\n\n  // flag as parsed\n  req._body = true\n\n  // read options\n  var encoding = opts.encoding !== null\n    ? opts.encoding\n    : null\n  var verify = opts.verify\n\n  try {\n    // get the content stream\n    stream = contentstream(req, debug, opts.inflate)\n    length = stream.length\n    stream.length = undefined\n  } catch (err) {\n    return next(err)\n  }\n\n  // set raw-body options\n  opts.length = length\n  opts.encoding = verify\n    ? null\n    : encoding\n\n  // assert charset is supported\n  if (opts.encoding === null && encoding !== null && !iconv.encodingExists(encoding)) {\n    return next(createError(415, 'unsupported charset \"' + encoding.toUpperCase() + '\"', {\n      charset: encoding.toLowerCase(),\n      type: 'charset.unsupported'\n    }))\n  }\n\n  // read body\n  debug('read body')\n  getBody(stream, opts, function (error, body) {\n    if (error) {\n      var _error\n\n      if (error.type === 'encoding.unsupported') {\n        // echo back charset\n        _error = createError(415, 'unsupported charset \"' + encoding.toUpperCase() + '\"', {\n          charset: encoding.toLowerCase(),\n          type: 'charset.unsupported'\n        })\n      } else {\n        // set status code on error\n        _error = createError(400, error)\n      }\n\n      // unpipe from stream and destroy\n      if (stream !== req) {\n        unpipe(req)\n        destroy(stream, true)\n      }\n\n      // read off entire request\n      dump(req, function onfinished () {\n        next(createError(400, _error))\n      })\n      return\n    }\n\n    // verify\n    if (verify) {\n      try {\n        debug('verify body')\n        verify(req, res, body, encoding)\n      } catch (err) {\n        next(createError(403, err, {\n          body: body,\n          type: err.type || 'entity.verify.failed'\n        }))\n        return\n      }\n    }\n\n    // parse\n    var str = body\n    try {\n      debug('parse body')\n      str = typeof body !== 'string' && encoding !== null\n        ? iconv.decode(body, encoding)\n        : body\n      req.body = parse(str)\n    } catch (err) {\n      next(createError(400, err, {\n        body: str,\n        type: err.type || 'entity.parse.failed'\n      }))\n      return\n    }\n\n    next()\n  })\n}\n\n/**\n * Get the content stream of the request.\n *\n * @param {object} req\n * @param {function} debug\n * @param {boolean} [inflate=true]\n * @return {object}\n * @api private\n */\n\nfunction contentstream (req, debug, inflate) {\n  var encoding = (req.headers['content-encoding'] || 'identity').toLowerCase()\n  var length = req.headers['content-length']\n  var stream\n\n  debug('content-encoding \"%s\"', encoding)\n\n  if (inflate === false && encoding !== 'identity') {\n    throw createError(415, 'content encoding unsupported', {\n      encoding: encoding,\n      type: 'encoding.unsupported'\n    })\n  }\n\n  switch (encoding) {\n    case 'deflate':\n      stream = zlib.createInflate()\n      debug('inflate body')\n      req.pipe(stream)\n      break\n    case 'gzip':\n      stream = zlib.createGunzip()\n      debug('gunzip body')\n      req.pipe(stream)\n      break\n    case 'identity':\n      stream = req\n      stream.length = length\n      break\n    default:\n      throw createError(415, 'unsupported content encoding \"' + encoding + '\"', {\n        encoding: encoding,\n        type: 'encoding.unsupported'\n      })\n  }\n\n  return stream\n}\n\n/**\n * Dump the contents of a request.\n *\n * @param {object} req\n * @param {function} callback\n * @api private\n */\n\nfunction dump (req, callback) {\n  if (onFinished.isFinished(req)) {\n    callback(null)\n  } else {\n    onFinished(req, callback)\n    req.resume()\n  }\n}\n","/*!\n * body-parser\n * Copyright(c) 2014 Jonathan Ong\n * Copyright(c) 2014-2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * Module dependencies.\n * @private\n */\n\nvar bytes = require('bytes')\nvar contentType = require('content-type')\nvar createError = require('http-errors')\nvar debug = require('debug')('body-parser:json')\nvar read = require('../read')\nvar typeis = require('type-is')\n\n/**\n * Module exports.\n */\n\nmodule.exports = json\n\n/**\n * RegExp to match the first non-space in a string.\n *\n * Allowed whitespace is defined in RFC 7159:\n *\n *    ws = *(\n *            %x20 /              ; Space\n *            %x09 /              ; Horizontal tab\n *            %x0A /              ; Line feed or New line\n *            %x0D )              ; Carriage return\n */\n\nvar FIRST_CHAR_REGEXP = /^[\\x20\\x09\\x0a\\x0d]*([^\\x20\\x09\\x0a\\x0d])/ // eslint-disable-line no-control-regex\n\n/**\n * Create a middleware to parse JSON bodies.\n *\n * @param {object} [options]\n * @return {function}\n * @public\n */\n\nfunction json (options) {\n  var opts = options || {}\n\n  var limit = typeof opts.limit !== 'number'\n    ? bytes.parse(opts.limit || '100kb')\n    : opts.limit\n  var inflate = opts.inflate !== false\n  var reviver = opts.reviver\n  var strict = opts.strict !== false\n  var type = opts.type || 'application/json'\n  var verify = opts.verify || false\n\n  if (verify !== false && typeof verify !== 'function') {\n    throw new TypeError('option verify must be function')\n  }\n\n  // create the appropriate type checking function\n  var shouldParse = typeof type !== 'function'\n    ? typeChecker(type)\n    : type\n\n  function parse (body) {\n    if (body.length === 0) {\n      // special-case empty json body, as it's a common client-side mistake\n      // TODO: maybe make this configurable or part of \"strict\" option\n      return {}\n    }\n\n    if (strict) {\n      var first = firstchar(body)\n\n      if (first !== '{' && first !== '[') {\n        debug('strict violation')\n        throw createStrictSyntaxError(body, first)\n      }\n    }\n\n    try {\n      debug('parse json')\n      return JSON.parse(body, reviver)\n    } catch (e) {\n      throw normalizeJsonSyntaxError(e, {\n        message: e.message,\n        stack: e.stack\n      })\n    }\n  }\n\n  return function jsonParser (req, res, next) {\n    if (req._body) {\n      debug('body already parsed')\n      next()\n      return\n    }\n\n    req.body = req.body || {}\n\n    // skip requests without bodies\n    if (!typeis.hasBody(req)) {\n      debug('skip empty body')\n      next()\n      return\n    }\n\n    debug('content-type %j', req.headers['content-type'])\n\n    // determine if request should be parsed\n    if (!shouldParse(req)) {\n      debug('skip parsing')\n      next()\n      return\n    }\n\n    // assert charset per RFC 7159 sec 8.1\n    var charset = getCharset(req) || 'utf-8'\n    if (charset.slice(0, 4) !== 'utf-') {\n      debug('invalid charset')\n      next(createError(415, 'unsupported charset \"' + charset.toUpperCase() + '\"', {\n        charset: charset,\n        type: 'charset.unsupported'\n      }))\n      return\n    }\n\n    // read\n    read(req, res, next, parse, debug, {\n      encoding: charset,\n      inflate: inflate,\n      limit: limit,\n      verify: verify\n    })\n  }\n}\n\n/**\n * Create strict violation syntax error matching native error.\n *\n * @param {string} str\n * @param {string} char\n * @return {Error}\n * @private\n */\n\nfunction createStrictSyntaxError (str, char) {\n  var index = str.indexOf(char)\n  var partial = index !== -1\n    ? str.substring(0, index) + '#'\n    : ''\n\n  try {\n    JSON.parse(partial); /* istanbul ignore next */ throw new SyntaxError('strict violation')\n  } catch (e) {\n    return normalizeJsonSyntaxError(e, {\n      message: e.message.replace('#', char),\n      stack: e.stack\n    })\n  }\n}\n\n/**\n * Get the first non-whitespace character in a string.\n *\n * @param {string} str\n * @return {function}\n * @private\n */\n\nfunction firstchar (str) {\n  var match = FIRST_CHAR_REGEXP.exec(str)\n\n  return match\n    ? match[1]\n    : undefined\n}\n\n/**\n * Get the charset of a request.\n *\n * @param {object} req\n * @api private\n */\n\nfunction getCharset (req) {\n  try {\n    return (contentType.parse(req).parameters.charset || '').toLowerCase()\n  } catch (e) {\n    return undefined\n  }\n}\n\n/**\n * Normalize a SyntaxError for JSON.parse.\n *\n * @param {SyntaxError} error\n * @param {object} obj\n * @return {SyntaxError}\n */\n\nfunction normalizeJsonSyntaxError (error, obj) {\n  var keys = Object.getOwnPropertyNames(error)\n\n  for (var i = 0; i < keys.length; i++) {\n    var key = keys[i]\n    if (key !== 'stack' && key !== 'message') {\n      delete error[key]\n    }\n  }\n\n  // replace stack before message for Node.js 0.10 and below\n  error.stack = obj.stack.replace(error.message, obj.message)\n  error.message = obj.message\n\n  return error\n}\n\n/**\n * Get the simple type checker.\n *\n * @param {string} type\n * @return {function}\n */\n\nfunction typeChecker (type) {\n  return function checkType (req) {\n    return Boolean(typeis(req, type))\n  }\n}\n","/*!\n * body-parser\n * Copyright(c) 2014-2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * Module dependencies.\n */\n\nvar bytes = require('bytes')\nvar debug = require('debug')('body-parser:raw')\nvar read = require('../read')\nvar typeis = require('type-is')\n\n/**\n * Module exports.\n */\n\nmodule.exports = raw\n\n/**\n * Create a middleware to parse raw bodies.\n *\n * @param {object} [options]\n * @return {function}\n * @api public\n */\n\nfunction raw (options) {\n  var opts = options || {}\n\n  var inflate = opts.inflate !== false\n  var limit = typeof opts.limit !== 'number'\n    ? bytes.parse(opts.limit || '100kb')\n    : opts.limit\n  var type = opts.type || 'application/octet-stream'\n  var verify = opts.verify || false\n\n  if (verify !== false && typeof verify !== 'function') {\n    throw new TypeError('option verify must be function')\n  }\n\n  // create the appropriate type checking function\n  var shouldParse = typeof type !== 'function'\n    ? typeChecker(type)\n    : type\n\n  function parse (buf) {\n    return buf\n  }\n\n  return function rawParser (req, res, next) {\n    if (req._body) {\n      debug('body already parsed')\n      next()\n      return\n    }\n\n    req.body = req.body || {}\n\n    // skip requests without bodies\n    if (!typeis.hasBody(req)) {\n      debug('skip empty body')\n      next()\n      return\n    }\n\n    debug('content-type %j', req.headers['content-type'])\n\n    // determine if request should be parsed\n    if (!shouldParse(req)) {\n      debug('skip parsing')\n      next()\n      return\n    }\n\n    // read\n    read(req, res, next, parse, debug, {\n      encoding: null,\n      inflate: inflate,\n      limit: limit,\n      verify: verify\n    })\n  }\n}\n\n/**\n * Get the simple type checker.\n *\n * @param {string} type\n * @return {function}\n */\n\nfunction typeChecker (type) {\n  return function checkType (req) {\n    return Boolean(typeis(req, type))\n  }\n}\n","/*!\n * body-parser\n * Copyright(c) 2014-2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * Module dependencies.\n */\n\nvar bytes = require('bytes')\nvar contentType = require('content-type')\nvar debug = require('debug')('body-parser:text')\nvar read = require('../read')\nvar typeis = require('type-is')\n\n/**\n * Module exports.\n */\n\nmodule.exports = text\n\n/**\n * Create a middleware to parse text bodies.\n *\n * @param {object} [options]\n * @return {function}\n * @api public\n */\n\nfunction text (options) {\n  var opts = options || {}\n\n  var defaultCharset = opts.defaultCharset || 'utf-8'\n  var inflate = opts.inflate !== false\n  var limit = typeof opts.limit !== 'number'\n    ? bytes.parse(opts.limit || '100kb')\n    : opts.limit\n  var type = opts.type || 'text/plain'\n  var verify = opts.verify || false\n\n  if (verify !== false && typeof verify !== 'function') {\n    throw new TypeError('option verify must be function')\n  }\n\n  // create the appropriate type checking function\n  var shouldParse = typeof type !== 'function'\n    ? typeChecker(type)\n    : type\n\n  function parse (buf) {\n    return buf\n  }\n\n  return function textParser (req, res, next) {\n    if (req._body) {\n      debug('body already parsed')\n      next()\n      return\n    }\n\n    req.body = req.body || {}\n\n    // skip requests without bodies\n    if (!typeis.hasBody(req)) {\n      debug('skip empty body')\n      next()\n      return\n    }\n\n    debug('content-type %j', req.headers['content-type'])\n\n    // determine if request should be parsed\n    if (!shouldParse(req)) {\n      debug('skip parsing')\n      next()\n      return\n    }\n\n    // get charset\n    var charset = getCharset(req) || defaultCharset\n\n    // read\n    read(req, res, next, parse, debug, {\n      encoding: charset,\n      inflate: inflate,\n      limit: limit,\n      verify: verify\n    })\n  }\n}\n\n/**\n * Get the charset of a request.\n *\n * @param {object} req\n * @api private\n */\n\nfunction getCharset (req) {\n  try {\n    return (contentType.parse(req).parameters.charset || '').toLowerCase()\n  } catch (e) {\n    return undefined\n  }\n}\n\n/**\n * Get the simple type checker.\n *\n * @param {string} type\n * @return {function}\n */\n\nfunction typeChecker (type) {\n  return function checkType (req) {\n    return Boolean(typeis(req, type))\n  }\n}\n","/*!\n * body-parser\n * Copyright(c) 2014 Jonathan Ong\n * Copyright(c) 2014-2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * Module dependencies.\n * @private\n */\n\nvar bytes = require('bytes')\nvar contentType = require('content-type')\nvar createError = require('http-errors')\nvar debug = require('debug')('body-parser:urlencoded')\nvar deprecate = require('depd')('body-parser')\nvar read = require('../read')\nvar typeis = require('type-is')\n\n/**\n * Module exports.\n */\n\nmodule.exports = urlencoded\n\n/**\n * Cache of parser modules.\n */\n\nvar parsers = Object.create(null)\n\n/**\n * Create a middleware to parse urlencoded bodies.\n *\n * @param {object} [options]\n * @return {function}\n * @public\n */\n\nfunction urlencoded (options) {\n  var opts = options || {}\n\n  // notice because option default will flip in next major\n  if (opts.extended === undefined) {\n    deprecate('undefined extended: provide extended option')\n  }\n\n  var extended = opts.extended !== false\n  var inflate = opts.inflate !== false\n  var limit = typeof opts.limit !== 'number'\n    ? bytes.parse(opts.limit || '100kb')\n    : opts.limit\n  var type = opts.type || 'application/x-www-form-urlencoded'\n  var verify = opts.verify || false\n\n  if (verify !== false && typeof verify !== 'function') {\n    throw new TypeError('option verify must be function')\n  }\n\n  // create the appropriate query parser\n  var queryparse = extended\n    ? extendedparser(opts)\n    : simpleparser(opts)\n\n  // create the appropriate type checking function\n  var shouldParse = typeof type !== 'function'\n    ? typeChecker(type)\n    : type\n\n  function parse (body) {\n    return body.length\n      ? queryparse(body)\n      : {}\n  }\n\n  return function urlencodedParser (req, res, next) {\n    if (req._body) {\n      debug('body already parsed')\n      next()\n      return\n    }\n\n    req.body = req.body || {}\n\n    // skip requests without bodies\n    if (!typeis.hasBody(req)) {\n      debug('skip empty body')\n      next()\n      return\n    }\n\n    debug('content-type %j', req.headers['content-type'])\n\n    // determine if request should be parsed\n    if (!shouldParse(req)) {\n      debug('skip parsing')\n      next()\n      return\n    }\n\n    // assert charset\n    var charset = getCharset(req) || 'utf-8'\n    if (charset !== 'utf-8') {\n      debug('invalid charset')\n      next(createError(415, 'unsupported charset \"' + charset.toUpperCase() + '\"', {\n        charset: charset,\n        type: 'charset.unsupported'\n      }))\n      return\n    }\n\n    // read\n    read(req, res, next, parse, debug, {\n      debug: debug,\n      encoding: charset,\n      inflate: inflate,\n      limit: limit,\n      verify: verify\n    })\n  }\n}\n\n/**\n * Get the extended query parser.\n *\n * @param {object} options\n */\n\nfunction extendedparser (options) {\n  var parameterLimit = options.parameterLimit !== undefined\n    ? options.parameterLimit\n    : 1000\n  var parse = parser('qs')\n\n  if (isNaN(parameterLimit) || parameterLimit < 1) {\n    throw new TypeError('option parameterLimit must be a positive number')\n  }\n\n  if (isFinite(parameterLimit)) {\n    parameterLimit = parameterLimit | 0\n  }\n\n  return function queryparse (body) {\n    var paramCount = parameterCount(body, parameterLimit)\n\n    if (paramCount === undefined) {\n      debug('too many parameters')\n      throw createError(413, 'too many parameters', {\n        type: 'parameters.too.many'\n      })\n    }\n\n    var arrayLimit = Math.max(100, paramCount)\n\n    debug('parse extended urlencoding')\n    return parse(body, {\n      allowPrototypes: true,\n      arrayLimit: arrayLimit,\n      depth: Infinity,\n      parameterLimit: parameterLimit\n    })\n  }\n}\n\n/**\n * Get the charset of a request.\n *\n * @param {object} req\n * @api private\n */\n\nfunction getCharset (req) {\n  try {\n    return (contentType.parse(req).parameters.charset || '').toLowerCase()\n  } catch (e) {\n    return undefined\n  }\n}\n\n/**\n * Count the number of parameters, stopping once limit reached\n *\n * @param {string} body\n * @param {number} limit\n * @api private\n */\n\nfunction parameterCount (body, limit) {\n  var count = 0\n  var index = 0\n\n  while ((index = body.indexOf('&', index)) !== -1) {\n    count++\n    index++\n\n    if (count === limit) {\n      return undefined\n    }\n  }\n\n  return count\n}\n\n/**\n * Get parser for module name dynamically.\n *\n * @param {string} name\n * @return {function}\n * @api private\n */\n\nfunction parser (name) {\n  var mod = parsers[name]\n\n  if (mod !== undefined) {\n    return mod.parse\n  }\n\n  // this uses a switch for static require analysis\n  switch (name) {\n    case 'qs':\n      mod = require('qs')\n      break\n    case 'querystring':\n      mod = require('querystring')\n      break\n  }\n\n  // store to prevent invoking require()\n  parsers[name] = mod\n\n  return mod.parse\n}\n\n/**\n * Get the simple query parser.\n *\n * @param {object} options\n */\n\nfunction simpleparser (options) {\n  var parameterLimit = options.parameterLimit !== undefined\n    ? options.parameterLimit\n    : 1000\n  var parse = parser('querystring')\n\n  if (isNaN(parameterLimit) || parameterLimit < 1) {\n    throw new TypeError('option parameterLimit must be a positive number')\n  }\n\n  if (isFinite(parameterLimit)) {\n    parameterLimit = parameterLimit | 0\n  }\n\n  return function queryparse (body) {\n    var paramCount = parameterCount(body, parameterLimit)\n\n    if (paramCount === undefined) {\n      debug('too many parameters')\n      throw createError(413, 'too many parameters', {\n        type: 'parameters.too.many'\n      })\n    }\n\n    debug('parse urlencoding')\n    return parse(body, undefined, undefined, { maxKeys: parameterLimit })\n  }\n}\n\n/**\n * Get the simple type checker.\n *\n * @param {string} type\n * @return {function}\n */\n\nfunction typeChecker (type) {\n  return function checkType (req) {\n    return Boolean(typeis(req, type))\n  }\n}\n","/**\n * This is the web browser implementation of `debug()`.\n *\n * Expose `debug()` as the module.\n */\n\nexports = module.exports = require('./debug');\nexports.log = log;\nexports.formatArgs = formatArgs;\nexports.save = save;\nexports.load = load;\nexports.useColors = useColors;\nexports.storage = 'undefined' != typeof chrome\n               && 'undefined' != typeof chrome.storage\n                  ? chrome.storage.local\n                  : localstorage();\n\n/**\n * Colors.\n */\n\nexports.colors = [\n  'lightseagreen',\n  'forestgreen',\n  'goldenrod',\n  'dodgerblue',\n  'darkorchid',\n  'crimson'\n];\n\n/**\n * Currently only WebKit-based Web Inspectors, Firefox >= v31,\n * and the Firebug extension (any Firefox version) are known\n * to support \"%c\" CSS customizations.\n *\n * TODO: add a `localStorage` variable to explicitly enable/disable colors\n */\n\nfunction useColors() {\n  // NB: In an Electron preload script, document will be defined but not fully\n  // initialized. Since we know we're in Chrome, we'll just detect this case\n  // explicitly\n  if (typeof window !== 'undefined' && window.process && window.process.type === 'renderer') {\n    return true;\n  }\n\n  // is webkit? http://stackoverflow.com/a/16459606/376773\n  // document is undefined in react-native: https://github.com/facebook/react-native/pull/1632\n  return (typeof document !== 'undefined' && document.documentElement && document.documentElement.style && document.documentElement.style.WebkitAppearance) ||\n    // is firebug? http://stackoverflow.com/a/398120/376773\n    (typeof window !== 'undefined' && window.console && (window.console.firebug || (window.console.exception && window.console.table))) ||\n    // is firefox >= v31?\n    // https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages\n    (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/firefox\\/(\\d+)/) && parseInt(RegExp.$1, 10) >= 31) ||\n    // double check webkit in userAgent just in case we are in a worker\n    (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/applewebkit\\/(\\d+)/));\n}\n\n/**\n * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.\n */\n\nexports.formatters.j = function(v) {\n  try {\n    return JSON.stringify(v);\n  } catch (err) {\n    return '[UnexpectedJSONParseError]: ' + err.message;\n  }\n};\n\n\n/**\n * Colorize log arguments if enabled.\n *\n * @api public\n */\n\nfunction formatArgs(args) {\n  var useColors = this.useColors;\n\n  args[0] = (useColors ? '%c' : '')\n    + this.namespace\n    + (useColors ? ' %c' : ' ')\n    + args[0]\n    + (useColors ? '%c ' : ' ')\n    + '+' + exports.humanize(this.diff);\n\n  if (!useColors) return;\n\n  var c = 'color: ' + this.color;\n  args.splice(1, 0, c, 'color: inherit')\n\n  // the final \"%c\" is somewhat tricky, because there could be other\n  // arguments passed either before or after the %c, so we need to\n  // figure out the correct index to insert the CSS into\n  var index = 0;\n  var lastC = 0;\n  args[0].replace(/%[a-zA-Z%]/g, function(match) {\n    if ('%%' === match) return;\n    index++;\n    if ('%c' === match) {\n      // we only are interested in the *last* %c\n      // (the user may have provided their own)\n      lastC = index;\n    }\n  });\n\n  args.splice(lastC, 0, c);\n}\n\n/**\n * Invokes `console.log()` when available.\n * No-op when `console.log` is not a \"function\".\n *\n * @api public\n */\n\nfunction log() {\n  // this hackery is required for IE8/9, where\n  // the `console.log` function doesn't have 'apply'\n  return 'object' === typeof console\n    && console.log\n    && Function.prototype.apply.call(console.log, console, arguments);\n}\n\n/**\n * Save `namespaces`.\n *\n * @param {String} namespaces\n * @api private\n */\n\nfunction save(namespaces) {\n  try {\n    if (null == namespaces) {\n      exports.storage.removeItem('debug');\n    } else {\n      exports.storage.debug = namespaces;\n    }\n  } catch(e) {}\n}\n\n/**\n * Load `namespaces`.\n *\n * @return {String} returns the previously persisted debug modes\n * @api private\n */\n\nfunction load() {\n  var r;\n  try {\n    r = exports.storage.debug;\n  } catch(e) {}\n\n  // If debug isn't set in LS, and we're in Electron, try to load $DEBUG\n  if (!r && typeof process !== 'undefined' && 'env' in process) {\n    r = process.env.DEBUG;\n  }\n\n  return r;\n}\n\n/**\n * Enable namespaces listed in `localStorage.debug` initially.\n */\n\nexports.enable(load());\n\n/**\n * Localstorage attempts to return the localstorage.\n *\n * This is necessary because safari throws\n * when a user disables cookies/localstorage\n * and you attempt to access it.\n *\n * @return {LocalStorage}\n * @api private\n */\n\nfunction localstorage() {\n  try {\n    return window.localStorage;\n  } catch (e) {}\n}\n","\n/**\n * This is the common logic for both the Node.js and web browser\n * implementations of `debug()`.\n *\n * Expose `debug()` as the module.\n */\n\nexports = module.exports = createDebug.debug = createDebug['default'] = createDebug;\nexports.coerce = coerce;\nexports.disable = disable;\nexports.enable = enable;\nexports.enabled = enabled;\nexports.humanize = require('ms');\n\n/**\n * The currently active debug mode names, and names to skip.\n */\n\nexports.names = [];\nexports.skips = [];\n\n/**\n * Map of special \"%n\" handling functions, for the debug \"format\" argument.\n *\n * Valid key names are a single, lower or upper-case letter, i.e. \"n\" and \"N\".\n */\n\nexports.formatters = {};\n\n/**\n * Previous log timestamp.\n */\n\nvar prevTime;\n\n/**\n * Select a color.\n * @param {String} namespace\n * @return {Number}\n * @api private\n */\n\nfunction selectColor(namespace) {\n  var hash = 0, i;\n\n  for (i in namespace) {\n    hash  = ((hash << 5) - hash) + namespace.charCodeAt(i);\n    hash |= 0; // Convert to 32bit integer\n  }\n\n  return exports.colors[Math.abs(hash) % exports.colors.length];\n}\n\n/**\n * Create a debugger with the given `namespace`.\n *\n * @param {String} namespace\n * @return {Function}\n * @api public\n */\n\nfunction createDebug(namespace) {\n\n  function debug() {\n    // disabled?\n    if (!debug.enabled) return;\n\n    var self = debug;\n\n    // set `diff` timestamp\n    var curr = +new Date();\n    var ms = curr - (prevTime || curr);\n    self.diff = ms;\n    self.prev = prevTime;\n    self.curr = curr;\n    prevTime = curr;\n\n    // turn the `arguments` into a proper Array\n    var args = new Array(arguments.length);\n    for (var i = 0; i < args.length; i++) {\n      args[i] = arguments[i];\n    }\n\n    args[0] = exports.coerce(args[0]);\n\n    if ('string' !== typeof args[0]) {\n      // anything else let's inspect with %O\n      args.unshift('%O');\n    }\n\n    // apply any `formatters` transformations\n    var index = 0;\n    args[0] = args[0].replace(/%([a-zA-Z%])/g, function(match, format) {\n      // if we encounter an escaped % then don't increase the array index\n      if (match === '%%') return match;\n      index++;\n      var formatter = exports.formatters[format];\n      if ('function' === typeof formatter) {\n        var val = args[index];\n        match = formatter.call(self, val);\n\n        // now we need to remove `args[index]` since it's inlined in the `format`\n        args.splice(index, 1);\n        index--;\n      }\n      return match;\n    });\n\n    // apply env-specific formatting (colors, etc.)\n    exports.formatArgs.call(self, args);\n\n    var logFn = debug.log || exports.log || console.log.bind(console);\n    logFn.apply(self, args);\n  }\n\n  debug.namespace = namespace;\n  debug.enabled = exports.enabled(namespace);\n  debug.useColors = exports.useColors();\n  debug.color = selectColor(namespace);\n\n  // env-specific initialization logic for debug instances\n  if ('function' === typeof exports.init) {\n    exports.init(debug);\n  }\n\n  return debug;\n}\n\n/**\n * Enables a debug mode by namespaces. This can include modes\n * separated by a colon and wildcards.\n *\n * @param {String} namespaces\n * @api public\n */\n\nfunction enable(namespaces) {\n  exports.save(namespaces);\n\n  exports.names = [];\n  exports.skips = [];\n\n  var split = (typeof namespaces === 'string' ? namespaces : '').split(/[\\s,]+/);\n  var len = split.length;\n\n  for (var i = 0; i < len; i++) {\n    if (!split[i]) continue; // ignore empty strings\n    namespaces = split[i].replace(/\\*/g, '.*?');\n    if (namespaces[0] === '-') {\n      exports.skips.push(new RegExp('^' + namespaces.substr(1) + '$'));\n    } else {\n      exports.names.push(new RegExp('^' + namespaces + '$'));\n    }\n  }\n}\n\n/**\n * Disable debug output.\n *\n * @api public\n */\n\nfunction disable() {\n  exports.enable('');\n}\n\n/**\n * Returns true if the given mode name is enabled, false otherwise.\n *\n * @param {String} name\n * @return {Boolean}\n * @api public\n */\n\nfunction enabled(name) {\n  var i, len;\n  for (i = 0, len = exports.skips.length; i < len; i++) {\n    if (exports.skips[i].test(name)) {\n      return false;\n    }\n  }\n  for (i = 0, len = exports.names.length; i < len; i++) {\n    if (exports.names[i].test(name)) {\n      return true;\n    }\n  }\n  return false;\n}\n\n/**\n * Coerce `val`.\n *\n * @param {Mixed} val\n * @return {Mixed}\n * @api private\n */\n\nfunction coerce(val) {\n  if (val instanceof Error) return val.stack || val.message;\n  return val;\n}\n","/**\n * Detect Electron renderer process, which is node, but we should\n * treat as a browser.\n */\n\nif (typeof process !== 'undefined' && process.type === 'renderer') {\n  module.exports = require('./browser.js');\n} else {\n  module.exports = require('./node.js');\n}\n","/**\n * Module dependencies.\n */\n\nvar tty = require('tty');\nvar util = require('util');\n\n/**\n * This is the Node.js implementation of `debug()`.\n *\n * Expose `debug()` as the module.\n */\n\nexports = module.exports = require('./debug');\nexports.init = init;\nexports.log = log;\nexports.formatArgs = formatArgs;\nexports.save = save;\nexports.load = load;\nexports.useColors = useColors;\n\n/**\n * Colors.\n */\n\nexports.colors = [6, 2, 3, 4, 5, 1];\n\n/**\n * Build up the default `inspectOpts` object from the environment variables.\n *\n *   $ DEBUG_COLORS=no DEBUG_DEPTH=10 DEBUG_SHOW_HIDDEN=enabled node script.js\n */\n\nexports.inspectOpts = Object.keys(process.env).filter(function (key) {\n  return /^debug_/i.test(key);\n}).reduce(function (obj, key) {\n  // camel-case\n  var prop = key\n    .substring(6)\n    .toLowerCase()\n    .replace(/_([a-z])/g, function (_, k) { return k.toUpperCase() });\n\n  // coerce string value into JS value\n  var val = process.env[key];\n  if (/^(yes|on|true|enabled)$/i.test(val)) val = true;\n  else if (/^(no|off|false|disabled)$/i.test(val)) val = false;\n  else if (val === 'null') val = null;\n  else val = Number(val);\n\n  obj[prop] = val;\n  return obj;\n}, {});\n\n/**\n * The file descriptor to write the `debug()` calls to.\n * Set the `DEBUG_FD` env variable to override with another value. i.e.:\n *\n *   $ DEBUG_FD=3 node script.js 3>debug.log\n */\n\nvar fd = parseInt(process.env.DEBUG_FD, 10) || 2;\n\nif (1 !== fd && 2 !== fd) {\n  util.deprecate(function(){}, 'except for stderr(2) and stdout(1), any other usage of DEBUG_FD is deprecated. Override debug.log if you want to use a different log function (https://git.io/debug_fd)')()\n}\n\nvar stream = 1 === fd ? process.stdout :\n             2 === fd ? process.stderr :\n             createWritableStdioStream(fd);\n\n/**\n * Is stdout a TTY? Colored output is enabled when `true`.\n */\n\nfunction useColors() {\n  return 'colors' in exports.inspectOpts\n    ? Boolean(exports.inspectOpts.colors)\n    : tty.isatty(fd);\n}\n\n/**\n * Map %o to `util.inspect()`, all on a single line.\n */\n\nexports.formatters.o = function(v) {\n  this.inspectOpts.colors = this.useColors;\n  return util.inspect(v, this.inspectOpts)\n    .split('\\n').map(function(str) {\n      return str.trim()\n    }).join(' ');\n};\n\n/**\n * Map %o to `util.inspect()`, allowing multiple lines if needed.\n */\n\nexports.formatters.O = function(v) {\n  this.inspectOpts.colors = this.useColors;\n  return util.inspect(v, this.inspectOpts);\n};\n\n/**\n * Adds ANSI color escape codes if enabled.\n *\n * @api public\n */\n\nfunction formatArgs(args) {\n  var name = this.namespace;\n  var useColors = this.useColors;\n\n  if (useColors) {\n    var c = this.color;\n    var prefix = '  \\u001b[3' + c + ';1m' + name + ' ' + '\\u001b[0m';\n\n    args[0] = prefix + args[0].split('\\n').join('\\n' + prefix);\n    args.push('\\u001b[3' + c + 'm+' + exports.humanize(this.diff) + '\\u001b[0m');\n  } else {\n    args[0] = new Date().toUTCString()\n      + ' ' + name + ' ' + args[0];\n  }\n}\n\n/**\n * Invokes `util.format()` with the specified arguments and writes to `stream`.\n */\n\nfunction log() {\n  return stream.write(util.format.apply(util, arguments) + '\\n');\n}\n\n/**\n * Save `namespaces`.\n *\n * @param {String} namespaces\n * @api private\n */\n\nfunction save(namespaces) {\n  if (null == namespaces) {\n    // If you set a process.env field to null or undefined, it gets cast to the\n    // string 'null' or 'undefined'. Just delete instead.\n    delete process.env.DEBUG;\n  } else {\n    process.env.DEBUG = namespaces;\n  }\n}\n\n/**\n * Load `namespaces`.\n *\n * @return {String} returns the previously persisted debug modes\n * @api private\n */\n\nfunction load() {\n  return process.env.DEBUG;\n}\n\n/**\n * Copied from `node/src/node.js`.\n *\n * XXX: It's lame that node doesn't expose this API out-of-the-box. It also\n * relies on the undocumented `tty_wrap.guessHandleType()` which is also lame.\n */\n\nfunction createWritableStdioStream (fd) {\n  var stream;\n  var tty_wrap = process.binding('tty_wrap');\n\n  // Note stream._type is used for test-module-load-list.js\n\n  switch (tty_wrap.guessHandleType(fd)) {\n    case 'TTY':\n      stream = new tty.WriteStream(fd);\n      stream._type = 'tty';\n\n      // Hack to have stream not keep the event loop alive.\n      // See https://github.com/joyent/node/issues/1726\n      if (stream._handle && stream._handle.unref) {\n        stream._handle.unref();\n      }\n      break;\n\n    case 'FILE':\n      var fs = require('fs');\n      stream = new fs.SyncWriteStream(fd, { autoClose: false });\n      stream._type = 'fs';\n      break;\n\n    case 'PIPE':\n    case 'TCP':\n      var net = require('net');\n      stream = new net.Socket({\n        fd: fd,\n        readable: false,\n        writable: true\n      });\n\n      // FIXME Should probably have an option in net.Socket to create a\n      // stream from an existing fd which is writable only. But for now\n      // we'll just add this hack and set the `readable` member to false.\n      // Test: ./node test/fixtures/echo.js < /etc/passwd\n      stream.readable = false;\n      stream.read = null;\n      stream._type = 'pipe';\n\n      // FIXME Hack to have stream not keep the event loop alive.\n      // See https://github.com/joyent/node/issues/1726\n      if (stream._handle && stream._handle.unref) {\n        stream._handle.unref();\n      }\n      break;\n\n    default:\n      // Probably an error on in uv_guess_handle()\n      throw new Error('Implement me. Unknown stream file type!');\n  }\n\n  // For supporting legacy API we put the FD here.\n  stream.fd = fd;\n\n  stream._isStdio = true;\n\n  return stream;\n}\n\n/**\n * Init logic for `debug` instances.\n *\n * Create a new `inspectOpts` object in case `useColors` is set\n * differently for a particular `debug` instance.\n */\n\nfunction init (debug) {\n  debug.inspectOpts = {};\n\n  var keys = Object.keys(exports.inspectOpts);\n  for (var i = 0; i < keys.length; i++) {\n    debug.inspectOpts[keys[i]] = exports.inspectOpts[keys[i]];\n  }\n}\n\n/**\n * Enable namespaces listed in `process.env.DEBUG` initially.\n */\n\nexports.enable(load());\n","/**\n * Helpers.\n */\n\nvar s = 1000;\nvar m = s * 60;\nvar h = m * 60;\nvar d = h * 24;\nvar y = d * 365.25;\n\n/**\n * Parse or format the given `val`.\n *\n * Options:\n *\n *  - `long` verbose formatting [false]\n *\n * @param {String|Number} val\n * @param {Object} [options]\n * @throws {Error} throw an error if val is not a non-empty string or a number\n * @return {String|Number}\n * @api public\n */\n\nmodule.exports = function(val, options) {\n  options = options || {};\n  var type = typeof val;\n  if (type === 'string' && val.length > 0) {\n    return parse(val);\n  } else if (type === 'number' && isNaN(val) === false) {\n    return options.long ? fmtLong(val) : fmtShort(val);\n  }\n  throw new Error(\n    'val is not a non-empty string or a valid number. val=' +\n      JSON.stringify(val)\n  );\n};\n\n/**\n * Parse the given `str` and return milliseconds.\n *\n * @param {String} str\n * @return {Number}\n * @api private\n */\n\nfunction parse(str) {\n  str = String(str);\n  if (str.length > 100) {\n    return;\n  }\n  var match = /^((?:\\d+)?\\.?\\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|years?|yrs?|y)?$/i.exec(\n    str\n  );\n  if (!match) {\n    return;\n  }\n  var n = parseFloat(match[1]);\n  var type = (match[2] || 'ms').toLowerCase();\n  switch (type) {\n    case 'years':\n    case 'year':\n    case 'yrs':\n    case 'yr':\n    case 'y':\n      return n * y;\n    case 'days':\n    case 'day':\n    case 'd':\n      return n * d;\n    case 'hours':\n    case 'hour':\n    case 'hrs':\n    case 'hr':\n    case 'h':\n      return n * h;\n    case 'minutes':\n    case 'minute':\n    case 'mins':\n    case 'min':\n    case 'm':\n      return n * m;\n    case 'seconds':\n    case 'second':\n    case 'secs':\n    case 'sec':\n    case 's':\n      return n * s;\n    case 'milliseconds':\n    case 'millisecond':\n    case 'msecs':\n    case 'msec':\n    case 'ms':\n      return n;\n    default:\n      return undefined;\n  }\n}\n\n/**\n * Short format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtShort(ms) {\n  if (ms >= d) {\n    return Math.round(ms / d) + 'd';\n  }\n  if (ms >= h) {\n    return Math.round(ms / h) + 'h';\n  }\n  if (ms >= m) {\n    return Math.round(ms / m) + 'm';\n  }\n  if (ms >= s) {\n    return Math.round(ms / s) + 's';\n  }\n  return ms + 'ms';\n}\n\n/**\n * Long format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtLong(ms) {\n  return plural(ms, d, 'day') ||\n    plural(ms, h, 'hour') ||\n    plural(ms, m, 'minute') ||\n    plural(ms, s, 'second') ||\n    ms + ' ms';\n}\n\n/**\n * Pluralization helper.\n */\n\nfunction plural(ms, n, name) {\n  if (ms < n) {\n    return;\n  }\n  if (ms < n * 1.5) {\n    return Math.floor(ms / n) + ' ' + name;\n  }\n  return Math.ceil(ms / n) + ' ' + name + 's';\n}\n","'use strict';\n\n/**\n * Masks a buffer using the given mask.\n *\n * @param {Buffer} source The buffer to mask\n * @param {Buffer} mask The mask to use\n * @param {Buffer} output The buffer where to store the result\n * @param {Number} offset The offset at which to start writing\n * @param {Number} length The number of bytes to mask.\n * @public\n */\nconst mask = (source, mask, output, offset, length) => {\n  for (var i = 0; i < length; i++) {\n    output[offset + i] = source[i] ^ mask[i & 3];\n  }\n};\n\n/**\n * Unmasks a buffer using the given mask.\n *\n * @param {Buffer} buffer The buffer to unmask\n * @param {Buffer} mask The mask to use\n * @public\n */\nconst unmask = (buffer, mask) => {\n  // Required until https://github.com/nodejs/node/issues/9006 is resolved.\n  const length = buffer.length;\n  for (var i = 0; i < length; i++) {\n    buffer[i] ^= mask[i & 3];\n  }\n};\n\nmodule.exports = { mask, unmask };\n","'use strict';\n\ntry {\n  module.exports = require('node-gyp-build')(__dirname);\n} catch (e) {\n  module.exports = require('./fallback');\n}\n","/*!\n * bytes\n * Copyright(c) 2012-2014 TJ Holowaychuk\n * Copyright(c) 2015 Jed Watson\n * MIT Licensed\n */\n\n'use strict';\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = bytes;\nmodule.exports.format = format;\nmodule.exports.parse = parse;\n\n/**\n * Module variables.\n * @private\n */\n\nvar formatThousandsRegExp = /\\B(?=(\\d{3})+(?!\\d))/g;\n\nvar formatDecimalsRegExp = /(?:\\.0*|(\\.[^0]+)0+)$/;\n\nvar map = {\n  b:  1,\n  kb: 1 << 10,\n  mb: 1 << 20,\n  gb: 1 << 30,\n  tb: Math.pow(1024, 4),\n  pb: Math.pow(1024, 5),\n};\n\nvar parseRegExp = /^((-|\\+)?(\\d+(?:\\.\\d+)?)) *(kb|mb|gb|tb|pb)$/i;\n\n/**\n * Convert the given value in bytes into a string or parse to string to an integer in bytes.\n *\n * @param {string|number} value\n * @param {{\n *  case: [string],\n *  decimalPlaces: [number]\n *  fixedDecimals: [boolean]\n *  thousandsSeparator: [string]\n *  unitSeparator: [string]\n *  }} [options] bytes options.\n *\n * @returns {string|number|null}\n */\n\nfunction bytes(value, options) {\n  if (typeof value === 'string') {\n    return parse(value);\n  }\n\n  if (typeof value === 'number') {\n    return format(value, options);\n  }\n\n  return null;\n}\n\n/**\n * Format the given value in bytes into a string.\n *\n * If the value is negative, it is kept as such. If it is a float,\n * it is rounded.\n *\n * @param {number} value\n * @param {object} [options]\n * @param {number} [options.decimalPlaces=2]\n * @param {number} [options.fixedDecimals=false]\n * @param {string} [options.thousandsSeparator=]\n * @param {string} [options.unit=]\n * @param {string} [options.unitSeparator=]\n *\n * @returns {string|null}\n * @public\n */\n\nfunction format(value, options) {\n  if (!Number.isFinite(value)) {\n    return null;\n  }\n\n  var mag = Math.abs(value);\n  var thousandsSeparator = (options && options.thousandsSeparator) || '';\n  var unitSeparator = (options && options.unitSeparator) || '';\n  var decimalPlaces = (options && options.decimalPlaces !== undefined) ? options.decimalPlaces : 2;\n  var fixedDecimals = Boolean(options && options.fixedDecimals);\n  var unit = (options && options.unit) || '';\n\n  if (!unit || !map[unit.toLowerCase()]) {\n    if (mag >= map.pb) {\n      unit = 'PB';\n    } else if (mag >= map.tb) {\n      unit = 'TB';\n    } else if (mag >= map.gb) {\n      unit = 'GB';\n    } else if (mag >= map.mb) {\n      unit = 'MB';\n    } else if (mag >= map.kb) {\n      unit = 'KB';\n    } else {\n      unit = 'B';\n    }\n  }\n\n  var val = value / map[unit.toLowerCase()];\n  var str = val.toFixed(decimalPlaces);\n\n  if (!fixedDecimals) {\n    str = str.replace(formatDecimalsRegExp, '$1');\n  }\n\n  if (thousandsSeparator) {\n    str = str.split('.').map(function (s, i) {\n      return i === 0\n        ? s.replace(formatThousandsRegExp, thousandsSeparator)\n        : s\n    }).join('.');\n  }\n\n  return str + unitSeparator + unit;\n}\n\n/**\n * Parse the string value into an integer in bytes.\n *\n * If no unit is given, it is assumed the value is in bytes.\n *\n * @param {number|string} val\n *\n * @returns {number|null}\n * @public\n */\n\nfunction parse(val) {\n  if (typeof val === 'number' && !isNaN(val)) {\n    return val;\n  }\n\n  if (typeof val !== 'string') {\n    return null;\n  }\n\n  // Test if the string passed is valid\n  var results = parseRegExp.exec(val);\n  var floatValue;\n  var unit = 'b';\n\n  if (!results) {\n    // Nothing could be extracted from the given string\n    floatValue = parseInt(val, 10);\n    unit = 'b'\n  } else {\n    // Retrieve the value and the unit\n    floatValue = parseFloat(results[1]);\n    unit = results[4].toLowerCase();\n  }\n\n  if (isNaN(floatValue)) {\n    return null;\n  }\n\n  return Math.floor(map[unit] * floatValue);\n}\n","'use strict';\n\nvar GetIntrinsic = require('get-intrinsic');\n\nvar callBind = require('./');\n\nvar $indexOf = callBind(GetIntrinsic('String.prototype.indexOf'));\n\nmodule.exports = function callBoundIntrinsic(name, allowMissing) {\n\tvar intrinsic = GetIntrinsic(name, !!allowMissing);\n\tif (typeof intrinsic === 'function' && $indexOf(name, '.prototype.') > -1) {\n\t\treturn callBind(intrinsic);\n\t}\n\treturn intrinsic;\n};\n","'use strict';\n\nvar bind = require('function-bind');\nvar GetIntrinsic = require('get-intrinsic');\n\nvar $apply = GetIntrinsic('%Function.prototype.apply%');\nvar $call = GetIntrinsic('%Function.prototype.call%');\nvar $reflectApply = GetIntrinsic('%Reflect.apply%', true) || bind.call($call, $apply);\n\nvar $gOPD = GetIntrinsic('%Object.getOwnPropertyDescriptor%', true);\nvar $defineProperty = GetIntrinsic('%Object.defineProperty%', true);\nvar $max = GetIntrinsic('%Math.max%');\n\nif ($defineProperty) {\n\ttry {\n\t\t$defineProperty({}, 'a', { value: 1 });\n\t} catch (e) {\n\t\t// IE 8 has a broken defineProperty\n\t\t$defineProperty = null;\n\t}\n}\n\nmodule.exports = function callBind(originalFunction) {\n\tvar func = $reflectApply(bind, $call, arguments);\n\tif ($gOPD && $defineProperty) {\n\t\tvar desc = $gOPD(func, 'length');\n\t\tif (desc.configurable) {\n\t\t\t// original length, plus the receiver, minus any additional arguments (after the receiver)\n\t\t\t$defineProperty(\n\t\t\t\tfunc,\n\t\t\t\t'length',\n\t\t\t\t{ value: 1 + $max(0, originalFunction.length - (arguments.length - 1)) }\n\t\t\t);\n\t\t}\n\t}\n\treturn func;\n};\n\nvar applyBind = function applyBind() {\n\treturn $reflectApply(bind, $apply, arguments);\n};\n\nif ($defineProperty) {\n\t$defineProperty(module.exports, 'apply', { value: applyBind });\n} else {\n\tmodule.exports.apply = applyBind;\n}\n","/*!\n * content-disposition\n * Copyright(c) 2014-2017 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = contentDisposition\nmodule.exports.parse = parse\n\n/**\n * Module dependencies.\n * @private\n */\n\nvar basename = require('path').basename\nvar Buffer = require('safe-buffer').Buffer\n\n/**\n * RegExp to match non attr-char, *after* encodeURIComponent (i.e. not including \"%\")\n * @private\n */\n\nvar ENCODE_URL_ATTR_CHAR_REGEXP = /[\\x00-\\x20\"'()*,/:;<=>?@[\\\\\\]{}\\x7f]/g // eslint-disable-line no-control-regex\n\n/**\n * RegExp to match percent encoding escape.\n * @private\n */\n\nvar HEX_ESCAPE_REGEXP = /%[0-9A-Fa-f]{2}/\nvar HEX_ESCAPE_REPLACE_REGEXP = /%([0-9A-Fa-f]{2})/g\n\n/**\n * RegExp to match non-latin1 characters.\n * @private\n */\n\nvar NON_LATIN1_REGEXP = /[^\\x20-\\x7e\\xa0-\\xff]/g\n\n/**\n * RegExp to match quoted-pair in RFC 2616\n *\n * quoted-pair = \"\\\" CHAR\n * CHAR        = <any US-ASCII character (octets 0 - 127)>\n * @private\n */\n\nvar QESC_REGEXP = /\\\\([\\u0000-\\u007f])/g // eslint-disable-line no-control-regex\n\n/**\n * RegExp to match chars that must be quoted-pair in RFC 2616\n * @private\n */\n\nvar QUOTE_REGEXP = /([\\\\\"])/g\n\n/**\n * RegExp for various RFC 2616 grammar\n *\n * parameter     = token \"=\" ( token | quoted-string )\n * token         = 1*<any CHAR except CTLs or separators>\n * separators    = \"(\" | \")\" | \"<\" | \">\" | \"@\"\n *               | \",\" | \";\" | \":\" | \"\\\" | <\">\n *               | \"/\" | \"[\" | \"]\" | \"?\" | \"=\"\n *               | \"{\" | \"}\" | SP | HT\n * quoted-string = ( <\"> *(qdtext | quoted-pair ) <\"> )\n * qdtext        = <any TEXT except <\">>\n * quoted-pair   = \"\\\" CHAR\n * CHAR          = <any US-ASCII character (octets 0 - 127)>\n * TEXT          = <any OCTET except CTLs, but including LWS>\n * LWS           = [CRLF] 1*( SP | HT )\n * CRLF          = CR LF\n * CR            = <US-ASCII CR, carriage return (13)>\n * LF            = <US-ASCII LF, linefeed (10)>\n * SP            = <US-ASCII SP, space (32)>\n * HT            = <US-ASCII HT, horizontal-tab (9)>\n * CTL           = <any US-ASCII control character (octets 0 - 31) and DEL (127)>\n * OCTET         = <any 8-bit sequence of data>\n * @private\n */\n\nvar PARAM_REGEXP = /;[\\x09\\x20]*([!#$%&'*+.0-9A-Z^_`a-z|~-]+)[\\x09\\x20]*=[\\x09\\x20]*(\"(?:[\\x20!\\x23-\\x5b\\x5d-\\x7e\\x80-\\xff]|\\\\[\\x20-\\x7e])*\"|[!#$%&'*+.0-9A-Z^_`a-z|~-]+)[\\x09\\x20]*/g // eslint-disable-line no-control-regex\nvar TEXT_REGEXP = /^[\\x20-\\x7e\\x80-\\xff]+$/\nvar TOKEN_REGEXP = /^[!#$%&'*+.0-9A-Z^_`a-z|~-]+$/\n\n/**\n * RegExp for various RFC 5987 grammar\n *\n * ext-value     = charset  \"'\" [ language ] \"'\" value-chars\n * charset       = \"UTF-8\" / \"ISO-8859-1\" / mime-charset\n * mime-charset  = 1*mime-charsetc\n * mime-charsetc = ALPHA / DIGIT\n *               / \"!\" / \"#\" / \"$\" / \"%\" / \"&\"\n *               / \"+\" / \"-\" / \"^\" / \"_\" / \"`\"\n *               / \"{\" / \"}\" / \"~\"\n * language      = ( 2*3ALPHA [ extlang ] )\n *               / 4ALPHA\n *               / 5*8ALPHA\n * extlang       = *3( \"-\" 3ALPHA )\n * value-chars   = *( pct-encoded / attr-char )\n * pct-encoded   = \"%\" HEXDIG HEXDIG\n * attr-char     = ALPHA / DIGIT\n *               / \"!\" / \"#\" / \"$\" / \"&\" / \"+\" / \"-\" / \".\"\n *               / \"^\" / \"_\" / \"`\" / \"|\" / \"~\"\n * @private\n */\n\nvar EXT_VALUE_REGEXP = /^([A-Za-z0-9!#$%&+\\-^_`{}~]+)'(?:[A-Za-z]{2,3}(?:-[A-Za-z]{3}){0,3}|[A-Za-z]{4,8}|)'((?:%[0-9A-Fa-f]{2}|[A-Za-z0-9!#$&+.^_`|~-])+)$/\n\n/**\n * RegExp for various RFC 6266 grammar\n *\n * disposition-type = \"inline\" | \"attachment\" | disp-ext-type\n * disp-ext-type    = token\n * disposition-parm = filename-parm | disp-ext-parm\n * filename-parm    = \"filename\" \"=\" value\n *                  | \"filename*\" \"=\" ext-value\n * disp-ext-parm    = token \"=\" value\n *                  | ext-token \"=\" ext-value\n * ext-token        = <the characters in token, followed by \"*\">\n * @private\n */\n\nvar DISPOSITION_TYPE_REGEXP = /^([!#$%&'*+.0-9A-Z^_`a-z|~-]+)[\\x09\\x20]*(?:$|;)/ // eslint-disable-line no-control-regex\n\n/**\n * Create an attachment Content-Disposition header.\n *\n * @param {string} [filename]\n * @param {object} [options]\n * @param {string} [options.type=attachment]\n * @param {string|boolean} [options.fallback=true]\n * @return {string}\n * @public\n */\n\nfunction contentDisposition (filename, options) {\n  var opts = options || {}\n\n  // get type\n  var type = opts.type || 'attachment'\n\n  // get parameters\n  var params = createparams(filename, opts.fallback)\n\n  // format into string\n  return format(new ContentDisposition(type, params))\n}\n\n/**\n * Create parameters object from filename and fallback.\n *\n * @param {string} [filename]\n * @param {string|boolean} [fallback=true]\n * @return {object}\n * @private\n */\n\nfunction createparams (filename, fallback) {\n  if (filename === undefined) {\n    return\n  }\n\n  var params = {}\n\n  if (typeof filename !== 'string') {\n    throw new TypeError('filename must be a string')\n  }\n\n  // fallback defaults to true\n  if (fallback === undefined) {\n    fallback = true\n  }\n\n  if (typeof fallback !== 'string' && typeof fallback !== 'boolean') {\n    throw new TypeError('fallback must be a string or boolean')\n  }\n\n  if (typeof fallback === 'string' && NON_LATIN1_REGEXP.test(fallback)) {\n    throw new TypeError('fallback must be ISO-8859-1 string')\n  }\n\n  // restrict to file base name\n  var name = basename(filename)\n\n  // determine if name is suitable for quoted string\n  var isQuotedString = TEXT_REGEXP.test(name)\n\n  // generate fallback name\n  var fallbackName = typeof fallback !== 'string'\n    ? fallback && getlatin1(name)\n    : basename(fallback)\n  var hasFallback = typeof fallbackName === 'string' && fallbackName !== name\n\n  // set extended filename parameter\n  if (hasFallback || !isQuotedString || HEX_ESCAPE_REGEXP.test(name)) {\n    params['filename*'] = name\n  }\n\n  // set filename parameter\n  if (isQuotedString || hasFallback) {\n    params.filename = hasFallback\n      ? fallbackName\n      : name\n  }\n\n  return params\n}\n\n/**\n * Format object to Content-Disposition header.\n *\n * @param {object} obj\n * @param {string} obj.type\n * @param {object} [obj.parameters]\n * @return {string}\n * @private\n */\n\nfunction format (obj) {\n  var parameters = obj.parameters\n  var type = obj.type\n\n  if (!type || typeof type !== 'string' || !TOKEN_REGEXP.test(type)) {\n    throw new TypeError('invalid type')\n  }\n\n  // start with normalized type\n  var string = String(type).toLowerCase()\n\n  // append parameters\n  if (parameters && typeof parameters === 'object') {\n    var param\n    var params = Object.keys(parameters).sort()\n\n    for (var i = 0; i < params.length; i++) {\n      param = params[i]\n\n      var val = param.substr(-1) === '*'\n        ? ustring(parameters[param])\n        : qstring(parameters[param])\n\n      string += '; ' + param + '=' + val\n    }\n  }\n\n  return string\n}\n\n/**\n * Decode a RFC 5987 field value (gracefully).\n *\n * @param {string} str\n * @return {string}\n * @private\n */\n\nfunction decodefield (str) {\n  var match = EXT_VALUE_REGEXP.exec(str)\n\n  if (!match) {\n    throw new TypeError('invalid extended field value')\n  }\n\n  var charset = match[1].toLowerCase()\n  var encoded = match[2]\n  var value\n\n  // to binary string\n  var binary = encoded.replace(HEX_ESCAPE_REPLACE_REGEXP, pdecode)\n\n  switch (charset) {\n    case 'iso-8859-1':\n      value = getlatin1(binary)\n      break\n    case 'utf-8':\n      value = Buffer.from(binary, 'binary').toString('utf8')\n      break\n    default:\n      throw new TypeError('unsupported charset in extended field')\n  }\n\n  return value\n}\n\n/**\n * Get ISO-8859-1 version of string.\n *\n * @param {string} val\n * @return {string}\n * @private\n */\n\nfunction getlatin1 (val) {\n  // simple Unicode -> ISO-8859-1 transformation\n  return String(val).replace(NON_LATIN1_REGEXP, '?')\n}\n\n/**\n * Parse Content-Disposition header string.\n *\n * @param {string} string\n * @return {object}\n * @public\n */\n\nfunction parse (string) {\n  if (!string || typeof string !== 'string') {\n    throw new TypeError('argument string is required')\n  }\n\n  var match = DISPOSITION_TYPE_REGEXP.exec(string)\n\n  if (!match) {\n    throw new TypeError('invalid type format')\n  }\n\n  // normalize type\n  var index = match[0].length\n  var type = match[1].toLowerCase()\n\n  var key\n  var names = []\n  var params = {}\n  var value\n\n  // calculate index to start at\n  index = PARAM_REGEXP.lastIndex = match[0].substr(-1) === ';'\n    ? index - 1\n    : index\n\n  // match parameters\n  while ((match = PARAM_REGEXP.exec(string))) {\n    if (match.index !== index) {\n      throw new TypeError('invalid parameter format')\n    }\n\n    index += match[0].length\n    key = match[1].toLowerCase()\n    value = match[2]\n\n    if (names.indexOf(key) !== -1) {\n      throw new TypeError('invalid duplicate parameter')\n    }\n\n    names.push(key)\n\n    if (key.indexOf('*') + 1 === key.length) {\n      // decode extended value\n      key = key.slice(0, -1)\n      value = decodefield(value)\n\n      // overwrite existing value\n      params[key] = value\n      continue\n    }\n\n    if (typeof params[key] === 'string') {\n      continue\n    }\n\n    if (value[0] === '\"') {\n      // remove quotes and escapes\n      value = value\n        .substr(1, value.length - 2)\n        .replace(QESC_REGEXP, '$1')\n    }\n\n    params[key] = value\n  }\n\n  if (index !== -1 && index !== string.length) {\n    throw new TypeError('invalid parameter format')\n  }\n\n  return new ContentDisposition(type, params)\n}\n\n/**\n * Percent decode a single character.\n *\n * @param {string} str\n * @param {string} hex\n * @return {string}\n * @private\n */\n\nfunction pdecode (str, hex) {\n  return String.fromCharCode(parseInt(hex, 16))\n}\n\n/**\n * Percent encode a single character.\n *\n * @param {string} char\n * @return {string}\n * @private\n */\n\nfunction pencode (char) {\n  return '%' + String(char)\n    .charCodeAt(0)\n    .toString(16)\n    .toUpperCase()\n}\n\n/**\n * Quote a string for HTTP.\n *\n * @param {string} val\n * @return {string}\n * @private\n */\n\nfunction qstring (val) {\n  var str = String(val)\n\n  return '\"' + str.replace(QUOTE_REGEXP, '\\\\$1') + '\"'\n}\n\n/**\n * Encode a Unicode string for HTTP (RFC 5987).\n *\n * @param {string} val\n * @return {string}\n * @private\n */\n\nfunction ustring (val) {\n  var str = String(val)\n\n  // percent encode as UTF-8\n  var encoded = encodeURIComponent(str)\n    .replace(ENCODE_URL_ATTR_CHAR_REGEXP, pencode)\n\n  return 'UTF-8\\'\\'' + encoded\n}\n\n/**\n * Class for parsed Content-Disposition header for v8 optimization\n *\n * @public\n * @param {string} type\n * @param {object} parameters\n * @constructor\n */\n\nfunction ContentDisposition (type, parameters) {\n  this.type = type\n  this.parameters = parameters\n}\n","/*! safe-buffer. MIT License. Feross Aboukhadijeh <https://feross.org/opensource> */\n/* eslint-disable node/no-deprecated-api */\nvar buffer = require('buffer')\nvar Buffer = buffer.Buffer\n\n// alternative to using Object.keys for old browsers\nfunction copyProps (src, dst) {\n  for (var key in src) {\n    dst[key] = src[key]\n  }\n}\nif (Buffer.from && Buffer.alloc && Buffer.allocUnsafe && Buffer.allocUnsafeSlow) {\n  module.exports = buffer\n} else {\n  // Copy properties from require('buffer')\n  copyProps(buffer, exports)\n  exports.Buffer = SafeBuffer\n}\n\nfunction SafeBuffer (arg, encodingOrOffset, length) {\n  return Buffer(arg, encodingOrOffset, length)\n}\n\nSafeBuffer.prototype = Object.create(Buffer.prototype)\n\n// Copy static methods from Buffer\ncopyProps(Buffer, SafeBuffer)\n\nSafeBuffer.from = function (arg, encodingOrOffset, length) {\n  if (typeof arg === 'number') {\n    throw new TypeError('Argument must not be a number')\n  }\n  return Buffer(arg, encodingOrOffset, length)\n}\n\nSafeBuffer.alloc = function (size, fill, encoding) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  var buf = Buffer(size)\n  if (fill !== undefined) {\n    if (typeof encoding === 'string') {\n      buf.fill(fill, encoding)\n    } else {\n      buf.fill(fill)\n    }\n  } else {\n    buf.fill(0)\n  }\n  return buf\n}\n\nSafeBuffer.allocUnsafe = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return Buffer(size)\n}\n\nSafeBuffer.allocUnsafeSlow = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return buffer.SlowBuffer(size)\n}\n","/*!\n * content-type\n * Copyright(c) 2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * RegExp to match *( \";\" parameter ) in RFC 7231 sec 3.1.1.1\n *\n * parameter     = token \"=\" ( token / quoted-string )\n * token         = 1*tchar\n * tchar         = \"!\" / \"#\" / \"$\" / \"%\" / \"&\" / \"'\" / \"*\"\n *               / \"+\" / \"-\" / \".\" / \"^\" / \"_\" / \"`\" / \"|\" / \"~\"\n *               / DIGIT / ALPHA\n *               ; any VCHAR, except delimiters\n * quoted-string = DQUOTE *( qdtext / quoted-pair ) DQUOTE\n * qdtext        = HTAB / SP / %x21 / %x23-5B / %x5D-7E / obs-text\n * obs-text      = %x80-FF\n * quoted-pair   = \"\\\" ( HTAB / SP / VCHAR / obs-text )\n */\nvar PARAM_REGEXP = /; *([!#$%&'*+.^_`|~0-9A-Za-z-]+) *= *(\"(?:[\\u000b\\u0020\\u0021\\u0023-\\u005b\\u005d-\\u007e\\u0080-\\u00ff]|\\\\[\\u000b\\u0020-\\u00ff])*\"|[!#$%&'*+.^_`|~0-9A-Za-z-]+) */g\nvar TEXT_REGEXP = /^[\\u000b\\u0020-\\u007e\\u0080-\\u00ff]+$/\nvar TOKEN_REGEXP = /^[!#$%&'*+.^_`|~0-9A-Za-z-]+$/\n\n/**\n * RegExp to match quoted-pair in RFC 7230 sec 3.2.6\n *\n * quoted-pair = \"\\\" ( HTAB / SP / VCHAR / obs-text )\n * obs-text    = %x80-FF\n */\nvar QESC_REGEXP = /\\\\([\\u000b\\u0020-\\u00ff])/g\n\n/**\n * RegExp to match chars that must be quoted-pair in RFC 7230 sec 3.2.6\n */\nvar QUOTE_REGEXP = /([\\\\\"])/g\n\n/**\n * RegExp to match type in RFC 7231 sec 3.1.1.1\n *\n * media-type = type \"/\" subtype\n * type       = token\n * subtype    = token\n */\nvar TYPE_REGEXP = /^[!#$%&'*+.^_`|~0-9A-Za-z-]+\\/[!#$%&'*+.^_`|~0-9A-Za-z-]+$/\n\n/**\n * Module exports.\n * @public\n */\n\nexports.format = format\nexports.parse = parse\n\n/**\n * Format object to media type.\n *\n * @param {object} obj\n * @return {string}\n * @public\n */\n\nfunction format (obj) {\n  if (!obj || typeof obj !== 'object') {\n    throw new TypeError('argument obj is required')\n  }\n\n  var parameters = obj.parameters\n  var type = obj.type\n\n  if (!type || !TYPE_REGEXP.test(type)) {\n    throw new TypeError('invalid type')\n  }\n\n  var string = type\n\n  // append parameters\n  if (parameters && typeof parameters === 'object') {\n    var param\n    var params = Object.keys(parameters).sort()\n\n    for (var i = 0; i < params.length; i++) {\n      param = params[i]\n\n      if (!TOKEN_REGEXP.test(param)) {\n        throw new TypeError('invalid parameter name')\n      }\n\n      string += '; ' + param + '=' + qstring(parameters[param])\n    }\n  }\n\n  return string\n}\n\n/**\n * Parse media type to object.\n *\n * @param {string|object} string\n * @return {Object}\n * @public\n */\n\nfunction parse (string) {\n  if (!string) {\n    throw new TypeError('argument string is required')\n  }\n\n  // support req/res-like objects as argument\n  var header = typeof string === 'object'\n    ? getcontenttype(string)\n    : string\n\n  if (typeof header !== 'string') {\n    throw new TypeError('argument string is required to be a string')\n  }\n\n  var index = header.indexOf(';')\n  var type = index !== -1\n    ? header.substr(0, index).trim()\n    : header.trim()\n\n  if (!TYPE_REGEXP.test(type)) {\n    throw new TypeError('invalid media type')\n  }\n\n  var obj = new ContentType(type.toLowerCase())\n\n  // parse parameters\n  if (index !== -1) {\n    var key\n    var match\n    var value\n\n    PARAM_REGEXP.lastIndex = index\n\n    while ((match = PARAM_REGEXP.exec(header))) {\n      if (match.index !== index) {\n        throw new TypeError('invalid parameter format')\n      }\n\n      index += match[0].length\n      key = match[1].toLowerCase()\n      value = match[2]\n\n      if (value[0] === '\"') {\n        // remove quotes and escapes\n        value = value\n          .substr(1, value.length - 2)\n          .replace(QESC_REGEXP, '$1')\n      }\n\n      obj.parameters[key] = value\n    }\n\n    if (index !== header.length) {\n      throw new TypeError('invalid parameter format')\n    }\n  }\n\n  return obj\n}\n\n/**\n * Get content-type from req/res objects.\n *\n * @param {object}\n * @return {Object}\n * @private\n */\n\nfunction getcontenttype (obj) {\n  var header\n\n  if (typeof obj.getHeader === 'function') {\n    // res-like\n    header = obj.getHeader('content-type')\n  } else if (typeof obj.headers === 'object') {\n    // req-like\n    header = obj.headers && obj.headers['content-type']\n  }\n\n  if (typeof header !== 'string') {\n    throw new TypeError('content-type header is missing from object')\n  }\n\n  return header\n}\n\n/**\n * Quote a string if necessary.\n *\n * @param {string} val\n * @return {string}\n * @private\n */\n\nfunction qstring (val) {\n  var str = String(val)\n\n  // no need to quote tokens\n  if (TOKEN_REGEXP.test(str)) {\n    return str\n  }\n\n  if (str.length > 0 && !TEXT_REGEXP.test(str)) {\n    throw new TypeError('invalid parameter value')\n  }\n\n  return '\"' + str.replace(QUOTE_REGEXP, '\\\\$1') + '\"'\n}\n\n/**\n * Class to represent a content type.\n * @private\n */\nfunction ContentType (type) {\n  this.parameters = Object.create(null)\n  this.type = type\n}\n","/**\n * Module dependencies.\n */\n\nvar crypto = require('crypto');\n\n/**\n * Sign the given `val` with `secret`.\n *\n * @param {String} val\n * @param {String} secret\n * @return {String}\n * @api private\n */\n\nexports.sign = function(val, secret){\n  if ('string' != typeof val) throw new TypeError(\"Cookie value must be provided as a string.\");\n  if ('string' != typeof secret) throw new TypeError(\"Secret string must be provided.\");\n  return val + '.' + crypto\n    .createHmac('sha256', secret)\n    .update(val)\n    .digest('base64')\n    .replace(/\\=+$/, '');\n};\n\n/**\n * Unsign and decode the given `val` with `secret`,\n * returning `false` if the signature is invalid.\n *\n * @param {String} val\n * @param {String} secret\n * @return {String|Boolean}\n * @api private\n */\n\nexports.unsign = function(val, secret){\n  if ('string' != typeof val) throw new TypeError(\"Signed cookie string must be provided.\");\n  if ('string' != typeof secret) throw new TypeError(\"Secret string must be provided.\");\n  var str = val.slice(0, val.lastIndexOf('.'))\n    , mac = exports.sign(str, secret);\n  \n  return sha1(mac) == sha1(val) ? str : false;\n};\n\n/**\n * Private\n */\n\nfunction sha1(str){\n  return crypto.createHash('sha1').update(str).digest('hex');\n}\n","/*!\n * cookie\n * Copyright(c) 2012-2014 Roman Shtylman\n * Copyright(c) 2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict';\n\n/**\n * Module exports.\n * @public\n */\n\nexports.parse = parse;\nexports.serialize = serialize;\n\n/**\n * Module variables.\n * @private\n */\n\nvar __toString = Object.prototype.toString\n\n/**\n * RegExp to match field-content in RFC 7230 sec 3.2\n *\n * field-content = field-vchar [ 1*( SP / HTAB ) field-vchar ]\n * field-vchar   = VCHAR / obs-text\n * obs-text      = %x80-FF\n */\n\nvar fieldContentRegExp = /^[\\u0009\\u0020-\\u007e\\u0080-\\u00ff]+$/;\n\n/**\n * Parse a cookie header.\n *\n * Parse the given cookie header string into an object\n * The object has the various cookies as keys(names) => values\n *\n * @param {string} str\n * @param {object} [options]\n * @return {object}\n * @public\n */\n\nfunction parse(str, options) {\n  if (typeof str !== 'string') {\n    throw new TypeError('argument str must be a string');\n  }\n\n  var obj = {}\n  var opt = options || {};\n  var dec = opt.decode || decode;\n\n  var index = 0\n  while (index < str.length) {\n    var eqIdx = str.indexOf('=', index)\n\n    // no more cookie pairs\n    if (eqIdx === -1) {\n      break\n    }\n\n    var endIdx = str.indexOf(';', index)\n\n    if (endIdx === -1) {\n      endIdx = str.length\n    } else if (endIdx < eqIdx) {\n      // backtrack on prior semicolon\n      index = str.lastIndexOf(';', eqIdx - 1) + 1\n      continue\n    }\n\n    var key = str.slice(index, eqIdx).trim()\n\n    // only assign once\n    if (undefined === obj[key]) {\n      var val = str.slice(eqIdx + 1, endIdx).trim()\n\n      // quoted values\n      if (val.charCodeAt(0) === 0x22) {\n        val = val.slice(1, -1)\n      }\n\n      obj[key] = tryDecode(val, dec);\n    }\n\n    index = endIdx + 1\n  }\n\n  return obj;\n}\n\n/**\n * Serialize data into a cookie header.\n *\n * Serialize the a name value pair into a cookie string suitable for\n * http headers. An optional options object specified cookie parameters.\n *\n * serialize('foo', 'bar', { httpOnly: true })\n *   => \"foo=bar; httpOnly\"\n *\n * @param {string} name\n * @param {string} val\n * @param {object} [options]\n * @return {string}\n * @public\n */\n\nfunction serialize(name, val, options) {\n  var opt = options || {};\n  var enc = opt.encode || encode;\n\n  if (typeof enc !== 'function') {\n    throw new TypeError('option encode is invalid');\n  }\n\n  if (!fieldContentRegExp.test(name)) {\n    throw new TypeError('argument name is invalid');\n  }\n\n  var value = enc(val);\n\n  if (value && !fieldContentRegExp.test(value)) {\n    throw new TypeError('argument val is invalid');\n  }\n\n  var str = name + '=' + value;\n\n  if (null != opt.maxAge) {\n    var maxAge = opt.maxAge - 0;\n\n    if (isNaN(maxAge) || !isFinite(maxAge)) {\n      throw new TypeError('option maxAge is invalid')\n    }\n\n    str += '; Max-Age=' + Math.floor(maxAge);\n  }\n\n  if (opt.domain) {\n    if (!fieldContentRegExp.test(opt.domain)) {\n      throw new TypeError('option domain is invalid');\n    }\n\n    str += '; Domain=' + opt.domain;\n  }\n\n  if (opt.path) {\n    if (!fieldContentRegExp.test(opt.path)) {\n      throw new TypeError('option path is invalid');\n    }\n\n    str += '; Path=' + opt.path;\n  }\n\n  if (opt.expires) {\n    var expires = opt.expires\n\n    if (!isDate(expires) || isNaN(expires.valueOf())) {\n      throw new TypeError('option expires is invalid');\n    }\n\n    str += '; Expires=' + expires.toUTCString()\n  }\n\n  if (opt.httpOnly) {\n    str += '; HttpOnly';\n  }\n\n  if (opt.secure) {\n    str += '; Secure';\n  }\n\n  if (opt.priority) {\n    var priority = typeof opt.priority === 'string'\n      ? opt.priority.toLowerCase()\n      : opt.priority\n\n    switch (priority) {\n      case 'low':\n        str += '; Priority=Low'\n        break\n      case 'medium':\n        str += '; Priority=Medium'\n        break\n      case 'high':\n        str += '; Priority=High'\n        break\n      default:\n        throw new TypeError('option priority is invalid')\n    }\n  }\n\n  if (opt.sameSite) {\n    var sameSite = typeof opt.sameSite === 'string'\n      ? opt.sameSite.toLowerCase() : opt.sameSite;\n\n    switch (sameSite) {\n      case true:\n        str += '; SameSite=Strict';\n        break;\n      case 'lax':\n        str += '; SameSite=Lax';\n        break;\n      case 'strict':\n        str += '; SameSite=Strict';\n        break;\n      case 'none':\n        str += '; SameSite=None';\n        break;\n      default:\n        throw new TypeError('option sameSite is invalid');\n    }\n  }\n\n  return str;\n}\n\n/**\n * URL-decode string value. Optimized to skip native call when no %.\n *\n * @param {string} str\n * @returns {string}\n */\n\nfunction decode (str) {\n  return str.indexOf('%') !== -1\n    ? decodeURIComponent(str)\n    : str\n}\n\n/**\n * URL-encode value.\n *\n * @param {string} str\n * @returns {string}\n */\n\nfunction encode (val) {\n  return encodeURIComponent(val)\n}\n\n/**\n * Determine if value is a Date.\n *\n * @param {*} val\n * @private\n */\n\nfunction isDate (val) {\n  return __toString.call(val) === '[object Date]' ||\n    val instanceof Date\n}\n\n/**\n * Try decoding a string using a decoding function.\n *\n * @param {string} str\n * @param {function} decode\n * @private\n */\n\nfunction tryDecode(str, decode) {\n  try {\n    return decode(str);\n  } catch (e) {\n    return str;\n  }\n}\n","(function () {\n\n  'use strict';\n\n  var assign = require('object-assign');\n  var vary = require('vary');\n\n  var defaults = {\n    origin: '*',\n    methods: 'GET,HEAD,PUT,PATCH,POST,DELETE',\n    preflightContinue: false,\n    optionsSuccessStatus: 204\n  };\n\n  function isString(s) {\n    return typeof s === 'string' || s instanceof String;\n  }\n\n  function isOriginAllowed(origin, allowedOrigin) {\n    if (Array.isArray(allowedOrigin)) {\n      for (var i = 0; i < allowedOrigin.length; ++i) {\n        if (isOriginAllowed(origin, allowedOrigin[i])) {\n          return true;\n        }\n      }\n      return false;\n    } else if (isString(allowedOrigin)) {\n      return origin === allowedOrigin;\n    } else if (allowedOrigin instanceof RegExp) {\n      return allowedOrigin.test(origin);\n    } else {\n      return !!allowedOrigin;\n    }\n  }\n\n  function configureOrigin(options, req) {\n    var requestOrigin = req.headers.origin,\n      headers = [],\n      isAllowed;\n\n    if (!options.origin || options.origin === '*') {\n      // allow any origin\n      headers.push([{\n        key: 'Access-Control-Allow-Origin',\n        value: '*'\n      }]);\n    } else if (isString(options.origin)) {\n      // fixed origin\n      headers.push([{\n        key: 'Access-Control-Allow-Origin',\n        value: options.origin\n      }]);\n      headers.push([{\n        key: 'Vary',\n        value: 'Origin'\n      }]);\n    } else {\n      isAllowed = isOriginAllowed(requestOrigin, options.origin);\n      // reflect origin\n      headers.push([{\n        key: 'Access-Control-Allow-Origin',\n        value: isAllowed ? requestOrigin : false\n      }]);\n      headers.push([{\n        key: 'Vary',\n        value: 'Origin'\n      }]);\n    }\n\n    return headers;\n  }\n\n  function configureMethods(options) {\n    var methods = options.methods;\n    if (methods.join) {\n      methods = options.methods.join(','); // .methods is an array, so turn it into a string\n    }\n    return {\n      key: 'Access-Control-Allow-Methods',\n      value: methods\n    };\n  }\n\n  function configureCredentials(options) {\n    if (options.credentials === true) {\n      return {\n        key: 'Access-Control-Allow-Credentials',\n        value: 'true'\n      };\n    }\n    return null;\n  }\n\n  function configureAllowedHeaders(options, req) {\n    var allowedHeaders = options.allowedHeaders || options.headers;\n    var headers = [];\n\n    if (!allowedHeaders) {\n      allowedHeaders = req.headers['access-control-request-headers']; // .headers wasn't specified, so reflect the request headers\n      headers.push([{\n        key: 'Vary',\n        value: 'Access-Control-Request-Headers'\n      }]);\n    } else if (allowedHeaders.join) {\n      allowedHeaders = allowedHeaders.join(','); // .headers is an array, so turn it into a string\n    }\n    if (allowedHeaders && allowedHeaders.length) {\n      headers.push([{\n        key: 'Access-Control-Allow-Headers',\n        value: allowedHeaders\n      }]);\n    }\n\n    return headers;\n  }\n\n  function configureExposedHeaders(options) {\n    var headers = options.exposedHeaders;\n    if (!headers) {\n      return null;\n    } else if (headers.join) {\n      headers = headers.join(','); // .headers is an array, so turn it into a string\n    }\n    if (headers && headers.length) {\n      return {\n        key: 'Access-Control-Expose-Headers',\n        value: headers\n      };\n    }\n    return null;\n  }\n\n  function configureMaxAge(options) {\n    var maxAge = (typeof options.maxAge === 'number' || options.maxAge) && options.maxAge.toString()\n    if (maxAge && maxAge.length) {\n      return {\n        key: 'Access-Control-Max-Age',\n        value: maxAge\n      };\n    }\n    return null;\n  }\n\n  function applyHeaders(headers, res) {\n    for (var i = 0, n = headers.length; i < n; i++) {\n      var header = headers[i];\n      if (header) {\n        if (Array.isArray(header)) {\n          applyHeaders(header, res);\n        } else if (header.key === 'Vary' && header.value) {\n          vary(res, header.value);\n        } else if (header.value) {\n          res.setHeader(header.key, header.value);\n        }\n      }\n    }\n  }\n\n  function cors(options, req, res, next) {\n    var headers = [],\n      method = req.method && req.method.toUpperCase && req.method.toUpperCase();\n\n    if (method === 'OPTIONS') {\n      // preflight\n      headers.push(configureOrigin(options, req));\n      headers.push(configureCredentials(options, req));\n      headers.push(configureMethods(options, req));\n      headers.push(configureAllowedHeaders(options, req));\n      headers.push(configureMaxAge(options, req));\n      headers.push(configureExposedHeaders(options, req));\n      applyHeaders(headers, res);\n\n      if (options.preflightContinue) {\n        next();\n      } else {\n        // Safari (and potentially other browsers) need content-length 0,\n        //   for 204 or they just hang waiting for a body\n        res.statusCode = options.optionsSuccessStatus;\n        res.setHeader('Content-Length', '0');\n        res.end();\n      }\n    } else {\n      // actual response\n      headers.push(configureOrigin(options, req));\n      headers.push(configureCredentials(options, req));\n      headers.push(configureExposedHeaders(options, req));\n      applyHeaders(headers, res);\n      next();\n    }\n  }\n\n  function middlewareWrapper(o) {\n    // if options are static (either via defaults or custom options passed in), wrap in a function\n    var optionsCallback = null;\n    if (typeof o === 'function') {\n      optionsCallback = o;\n    } else {\n      optionsCallback = function (req, cb) {\n        cb(null, o);\n      };\n    }\n\n    return function corsMiddleware(req, res, next) {\n      optionsCallback(req, function (err, options) {\n        if (err) {\n          next(err);\n        } else {\n          var corsOptions = assign({}, defaults, options);\n          var originCallback = null;\n          if (corsOptions.origin && typeof corsOptions.origin === 'function') {\n            originCallback = corsOptions.origin;\n          } else if (corsOptions.origin) {\n            originCallback = function (origin, cb) {\n              cb(null, corsOptions.origin);\n            };\n          }\n\n          if (originCallback) {\n            originCallback(req.headers.origin, function (err2, origin) {\n              if (err2 || !origin) {\n                next(err2);\n              } else {\n                corsOptions.origin = origin;\n                cors(corsOptions, req, res, next);\n              }\n            });\n          } else {\n            next();\n          }\n        }\n      });\n    };\n  }\n\n  // can pass either an options hash, an options delegate, or nothing\n  module.exports = middlewareWrapper;\n\n}());\n","/*!\n * depd\n * Copyright(c) 2014-2018 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n/**\n * Module dependencies.\n */\n\nvar relative = require('path').relative\n\n/**\n * Module exports.\n */\n\nmodule.exports = depd\n\n/**\n * Get the path to base files on.\n */\n\nvar basePath = process.cwd()\n\n/**\n * Determine if namespace is contained in the string.\n */\n\nfunction containsNamespace (str, namespace) {\n  var vals = str.split(/[ ,]+/)\n  var ns = String(namespace).toLowerCase()\n\n  for (var i = 0; i < vals.length; i++) {\n    var val = vals[i]\n\n    // namespace contained\n    if (val && (val === '*' || val.toLowerCase() === ns)) {\n      return true\n    }\n  }\n\n  return false\n}\n\n/**\n * Convert a data descriptor to accessor descriptor.\n */\n\nfunction convertDataDescriptorToAccessor (obj, prop, message) {\n  var descriptor = Object.getOwnPropertyDescriptor(obj, prop)\n  var value = descriptor.value\n\n  descriptor.get = function getter () { return value }\n\n  if (descriptor.writable) {\n    descriptor.set = function setter (val) { return (value = val) }\n  }\n\n  delete descriptor.value\n  delete descriptor.writable\n\n  Object.defineProperty(obj, prop, descriptor)\n\n  return descriptor\n}\n\n/**\n * Create arguments string to keep arity.\n */\n\nfunction createArgumentsString (arity) {\n  var str = ''\n\n  for (var i = 0; i < arity; i++) {\n    str += ', arg' + i\n  }\n\n  return str.substr(2)\n}\n\n/**\n * Create stack string from stack.\n */\n\nfunction createStackString (stack) {\n  var str = this.name + ': ' + this.namespace\n\n  if (this.message) {\n    str += ' deprecated ' + this.message\n  }\n\n  for (var i = 0; i < stack.length; i++) {\n    str += '\\n    at ' + stack[i].toString()\n  }\n\n  return str\n}\n\n/**\n * Create deprecate for namespace in caller.\n */\n\nfunction depd (namespace) {\n  if (!namespace) {\n    throw new TypeError('argument namespace is required')\n  }\n\n  var stack = getStack()\n  var site = callSiteLocation(stack[1])\n  var file = site[0]\n\n  function deprecate (message) {\n    // call to self as log\n    log.call(deprecate, message)\n  }\n\n  deprecate._file = file\n  deprecate._ignored = isignored(namespace)\n  deprecate._namespace = namespace\n  deprecate._traced = istraced(namespace)\n  deprecate._warned = Object.create(null)\n\n  deprecate.function = wrapfunction\n  deprecate.property = wrapproperty\n\n  return deprecate\n}\n\n/**\n * Determine if event emitter has listeners of a given type.\n *\n * The way to do this check is done three different ways in Node.js >= 0.8\n * so this consolidates them into a minimal set using instance methods.\n *\n * @param {EventEmitter} emitter\n * @param {string} type\n * @returns {boolean}\n * @private\n */\n\nfunction eehaslisteners (emitter, type) {\n  var count = typeof emitter.listenerCount !== 'function'\n    ? emitter.listeners(type).length\n    : emitter.listenerCount(type)\n\n  return count > 0\n}\n\n/**\n * Determine if namespace is ignored.\n */\n\nfunction isignored (namespace) {\n  if (process.noDeprecation) {\n    // --no-deprecation support\n    return true\n  }\n\n  var str = process.env.NO_DEPRECATION || ''\n\n  // namespace ignored\n  return containsNamespace(str, namespace)\n}\n\n/**\n * Determine if namespace is traced.\n */\n\nfunction istraced (namespace) {\n  if (process.traceDeprecation) {\n    // --trace-deprecation support\n    return true\n  }\n\n  var str = process.env.TRACE_DEPRECATION || ''\n\n  // namespace traced\n  return containsNamespace(str, namespace)\n}\n\n/**\n * Display deprecation message.\n */\n\nfunction log (message, site) {\n  var haslisteners = eehaslisteners(process, 'deprecation')\n\n  // abort early if no destination\n  if (!haslisteners && this._ignored) {\n    return\n  }\n\n  var caller\n  var callFile\n  var callSite\n  var depSite\n  var i = 0\n  var seen = false\n  var stack = getStack()\n  var file = this._file\n\n  if (site) {\n    // provided site\n    depSite = site\n    callSite = callSiteLocation(stack[1])\n    callSite.name = depSite.name\n    file = callSite[0]\n  } else {\n    // get call site\n    i = 2\n    depSite = callSiteLocation(stack[i])\n    callSite = depSite\n  }\n\n  // get caller of deprecated thing in relation to file\n  for (; i < stack.length; i++) {\n    caller = callSiteLocation(stack[i])\n    callFile = caller[0]\n\n    if (callFile === file) {\n      seen = true\n    } else if (callFile === this._file) {\n      file = this._file\n    } else if (seen) {\n      break\n    }\n  }\n\n  var key = caller\n    ? depSite.join(':') + '__' + caller.join(':')\n    : undefined\n\n  if (key !== undefined && key in this._warned) {\n    // already warned\n    return\n  }\n\n  this._warned[key] = true\n\n  // generate automatic message from call site\n  var msg = message\n  if (!msg) {\n    msg = callSite === depSite || !callSite.name\n      ? defaultMessage(depSite)\n      : defaultMessage(callSite)\n  }\n\n  // emit deprecation if listeners exist\n  if (haslisteners) {\n    var err = DeprecationError(this._namespace, msg, stack.slice(i))\n    process.emit('deprecation', err)\n    return\n  }\n\n  // format and write message\n  var format = process.stderr.isTTY\n    ? formatColor\n    : formatPlain\n  var output = format.call(this, msg, caller, stack.slice(i))\n  process.stderr.write(output + '\\n', 'utf8')\n}\n\n/**\n * Get call site location as array.\n */\n\nfunction callSiteLocation (callSite) {\n  var file = callSite.getFileName() || '<anonymous>'\n  var line = callSite.getLineNumber()\n  var colm = callSite.getColumnNumber()\n\n  if (callSite.isEval()) {\n    file = callSite.getEvalOrigin() + ', ' + file\n  }\n\n  var site = [file, line, colm]\n\n  site.callSite = callSite\n  site.name = callSite.getFunctionName()\n\n  return site\n}\n\n/**\n * Generate a default message from the site.\n */\n\nfunction defaultMessage (site) {\n  var callSite = site.callSite\n  var funcName = site.name\n\n  // make useful anonymous name\n  if (!funcName) {\n    funcName = '<anonymous@' + formatLocation(site) + '>'\n  }\n\n  var context = callSite.getThis()\n  var typeName = context && callSite.getTypeName()\n\n  // ignore useless type name\n  if (typeName === 'Object') {\n    typeName = undefined\n  }\n\n  // make useful type name\n  if (typeName === 'Function') {\n    typeName = context.name || typeName\n  }\n\n  return typeName && callSite.getMethodName()\n    ? typeName + '.' + funcName\n    : funcName\n}\n\n/**\n * Format deprecation message without color.\n */\n\nfunction formatPlain (msg, caller, stack) {\n  var timestamp = new Date().toUTCString()\n\n  var formatted = timestamp +\n    ' ' + this._namespace +\n    ' deprecated ' + msg\n\n  // add stack trace\n  if (this._traced) {\n    for (var i = 0; i < stack.length; i++) {\n      formatted += '\\n    at ' + stack[i].toString()\n    }\n\n    return formatted\n  }\n\n  if (caller) {\n    formatted += ' at ' + formatLocation(caller)\n  }\n\n  return formatted\n}\n\n/**\n * Format deprecation message with color.\n */\n\nfunction formatColor (msg, caller, stack) {\n  var formatted = '\\x1b[36;1m' + this._namespace + '\\x1b[22;39m' + // bold cyan\n    ' \\x1b[33;1mdeprecated\\x1b[22;39m' + // bold yellow\n    ' \\x1b[0m' + msg + '\\x1b[39m' // reset\n\n  // add stack trace\n  if (this._traced) {\n    for (var i = 0; i < stack.length; i++) {\n      formatted += '\\n    \\x1b[36mat ' + stack[i].toString() + '\\x1b[39m' // cyan\n    }\n\n    return formatted\n  }\n\n  if (caller) {\n    formatted += ' \\x1b[36m' + formatLocation(caller) + '\\x1b[39m' // cyan\n  }\n\n  return formatted\n}\n\n/**\n * Format call site location.\n */\n\nfunction formatLocation (callSite) {\n  return relative(basePath, callSite[0]) +\n    ':' + callSite[1] +\n    ':' + callSite[2]\n}\n\n/**\n * Get the stack as array of call sites.\n */\n\nfunction getStack () {\n  var limit = Error.stackTraceLimit\n  var obj = {}\n  var prep = Error.prepareStackTrace\n\n  Error.prepareStackTrace = prepareObjectStackTrace\n  Error.stackTraceLimit = Math.max(10, limit)\n\n  // capture the stack\n  Error.captureStackTrace(obj)\n\n  // slice this function off the top\n  var stack = obj.stack.slice(1)\n\n  Error.prepareStackTrace = prep\n  Error.stackTraceLimit = limit\n\n  return stack\n}\n\n/**\n * Capture call site stack from v8.\n */\n\nfunction prepareObjectStackTrace (obj, stack) {\n  return stack\n}\n\n/**\n * Return a wrapped function in a deprecation message.\n */\n\nfunction wrapfunction (fn, message) {\n  if (typeof fn !== 'function') {\n    throw new TypeError('argument fn must be a function')\n  }\n\n  var args = createArgumentsString(fn.length)\n  var stack = getStack()\n  var site = callSiteLocation(stack[1])\n\n  site.name = fn.name\n\n  // eslint-disable-next-line no-new-func\n  var deprecatedfn = new Function('fn', 'log', 'deprecate', 'message', 'site',\n    '\"use strict\"\\n' +\n    'return function (' + args + ') {' +\n    'log.call(deprecate, message, site)\\n' +\n    'return fn.apply(this, arguments)\\n' +\n    '}')(fn, log, this, message, site)\n\n  return deprecatedfn\n}\n\n/**\n * Wrap property in a deprecation message.\n */\n\nfunction wrapproperty (obj, prop, message) {\n  if (!obj || (typeof obj !== 'object' && typeof obj !== 'function')) {\n    throw new TypeError('argument obj must be object')\n  }\n\n  var descriptor = Object.getOwnPropertyDescriptor(obj, prop)\n\n  if (!descriptor) {\n    throw new TypeError('must call property on owner object')\n  }\n\n  if (!descriptor.configurable) {\n    throw new TypeError('property must be configurable')\n  }\n\n  var deprecate = this\n  var stack = getStack()\n  var site = callSiteLocation(stack[1])\n\n  // set site name\n  site.name = prop\n\n  // convert data descriptor\n  if ('value' in descriptor) {\n    descriptor = convertDataDescriptorToAccessor(obj, prop, message)\n  }\n\n  var get = descriptor.get\n  var set = descriptor.set\n\n  // wrap getter\n  if (typeof get === 'function') {\n    descriptor.get = function getter () {\n      log.call(deprecate, message, site)\n      return get.apply(this, arguments)\n    }\n  }\n\n  // wrap setter\n  if (typeof set === 'function') {\n    descriptor.set = function setter () {\n      log.call(deprecate, message, site)\n      return set.apply(this, arguments)\n    }\n  }\n\n  Object.defineProperty(obj, prop, descriptor)\n}\n\n/**\n * Create DeprecationError for deprecation\n */\n\nfunction DeprecationError (namespace, message, stack) {\n  var error = new Error()\n  var stackString\n\n  Object.defineProperty(error, 'constructor', {\n    value: DeprecationError\n  })\n\n  Object.defineProperty(error, 'message', {\n    configurable: true,\n    enumerable: false,\n    value: message,\n    writable: true\n  })\n\n  Object.defineProperty(error, 'name', {\n    enumerable: false,\n    configurable: true,\n    value: 'DeprecationError',\n    writable: true\n  })\n\n  Object.defineProperty(error, 'namespace', {\n    configurable: true,\n    enumerable: false,\n    value: namespace,\n    writable: true\n  })\n\n  Object.defineProperty(error, 'stack', {\n    configurable: true,\n    enumerable: false,\n    get: function () {\n      if (stackString !== undefined) {\n        return stackString\n      }\n\n      // prepare stack trace\n      return (stackString = createStackString.call(this, stack))\n    },\n    set: function setter (val) {\n      stackString = val\n    }\n  })\n\n  return error\n}\n","/*!\n * destroy\n * Copyright(c) 2014 Jonathan Ong\n * Copyright(c) 2015-2022 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * Module dependencies.\n * @private\n */\n\nvar EventEmitter = require('events').EventEmitter\nvar ReadStream = require('fs').ReadStream\nvar Stream = require('stream')\nvar Zlib = require('zlib')\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = destroy\n\n/**\n * Destroy the given stream, and optionally suppress any future `error` events.\n *\n * @param {object} stream\n * @param {boolean} suppress\n * @public\n */\n\nfunction destroy (stream, suppress) {\n  if (isFsReadStream(stream)) {\n    destroyReadStream(stream)\n  } else if (isZlibStream(stream)) {\n    destroyZlibStream(stream)\n  } else if (hasDestroy(stream)) {\n    stream.destroy()\n  }\n\n  if (isEventEmitter(stream) && suppress) {\n    stream.removeAllListeners('error')\n    stream.addListener('error', noop)\n  }\n\n  return stream\n}\n\n/**\n * Destroy a ReadStream.\n *\n * @param {object} stream\n * @private\n */\n\nfunction destroyReadStream (stream) {\n  stream.destroy()\n\n  if (typeof stream.close === 'function') {\n    // node.js core bug work-around\n    stream.on('open', onOpenClose)\n  }\n}\n\n/**\n * Close a Zlib stream.\n *\n * Zlib streams below Node.js 4.5.5 have a buggy implementation\n * of .close() when zlib encountered an error.\n *\n * @param {object} stream\n * @private\n */\n\nfunction closeZlibStream (stream) {\n  if (stream._hadError === true) {\n    var prop = stream._binding === null\n      ? '_binding'\n      : '_handle'\n\n    stream[prop] = {\n      close: function () { this[prop] = null }\n    }\n  }\n\n  stream.close()\n}\n\n/**\n * Destroy a Zlib stream.\n *\n * Zlib streams don't have a destroy function in Node.js 6. On top of that\n * simply calling destroy on a zlib stream in Node.js 8+ will result in a\n * memory leak. So until that is fixed, we need to call both close AND destroy.\n *\n * PR to fix memory leak: https://github.com/nodejs/node/pull/23734\n *\n * In Node.js 6+8, it's important that destroy is called before close as the\n * stream would otherwise emit the error 'zlib binding closed'.\n *\n * @param {object} stream\n * @private\n */\n\nfunction destroyZlibStream (stream) {\n  if (typeof stream.destroy === 'function') {\n    // node.js core bug work-around\n    // istanbul ignore if: node.js 0.8\n    if (stream._binding) {\n      // node.js < 0.10.0\n      stream.destroy()\n      if (stream._processing) {\n        stream._needDrain = true\n        stream.once('drain', onDrainClearBinding)\n      } else {\n        stream._binding.clear()\n      }\n    } else if (stream._destroy && stream._destroy !== Stream.Transform.prototype._destroy) {\n      // node.js >= 12, ^11.1.0, ^10.15.1\n      stream.destroy()\n    } else if (stream._destroy && typeof stream.close === 'function') {\n      // node.js 7, 8\n      stream.destroyed = true\n      stream.close()\n    } else {\n      // fallback\n      // istanbul ignore next\n      stream.destroy()\n    }\n  } else if (typeof stream.close === 'function') {\n    // node.js < 8 fallback\n    closeZlibStream(stream)\n  }\n}\n\n/**\n * Determine if stream has destroy.\n * @private\n */\n\nfunction hasDestroy (stream) {\n  return stream instanceof Stream &&\n    typeof stream.destroy === 'function'\n}\n\n/**\n * Determine if val is EventEmitter.\n * @private\n */\n\nfunction isEventEmitter (val) {\n  return val instanceof EventEmitter\n}\n\n/**\n * Determine if stream is fs.ReadStream stream.\n * @private\n */\n\nfunction isFsReadStream (stream) {\n  return stream instanceof ReadStream\n}\n\n/**\n * Determine if stream is Zlib stream.\n * @private\n */\n\nfunction isZlibStream (stream) {\n  return stream instanceof Zlib.Gzip ||\n    stream instanceof Zlib.Gunzip ||\n    stream instanceof Zlib.Deflate ||\n    stream instanceof Zlib.DeflateRaw ||\n    stream instanceof Zlib.Inflate ||\n    stream instanceof Zlib.InflateRaw ||\n    stream instanceof Zlib.Unzip\n}\n\n/**\n * No-op function.\n * @private\n */\n\nfunction noop () {}\n\n/**\n * On drain handler to clear binding.\n * @private\n */\n\n// istanbul ignore next: node.js 0.8\nfunction onDrainClearBinding () {\n  this._binding.clear()\n}\n\n/**\n * On open handler to close stream.\n * @private\n */\n\nfunction onOpenClose () {\n  if (typeof this.fd === 'number') {\n    // actually close down the fd\n    this.close()\n  }\n}\n","const fs = require('fs')\nconst path = require('path')\nconst os = require('os')\n\nconst LINE = /(?:^|^)\\s*(?:export\\s+)?([\\w.-]+)(?:\\s*=\\s*?|:\\s+?)(\\s*'(?:\\\\'|[^'])*'|\\s*\"(?:\\\\\"|[^\"])*\"|\\s*`(?:\\\\`|[^`])*`|[^#\\r\\n]+)?\\s*(?:#.*)?(?:$|$)/mg\n\n// Parser src into an Object\nfunction parse (src) {\n  const obj = {}\n\n  // Convert buffer to string\n  let lines = src.toString()\n\n  // Convert line breaks to same format\n  lines = lines.replace(/\\r\\n?/mg, '\\n')\n\n  let match\n  while ((match = LINE.exec(lines)) != null) {\n    const key = match[1]\n\n    // Default undefined or null to empty string\n    let value = (match[2] || '')\n\n    // Remove whitespace\n    value = value.trim()\n\n    // Check if double quoted\n    const maybeQuote = value[0]\n\n    // Remove surrounding quotes\n    value = value.replace(/^(['\"`])([\\s\\S]*)\\1$/mg, '$2')\n\n    // Expand newlines if double quoted\n    if (maybeQuote === '\"') {\n      value = value.replace(/\\\\n/g, '\\n')\n      value = value.replace(/\\\\r/g, '\\r')\n    }\n\n    // Add to object\n    obj[key] = value\n  }\n\n  return obj\n}\n\nfunction _log (message) {\n  console.log(`[dotenv][DEBUG] ${message}`)\n}\n\nfunction _resolveHome (envPath) {\n  return envPath[0] === '~' ? path.join(os.homedir(), envPath.slice(1)) : envPath\n}\n\n// Populates process.env from .env file\nfunction config (options) {\n  let dotenvPath = path.resolve(process.cwd(), '.env')\n  let encoding = 'utf8'\n  const debug = Boolean(options && options.debug)\n  const override = Boolean(options && options.override)\n\n  if (options) {\n    if (options.path != null) {\n      dotenvPath = _resolveHome(options.path)\n    }\n    if (options.encoding != null) {\n      encoding = options.encoding\n    }\n  }\n\n  try {\n    // Specifying an encoding returns a string instead of a buffer\n    const parsed = DotenvModule.parse(fs.readFileSync(dotenvPath, { encoding }))\n\n    Object.keys(parsed).forEach(function (key) {\n      if (!Object.prototype.hasOwnProperty.call(process.env, key)) {\n        process.env[key] = parsed[key]\n      } else {\n        if (override === true) {\n          process.env[key] = parsed[key]\n        }\n\n        if (debug) {\n          if (override === true) {\n            _log(`\"${key}\" is already defined in \\`process.env\\` and WAS overwritten`)\n          } else {\n            _log(`\"${key}\" is already defined in \\`process.env\\` and was NOT overwritten`)\n          }\n        }\n      }\n    })\n\n    return { parsed }\n  } catch (e) {\n    if (debug) {\n      _log(`Failed to load ${dotenvPath} ${e.message}`)\n    }\n\n    return { error: e }\n  }\n}\n\nconst DotenvModule = {\n  config,\n  parse\n}\n\nmodule.exports.config = DotenvModule.config\nmodule.exports.parse = DotenvModule.parse\nmodule.exports = DotenvModule\n","/*!\n * ee-first\n * Copyright(c) 2014 Jonathan Ong\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = first\n\n/**\n * Get the first event in a set of event emitters and event pairs.\n *\n * @param {array} stuff\n * @param {function} done\n * @public\n */\n\nfunction first(stuff, done) {\n  if (!Array.isArray(stuff))\n    throw new TypeError('arg must be an array of [ee, events...] arrays')\n\n  var cleanups = []\n\n  for (var i = 0; i < stuff.length; i++) {\n    var arr = stuff[i]\n\n    if (!Array.isArray(arr) || arr.length < 2)\n      throw new TypeError('each array member must be [ee, events...]')\n\n    var ee = arr[0]\n\n    for (var j = 1; j < arr.length; j++) {\n      var event = arr[j]\n      var fn = listener(event, callback)\n\n      // listen to the event\n      ee.on(event, fn)\n      // push this listener to the list of cleanups\n      cleanups.push({\n        ee: ee,\n        event: event,\n        fn: fn,\n      })\n    }\n  }\n\n  function callback() {\n    cleanup()\n    done.apply(null, arguments)\n  }\n\n  function cleanup() {\n    var x\n    for (var i = 0; i < cleanups.length; i++) {\n      x = cleanups[i]\n      x.ee.removeListener(x.event, x.fn)\n    }\n  }\n\n  function thunk(fn) {\n    done = fn\n  }\n\n  thunk.cancel = cleanup\n\n  return thunk\n}\n\n/**\n * Create the event listener.\n * @private\n */\n\nfunction listener(event, done) {\n  return function onevent(arg1) {\n    var args = new Array(arguments.length)\n    var ee = this\n    var err = event === 'error'\n      ? arg1\n      : null\n\n    // copy args to prevent arguments escaping scope\n    for (var i = 0; i < args.length; i++) {\n      args[i] = arguments[i]\n    }\n\n    done(err, ee, event, args)\n  }\n}\n","/*!\n * encodeurl\n * Copyright(c) 2016 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = encodeUrl\n\n/**\n * RegExp to match non-URL code points, *after* encoding (i.e. not including \"%\")\n * and including invalid escape sequences.\n * @private\n */\n\nvar ENCODE_CHARS_REGEXP = /(?:[^\\x21\\x25\\x26-\\x3B\\x3D\\x3F-\\x5B\\x5D\\x5F\\x61-\\x7A\\x7E]|%(?:[^0-9A-Fa-f]|[0-9A-Fa-f][^0-9A-Fa-f]|$))+/g\n\n/**\n * RegExp to match unmatched surrogate pair.\n * @private\n */\n\nvar UNMATCHED_SURROGATE_PAIR_REGEXP = /(^|[^\\uD800-\\uDBFF])[\\uDC00-\\uDFFF]|[\\uD800-\\uDBFF]([^\\uDC00-\\uDFFF]|$)/g\n\n/**\n * String to replace unmatched surrogate pair with.\n * @private\n */\n\nvar UNMATCHED_SURROGATE_PAIR_REPLACE = '$1\\uFFFD$2'\n\n/**\n * Encode a URL to a percent-encoded form, excluding already-encoded sequences.\n *\n * This function will take an already-encoded URL and encode all the non-URL\n * code points. This function will not encode the \"%\" character unless it is\n * not part of a valid sequence (`%20` will be left as-is, but `%foo` will\n * be encoded as `%25foo`).\n *\n * This encode is meant to be \"safe\" and does not throw errors. It will try as\n * hard as it can to properly encode the given URL, including replacing any raw,\n * unpaired surrogate pairs with the Unicode replacement character prior to\n * encoding.\n *\n * @param {string} url\n * @return {string}\n * @public\n */\n\nfunction encodeUrl (url) {\n  return String(url)\n    .replace(UNMATCHED_SURROGATE_PAIR_REGEXP, UNMATCHED_SURROGATE_PAIR_REPLACE)\n    .replace(ENCODE_CHARS_REGEXP, encodeURI)\n}\n","/*!\n * escape-html\n * Copyright(c) 2012-2013 TJ Holowaychuk\n * Copyright(c) 2015 Andreas Lubbe\n * Copyright(c) 2015 Tiancheng \"Timothy\" Gu\n * MIT Licensed\n */\n\n'use strict';\n\n/**\n * Module variables.\n * @private\n */\n\nvar matchHtmlRegExp = /[\"'&<>]/;\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = escapeHtml;\n\n/**\n * Escape special characters in the given string of html.\n *\n * @param  {string} string The string to escape for inserting into HTML\n * @return {string}\n * @public\n */\n\nfunction escapeHtml(string) {\n  var str = '' + string;\n  var match = matchHtmlRegExp.exec(str);\n\n  if (!match) {\n    return str;\n  }\n\n  var escape;\n  var html = '';\n  var index = 0;\n  var lastIndex = 0;\n\n  for (index = match.index; index < str.length; index++) {\n    switch (str.charCodeAt(index)) {\n      case 34: // \"\n        escape = '&quot;';\n        break;\n      case 38: // &\n        escape = '&amp;';\n        break;\n      case 39: // '\n        escape = '&#39;';\n        break;\n      case 60: // <\n        escape = '&lt;';\n        break;\n      case 62: // >\n        escape = '&gt;';\n        break;\n      default:\n        continue;\n    }\n\n    if (lastIndex !== index) {\n      html += str.substring(lastIndex, index);\n    }\n\n    lastIndex = index + 1;\n    html += escape;\n  }\n\n  return lastIndex !== index\n    ? html + str.substring(lastIndex, index)\n    : html;\n}\n","/*!\n * etag\n * Copyright(c) 2014-2016 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = etag\n\n/**\n * Module dependencies.\n * @private\n */\n\nvar crypto = require('crypto')\nvar Stats = require('fs').Stats\n\n/**\n * Module variables.\n * @private\n */\n\nvar toString = Object.prototype.toString\n\n/**\n * Generate an entity tag.\n *\n * @param {Buffer|string} entity\n * @return {string}\n * @private\n */\n\nfunction entitytag (entity) {\n  if (entity.length === 0) {\n    // fast-path empty\n    return '\"0-2jmj7l5rSw0yVb/vlWAYkK/YBwk\"'\n  }\n\n  // compute hash of entity\n  var hash = crypto\n    .createHash('sha1')\n    .update(entity, 'utf8')\n    .digest('base64')\n    .substring(0, 27)\n\n  // compute length of entity\n  var len = typeof entity === 'string'\n    ? Buffer.byteLength(entity, 'utf8')\n    : entity.length\n\n  return '\"' + len.toString(16) + '-' + hash + '\"'\n}\n\n/**\n * Create a simple ETag.\n *\n * @param {string|Buffer|Stats} entity\n * @param {object} [options]\n * @param {boolean} [options.weak]\n * @return {String}\n * @public\n */\n\nfunction etag (entity, options) {\n  if (entity == null) {\n    throw new TypeError('argument entity is required')\n  }\n\n  // support fs.Stats object\n  var isStats = isstats(entity)\n  var weak = options && typeof options.weak === 'boolean'\n    ? options.weak\n    : isStats\n\n  // validate argument\n  if (!isStats && typeof entity !== 'string' && !Buffer.isBuffer(entity)) {\n    throw new TypeError('argument entity must be string, Buffer, or fs.Stats')\n  }\n\n  // generate entity tag\n  var tag = isStats\n    ? stattag(entity)\n    : entitytag(entity)\n\n  return weak\n    ? 'W/' + tag\n    : tag\n}\n\n/**\n * Determine if object is a Stats object.\n *\n * @param {object} obj\n * @return {boolean}\n * @api private\n */\n\nfunction isstats (obj) {\n  // genuine fs.Stats\n  if (typeof Stats === 'function' && obj instanceof Stats) {\n    return true\n  }\n\n  // quack quack\n  return obj && typeof obj === 'object' &&\n    'ctime' in obj && toString.call(obj.ctime) === '[object Date]' &&\n    'mtime' in obj && toString.call(obj.mtime) === '[object Date]' &&\n    'ino' in obj && typeof obj.ino === 'number' &&\n    'size' in obj && typeof obj.size === 'number'\n}\n\n/**\n * Generate a tag for a stat.\n *\n * @param {object} stat\n * @return {string}\n * @private\n */\n\nfunction stattag (stat) {\n  var mtime = stat.mtime.getTime().toString(16)\n  var size = stat.size.toString(16)\n\n  return '\"' + size + '-' + mtime + '\"'\n}\n","/*!\n * express\n * Copyright(c) 2009-2013 TJ Holowaychuk\n * Copyright(c) 2013 Roman Shtylman\n * Copyright(c) 2014-2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict';\n\nmodule.exports = require('./lib/express');\n","/*!\n * express\n * Copyright(c) 2009-2013 TJ Holowaychuk\n * Copyright(c) 2013 Roman Shtylman\n * Copyright(c) 2014-2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict';\n\n/**\n * Module dependencies.\n * @private\n */\n\nvar finalhandler = require('finalhandler');\nvar Router = require('./router');\nvar methods = require('methods');\nvar middleware = require('./middleware/init');\nvar query = require('./middleware/query');\nvar debug = require('debug')('express:application');\nvar View = require('./view');\nvar http = require('http');\nvar compileETag = require('./utils').compileETag;\nvar compileQueryParser = require('./utils').compileQueryParser;\nvar compileTrust = require('./utils').compileTrust;\nvar deprecate = require('depd')('express');\nvar flatten = require('array-flatten');\nvar merge = require('utils-merge');\nvar resolve = require('path').resolve;\nvar setPrototypeOf = require('setprototypeof')\n\n/**\n * Module variables.\n * @private\n */\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty\nvar slice = Array.prototype.slice;\n\n/**\n * Application prototype.\n */\n\nvar app = exports = module.exports = {};\n\n/**\n * Variable for trust proxy inheritance back-compat\n * @private\n */\n\nvar trustProxyDefaultSymbol = '@@symbol:trust_proxy_default';\n\n/**\n * Initialize the server.\n *\n *   - setup default configuration\n *   - setup default middleware\n *   - setup route reflection methods\n *\n * @private\n */\n\napp.init = function init() {\n  this.cache = {};\n  this.engines = {};\n  this.settings = {};\n\n  this.defaultConfiguration();\n};\n\n/**\n * Initialize application configuration.\n * @private\n */\n\napp.defaultConfiguration = function defaultConfiguration() {\n  var env = process.env.NODE_ENV || 'development';\n\n  // default settings\n  this.enable('x-powered-by');\n  this.set('etag', 'weak');\n  this.set('env', env);\n  this.set('query parser', 'extended');\n  this.set('subdomain offset', 2);\n  this.set('trust proxy', false);\n\n  // trust proxy inherit back-compat\n  Object.defineProperty(this.settings, trustProxyDefaultSymbol, {\n    configurable: true,\n    value: true\n  });\n\n  debug('booting in %s mode', env);\n\n  this.on('mount', function onmount(parent) {\n    // inherit trust proxy\n    if (this.settings[trustProxyDefaultSymbol] === true\n      && typeof parent.settings['trust proxy fn'] === 'function') {\n      delete this.settings['trust proxy'];\n      delete this.settings['trust proxy fn'];\n    }\n\n    // inherit protos\n    setPrototypeOf(this.request, parent.request)\n    setPrototypeOf(this.response, parent.response)\n    setPrototypeOf(this.engines, parent.engines)\n    setPrototypeOf(this.settings, parent.settings)\n  });\n\n  // setup locals\n  this.locals = Object.create(null);\n\n  // top-most app is mounted at /\n  this.mountpath = '/';\n\n  // default locals\n  this.locals.settings = this.settings;\n\n  // default configuration\n  this.set('view', View);\n  this.set('views', resolve('views'));\n  this.set('jsonp callback name', 'callback');\n\n  if (env === 'production') {\n    this.enable('view cache');\n  }\n\n  Object.defineProperty(this, 'router', {\n    get: function() {\n      throw new Error('\\'app.router\\' is deprecated!\\nPlease see the 3.x to 4.x migration guide for details on how to update your app.');\n    }\n  });\n};\n\n/**\n * lazily adds the base router if it has not yet been added.\n *\n * We cannot add the base router in the defaultConfiguration because\n * it reads app settings which might be set after that has run.\n *\n * @private\n */\napp.lazyrouter = function lazyrouter() {\n  if (!this._router) {\n    this._router = new Router({\n      caseSensitive: this.enabled('case sensitive routing'),\n      strict: this.enabled('strict routing')\n    });\n\n    this._router.use(query(this.get('query parser fn')));\n    this._router.use(middleware.init(this));\n  }\n};\n\n/**\n * Dispatch a req, res pair into the application. Starts pipeline processing.\n *\n * If no callback is provided, then default error handlers will respond\n * in the event of an error bubbling through the stack.\n *\n * @private\n */\n\napp.handle = function handle(req, res, callback) {\n  var router = this._router;\n\n  // final handler\n  var done = callback || finalhandler(req, res, {\n    env: this.get('env'),\n    onerror: logerror.bind(this)\n  });\n\n  // no routes\n  if (!router) {\n    debug('no routes defined on app');\n    done();\n    return;\n  }\n\n  router.handle(req, res, done);\n};\n\n/**\n * Proxy `Router#use()` to add middleware to the app router.\n * See Router#use() documentation for details.\n *\n * If the _fn_ parameter is an express app, then it will be\n * mounted at the _route_ specified.\n *\n * @public\n */\n\napp.use = function use(fn) {\n  var offset = 0;\n  var path = '/';\n\n  // default path to '/'\n  // disambiguate app.use([fn])\n  if (typeof fn !== 'function') {\n    var arg = fn;\n\n    while (Array.isArray(arg) && arg.length !== 0) {\n      arg = arg[0];\n    }\n\n    // first arg is the path\n    if (typeof arg !== 'function') {\n      offset = 1;\n      path = fn;\n    }\n  }\n\n  var fns = flatten(slice.call(arguments, offset));\n\n  if (fns.length === 0) {\n    throw new TypeError('app.use() requires a middleware function')\n  }\n\n  // setup router\n  this.lazyrouter();\n  var router = this._router;\n\n  fns.forEach(function (fn) {\n    // non-express app\n    if (!fn || !fn.handle || !fn.set) {\n      return router.use(path, fn);\n    }\n\n    debug('.use app under %s', path);\n    fn.mountpath = path;\n    fn.parent = this;\n\n    // restore .app property on req and res\n    router.use(path, function mounted_app(req, res, next) {\n      var orig = req.app;\n      fn.handle(req, res, function (err) {\n        setPrototypeOf(req, orig.request)\n        setPrototypeOf(res, orig.response)\n        next(err);\n      });\n    });\n\n    // mounted an app\n    fn.emit('mount', this);\n  }, this);\n\n  return this;\n};\n\n/**\n * Proxy to the app `Router#route()`\n * Returns a new `Route` instance for the _path_.\n *\n * Routes are isolated middleware stacks for specific paths.\n * See the Route api docs for details.\n *\n * @public\n */\n\napp.route = function route(path) {\n  this.lazyrouter();\n  return this._router.route(path);\n};\n\n/**\n * Register the given template engine callback `fn`\n * as `ext`.\n *\n * By default will `require()` the engine based on the\n * file extension. For example if you try to render\n * a \"foo.ejs\" file Express will invoke the following internally:\n *\n *     app.engine('ejs', require('ejs').__express);\n *\n * For engines that do not provide `.__express` out of the box,\n * or if you wish to \"map\" a different extension to the template engine\n * you may use this method. For example mapping the EJS template engine to\n * \".html\" files:\n *\n *     app.engine('html', require('ejs').renderFile);\n *\n * In this case EJS provides a `.renderFile()` method with\n * the same signature that Express expects: `(path, options, callback)`,\n * though note that it aliases this method as `ejs.__express` internally\n * so if you're using \".ejs\" extensions you don't need to do anything.\n *\n * Some template engines do not follow this convention, the\n * [Consolidate.js](https://github.com/tj/consolidate.js)\n * library was created to map all of node's popular template\n * engines to follow this convention, thus allowing them to\n * work seamlessly within Express.\n *\n * @param {String} ext\n * @param {Function} fn\n * @return {app} for chaining\n * @public\n */\n\napp.engine = function engine(ext, fn) {\n  if (typeof fn !== 'function') {\n    throw new Error('callback function required');\n  }\n\n  // get file extension\n  var extension = ext[0] !== '.'\n    ? '.' + ext\n    : ext;\n\n  // store engine\n  this.engines[extension] = fn;\n\n  return this;\n};\n\n/**\n * Proxy to `Router#param()` with one added api feature. The _name_ parameter\n * can be an array of names.\n *\n * See the Router#param() docs for more details.\n *\n * @param {String|Array} name\n * @param {Function} fn\n * @return {app} for chaining\n * @public\n */\n\napp.param = function param(name, fn) {\n  this.lazyrouter();\n\n  if (Array.isArray(name)) {\n    for (var i = 0; i < name.length; i++) {\n      this.param(name[i], fn);\n    }\n\n    return this;\n  }\n\n  this._router.param(name, fn);\n\n  return this;\n};\n\n/**\n * Assign `setting` to `val`, or return `setting`'s value.\n *\n *    app.set('foo', 'bar');\n *    app.set('foo');\n *    // => \"bar\"\n *\n * Mounted servers inherit their parent server's settings.\n *\n * @param {String} setting\n * @param {*} [val]\n * @return {Server} for chaining\n * @public\n */\n\napp.set = function set(setting, val) {\n  if (arguments.length === 1) {\n    // app.get(setting)\n    var settings = this.settings\n\n    while (settings && settings !== Object.prototype) {\n      if (hasOwnProperty.call(settings, setting)) {\n        return settings[setting]\n      }\n\n      settings = Object.getPrototypeOf(settings)\n    }\n\n    return undefined\n  }\n\n  debug('set \"%s\" to %o', setting, val);\n\n  // set value\n  this.settings[setting] = val;\n\n  // trigger matched settings\n  switch (setting) {\n    case 'etag':\n      this.set('etag fn', compileETag(val));\n      break;\n    case 'query parser':\n      this.set('query parser fn', compileQueryParser(val));\n      break;\n    case 'trust proxy':\n      this.set('trust proxy fn', compileTrust(val));\n\n      // trust proxy inherit back-compat\n      Object.defineProperty(this.settings, trustProxyDefaultSymbol, {\n        configurable: true,\n        value: false\n      });\n\n      break;\n  }\n\n  return this;\n};\n\n/**\n * Return the app's absolute pathname\n * based on the parent(s) that have\n * mounted it.\n *\n * For example if the application was\n * mounted as \"/admin\", which itself\n * was mounted as \"/blog\" then the\n * return value would be \"/blog/admin\".\n *\n * @return {String}\n * @private\n */\n\napp.path = function path() {\n  return this.parent\n    ? this.parent.path() + this.mountpath\n    : '';\n};\n\n/**\n * Check if `setting` is enabled (truthy).\n *\n *    app.enabled('foo')\n *    // => false\n *\n *    app.enable('foo')\n *    app.enabled('foo')\n *    // => true\n *\n * @param {String} setting\n * @return {Boolean}\n * @public\n */\n\napp.enabled = function enabled(setting) {\n  return Boolean(this.set(setting));\n};\n\n/**\n * Check if `setting` is disabled.\n *\n *    app.disabled('foo')\n *    // => true\n *\n *    app.enable('foo')\n *    app.disabled('foo')\n *    // => false\n *\n * @param {String} setting\n * @return {Boolean}\n * @public\n */\n\napp.disabled = function disabled(setting) {\n  return !this.set(setting);\n};\n\n/**\n * Enable `setting`.\n *\n * @param {String} setting\n * @return {app} for chaining\n * @public\n */\n\napp.enable = function enable(setting) {\n  return this.set(setting, true);\n};\n\n/**\n * Disable `setting`.\n *\n * @param {String} setting\n * @return {app} for chaining\n * @public\n */\n\napp.disable = function disable(setting) {\n  return this.set(setting, false);\n};\n\n/**\n * Delegate `.VERB(...)` calls to `router.VERB(...)`.\n */\n\nmethods.forEach(function(method){\n  app[method] = function(path){\n    if (method === 'get' && arguments.length === 1) {\n      // app.get(setting)\n      return this.set(path);\n    }\n\n    this.lazyrouter();\n\n    var route = this._router.route(path);\n    route[method].apply(route, slice.call(arguments, 1));\n    return this;\n  };\n});\n\n/**\n * Special-cased \"all\" method, applying the given route `path`,\n * middleware, and callback to _every_ HTTP method.\n *\n * @param {String} path\n * @param {Function} ...\n * @return {app} for chaining\n * @public\n */\n\napp.all = function all(path) {\n  this.lazyrouter();\n\n  var route = this._router.route(path);\n  var args = slice.call(arguments, 1);\n\n  for (var i = 0; i < methods.length; i++) {\n    route[methods[i]].apply(route, args);\n  }\n\n  return this;\n};\n\n// del -> delete alias\n\napp.del = deprecate.function(app.delete, 'app.del: Use app.delete instead');\n\n/**\n * Render the given view `name` name with `options`\n * and a callback accepting an error and the\n * rendered template string.\n *\n * Example:\n *\n *    app.render('email', { name: 'Tobi' }, function(err, html){\n *      // ...\n *    })\n *\n * @param {String} name\n * @param {Object|Function} options or fn\n * @param {Function} callback\n * @public\n */\n\napp.render = function render(name, options, callback) {\n  var cache = this.cache;\n  var done = callback;\n  var engines = this.engines;\n  var opts = options;\n  var renderOptions = {};\n  var view;\n\n  // support callback function as second arg\n  if (typeof options === 'function') {\n    done = options;\n    opts = {};\n  }\n\n  // merge app.locals\n  merge(renderOptions, this.locals);\n\n  // merge options._locals\n  if (opts._locals) {\n    merge(renderOptions, opts._locals);\n  }\n\n  // merge options\n  merge(renderOptions, opts);\n\n  // set .cache unless explicitly provided\n  if (renderOptions.cache == null) {\n    renderOptions.cache = this.enabled('view cache');\n  }\n\n  // primed cache\n  if (renderOptions.cache) {\n    view = cache[name];\n  }\n\n  // view\n  if (!view) {\n    var View = this.get('view');\n\n    view = new View(name, {\n      defaultEngine: this.get('view engine'),\n      root: this.get('views'),\n      engines: engines\n    });\n\n    if (!view.path) {\n      var dirs = Array.isArray(view.root) && view.root.length > 1\n        ? 'directories \"' + view.root.slice(0, -1).join('\", \"') + '\" or \"' + view.root[view.root.length - 1] + '\"'\n        : 'directory \"' + view.root + '\"'\n      var err = new Error('Failed to lookup view \"' + name + '\" in views ' + dirs);\n      err.view = view;\n      return done(err);\n    }\n\n    // prime the cache\n    if (renderOptions.cache) {\n      cache[name] = view;\n    }\n  }\n\n  // render\n  tryRender(view, renderOptions, done);\n};\n\n/**\n * Listen for connections.\n *\n * A node `http.Server` is returned, with this\n * application (which is a `Function`) as its\n * callback. If you wish to create both an HTTP\n * and HTTPS server you may do so with the \"http\"\n * and \"https\" modules as shown here:\n *\n *    var http = require('http')\n *      , https = require('https')\n *      , express = require('express')\n *      , app = express();\n *\n *    http.createServer(app).listen(80);\n *    https.createServer({ ... }, app).listen(443);\n *\n * @return {http.Server}\n * @public\n */\n\napp.listen = function listen() {\n  var server = http.createServer(this);\n  return server.listen.apply(server, arguments);\n};\n\n/**\n * Log error using console.error.\n *\n * @param {Error} err\n * @private\n */\n\nfunction logerror(err) {\n  /* istanbul ignore next */\n  if (this.get('env') !== 'test') console.error(err.stack || err.toString());\n}\n\n/**\n * Try rendering a view.\n * @private\n */\n\nfunction tryRender(view, options, callback) {\n  try {\n    view.render(options, callback);\n  } catch (err) {\n    callback(err);\n  }\n}\n","/*!\n * express\n * Copyright(c) 2009-2013 TJ Holowaychuk\n * Copyright(c) 2013 Roman Shtylman\n * Copyright(c) 2014-2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict';\n\n/**\n * Module dependencies.\n */\n\nvar bodyParser = require('body-parser')\nvar EventEmitter = require('events').EventEmitter;\nvar mixin = require('merge-descriptors');\nvar proto = require('./application');\nvar Route = require('./router/route');\nvar Router = require('./router');\nvar req = require('./request');\nvar res = require('./response');\n\n/**\n * Expose `createApplication()`.\n */\n\nexports = module.exports = createApplication;\n\n/**\n * Create an express application.\n *\n * @return {Function}\n * @api public\n */\n\nfunction createApplication() {\n  var app = function(req, res, next) {\n    app.handle(req, res, next);\n  };\n\n  mixin(app, EventEmitter.prototype, false);\n  mixin(app, proto, false);\n\n  // expose the prototype that will get set on requests\n  app.request = Object.create(req, {\n    app: { configurable: true, enumerable: true, writable: true, value: app }\n  })\n\n  // expose the prototype that will get set on responses\n  app.response = Object.create(res, {\n    app: { configurable: true, enumerable: true, writable: true, value: app }\n  })\n\n  app.init();\n  return app;\n}\n\n/**\n * Expose the prototypes.\n */\n\nexports.application = proto;\nexports.request = req;\nexports.response = res;\n\n/**\n * Expose constructors.\n */\n\nexports.Route = Route;\nexports.Router = Router;\n\n/**\n * Expose middleware\n */\n\nexports.json = bodyParser.json\nexports.query = require('./middleware/query');\nexports.raw = bodyParser.raw\nexports.static = require('serve-static');\nexports.text = bodyParser.text\nexports.urlencoded = bodyParser.urlencoded\n\n/**\n * Replace removed middleware with an appropriate error message.\n */\n\nvar removedMiddlewares = [\n  'bodyParser',\n  'compress',\n  'cookieSession',\n  'session',\n  'logger',\n  'cookieParser',\n  'favicon',\n  'responseTime',\n  'errorHandler',\n  'timeout',\n  'methodOverride',\n  'vhost',\n  'csrf',\n  'directory',\n  'limit',\n  'multipart',\n  'staticCache'\n]\n\nremovedMiddlewares.forEach(function (name) {\n  Object.defineProperty(exports, name, {\n    get: function () {\n      throw new Error('Most middleware (like ' + name + ') is no longer bundled with Express and must be installed separately. Please see https://github.com/senchalabs/connect#middleware.');\n    },\n    configurable: true\n  });\n});\n","/*!\n * express\n * Copyright(c) 2009-2013 TJ Holowaychuk\n * Copyright(c) 2013 Roman Shtylman\n * Copyright(c) 2014-2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict';\n\n/**\n * Module dependencies.\n * @private\n */\n\nvar setPrototypeOf = require('setprototypeof')\n\n/**\n * Initialization middleware, exposing the\n * request and response to each other, as well\n * as defaulting the X-Powered-By header field.\n *\n * @param {Function} app\n * @return {Function}\n * @api private\n */\n\nexports.init = function(app){\n  return function expressInit(req, res, next){\n    if (app.enabled('x-powered-by')) res.setHeader('X-Powered-By', 'Express');\n    req.res = res;\n    res.req = req;\n    req.next = next;\n\n    setPrototypeOf(req, app.request)\n    setPrototypeOf(res, app.response)\n\n    res.locals = res.locals || Object.create(null);\n\n    next();\n  };\n};\n\n","/*!\n * express\n * Copyright(c) 2009-2013 TJ Holowaychuk\n * Copyright(c) 2013 Roman Shtylman\n * Copyright(c) 2014-2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict';\n\n/**\n * Module dependencies.\n */\n\nvar merge = require('utils-merge')\nvar parseUrl = require('parseurl');\nvar qs = require('qs');\n\n/**\n * @param {Object} options\n * @return {Function}\n * @api public\n */\n\nmodule.exports = function query(options) {\n  var opts = merge({}, options)\n  var queryparse = qs.parse;\n\n  if (typeof options === 'function') {\n    queryparse = options;\n    opts = undefined;\n  }\n\n  if (opts !== undefined && opts.allowPrototypes === undefined) {\n    // back-compat for qs module\n    opts.allowPrototypes = true;\n  }\n\n  return function query(req, res, next){\n    if (!req.query) {\n      var val = parseUrl(req).query;\n      req.query = queryparse(val, opts);\n    }\n\n    next();\n  };\n};\n","/*!\n * express\n * Copyright(c) 2009-2013 TJ Holowaychuk\n * Copyright(c) 2013 Roman Shtylman\n * Copyright(c) 2014-2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict';\n\n/**\n * Module dependencies.\n * @private\n */\n\nvar accepts = require('accepts');\nvar deprecate = require('depd')('express');\nvar isIP = require('net').isIP;\nvar typeis = require('type-is');\nvar http = require('http');\nvar fresh = require('fresh');\nvar parseRange = require('range-parser');\nvar parse = require('parseurl');\nvar proxyaddr = require('proxy-addr');\n\n/**\n * Request prototype.\n * @public\n */\n\nvar req = Object.create(http.IncomingMessage.prototype)\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = req\n\n/**\n * Return request header.\n *\n * The `Referrer` header field is special-cased,\n * both `Referrer` and `Referer` are interchangeable.\n *\n * Examples:\n *\n *     req.get('Content-Type');\n *     // => \"text/plain\"\n *\n *     req.get('content-type');\n *     // => \"text/plain\"\n *\n *     req.get('Something');\n *     // => undefined\n *\n * Aliased as `req.header()`.\n *\n * @param {String} name\n * @return {String}\n * @public\n */\n\nreq.get =\nreq.header = function header(name) {\n  if (!name) {\n    throw new TypeError('name argument is required to req.get');\n  }\n\n  if (typeof name !== 'string') {\n    throw new TypeError('name must be a string to req.get');\n  }\n\n  var lc = name.toLowerCase();\n\n  switch (lc) {\n    case 'referer':\n    case 'referrer':\n      return this.headers.referrer\n        || this.headers.referer;\n    default:\n      return this.headers[lc];\n  }\n};\n\n/**\n * To do: update docs.\n *\n * Check if the given `type(s)` is acceptable, returning\n * the best match when true, otherwise `undefined`, in which\n * case you should respond with 406 \"Not Acceptable\".\n *\n * The `type` value may be a single MIME type string\n * such as \"application/json\", an extension name\n * such as \"json\", a comma-delimited list such as \"json, html, text/plain\",\n * an argument list such as `\"json\", \"html\", \"text/plain\"`,\n * or an array `[\"json\", \"html\", \"text/plain\"]`. When a list\n * or array is given, the _best_ match, if any is returned.\n *\n * Examples:\n *\n *     // Accept: text/html\n *     req.accepts('html');\n *     // => \"html\"\n *\n *     // Accept: text/*, application/json\n *     req.accepts('html');\n *     // => \"html\"\n *     req.accepts('text/html');\n *     // => \"text/html\"\n *     req.accepts('json, text');\n *     // => \"json\"\n *     req.accepts('application/json');\n *     // => \"application/json\"\n *\n *     // Accept: text/*, application/json\n *     req.accepts('image/png');\n *     req.accepts('png');\n *     // => undefined\n *\n *     // Accept: text/*;q=.5, application/json\n *     req.accepts(['html', 'json']);\n *     req.accepts('html', 'json');\n *     req.accepts('html, json');\n *     // => \"json\"\n *\n * @param {String|Array} type(s)\n * @return {String|Array|Boolean}\n * @public\n */\n\nreq.accepts = function(){\n  var accept = accepts(this);\n  return accept.types.apply(accept, arguments);\n};\n\n/**\n * Check if the given `encoding`s are accepted.\n *\n * @param {String} ...encoding\n * @return {String|Array}\n * @public\n */\n\nreq.acceptsEncodings = function(){\n  var accept = accepts(this);\n  return accept.encodings.apply(accept, arguments);\n};\n\nreq.acceptsEncoding = deprecate.function(req.acceptsEncodings,\n  'req.acceptsEncoding: Use acceptsEncodings instead');\n\n/**\n * Check if the given `charset`s are acceptable,\n * otherwise you should respond with 406 \"Not Acceptable\".\n *\n * @param {String} ...charset\n * @return {String|Array}\n * @public\n */\n\nreq.acceptsCharsets = function(){\n  var accept = accepts(this);\n  return accept.charsets.apply(accept, arguments);\n};\n\nreq.acceptsCharset = deprecate.function(req.acceptsCharsets,\n  'req.acceptsCharset: Use acceptsCharsets instead');\n\n/**\n * Check if the given `lang`s are acceptable,\n * otherwise you should respond with 406 \"Not Acceptable\".\n *\n * @param {String} ...lang\n * @return {String|Array}\n * @public\n */\n\nreq.acceptsLanguages = function(){\n  var accept = accepts(this);\n  return accept.languages.apply(accept, arguments);\n};\n\nreq.acceptsLanguage = deprecate.function(req.acceptsLanguages,\n  'req.acceptsLanguage: Use acceptsLanguages instead');\n\n/**\n * Parse Range header field, capping to the given `size`.\n *\n * Unspecified ranges such as \"0-\" require knowledge of your resource length. In\n * the case of a byte range this is of course the total number of bytes. If the\n * Range header field is not given `undefined` is returned, `-1` when unsatisfiable,\n * and `-2` when syntactically invalid.\n *\n * When ranges are returned, the array has a \"type\" property which is the type of\n * range that is required (most commonly, \"bytes\"). Each array element is an object\n * with a \"start\" and \"end\" property for the portion of the range.\n *\n * The \"combine\" option can be set to `true` and overlapping & adjacent ranges\n * will be combined into a single range.\n *\n * NOTE: remember that ranges are inclusive, so for example \"Range: users=0-3\"\n * should respond with 4 users when available, not 3.\n *\n * @param {number} size\n * @param {object} [options]\n * @param {boolean} [options.combine=false]\n * @return {number|array}\n * @public\n */\n\nreq.range = function range(size, options) {\n  var range = this.get('Range');\n  if (!range) return;\n  return parseRange(size, range, options);\n};\n\n/**\n * Return the value of param `name` when present or `defaultValue`.\n *\n *  - Checks route placeholders, ex: _/user/:id_\n *  - Checks body params, ex: id=12, {\"id\":12}\n *  - Checks query string params, ex: ?id=12\n *\n * To utilize request bodies, `req.body`\n * should be an object. This can be done by using\n * the `bodyParser()` middleware.\n *\n * @param {String} name\n * @param {Mixed} [defaultValue]\n * @return {String}\n * @public\n */\n\nreq.param = function param(name, defaultValue) {\n  var params = this.params || {};\n  var body = this.body || {};\n  var query = this.query || {};\n\n  var args = arguments.length === 1\n    ? 'name'\n    : 'name, default';\n  deprecate('req.param(' + args + '): Use req.params, req.body, or req.query instead');\n\n  if (null != params[name] && params.hasOwnProperty(name)) return params[name];\n  if (null != body[name]) return body[name];\n  if (null != query[name]) return query[name];\n\n  return defaultValue;\n};\n\n/**\n * Check if the incoming request contains the \"Content-Type\"\n * header field, and it contains the given mime `type`.\n *\n * Examples:\n *\n *      // With Content-Type: text/html; charset=utf-8\n *      req.is('html');\n *      req.is('text/html');\n *      req.is('text/*');\n *      // => true\n *\n *      // When Content-Type is application/json\n *      req.is('json');\n *      req.is('application/json');\n *      req.is('application/*');\n *      // => true\n *\n *      req.is('html');\n *      // => false\n *\n * @param {String|Array} types...\n * @return {String|false|null}\n * @public\n */\n\nreq.is = function is(types) {\n  var arr = types;\n\n  // support flattened arguments\n  if (!Array.isArray(types)) {\n    arr = new Array(arguments.length);\n    for (var i = 0; i < arr.length; i++) {\n      arr[i] = arguments[i];\n    }\n  }\n\n  return typeis(this, arr);\n};\n\n/**\n * Return the protocol string \"http\" or \"https\"\n * when requested with TLS. When the \"trust proxy\"\n * setting trusts the socket address, the\n * \"X-Forwarded-Proto\" header field will be trusted\n * and used if present.\n *\n * If you're running behind a reverse proxy that\n * supplies https for you this may be enabled.\n *\n * @return {String}\n * @public\n */\n\ndefineGetter(req, 'protocol', function protocol(){\n  var proto = this.connection.encrypted\n    ? 'https'\n    : 'http';\n  var trust = this.app.get('trust proxy fn');\n\n  if (!trust(this.connection.remoteAddress, 0)) {\n    return proto;\n  }\n\n  // Note: X-Forwarded-Proto is normally only ever a\n  //       single value, but this is to be safe.\n  var header = this.get('X-Forwarded-Proto') || proto\n  var index = header.indexOf(',')\n\n  return index !== -1\n    ? header.substring(0, index).trim()\n    : header.trim()\n});\n\n/**\n * Short-hand for:\n *\n *    req.protocol === 'https'\n *\n * @return {Boolean}\n * @public\n */\n\ndefineGetter(req, 'secure', function secure(){\n  return this.protocol === 'https';\n});\n\n/**\n * Return the remote address from the trusted proxy.\n *\n * The is the remote address on the socket unless\n * \"trust proxy\" is set.\n *\n * @return {String}\n * @public\n */\n\ndefineGetter(req, 'ip', function ip(){\n  var trust = this.app.get('trust proxy fn');\n  return proxyaddr(this, trust);\n});\n\n/**\n * When \"trust proxy\" is set, trusted proxy addresses + client.\n *\n * For example if the value were \"client, proxy1, proxy2\"\n * you would receive the array `[\"client\", \"proxy1\", \"proxy2\"]`\n * where \"proxy2\" is the furthest down-stream and \"proxy1\" and\n * \"proxy2\" were trusted.\n *\n * @return {Array}\n * @public\n */\n\ndefineGetter(req, 'ips', function ips() {\n  var trust = this.app.get('trust proxy fn');\n  var addrs = proxyaddr.all(this, trust);\n\n  // reverse the order (to farthest -> closest)\n  // and remove socket address\n  addrs.reverse().pop()\n\n  return addrs\n});\n\n/**\n * Return subdomains as an array.\n *\n * Subdomains are the dot-separated parts of the host before the main domain of\n * the app. By default, the domain of the app is assumed to be the last two\n * parts of the host. This can be changed by setting \"subdomain offset\".\n *\n * For example, if the domain is \"tobi.ferrets.example.com\":\n * If \"subdomain offset\" is not set, req.subdomains is `[\"ferrets\", \"tobi\"]`.\n * If \"subdomain offset\" is 3, req.subdomains is `[\"tobi\"]`.\n *\n * @return {Array}\n * @public\n */\n\ndefineGetter(req, 'subdomains', function subdomains() {\n  var hostname = this.hostname;\n\n  if (!hostname) return [];\n\n  var offset = this.app.get('subdomain offset');\n  var subdomains = !isIP(hostname)\n    ? hostname.split('.').reverse()\n    : [hostname];\n\n  return subdomains.slice(offset);\n});\n\n/**\n * Short-hand for `url.parse(req.url).pathname`.\n *\n * @return {String}\n * @public\n */\n\ndefineGetter(req, 'path', function path() {\n  return parse(this).pathname;\n});\n\n/**\n * Parse the \"Host\" header field to a hostname.\n *\n * When the \"trust proxy\" setting trusts the socket\n * address, the \"X-Forwarded-Host\" header field will\n * be trusted.\n *\n * @return {String}\n * @public\n */\n\ndefineGetter(req, 'hostname', function hostname(){\n  var trust = this.app.get('trust proxy fn');\n  var host = this.get('X-Forwarded-Host');\n\n  if (!host || !trust(this.connection.remoteAddress, 0)) {\n    host = this.get('Host');\n  } else if (host.indexOf(',') !== -1) {\n    // Note: X-Forwarded-Host is normally only ever a\n    //       single value, but this is to be safe.\n    host = host.substring(0, host.indexOf(',')).trimRight()\n  }\n\n  if (!host) return;\n\n  // IPv6 literal support\n  var offset = host[0] === '['\n    ? host.indexOf(']') + 1\n    : 0;\n  var index = host.indexOf(':', offset);\n\n  return index !== -1\n    ? host.substring(0, index)\n    : host;\n});\n\n// TODO: change req.host to return host in next major\n\ndefineGetter(req, 'host', deprecate.function(function host(){\n  return this.hostname;\n}, 'req.host: Use req.hostname instead'));\n\n/**\n * Check if the request is fresh, aka\n * Last-Modified and/or the ETag\n * still match.\n *\n * @return {Boolean}\n * @public\n */\n\ndefineGetter(req, 'fresh', function(){\n  var method = this.method;\n  var res = this.res\n  var status = res.statusCode\n\n  // GET or HEAD for weak freshness validation only\n  if ('GET' !== method && 'HEAD' !== method) return false;\n\n  // 2xx or 304 as per rfc2616 14.26\n  if ((status >= 200 && status < 300) || 304 === status) {\n    return fresh(this.headers, {\n      'etag': res.get('ETag'),\n      'last-modified': res.get('Last-Modified')\n    })\n  }\n\n  return false;\n});\n\n/**\n * Check if the request is stale, aka\n * \"Last-Modified\" and / or the \"ETag\" for the\n * resource has changed.\n *\n * @return {Boolean}\n * @public\n */\n\ndefineGetter(req, 'stale', function stale(){\n  return !this.fresh;\n});\n\n/**\n * Check if the request was an _XMLHttpRequest_.\n *\n * @return {Boolean}\n * @public\n */\n\ndefineGetter(req, 'xhr', function xhr(){\n  var val = this.get('X-Requested-With') || '';\n  return val.toLowerCase() === 'xmlhttprequest';\n});\n\n/**\n * Helper function for creating a getter on an object.\n *\n * @param {Object} obj\n * @param {String} name\n * @param {Function} getter\n * @private\n */\nfunction defineGetter(obj, name, getter) {\n  Object.defineProperty(obj, name, {\n    configurable: true,\n    enumerable: true,\n    get: getter\n  });\n}\n","/*!\n * express\n * Copyright(c) 2009-2013 TJ Holowaychuk\n * Copyright(c) 2014-2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict';\n\n/**\n * Module dependencies.\n * @private\n */\n\nvar Buffer = require('safe-buffer').Buffer\nvar contentDisposition = require('content-disposition');\nvar createError = require('http-errors')\nvar deprecate = require('depd')('express');\nvar encodeUrl = require('encodeurl');\nvar escapeHtml = require('escape-html');\nvar http = require('http');\nvar isAbsolute = require('./utils').isAbsolute;\nvar onFinished = require('on-finished');\nvar path = require('path');\nvar statuses = require('statuses')\nvar merge = require('utils-merge');\nvar sign = require('cookie-signature').sign;\nvar normalizeType = require('./utils').normalizeType;\nvar normalizeTypes = require('./utils').normalizeTypes;\nvar setCharset = require('./utils').setCharset;\nvar cookie = require('cookie');\nvar send = require('send');\nvar extname = path.extname;\nvar mime = send.mime;\nvar resolve = path.resolve;\nvar vary = require('vary');\n\n/**\n * Response prototype.\n * @public\n */\n\nvar res = Object.create(http.ServerResponse.prototype)\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = res\n\n/**\n * Module variables.\n * @private\n */\n\nvar charsetRegExp = /;\\s*charset\\s*=/;\n\n/**\n * Set status `code`.\n *\n * @param {Number} code\n * @return {ServerResponse}\n * @public\n */\n\nres.status = function status(code) {\n  if ((typeof code === 'string' || Math.floor(code) !== code) && code > 99 && code < 1000) {\n    deprecate('res.status(' + JSON.stringify(code) + '): use res.status(' + Math.floor(code) + ') instead')\n  }\n  this.statusCode = code;\n  return this;\n};\n\n/**\n * Set Link header field with the given `links`.\n *\n * Examples:\n *\n *    res.links({\n *      next: 'http://api.example.com/users?page=2',\n *      last: 'http://api.example.com/users?page=5'\n *    });\n *\n * @param {Object} links\n * @return {ServerResponse}\n * @public\n */\n\nres.links = function(links){\n  var link = this.get('Link') || '';\n  if (link) link += ', ';\n  return this.set('Link', link + Object.keys(links).map(function(rel){\n    return '<' + links[rel] + '>; rel=\"' + rel + '\"';\n  }).join(', '));\n};\n\n/**\n * Send a response.\n *\n * Examples:\n *\n *     res.send(Buffer.from('wahoo'));\n *     res.send({ some: 'json' });\n *     res.send('<p>some html</p>');\n *\n * @param {string|number|boolean|object|Buffer} body\n * @public\n */\n\nres.send = function send(body) {\n  var chunk = body;\n  var encoding;\n  var req = this.req;\n  var type;\n\n  // settings\n  var app = this.app;\n\n  // allow status / body\n  if (arguments.length === 2) {\n    // res.send(body, status) backwards compat\n    if (typeof arguments[0] !== 'number' && typeof arguments[1] === 'number') {\n      deprecate('res.send(body, status): Use res.status(status).send(body) instead');\n      this.statusCode = arguments[1];\n    } else {\n      deprecate('res.send(status, body): Use res.status(status).send(body) instead');\n      this.statusCode = arguments[0];\n      chunk = arguments[1];\n    }\n  }\n\n  // disambiguate res.send(status) and res.send(status, num)\n  if (typeof chunk === 'number' && arguments.length === 1) {\n    // res.send(status) will set status message as text string\n    if (!this.get('Content-Type')) {\n      this.type('txt');\n    }\n\n    deprecate('res.send(status): Use res.sendStatus(status) instead');\n    this.statusCode = chunk;\n    chunk = statuses.message[chunk]\n  }\n\n  switch (typeof chunk) {\n    // string defaulting to html\n    case 'string':\n      if (!this.get('Content-Type')) {\n        this.type('html');\n      }\n      break;\n    case 'boolean':\n    case 'number':\n    case 'object':\n      if (chunk === null) {\n        chunk = '';\n      } else if (Buffer.isBuffer(chunk)) {\n        if (!this.get('Content-Type')) {\n          this.type('bin');\n        }\n      } else {\n        return this.json(chunk);\n      }\n      break;\n  }\n\n  // write strings in utf-8\n  if (typeof chunk === 'string') {\n    encoding = 'utf8';\n    type = this.get('Content-Type');\n\n    // reflect this in content-type\n    if (typeof type === 'string') {\n      this.set('Content-Type', setCharset(type, 'utf-8'));\n    }\n  }\n\n  // determine if ETag should be generated\n  var etagFn = app.get('etag fn')\n  var generateETag = !this.get('ETag') && typeof etagFn === 'function'\n\n  // populate Content-Length\n  var len\n  if (chunk !== undefined) {\n    if (Buffer.isBuffer(chunk)) {\n      // get length of Buffer\n      len = chunk.length\n    } else if (!generateETag && chunk.length < 1000) {\n      // just calculate length when no ETag + small chunk\n      len = Buffer.byteLength(chunk, encoding)\n    } else {\n      // convert chunk to Buffer and calculate\n      chunk = Buffer.from(chunk, encoding)\n      encoding = undefined;\n      len = chunk.length\n    }\n\n    this.set('Content-Length', len);\n  }\n\n  // populate ETag\n  var etag;\n  if (generateETag && len !== undefined) {\n    if ((etag = etagFn(chunk, encoding))) {\n      this.set('ETag', etag);\n    }\n  }\n\n  // freshness\n  if (req.fresh) this.statusCode = 304;\n\n  // strip irrelevant headers\n  if (204 === this.statusCode || 304 === this.statusCode) {\n    this.removeHeader('Content-Type');\n    this.removeHeader('Content-Length');\n    this.removeHeader('Transfer-Encoding');\n    chunk = '';\n  }\n\n  // alter headers for 205\n  if (this.statusCode === 205) {\n    this.set('Content-Length', '0')\n    this.removeHeader('Transfer-Encoding')\n    chunk = ''\n  }\n\n  if (req.method === 'HEAD') {\n    // skip body for HEAD\n    this.end();\n  } else {\n    // respond\n    this.end(chunk, encoding);\n  }\n\n  return this;\n};\n\n/**\n * Send JSON response.\n *\n * Examples:\n *\n *     res.json(null);\n *     res.json({ user: 'tj' });\n *\n * @param {string|number|boolean|object} obj\n * @public\n */\n\nres.json = function json(obj) {\n  var val = obj;\n\n  // allow status / body\n  if (arguments.length === 2) {\n    // res.json(body, status) backwards compat\n    if (typeof arguments[1] === 'number') {\n      deprecate('res.json(obj, status): Use res.status(status).json(obj) instead');\n      this.statusCode = arguments[1];\n    } else {\n      deprecate('res.json(status, obj): Use res.status(status).json(obj) instead');\n      this.statusCode = arguments[0];\n      val = arguments[1];\n    }\n  }\n\n  // settings\n  var app = this.app;\n  var escape = app.get('json escape')\n  var replacer = app.get('json replacer');\n  var spaces = app.get('json spaces');\n  var body = stringify(val, replacer, spaces, escape)\n\n  // content-type\n  if (!this.get('Content-Type')) {\n    this.set('Content-Type', 'application/json');\n  }\n\n  return this.send(body);\n};\n\n/**\n * Send JSON response with JSONP callback support.\n *\n * Examples:\n *\n *     res.jsonp(null);\n *     res.jsonp({ user: 'tj' });\n *\n * @param {string|number|boolean|object} obj\n * @public\n */\n\nres.jsonp = function jsonp(obj) {\n  var val = obj;\n\n  // allow status / body\n  if (arguments.length === 2) {\n    // res.jsonp(body, status) backwards compat\n    if (typeof arguments[1] === 'number') {\n      deprecate('res.jsonp(obj, status): Use res.status(status).jsonp(obj) instead');\n      this.statusCode = arguments[1];\n    } else {\n      deprecate('res.jsonp(status, obj): Use res.status(status).jsonp(obj) instead');\n      this.statusCode = arguments[0];\n      val = arguments[1];\n    }\n  }\n\n  // settings\n  var app = this.app;\n  var escape = app.get('json escape')\n  var replacer = app.get('json replacer');\n  var spaces = app.get('json spaces');\n  var body = stringify(val, replacer, spaces, escape)\n  var callback = this.req.query[app.get('jsonp callback name')];\n\n  // content-type\n  if (!this.get('Content-Type')) {\n    this.set('X-Content-Type-Options', 'nosniff');\n    this.set('Content-Type', 'application/json');\n  }\n\n  // fixup callback\n  if (Array.isArray(callback)) {\n    callback = callback[0];\n  }\n\n  // jsonp\n  if (typeof callback === 'string' && callback.length !== 0) {\n    this.set('X-Content-Type-Options', 'nosniff');\n    this.set('Content-Type', 'text/javascript');\n\n    // restrict callback charset\n    callback = callback.replace(/[^\\[\\]\\w$.]/g, '');\n\n    if (body === undefined) {\n      // empty argument\n      body = ''\n    } else if (typeof body === 'string') {\n      // replace chars not allowed in JavaScript that are in JSON\n      body = body\n        .replace(/\\u2028/g, '\\\\u2028')\n        .replace(/\\u2029/g, '\\\\u2029')\n    }\n\n    // the /**/ is a specific security mitigation for \"Rosetta Flash JSONP abuse\"\n    // the typeof check is just to reduce client error noise\n    body = '/**/ typeof ' + callback + ' === \\'function\\' && ' + callback + '(' + body + ');';\n  }\n\n  return this.send(body);\n};\n\n/**\n * Send given HTTP status code.\n *\n * Sets the response status to `statusCode` and the body of the\n * response to the standard description from node's http.STATUS_CODES\n * or the statusCode number if no description.\n *\n * Examples:\n *\n *     res.sendStatus(200);\n *\n * @param {number} statusCode\n * @public\n */\n\nres.sendStatus = function sendStatus(statusCode) {\n  var body = statuses.message[statusCode] || String(statusCode)\n\n  this.statusCode = statusCode;\n  this.type('txt');\n\n  return this.send(body);\n};\n\n/**\n * Transfer the file at the given `path`.\n *\n * Automatically sets the _Content-Type_ response header field.\n * The callback `callback(err)` is invoked when the transfer is complete\n * or when an error occurs. Be sure to check `res.headersSent`\n * if you wish to attempt responding, as the header and some data\n * may have already been transferred.\n *\n * Options:\n *\n *   - `maxAge`   defaulting to 0 (can be string converted by `ms`)\n *   - `root`     root directory for relative filenames\n *   - `headers`  object of headers to serve with file\n *   - `dotfiles` serve dotfiles, defaulting to false; can be `\"allow\"` to send them\n *\n * Other options are passed along to `send`.\n *\n * Examples:\n *\n *  The following example illustrates how `res.sendFile()` may\n *  be used as an alternative for the `static()` middleware for\n *  dynamic situations. The code backing `res.sendFile()` is actually\n *  the same code, so HTTP cache support etc is identical.\n *\n *     app.get('/user/:uid/photos/:file', function(req, res){\n *       var uid = req.params.uid\n *         , file = req.params.file;\n *\n *       req.user.mayViewFilesFrom(uid, function(yes){\n *         if (yes) {\n *           res.sendFile('/uploads/' + uid + '/' + file);\n *         } else {\n *           res.send(403, 'Sorry! you cant see that.');\n *         }\n *       });\n *     });\n *\n * @public\n */\n\nres.sendFile = function sendFile(path, options, callback) {\n  var done = callback;\n  var req = this.req;\n  var res = this;\n  var next = req.next;\n  var opts = options || {};\n\n  if (!path) {\n    throw new TypeError('path argument is required to res.sendFile');\n  }\n\n  if (typeof path !== 'string') {\n    throw new TypeError('path must be a string to res.sendFile')\n  }\n\n  // support function as second arg\n  if (typeof options === 'function') {\n    done = options;\n    opts = {};\n  }\n\n  if (!opts.root && !isAbsolute(path)) {\n    throw new TypeError('path must be absolute or specify root to res.sendFile');\n  }\n\n  // create file stream\n  var pathname = encodeURI(path);\n  var file = send(req, pathname, opts);\n\n  // transfer\n  sendfile(res, file, opts, function (err) {\n    if (done) return done(err);\n    if (err && err.code === 'EISDIR') return next();\n\n    // next() all but write errors\n    if (err && err.code !== 'ECONNABORTED' && err.syscall !== 'write') {\n      next(err);\n    }\n  });\n};\n\n/**\n * Transfer the file at the given `path`.\n *\n * Automatically sets the _Content-Type_ response header field.\n * The callback `callback(err)` is invoked when the transfer is complete\n * or when an error occurs. Be sure to check `res.headersSent`\n * if you wish to attempt responding, as the header and some data\n * may have already been transferred.\n *\n * Options:\n *\n *   - `maxAge`   defaulting to 0 (can be string converted by `ms`)\n *   - `root`     root directory for relative filenames\n *   - `headers`  object of headers to serve with file\n *   - `dotfiles` serve dotfiles, defaulting to false; can be `\"allow\"` to send them\n *\n * Other options are passed along to `send`.\n *\n * Examples:\n *\n *  The following example illustrates how `res.sendfile()` may\n *  be used as an alternative for the `static()` middleware for\n *  dynamic situations. The code backing `res.sendfile()` is actually\n *  the same code, so HTTP cache support etc is identical.\n *\n *     app.get('/user/:uid/photos/:file', function(req, res){\n *       var uid = req.params.uid\n *         , file = req.params.file;\n *\n *       req.user.mayViewFilesFrom(uid, function(yes){\n *         if (yes) {\n *           res.sendfile('/uploads/' + uid + '/' + file);\n *         } else {\n *           res.send(403, 'Sorry! you cant see that.');\n *         }\n *       });\n *     });\n *\n * @public\n */\n\nres.sendfile = function (path, options, callback) {\n  var done = callback;\n  var req = this.req;\n  var res = this;\n  var next = req.next;\n  var opts = options || {};\n\n  // support function as second arg\n  if (typeof options === 'function') {\n    done = options;\n    opts = {};\n  }\n\n  // create file stream\n  var file = send(req, path, opts);\n\n  // transfer\n  sendfile(res, file, opts, function (err) {\n    if (done) return done(err);\n    if (err && err.code === 'EISDIR') return next();\n\n    // next() all but write errors\n    if (err && err.code !== 'ECONNABORTED' && err.syscall !== 'write') {\n      next(err);\n    }\n  });\n};\n\nres.sendfile = deprecate.function(res.sendfile,\n  'res.sendfile: Use res.sendFile instead');\n\n/**\n * Transfer the file at the given `path` as an attachment.\n *\n * Optionally providing an alternate attachment `filename`,\n * and optional callback `callback(err)`. The callback is invoked\n * when the data transfer is complete, or when an error has\n * occurred. Be sure to check `res.headersSent` if you plan to respond.\n *\n * Optionally providing an `options` object to use with `res.sendFile()`.\n * This function will set the `Content-Disposition` header, overriding\n * any `Content-Disposition` header passed as header options in order\n * to set the attachment and filename.\n *\n * This method uses `res.sendFile()`.\n *\n * @public\n */\n\nres.download = function download (path, filename, options, callback) {\n  var done = callback;\n  var name = filename;\n  var opts = options || null\n\n  // support function as second or third arg\n  if (typeof filename === 'function') {\n    done = filename;\n    name = null;\n    opts = null\n  } else if (typeof options === 'function') {\n    done = options\n    opts = null\n  }\n\n  // support optional filename, where options may be in it's place\n  if (typeof filename === 'object' &&\n    (typeof options === 'function' || options === undefined)) {\n    name = null\n    opts = filename\n  }\n\n  // set Content-Disposition when file is sent\n  var headers = {\n    'Content-Disposition': contentDisposition(name || path)\n  };\n\n  // merge user-provided headers\n  if (opts && opts.headers) {\n    var keys = Object.keys(opts.headers)\n    for (var i = 0; i < keys.length; i++) {\n      var key = keys[i]\n      if (key.toLowerCase() !== 'content-disposition') {\n        headers[key] = opts.headers[key]\n      }\n    }\n  }\n\n  // merge user-provided options\n  opts = Object.create(opts)\n  opts.headers = headers\n\n  // Resolve the full path for sendFile\n  var fullPath = !opts.root\n    ? resolve(path)\n    : path\n\n  // send file\n  return this.sendFile(fullPath, opts, done)\n};\n\n/**\n * Set _Content-Type_ response header with `type` through `mime.lookup()`\n * when it does not contain \"/\", or set the Content-Type to `type` otherwise.\n *\n * Examples:\n *\n *     res.type('.html');\n *     res.type('html');\n *     res.type('json');\n *     res.type('application/json');\n *     res.type('png');\n *\n * @param {String} type\n * @return {ServerResponse} for chaining\n * @public\n */\n\nres.contentType =\nres.type = function contentType(type) {\n  var ct = type.indexOf('/') === -1\n    ? mime.lookup(type)\n    : type;\n\n  return this.set('Content-Type', ct);\n};\n\n/**\n * Respond to the Acceptable formats using an `obj`\n * of mime-type callbacks.\n *\n * This method uses `req.accepted`, an array of\n * acceptable types ordered by their quality values.\n * When \"Accept\" is not present the _first_ callback\n * is invoked, otherwise the first match is used. When\n * no match is performed the server responds with\n * 406 \"Not Acceptable\".\n *\n * Content-Type is set for you, however if you choose\n * you may alter this within the callback using `res.type()`\n * or `res.set('Content-Type', ...)`.\n *\n *    res.format({\n *      'text/plain': function(){\n *        res.send('hey');\n *      },\n *\n *      'text/html': function(){\n *        res.send('<p>hey</p>');\n *      },\n *\n *      'application/json': function () {\n *        res.send({ message: 'hey' });\n *      }\n *    });\n *\n * In addition to canonicalized MIME types you may\n * also use extnames mapped to these types:\n *\n *    res.format({\n *      text: function(){\n *        res.send('hey');\n *      },\n *\n *      html: function(){\n *        res.send('<p>hey</p>');\n *      },\n *\n *      json: function(){\n *        res.send({ message: 'hey' });\n *      }\n *    });\n *\n * By default Express passes an `Error`\n * with a `.status` of 406 to `next(err)`\n * if a match is not made. If you provide\n * a `.default` callback it will be invoked\n * instead.\n *\n * @param {Object} obj\n * @return {ServerResponse} for chaining\n * @public\n */\n\nres.format = function(obj){\n  var req = this.req;\n  var next = req.next;\n\n  var keys = Object.keys(obj)\n    .filter(function (v) { return v !== 'default' })\n\n  var key = keys.length > 0\n    ? req.accepts(keys)\n    : false;\n\n  this.vary(\"Accept\");\n\n  if (key) {\n    this.set('Content-Type', normalizeType(key).value);\n    obj[key](req, this, next);\n  } else if (obj.default) {\n    obj.default(req, this, next)\n  } else {\n    next(createError(406, {\n      types: normalizeTypes(keys).map(function (o) { return o.value })\n    }))\n  }\n\n  return this;\n};\n\n/**\n * Set _Content-Disposition_ header to _attachment_ with optional `filename`.\n *\n * @param {String} filename\n * @return {ServerResponse}\n * @public\n */\n\nres.attachment = function attachment(filename) {\n  if (filename) {\n    this.type(extname(filename));\n  }\n\n  this.set('Content-Disposition', contentDisposition(filename));\n\n  return this;\n};\n\n/**\n * Append additional header `field` with value `val`.\n *\n * Example:\n *\n *    res.append('Link', ['<http://localhost/>', '<http://localhost:3000/>']);\n *    res.append('Set-Cookie', 'foo=bar; Path=/; HttpOnly');\n *    res.append('Warning', '199 Miscellaneous warning');\n *\n * @param {String} field\n * @param {String|Array} val\n * @return {ServerResponse} for chaining\n * @public\n */\n\nres.append = function append(field, val) {\n  var prev = this.get(field);\n  var value = val;\n\n  if (prev) {\n    // concat the new and prev vals\n    value = Array.isArray(prev) ? prev.concat(val)\n      : Array.isArray(val) ? [prev].concat(val)\n        : [prev, val]\n  }\n\n  return this.set(field, value);\n};\n\n/**\n * Set header `field` to `val`, or pass\n * an object of header fields.\n *\n * Examples:\n *\n *    res.set('Foo', ['bar', 'baz']);\n *    res.set('Accept', 'application/json');\n *    res.set({ Accept: 'text/plain', 'X-API-Key': 'tobi' });\n *\n * Aliased as `res.header()`.\n *\n * @param {String|Object} field\n * @param {String|Array} val\n * @return {ServerResponse} for chaining\n * @public\n */\n\nres.set =\nres.header = function header(field, val) {\n  if (arguments.length === 2) {\n    var value = Array.isArray(val)\n      ? val.map(String)\n      : String(val);\n\n    // add charset to content-type\n    if (field.toLowerCase() === 'content-type') {\n      if (Array.isArray(value)) {\n        throw new TypeError('Content-Type cannot be set to an Array');\n      }\n      if (!charsetRegExp.test(value)) {\n        var charset = mime.charsets.lookup(value.split(';')[0]);\n        if (charset) value += '; charset=' + charset.toLowerCase();\n      }\n    }\n\n    this.setHeader(field, value);\n  } else {\n    for (var key in field) {\n      this.set(key, field[key]);\n    }\n  }\n  return this;\n};\n\n/**\n * Get value for header `field`.\n *\n * @param {String} field\n * @return {String}\n * @public\n */\n\nres.get = function(field){\n  return this.getHeader(field);\n};\n\n/**\n * Clear cookie `name`.\n *\n * @param {String} name\n * @param {Object} [options]\n * @return {ServerResponse} for chaining\n * @public\n */\n\nres.clearCookie = function clearCookie(name, options) {\n  var opts = merge({ expires: new Date(1), path: '/' }, options);\n\n  return this.cookie(name, '', opts);\n};\n\n/**\n * Set cookie `name` to `value`, with the given `options`.\n *\n * Options:\n *\n *    - `maxAge`   max-age in milliseconds, converted to `expires`\n *    - `signed`   sign the cookie\n *    - `path`     defaults to \"/\"\n *\n * Examples:\n *\n *    // \"Remember Me\" for 15 minutes\n *    res.cookie('rememberme', '1', { expires: new Date(Date.now() + 900000), httpOnly: true });\n *\n *    // same as above\n *    res.cookie('rememberme', '1', { maxAge: 900000, httpOnly: true })\n *\n * @param {String} name\n * @param {String|Object} value\n * @param {Object} [options]\n * @return {ServerResponse} for chaining\n * @public\n */\n\nres.cookie = function (name, value, options) {\n  var opts = merge({}, options);\n  var secret = this.req.secret;\n  var signed = opts.signed;\n\n  if (signed && !secret) {\n    throw new Error('cookieParser(\"secret\") required for signed cookies');\n  }\n\n  var val = typeof value === 'object'\n    ? 'j:' + JSON.stringify(value)\n    : String(value);\n\n  if (signed) {\n    val = 's:' + sign(val, secret);\n  }\n\n  if (opts.maxAge != null) {\n    var maxAge = opts.maxAge - 0\n\n    if (!isNaN(maxAge)) {\n      opts.expires = new Date(Date.now() + maxAge)\n      opts.maxAge = Math.floor(maxAge / 1000)\n    }\n  }\n\n  if (opts.path == null) {\n    opts.path = '/';\n  }\n\n  this.append('Set-Cookie', cookie.serialize(name, String(val), opts));\n\n  return this;\n};\n\n/**\n * Set the location header to `url`.\n *\n * The given `url` can also be \"back\", which redirects\n * to the _Referrer_ or _Referer_ headers or \"/\".\n *\n * Examples:\n *\n *    res.location('/foo/bar').;\n *    res.location('http://example.com');\n *    res.location('../login');\n *\n * @param {String} url\n * @return {ServerResponse} for chaining\n * @public\n */\n\nres.location = function location(url) {\n  var loc = url;\n\n  // \"back\" is an alias for the referrer\n  if (url === 'back') {\n    loc = this.req.get('Referrer') || '/';\n  }\n\n  // set location\n  return this.set('Location', encodeUrl(loc));\n};\n\n/**\n * Redirect to the given `url` with optional response `status`\n * defaulting to 302.\n *\n * The resulting `url` is determined by `res.location()`, so\n * it will play nicely with mounted apps, relative paths,\n * `\"back\"` etc.\n *\n * Examples:\n *\n *    res.redirect('/foo/bar');\n *    res.redirect('http://example.com');\n *    res.redirect(301, 'http://example.com');\n *    res.redirect('../login'); // /blog/post/1 -> /blog/login\n *\n * @public\n */\n\nres.redirect = function redirect(url) {\n  var address = url;\n  var body;\n  var status = 302;\n\n  // allow status / url\n  if (arguments.length === 2) {\n    if (typeof arguments[0] === 'number') {\n      status = arguments[0];\n      address = arguments[1];\n    } else {\n      deprecate('res.redirect(url, status): Use res.redirect(status, url) instead');\n      status = arguments[1];\n    }\n  }\n\n  // Set location header\n  address = this.location(address).get('Location');\n\n  // Support text/{plain,html} by default\n  this.format({\n    text: function(){\n      body = statuses.message[status] + '. Redirecting to ' + address\n    },\n\n    html: function(){\n      var u = escapeHtml(address);\n      body = '<p>' + statuses.message[status] + '. Redirecting to <a href=\"' + u + '\">' + u + '</a></p>'\n    },\n\n    default: function(){\n      body = '';\n    }\n  });\n\n  // Respond\n  this.statusCode = status;\n  this.set('Content-Length', Buffer.byteLength(body));\n\n  if (this.req.method === 'HEAD') {\n    this.end();\n  } else {\n    this.end(body);\n  }\n};\n\n/**\n * Add `field` to Vary. If already present in the Vary set, then\n * this call is simply ignored.\n *\n * @param {Array|String} field\n * @return {ServerResponse} for chaining\n * @public\n */\n\nres.vary = function(field){\n  // checks for back-compat\n  if (!field || (Array.isArray(field) && !field.length)) {\n    deprecate('res.vary(): Provide a field name');\n    return this;\n  }\n\n  vary(this, field);\n\n  return this;\n};\n\n/**\n * Render `view` with the given `options` and optional callback `fn`.\n * When a callback function is given a response will _not_ be made\n * automatically, otherwise a response of _200_ and _text/html_ is given.\n *\n * Options:\n *\n *  - `cache`     boolean hinting to the engine it should cache\n *  - `filename`  filename of the view being rendered\n *\n * @public\n */\n\nres.render = function render(view, options, callback) {\n  var app = this.req.app;\n  var done = callback;\n  var opts = options || {};\n  var req = this.req;\n  var self = this;\n\n  // support callback function as second arg\n  if (typeof options === 'function') {\n    done = options;\n    opts = {};\n  }\n\n  // merge res.locals\n  opts._locals = self.locals;\n\n  // default callback to respond\n  done = done || function (err, str) {\n    if (err) return req.next(err);\n    self.send(str);\n  };\n\n  // render\n  app.render(view, opts, done);\n};\n\n// pipe the send file stream\nfunction sendfile(res, file, options, callback) {\n  var done = false;\n  var streaming;\n\n  // request aborted\n  function onaborted() {\n    if (done) return;\n    done = true;\n\n    var err = new Error('Request aborted');\n    err.code = 'ECONNABORTED';\n    callback(err);\n  }\n\n  // directory\n  function ondirectory() {\n    if (done) return;\n    done = true;\n\n    var err = new Error('EISDIR, read');\n    err.code = 'EISDIR';\n    callback(err);\n  }\n\n  // errors\n  function onerror(err) {\n    if (done) return;\n    done = true;\n    callback(err);\n  }\n\n  // ended\n  function onend() {\n    if (done) return;\n    done = true;\n    callback();\n  }\n\n  // file\n  function onfile() {\n    streaming = false;\n  }\n\n  // finished\n  function onfinish(err) {\n    if (err && err.code === 'ECONNRESET') return onaborted();\n    if (err) return onerror(err);\n    if (done) return;\n\n    setImmediate(function () {\n      if (streaming !== false && !done) {\n        onaborted();\n        return;\n      }\n\n      if (done) return;\n      done = true;\n      callback();\n    });\n  }\n\n  // streaming\n  function onstream() {\n    streaming = true;\n  }\n\n  file.on('directory', ondirectory);\n  file.on('end', onend);\n  file.on('error', onerror);\n  file.on('file', onfile);\n  file.on('stream', onstream);\n  onFinished(res, onfinish);\n\n  if (options.headers) {\n    // set headers on successful transfer\n    file.on('headers', function headers(res) {\n      var obj = options.headers;\n      var keys = Object.keys(obj);\n\n      for (var i = 0; i < keys.length; i++) {\n        var k = keys[i];\n        res.setHeader(k, obj[k]);\n      }\n    });\n  }\n\n  // pipe\n  file.pipe(res);\n}\n\n/**\n * Stringify JSON, like JSON.stringify, but v8 optimized, with the\n * ability to escape characters that can trigger HTML sniffing.\n *\n * @param {*} value\n * @param {function} replacer\n * @param {number} spaces\n * @param {boolean} escape\n * @returns {string}\n * @private\n */\n\nfunction stringify (value, replacer, spaces, escape) {\n  // v8 checks arguments.length for optimizing simple call\n  // https://bugs.chromium.org/p/v8/issues/detail?id=4730\n  var json = replacer || spaces\n    ? JSON.stringify(value, replacer, spaces)\n    : JSON.stringify(value);\n\n  if (escape && typeof json === 'string') {\n    json = json.replace(/[<>&]/g, function (c) {\n      switch (c.charCodeAt(0)) {\n        case 0x3c:\n          return '\\\\u003c'\n        case 0x3e:\n          return '\\\\u003e'\n        case 0x26:\n          return '\\\\u0026'\n        /* istanbul ignore next: unreachable default */\n        default:\n          return c\n      }\n    })\n  }\n\n  return json\n}\n","/*!\n * express\n * Copyright(c) 2009-2013 TJ Holowaychuk\n * Copyright(c) 2013 Roman Shtylman\n * Copyright(c) 2014-2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict';\n\n/**\n * Module dependencies.\n * @private\n */\n\nvar Route = require('./route');\nvar Layer = require('./layer');\nvar methods = require('methods');\nvar mixin = require('utils-merge');\nvar debug = require('debug')('express:router');\nvar deprecate = require('depd')('express');\nvar flatten = require('array-flatten');\nvar parseUrl = require('parseurl');\nvar setPrototypeOf = require('setprototypeof')\n\n/**\n * Module variables.\n * @private\n */\n\nvar objectRegExp = /^\\[object (\\S+)\\]$/;\nvar slice = Array.prototype.slice;\nvar toString = Object.prototype.toString;\n\n/**\n * Initialize a new `Router` with the given `options`.\n *\n * @param {Object} [options]\n * @return {Router} which is an callable function\n * @public\n */\n\nvar proto = module.exports = function(options) {\n  var opts = options || {};\n\n  function router(req, res, next) {\n    router.handle(req, res, next);\n  }\n\n  // mixin Router class functions\n  setPrototypeOf(router, proto)\n\n  router.params = {};\n  router._params = [];\n  router.caseSensitive = opts.caseSensitive;\n  router.mergeParams = opts.mergeParams;\n  router.strict = opts.strict;\n  router.stack = [];\n\n  return router;\n};\n\n/**\n * Map the given param placeholder `name`(s) to the given callback.\n *\n * Parameter mapping is used to provide pre-conditions to routes\n * which use normalized placeholders. For example a _:user_id_ parameter\n * could automatically load a user's information from the database without\n * any additional code,\n *\n * The callback uses the same signature as middleware, the only difference\n * being that the value of the placeholder is passed, in this case the _id_\n * of the user. Once the `next()` function is invoked, just like middleware\n * it will continue on to execute the route, or subsequent parameter functions.\n *\n * Just like in middleware, you must either respond to the request or call next\n * to avoid stalling the request.\n *\n *  app.param('user_id', function(req, res, next, id){\n *    User.find(id, function(err, user){\n *      if (err) {\n *        return next(err);\n *      } else if (!user) {\n *        return next(new Error('failed to load user'));\n *      }\n *      req.user = user;\n *      next();\n *    });\n *  });\n *\n * @param {String} name\n * @param {Function} fn\n * @return {app} for chaining\n * @public\n */\n\nproto.param = function param(name, fn) {\n  // param logic\n  if (typeof name === 'function') {\n    deprecate('router.param(fn): Refactor to use path params');\n    this._params.push(name);\n    return;\n  }\n\n  // apply param functions\n  var params = this._params;\n  var len = params.length;\n  var ret;\n\n  if (name[0] === ':') {\n    deprecate('router.param(' + JSON.stringify(name) + ', fn): Use router.param(' + JSON.stringify(name.slice(1)) + ', fn) instead')\n    name = name.slice(1)\n  }\n\n  for (var i = 0; i < len; ++i) {\n    if (ret = params[i](name, fn)) {\n      fn = ret;\n    }\n  }\n\n  // ensure we end up with a\n  // middleware function\n  if ('function' !== typeof fn) {\n    throw new Error('invalid param() call for ' + name + ', got ' + fn);\n  }\n\n  (this.params[name] = this.params[name] || []).push(fn);\n  return this;\n};\n\n/**\n * Dispatch a req, res into the router.\n * @private\n */\n\nproto.handle = function handle(req, res, out) {\n  var self = this;\n\n  debug('dispatching %s %s', req.method, req.url);\n\n  var idx = 0;\n  var protohost = getProtohost(req.url) || ''\n  var removed = '';\n  var slashAdded = false;\n  var sync = 0\n  var paramcalled = {};\n\n  // store options for OPTIONS request\n  // only used if OPTIONS request\n  var options = [];\n\n  // middleware and routes\n  var stack = self.stack;\n\n  // manage inter-router variables\n  var parentParams = req.params;\n  var parentUrl = req.baseUrl || '';\n  var done = restore(out, req, 'baseUrl', 'next', 'params');\n\n  // setup next layer\n  req.next = next;\n\n  // for options requests, respond with a default if nothing else responds\n  if (req.method === 'OPTIONS') {\n    done = wrap(done, function(old, err) {\n      if (err || options.length === 0) return old(err);\n      sendOptionsResponse(res, options, old);\n    });\n  }\n\n  // setup basic req values\n  req.baseUrl = parentUrl;\n  req.originalUrl = req.originalUrl || req.url;\n\n  next();\n\n  function next(err) {\n    var layerError = err === 'route'\n      ? null\n      : err;\n\n    // remove added slash\n    if (slashAdded) {\n      req.url = req.url.slice(1)\n      slashAdded = false;\n    }\n\n    // restore altered req.url\n    if (removed.length !== 0) {\n      req.baseUrl = parentUrl;\n      req.url = protohost + removed + req.url.slice(protohost.length)\n      removed = '';\n    }\n\n    // signal to exit router\n    if (layerError === 'router') {\n      setImmediate(done, null)\n      return\n    }\n\n    // no more matching layers\n    if (idx >= stack.length) {\n      setImmediate(done, layerError);\n      return;\n    }\n\n    // max sync stack\n    if (++sync > 100) {\n      return setImmediate(next, err)\n    }\n\n    // get pathname of request\n    var path = getPathname(req);\n\n    if (path == null) {\n      return done(layerError);\n    }\n\n    // find next matching layer\n    var layer;\n    var match;\n    var route;\n\n    while (match !== true && idx < stack.length) {\n      layer = stack[idx++];\n      match = matchLayer(layer, path);\n      route = layer.route;\n\n      if (typeof match !== 'boolean') {\n        // hold on to layerError\n        layerError = layerError || match;\n      }\n\n      if (match !== true) {\n        continue;\n      }\n\n      if (!route) {\n        // process non-route handlers normally\n        continue;\n      }\n\n      if (layerError) {\n        // routes do not match with a pending error\n        match = false;\n        continue;\n      }\n\n      var method = req.method;\n      var has_method = route._handles_method(method);\n\n      // build up automatic options response\n      if (!has_method && method === 'OPTIONS') {\n        appendMethods(options, route._options());\n      }\n\n      // don't even bother matching route\n      if (!has_method && method !== 'HEAD') {\n        match = false;\n      }\n    }\n\n    // no match\n    if (match !== true) {\n      return done(layerError);\n    }\n\n    // store route for dispatch on change\n    if (route) {\n      req.route = route;\n    }\n\n    // Capture one-time layer values\n    req.params = self.mergeParams\n      ? mergeParams(layer.params, parentParams)\n      : layer.params;\n    var layerPath = layer.path;\n\n    // this should be done for the layer\n    self.process_params(layer, paramcalled, req, res, function (err) {\n      if (err) {\n        next(layerError || err)\n      } else if (route) {\n        layer.handle_request(req, res, next)\n      } else {\n        trim_prefix(layer, layerError, layerPath, path)\n      }\n\n      sync = 0\n    });\n  }\n\n  function trim_prefix(layer, layerError, layerPath, path) {\n    if (layerPath.length !== 0) {\n      // Validate path is a prefix match\n      if (layerPath !== path.slice(0, layerPath.length)) {\n        next(layerError)\n        return\n      }\n\n      // Validate path breaks on a path separator\n      var c = path[layerPath.length]\n      if (c && c !== '/' && c !== '.') return next(layerError)\n\n      // Trim off the part of the url that matches the route\n      // middleware (.use stuff) needs to have the path stripped\n      debug('trim prefix (%s) from url %s', layerPath, req.url);\n      removed = layerPath;\n      req.url = protohost + req.url.slice(protohost.length + removed.length)\n\n      // Ensure leading slash\n      if (!protohost && req.url[0] !== '/') {\n        req.url = '/' + req.url;\n        slashAdded = true;\n      }\n\n      // Setup base URL (no trailing slash)\n      req.baseUrl = parentUrl + (removed[removed.length - 1] === '/'\n        ? removed.substring(0, removed.length - 1)\n        : removed);\n    }\n\n    debug('%s %s : %s', layer.name, layerPath, req.originalUrl);\n\n    if (layerError) {\n      layer.handle_error(layerError, req, res, next);\n    } else {\n      layer.handle_request(req, res, next);\n    }\n  }\n};\n\n/**\n * Process any parameters for the layer.\n * @private\n */\n\nproto.process_params = function process_params(layer, called, req, res, done) {\n  var params = this.params;\n\n  // captured parameters from the layer, keys and values\n  var keys = layer.keys;\n\n  // fast track\n  if (!keys || keys.length === 0) {\n    return done();\n  }\n\n  var i = 0;\n  var name;\n  var paramIndex = 0;\n  var key;\n  var paramVal;\n  var paramCallbacks;\n  var paramCalled;\n\n  // process params in order\n  // param callbacks can be async\n  function param(err) {\n    if (err) {\n      return done(err);\n    }\n\n    if (i >= keys.length ) {\n      return done();\n    }\n\n    paramIndex = 0;\n    key = keys[i++];\n    name = key.name;\n    paramVal = req.params[name];\n    paramCallbacks = params[name];\n    paramCalled = called[name];\n\n    if (paramVal === undefined || !paramCallbacks) {\n      return param();\n    }\n\n    // param previously called with same value or error occurred\n    if (paramCalled && (paramCalled.match === paramVal\n      || (paramCalled.error && paramCalled.error !== 'route'))) {\n      // restore value\n      req.params[name] = paramCalled.value;\n\n      // next param\n      return param(paramCalled.error);\n    }\n\n    called[name] = paramCalled = {\n      error: null,\n      match: paramVal,\n      value: paramVal\n    };\n\n    paramCallback();\n  }\n\n  // single param callbacks\n  function paramCallback(err) {\n    var fn = paramCallbacks[paramIndex++];\n\n    // store updated value\n    paramCalled.value = req.params[key.name];\n\n    if (err) {\n      // store error\n      paramCalled.error = err;\n      param(err);\n      return;\n    }\n\n    if (!fn) return param();\n\n    try {\n      fn(req, res, paramCallback, paramVal, key.name);\n    } catch (e) {\n      paramCallback(e);\n    }\n  }\n\n  param();\n};\n\n/**\n * Use the given middleware function, with optional path, defaulting to \"/\".\n *\n * Use (like `.all`) will run for any http METHOD, but it will not add\n * handlers for those methods so OPTIONS requests will not consider `.use`\n * functions even if they could respond.\n *\n * The other difference is that _route_ path is stripped and not visible\n * to the handler function. The main effect of this feature is that mounted\n * handlers can operate without any code changes regardless of the \"prefix\"\n * pathname.\n *\n * @public\n */\n\nproto.use = function use(fn) {\n  var offset = 0;\n  var path = '/';\n\n  // default path to '/'\n  // disambiguate router.use([fn])\n  if (typeof fn !== 'function') {\n    var arg = fn;\n\n    while (Array.isArray(arg) && arg.length !== 0) {\n      arg = arg[0];\n    }\n\n    // first arg is the path\n    if (typeof arg !== 'function') {\n      offset = 1;\n      path = fn;\n    }\n  }\n\n  var callbacks = flatten(slice.call(arguments, offset));\n\n  if (callbacks.length === 0) {\n    throw new TypeError('Router.use() requires a middleware function')\n  }\n\n  for (var i = 0; i < callbacks.length; i++) {\n    var fn = callbacks[i];\n\n    if (typeof fn !== 'function') {\n      throw new TypeError('Router.use() requires a middleware function but got a ' + gettype(fn))\n    }\n\n    // add the middleware\n    debug('use %o %s', path, fn.name || '<anonymous>')\n\n    var layer = new Layer(path, {\n      sensitive: this.caseSensitive,\n      strict: false,\n      end: false\n    }, fn);\n\n    layer.route = undefined;\n\n    this.stack.push(layer);\n  }\n\n  return this;\n};\n\n/**\n * Create a new Route for the given path.\n *\n * Each route contains a separate middleware stack and VERB handlers.\n *\n * See the Route api documentation for details on adding handlers\n * and middleware to routes.\n *\n * @param {String} path\n * @return {Route}\n * @public\n */\n\nproto.route = function route(path) {\n  var route = new Route(path);\n\n  var layer = new Layer(path, {\n    sensitive: this.caseSensitive,\n    strict: this.strict,\n    end: true\n  }, route.dispatch.bind(route));\n\n  layer.route = route;\n\n  this.stack.push(layer);\n  return route;\n};\n\n// create Router#VERB functions\nmethods.concat('all').forEach(function(method){\n  proto[method] = function(path){\n    var route = this.route(path)\n    route[method].apply(route, slice.call(arguments, 1));\n    return this;\n  };\n});\n\n// append methods to a list of methods\nfunction appendMethods(list, addition) {\n  for (var i = 0; i < addition.length; i++) {\n    var method = addition[i];\n    if (list.indexOf(method) === -1) {\n      list.push(method);\n    }\n  }\n}\n\n// get pathname of request\nfunction getPathname(req) {\n  try {\n    return parseUrl(req).pathname;\n  } catch (err) {\n    return undefined;\n  }\n}\n\n// Get get protocol + host for a URL\nfunction getProtohost(url) {\n  if (typeof url !== 'string' || url.length === 0 || url[0] === '/') {\n    return undefined\n  }\n\n  var searchIndex = url.indexOf('?')\n  var pathLength = searchIndex !== -1\n    ? searchIndex\n    : url.length\n  var fqdnIndex = url.slice(0, pathLength).indexOf('://')\n\n  return fqdnIndex !== -1\n    ? url.substring(0, url.indexOf('/', 3 + fqdnIndex))\n    : undefined\n}\n\n// get type for error message\nfunction gettype(obj) {\n  var type = typeof obj;\n\n  if (type !== 'object') {\n    return type;\n  }\n\n  // inspect [[Class]] for objects\n  return toString.call(obj)\n    .replace(objectRegExp, '$1');\n}\n\n/**\n * Match path to a layer.\n *\n * @param {Layer} layer\n * @param {string} path\n * @private\n */\n\nfunction matchLayer(layer, path) {\n  try {\n    return layer.match(path);\n  } catch (err) {\n    return err;\n  }\n}\n\n// merge params with parent params\nfunction mergeParams(params, parent) {\n  if (typeof parent !== 'object' || !parent) {\n    return params;\n  }\n\n  // make copy of parent for base\n  var obj = mixin({}, parent);\n\n  // simple non-numeric merging\n  if (!(0 in params) || !(0 in parent)) {\n    return mixin(obj, params);\n  }\n\n  var i = 0;\n  var o = 0;\n\n  // determine numeric gaps\n  while (i in params) {\n    i++;\n  }\n\n  while (o in parent) {\n    o++;\n  }\n\n  // offset numeric indices in params before merge\n  for (i--; i >= 0; i--) {\n    params[i + o] = params[i];\n\n    // create holes for the merge when necessary\n    if (i < o) {\n      delete params[i];\n    }\n  }\n\n  return mixin(obj, params);\n}\n\n// restore obj props after function\nfunction restore(fn, obj) {\n  var props = new Array(arguments.length - 2);\n  var vals = new Array(arguments.length - 2);\n\n  for (var i = 0; i < props.length; i++) {\n    props[i] = arguments[i + 2];\n    vals[i] = obj[props[i]];\n  }\n\n  return function () {\n    // restore vals\n    for (var i = 0; i < props.length; i++) {\n      obj[props[i]] = vals[i];\n    }\n\n    return fn.apply(this, arguments);\n  };\n}\n\n// send an OPTIONS response\nfunction sendOptionsResponse(res, options, next) {\n  try {\n    var body = options.join(',');\n    res.set('Allow', body);\n    res.send(body);\n  } catch (err) {\n    next(err);\n  }\n}\n\n// wrap a function\nfunction wrap(old, fn) {\n  return function proxy() {\n    var args = new Array(arguments.length + 1);\n\n    args[0] = old;\n    for (var i = 0, len = arguments.length; i < len; i++) {\n      args[i + 1] = arguments[i];\n    }\n\n    fn.apply(this, args);\n  };\n}\n","/*!\n * express\n * Copyright(c) 2009-2013 TJ Holowaychuk\n * Copyright(c) 2013 Roman Shtylman\n * Copyright(c) 2014-2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict';\n\n/**\n * Module dependencies.\n * @private\n */\n\nvar pathRegexp = require('path-to-regexp');\nvar debug = require('debug')('express:router:layer');\n\n/**\n * Module variables.\n * @private\n */\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = Layer;\n\nfunction Layer(path, options, fn) {\n  if (!(this instanceof Layer)) {\n    return new Layer(path, options, fn);\n  }\n\n  debug('new %o', path)\n  var opts = options || {};\n\n  this.handle = fn;\n  this.name = fn.name || '<anonymous>';\n  this.params = undefined;\n  this.path = undefined;\n  this.regexp = pathRegexp(path, this.keys = [], opts);\n\n  // set fast path flags\n  this.regexp.fast_star = path === '*'\n  this.regexp.fast_slash = path === '/' && opts.end === false\n}\n\n/**\n * Handle the error for the layer.\n *\n * @param {Error} error\n * @param {Request} req\n * @param {Response} res\n * @param {function} next\n * @api private\n */\n\nLayer.prototype.handle_error = function handle_error(error, req, res, next) {\n  var fn = this.handle;\n\n  if (fn.length !== 4) {\n    // not a standard error handler\n    return next(error);\n  }\n\n  try {\n    fn(error, req, res, next);\n  } catch (err) {\n    next(err);\n  }\n};\n\n/**\n * Handle the request for the layer.\n *\n * @param {Request} req\n * @param {Response} res\n * @param {function} next\n * @api private\n */\n\nLayer.prototype.handle_request = function handle(req, res, next) {\n  var fn = this.handle;\n\n  if (fn.length > 3) {\n    // not a standard request handler\n    return next();\n  }\n\n  try {\n    fn(req, res, next);\n  } catch (err) {\n    next(err);\n  }\n};\n\n/**\n * Check if this route matches `path`, if so\n * populate `.params`.\n *\n * @param {String} path\n * @return {Boolean}\n * @api private\n */\n\nLayer.prototype.match = function match(path) {\n  var match\n\n  if (path != null) {\n    // fast path non-ending match for / (any path matches)\n    if (this.regexp.fast_slash) {\n      this.params = {}\n      this.path = ''\n      return true\n    }\n\n    // fast path for * (everything matched in a param)\n    if (this.regexp.fast_star) {\n      this.params = {'0': decode_param(path)}\n      this.path = path\n      return true\n    }\n\n    // match the path\n    match = this.regexp.exec(path)\n  }\n\n  if (!match) {\n    this.params = undefined;\n    this.path = undefined;\n    return false;\n  }\n\n  // store values\n  this.params = {};\n  this.path = match[0]\n\n  var keys = this.keys;\n  var params = this.params;\n\n  for (var i = 1; i < match.length; i++) {\n    var key = keys[i - 1];\n    var prop = key.name;\n    var val = decode_param(match[i])\n\n    if (val !== undefined || !(hasOwnProperty.call(params, prop))) {\n      params[prop] = val;\n    }\n  }\n\n  return true;\n};\n\n/**\n * Decode param value.\n *\n * @param {string} val\n * @return {string}\n * @private\n */\n\nfunction decode_param(val) {\n  if (typeof val !== 'string' || val.length === 0) {\n    return val;\n  }\n\n  try {\n    return decodeURIComponent(val);\n  } catch (err) {\n    if (err instanceof URIError) {\n      err.message = 'Failed to decode param \\'' + val + '\\'';\n      err.status = err.statusCode = 400;\n    }\n\n    throw err;\n  }\n}\n","/*!\n * express\n * Copyright(c) 2009-2013 TJ Holowaychuk\n * Copyright(c) 2013 Roman Shtylman\n * Copyright(c) 2014-2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict';\n\n/**\n * Module dependencies.\n * @private\n */\n\nvar debug = require('debug')('express:router:route');\nvar flatten = require('array-flatten');\nvar Layer = require('./layer');\nvar methods = require('methods');\n\n/**\n * Module variables.\n * @private\n */\n\nvar slice = Array.prototype.slice;\nvar toString = Object.prototype.toString;\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = Route;\n\n/**\n * Initialize `Route` with the given `path`,\n *\n * @param {String} path\n * @public\n */\n\nfunction Route(path) {\n  this.path = path;\n  this.stack = [];\n\n  debug('new %o', path)\n\n  // route handlers for various http methods\n  this.methods = {};\n}\n\n/**\n * Determine if the route handles a given method.\n * @private\n */\n\nRoute.prototype._handles_method = function _handles_method(method) {\n  if (this.methods._all) {\n    return true;\n  }\n\n  var name = method.toLowerCase();\n\n  if (name === 'head' && !this.methods['head']) {\n    name = 'get';\n  }\n\n  return Boolean(this.methods[name]);\n};\n\n/**\n * @return {Array} supported HTTP methods\n * @private\n */\n\nRoute.prototype._options = function _options() {\n  var methods = Object.keys(this.methods);\n\n  // append automatic head\n  if (this.methods.get && !this.methods.head) {\n    methods.push('head');\n  }\n\n  for (var i = 0; i < methods.length; i++) {\n    // make upper case\n    methods[i] = methods[i].toUpperCase();\n  }\n\n  return methods;\n};\n\n/**\n * dispatch req, res into this route\n * @private\n */\n\nRoute.prototype.dispatch = function dispatch(req, res, done) {\n  var idx = 0;\n  var stack = this.stack;\n  var sync = 0\n\n  if (stack.length === 0) {\n    return done();\n  }\n\n  var method = req.method.toLowerCase();\n  if (method === 'head' && !this.methods['head']) {\n    method = 'get';\n  }\n\n  req.route = this;\n\n  next();\n\n  function next(err) {\n    // signal to exit route\n    if (err && err === 'route') {\n      return done();\n    }\n\n    // signal to exit router\n    if (err && err === 'router') {\n      return done(err)\n    }\n\n    var layer = stack[idx++];\n    if (!layer) {\n      return done(err);\n    }\n\n    // max sync stack\n    if (++sync > 100) {\n      return setImmediate(next, err)\n    }\n\n    if (layer.method && layer.method !== method) {\n      return next(err);\n    }\n\n    if (err) {\n      layer.handle_error(err, req, res, next);\n    } else {\n      layer.handle_request(req, res, next);\n    }\n\n    sync = 0\n  }\n};\n\n/**\n * Add a handler for all HTTP verbs to this route.\n *\n * Behaves just like middleware and can respond or call `next`\n * to continue processing.\n *\n * You can use multiple `.all` call to add multiple handlers.\n *\n *   function check_something(req, res, next){\n *     next();\n *   };\n *\n *   function validate_user(req, res, next){\n *     next();\n *   };\n *\n *   route\n *   .all(validate_user)\n *   .all(check_something)\n *   .get(function(req, res, next){\n *     res.send('hello world');\n *   });\n *\n * @param {function} handler\n * @return {Route} for chaining\n * @api public\n */\n\nRoute.prototype.all = function all() {\n  var handles = flatten(slice.call(arguments));\n\n  for (var i = 0; i < handles.length; i++) {\n    var handle = handles[i];\n\n    if (typeof handle !== 'function') {\n      var type = toString.call(handle);\n      var msg = 'Route.all() requires a callback function but got a ' + type\n      throw new TypeError(msg);\n    }\n\n    var layer = Layer('/', {}, handle);\n    layer.method = undefined;\n\n    this.methods._all = true;\n    this.stack.push(layer);\n  }\n\n  return this;\n};\n\nmethods.forEach(function(method){\n  Route.prototype[method] = function(){\n    var handles = flatten(slice.call(arguments));\n\n    for (var i = 0; i < handles.length; i++) {\n      var handle = handles[i];\n\n      if (typeof handle !== 'function') {\n        var type = toString.call(handle);\n        var msg = 'Route.' + method + '() requires a callback function but got a ' + type\n        throw new Error(msg);\n      }\n\n      debug('%s %o', method, this.path)\n\n      var layer = Layer('/', {}, handle);\n      layer.method = method;\n\n      this.methods[method] = true;\n      this.stack.push(layer);\n    }\n\n    return this;\n  };\n});\n","/*!\n * express\n * Copyright(c) 2009-2013 TJ Holowaychuk\n * Copyright(c) 2014-2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict';\n\n/**\n * Module dependencies.\n * @api private\n */\n\nvar Buffer = require('safe-buffer').Buffer\nvar contentDisposition = require('content-disposition');\nvar contentType = require('content-type');\nvar deprecate = require('depd')('express');\nvar flatten = require('array-flatten');\nvar mime = require('send').mime;\nvar etag = require('etag');\nvar proxyaddr = require('proxy-addr');\nvar qs = require('qs');\nvar querystring = require('querystring');\n\n/**\n * Return strong ETag for `body`.\n *\n * @param {String|Buffer} body\n * @param {String} [encoding]\n * @return {String}\n * @api private\n */\n\nexports.etag = createETagGenerator({ weak: false })\n\n/**\n * Return weak ETag for `body`.\n *\n * @param {String|Buffer} body\n * @param {String} [encoding]\n * @return {String}\n * @api private\n */\n\nexports.wetag = createETagGenerator({ weak: true })\n\n/**\n * Check if `path` looks absolute.\n *\n * @param {String} path\n * @return {Boolean}\n * @api private\n */\n\nexports.isAbsolute = function(path){\n  if ('/' === path[0]) return true;\n  if (':' === path[1] && ('\\\\' === path[2] || '/' === path[2])) return true; // Windows device path\n  if ('\\\\\\\\' === path.substring(0, 2)) return true; // Microsoft Azure absolute path\n};\n\n/**\n * Flatten the given `arr`.\n *\n * @param {Array} arr\n * @return {Array}\n * @api private\n */\n\nexports.flatten = deprecate.function(flatten,\n  'utils.flatten: use array-flatten npm module instead');\n\n/**\n * Normalize the given `type`, for example \"html\" becomes \"text/html\".\n *\n * @param {String} type\n * @return {Object}\n * @api private\n */\n\nexports.normalizeType = function(type){\n  return ~type.indexOf('/')\n    ? acceptParams(type)\n    : { value: mime.lookup(type), params: {} };\n};\n\n/**\n * Normalize `types`, for example \"html\" becomes \"text/html\".\n *\n * @param {Array} types\n * @return {Array}\n * @api private\n */\n\nexports.normalizeTypes = function(types){\n  var ret = [];\n\n  for (var i = 0; i < types.length; ++i) {\n    ret.push(exports.normalizeType(types[i]));\n  }\n\n  return ret;\n};\n\n/**\n * Generate Content-Disposition header appropriate for the filename.\n * non-ascii filenames are urlencoded and a filename* parameter is added\n *\n * @param {String} filename\n * @return {String}\n * @api private\n */\n\nexports.contentDisposition = deprecate.function(contentDisposition,\n  'utils.contentDisposition: use content-disposition npm module instead');\n\n/**\n * Parse accept params `str` returning an\n * object with `.value`, `.quality` and `.params`.\n * also includes `.originalIndex` for stable sorting\n *\n * @param {String} str\n * @param {Number} index\n * @return {Object}\n * @api private\n */\n\nfunction acceptParams(str, index) {\n  var parts = str.split(/ *; */);\n  var ret = { value: parts[0], quality: 1, params: {}, originalIndex: index };\n\n  for (var i = 1; i < parts.length; ++i) {\n    var pms = parts[i].split(/ *= */);\n    if ('q' === pms[0]) {\n      ret.quality = parseFloat(pms[1]);\n    } else {\n      ret.params[pms[0]] = pms[1];\n    }\n  }\n\n  return ret;\n}\n\n/**\n * Compile \"etag\" value to function.\n *\n * @param  {Boolean|String|Function} val\n * @return {Function}\n * @api private\n */\n\nexports.compileETag = function(val) {\n  var fn;\n\n  if (typeof val === 'function') {\n    return val;\n  }\n\n  switch (val) {\n    case true:\n    case 'weak':\n      fn = exports.wetag;\n      break;\n    case false:\n      break;\n    case 'strong':\n      fn = exports.etag;\n      break;\n    default:\n      throw new TypeError('unknown value for etag function: ' + val);\n  }\n\n  return fn;\n}\n\n/**\n * Compile \"query parser\" value to function.\n *\n * @param  {String|Function} val\n * @return {Function}\n * @api private\n */\n\nexports.compileQueryParser = function compileQueryParser(val) {\n  var fn;\n\n  if (typeof val === 'function') {\n    return val;\n  }\n\n  switch (val) {\n    case true:\n    case 'simple':\n      fn = querystring.parse;\n      break;\n    case false:\n      fn = newObject;\n      break;\n    case 'extended':\n      fn = parseExtendedQueryString;\n      break;\n    default:\n      throw new TypeError('unknown value for query parser function: ' + val);\n  }\n\n  return fn;\n}\n\n/**\n * Compile \"proxy trust\" value to function.\n *\n * @param  {Boolean|String|Number|Array|Function} val\n * @return {Function}\n * @api private\n */\n\nexports.compileTrust = function(val) {\n  if (typeof val === 'function') return val;\n\n  if (val === true) {\n    // Support plain true/false\n    return function(){ return true };\n  }\n\n  if (typeof val === 'number') {\n    // Support trusting hop count\n    return function(a, i){ return i < val };\n  }\n\n  if (typeof val === 'string') {\n    // Support comma-separated values\n    val = val.split(',')\n      .map(function (v) { return v.trim() })\n  }\n\n  return proxyaddr.compile(val || []);\n}\n\n/**\n * Set the charset in a given Content-Type string.\n *\n * @param {String} type\n * @param {String} charset\n * @return {String}\n * @api private\n */\n\nexports.setCharset = function setCharset(type, charset) {\n  if (!type || !charset) {\n    return type;\n  }\n\n  // parse type\n  var parsed = contentType.parse(type);\n\n  // set charset\n  parsed.parameters.charset = charset;\n\n  // format type\n  return contentType.format(parsed);\n};\n\n/**\n * Create an ETag generator function, generating ETags with\n * the given options.\n *\n * @param {object} options\n * @return {function}\n * @private\n */\n\nfunction createETagGenerator (options) {\n  return function generateETag (body, encoding) {\n    var buf = !Buffer.isBuffer(body)\n      ? Buffer.from(body, encoding)\n      : body\n\n    return etag(buf, options)\n  }\n}\n\n/**\n * Parse an extended query string with qs.\n *\n * @return {Object}\n * @private\n */\n\nfunction parseExtendedQueryString(str) {\n  return qs.parse(str, {\n    allowPrototypes: true\n  });\n}\n\n/**\n * Return new empty object.\n *\n * @return {Object}\n * @api private\n */\n\nfunction newObject() {\n  return {};\n}\n","/*!\n * express\n * Copyright(c) 2009-2013 TJ Holowaychuk\n * Copyright(c) 2013 Roman Shtylman\n * Copyright(c) 2014-2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict';\n\n/**\n * Module dependencies.\n * @private\n */\n\nvar debug = require('debug')('express:view');\nvar path = require('path');\nvar fs = require('fs');\n\n/**\n * Module variables.\n * @private\n */\n\nvar dirname = path.dirname;\nvar basename = path.basename;\nvar extname = path.extname;\nvar join = path.join;\nvar resolve = path.resolve;\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = View;\n\n/**\n * Initialize a new `View` with the given `name`.\n *\n * Options:\n *\n *   - `defaultEngine` the default template engine name\n *   - `engines` template engine require() cache\n *   - `root` root path for view lookup\n *\n * @param {string} name\n * @param {object} options\n * @public\n */\n\nfunction View(name, options) {\n  var opts = options || {};\n\n  this.defaultEngine = opts.defaultEngine;\n  this.ext = extname(name);\n  this.name = name;\n  this.root = opts.root;\n\n  if (!this.ext && !this.defaultEngine) {\n    throw new Error('No default engine was specified and no extension was provided.');\n  }\n\n  var fileName = name;\n\n  if (!this.ext) {\n    // get extension from default engine name\n    this.ext = this.defaultEngine[0] !== '.'\n      ? '.' + this.defaultEngine\n      : this.defaultEngine;\n\n    fileName += this.ext;\n  }\n\n  if (!opts.engines[this.ext]) {\n    // load engine\n    var mod = this.ext.slice(1)\n    debug('require \"%s\"', mod)\n\n    // default engine export\n    var fn = require(mod).__express\n\n    if (typeof fn !== 'function') {\n      throw new Error('Module \"' + mod + '\" does not provide a view engine.')\n    }\n\n    opts.engines[this.ext] = fn\n  }\n\n  // store loaded engine\n  this.engine = opts.engines[this.ext];\n\n  // lookup path\n  this.path = this.lookup(fileName);\n}\n\n/**\n * Lookup view by the given `name`\n *\n * @param {string} name\n * @private\n */\n\nView.prototype.lookup = function lookup(name) {\n  var path;\n  var roots = [].concat(this.root);\n\n  debug('lookup \"%s\"', name);\n\n  for (var i = 0; i < roots.length && !path; i++) {\n    var root = roots[i];\n\n    // resolve the path\n    var loc = resolve(root, name);\n    var dir = dirname(loc);\n    var file = basename(loc);\n\n    // resolve the file\n    path = this.resolve(dir, file);\n  }\n\n  return path;\n};\n\n/**\n * Render with the given options.\n *\n * @param {object} options\n * @param {function} callback\n * @private\n */\n\nView.prototype.render = function render(options, callback) {\n  debug('render \"%s\"', this.path);\n  this.engine(this.path, options, callback);\n};\n\n/**\n * Resolve the file within the given directory.\n *\n * @param {string} dir\n * @param {string} file\n * @private\n */\n\nView.prototype.resolve = function resolve(dir, file) {\n  var ext = this.ext;\n\n  // <path>.<ext>\n  var path = join(dir, file);\n  var stat = tryStat(path);\n\n  if (stat && stat.isFile()) {\n    return path;\n  }\n\n  // <path>/index.<ext>\n  path = join(dir, basename(file, ext), 'index' + ext);\n  stat = tryStat(path);\n\n  if (stat && stat.isFile()) {\n    return path;\n  }\n};\n\n/**\n * Return a stat, maybe.\n *\n * @param {string} path\n * @return {fs.Stats}\n * @private\n */\n\nfunction tryStat(path) {\n  debug('stat \"%s\"', path);\n\n  try {\n    return fs.statSync(path);\n  } catch (e) {\n    return undefined;\n  }\n}\n","/**\n * This is the web browser implementation of `debug()`.\n *\n * Expose `debug()` as the module.\n */\n\nexports = module.exports = require('./debug');\nexports.log = log;\nexports.formatArgs = formatArgs;\nexports.save = save;\nexports.load = load;\nexports.useColors = useColors;\nexports.storage = 'undefined' != typeof chrome\n               && 'undefined' != typeof chrome.storage\n                  ? chrome.storage.local\n                  : localstorage();\n\n/**\n * Colors.\n */\n\nexports.colors = [\n  'lightseagreen',\n  'forestgreen',\n  'goldenrod',\n  'dodgerblue',\n  'darkorchid',\n  'crimson'\n];\n\n/**\n * Currently only WebKit-based Web Inspectors, Firefox >= v31,\n * and the Firebug extension (any Firefox version) are known\n * to support \"%c\" CSS customizations.\n *\n * TODO: add a `localStorage` variable to explicitly enable/disable colors\n */\n\nfunction useColors() {\n  // NB: In an Electron preload script, document will be defined but not fully\n  // initialized. Since we know we're in Chrome, we'll just detect this case\n  // explicitly\n  if (typeof window !== 'undefined' && window.process && window.process.type === 'renderer') {\n    return true;\n  }\n\n  // is webkit? http://stackoverflow.com/a/16459606/376773\n  // document is undefined in react-native: https://github.com/facebook/react-native/pull/1632\n  return (typeof document !== 'undefined' && document.documentElement && document.documentElement.style && document.documentElement.style.WebkitAppearance) ||\n    // is firebug? http://stackoverflow.com/a/398120/376773\n    (typeof window !== 'undefined' && window.console && (window.console.firebug || (window.console.exception && window.console.table))) ||\n    // is firefox >= v31?\n    // https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages\n    (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/firefox\\/(\\d+)/) && parseInt(RegExp.$1, 10) >= 31) ||\n    // double check webkit in userAgent just in case we are in a worker\n    (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/applewebkit\\/(\\d+)/));\n}\n\n/**\n * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.\n */\n\nexports.formatters.j = function(v) {\n  try {\n    return JSON.stringify(v);\n  } catch (err) {\n    return '[UnexpectedJSONParseError]: ' + err.message;\n  }\n};\n\n\n/**\n * Colorize log arguments if enabled.\n *\n * @api public\n */\n\nfunction formatArgs(args) {\n  var useColors = this.useColors;\n\n  args[0] = (useColors ? '%c' : '')\n    + this.namespace\n    + (useColors ? ' %c' : ' ')\n    + args[0]\n    + (useColors ? '%c ' : ' ')\n    + '+' + exports.humanize(this.diff);\n\n  if (!useColors) return;\n\n  var c = 'color: ' + this.color;\n  args.splice(1, 0, c, 'color: inherit')\n\n  // the final \"%c\" is somewhat tricky, because there could be other\n  // arguments passed either before or after the %c, so we need to\n  // figure out the correct index to insert the CSS into\n  var index = 0;\n  var lastC = 0;\n  args[0].replace(/%[a-zA-Z%]/g, function(match) {\n    if ('%%' === match) return;\n    index++;\n    if ('%c' === match) {\n      // we only are interested in the *last* %c\n      // (the user may have provided their own)\n      lastC = index;\n    }\n  });\n\n  args.splice(lastC, 0, c);\n}\n\n/**\n * Invokes `console.log()` when available.\n * No-op when `console.log` is not a \"function\".\n *\n * @api public\n */\n\nfunction log() {\n  // this hackery is required for IE8/9, where\n  // the `console.log` function doesn't have 'apply'\n  return 'object' === typeof console\n    && console.log\n    && Function.prototype.apply.call(console.log, console, arguments);\n}\n\n/**\n * Save `namespaces`.\n *\n * @param {String} namespaces\n * @api private\n */\n\nfunction save(namespaces) {\n  try {\n    if (null == namespaces) {\n      exports.storage.removeItem('debug');\n    } else {\n      exports.storage.debug = namespaces;\n    }\n  } catch(e) {}\n}\n\n/**\n * Load `namespaces`.\n *\n * @return {String} returns the previously persisted debug modes\n * @api private\n */\n\nfunction load() {\n  var r;\n  try {\n    r = exports.storage.debug;\n  } catch(e) {}\n\n  // If debug isn't set in LS, and we're in Electron, try to load $DEBUG\n  if (!r && typeof process !== 'undefined' && 'env' in process) {\n    r = process.env.DEBUG;\n  }\n\n  return r;\n}\n\n/**\n * Enable namespaces listed in `localStorage.debug` initially.\n */\n\nexports.enable(load());\n\n/**\n * Localstorage attempts to return the localstorage.\n *\n * This is necessary because safari throws\n * when a user disables cookies/localstorage\n * and you attempt to access it.\n *\n * @return {LocalStorage}\n * @api private\n */\n\nfunction localstorage() {\n  try {\n    return window.localStorage;\n  } catch (e) {}\n}\n","\n/**\n * This is the common logic for both the Node.js and web browser\n * implementations of `debug()`.\n *\n * Expose `debug()` as the module.\n */\n\nexports = module.exports = createDebug.debug = createDebug['default'] = createDebug;\nexports.coerce = coerce;\nexports.disable = disable;\nexports.enable = enable;\nexports.enabled = enabled;\nexports.humanize = require('ms');\n\n/**\n * The currently active debug mode names, and names to skip.\n */\n\nexports.names = [];\nexports.skips = [];\n\n/**\n * Map of special \"%n\" handling functions, for the debug \"format\" argument.\n *\n * Valid key names are a single, lower or upper-case letter, i.e. \"n\" and \"N\".\n */\n\nexports.formatters = {};\n\n/**\n * Previous log timestamp.\n */\n\nvar prevTime;\n\n/**\n * Select a color.\n * @param {String} namespace\n * @return {Number}\n * @api private\n */\n\nfunction selectColor(namespace) {\n  var hash = 0, i;\n\n  for (i in namespace) {\n    hash  = ((hash << 5) - hash) + namespace.charCodeAt(i);\n    hash |= 0; // Convert to 32bit integer\n  }\n\n  return exports.colors[Math.abs(hash) % exports.colors.length];\n}\n\n/**\n * Create a debugger with the given `namespace`.\n *\n * @param {String} namespace\n * @return {Function}\n * @api public\n */\n\nfunction createDebug(namespace) {\n\n  function debug() {\n    // disabled?\n    if (!debug.enabled) return;\n\n    var self = debug;\n\n    // set `diff` timestamp\n    var curr = +new Date();\n    var ms = curr - (prevTime || curr);\n    self.diff = ms;\n    self.prev = prevTime;\n    self.curr = curr;\n    prevTime = curr;\n\n    // turn the `arguments` into a proper Array\n    var args = new Array(arguments.length);\n    for (var i = 0; i < args.length; i++) {\n      args[i] = arguments[i];\n    }\n\n    args[0] = exports.coerce(args[0]);\n\n    if ('string' !== typeof args[0]) {\n      // anything else let's inspect with %O\n      args.unshift('%O');\n    }\n\n    // apply any `formatters` transformations\n    var index = 0;\n    args[0] = args[0].replace(/%([a-zA-Z%])/g, function(match, format) {\n      // if we encounter an escaped % then don't increase the array index\n      if (match === '%%') return match;\n      index++;\n      var formatter = exports.formatters[format];\n      if ('function' === typeof formatter) {\n        var val = args[index];\n        match = formatter.call(self, val);\n\n        // now we need to remove `args[index]` since it's inlined in the `format`\n        args.splice(index, 1);\n        index--;\n      }\n      return match;\n    });\n\n    // apply env-specific formatting (colors, etc.)\n    exports.formatArgs.call(self, args);\n\n    var logFn = debug.log || exports.log || console.log.bind(console);\n    logFn.apply(self, args);\n  }\n\n  debug.namespace = namespace;\n  debug.enabled = exports.enabled(namespace);\n  debug.useColors = exports.useColors();\n  debug.color = selectColor(namespace);\n\n  // env-specific initialization logic for debug instances\n  if ('function' === typeof exports.init) {\n    exports.init(debug);\n  }\n\n  return debug;\n}\n\n/**\n * Enables a debug mode by namespaces. This can include modes\n * separated by a colon and wildcards.\n *\n * @param {String} namespaces\n * @api public\n */\n\nfunction enable(namespaces) {\n  exports.save(namespaces);\n\n  exports.names = [];\n  exports.skips = [];\n\n  var split = (typeof namespaces === 'string' ? namespaces : '').split(/[\\s,]+/);\n  var len = split.length;\n\n  for (var i = 0; i < len; i++) {\n    if (!split[i]) continue; // ignore empty strings\n    namespaces = split[i].replace(/\\*/g, '.*?');\n    if (namespaces[0] === '-') {\n      exports.skips.push(new RegExp('^' + namespaces.substr(1) + '$'));\n    } else {\n      exports.names.push(new RegExp('^' + namespaces + '$'));\n    }\n  }\n}\n\n/**\n * Disable debug output.\n *\n * @api public\n */\n\nfunction disable() {\n  exports.enable('');\n}\n\n/**\n * Returns true if the given mode name is enabled, false otherwise.\n *\n * @param {String} name\n * @return {Boolean}\n * @api public\n */\n\nfunction enabled(name) {\n  var i, len;\n  for (i = 0, len = exports.skips.length; i < len; i++) {\n    if (exports.skips[i].test(name)) {\n      return false;\n    }\n  }\n  for (i = 0, len = exports.names.length; i < len; i++) {\n    if (exports.names[i].test(name)) {\n      return true;\n    }\n  }\n  return false;\n}\n\n/**\n * Coerce `val`.\n *\n * @param {Mixed} val\n * @return {Mixed}\n * @api private\n */\n\nfunction coerce(val) {\n  if (val instanceof Error) return val.stack || val.message;\n  return val;\n}\n","/**\n * Detect Electron renderer process, which is node, but we should\n * treat as a browser.\n */\n\nif (typeof process !== 'undefined' && process.type === 'renderer') {\n  module.exports = require('./browser.js');\n} else {\n  module.exports = require('./node.js');\n}\n","/**\n * Module dependencies.\n */\n\nvar tty = require('tty');\nvar util = require('util');\n\n/**\n * This is the Node.js implementation of `debug()`.\n *\n * Expose `debug()` as the module.\n */\n\nexports = module.exports = require('./debug');\nexports.init = init;\nexports.log = log;\nexports.formatArgs = formatArgs;\nexports.save = save;\nexports.load = load;\nexports.useColors = useColors;\n\n/**\n * Colors.\n */\n\nexports.colors = [6, 2, 3, 4, 5, 1];\n\n/**\n * Build up the default `inspectOpts` object from the environment variables.\n *\n *   $ DEBUG_COLORS=no DEBUG_DEPTH=10 DEBUG_SHOW_HIDDEN=enabled node script.js\n */\n\nexports.inspectOpts = Object.keys(process.env).filter(function (key) {\n  return /^debug_/i.test(key);\n}).reduce(function (obj, key) {\n  // camel-case\n  var prop = key\n    .substring(6)\n    .toLowerCase()\n    .replace(/_([a-z])/g, function (_, k) { return k.toUpperCase() });\n\n  // coerce string value into JS value\n  var val = process.env[key];\n  if (/^(yes|on|true|enabled)$/i.test(val)) val = true;\n  else if (/^(no|off|false|disabled)$/i.test(val)) val = false;\n  else if (val === 'null') val = null;\n  else val = Number(val);\n\n  obj[prop] = val;\n  return obj;\n}, {});\n\n/**\n * The file descriptor to write the `debug()` calls to.\n * Set the `DEBUG_FD` env variable to override with another value. i.e.:\n *\n *   $ DEBUG_FD=3 node script.js 3>debug.log\n */\n\nvar fd = parseInt(process.env.DEBUG_FD, 10) || 2;\n\nif (1 !== fd && 2 !== fd) {\n  util.deprecate(function(){}, 'except for stderr(2) and stdout(1), any other usage of DEBUG_FD is deprecated. Override debug.log if you want to use a different log function (https://git.io/debug_fd)')()\n}\n\nvar stream = 1 === fd ? process.stdout :\n             2 === fd ? process.stderr :\n             createWritableStdioStream(fd);\n\n/**\n * Is stdout a TTY? Colored output is enabled when `true`.\n */\n\nfunction useColors() {\n  return 'colors' in exports.inspectOpts\n    ? Boolean(exports.inspectOpts.colors)\n    : tty.isatty(fd);\n}\n\n/**\n * Map %o to `util.inspect()`, all on a single line.\n */\n\nexports.formatters.o = function(v) {\n  this.inspectOpts.colors = this.useColors;\n  return util.inspect(v, this.inspectOpts)\n    .split('\\n').map(function(str) {\n      return str.trim()\n    }).join(' ');\n};\n\n/**\n * Map %o to `util.inspect()`, allowing multiple lines if needed.\n */\n\nexports.formatters.O = function(v) {\n  this.inspectOpts.colors = this.useColors;\n  return util.inspect(v, this.inspectOpts);\n};\n\n/**\n * Adds ANSI color escape codes if enabled.\n *\n * @api public\n */\n\nfunction formatArgs(args) {\n  var name = this.namespace;\n  var useColors = this.useColors;\n\n  if (useColors) {\n    var c = this.color;\n    var prefix = '  \\u001b[3' + c + ';1m' + name + ' ' + '\\u001b[0m';\n\n    args[0] = prefix + args[0].split('\\n').join('\\n' + prefix);\n    args.push('\\u001b[3' + c + 'm+' + exports.humanize(this.diff) + '\\u001b[0m');\n  } else {\n    args[0] = new Date().toUTCString()\n      + ' ' + name + ' ' + args[0];\n  }\n}\n\n/**\n * Invokes `util.format()` with the specified arguments and writes to `stream`.\n */\n\nfunction log() {\n  return stream.write(util.format.apply(util, arguments) + '\\n');\n}\n\n/**\n * Save `namespaces`.\n *\n * @param {String} namespaces\n * @api private\n */\n\nfunction save(namespaces) {\n  if (null == namespaces) {\n    // If you set a process.env field to null or undefined, it gets cast to the\n    // string 'null' or 'undefined'. Just delete instead.\n    delete process.env.DEBUG;\n  } else {\n    process.env.DEBUG = namespaces;\n  }\n}\n\n/**\n * Load `namespaces`.\n *\n * @return {String} returns the previously persisted debug modes\n * @api private\n */\n\nfunction load() {\n  return process.env.DEBUG;\n}\n\n/**\n * Copied from `node/src/node.js`.\n *\n * XXX: It's lame that node doesn't expose this API out-of-the-box. It also\n * relies on the undocumented `tty_wrap.guessHandleType()` which is also lame.\n */\n\nfunction createWritableStdioStream (fd) {\n  var stream;\n  var tty_wrap = process.binding('tty_wrap');\n\n  // Note stream._type is used for test-module-load-list.js\n\n  switch (tty_wrap.guessHandleType(fd)) {\n    case 'TTY':\n      stream = new tty.WriteStream(fd);\n      stream._type = 'tty';\n\n      // Hack to have stream not keep the event loop alive.\n      // See https://github.com/joyent/node/issues/1726\n      if (stream._handle && stream._handle.unref) {\n        stream._handle.unref();\n      }\n      break;\n\n    case 'FILE':\n      var fs = require('fs');\n      stream = new fs.SyncWriteStream(fd, { autoClose: false });\n      stream._type = 'fs';\n      break;\n\n    case 'PIPE':\n    case 'TCP':\n      var net = require('net');\n      stream = new net.Socket({\n        fd: fd,\n        readable: false,\n        writable: true\n      });\n\n      // FIXME Should probably have an option in net.Socket to create a\n      // stream from an existing fd which is writable only. But for now\n      // we'll just add this hack and set the `readable` member to false.\n      // Test: ./node test/fixtures/echo.js < /etc/passwd\n      stream.readable = false;\n      stream.read = null;\n      stream._type = 'pipe';\n\n      // FIXME Hack to have stream not keep the event loop alive.\n      // See https://github.com/joyent/node/issues/1726\n      if (stream._handle && stream._handle.unref) {\n        stream._handle.unref();\n      }\n      break;\n\n    default:\n      // Probably an error on in uv_guess_handle()\n      throw new Error('Implement me. Unknown stream file type!');\n  }\n\n  // For supporting legacy API we put the FD here.\n  stream.fd = fd;\n\n  stream._isStdio = true;\n\n  return stream;\n}\n\n/**\n * Init logic for `debug` instances.\n *\n * Create a new `inspectOpts` object in case `useColors` is set\n * differently for a particular `debug` instance.\n */\n\nfunction init (debug) {\n  debug.inspectOpts = {};\n\n  var keys = Object.keys(exports.inspectOpts);\n  for (var i = 0; i < keys.length; i++) {\n    debug.inspectOpts[keys[i]] = exports.inspectOpts[keys[i]];\n  }\n}\n\n/**\n * Enable namespaces listed in `process.env.DEBUG` initially.\n */\n\nexports.enable(load());\n","/**\n * Helpers.\n */\n\nvar s = 1000;\nvar m = s * 60;\nvar h = m * 60;\nvar d = h * 24;\nvar y = d * 365.25;\n\n/**\n * Parse or format the given `val`.\n *\n * Options:\n *\n *  - `long` verbose formatting [false]\n *\n * @param {String|Number} val\n * @param {Object} [options]\n * @throws {Error} throw an error if val is not a non-empty string or a number\n * @return {String|Number}\n * @api public\n */\n\nmodule.exports = function(val, options) {\n  options = options || {};\n  var type = typeof val;\n  if (type === 'string' && val.length > 0) {\n    return parse(val);\n  } else if (type === 'number' && isNaN(val) === false) {\n    return options.long ? fmtLong(val) : fmtShort(val);\n  }\n  throw new Error(\n    'val is not a non-empty string or a valid number. val=' +\n      JSON.stringify(val)\n  );\n};\n\n/**\n * Parse the given `str` and return milliseconds.\n *\n * @param {String} str\n * @return {Number}\n * @api private\n */\n\nfunction parse(str) {\n  str = String(str);\n  if (str.length > 100) {\n    return;\n  }\n  var match = /^((?:\\d+)?\\.?\\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|years?|yrs?|y)?$/i.exec(\n    str\n  );\n  if (!match) {\n    return;\n  }\n  var n = parseFloat(match[1]);\n  var type = (match[2] || 'ms').toLowerCase();\n  switch (type) {\n    case 'years':\n    case 'year':\n    case 'yrs':\n    case 'yr':\n    case 'y':\n      return n * y;\n    case 'days':\n    case 'day':\n    case 'd':\n      return n * d;\n    case 'hours':\n    case 'hour':\n    case 'hrs':\n    case 'hr':\n    case 'h':\n      return n * h;\n    case 'minutes':\n    case 'minute':\n    case 'mins':\n    case 'min':\n    case 'm':\n      return n * m;\n    case 'seconds':\n    case 'second':\n    case 'secs':\n    case 'sec':\n    case 's':\n      return n * s;\n    case 'milliseconds':\n    case 'millisecond':\n    case 'msecs':\n    case 'msec':\n    case 'ms':\n      return n;\n    default:\n      return undefined;\n  }\n}\n\n/**\n * Short format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtShort(ms) {\n  if (ms >= d) {\n    return Math.round(ms / d) + 'd';\n  }\n  if (ms >= h) {\n    return Math.round(ms / h) + 'h';\n  }\n  if (ms >= m) {\n    return Math.round(ms / m) + 'm';\n  }\n  if (ms >= s) {\n    return Math.round(ms / s) + 's';\n  }\n  return ms + 'ms';\n}\n\n/**\n * Long format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtLong(ms) {\n  return plural(ms, d, 'day') ||\n    plural(ms, h, 'hour') ||\n    plural(ms, m, 'minute') ||\n    plural(ms, s, 'second') ||\n    ms + ' ms';\n}\n\n/**\n * Pluralization helper.\n */\n\nfunction plural(ms, n, name) {\n  if (ms < n) {\n    return;\n  }\n  if (ms < n * 1.5) {\n    return Math.floor(ms / n) + ' ' + name;\n  }\n  return Math.ceil(ms / n) + ' ' + name + 's';\n}\n","/*! safe-buffer. MIT License. Feross Aboukhadijeh <https://feross.org/opensource> */\n/* eslint-disable node/no-deprecated-api */\nvar buffer = require('buffer')\nvar Buffer = buffer.Buffer\n\n// alternative to using Object.keys for old browsers\nfunction copyProps (src, dst) {\n  for (var key in src) {\n    dst[key] = src[key]\n  }\n}\nif (Buffer.from && Buffer.alloc && Buffer.allocUnsafe && Buffer.allocUnsafeSlow) {\n  module.exports = buffer\n} else {\n  // Copy properties from require('buffer')\n  copyProps(buffer, exports)\n  exports.Buffer = SafeBuffer\n}\n\nfunction SafeBuffer (arg, encodingOrOffset, length) {\n  return Buffer(arg, encodingOrOffset, length)\n}\n\nSafeBuffer.prototype = Object.create(Buffer.prototype)\n\n// Copy static methods from Buffer\ncopyProps(Buffer, SafeBuffer)\n\nSafeBuffer.from = function (arg, encodingOrOffset, length) {\n  if (typeof arg === 'number') {\n    throw new TypeError('Argument must not be a number')\n  }\n  return Buffer(arg, encodingOrOffset, length)\n}\n\nSafeBuffer.alloc = function (size, fill, encoding) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  var buf = Buffer(size)\n  if (fill !== undefined) {\n    if (typeof encoding === 'string') {\n      buf.fill(fill, encoding)\n    } else {\n      buf.fill(fill)\n    }\n  } else {\n    buf.fill(0)\n  }\n  return buf\n}\n\nSafeBuffer.allocUnsafe = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return Buffer(size)\n}\n\nSafeBuffer.allocUnsafeSlow = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return buffer.SlowBuffer(size)\n}\n","/*!\n * finalhandler\n * Copyright(c) 2014-2022 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * Module dependencies.\n * @private\n */\n\nvar debug = require('debug')('finalhandler')\nvar encodeUrl = require('encodeurl')\nvar escapeHtml = require('escape-html')\nvar onFinished = require('on-finished')\nvar parseUrl = require('parseurl')\nvar statuses = require('statuses')\nvar unpipe = require('unpipe')\n\n/**\n * Module variables.\n * @private\n */\n\nvar DOUBLE_SPACE_REGEXP = /\\x20{2}/g\nvar NEWLINE_REGEXP = /\\n/g\n\n/* istanbul ignore next */\nvar defer = typeof setImmediate === 'function'\n  ? setImmediate\n  : function (fn) { process.nextTick(fn.bind.apply(fn, arguments)) }\nvar isFinished = onFinished.isFinished\n\n/**\n * Create a minimal HTML document.\n *\n * @param {string} message\n * @private\n */\n\nfunction createHtmlDocument (message) {\n  var body = escapeHtml(message)\n    .replace(NEWLINE_REGEXP, '<br>')\n    .replace(DOUBLE_SPACE_REGEXP, ' &nbsp;')\n\n  return '<!DOCTYPE html>\\n' +\n    '<html lang=\"en\">\\n' +\n    '<head>\\n' +\n    '<meta charset=\"utf-8\">\\n' +\n    '<title>Error</title>\\n' +\n    '</head>\\n' +\n    '<body>\\n' +\n    '<pre>' + body + '</pre>\\n' +\n    '</body>\\n' +\n    '</html>\\n'\n}\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = finalhandler\n\n/**\n * Create a function to handle the final response.\n *\n * @param {Request} req\n * @param {Response} res\n * @param {Object} [options]\n * @return {Function}\n * @public\n */\n\nfunction finalhandler (req, res, options) {\n  var opts = options || {}\n\n  // get environment\n  var env = opts.env || process.env.NODE_ENV || 'development'\n\n  // get error callback\n  var onerror = opts.onerror\n\n  return function (err) {\n    var headers\n    var msg\n    var status\n\n    // ignore 404 on in-flight response\n    if (!err && headersSent(res)) {\n      debug('cannot 404 after headers sent')\n      return\n    }\n\n    // unhandled error\n    if (err) {\n      // respect status code from error\n      status = getErrorStatusCode(err)\n\n      if (status === undefined) {\n        // fallback to status code on response\n        status = getResponseStatusCode(res)\n      } else {\n        // respect headers from error\n        headers = getErrorHeaders(err)\n      }\n\n      // get error message\n      msg = getErrorMessage(err, status, env)\n    } else {\n      // not found\n      status = 404\n      msg = 'Cannot ' + req.method + ' ' + encodeUrl(getResourceName(req))\n    }\n\n    debug('default %s', status)\n\n    // schedule onerror callback\n    if (err && onerror) {\n      defer(onerror, err, req, res)\n    }\n\n    // cannot actually respond\n    if (headersSent(res)) {\n      debug('cannot %d after headers sent', status)\n      req.socket.destroy()\n      return\n    }\n\n    // send response\n    send(req, res, status, headers, msg)\n  }\n}\n\n/**\n * Get headers from Error object.\n *\n * @param {Error} err\n * @return {object}\n * @private\n */\n\nfunction getErrorHeaders (err) {\n  if (!err.headers || typeof err.headers !== 'object') {\n    return undefined\n  }\n\n  var headers = Object.create(null)\n  var keys = Object.keys(err.headers)\n\n  for (var i = 0; i < keys.length; i++) {\n    var key = keys[i]\n    headers[key] = err.headers[key]\n  }\n\n  return headers\n}\n\n/**\n * Get message from Error object, fallback to status message.\n *\n * @param {Error} err\n * @param {number} status\n * @param {string} env\n * @return {string}\n * @private\n */\n\nfunction getErrorMessage (err, status, env) {\n  var msg\n\n  if (env !== 'production') {\n    // use err.stack, which typically includes err.message\n    msg = err.stack\n\n    // fallback to err.toString() when possible\n    if (!msg && typeof err.toString === 'function') {\n      msg = err.toString()\n    }\n  }\n\n  return msg || statuses.message[status]\n}\n\n/**\n * Get status code from Error object.\n *\n * @param {Error} err\n * @return {number}\n * @private\n */\n\nfunction getErrorStatusCode (err) {\n  // check err.status\n  if (typeof err.status === 'number' && err.status >= 400 && err.status < 600) {\n    return err.status\n  }\n\n  // check err.statusCode\n  if (typeof err.statusCode === 'number' && err.statusCode >= 400 && err.statusCode < 600) {\n    return err.statusCode\n  }\n\n  return undefined\n}\n\n/**\n * Get resource name for the request.\n *\n * This is typically just the original pathname of the request\n * but will fallback to \"resource\" is that cannot be determined.\n *\n * @param {IncomingMessage} req\n * @return {string}\n * @private\n */\n\nfunction getResourceName (req) {\n  try {\n    return parseUrl.original(req).pathname\n  } catch (e) {\n    return 'resource'\n  }\n}\n\n/**\n * Get status code from response.\n *\n * @param {OutgoingMessage} res\n * @return {number}\n * @private\n */\n\nfunction getResponseStatusCode (res) {\n  var status = res.statusCode\n\n  // default status code to 500 if outside valid range\n  if (typeof status !== 'number' || status < 400 || status > 599) {\n    status = 500\n  }\n\n  return status\n}\n\n/**\n * Determine if the response headers have been sent.\n *\n * @param {object} res\n * @returns {boolean}\n * @private\n */\n\nfunction headersSent (res) {\n  return typeof res.headersSent !== 'boolean'\n    ? Boolean(res._header)\n    : res.headersSent\n}\n\n/**\n * Send response.\n *\n * @param {IncomingMessage} req\n * @param {OutgoingMessage} res\n * @param {number} status\n * @param {object} headers\n * @param {string} message\n * @private\n */\n\nfunction send (req, res, status, headers, message) {\n  function write () {\n    // response body\n    var body = createHtmlDocument(message)\n\n    // response status\n    res.statusCode = status\n    res.statusMessage = statuses.message[status]\n\n    // remove any content headers\n    res.removeHeader('Content-Encoding')\n    res.removeHeader('Content-Language')\n    res.removeHeader('Content-Range')\n\n    // response headers\n    setHeaders(res, headers)\n\n    // security headers\n    res.setHeader('Content-Security-Policy', \"default-src 'none'\")\n    res.setHeader('X-Content-Type-Options', 'nosniff')\n\n    // standard headers\n    res.setHeader('Content-Type', 'text/html; charset=utf-8')\n    res.setHeader('Content-Length', Buffer.byteLength(body, 'utf8'))\n\n    if (req.method === 'HEAD') {\n      res.end()\n      return\n    }\n\n    res.end(body, 'utf8')\n  }\n\n  if (isFinished(req)) {\n    write()\n    return\n  }\n\n  // unpipe everything from the request\n  unpipe(req)\n\n  // flush the request\n  onFinished(req, write)\n  req.resume()\n}\n\n/**\n * Set response headers from an object.\n *\n * @param {OutgoingMessage} res\n * @param {object} headers\n * @private\n */\n\nfunction setHeaders (res, headers) {\n  if (!headers) {\n    return\n  }\n\n  var keys = Object.keys(headers)\n  for (var i = 0; i < keys.length; i++) {\n    var key = keys[i]\n    res.setHeader(key, headers[key])\n  }\n}\n","/**\n * This is the web browser implementation of `debug()`.\n *\n * Expose `debug()` as the module.\n */\n\nexports = module.exports = require('./debug');\nexports.log = log;\nexports.formatArgs = formatArgs;\nexports.save = save;\nexports.load = load;\nexports.useColors = useColors;\nexports.storage = 'undefined' != typeof chrome\n               && 'undefined' != typeof chrome.storage\n                  ? chrome.storage.local\n                  : localstorage();\n\n/**\n * Colors.\n */\n\nexports.colors = [\n  'lightseagreen',\n  'forestgreen',\n  'goldenrod',\n  'dodgerblue',\n  'darkorchid',\n  'crimson'\n];\n\n/**\n * Currently only WebKit-based Web Inspectors, Firefox >= v31,\n * and the Firebug extension (any Firefox version) are known\n * to support \"%c\" CSS customizations.\n *\n * TODO: add a `localStorage` variable to explicitly enable/disable colors\n */\n\nfunction useColors() {\n  // NB: In an Electron preload script, document will be defined but not fully\n  // initialized. Since we know we're in Chrome, we'll just detect this case\n  // explicitly\n  if (typeof window !== 'undefined' && window.process && window.process.type === 'renderer') {\n    return true;\n  }\n\n  // is webkit? http://stackoverflow.com/a/16459606/376773\n  // document is undefined in react-native: https://github.com/facebook/react-native/pull/1632\n  return (typeof document !== 'undefined' && document.documentElement && document.documentElement.style && document.documentElement.style.WebkitAppearance) ||\n    // is firebug? http://stackoverflow.com/a/398120/376773\n    (typeof window !== 'undefined' && window.console && (window.console.firebug || (window.console.exception && window.console.table))) ||\n    // is firefox >= v31?\n    // https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages\n    (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/firefox\\/(\\d+)/) && parseInt(RegExp.$1, 10) >= 31) ||\n    // double check webkit in userAgent just in case we are in a worker\n    (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/applewebkit\\/(\\d+)/));\n}\n\n/**\n * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.\n */\n\nexports.formatters.j = function(v) {\n  try {\n    return JSON.stringify(v);\n  } catch (err) {\n    return '[UnexpectedJSONParseError]: ' + err.message;\n  }\n};\n\n\n/**\n * Colorize log arguments if enabled.\n *\n * @api public\n */\n\nfunction formatArgs(args) {\n  var useColors = this.useColors;\n\n  args[0] = (useColors ? '%c' : '')\n    + this.namespace\n    + (useColors ? ' %c' : ' ')\n    + args[0]\n    + (useColors ? '%c ' : ' ')\n    + '+' + exports.humanize(this.diff);\n\n  if (!useColors) return;\n\n  var c = 'color: ' + this.color;\n  args.splice(1, 0, c, 'color: inherit')\n\n  // the final \"%c\" is somewhat tricky, because there could be other\n  // arguments passed either before or after the %c, so we need to\n  // figure out the correct index to insert the CSS into\n  var index = 0;\n  var lastC = 0;\n  args[0].replace(/%[a-zA-Z%]/g, function(match) {\n    if ('%%' === match) return;\n    index++;\n    if ('%c' === match) {\n      // we only are interested in the *last* %c\n      // (the user may have provided their own)\n      lastC = index;\n    }\n  });\n\n  args.splice(lastC, 0, c);\n}\n\n/**\n * Invokes `console.log()` when available.\n * No-op when `console.log` is not a \"function\".\n *\n * @api public\n */\n\nfunction log() {\n  // this hackery is required for IE8/9, where\n  // the `console.log` function doesn't have 'apply'\n  return 'object' === typeof console\n    && console.log\n    && Function.prototype.apply.call(console.log, console, arguments);\n}\n\n/**\n * Save `namespaces`.\n *\n * @param {String} namespaces\n * @api private\n */\n\nfunction save(namespaces) {\n  try {\n    if (null == namespaces) {\n      exports.storage.removeItem('debug');\n    } else {\n      exports.storage.debug = namespaces;\n    }\n  } catch(e) {}\n}\n\n/**\n * Load `namespaces`.\n *\n * @return {String} returns the previously persisted debug modes\n * @api private\n */\n\nfunction load() {\n  var r;\n  try {\n    r = exports.storage.debug;\n  } catch(e) {}\n\n  // If debug isn't set in LS, and we're in Electron, try to load $DEBUG\n  if (!r && typeof process !== 'undefined' && 'env' in process) {\n    r = process.env.DEBUG;\n  }\n\n  return r;\n}\n\n/**\n * Enable namespaces listed in `localStorage.debug` initially.\n */\n\nexports.enable(load());\n\n/**\n * Localstorage attempts to return the localstorage.\n *\n * This is necessary because safari throws\n * when a user disables cookies/localstorage\n * and you attempt to access it.\n *\n * @return {LocalStorage}\n * @api private\n */\n\nfunction localstorage() {\n  try {\n    return window.localStorage;\n  } catch (e) {}\n}\n","\n/**\n * This is the common logic for both the Node.js and web browser\n * implementations of `debug()`.\n *\n * Expose `debug()` as the module.\n */\n\nexports = module.exports = createDebug.debug = createDebug['default'] = createDebug;\nexports.coerce = coerce;\nexports.disable = disable;\nexports.enable = enable;\nexports.enabled = enabled;\nexports.humanize = require('ms');\n\n/**\n * The currently active debug mode names, and names to skip.\n */\n\nexports.names = [];\nexports.skips = [];\n\n/**\n * Map of special \"%n\" handling functions, for the debug \"format\" argument.\n *\n * Valid key names are a single, lower or upper-case letter, i.e. \"n\" and \"N\".\n */\n\nexports.formatters = {};\n\n/**\n * Previous log timestamp.\n */\n\nvar prevTime;\n\n/**\n * Select a color.\n * @param {String} namespace\n * @return {Number}\n * @api private\n */\n\nfunction selectColor(namespace) {\n  var hash = 0, i;\n\n  for (i in namespace) {\n    hash  = ((hash << 5) - hash) + namespace.charCodeAt(i);\n    hash |= 0; // Convert to 32bit integer\n  }\n\n  return exports.colors[Math.abs(hash) % exports.colors.length];\n}\n\n/**\n * Create a debugger with the given `namespace`.\n *\n * @param {String} namespace\n * @return {Function}\n * @api public\n */\n\nfunction createDebug(namespace) {\n\n  function debug() {\n    // disabled?\n    if (!debug.enabled) return;\n\n    var self = debug;\n\n    // set `diff` timestamp\n    var curr = +new Date();\n    var ms = curr - (prevTime || curr);\n    self.diff = ms;\n    self.prev = prevTime;\n    self.curr = curr;\n    prevTime = curr;\n\n    // turn the `arguments` into a proper Array\n    var args = new Array(arguments.length);\n    for (var i = 0; i < args.length; i++) {\n      args[i] = arguments[i];\n    }\n\n    args[0] = exports.coerce(args[0]);\n\n    if ('string' !== typeof args[0]) {\n      // anything else let's inspect with %O\n      args.unshift('%O');\n    }\n\n    // apply any `formatters` transformations\n    var index = 0;\n    args[0] = args[0].replace(/%([a-zA-Z%])/g, function(match, format) {\n      // if we encounter an escaped % then don't increase the array index\n      if (match === '%%') return match;\n      index++;\n      var formatter = exports.formatters[format];\n      if ('function' === typeof formatter) {\n        var val = args[index];\n        match = formatter.call(self, val);\n\n        // now we need to remove `args[index]` since it's inlined in the `format`\n        args.splice(index, 1);\n        index--;\n      }\n      return match;\n    });\n\n    // apply env-specific formatting (colors, etc.)\n    exports.formatArgs.call(self, args);\n\n    var logFn = debug.log || exports.log || console.log.bind(console);\n    logFn.apply(self, args);\n  }\n\n  debug.namespace = namespace;\n  debug.enabled = exports.enabled(namespace);\n  debug.useColors = exports.useColors();\n  debug.color = selectColor(namespace);\n\n  // env-specific initialization logic for debug instances\n  if ('function' === typeof exports.init) {\n    exports.init(debug);\n  }\n\n  return debug;\n}\n\n/**\n * Enables a debug mode by namespaces. This can include modes\n * separated by a colon and wildcards.\n *\n * @param {String} namespaces\n * @api public\n */\n\nfunction enable(namespaces) {\n  exports.save(namespaces);\n\n  exports.names = [];\n  exports.skips = [];\n\n  var split = (typeof namespaces === 'string' ? namespaces : '').split(/[\\s,]+/);\n  var len = split.length;\n\n  for (var i = 0; i < len; i++) {\n    if (!split[i]) continue; // ignore empty strings\n    namespaces = split[i].replace(/\\*/g, '.*?');\n    if (namespaces[0] === '-') {\n      exports.skips.push(new RegExp('^' + namespaces.substr(1) + '$'));\n    } else {\n      exports.names.push(new RegExp('^' + namespaces + '$'));\n    }\n  }\n}\n\n/**\n * Disable debug output.\n *\n * @api public\n */\n\nfunction disable() {\n  exports.enable('');\n}\n\n/**\n * Returns true if the given mode name is enabled, false otherwise.\n *\n * @param {String} name\n * @return {Boolean}\n * @api public\n */\n\nfunction enabled(name) {\n  var i, len;\n  for (i = 0, len = exports.skips.length; i < len; i++) {\n    if (exports.skips[i].test(name)) {\n      return false;\n    }\n  }\n  for (i = 0, len = exports.names.length; i < len; i++) {\n    if (exports.names[i].test(name)) {\n      return true;\n    }\n  }\n  return false;\n}\n\n/**\n * Coerce `val`.\n *\n * @param {Mixed} val\n * @return {Mixed}\n * @api private\n */\n\nfunction coerce(val) {\n  if (val instanceof Error) return val.stack || val.message;\n  return val;\n}\n","/**\n * Detect Electron renderer process, which is node, but we should\n * treat as a browser.\n */\n\nif (typeof process !== 'undefined' && process.type === 'renderer') {\n  module.exports = require('./browser.js');\n} else {\n  module.exports = require('./node.js');\n}\n","/**\n * Module dependencies.\n */\n\nvar tty = require('tty');\nvar util = require('util');\n\n/**\n * This is the Node.js implementation of `debug()`.\n *\n * Expose `debug()` as the module.\n */\n\nexports = module.exports = require('./debug');\nexports.init = init;\nexports.log = log;\nexports.formatArgs = formatArgs;\nexports.save = save;\nexports.load = load;\nexports.useColors = useColors;\n\n/**\n * Colors.\n */\n\nexports.colors = [6, 2, 3, 4, 5, 1];\n\n/**\n * Build up the default `inspectOpts` object from the environment variables.\n *\n *   $ DEBUG_COLORS=no DEBUG_DEPTH=10 DEBUG_SHOW_HIDDEN=enabled node script.js\n */\n\nexports.inspectOpts = Object.keys(process.env).filter(function (key) {\n  return /^debug_/i.test(key);\n}).reduce(function (obj, key) {\n  // camel-case\n  var prop = key\n    .substring(6)\n    .toLowerCase()\n    .replace(/_([a-z])/g, function (_, k) { return k.toUpperCase() });\n\n  // coerce string value into JS value\n  var val = process.env[key];\n  if (/^(yes|on|true|enabled)$/i.test(val)) val = true;\n  else if (/^(no|off|false|disabled)$/i.test(val)) val = false;\n  else if (val === 'null') val = null;\n  else val = Number(val);\n\n  obj[prop] = val;\n  return obj;\n}, {});\n\n/**\n * The file descriptor to write the `debug()` calls to.\n * Set the `DEBUG_FD` env variable to override with another value. i.e.:\n *\n *   $ DEBUG_FD=3 node script.js 3>debug.log\n */\n\nvar fd = parseInt(process.env.DEBUG_FD, 10) || 2;\n\nif (1 !== fd && 2 !== fd) {\n  util.deprecate(function(){}, 'except for stderr(2) and stdout(1), any other usage of DEBUG_FD is deprecated. Override debug.log if you want to use a different log function (https://git.io/debug_fd)')()\n}\n\nvar stream = 1 === fd ? process.stdout :\n             2 === fd ? process.stderr :\n             createWritableStdioStream(fd);\n\n/**\n * Is stdout a TTY? Colored output is enabled when `true`.\n */\n\nfunction useColors() {\n  return 'colors' in exports.inspectOpts\n    ? Boolean(exports.inspectOpts.colors)\n    : tty.isatty(fd);\n}\n\n/**\n * Map %o to `util.inspect()`, all on a single line.\n */\n\nexports.formatters.o = function(v) {\n  this.inspectOpts.colors = this.useColors;\n  return util.inspect(v, this.inspectOpts)\n    .split('\\n').map(function(str) {\n      return str.trim()\n    }).join(' ');\n};\n\n/**\n * Map %o to `util.inspect()`, allowing multiple lines if needed.\n */\n\nexports.formatters.O = function(v) {\n  this.inspectOpts.colors = this.useColors;\n  return util.inspect(v, this.inspectOpts);\n};\n\n/**\n * Adds ANSI color escape codes if enabled.\n *\n * @api public\n */\n\nfunction formatArgs(args) {\n  var name = this.namespace;\n  var useColors = this.useColors;\n\n  if (useColors) {\n    var c = this.color;\n    var prefix = '  \\u001b[3' + c + ';1m' + name + ' ' + '\\u001b[0m';\n\n    args[0] = prefix + args[0].split('\\n').join('\\n' + prefix);\n    args.push('\\u001b[3' + c + 'm+' + exports.humanize(this.diff) + '\\u001b[0m');\n  } else {\n    args[0] = new Date().toUTCString()\n      + ' ' + name + ' ' + args[0];\n  }\n}\n\n/**\n * Invokes `util.format()` with the specified arguments and writes to `stream`.\n */\n\nfunction log() {\n  return stream.write(util.format.apply(util, arguments) + '\\n');\n}\n\n/**\n * Save `namespaces`.\n *\n * @param {String} namespaces\n * @api private\n */\n\nfunction save(namespaces) {\n  if (null == namespaces) {\n    // If you set a process.env field to null or undefined, it gets cast to the\n    // string 'null' or 'undefined'. Just delete instead.\n    delete process.env.DEBUG;\n  } else {\n    process.env.DEBUG = namespaces;\n  }\n}\n\n/**\n * Load `namespaces`.\n *\n * @return {String} returns the previously persisted debug modes\n * @api private\n */\n\nfunction load() {\n  return process.env.DEBUG;\n}\n\n/**\n * Copied from `node/src/node.js`.\n *\n * XXX: It's lame that node doesn't expose this API out-of-the-box. It also\n * relies on the undocumented `tty_wrap.guessHandleType()` which is also lame.\n */\n\nfunction createWritableStdioStream (fd) {\n  var stream;\n  var tty_wrap = process.binding('tty_wrap');\n\n  // Note stream._type is used for test-module-load-list.js\n\n  switch (tty_wrap.guessHandleType(fd)) {\n    case 'TTY':\n      stream = new tty.WriteStream(fd);\n      stream._type = 'tty';\n\n      // Hack to have stream not keep the event loop alive.\n      // See https://github.com/joyent/node/issues/1726\n      if (stream._handle && stream._handle.unref) {\n        stream._handle.unref();\n      }\n      break;\n\n    case 'FILE':\n      var fs = require('fs');\n      stream = new fs.SyncWriteStream(fd, { autoClose: false });\n      stream._type = 'fs';\n      break;\n\n    case 'PIPE':\n    case 'TCP':\n      var net = require('net');\n      stream = new net.Socket({\n        fd: fd,\n        readable: false,\n        writable: true\n      });\n\n      // FIXME Should probably have an option in net.Socket to create a\n      // stream from an existing fd which is writable only. But for now\n      // we'll just add this hack and set the `readable` member to false.\n      // Test: ./node test/fixtures/echo.js < /etc/passwd\n      stream.readable = false;\n      stream.read = null;\n      stream._type = 'pipe';\n\n      // FIXME Hack to have stream not keep the event loop alive.\n      // See https://github.com/joyent/node/issues/1726\n      if (stream._handle && stream._handle.unref) {\n        stream._handle.unref();\n      }\n      break;\n\n    default:\n      // Probably an error on in uv_guess_handle()\n      throw new Error('Implement me. Unknown stream file type!');\n  }\n\n  // For supporting legacy API we put the FD here.\n  stream.fd = fd;\n\n  stream._isStdio = true;\n\n  return stream;\n}\n\n/**\n * Init logic for `debug` instances.\n *\n * Create a new `inspectOpts` object in case `useColors` is set\n * differently for a particular `debug` instance.\n */\n\nfunction init (debug) {\n  debug.inspectOpts = {};\n\n  var keys = Object.keys(exports.inspectOpts);\n  for (var i = 0; i < keys.length; i++) {\n    debug.inspectOpts[keys[i]] = exports.inspectOpts[keys[i]];\n  }\n}\n\n/**\n * Enable namespaces listed in `process.env.DEBUG` initially.\n */\n\nexports.enable(load());\n","/**\n * Helpers.\n */\n\nvar s = 1000;\nvar m = s * 60;\nvar h = m * 60;\nvar d = h * 24;\nvar y = d * 365.25;\n\n/**\n * Parse or format the given `val`.\n *\n * Options:\n *\n *  - `long` verbose formatting [false]\n *\n * @param {String|Number} val\n * @param {Object} [options]\n * @throws {Error} throw an error if val is not a non-empty string or a number\n * @return {String|Number}\n * @api public\n */\n\nmodule.exports = function(val, options) {\n  options = options || {};\n  var type = typeof val;\n  if (type === 'string' && val.length > 0) {\n    return parse(val);\n  } else if (type === 'number' && isNaN(val) === false) {\n    return options.long ? fmtLong(val) : fmtShort(val);\n  }\n  throw new Error(\n    'val is not a non-empty string or a valid number. val=' +\n      JSON.stringify(val)\n  );\n};\n\n/**\n * Parse the given `str` and return milliseconds.\n *\n * @param {String} str\n * @return {Number}\n * @api private\n */\n\nfunction parse(str) {\n  str = String(str);\n  if (str.length > 100) {\n    return;\n  }\n  var match = /^((?:\\d+)?\\.?\\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|years?|yrs?|y)?$/i.exec(\n    str\n  );\n  if (!match) {\n    return;\n  }\n  var n = parseFloat(match[1]);\n  var type = (match[2] || 'ms').toLowerCase();\n  switch (type) {\n    case 'years':\n    case 'year':\n    case 'yrs':\n    case 'yr':\n    case 'y':\n      return n * y;\n    case 'days':\n    case 'day':\n    case 'd':\n      return n * d;\n    case 'hours':\n    case 'hour':\n    case 'hrs':\n    case 'hr':\n    case 'h':\n      return n * h;\n    case 'minutes':\n    case 'minute':\n    case 'mins':\n    case 'min':\n    case 'm':\n      return n * m;\n    case 'seconds':\n    case 'second':\n    case 'secs':\n    case 'sec':\n    case 's':\n      return n * s;\n    case 'milliseconds':\n    case 'millisecond':\n    case 'msecs':\n    case 'msec':\n    case 'ms':\n      return n;\n    default:\n      return undefined;\n  }\n}\n\n/**\n * Short format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtShort(ms) {\n  if (ms >= d) {\n    return Math.round(ms / d) + 'd';\n  }\n  if (ms >= h) {\n    return Math.round(ms / h) + 'h';\n  }\n  if (ms >= m) {\n    return Math.round(ms / m) + 'm';\n  }\n  if (ms >= s) {\n    return Math.round(ms / s) + 's';\n  }\n  return ms + 'ms';\n}\n\n/**\n * Long format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtLong(ms) {\n  return plural(ms, d, 'day') ||\n    plural(ms, h, 'hour') ||\n    plural(ms, m, 'minute') ||\n    plural(ms, s, 'second') ||\n    ms + ' ms';\n}\n\n/**\n * Pluralization helper.\n */\n\nfunction plural(ms, n, name) {\n  if (ms < n) {\n    return;\n  }\n  if (ms < n * 1.5) {\n    return Math.floor(ms / n) + ' ' + name;\n  }\n  return Math.ceil(ms / n) + ' ' + name + 's';\n}\n","/*!\n * forwarded\n * Copyright(c) 2014-2017 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = forwarded\n\n/**\n * Get all addresses in the request, using the `X-Forwarded-For` header.\n *\n * @param {object} req\n * @return {array}\n * @public\n */\n\nfunction forwarded (req) {\n  if (!req) {\n    throw new TypeError('argument req is required')\n  }\n\n  // simple header parsing\n  var proxyAddrs = parse(req.headers['x-forwarded-for'] || '')\n  var socketAddr = getSocketAddr(req)\n  var addrs = [socketAddr].concat(proxyAddrs)\n\n  // return all addresses\n  return addrs\n}\n\n/**\n * Get the socket address for a request.\n *\n * @param {object} req\n * @return {string}\n * @private\n */\n\nfunction getSocketAddr (req) {\n  return req.socket\n    ? req.socket.remoteAddress\n    : req.connection.remoteAddress\n}\n\n/**\n * Parse the X-Forwarded-For header.\n *\n * @param {string} header\n * @private\n */\n\nfunction parse (header) {\n  var end = header.length\n  var list = []\n  var start = header.length\n\n  // gather addresses, backwards\n  for (var i = header.length - 1; i >= 0; i--) {\n    switch (header.charCodeAt(i)) {\n      case 0x20: /*   */\n        if (start === end) {\n          start = end = i\n        }\n        break\n      case 0x2c: /* , */\n        if (start !== end) {\n          list.push(header.substring(start, end))\n        }\n        start = end = i\n        break\n      default:\n        start = i\n        break\n    }\n  }\n\n  // final address\n  if (start !== end) {\n    list.push(header.substring(start, end))\n  }\n\n  return list\n}\n","/*!\n * fresh\n * Copyright(c) 2012 TJ Holowaychuk\n * Copyright(c) 2016-2017 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * RegExp to check for no-cache token in Cache-Control.\n * @private\n */\n\nvar CACHE_CONTROL_NO_CACHE_REGEXP = /(?:^|,)\\s*?no-cache\\s*?(?:,|$)/\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = fresh\n\n/**\n * Check freshness of the response using request and response headers.\n *\n * @param {Object} reqHeaders\n * @param {Object} resHeaders\n * @return {Boolean}\n * @public\n */\n\nfunction fresh (reqHeaders, resHeaders) {\n  // fields\n  var modifiedSince = reqHeaders['if-modified-since']\n  var noneMatch = reqHeaders['if-none-match']\n\n  // unconditional request\n  if (!modifiedSince && !noneMatch) {\n    return false\n  }\n\n  // Always return stale when Cache-Control: no-cache\n  // to support end-to-end reload requests\n  // https://tools.ietf.org/html/rfc2616#section-14.9.4\n  var cacheControl = reqHeaders['cache-control']\n  if (cacheControl && CACHE_CONTROL_NO_CACHE_REGEXP.test(cacheControl)) {\n    return false\n  }\n\n  // if-none-match\n  if (noneMatch && noneMatch !== '*') {\n    var etag = resHeaders['etag']\n\n    if (!etag) {\n      return false\n    }\n\n    var etagStale = true\n    var matches = parseTokenList(noneMatch)\n    for (var i = 0; i < matches.length; i++) {\n      var match = matches[i]\n      if (match === etag || match === 'W/' + etag || 'W/' + match === etag) {\n        etagStale = false\n        break\n      }\n    }\n\n    if (etagStale) {\n      return false\n    }\n  }\n\n  // if-modified-since\n  if (modifiedSince) {\n    var lastModified = resHeaders['last-modified']\n    var modifiedStale = !lastModified || !(parseHttpDate(lastModified) <= parseHttpDate(modifiedSince))\n\n    if (modifiedStale) {\n      return false\n    }\n  }\n\n  return true\n}\n\n/**\n * Parse an HTTP Date into a number.\n *\n * @param {string} date\n * @private\n */\n\nfunction parseHttpDate (date) {\n  var timestamp = date && Date.parse(date)\n\n  // istanbul ignore next: guard against date.js Date.parse patching\n  return typeof timestamp === 'number'\n    ? timestamp\n    : NaN\n}\n\n/**\n * Parse a HTTP token list.\n *\n * @param {string} str\n * @private\n */\n\nfunction parseTokenList (str) {\n  var end = 0\n  var list = []\n  var start = 0\n\n  // gather tokens\n  for (var i = 0, len = str.length; i < len; i++) {\n    switch (str.charCodeAt(i)) {\n      case 0x20: /*   */\n        if (start === end) {\n          start = end = i + 1\n        }\n        break\n      case 0x2c: /* , */\n        list.push(str.substring(start, end))\n        start = end = i + 1\n        break\n      default:\n        end = i + 1\n        break\n    }\n  }\n\n  // final token\n  list.push(str.substring(start, end))\n\n  return list\n}\n","'use strict';\n\n/* eslint no-invalid-this: 1 */\n\nvar ERROR_MESSAGE = 'Function.prototype.bind called on incompatible ';\nvar slice = Array.prototype.slice;\nvar toStr = Object.prototype.toString;\nvar funcType = '[object Function]';\n\nmodule.exports = function bind(that) {\n    var target = this;\n    if (typeof target !== 'function' || toStr.call(target) !== funcType) {\n        throw new TypeError(ERROR_MESSAGE + target);\n    }\n    var args = slice.call(arguments, 1);\n\n    var bound;\n    var binder = function () {\n        if (this instanceof bound) {\n            var result = target.apply(\n                this,\n                args.concat(slice.call(arguments))\n            );\n            if (Object(result) === result) {\n                return result;\n            }\n            return this;\n        } else {\n            return target.apply(\n                that,\n                args.concat(slice.call(arguments))\n            );\n        }\n    };\n\n    var boundLength = Math.max(0, target.length - args.length);\n    var boundArgs = [];\n    for (var i = 0; i < boundLength; i++) {\n        boundArgs.push('$' + i);\n    }\n\n    bound = Function('binder', 'return function (' + boundArgs.join(',') + '){ return binder.apply(this,arguments); }')(binder);\n\n    if (target.prototype) {\n        var Empty = function Empty() {};\n        Empty.prototype = target.prototype;\n        bound.prototype = new Empty();\n        Empty.prototype = null;\n    }\n\n    return bound;\n};\n","'use strict';\n\nvar implementation = require('./implementation');\n\nmodule.exports = Function.prototype.bind || implementation;\n","'use strict';\n\nvar undefined;\n\nvar $SyntaxError = SyntaxError;\nvar $Function = Function;\nvar $TypeError = TypeError;\n\n// eslint-disable-next-line consistent-return\nvar getEvalledConstructor = function (expressionSyntax) {\n\ttry {\n\t\treturn $Function('\"use strict\"; return (' + expressionSyntax + ').constructor;')();\n\t} catch (e) {}\n};\n\nvar $gOPD = Object.getOwnPropertyDescriptor;\nif ($gOPD) {\n\ttry {\n\t\t$gOPD({}, '');\n\t} catch (e) {\n\t\t$gOPD = null; // this is IE 8, which has a broken gOPD\n\t}\n}\n\nvar throwTypeError = function () {\n\tthrow new $TypeError();\n};\nvar ThrowTypeError = $gOPD\n\t? (function () {\n\t\ttry {\n\t\t\t// eslint-disable-next-line no-unused-expressions, no-caller, no-restricted-properties\n\t\t\targuments.callee; // IE 8 does not throw here\n\t\t\treturn throwTypeError;\n\t\t} catch (calleeThrows) {\n\t\t\ttry {\n\t\t\t\t// IE 8 throws on Object.getOwnPropertyDescriptor(arguments, '')\n\t\t\t\treturn $gOPD(arguments, 'callee').get;\n\t\t\t} catch (gOPDthrows) {\n\t\t\t\treturn throwTypeError;\n\t\t\t}\n\t\t}\n\t}())\n\t: throwTypeError;\n\nvar hasSymbols = require('has-symbols')();\n\nvar getProto = Object.getPrototypeOf || function (x) { return x.__proto__; }; // eslint-disable-line no-proto\n\nvar needsEval = {};\n\nvar TypedArray = typeof Uint8Array === 'undefined' ? undefined : getProto(Uint8Array);\n\nvar INTRINSICS = {\n\t'%AggregateError%': typeof AggregateError === 'undefined' ? undefined : AggregateError,\n\t'%Array%': Array,\n\t'%ArrayBuffer%': typeof ArrayBuffer === 'undefined' ? undefined : ArrayBuffer,\n\t'%ArrayIteratorPrototype%': hasSymbols ? getProto([][Symbol.iterator]()) : undefined,\n\t'%AsyncFromSyncIteratorPrototype%': undefined,\n\t'%AsyncFunction%': needsEval,\n\t'%AsyncGenerator%': needsEval,\n\t'%AsyncGeneratorFunction%': needsEval,\n\t'%AsyncIteratorPrototype%': needsEval,\n\t'%Atomics%': typeof Atomics === 'undefined' ? undefined : Atomics,\n\t'%BigInt%': typeof BigInt === 'undefined' ? undefined : BigInt,\n\t'%Boolean%': Boolean,\n\t'%DataView%': typeof DataView === 'undefined' ? undefined : DataView,\n\t'%Date%': Date,\n\t'%decodeURI%': decodeURI,\n\t'%decodeURIComponent%': decodeURIComponent,\n\t'%encodeURI%': encodeURI,\n\t'%encodeURIComponent%': encodeURIComponent,\n\t'%Error%': Error,\n\t'%eval%': eval, // eslint-disable-line no-eval\n\t'%EvalError%': EvalError,\n\t'%Float32Array%': typeof Float32Array === 'undefined' ? undefined : Float32Array,\n\t'%Float64Array%': typeof Float64Array === 'undefined' ? undefined : Float64Array,\n\t'%FinalizationRegistry%': typeof FinalizationRegistry === 'undefined' ? undefined : FinalizationRegistry,\n\t'%Function%': $Function,\n\t'%GeneratorFunction%': needsEval,\n\t'%Int8Array%': typeof Int8Array === 'undefined' ? undefined : Int8Array,\n\t'%Int16Array%': typeof Int16Array === 'undefined' ? undefined : Int16Array,\n\t'%Int32Array%': typeof Int32Array === 'undefined' ? undefined : Int32Array,\n\t'%isFinite%': isFinite,\n\t'%isNaN%': isNaN,\n\t'%IteratorPrototype%': hasSymbols ? getProto(getProto([][Symbol.iterator]())) : undefined,\n\t'%JSON%': typeof JSON === 'object' ? JSON : undefined,\n\t'%Map%': typeof Map === 'undefined' ? undefined : Map,\n\t'%MapIteratorPrototype%': typeof Map === 'undefined' || !hasSymbols ? undefined : getProto(new Map()[Symbol.iterator]()),\n\t'%Math%': Math,\n\t'%Number%': Number,\n\t'%Object%': Object,\n\t'%parseFloat%': parseFloat,\n\t'%parseInt%': parseInt,\n\t'%Promise%': typeof Promise === 'undefined' ? undefined : Promise,\n\t'%Proxy%': typeof Proxy === 'undefined' ? undefined : Proxy,\n\t'%RangeError%': RangeError,\n\t'%ReferenceError%': ReferenceError,\n\t'%Reflect%': typeof Reflect === 'undefined' ? undefined : Reflect,\n\t'%RegExp%': RegExp,\n\t'%Set%': typeof Set === 'undefined' ? undefined : Set,\n\t'%SetIteratorPrototype%': typeof Set === 'undefined' || !hasSymbols ? undefined : getProto(new Set()[Symbol.iterator]()),\n\t'%SharedArrayBuffer%': typeof SharedArrayBuffer === 'undefined' ? undefined : SharedArrayBuffer,\n\t'%String%': String,\n\t'%StringIteratorPrototype%': hasSymbols ? getProto(''[Symbol.iterator]()) : undefined,\n\t'%Symbol%': hasSymbols ? Symbol : undefined,\n\t'%SyntaxError%': $SyntaxError,\n\t'%ThrowTypeError%': ThrowTypeError,\n\t'%TypedArray%': TypedArray,\n\t'%TypeError%': $TypeError,\n\t'%Uint8Array%': typeof Uint8Array === 'undefined' ? undefined : Uint8Array,\n\t'%Uint8ClampedArray%': typeof Uint8ClampedArray === 'undefined' ? undefined : Uint8ClampedArray,\n\t'%Uint16Array%': typeof Uint16Array === 'undefined' ? undefined : Uint16Array,\n\t'%Uint32Array%': typeof Uint32Array === 'undefined' ? undefined : Uint32Array,\n\t'%URIError%': URIError,\n\t'%WeakMap%': typeof WeakMap === 'undefined' ? undefined : WeakMap,\n\t'%WeakRef%': typeof WeakRef === 'undefined' ? undefined : WeakRef,\n\t'%WeakSet%': typeof WeakSet === 'undefined' ? undefined : WeakSet\n};\n\nvar doEval = function doEval(name) {\n\tvar value;\n\tif (name === '%AsyncFunction%') {\n\t\tvalue = getEvalledConstructor('async function () {}');\n\t} else if (name === '%GeneratorFunction%') {\n\t\tvalue = getEvalledConstructor('function* () {}');\n\t} else if (name === '%AsyncGeneratorFunction%') {\n\t\tvalue = getEvalledConstructor('async function* () {}');\n\t} else if (name === '%AsyncGenerator%') {\n\t\tvar fn = doEval('%AsyncGeneratorFunction%');\n\t\tif (fn) {\n\t\t\tvalue = fn.prototype;\n\t\t}\n\t} else if (name === '%AsyncIteratorPrototype%') {\n\t\tvar gen = doEval('%AsyncGenerator%');\n\t\tif (gen) {\n\t\t\tvalue = getProto(gen.prototype);\n\t\t}\n\t}\n\n\tINTRINSICS[name] = value;\n\n\treturn value;\n};\n\nvar LEGACY_ALIASES = {\n\t'%ArrayBufferPrototype%': ['ArrayBuffer', 'prototype'],\n\t'%ArrayPrototype%': ['Array', 'prototype'],\n\t'%ArrayProto_entries%': ['Array', 'prototype', 'entries'],\n\t'%ArrayProto_forEach%': ['Array', 'prototype', 'forEach'],\n\t'%ArrayProto_keys%': ['Array', 'prototype', 'keys'],\n\t'%ArrayProto_values%': ['Array', 'prototype', 'values'],\n\t'%AsyncFunctionPrototype%': ['AsyncFunction', 'prototype'],\n\t'%AsyncGenerator%': ['AsyncGeneratorFunction', 'prototype'],\n\t'%AsyncGeneratorPrototype%': ['AsyncGeneratorFunction', 'prototype', 'prototype'],\n\t'%BooleanPrototype%': ['Boolean', 'prototype'],\n\t'%DataViewPrototype%': ['DataView', 'prototype'],\n\t'%DatePrototype%': ['Date', 'prototype'],\n\t'%ErrorPrototype%': ['Error', 'prototype'],\n\t'%EvalErrorPrototype%': ['EvalError', 'prototype'],\n\t'%Float32ArrayPrototype%': ['Float32Array', 'prototype'],\n\t'%Float64ArrayPrototype%': ['Float64Array', 'prototype'],\n\t'%FunctionPrototype%': ['Function', 'prototype'],\n\t'%Generator%': ['GeneratorFunction', 'prototype'],\n\t'%GeneratorPrototype%': ['GeneratorFunction', 'prototype', 'prototype'],\n\t'%Int8ArrayPrototype%': ['Int8Array', 'prototype'],\n\t'%Int16ArrayPrototype%': ['Int16Array', 'prototype'],\n\t'%Int32ArrayPrototype%': ['Int32Array', 'prototype'],\n\t'%JSONParse%': ['JSON', 'parse'],\n\t'%JSONStringify%': ['JSON', 'stringify'],\n\t'%MapPrototype%': ['Map', 'prototype'],\n\t'%NumberPrototype%': ['Number', 'prototype'],\n\t'%ObjectPrototype%': ['Object', 'prototype'],\n\t'%ObjProto_toString%': ['Object', 'prototype', 'toString'],\n\t'%ObjProto_valueOf%': ['Object', 'prototype', 'valueOf'],\n\t'%PromisePrototype%': ['Promise', 'prototype'],\n\t'%PromiseProto_then%': ['Promise', 'prototype', 'then'],\n\t'%Promise_all%': ['Promise', 'all'],\n\t'%Promise_reject%': ['Promise', 'reject'],\n\t'%Promise_resolve%': ['Promise', 'resolve'],\n\t'%RangeErrorPrototype%': ['RangeError', 'prototype'],\n\t'%ReferenceErrorPrototype%': ['ReferenceError', 'prototype'],\n\t'%RegExpPrototype%': ['RegExp', 'prototype'],\n\t'%SetPrototype%': ['Set', 'prototype'],\n\t'%SharedArrayBufferPrototype%': ['SharedArrayBuffer', 'prototype'],\n\t'%StringPrototype%': ['String', 'prototype'],\n\t'%SymbolPrototype%': ['Symbol', 'prototype'],\n\t'%SyntaxErrorPrototype%': ['SyntaxError', 'prototype'],\n\t'%TypedArrayPrototype%': ['TypedArray', 'prototype'],\n\t'%TypeErrorPrototype%': ['TypeError', 'prototype'],\n\t'%Uint8ArrayPrototype%': ['Uint8Array', 'prototype'],\n\t'%Uint8ClampedArrayPrototype%': ['Uint8ClampedArray', 'prototype'],\n\t'%Uint16ArrayPrototype%': ['Uint16Array', 'prototype'],\n\t'%Uint32ArrayPrototype%': ['Uint32Array', 'prototype'],\n\t'%URIErrorPrototype%': ['URIError', 'prototype'],\n\t'%WeakMapPrototype%': ['WeakMap', 'prototype'],\n\t'%WeakSetPrototype%': ['WeakSet', 'prototype']\n};\n\nvar bind = require('function-bind');\nvar hasOwn = require('has');\nvar $concat = bind.call(Function.call, Array.prototype.concat);\nvar $spliceApply = bind.call(Function.apply, Array.prototype.splice);\nvar $replace = bind.call(Function.call, String.prototype.replace);\nvar $strSlice = bind.call(Function.call, String.prototype.slice);\nvar $exec = bind.call(Function.call, RegExp.prototype.exec);\n\n/* adapted from https://github.com/lodash/lodash/blob/4.17.15/dist/lodash.js#L6735-L6744 */\nvar rePropName = /[^%.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]|(?=(?:\\.|\\[\\])(?:\\.|\\[\\]|%$))/g;\nvar reEscapeChar = /\\\\(\\\\)?/g; /** Used to match backslashes in property paths. */\nvar stringToPath = function stringToPath(string) {\n\tvar first = $strSlice(string, 0, 1);\n\tvar last = $strSlice(string, -1);\n\tif (first === '%' && last !== '%') {\n\t\tthrow new $SyntaxError('invalid intrinsic syntax, expected closing `%`');\n\t} else if (last === '%' && first !== '%') {\n\t\tthrow new $SyntaxError('invalid intrinsic syntax, expected opening `%`');\n\t}\n\tvar result = [];\n\t$replace(string, rePropName, function (match, number, quote, subString) {\n\t\tresult[result.length] = quote ? $replace(subString, reEscapeChar, '$1') : number || match;\n\t});\n\treturn result;\n};\n/* end adaptation */\n\nvar getBaseIntrinsic = function getBaseIntrinsic(name, allowMissing) {\n\tvar intrinsicName = name;\n\tvar alias;\n\tif (hasOwn(LEGACY_ALIASES, intrinsicName)) {\n\t\talias = LEGACY_ALIASES[intrinsicName];\n\t\tintrinsicName = '%' + alias[0] + '%';\n\t}\n\n\tif (hasOwn(INTRINSICS, intrinsicName)) {\n\t\tvar value = INTRINSICS[intrinsicName];\n\t\tif (value === needsEval) {\n\t\t\tvalue = doEval(intrinsicName);\n\t\t}\n\t\tif (typeof value === 'undefined' && !allowMissing) {\n\t\t\tthrow new $TypeError('intrinsic ' + name + ' exists, but is not available. Please file an issue!');\n\t\t}\n\n\t\treturn {\n\t\t\talias: alias,\n\t\t\tname: intrinsicName,\n\t\t\tvalue: value\n\t\t};\n\t}\n\n\tthrow new $SyntaxError('intrinsic ' + name + ' does not exist!');\n};\n\nmodule.exports = function GetIntrinsic(name, allowMissing) {\n\tif (typeof name !== 'string' || name.length === 0) {\n\t\tthrow new $TypeError('intrinsic name must be a non-empty string');\n\t}\n\tif (arguments.length > 1 && typeof allowMissing !== 'boolean') {\n\t\tthrow new $TypeError('\"allowMissing\" argument must be a boolean');\n\t}\n\n\tif ($exec(/^%?[^%]*%?$/g, name) === null) {\n\t\tthrow new $SyntaxError('`%` may not be present anywhere but at the beginning and end of the intrinsic name');\n\t}\n\tvar parts = stringToPath(name);\n\tvar intrinsicBaseName = parts.length > 0 ? parts[0] : '';\n\n\tvar intrinsic = getBaseIntrinsic('%' + intrinsicBaseName + '%', allowMissing);\n\tvar intrinsicRealName = intrinsic.name;\n\tvar value = intrinsic.value;\n\tvar skipFurtherCaching = false;\n\n\tvar alias = intrinsic.alias;\n\tif (alias) {\n\t\tintrinsicBaseName = alias[0];\n\t\t$spliceApply(parts, $concat([0, 1], alias));\n\t}\n\n\tfor (var i = 1, isOwn = true; i < parts.length; i += 1) {\n\t\tvar part = parts[i];\n\t\tvar first = $strSlice(part, 0, 1);\n\t\tvar last = $strSlice(part, -1);\n\t\tif (\n\t\t\t(\n\t\t\t\t(first === '\"' || first === \"'\" || first === '`')\n\t\t\t\t|| (last === '\"' || last === \"'\" || last === '`')\n\t\t\t)\n\t\t\t&& first !== last\n\t\t) {\n\t\t\tthrow new $SyntaxError('property names with quotes must have matching quotes');\n\t\t}\n\t\tif (part === 'constructor' || !isOwn) {\n\t\t\tskipFurtherCaching = true;\n\t\t}\n\n\t\tintrinsicBaseName += '.' + part;\n\t\tintrinsicRealName = '%' + intrinsicBaseName + '%';\n\n\t\tif (hasOwn(INTRINSICS, intrinsicRealName)) {\n\t\t\tvalue = INTRINSICS[intrinsicRealName];\n\t\t} else if (value != null) {\n\t\t\tif (!(part in value)) {\n\t\t\t\tif (!allowMissing) {\n\t\t\t\t\tthrow new $TypeError('base intrinsic for ' + name + ' exists, but the property is not available.');\n\t\t\t\t}\n\t\t\t\treturn void undefined;\n\t\t\t}\n\t\t\tif ($gOPD && (i + 1) >= parts.length) {\n\t\t\t\tvar desc = $gOPD(value, part);\n\t\t\t\tisOwn = !!desc;\n\n\t\t\t\t// By convention, when a data property is converted to an accessor\n\t\t\t\t// property to emulate a data property that does not suffer from\n\t\t\t\t// the override mistake, that accessor's getter is marked with\n\t\t\t\t// an `originalValue` property. Here, when we detect this, we\n\t\t\t\t// uphold the illusion by pretending to see that original data\n\t\t\t\t// property, i.e., returning the value rather than the getter\n\t\t\t\t// itself.\n\t\t\t\tif (isOwn && 'get' in desc && !('originalValue' in desc.get)) {\n\t\t\t\t\tvalue = desc.get;\n\t\t\t\t} else {\n\t\t\t\t\tvalue = value[part];\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tisOwn = hasOwn(value, part);\n\t\t\t\tvalue = value[part];\n\t\t\t}\n\n\t\t\tif (isOwn && !skipFurtherCaching) {\n\t\t\t\tINTRINSICS[intrinsicRealName] = value;\n\t\t\t}\n\t\t}\n\t}\n\treturn value;\n};\n","'use strict';\n\nvar origSymbol = typeof Symbol !== 'undefined' && Symbol;\nvar hasSymbolSham = require('./shams');\n\nmodule.exports = function hasNativeSymbols() {\n\tif (typeof origSymbol !== 'function') { return false; }\n\tif (typeof Symbol !== 'function') { return false; }\n\tif (typeof origSymbol('foo') !== 'symbol') { return false; }\n\tif (typeof Symbol('bar') !== 'symbol') { return false; }\n\n\treturn hasSymbolSham();\n};\n","'use strict';\n\n/* eslint complexity: [2, 18], max-statements: [2, 33] */\nmodule.exports = function hasSymbols() {\n\tif (typeof Symbol !== 'function' || typeof Object.getOwnPropertySymbols !== 'function') { return false; }\n\tif (typeof Symbol.iterator === 'symbol') { return true; }\n\n\tvar obj = {};\n\tvar sym = Symbol('test');\n\tvar symObj = Object(sym);\n\tif (typeof sym === 'string') { return false; }\n\n\tif (Object.prototype.toString.call(sym) !== '[object Symbol]') { return false; }\n\tif (Object.prototype.toString.call(symObj) !== '[object Symbol]') { return false; }\n\n\t// temp disabled per https://github.com/ljharb/object.assign/issues/17\n\t// if (sym instanceof Symbol) { return false; }\n\t// temp disabled per https://github.com/WebReflection/get-own-property-symbols/issues/4\n\t// if (!(symObj instanceof Symbol)) { return false; }\n\n\t// if (typeof Symbol.prototype.toString !== 'function') { return false; }\n\t// if (String(sym) !== Symbol.prototype.toString.call(sym)) { return false; }\n\n\tvar symVal = 42;\n\tobj[sym] = symVal;\n\tfor (sym in obj) { return false; } // eslint-disable-line no-restricted-syntax, no-unreachable-loop\n\tif (typeof Object.keys === 'function' && Object.keys(obj).length !== 0) { return false; }\n\n\tif (typeof Object.getOwnPropertyNames === 'function' && Object.getOwnPropertyNames(obj).length !== 0) { return false; }\n\n\tvar syms = Object.getOwnPropertySymbols(obj);\n\tif (syms.length !== 1 || syms[0] !== sym) { return false; }\n\n\tif (!Object.prototype.propertyIsEnumerable.call(obj, sym)) { return false; }\n\n\tif (typeof Object.getOwnPropertyDescriptor === 'function') {\n\t\tvar descriptor = Object.getOwnPropertyDescriptor(obj, sym);\n\t\tif (descriptor.value !== symVal || descriptor.enumerable !== true) { return false; }\n\t}\n\n\treturn true;\n};\n","'use strict';\n\nvar bind = require('function-bind');\n\nmodule.exports = bind.call(Function.call, Object.prototype.hasOwnProperty);\n","/*!\n * http-errors\n * Copyright(c) 2014 Jonathan Ong\n * Copyright(c) 2016 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * Module dependencies.\n * @private\n */\n\nvar deprecate = require('depd')('http-errors')\nvar setPrototypeOf = require('setprototypeof')\nvar statuses = require('statuses')\nvar inherits = require('inherits')\nvar toIdentifier = require('toidentifier')\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = createError\nmodule.exports.HttpError = createHttpErrorConstructor()\nmodule.exports.isHttpError = createIsHttpErrorFunction(module.exports.HttpError)\n\n// Populate exports for all constructors\npopulateConstructorExports(module.exports, statuses.codes, module.exports.HttpError)\n\n/**\n * Get the code class of a status code.\n * @private\n */\n\nfunction codeClass (status) {\n  return Number(String(status).charAt(0) + '00')\n}\n\n/**\n * Create a new HTTP Error.\n *\n * @returns {Error}\n * @public\n */\n\nfunction createError () {\n  // so much arity going on ~_~\n  var err\n  var msg\n  var status = 500\n  var props = {}\n  for (var i = 0; i < arguments.length; i++) {\n    var arg = arguments[i]\n    var type = typeof arg\n    if (type === 'object' && arg instanceof Error) {\n      err = arg\n      status = err.status || err.statusCode || status\n    } else if (type === 'number' && i === 0) {\n      status = arg\n    } else if (type === 'string') {\n      msg = arg\n    } else if (type === 'object') {\n      props = arg\n    } else {\n      throw new TypeError('argument #' + (i + 1) + ' unsupported type ' + type)\n    }\n  }\n\n  if (typeof status === 'number' && (status < 400 || status >= 600)) {\n    deprecate('non-error status code; use only 4xx or 5xx status codes')\n  }\n\n  if (typeof status !== 'number' ||\n    (!statuses.message[status] && (status < 400 || status >= 600))) {\n    status = 500\n  }\n\n  // constructor\n  var HttpError = createError[status] || createError[codeClass(status)]\n\n  if (!err) {\n    // create error\n    err = HttpError\n      ? new HttpError(msg)\n      : new Error(msg || statuses.message[status])\n    Error.captureStackTrace(err, createError)\n  }\n\n  if (!HttpError || !(err instanceof HttpError) || err.status !== status) {\n    // add properties to generic error\n    err.expose = status < 500\n    err.status = err.statusCode = status\n  }\n\n  for (var key in props) {\n    if (key !== 'status' && key !== 'statusCode') {\n      err[key] = props[key]\n    }\n  }\n\n  return err\n}\n\n/**\n * Create HTTP error abstract base class.\n * @private\n */\n\nfunction createHttpErrorConstructor () {\n  function HttpError () {\n    throw new TypeError('cannot construct abstract class')\n  }\n\n  inherits(HttpError, Error)\n\n  return HttpError\n}\n\n/**\n * Create a constructor for a client error.\n * @private\n */\n\nfunction createClientErrorConstructor (HttpError, name, code) {\n  var className = toClassName(name)\n\n  function ClientError (message) {\n    // create the error object\n    var msg = message != null ? message : statuses.message[code]\n    var err = new Error(msg)\n\n    // capture a stack trace to the construction point\n    Error.captureStackTrace(err, ClientError)\n\n    // adjust the [[Prototype]]\n    setPrototypeOf(err, ClientError.prototype)\n\n    // redefine the error message\n    Object.defineProperty(err, 'message', {\n      enumerable: true,\n      configurable: true,\n      value: msg,\n      writable: true\n    })\n\n    // redefine the error name\n    Object.defineProperty(err, 'name', {\n      enumerable: false,\n      configurable: true,\n      value: className,\n      writable: true\n    })\n\n    return err\n  }\n\n  inherits(ClientError, HttpError)\n  nameFunc(ClientError, className)\n\n  ClientError.prototype.status = code\n  ClientError.prototype.statusCode = code\n  ClientError.prototype.expose = true\n\n  return ClientError\n}\n\n/**\n * Create function to test is a value is a HttpError.\n * @private\n */\n\nfunction createIsHttpErrorFunction (HttpError) {\n  return function isHttpError (val) {\n    if (!val || typeof val !== 'object') {\n      return false\n    }\n\n    if (val instanceof HttpError) {\n      return true\n    }\n\n    return val instanceof Error &&\n      typeof val.expose === 'boolean' &&\n      typeof val.statusCode === 'number' && val.status === val.statusCode\n  }\n}\n\n/**\n * Create a constructor for a server error.\n * @private\n */\n\nfunction createServerErrorConstructor (HttpError, name, code) {\n  var className = toClassName(name)\n\n  function ServerError (message) {\n    // create the error object\n    var msg = message != null ? message : statuses.message[code]\n    var err = new Error(msg)\n\n    // capture a stack trace to the construction point\n    Error.captureStackTrace(err, ServerError)\n\n    // adjust the [[Prototype]]\n    setPrototypeOf(err, ServerError.prototype)\n\n    // redefine the error message\n    Object.defineProperty(err, 'message', {\n      enumerable: true,\n      configurable: true,\n      value: msg,\n      writable: true\n    })\n\n    // redefine the error name\n    Object.defineProperty(err, 'name', {\n      enumerable: false,\n      configurable: true,\n      value: className,\n      writable: true\n    })\n\n    return err\n  }\n\n  inherits(ServerError, HttpError)\n  nameFunc(ServerError, className)\n\n  ServerError.prototype.status = code\n  ServerError.prototype.statusCode = code\n  ServerError.prototype.expose = false\n\n  return ServerError\n}\n\n/**\n * Set the name of a function, if possible.\n * @private\n */\n\nfunction nameFunc (func, name) {\n  var desc = Object.getOwnPropertyDescriptor(func, 'name')\n\n  if (desc && desc.configurable) {\n    desc.value = name\n    Object.defineProperty(func, 'name', desc)\n  }\n}\n\n/**\n * Populate the exports object with constructors for every error class.\n * @private\n */\n\nfunction populateConstructorExports (exports, codes, HttpError) {\n  codes.forEach(function forEachCode (code) {\n    var CodeError\n    var name = toIdentifier(statuses.message[code])\n\n    switch (codeClass(code)) {\n      case 400:\n        CodeError = createClientErrorConstructor(HttpError, name, code)\n        break\n      case 500:\n        CodeError = createServerErrorConstructor(HttpError, name, code)\n        break\n    }\n\n    if (CodeError) {\n      // export the constructor\n      exports[code] = CodeError\n      exports[name] = CodeError\n    }\n  })\n}\n\n/**\n * Get a class name from a name identifier.\n * @private\n */\n\nfunction toClassName (name) {\n  return name.substr(-5) !== 'Error'\n    ? name + 'Error'\n    : name\n}\n","\"use strict\";\nvar Buffer = require(\"safer-buffer\").Buffer;\n\n// Multibyte codec. In this scheme, a character is represented by 1 or more bytes.\n// Our codec supports UTF-16 surrogates, extensions for GB18030 and unicode sequences.\n// To save memory and loading time, we read table files only when requested.\n\nexports._dbcs = DBCSCodec;\n\nvar UNASSIGNED = -1,\n    GB18030_CODE = -2,\n    SEQ_START  = -10,\n    NODE_START = -1000,\n    UNASSIGNED_NODE = new Array(0x100),\n    DEF_CHAR = -1;\n\nfor (var i = 0; i < 0x100; i++)\n    UNASSIGNED_NODE[i] = UNASSIGNED;\n\n\n// Class DBCSCodec reads and initializes mapping tables.\nfunction DBCSCodec(codecOptions, iconv) {\n    this.encodingName = codecOptions.encodingName;\n    if (!codecOptions)\n        throw new Error(\"DBCS codec is called without the data.\")\n    if (!codecOptions.table)\n        throw new Error(\"Encoding '\" + this.encodingName + \"' has no data.\");\n\n    // Load tables.\n    var mappingTable = codecOptions.table();\n\n\n    // Decode tables: MBCS -> Unicode.\n\n    // decodeTables is a trie, encoded as an array of arrays of integers. Internal arrays are trie nodes and all have len = 256.\n    // Trie root is decodeTables[0].\n    // Values: >=  0 -> unicode character code. can be > 0xFFFF\n    //         == UNASSIGNED -> unknown/unassigned sequence.\n    //         == GB18030_CODE -> this is the end of a GB18030 4-byte sequence.\n    //         <= NODE_START -> index of the next node in our trie to process next byte.\n    //         <= SEQ_START  -> index of the start of a character code sequence, in decodeTableSeq.\n    this.decodeTables = [];\n    this.decodeTables[0] = UNASSIGNED_NODE.slice(0); // Create root node.\n\n    // Sometimes a MBCS char corresponds to a sequence of unicode chars. We store them as arrays of integers here. \n    this.decodeTableSeq = [];\n\n    // Actual mapping tables consist of chunks. Use them to fill up decode tables.\n    for (var i = 0; i < mappingTable.length; i++)\n        this._addDecodeChunk(mappingTable[i]);\n\n    this.defaultCharUnicode = iconv.defaultCharUnicode;\n\n    \n    // Encode tables: Unicode -> DBCS.\n\n    // `encodeTable` is array mapping from unicode char to encoded char. All its values are integers for performance.\n    // Because it can be sparse, it is represented as array of buckets by 256 chars each. Bucket can be null.\n    // Values: >=  0 -> it is a normal char. Write the value (if <=256 then 1 byte, if <=65536 then 2 bytes, etc.).\n    //         == UNASSIGNED -> no conversion found. Output a default char.\n    //         <= SEQ_START  -> it's an index in encodeTableSeq, see below. The character starts a sequence.\n    this.encodeTable = [];\n    \n    // `encodeTableSeq` is used when a sequence of unicode characters is encoded as a single code. We use a tree of\n    // objects where keys correspond to characters in sequence and leafs are the encoded dbcs values. A special DEF_CHAR key\n    // means end of sequence (needed when one sequence is a strict subsequence of another).\n    // Objects are kept separately from encodeTable to increase performance.\n    this.encodeTableSeq = [];\n\n    // Some chars can be decoded, but need not be encoded.\n    var skipEncodeChars = {};\n    if (codecOptions.encodeSkipVals)\n        for (var i = 0; i < codecOptions.encodeSkipVals.length; i++) {\n            var val = codecOptions.encodeSkipVals[i];\n            if (typeof val === 'number')\n                skipEncodeChars[val] = true;\n            else\n                for (var j = val.from; j <= val.to; j++)\n                    skipEncodeChars[j] = true;\n        }\n        \n    // Use decode trie to recursively fill out encode tables.\n    this._fillEncodeTable(0, 0, skipEncodeChars);\n\n    // Add more encoding pairs when needed.\n    if (codecOptions.encodeAdd) {\n        for (var uChar in codecOptions.encodeAdd)\n            if (Object.prototype.hasOwnProperty.call(codecOptions.encodeAdd, uChar))\n                this._setEncodeChar(uChar.charCodeAt(0), codecOptions.encodeAdd[uChar]);\n    }\n\n    this.defCharSB  = this.encodeTable[0][iconv.defaultCharSingleByte.charCodeAt(0)];\n    if (this.defCharSB === UNASSIGNED) this.defCharSB = this.encodeTable[0]['?'];\n    if (this.defCharSB === UNASSIGNED) this.defCharSB = \"?\".charCodeAt(0);\n\n\n    // Load & create GB18030 tables when needed.\n    if (typeof codecOptions.gb18030 === 'function') {\n        this.gb18030 = codecOptions.gb18030(); // Load GB18030 ranges.\n\n        // Add GB18030 decode tables.\n        var thirdByteNodeIdx = this.decodeTables.length;\n        var thirdByteNode = this.decodeTables[thirdByteNodeIdx] = UNASSIGNED_NODE.slice(0);\n\n        var fourthByteNodeIdx = this.decodeTables.length;\n        var fourthByteNode = this.decodeTables[fourthByteNodeIdx] = UNASSIGNED_NODE.slice(0);\n\n        for (var i = 0x81; i <= 0xFE; i++) {\n            var secondByteNodeIdx = NODE_START - this.decodeTables[0][i];\n            var secondByteNode = this.decodeTables[secondByteNodeIdx];\n            for (var j = 0x30; j <= 0x39; j++)\n                secondByteNode[j] = NODE_START - thirdByteNodeIdx;\n        }\n        for (var i = 0x81; i <= 0xFE; i++)\n            thirdByteNode[i] = NODE_START - fourthByteNodeIdx;\n        for (var i = 0x30; i <= 0x39; i++)\n            fourthByteNode[i] = GB18030_CODE\n    }        \n}\n\nDBCSCodec.prototype.encoder = DBCSEncoder;\nDBCSCodec.prototype.decoder = DBCSDecoder;\n\n// Decoder helpers\nDBCSCodec.prototype._getDecodeTrieNode = function(addr) {\n    var bytes = [];\n    for (; addr > 0; addr >>= 8)\n        bytes.push(addr & 0xFF);\n    if (bytes.length == 0)\n        bytes.push(0);\n\n    var node = this.decodeTables[0];\n    for (var i = bytes.length-1; i > 0; i--) { // Traverse nodes deeper into the trie.\n        var val = node[bytes[i]];\n\n        if (val == UNASSIGNED) { // Create new node.\n            node[bytes[i]] = NODE_START - this.decodeTables.length;\n            this.decodeTables.push(node = UNASSIGNED_NODE.slice(0));\n        }\n        else if (val <= NODE_START) { // Existing node.\n            node = this.decodeTables[NODE_START - val];\n        }\n        else\n            throw new Error(\"Overwrite byte in \" + this.encodingName + \", addr: \" + addr.toString(16));\n    }\n    return node;\n}\n\n\nDBCSCodec.prototype._addDecodeChunk = function(chunk) {\n    // First element of chunk is the hex mbcs code where we start.\n    var curAddr = parseInt(chunk[0], 16);\n\n    // Choose the decoding node where we'll write our chars.\n    var writeTable = this._getDecodeTrieNode(curAddr);\n    curAddr = curAddr & 0xFF;\n\n    // Write all other elements of the chunk to the table.\n    for (var k = 1; k < chunk.length; k++) {\n        var part = chunk[k];\n        if (typeof part === \"string\") { // String, write as-is.\n            for (var l = 0; l < part.length;) {\n                var code = part.charCodeAt(l++);\n                if (0xD800 <= code && code < 0xDC00) { // Decode surrogate\n                    var codeTrail = part.charCodeAt(l++);\n                    if (0xDC00 <= codeTrail && codeTrail < 0xE000)\n                        writeTable[curAddr++] = 0x10000 + (code - 0xD800) * 0x400 + (codeTrail - 0xDC00);\n                    else\n                        throw new Error(\"Incorrect surrogate pair in \"  + this.encodingName + \" at chunk \" + chunk[0]);\n                }\n                else if (0x0FF0 < code && code <= 0x0FFF) { // Character sequence (our own encoding used)\n                    var len = 0xFFF - code + 2;\n                    var seq = [];\n                    for (var m = 0; m < len; m++)\n                        seq.push(part.charCodeAt(l++)); // Simple variation: don't support surrogates or subsequences in seq.\n\n                    writeTable[curAddr++] = SEQ_START - this.decodeTableSeq.length;\n                    this.decodeTableSeq.push(seq);\n                }\n                else\n                    writeTable[curAddr++] = code; // Basic char\n            }\n        } \n        else if (typeof part === \"number\") { // Integer, meaning increasing sequence starting with prev character.\n            var charCode = writeTable[curAddr - 1] + 1;\n            for (var l = 0; l < part; l++)\n                writeTable[curAddr++] = charCode++;\n        }\n        else\n            throw new Error(\"Incorrect type '\" + typeof part + \"' given in \"  + this.encodingName + \" at chunk \" + chunk[0]);\n    }\n    if (curAddr > 0xFF)\n        throw new Error(\"Incorrect chunk in \"  + this.encodingName + \" at addr \" + chunk[0] + \": too long\" + curAddr);\n}\n\n// Encoder helpers\nDBCSCodec.prototype._getEncodeBucket = function(uCode) {\n    var high = uCode >> 8; // This could be > 0xFF because of astral characters.\n    if (this.encodeTable[high] === undefined)\n        this.encodeTable[high] = UNASSIGNED_NODE.slice(0); // Create bucket on demand.\n    return this.encodeTable[high];\n}\n\nDBCSCodec.prototype._setEncodeChar = function(uCode, dbcsCode) {\n    var bucket = this._getEncodeBucket(uCode);\n    var low = uCode & 0xFF;\n    if (bucket[low] <= SEQ_START)\n        this.encodeTableSeq[SEQ_START-bucket[low]][DEF_CHAR] = dbcsCode; // There's already a sequence, set a single-char subsequence of it.\n    else if (bucket[low] == UNASSIGNED)\n        bucket[low] = dbcsCode;\n}\n\nDBCSCodec.prototype._setEncodeSequence = function(seq, dbcsCode) {\n    \n    // Get the root of character tree according to first character of the sequence.\n    var uCode = seq[0];\n    var bucket = this._getEncodeBucket(uCode);\n    var low = uCode & 0xFF;\n\n    var node;\n    if (bucket[low] <= SEQ_START) {\n        // There's already a sequence with  - use it.\n        node = this.encodeTableSeq[SEQ_START-bucket[low]];\n    }\n    else {\n        // There was no sequence object - allocate a new one.\n        node = {};\n        if (bucket[low] !== UNASSIGNED) node[DEF_CHAR] = bucket[low]; // If a char was set before - make it a single-char subsequence.\n        bucket[low] = SEQ_START - this.encodeTableSeq.length;\n        this.encodeTableSeq.push(node);\n    }\n\n    // Traverse the character tree, allocating new nodes as needed.\n    for (var j = 1; j < seq.length-1; j++) {\n        var oldVal = node[uCode];\n        if (typeof oldVal === 'object')\n            node = oldVal;\n        else {\n            node = node[uCode] = {}\n            if (oldVal !== undefined)\n                node[DEF_CHAR] = oldVal\n        }\n    }\n\n    // Set the leaf to given dbcsCode.\n    uCode = seq[seq.length-1];\n    node[uCode] = dbcsCode;\n}\n\nDBCSCodec.prototype._fillEncodeTable = function(nodeIdx, prefix, skipEncodeChars) {\n    var node = this.decodeTables[nodeIdx];\n    for (var i = 0; i < 0x100; i++) {\n        var uCode = node[i];\n        var mbCode = prefix + i;\n        if (skipEncodeChars[mbCode])\n            continue;\n\n        if (uCode >= 0)\n            this._setEncodeChar(uCode, mbCode);\n        else if (uCode <= NODE_START)\n            this._fillEncodeTable(NODE_START - uCode, mbCode << 8, skipEncodeChars);\n        else if (uCode <= SEQ_START)\n            this._setEncodeSequence(this.decodeTableSeq[SEQ_START - uCode], mbCode);\n    }\n}\n\n\n\n// == Encoder ==================================================================\n\nfunction DBCSEncoder(options, codec) {\n    // Encoder state\n    this.leadSurrogate = -1;\n    this.seqObj = undefined;\n    \n    // Static data\n    this.encodeTable = codec.encodeTable;\n    this.encodeTableSeq = codec.encodeTableSeq;\n    this.defaultCharSingleByte = codec.defCharSB;\n    this.gb18030 = codec.gb18030;\n}\n\nDBCSEncoder.prototype.write = function(str) {\n    var newBuf = Buffer.alloc(str.length * (this.gb18030 ? 4 : 3)),\n        leadSurrogate = this.leadSurrogate,\n        seqObj = this.seqObj, nextChar = -1,\n        i = 0, j = 0;\n\n    while (true) {\n        // 0. Get next character.\n        if (nextChar === -1) {\n            if (i == str.length) break;\n            var uCode = str.charCodeAt(i++);\n        }\n        else {\n            var uCode = nextChar;\n            nextChar = -1;    \n        }\n\n        // 1. Handle surrogates.\n        if (0xD800 <= uCode && uCode < 0xE000) { // Char is one of surrogates.\n            if (uCode < 0xDC00) { // We've got lead surrogate.\n                if (leadSurrogate === -1) {\n                    leadSurrogate = uCode;\n                    continue;\n                } else {\n                    leadSurrogate = uCode;\n                    // Double lead surrogate found.\n                    uCode = UNASSIGNED;\n                }\n            } else { // We've got trail surrogate.\n                if (leadSurrogate !== -1) {\n                    uCode = 0x10000 + (leadSurrogate - 0xD800) * 0x400 + (uCode - 0xDC00);\n                    leadSurrogate = -1;\n                } else {\n                    // Incomplete surrogate pair - only trail surrogate found.\n                    uCode = UNASSIGNED;\n                }\n                \n            }\n        }\n        else if (leadSurrogate !== -1) {\n            // Incomplete surrogate pair - only lead surrogate found.\n            nextChar = uCode; uCode = UNASSIGNED; // Write an error, then current char.\n            leadSurrogate = -1;\n        }\n\n        // 2. Convert uCode character.\n        var dbcsCode = UNASSIGNED;\n        if (seqObj !== undefined && uCode != UNASSIGNED) { // We are in the middle of the sequence\n            var resCode = seqObj[uCode];\n            if (typeof resCode === 'object') { // Sequence continues.\n                seqObj = resCode;\n                continue;\n\n            } else if (typeof resCode == 'number') { // Sequence finished. Write it.\n                dbcsCode = resCode;\n\n            } else if (resCode == undefined) { // Current character is not part of the sequence.\n\n                // Try default character for this sequence\n                resCode = seqObj[DEF_CHAR];\n                if (resCode !== undefined) {\n                    dbcsCode = resCode; // Found. Write it.\n                    nextChar = uCode; // Current character will be written too in the next iteration.\n\n                } else {\n                    // TODO: What if we have no default? (resCode == undefined)\n                    // Then, we should write first char of the sequence as-is and try the rest recursively.\n                    // Didn't do it for now because no encoding has this situation yet.\n                    // Currently, just skip the sequence and write current char.\n                }\n            }\n            seqObj = undefined;\n        }\n        else if (uCode >= 0) {  // Regular character\n            var subtable = this.encodeTable[uCode >> 8];\n            if (subtable !== undefined)\n                dbcsCode = subtable[uCode & 0xFF];\n            \n            if (dbcsCode <= SEQ_START) { // Sequence start\n                seqObj = this.encodeTableSeq[SEQ_START-dbcsCode];\n                continue;\n            }\n\n            if (dbcsCode == UNASSIGNED && this.gb18030) {\n                // Use GB18030 algorithm to find character(s) to write.\n                var idx = findIdx(this.gb18030.uChars, uCode);\n                if (idx != -1) {\n                    var dbcsCode = this.gb18030.gbChars[idx] + (uCode - this.gb18030.uChars[idx]);\n                    newBuf[j++] = 0x81 + Math.floor(dbcsCode / 12600); dbcsCode = dbcsCode % 12600;\n                    newBuf[j++] = 0x30 + Math.floor(dbcsCode / 1260); dbcsCode = dbcsCode % 1260;\n                    newBuf[j++] = 0x81 + Math.floor(dbcsCode / 10); dbcsCode = dbcsCode % 10;\n                    newBuf[j++] = 0x30 + dbcsCode;\n                    continue;\n                }\n            }\n        }\n\n        // 3. Write dbcsCode character.\n        if (dbcsCode === UNASSIGNED)\n            dbcsCode = this.defaultCharSingleByte;\n        \n        if (dbcsCode < 0x100) {\n            newBuf[j++] = dbcsCode;\n        }\n        else if (dbcsCode < 0x10000) {\n            newBuf[j++] = dbcsCode >> 8;   // high byte\n            newBuf[j++] = dbcsCode & 0xFF; // low byte\n        }\n        else {\n            newBuf[j++] = dbcsCode >> 16;\n            newBuf[j++] = (dbcsCode >> 8) & 0xFF;\n            newBuf[j++] = dbcsCode & 0xFF;\n        }\n    }\n\n    this.seqObj = seqObj;\n    this.leadSurrogate = leadSurrogate;\n    return newBuf.slice(0, j);\n}\n\nDBCSEncoder.prototype.end = function() {\n    if (this.leadSurrogate === -1 && this.seqObj === undefined)\n        return; // All clean. Most often case.\n\n    var newBuf = Buffer.alloc(10), j = 0;\n\n    if (this.seqObj) { // We're in the sequence.\n        var dbcsCode = this.seqObj[DEF_CHAR];\n        if (dbcsCode !== undefined) { // Write beginning of the sequence.\n            if (dbcsCode < 0x100) {\n                newBuf[j++] = dbcsCode;\n            }\n            else {\n                newBuf[j++] = dbcsCode >> 8;   // high byte\n                newBuf[j++] = dbcsCode & 0xFF; // low byte\n            }\n        } else {\n            // See todo above.\n        }\n        this.seqObj = undefined;\n    }\n\n    if (this.leadSurrogate !== -1) {\n        // Incomplete surrogate pair - only lead surrogate found.\n        newBuf[j++] = this.defaultCharSingleByte;\n        this.leadSurrogate = -1;\n    }\n    \n    return newBuf.slice(0, j);\n}\n\n// Export for testing\nDBCSEncoder.prototype.findIdx = findIdx;\n\n\n// == Decoder ==================================================================\n\nfunction DBCSDecoder(options, codec) {\n    // Decoder state\n    this.nodeIdx = 0;\n    this.prevBuf = Buffer.alloc(0);\n\n    // Static data\n    this.decodeTables = codec.decodeTables;\n    this.decodeTableSeq = codec.decodeTableSeq;\n    this.defaultCharUnicode = codec.defaultCharUnicode;\n    this.gb18030 = codec.gb18030;\n}\n\nDBCSDecoder.prototype.write = function(buf) {\n    var newBuf = Buffer.alloc(buf.length*2),\n        nodeIdx = this.nodeIdx, \n        prevBuf = this.prevBuf, prevBufOffset = this.prevBuf.length,\n        seqStart = -this.prevBuf.length, // idx of the start of current parsed sequence.\n        uCode;\n\n    if (prevBufOffset > 0) // Make prev buf overlap a little to make it easier to slice later.\n        prevBuf = Buffer.concat([prevBuf, buf.slice(0, 10)]);\n    \n    for (var i = 0, j = 0; i < buf.length; i++) {\n        var curByte = (i >= 0) ? buf[i] : prevBuf[i + prevBufOffset];\n\n        // Lookup in current trie node.\n        var uCode = this.decodeTables[nodeIdx][curByte];\n\n        if (uCode >= 0) { \n            // Normal character, just use it.\n        }\n        else if (uCode === UNASSIGNED) { // Unknown char.\n            // TODO: Callback with seq.\n            //var curSeq = (seqStart >= 0) ? buf.slice(seqStart, i+1) : prevBuf.slice(seqStart + prevBufOffset, i+1 + prevBufOffset);\n            i = seqStart; // Try to parse again, after skipping first byte of the sequence ('i' will be incremented by 'for' cycle).\n            uCode = this.defaultCharUnicode.charCodeAt(0);\n        }\n        else if (uCode === GB18030_CODE) {\n            var curSeq = (seqStart >= 0) ? buf.slice(seqStart, i+1) : prevBuf.slice(seqStart + prevBufOffset, i+1 + prevBufOffset);\n            var ptr = (curSeq[0]-0x81)*12600 + (curSeq[1]-0x30)*1260 + (curSeq[2]-0x81)*10 + (curSeq[3]-0x30);\n            var idx = findIdx(this.gb18030.gbChars, ptr);\n            uCode = this.gb18030.uChars[idx] + ptr - this.gb18030.gbChars[idx];\n        }\n        else if (uCode <= NODE_START) { // Go to next trie node.\n            nodeIdx = NODE_START - uCode;\n            continue;\n        }\n        else if (uCode <= SEQ_START) { // Output a sequence of chars.\n            var seq = this.decodeTableSeq[SEQ_START - uCode];\n            for (var k = 0; k < seq.length - 1; k++) {\n                uCode = seq[k];\n                newBuf[j++] = uCode & 0xFF;\n                newBuf[j++] = uCode >> 8;\n            }\n            uCode = seq[seq.length-1];\n        }\n        else\n            throw new Error(\"iconv-lite internal error: invalid decoding table value \" + uCode + \" at \" + nodeIdx + \"/\" + curByte);\n\n        // Write the character to buffer, handling higher planes using surrogate pair.\n        if (uCode > 0xFFFF) { \n            uCode -= 0x10000;\n            var uCodeLead = 0xD800 + Math.floor(uCode / 0x400);\n            newBuf[j++] = uCodeLead & 0xFF;\n            newBuf[j++] = uCodeLead >> 8;\n\n            uCode = 0xDC00 + uCode % 0x400;\n        }\n        newBuf[j++] = uCode & 0xFF;\n        newBuf[j++] = uCode >> 8;\n\n        // Reset trie node.\n        nodeIdx = 0; seqStart = i+1;\n    }\n\n    this.nodeIdx = nodeIdx;\n    this.prevBuf = (seqStart >= 0) ? buf.slice(seqStart) : prevBuf.slice(seqStart + prevBufOffset);\n    return newBuf.slice(0, j).toString('ucs2');\n}\n\nDBCSDecoder.prototype.end = function() {\n    var ret = '';\n\n    // Try to parse all remaining chars.\n    while (this.prevBuf.length > 0) {\n        // Skip 1 character in the buffer.\n        ret += this.defaultCharUnicode;\n        var buf = this.prevBuf.slice(1);\n\n        // Parse remaining as usual.\n        this.prevBuf = Buffer.alloc(0);\n        this.nodeIdx = 0;\n        if (buf.length > 0)\n            ret += this.write(buf);\n    }\n\n    this.nodeIdx = 0;\n    return ret;\n}\n\n// Binary search for GB18030. Returns largest i such that table[i] <= val.\nfunction findIdx(table, val) {\n    if (table[0] > val)\n        return -1;\n\n    var l = 0, r = table.length;\n    while (l < r-1) { // always table[l] <= val < table[r]\n        var mid = l + Math.floor((r-l+1)/2);\n        if (table[mid] <= val)\n            l = mid;\n        else\n            r = mid;\n    }\n    return l;\n}\n\n","\"use strict\";\n\n// Description of supported double byte encodings and aliases.\n// Tables are not require()-d until they are needed to speed up library load.\n// require()-s are direct to support Browserify.\n\nmodule.exports = {\n    \n    // == Japanese/ShiftJIS ====================================================\n    // All japanese encodings are based on JIS X set of standards:\n    // JIS X 0201 - Single-byte encoding of ASCII + ¥ + Kana chars at 0xA1-0xDF.\n    // JIS X 0208 - Main set of 6879 characters, placed in 94x94 plane, to be encoded by 2 bytes. \n    //              Has several variations in 1978, 1983, 1990 and 1997.\n    // JIS X 0212 - Supplementary plane of 6067 chars in 94x94 plane. 1990. Effectively dead.\n    // JIS X 0213 - Extension and modern replacement of 0208 and 0212. Total chars: 11233.\n    //              2 planes, first is superset of 0208, second - revised 0212.\n    //              Introduced in 2000, revised 2004. Some characters are in Unicode Plane 2 (0x2xxxx)\n\n    // Byte encodings are:\n    //  * Shift_JIS: Compatible with 0201, uses not defined chars in top half as lead bytes for double-byte\n    //               encoding of 0208. Lead byte ranges: 0x81-0x9F, 0xE0-0xEF; Trail byte ranges: 0x40-0x7E, 0x80-0x9E, 0x9F-0xFC.\n    //               Windows CP932 is a superset of Shift_JIS. Some companies added more chars, notably KDDI.\n    //  * EUC-JP:    Up to 3 bytes per character. Used mostly on *nixes.\n    //               0x00-0x7F       - lower part of 0201\n    //               0x8E, 0xA1-0xDF - upper part of 0201\n    //               (0xA1-0xFE)x2   - 0208 plane (94x94).\n    //               0x8F, (0xA1-0xFE)x2 - 0212 plane (94x94).\n    //  * JIS X 208: 7-bit, direct encoding of 0208. Byte ranges: 0x21-0x7E (94 values). Uncommon.\n    //               Used as-is in ISO2022 family.\n    //  * ISO2022-JP: Stateful encoding, with escape sequences to switch between ASCII, \n    //                0201-1976 Roman, 0208-1978, 0208-1983.\n    //  * ISO2022-JP-1: Adds esc seq for 0212-1990.\n    //  * ISO2022-JP-2: Adds esc seq for GB2313-1980, KSX1001-1992, ISO8859-1, ISO8859-7.\n    //  * ISO2022-JP-3: Adds esc seq for 0201-1976 Kana set, 0213-2000 Planes 1, 2.\n    //  * ISO2022-JP-2004: Adds 0213-2004 Plane 1.\n    //\n    // After JIS X 0213 appeared, Shift_JIS-2004, EUC-JISX0213 and ISO2022-JP-2004 followed, with just changing the planes.\n    //\n    // Overall, it seems that it's a mess :( http://www8.plala.or.jp/tkubota1/unicode-symbols-map2.html\n\n    'shiftjis': {\n        type: '_dbcs',\n        table: function() { return require('./tables/shiftjis.json') },\n        encodeAdd: {'\\u00a5': 0x5C, '\\u203E': 0x7E},\n        encodeSkipVals: [{from: 0xED40, to: 0xF940}],\n    },\n    'csshiftjis': 'shiftjis',\n    'mskanji': 'shiftjis',\n    'sjis': 'shiftjis',\n    'windows31j': 'shiftjis',\n    'ms31j': 'shiftjis',\n    'xsjis': 'shiftjis',\n    'windows932': 'shiftjis',\n    'ms932': 'shiftjis',\n    '932': 'shiftjis',\n    'cp932': 'shiftjis',\n\n    'eucjp': {\n        type: '_dbcs',\n        table: function() { return require('./tables/eucjp.json') },\n        encodeAdd: {'\\u00a5': 0x5C, '\\u203E': 0x7E},\n    },\n\n    // TODO: KDDI extension to Shift_JIS\n    // TODO: IBM CCSID 942 = CP932, but F0-F9 custom chars and other char changes.\n    // TODO: IBM CCSID 943 = Shift_JIS = CP932 with original Shift_JIS lower 128 chars.\n\n\n    // == Chinese/GBK ==========================================================\n    // http://en.wikipedia.org/wiki/GBK\n    // We mostly implement W3C recommendation: https://www.w3.org/TR/encoding/#gbk-encoder\n\n    // Oldest GB2312 (1981, ~7600 chars) is a subset of CP936\n    'gb2312': 'cp936',\n    'gb231280': 'cp936',\n    'gb23121980': 'cp936',\n    'csgb2312': 'cp936',\n    'csiso58gb231280': 'cp936',\n    'euccn': 'cp936',\n\n    // Microsoft's CP936 is a subset and approximation of GBK.\n    'windows936': 'cp936',\n    'ms936': 'cp936',\n    '936': 'cp936',\n    'cp936': {\n        type: '_dbcs',\n        table: function() { return require('./tables/cp936.json') },\n    },\n\n    // GBK (~22000 chars) is an extension of CP936 that added user-mapped chars and some other.\n    'gbk': {\n        type: '_dbcs',\n        table: function() { return require('./tables/cp936.json').concat(require('./tables/gbk-added.json')) },\n    },\n    'xgbk': 'gbk',\n    'isoir58': 'gbk',\n\n    // GB18030 is an algorithmic extension of GBK.\n    // Main source: https://www.w3.org/TR/encoding/#gbk-encoder\n    // http://icu-project.org/docs/papers/gb18030.html\n    // http://source.icu-project.org/repos/icu/data/trunk/charset/data/xml/gb-18030-2000.xml\n    // http://www.khngai.com/chinese/charmap/tblgbk.php?page=0\n    'gb18030': {\n        type: '_dbcs',\n        table: function() { return require('./tables/cp936.json').concat(require('./tables/gbk-added.json')) },\n        gb18030: function() { return require('./tables/gb18030-ranges.json') },\n        encodeSkipVals: [0x80],\n        encodeAdd: {'€': 0xA2E3},\n    },\n\n    'chinese': 'gb18030',\n\n\n    // == Korean ===============================================================\n    // EUC-KR, KS_C_5601 and KS X 1001 are exactly the same.\n    'windows949': 'cp949',\n    'ms949': 'cp949',\n    '949': 'cp949',\n    'cp949': {\n        type: '_dbcs',\n        table: function() { return require('./tables/cp949.json') },\n    },\n\n    'cseuckr': 'cp949',\n    'csksc56011987': 'cp949',\n    'euckr': 'cp949',\n    'isoir149': 'cp949',\n    'korean': 'cp949',\n    'ksc56011987': 'cp949',\n    'ksc56011989': 'cp949',\n    'ksc5601': 'cp949',\n\n\n    // == Big5/Taiwan/Hong Kong ================================================\n    // There are lots of tables for Big5 and cp950. Please see the following links for history:\n    // http://moztw.org/docs/big5/  http://www.haible.de/bruno/charsets/conversion-tables/Big5.html\n    // Variations, in roughly number of defined chars:\n    //  * Windows CP 950: Microsoft variant of Big5. Canonical: http://www.unicode.org/Public/MAPPINGS/VENDORS/MICSFT/WINDOWS/CP950.TXT\n    //  * Windows CP 951: Microsoft variant of Big5-HKSCS-2001. Seems to be never public. http://me.abelcheung.org/articles/research/what-is-cp951/\n    //  * Big5-2003 (Taiwan standard) almost superset of cp950.\n    //  * Unicode-at-on (UAO) / Mozilla 1.8. Falling out of use on the Web. Not supported by other browsers.\n    //  * Big5-HKSCS (-2001, -2004, -2008). Hong Kong standard. \n    //    many unicode code points moved from PUA to Supplementary plane (U+2XXXX) over the years.\n    //    Plus, it has 4 combining sequences.\n    //    Seems that Mozilla refused to support it for 10 yrs. https://bugzilla.mozilla.org/show_bug.cgi?id=162431 https://bugzilla.mozilla.org/show_bug.cgi?id=310299\n    //    because big5-hkscs is the only encoding to include astral characters in non-algorithmic way.\n    //    Implementations are not consistent within browsers; sometimes labeled as just big5.\n    //    MS Internet Explorer switches from big5 to big5-hkscs when a patch applied.\n    //    Great discussion & recap of what's going on https://bugzilla.mozilla.org/show_bug.cgi?id=912470#c31\n    //    In the encoder, it might make sense to support encoding old PUA mappings to Big5 bytes seq-s.\n    //    Official spec: http://www.ogcio.gov.hk/en/business/tech_promotion/ccli/terms/doc/2003cmp_2008.txt\n    //                   http://www.ogcio.gov.hk/tc/business/tech_promotion/ccli/terms/doc/hkscs-2008-big5-iso.txt\n    // \n    // Current understanding of how to deal with Big5(-HKSCS) is in the Encoding Standard, http://encoding.spec.whatwg.org/#big5-encoder\n    // Unicode mapping (http://www.unicode.org/Public/MAPPINGS/OBSOLETE/EASTASIA/OTHER/BIG5.TXT) is said to be wrong.\n\n    'windows950': 'cp950',\n    'ms950': 'cp950',\n    '950': 'cp950',\n    'cp950': {\n        type: '_dbcs',\n        table: function() { return require('./tables/cp950.json') },\n    },\n\n    // Big5 has many variations and is an extension of cp950. We use Encoding Standard's as a consensus.\n    'big5': 'big5hkscs',\n    'big5hkscs': {\n        type: '_dbcs',\n        table: function() { return require('./tables/cp950.json').concat(require('./tables/big5-added.json')) },\n        encodeSkipVals: [0xa2cc],\n    },\n\n    'cnbig5': 'big5hkscs',\n    'csbig5': 'big5hkscs',\n    'xxbig5': 'big5hkscs',\n};\n","\"use strict\";\n\n// Update this array if you add/rename/remove files in this directory.\n// We support Browserify by skipping automatic module discovery and requiring modules directly.\nvar modules = [\n    require(\"./internal\"),\n    require(\"./utf16\"),\n    require(\"./utf7\"),\n    require(\"./sbcs-codec\"),\n    require(\"./sbcs-data\"),\n    require(\"./sbcs-data-generated\"),\n    require(\"./dbcs-codec\"),\n    require(\"./dbcs-data\"),\n];\n\n// Put all encoding/alias/codec definitions to single object and export it. \nfor (var i = 0; i < modules.length; i++) {\n    var module = modules[i];\n    for (var enc in module)\n        if (Object.prototype.hasOwnProperty.call(module, enc))\n            exports[enc] = module[enc];\n}\n","\"use strict\";\nvar Buffer = require(\"safer-buffer\").Buffer;\n\n// Export Node.js internal encodings.\n\nmodule.exports = {\n    // Encodings\n    utf8:   { type: \"_internal\", bomAware: true},\n    cesu8:  { type: \"_internal\", bomAware: true},\n    unicode11utf8: \"utf8\",\n\n    ucs2:   { type: \"_internal\", bomAware: true},\n    utf16le: \"ucs2\",\n\n    binary: { type: \"_internal\" },\n    base64: { type: \"_internal\" },\n    hex:    { type: \"_internal\" },\n\n    // Codec.\n    _internal: InternalCodec,\n};\n\n//------------------------------------------------------------------------------\n\nfunction InternalCodec(codecOptions, iconv) {\n    this.enc = codecOptions.encodingName;\n    this.bomAware = codecOptions.bomAware;\n\n    if (this.enc === \"base64\")\n        this.encoder = InternalEncoderBase64;\n    else if (this.enc === \"cesu8\") {\n        this.enc = \"utf8\"; // Use utf8 for decoding.\n        this.encoder = InternalEncoderCesu8;\n\n        // Add decoder for versions of Node not supporting CESU-8\n        if (Buffer.from('eda0bdedb2a9', 'hex').toString() !== '💩') {\n            this.decoder = InternalDecoderCesu8;\n            this.defaultCharUnicode = iconv.defaultCharUnicode;\n        }\n    }\n}\n\nInternalCodec.prototype.encoder = InternalEncoder;\nInternalCodec.prototype.decoder = InternalDecoder;\n\n//------------------------------------------------------------------------------\n\n// We use node.js internal decoder. Its signature is the same as ours.\nvar StringDecoder = require('string_decoder').StringDecoder;\n\nif (!StringDecoder.prototype.end) // Node v0.8 doesn't have this method.\n    StringDecoder.prototype.end = function() {};\n\n\nfunction InternalDecoder(options, codec) {\n    StringDecoder.call(this, codec.enc);\n}\n\nInternalDecoder.prototype = StringDecoder.prototype;\n\n\n//------------------------------------------------------------------------------\n// Encoder is mostly trivial\n\nfunction InternalEncoder(options, codec) {\n    this.enc = codec.enc;\n}\n\nInternalEncoder.prototype.write = function(str) {\n    return Buffer.from(str, this.enc);\n}\n\nInternalEncoder.prototype.end = function() {\n}\n\n\n//------------------------------------------------------------------------------\n// Except base64 encoder, which must keep its state.\n\nfunction InternalEncoderBase64(options, codec) {\n    this.prevStr = '';\n}\n\nInternalEncoderBase64.prototype.write = function(str) {\n    str = this.prevStr + str;\n    var completeQuads = str.length - (str.length % 4);\n    this.prevStr = str.slice(completeQuads);\n    str = str.slice(0, completeQuads);\n\n    return Buffer.from(str, \"base64\");\n}\n\nInternalEncoderBase64.prototype.end = function() {\n    return Buffer.from(this.prevStr, \"base64\");\n}\n\n\n//------------------------------------------------------------------------------\n// CESU-8 encoder is also special.\n\nfunction InternalEncoderCesu8(options, codec) {\n}\n\nInternalEncoderCesu8.prototype.write = function(str) {\n    var buf = Buffer.alloc(str.length * 3), bufIdx = 0;\n    for (var i = 0; i < str.length; i++) {\n        var charCode = str.charCodeAt(i);\n        // Naive implementation, but it works because CESU-8 is especially easy\n        // to convert from UTF-16 (which all JS strings are encoded in).\n        if (charCode < 0x80)\n            buf[bufIdx++] = charCode;\n        else if (charCode < 0x800) {\n            buf[bufIdx++] = 0xC0 + (charCode >>> 6);\n            buf[bufIdx++] = 0x80 + (charCode & 0x3f);\n        }\n        else { // charCode will always be < 0x10000 in javascript.\n            buf[bufIdx++] = 0xE0 + (charCode >>> 12);\n            buf[bufIdx++] = 0x80 + ((charCode >>> 6) & 0x3f);\n            buf[bufIdx++] = 0x80 + (charCode & 0x3f);\n        }\n    }\n    return buf.slice(0, bufIdx);\n}\n\nInternalEncoderCesu8.prototype.end = function() {\n}\n\n//------------------------------------------------------------------------------\n// CESU-8 decoder is not implemented in Node v4.0+\n\nfunction InternalDecoderCesu8(options, codec) {\n    this.acc = 0;\n    this.contBytes = 0;\n    this.accBytes = 0;\n    this.defaultCharUnicode = codec.defaultCharUnicode;\n}\n\nInternalDecoderCesu8.prototype.write = function(buf) {\n    var acc = this.acc, contBytes = this.contBytes, accBytes = this.accBytes, \n        res = '';\n    for (var i = 0; i < buf.length; i++) {\n        var curByte = buf[i];\n        if ((curByte & 0xC0) !== 0x80) { // Leading byte\n            if (contBytes > 0) { // Previous code is invalid\n                res += this.defaultCharUnicode;\n                contBytes = 0;\n            }\n\n            if (curByte < 0x80) { // Single-byte code\n                res += String.fromCharCode(curByte);\n            } else if (curByte < 0xE0) { // Two-byte code\n                acc = curByte & 0x1F;\n                contBytes = 1; accBytes = 1;\n            } else if (curByte < 0xF0) { // Three-byte code\n                acc = curByte & 0x0F;\n                contBytes = 2; accBytes = 1;\n            } else { // Four or more are not supported for CESU-8.\n                res += this.defaultCharUnicode;\n            }\n        } else { // Continuation byte\n            if (contBytes > 0) { // We're waiting for it.\n                acc = (acc << 6) | (curByte & 0x3f);\n                contBytes--; accBytes++;\n                if (contBytes === 0) {\n                    // Check for overlong encoding, but support Modified UTF-8 (encoding NULL as C0 80)\n                    if (accBytes === 2 && acc < 0x80 && acc > 0)\n                        res += this.defaultCharUnicode;\n                    else if (accBytes === 3 && acc < 0x800)\n                        res += this.defaultCharUnicode;\n                    else\n                        // Actually add character.\n                        res += String.fromCharCode(acc);\n                }\n            } else { // Unexpected continuation byte\n                res += this.defaultCharUnicode;\n            }\n        }\n    }\n    this.acc = acc; this.contBytes = contBytes; this.accBytes = accBytes;\n    return res;\n}\n\nInternalDecoderCesu8.prototype.end = function() {\n    var res = 0;\n    if (this.contBytes > 0)\n        res += this.defaultCharUnicode;\n    return res;\n}\n","\"use strict\";\nvar Buffer = require(\"safer-buffer\").Buffer;\n\n// Single-byte codec. Needs a 'chars' string parameter that contains 256 or 128 chars that\n// correspond to encoded bytes (if 128 - then lower half is ASCII). \n\nexports._sbcs = SBCSCodec;\nfunction SBCSCodec(codecOptions, iconv) {\n    if (!codecOptions)\n        throw new Error(\"SBCS codec is called without the data.\")\n    \n    // Prepare char buffer for decoding.\n    if (!codecOptions.chars || (codecOptions.chars.length !== 128 && codecOptions.chars.length !== 256))\n        throw new Error(\"Encoding '\"+codecOptions.type+\"' has incorrect 'chars' (must be of len 128 or 256)\");\n    \n    if (codecOptions.chars.length === 128) {\n        var asciiString = \"\";\n        for (var i = 0; i < 128; i++)\n            asciiString += String.fromCharCode(i);\n        codecOptions.chars = asciiString + codecOptions.chars;\n    }\n\n    this.decodeBuf = Buffer.from(codecOptions.chars, 'ucs2');\n    \n    // Encoding buffer.\n    var encodeBuf = Buffer.alloc(65536, iconv.defaultCharSingleByte.charCodeAt(0));\n\n    for (var i = 0; i < codecOptions.chars.length; i++)\n        encodeBuf[codecOptions.chars.charCodeAt(i)] = i;\n\n    this.encodeBuf = encodeBuf;\n}\n\nSBCSCodec.prototype.encoder = SBCSEncoder;\nSBCSCodec.prototype.decoder = SBCSDecoder;\n\n\nfunction SBCSEncoder(options, codec) {\n    this.encodeBuf = codec.encodeBuf;\n}\n\nSBCSEncoder.prototype.write = function(str) {\n    var buf = Buffer.alloc(str.length);\n    for (var i = 0; i < str.length; i++)\n        buf[i] = this.encodeBuf[str.charCodeAt(i)];\n    \n    return buf;\n}\n\nSBCSEncoder.prototype.end = function() {\n}\n\n\nfunction SBCSDecoder(options, codec) {\n    this.decodeBuf = codec.decodeBuf;\n}\n\nSBCSDecoder.prototype.write = function(buf) {\n    // Strings are immutable in JS -> we use ucs2 buffer to speed up computations.\n    var decodeBuf = this.decodeBuf;\n    var newBuf = Buffer.alloc(buf.length*2);\n    var idx1 = 0, idx2 = 0;\n    for (var i = 0; i < buf.length; i++) {\n        idx1 = buf[i]*2; idx2 = i*2;\n        newBuf[idx2] = decodeBuf[idx1];\n        newBuf[idx2+1] = decodeBuf[idx1+1];\n    }\n    return newBuf.toString('ucs2');\n}\n\nSBCSDecoder.prototype.end = function() {\n}\n","\"use strict\";\n\n// Generated data for sbcs codec. Don't edit manually. Regenerate using generation/gen-sbcs.js script.\nmodule.exports = {\n  \"437\": \"cp437\",\n  \"737\": \"cp737\",\n  \"775\": \"cp775\",\n  \"850\": \"cp850\",\n  \"852\": \"cp852\",\n  \"855\": \"cp855\",\n  \"856\": \"cp856\",\n  \"857\": \"cp857\",\n  \"858\": \"cp858\",\n  \"860\": \"cp860\",\n  \"861\": \"cp861\",\n  \"862\": \"cp862\",\n  \"863\": \"cp863\",\n  \"864\": \"cp864\",\n  \"865\": \"cp865\",\n  \"866\": \"cp866\",\n  \"869\": \"cp869\",\n  \"874\": \"windows874\",\n  \"922\": \"cp922\",\n  \"1046\": \"cp1046\",\n  \"1124\": \"cp1124\",\n  \"1125\": \"cp1125\",\n  \"1129\": \"cp1129\",\n  \"1133\": \"cp1133\",\n  \"1161\": \"cp1161\",\n  \"1162\": \"cp1162\",\n  \"1163\": \"cp1163\",\n  \"1250\": \"windows1250\",\n  \"1251\": \"windows1251\",\n  \"1252\": \"windows1252\",\n  \"1253\": \"windows1253\",\n  \"1254\": \"windows1254\",\n  \"1255\": \"windows1255\",\n  \"1256\": \"windows1256\",\n  \"1257\": \"windows1257\",\n  \"1258\": \"windows1258\",\n  \"28591\": \"iso88591\",\n  \"28592\": \"iso88592\",\n  \"28593\": \"iso88593\",\n  \"28594\": \"iso88594\",\n  \"28595\": \"iso88595\",\n  \"28596\": \"iso88596\",\n  \"28597\": \"iso88597\",\n  \"28598\": \"iso88598\",\n  \"28599\": \"iso88599\",\n  \"28600\": \"iso885910\",\n  \"28601\": \"iso885911\",\n  \"28603\": \"iso885913\",\n  \"28604\": \"iso885914\",\n  \"28605\": \"iso885915\",\n  \"28606\": \"iso885916\",\n  \"windows874\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"€����…�����������‘’“”•–—�������� กขฃคฅฆงจฉชซฌญฎฏฐฑฒณดตถทธนบปผฝพฟภมยรฤลฦวศษสหฬอฮฯะัาำิีึืฺุู����฿เแโใไๅๆ็่้๊๋์ํ๎๏๐๑๒๓๔๕๖๗๘๙๚๛����\"\n  },\n  \"win874\": \"windows874\",\n  \"cp874\": \"windows874\",\n  \"windows1250\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"€�‚�„…†‡�‰Š‹ŚŤŽŹ�‘’“”•–—�™š›śťžź ˇ˘Ł¤Ą¦§¨©Ş«¬­®Ż°±˛ł´µ¶·¸ąş»Ľ˝ľżŔÁÂĂÄĹĆÇČÉĘËĚÍÎĎĐŃŇÓÔŐÖ×ŘŮÚŰÜÝŢßŕáâăäĺćçčéęëěíîďđńňóôőö÷řůúűüýţ˙\"\n  },\n  \"win1250\": \"windows1250\",\n  \"cp1250\": \"windows1250\",\n  \"windows1251\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ЂЃ‚ѓ„…†‡€‰Љ‹ЊЌЋЏђ‘’“”•–—�™љ›њќћџ ЎўЈ¤Ґ¦§Ё©Є«¬­®Ї°±Ііґµ¶·ё№є»јЅѕїАБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯабвгдежзийклмнопрстуфхцчшщъыьэюя\"\n  },\n  \"win1251\": \"windows1251\",\n  \"cp1251\": \"windows1251\",\n  \"windows1252\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"€�‚ƒ„…†‡ˆ‰Š‹Œ�Ž��‘’“”•–—˜™š›œ�žŸ ¡¢£¤¥¦§¨©ª«¬­®¯°±²³´µ¶·¸¹º»¼½¾¿ÀÁÂÃÄÅÆÇÈÉÊËÌÍÎÏÐÑÒÓÔÕÖ×ØÙÚÛÜÝÞßàáâãäåæçèéêëìíîïðñòóôõö÷øùúûüýþÿ\"\n  },\n  \"win1252\": \"windows1252\",\n  \"cp1252\": \"windows1252\",\n  \"windows1253\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"€�‚ƒ„…†‡�‰�‹�����‘’“”•–—�™�›���� ΅Ά£¤¥¦§¨©�«¬­®―°±²³΄µ¶·ΈΉΊ»Ό½ΎΏΐΑΒΓΔΕΖΗΘΙΚΛΜΝΞΟΠΡ�ΣΤΥΦΧΨΩΪΫάέήίΰαβγδεζηθικλμνξοπρςστυφχψωϊϋόύώ�\"\n  },\n  \"win1253\": \"windows1253\",\n  \"cp1253\": \"windows1253\",\n  \"windows1254\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"€�‚ƒ„…†‡ˆ‰Š‹Œ����‘’“”•–—˜™š›œ��Ÿ ¡¢£¤¥¦§¨©ª«¬­®¯°±²³´µ¶·¸¹º»¼½¾¿ÀÁÂÃÄÅÆÇÈÉÊËÌÍÎÏĞÑÒÓÔÕÖ×ØÙÚÛÜİŞßàáâãäåæçèéêëìíîïğñòóôõö÷øùúûüışÿ\"\n  },\n  \"win1254\": \"windows1254\",\n  \"cp1254\": \"windows1254\",\n  \"windows1255\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"€�‚ƒ„…†‡ˆ‰�‹�����‘’“”•–—˜™�›���� ¡¢£₪¥¦§¨©×«¬­®¯°±²³´µ¶·¸¹÷»¼½¾¿ְֱֲֳִֵֶַָֹֺֻּֽ־ֿ׀ׁׂ׃װױײ׳״�������אבגדהוזחטיךכלםמןנסעףפץצקרשת��‎‏�\"\n  },\n  \"win1255\": \"windows1255\",\n  \"cp1255\": \"windows1255\",\n  \"windows1256\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"€پ‚ƒ„…†‡ˆ‰ٹ‹Œچژڈگ‘’“”•–—ک™ڑ›œ‌‍ں ،¢£¤¥¦§¨©ھ«¬­®¯°±²³´µ¶·¸¹؛»¼½¾؟ہءآأؤإئابةتثجحخدذرزسشصض×طظعغـفقكàلâمنهوçèéêëىيîïًٌٍَôُِ÷ّùْûü‎‏ے\"\n  },\n  \"win1256\": \"windows1256\",\n  \"cp1256\": \"windows1256\",\n  \"windows1257\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"€�‚�„…†‡�‰�‹�¨ˇ¸�‘’“”•–—�™�›�¯˛� �¢£¤�¦§Ø©Ŗ«¬­®Æ°±²³´µ¶·ø¹ŗ»¼½¾æĄĮĀĆÄÅĘĒČÉŹĖĢĶĪĻŠŃŅÓŌÕÖ×ŲŁŚŪÜŻŽßąįāćäåęēčéźėģķīļšńņóōõö÷ųłśūüżž˙\"\n  },\n  \"win1257\": \"windows1257\",\n  \"cp1257\": \"windows1257\",\n  \"windows1258\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"€�‚ƒ„…†‡ˆ‰�‹Œ����‘’“”•–—˜™�›œ��Ÿ ¡¢£¤¥¦§¨©ª«¬­®¯°±²³´µ¶·¸¹º»¼½¾¿ÀÁÂĂÄÅÆÇÈÉÊË̀ÍÎÏĐÑ̉ÓÔƠÖ×ØÙÚÛÜỮßàáâăäåæçèéêë́íîïđṇ̃óôơö÷øùúûüư₫ÿ\"\n  },\n  \"win1258\": \"windows1258\",\n  \"cp1258\": \"windows1258\",\n  \"iso88591\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" ¡¢£¤¥¦§¨©ª«¬­®¯°±²³´µ¶·¸¹º»¼½¾¿ÀÁÂÃÄÅÆÇÈÉÊËÌÍÎÏÐÑÒÓÔÕÖ×ØÙÚÛÜÝÞßàáâãäåæçèéêëìíîïðñòóôõö÷øùúûüýþÿ\"\n  },\n  \"cp28591\": \"iso88591\",\n  \"iso88592\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" Ą˘Ł¤ĽŚ§¨ŠŞŤŹ­ŽŻ°ą˛ł´ľśˇ¸šşťź˝žżŔÁÂĂÄĹĆÇČÉĘËĚÍÎĎĐŃŇÓÔŐÖ×ŘŮÚŰÜÝŢßŕáâăäĺćçčéęëěíîďđńňóôőö÷řůúűüýţ˙\"\n  },\n  \"cp28592\": \"iso88592\",\n  \"iso88593\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" Ħ˘£¤�Ĥ§¨İŞĞĴ­�Ż°ħ²³´µĥ·¸ışğĵ½�żÀÁÂ�ÄĊĈÇÈÉÊËÌÍÎÏ�ÑÒÓÔĠÖ×ĜÙÚÛÜŬŜßàáâ�äċĉçèéêëìíîï�ñòóôġö÷ĝùúûüŭŝ˙\"\n  },\n  \"cp28593\": \"iso88593\",\n  \"iso88594\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" ĄĸŖ¤ĨĻ§¨ŠĒĢŦ­Ž¯°ą˛ŗ´ĩļˇ¸šēģŧŊžŋĀÁÂÃÄÅÆĮČÉĘËĖÍÎĪĐŅŌĶÔÕÖ×ØŲÚÛÜŨŪßāáâãäåæįčéęëėíîīđņōķôõö÷øųúûüũū˙\"\n  },\n  \"cp28594\": \"iso88594\",\n  \"iso88595\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" ЁЂЃЄЅІЇЈЉЊЋЌ­ЎЏАБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯабвгдежзийклмнопрстуфхцчшщъыьэюя№ёђѓєѕіїјљњћќ§ўџ\"\n  },\n  \"cp28595\": \"iso88595\",\n  \"iso88596\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" ���¤�������،­�������������؛���؟�ءآأؤإئابةتثجحخدذرزسشصضطظعغ�����ـفقكلمنهوىيًٌٍَُِّْ�������������\"\n  },\n  \"cp28596\": \"iso88596\",\n  \"iso88597\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" ‘’£€₯¦§¨©ͺ«¬­�―°±²³΄΅Ά·ΈΉΊ»Ό½ΎΏΐΑΒΓΔΕΖΗΘΙΚΛΜΝΞΟΠΡ�ΣΤΥΦΧΨΩΪΫάέήίΰαβγδεζηθικλμνξοπρςστυφχψωϊϋόύώ�\"\n  },\n  \"cp28597\": \"iso88597\",\n  \"iso88598\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" �¢£¤¥¦§¨©×«¬­®¯°±²³´µ¶·¸¹÷»¼½¾��������������������������������‗אבגדהוזחטיךכלםמןנסעףפץצקרשת��‎‏�\"\n  },\n  \"cp28598\": \"iso88598\",\n  \"iso88599\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" ¡¢£¤¥¦§¨©ª«¬­®¯°±²³´µ¶·¸¹º»¼½¾¿ÀÁÂÃÄÅÆÇÈÉÊËÌÍÎÏĞÑÒÓÔÕÖ×ØÙÚÛÜİŞßàáâãäåæçèéêëìíîïğñòóôõö÷øùúûüışÿ\"\n  },\n  \"cp28599\": \"iso88599\",\n  \"iso885910\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" ĄĒĢĪĨĶ§ĻĐŠŦŽ­ŪŊ°ąēģīĩķ·ļđšŧž―ūŋĀÁÂÃÄÅÆĮČÉĘËĖÍÎÏÐŅŌÓÔÕÖŨØŲÚÛÜÝÞßāáâãäåæįčéęëėíîïðņōóôõöũøųúûüýþĸ\"\n  },\n  \"cp28600\": \"iso885910\",\n  \"iso885911\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" กขฃคฅฆงจฉชซฌญฎฏฐฑฒณดตถทธนบปผฝพฟภมยรฤลฦวศษสหฬอฮฯะัาำิีึืฺุู����฿เแโใไๅๆ็่้๊๋์ํ๎๏๐๑๒๓๔๕๖๗๘๙๚๛����\"\n  },\n  \"cp28601\": \"iso885911\",\n  \"iso885913\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" ”¢£¤„¦§Ø©Ŗ«¬­®Æ°±²³“µ¶·ø¹ŗ»¼½¾æĄĮĀĆÄÅĘĒČÉŹĖĢĶĪĻŠŃŅÓŌÕÖ×ŲŁŚŪÜŻŽßąįāćäåęēčéźėģķīļšńņóōõö÷ųłśūüżž’\"\n  },\n  \"cp28603\": \"iso885913\",\n  \"iso885914\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" Ḃḃ£ĊċḊ§Ẁ©ẂḋỲ­®ŸḞḟĠġṀṁ¶ṖẁṗẃṠỳẄẅṡÀÁÂÃÄÅÆÇÈÉÊËÌÍÎÏŴÑÒÓÔÕÖṪØÙÚÛÜÝŶßàáâãäåæçèéêëìíîïŵñòóôõöṫøùúûüýŷÿ\"\n  },\n  \"cp28604\": \"iso885914\",\n  \"iso885915\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" ¡¢£€¥Š§š©ª«¬­®¯°±²³Žµ¶·ž¹º»ŒœŸ¿ÀÁÂÃÄÅÆÇÈÉÊËÌÍÎÏÐÑÒÓÔÕÖ×ØÙÚÛÜÝÞßàáâãäåæçèéêëìíîïðñòóôõö÷øùúûüýþÿ\"\n  },\n  \"cp28605\": \"iso885915\",\n  \"iso885916\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" ĄąŁ€„Š§š©Ș«Ź­źŻ°±ČłŽ”¶·žčș»ŒœŸżÀÁÂĂÄĆÆÇÈÉÊËÌÍÎÏĐŃÒÓÔŐÖŚŰÙÚÛÜĘȚßàáâăäćæçèéêëìíîïđńòóôőöśűùúûüęțÿ\"\n  },\n  \"cp28606\": \"iso885916\",\n  \"cp437\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ÇüéâäàåçêëèïîìÄÅÉæÆôöòûùÿÖÜ¢£¥₧ƒáíóúñÑªº¿⌐¬½¼¡«»░▒▓│┤╡╢╖╕╣║╗╝╜╛┐└┴┬├─┼╞╟╚╔╩╦╠═╬╧╨╤╥╙╘╒╓╫╪┘┌█▄▌▐▀αßΓπΣσµτΦΘΩδ∞φε∩≡±≥≤⌠⌡÷≈°∙·√ⁿ²■ \"\n  },\n  \"ibm437\": \"cp437\",\n  \"csibm437\": \"cp437\",\n  \"cp737\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ΑΒΓΔΕΖΗΘΙΚΛΜΝΞΟΠΡΣΤΥΦΧΨΩαβγδεζηθικλμνξοπρσςτυφχψ░▒▓│┤╡╢╖╕╣║╗╝╜╛┐└┴┬├─┼╞╟╚╔╩╦╠═╬╧╨╤╥╙╘╒╓╫╪┘┌█▄▌▐▀ωάέήϊίόύϋώΆΈΉΊΌΎΏ±≥≤ΪΫ÷≈°∙·√ⁿ²■ \"\n  },\n  \"ibm737\": \"cp737\",\n  \"csibm737\": \"cp737\",\n  \"cp775\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ĆüéāäģåćłēŖŗīŹÄÅÉæÆōöĢ¢ŚśÖÜø£Ø×¤ĀĪóŻżź”¦©®¬½¼Ł«»░▒▓│┤ĄČĘĖ╣║╗╝ĮŠ┐└┴┬├─┼ŲŪ╚╔╩╦╠═╬Žąčęėįšųūž┘┌█▄▌▐▀ÓßŌŃõÕµńĶķĻļņĒŅ’­±“¾¶§÷„°∙·¹³²■ \"\n  },\n  \"ibm775\": \"cp775\",\n  \"csibm775\": \"cp775\",\n  \"cp850\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ÇüéâäàåçêëèïîìÄÅÉæÆôöòûùÿÖÜø£Ø×ƒáíóúñÑªº¿®¬½¼¡«»░▒▓│┤ÁÂÀ©╣║╗╝¢¥┐└┴┬├─┼ãÃ╚╔╩╦╠═╬¤ðÐÊËÈıÍÎÏ┘┌█▄¦Ì▀ÓßÔÒõÕµþÞÚÛÙýÝ¯´­±‗¾¶§÷¸°¨·¹³²■ \"\n  },\n  \"ibm850\": \"cp850\",\n  \"csibm850\": \"cp850\",\n  \"cp852\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ÇüéâäůćçłëŐőîŹÄĆÉĹĺôöĽľŚśÖÜŤťŁ×čáíóúĄąŽžĘę¬źČş«»░▒▓│┤ÁÂĚŞ╣║╗╝Żż┐└┴┬├─┼Ăă╚╔╩╦╠═╬¤đĐĎËďŇÍÎě┘┌█▄ŢŮ▀ÓßÔŃńňŠšŔÚŕŰýÝţ´­˝˛ˇ˘§÷¸°¨˙űŘř■ \"\n  },\n  \"ibm852\": \"cp852\",\n  \"csibm852\": \"cp852\",\n  \"cp855\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ђЂѓЃёЁєЄѕЅіІїЇјЈљЉњЊћЋќЌўЎџЏюЮъЪаАбБцЦдДеЕфФгГ«»░▒▓│┤хХиИ╣║╗╝йЙ┐└┴┬├─┼кК╚╔╩╦╠═╬¤лЛмМнНоОп┘┌█▄Пя▀ЯрРсСтТуУжЖвВьЬ№­ыЫзЗшШэЭщЩчЧ§■ \"\n  },\n  \"ibm855\": \"cp855\",\n  \"csibm855\": \"cp855\",\n  \"cp856\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"אבגדהוזחטיךכלםמןנסעףפץצקרשת�£�×����������®¬½¼�«»░▒▓│┤���©╣║╗╝¢¥┐└┴┬├─┼��╚╔╩╦╠═╬¤���������┘┌█▄¦�▀������µ�������¯´­±‗¾¶§÷¸°¨·¹³²■ \"\n  },\n  \"ibm856\": \"cp856\",\n  \"csibm856\": \"cp856\",\n  \"cp857\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ÇüéâäàåçêëèïîıÄÅÉæÆôöòûùİÖÜø£ØŞşáíóúñÑĞğ¿®¬½¼¡«»░▒▓│┤ÁÂÀ©╣║╗╝¢¥┐└┴┬├─┼ãÃ╚╔╩╦╠═╬¤ºªÊËÈ�ÍÎÏ┘┌█▄¦Ì▀ÓßÔÒõÕµ�×ÚÛÙìÿ¯´­±�¾¶§÷¸°¨·¹³²■ \"\n  },\n  \"ibm857\": \"cp857\",\n  \"csibm857\": \"cp857\",\n  \"cp858\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ÇüéâäàåçêëèïîìÄÅÉæÆôöòûùÿÖÜø£Ø×ƒáíóúñÑªº¿®¬½¼¡«»░▒▓│┤ÁÂÀ©╣║╗╝¢¥┐└┴┬├─┼ãÃ╚╔╩╦╠═╬¤ðÐÊËÈ€ÍÎÏ┘┌█▄¦Ì▀ÓßÔÒõÕµþÞÚÛÙýÝ¯´­±‗¾¶§÷¸°¨·¹³²■ \"\n  },\n  \"ibm858\": \"cp858\",\n  \"csibm858\": \"cp858\",\n  \"cp860\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ÇüéâãàÁçêÊèÍÔìÃÂÉÀÈôõòÚùÌÕÜ¢£Ù₧ÓáíóúñÑªº¿Ò¬½¼¡«»░▒▓│┤╡╢╖╕╣║╗╝╜╛┐└┴┬├─┼╞╟╚╔╩╦╠═╬╧╨╤╥╙╘╒╓╫╪┘┌█▄▌▐▀αßΓπΣσµτΦΘΩδ∞φε∩≡±≥≤⌠⌡÷≈°∙·√ⁿ²■ \"\n  },\n  \"ibm860\": \"cp860\",\n  \"csibm860\": \"cp860\",\n  \"cp861\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ÇüéâäàåçêëèÐðÞÄÅÉæÆôöþûÝýÖÜø£Ø₧ƒáíóúÁÍÓÚ¿⌐¬½¼¡«»░▒▓│┤╡╢╖╕╣║╗╝╜╛┐└┴┬├─┼╞╟╚╔╩╦╠═╬╧╨╤╥╙╘╒╓╫╪┘┌█▄▌▐▀αßΓπΣσµτΦΘΩδ∞φε∩≡±≥≤⌠⌡÷≈°∙·√ⁿ²■ \"\n  },\n  \"ibm861\": \"cp861\",\n  \"csibm861\": \"cp861\",\n  \"cp862\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"אבגדהוזחטיךכלםמןנסעףפץצקרשת¢£¥₧ƒáíóúñÑªº¿⌐¬½¼¡«»░▒▓│┤╡╢╖╕╣║╗╝╜╛┐└┴┬├─┼╞╟╚╔╩╦╠═╬╧╨╤╥╙╘╒╓╫╪┘┌█▄▌▐▀αßΓπΣσµτΦΘΩδ∞φε∩≡±≥≤⌠⌡÷≈°∙·√ⁿ²■ \"\n  },\n  \"ibm862\": \"cp862\",\n  \"csibm862\": \"cp862\",\n  \"cp863\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ÇüéâÂà¶çêëèïî‗À§ÉÈÊôËÏûù¤ÔÜ¢£ÙÛƒ¦´óú¨¸³¯Î⌐¬½¼¾«»░▒▓│┤╡╢╖╕╣║╗╝╜╛┐└┴┬├─┼╞╟╚╔╩╦╠═╬╧╨╤╥╙╘╒╓╫╪┘┌█▄▌▐▀αßΓπΣσµτΦΘΩδ∞φε∩≡±≥≤⌠⌡÷≈°∙·√ⁿ²■ \"\n  },\n  \"ibm863\": \"cp863\",\n  \"csibm863\": \"cp863\",\n  \"cp864\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\\u0000\\u0001\\u0002\\u0003\\u0004\\u0005\\u0006\\u0007\\b\\t\\n\\u000b\\f\\r\\u000e\\u000f\\u0010\\u0011\\u0012\\u0013\\u0014\\u0015\\u0016\\u0017\\u0018\\u0019\\u001a\\u001b\\u001c\\u001d\\u001e\\u001f !\\\"#$٪&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\\\]^_`abcdefghijklmnopqrstuvwxyz{|}~°·∙√▒─│┼┤┬├┴┐┌└┘β∞φ±½¼≈«»ﻷﻸ��ﻻﻼ� ­ﺂ£¤ﺄ��ﺎﺏﺕﺙ،ﺝﺡﺥ٠١٢٣٤٥٦٧٨٩ﻑ؛ﺱﺵﺹ؟¢ﺀﺁﺃﺅﻊﺋﺍﺑﺓﺗﺛﺟﺣﺧﺩﺫﺭﺯﺳﺷﺻﺿﻁﻅﻋﻏ¦¬÷×ﻉـﻓﻗﻛﻟﻣﻧﻫﻭﻯﻳﺽﻌﻎﻍﻡﹽّﻥﻩﻬﻰﻲﻐﻕﻵﻶﻝﻙﻱ■�\"\n  },\n  \"ibm864\": \"cp864\",\n  \"csibm864\": \"cp864\",\n  \"cp865\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ÇüéâäàåçêëèïîìÄÅÉæÆôöòûùÿÖÜø£Ø₧ƒáíóúñÑªº¿⌐¬½¼¡«¤░▒▓│┤╡╢╖╕╣║╗╝╜╛┐└┴┬├─┼╞╟╚╔╩╦╠═╬╧╨╤╥╙╘╒╓╫╪┘┌█▄▌▐▀αßΓπΣσµτΦΘΩδ∞φε∩≡±≥≤⌠⌡÷≈°∙·√ⁿ²■ \"\n  },\n  \"ibm865\": \"cp865\",\n  \"csibm865\": \"cp865\",\n  \"cp866\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"АБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯабвгдежзийклмноп░▒▓│┤╡╢╖╕╣║╗╝╜╛┐└┴┬├─┼╞╟╚╔╩╦╠═╬╧╨╤╥╙╘╒╓╫╪┘┌█▄▌▐▀рстуфхцчшщъыьэюяЁёЄєЇїЎў°∙·√№¤■ \"\n  },\n  \"ibm866\": \"cp866\",\n  \"csibm866\": \"cp866\",\n  \"cp869\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"������Ά�·¬¦‘’Έ―ΉΊΪΌ��ΎΫ©Ώ²³ά£έήίϊΐόύΑΒΓΔΕΖΗ½ΘΙ«»░▒▓│┤ΚΛΜΝ╣║╗╝ΞΟ┐└┴┬├─┼ΠΡ╚╔╩╦╠═╬ΣΤΥΦΧΨΩαβγ┘┌█▄δε▀ζηθικλμνξοπρσςτ΄­±υφχ§ψ΅°¨ωϋΰώ■ \"\n  },\n  \"ibm869\": \"cp869\",\n  \"csibm869\": \"cp869\",\n  \"cp922\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" ¡¢£¤¥¦§¨©ª«¬­®‾°±²³´µ¶·¸¹º»¼½¾¿ÀÁÂÃÄÅÆÇÈÉÊËÌÍÎÏŠÑÒÓÔÕÖ×ØÙÚÛÜÝŽßàáâãäåæçèéêëìíîïšñòóôõö÷øùúûüýžÿ\"\n  },\n  \"ibm922\": \"cp922\",\n  \"csibm922\": \"cp922\",\n  \"cp1046\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ﺈ×÷ﹱ■│─┐┌└┘ﹹﹻﹽﹿﹷﺊﻰﻳﻲﻎﻏﻐﻶﻸﻺﻼ ¤ﺋﺑﺗﺛﺟﺣ،­ﺧﺳ٠١٢٣٤٥٦٧٨٩ﺷ؛ﺻﺿﻊ؟ﻋءآأؤإئابةتثجحخدذرزسشصضطﻇعغﻌﺂﺄﺎﻓـفقكلمنهوىيًٌٍَُِّْﻗﻛﻟﻵﻷﻹﻻﻣﻧﻬﻩ�\"\n  },\n  \"ibm1046\": \"cp1046\",\n  \"csibm1046\": \"cp1046\",\n  \"cp1124\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" ЁЂҐЄЅІЇЈЉЊЋЌ­ЎЏАБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯабвгдежзийклмнопрстуфхцчшщъыьэюя№ёђґєѕіїјљњћќ§ўџ\"\n  },\n  \"ibm1124\": \"cp1124\",\n  \"csibm1124\": \"cp1124\",\n  \"cp1125\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"АБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯабвгдежзийклмноп░▒▓│┤╡╢╖╕╣║╗╝╜╛┐└┴┬├─┼╞╟╚╔╩╦╠═╬╧╨╤╥╙╘╒╓╫╪┘┌█▄▌▐▀рстуфхцчшщъыьэюяЁёҐґЄєІіЇї·√№¤■ \"\n  },\n  \"ibm1125\": \"cp1125\",\n  \"csibm1125\": \"cp1125\",\n  \"cp1129\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" ¡¢£¤¥¦§œ©ª«¬­®¯°±²³Ÿµ¶·Œ¹º»¼½¾¿ÀÁÂĂÄÅÆÇÈÉÊË̀ÍÎÏĐÑ̉ÓÔƠÖ×ØÙÚÛÜỮßàáâăäåæçèéêë́íîïđṇ̃óôơö÷øùúûüư₫ÿ\"\n  },\n  \"ibm1129\": \"cp1129\",\n  \"csibm1129\": \"cp1129\",\n  \"cp1133\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" ກຂຄງຈສຊຍດຕຖທນບປຜຝພຟມຢຣລວຫອຮ���ຯະາຳິີຶືຸູຼັົຽ���ເແໂໃໄ່້໊໋໌ໍໆ�ໜໝ₭����������������໐໑໒໓໔໕໖໗໘໙��¢¬¦�\"\n  },\n  \"ibm1133\": \"cp1133\",\n  \"csibm1133\": \"cp1133\",\n  \"cp1161\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"��������������������������������่กขฃคฅฆงจฉชซฌญฎฏฐฑฒณดตถทธนบปผฝพฟภมยรฤลฦวศษสหฬอฮฯะัาำิีึืฺุู้๊๋€฿เแโใไๅๆ็่้๊๋์ํ๎๏๐๑๒๓๔๕๖๗๘๙๚๛¢¬¦ \"\n  },\n  \"ibm1161\": \"cp1161\",\n  \"csibm1161\": \"cp1161\",\n  \"cp1162\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"€…‘’“”•–— กขฃคฅฆงจฉชซฌญฎฏฐฑฒณดตถทธนบปผฝพฟภมยรฤลฦวศษสหฬอฮฯะัาำิีึืฺุู����฿เแโใไๅๆ็่้๊๋์ํ๎๏๐๑๒๓๔๕๖๗๘๙๚๛����\"\n  },\n  \"ibm1162\": \"cp1162\",\n  \"csibm1162\": \"cp1162\",\n  \"cp1163\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" ¡¢£€¥¦§œ©ª«¬­®¯°±²³Ÿµ¶·Œ¹º»¼½¾¿ÀÁÂĂÄÅÆÇÈÉÊË̀ÍÎÏĐÑ̉ÓÔƠÖ×ØÙÚÛÜỮßàáâăäåæçèéêë́íîïđṇ̃óôơö÷øùúûüư₫ÿ\"\n  },\n  \"ibm1163\": \"cp1163\",\n  \"csibm1163\": \"cp1163\",\n  \"maccroatian\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ÄÅÇÉÑÖÜáàâäãåçéèêëíìîïñóòôöõúùûü†°¢£§•¶ß®Š™´¨≠ŽØ∞±≤≥∆µ∂∑∏š∫ªºΩžø¿¡¬√ƒ≈Ć«Č… ÀÃÕŒœĐ—“”‘’÷◊�©⁄¤‹›Æ»–·‚„‰ÂćÁčÈÍÎÏÌÓÔđÒÚÛÙıˆ˜¯πË˚¸Êæˇ\"\n  },\n  \"maccyrillic\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"АБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯ†°¢£§•¶І®©™Ђђ≠Ѓѓ∞±≤≥іµ∂ЈЄєЇїЉљЊњјЅ¬√ƒ≈∆«»… ЋћЌќѕ–—“”‘’÷„ЎўЏџ№Ёёяабвгдежзийклмнопрстуфхцчшщъыьэю¤\"\n  },\n  \"macgreek\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"Ä¹²É³ÖÜ΅àâä΄¨çéèêë£™îï•½‰ôö¦­ùûü†ΓΔΘΛΞΠß®©ΣΪ§≠°·Α±≤≥¥ΒΕΖΗΙΚΜΦΫΨΩάΝ¬ΟΡ≈Τ«»… ΥΧΆΈœ–―“”‘’÷ΉΊΌΎέήίόΏύαβψδεφγηιξκλμνοπώρστθωςχυζϊϋΐΰ�\"\n  },\n  \"maciceland\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ÄÅÇÉÑÖÜáàâäãåçéèêëíìîïñóòôöõúùûüÝ°¢£§•¶ß®©™´¨≠ÆØ∞±≤≥¥µ∂∑∏π∫ªºΩæø¿¡¬√ƒ≈∆«»… ÀÃÕŒœ–—“”‘’÷◊ÿŸ⁄¤ÐðÞþý·‚„‰ÂÊÁËÈÍÎÏÌÓÔ�ÒÚÛÙıˆ˜¯˘˙˚¸˝˛ˇ\"\n  },\n  \"macroman\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ÄÅÇÉÑÖÜáàâäãåçéèêëíìîïñóòôöõúùûü†°¢£§•¶ß®©™´¨≠ÆØ∞±≤≥¥µ∂∑∏π∫ªºΩæø¿¡¬√ƒ≈∆«»… ÀÃÕŒœ–—“”‘’÷◊ÿŸ⁄¤‹›ﬁﬂ‡·‚„‰ÂÊÁËÈÍÎÏÌÓÔ�ÒÚÛÙıˆ˜¯˘˙˚¸˝˛ˇ\"\n  },\n  \"macromania\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ÄÅÇÉÑÖÜáàâäãåçéèêëíìîïñóòôöõúùûü†°¢£§•¶ß®©™´¨≠ĂŞ∞±≤≥¥µ∂∑∏π∫ªºΩăş¿¡¬√ƒ≈∆«»… ÀÃÕŒœ–—“”‘’÷◊ÿŸ⁄¤‹›Ţţ‡·‚„‰ÂÊÁËÈÍÎÏÌÓÔ�ÒÚÛÙıˆ˜¯˘˙˚¸˝˛ˇ\"\n  },\n  \"macthai\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"«»…“”�•‘’� กขฃคฅฆงจฉชซฌญฎฏฐฑฒณดตถทธนบปผฝพฟภมยรฤลฦวศษสหฬอฮฯะัาำิีึืฺุู﻿​–—฿เแโใไๅๆ็่้๊๋์ํ™๏๐๑๒๓๔๕๖๗๘๙®©����\"\n  },\n  \"macturkish\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ÄÅÇÉÑÖÜáàâäãåçéèêëíìîïñóòôöõúùûü†°¢£§•¶ß®©™´¨≠ÆØ∞±≤≥¥µ∂∑∏π∫ªºΩæø¿¡¬√ƒ≈∆«»… ÀÃÕŒœ–—“”‘’÷◊ÿŸĞğİıŞş‡·‚„‰ÂÊÁËÈÍÎÏÌÓÔ�ÒÚÛÙ�ˆ˜¯˘˙˚¸˝˛ˇ\"\n  },\n  \"macukraine\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"АБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯ†°Ґ£§•¶І®©™Ђђ≠Ѓѓ∞±≤≥іµґЈЄєЇїЉљЊњјЅ¬√ƒ≈∆«»… ЋћЌќѕ–—“”‘’÷„ЎўЏџ№Ёёяабвгдежзийклмнопрстуфхцчшщъыьэю¤\"\n  },\n  \"koi8r\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"─│┌┐└┘├┤┬┴┼▀▄█▌▐░▒▓⌠■∙√≈≤≥ ⌡°²·÷═║╒ё╓╔╕╖╗╘╙╚╛╜╝╞╟╠╡Ё╢╣╤╥╦╧╨╩╪╫╬©юабцдефгхийклмнопярстужвьызшэщчъЮАБЦДЕФГХИЙКЛМНОПЯРСТУЖВЬЫЗШЭЩЧЪ\"\n  },\n  \"koi8u\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"─│┌┐└┘├┤┬┴┼▀▄█▌▐░▒▓⌠■∙√≈≤≥ ⌡°²·÷═║╒ёє╔ії╗╘╙╚╛ґ╝╞╟╠╡ЁЄ╣ІЇ╦╧╨╩╪Ґ╬©юабцдефгхийклмнопярстужвьызшэщчъЮАБЦДЕФГХИЙКЛМНОПЯРСТУЖВЬЫЗШЭЩЧЪ\"\n  },\n  \"koi8ru\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"─│┌┐└┘├┤┬┴┼▀▄█▌▐░▒▓⌠■∙√≈≤≥ ⌡°²·÷═║╒ёє╔ії╗╘╙╚╛ґў╞╟╠╡ЁЄ╣ІЇ╦╧╨╩╪ҐЎ©юабцдефгхийклмнопярстужвьызшэщчъЮАБЦДЕФГХИЙКЛМНОПЯРСТУЖВЬЫЗШЭЩЧЪ\"\n  },\n  \"koi8t\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"қғ‚Ғ„…†‡�‰ҳ‹ҲҷҶ�Қ‘’“”•–—�™�›�����ӯӮё¤ӣ¦§���«¬­®�°±²Ё�Ӣ¶·�№�»���©юабцдефгхийклмнопярстужвьызшэщчъЮАБЦДЕФГХИЙКЛМНОПЯРСТУЖВЬЫЗШЭЩЧЪ\"\n  },\n  \"armscii8\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" �և։)(»«—.՝,-֊…՜՛՞ԱաԲբԳգԴդԵեԶզԷէԸըԹթԺժԻիԼլԽխԾծԿկՀհՁձՂղՃճՄմՅյՆնՇշՈոՉչՊպՋջՌռՍսՎվՏտՐրՑցՒւՓփՔքՕօՖֆ՚�\"\n  },\n  \"rk1048\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ЂЃ‚ѓ„…†‡€‰Љ‹ЊҚҺЏђ‘’“”•–—�™љ›њқһџ ҰұӘ¤Ө¦§Ё©Ғ«¬­®Ү°±Ііөµ¶·ё№ғ»әҢңүАБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯабвгдежзийклмнопрстуфхцчшщъыьэюя\"\n  },\n  \"tcvn\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\\u0000ÚỤ\\u0003ỪỬỮ\\u0007\\b\\t\\n\\u000b\\f\\r\\u000e\\u000f\\u0010ỨỰỲỶỸÝỴ\\u0018\\u0019\\u001a\\u001b\\u001c\\u001d\\u001e\\u001f !\\\"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\\\]^_`abcdefghijklmnopqrstuvwxyz{|}~ÀẢÃÁẠẶẬÈẺẼÉẸỆÌỈĨÍỊÒỎÕÓỌỘỜỞỠỚỢÙỦŨ ĂÂÊÔƠƯĐăâêôơưđẶ̀̀̉̃́àảãáạẲằẳẵắẴẮẦẨẪẤỀặầẩẫấậèỂẻẽéẹềểễếệìỉỄẾỒĩíịòỔỏõóọồổỗốộờởỡớợùỖủũúụừửữứựỳỷỹýỵỐ\"\n  },\n  \"georgianacademy\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"‚ƒ„…†‡ˆ‰Š‹Œ‘’“”•–—˜™š›œŸ ¡¢£¤¥¦§¨©ª«¬­®¯°±²³´µ¶·¸¹º»¼½¾¿აბგდევზთიკლმნოპჟრსტუფქღყშჩცძწჭხჯჰჱჲჳჴჵჶçèéêëìíîïðñòóôõö÷øùúûüýþÿ\"\n  },\n  \"georgianps\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"‚ƒ„…†‡ˆ‰Š‹Œ‘’“”•–—˜™š›œŸ ¡¢£¤¥¦§¨©ª«¬­®¯°±²³´µ¶·¸¹º»¼½¾¿აბგდევზჱთიკლმნჲოპჟრსტჳუფქღყშჩცძწჭხჴჯჰჵæçèéêëìíîïðñòóôõö÷øùúûüýþÿ\"\n  },\n  \"pt154\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ҖҒӮғ„…ҶҮҲүҠӢҢҚҺҸҗ‘’“”•–—ҳҷҡӣңқһҹ ЎўЈӨҘҰ§Ё©Ә«¬ӯ®Ҝ°ұІіҙө¶·ё№ә»јҪҫҝАБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯабвгдежзийклмнопрстуфхцчшщъыьэюя\"\n  },\n  \"viscii\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\\u0000\\u0001Ẳ\\u0003\\u0004ẴẪ\\u0007\\b\\t\\n\\u000b\\f\\r\\u000e\\u000f\\u0010\\u0011\\u0012\\u0013Ỷ\\u0015\\u0016\\u0017\\u0018Ỹ\\u001a\\u001b\\u001c\\u001dỴ\\u001f !\\\"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\\\]^_`abcdefghijklmnopqrstuvwxyz{|}~ẠẮẰẶẤẦẨẬẼẸẾỀỂỄỆỐỒỔỖỘỢỚỜỞỊỎỌỈỦŨỤỲÕắằặấầẩậẽẹếềểễệốồổỗỠƠộờởịỰỨỪỬơớƯÀÁÂÃẢĂẳẵÈÉÊẺÌÍĨỳĐứÒÓÔạỷừửÙÚỹỵÝỡưàáâãảăữẫèéêẻìíĩỉđựòóôõỏọụùúũủýợỮ\"\n  },\n  \"iso646cn\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\\u0000\\u0001\\u0002\\u0003\\u0004\\u0005\\u0006\\u0007\\b\\t\\n\\u000b\\f\\r\\u000e\\u000f\\u0010\\u0011\\u0012\\u0013\\u0014\\u0015\\u0016\\u0017\\u0018\\u0019\\u001a\\u001b\\u001c\\u001d\\u001e\\u001f !\\\"#¥%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\\\]^_`abcdefghijklmnopqrstuvwxyz{|}‾��������������������������������������������������������������������������������������������������������������������������������\"\n  },\n  \"iso646jp\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\\u0000\\u0001\\u0002\\u0003\\u0004\\u0005\\u0006\\u0007\\b\\t\\n\\u000b\\f\\r\\u000e\\u000f\\u0010\\u0011\\u0012\\u0013\\u0014\\u0015\\u0016\\u0017\\u0018\\u0019\\u001a\\u001b\\u001c\\u001d\\u001e\\u001f !\\\"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[¥]^_`abcdefghijklmnopqrstuvwxyz{|}‾��������������������������������������������������������������������������������������������������������������������������������\"\n  },\n  \"hproman8\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" ÀÂÈÊËÎÏ´ˋˆ¨˜ÙÛ₤¯Ýý°ÇçÑñ¡¿¤£¥§ƒ¢âêôûáéóúàèòùäëöüÅîØÆåíøæÄìÖÜÉïßÔÁÃãÐðÍÌÓÒÕõŠšÚŸÿÞþ·µ¶¾—¼½ªº«■»±�\"\n  },\n  \"macintosh\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ÄÅÇÉÑÖÜáàâäãåçéèêëíìîïñóòôöõúùûü†°¢£§•¶ß®©™´¨≠ÆØ∞±≤≥¥µ∂∑∏π∫ªºΩæø¿¡¬√ƒ≈∆«»… ÀÃÕŒœ–—“”‘’÷◊ÿŸ⁄¤‹›ﬁﬂ‡·‚„‰ÂÊÁËÈÍÎÏÌÓÔ�ÒÚÛÙıˆ˜¯˘˙˚¸˝˛ˇ\"\n  },\n  \"ascii\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"��������������������������������������������������������������������������������������������������������������������������������\"\n  },\n  \"tis620\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"���������������������������������กขฃคฅฆงจฉชซฌญฎฏฐฑฒณดตถทธนบปผฝพฟภมยรฤลฦวศษสหฬอฮฯะัาำิีึืฺุู����฿เแโใไๅๆ็่้๊๋์ํ๎๏๐๑๒๓๔๕๖๗๘๙๚๛����\"\n  }\n}","\"use strict\";\n\n// Manually added data to be used by sbcs codec in addition to generated one.\n\nmodule.exports = {\n    // Not supported by iconv, not sure why.\n    \"10029\": \"maccenteuro\",\n    \"maccenteuro\": {\n        \"type\": \"_sbcs\",\n        \"chars\": \"ÄĀāÉĄÖÜáąČäčĆćéŹźĎíďĒēĖóėôöõúĚěü†°Ę£§•¶ß®©™ę¨≠ģĮįĪ≤≥īĶ∂∑łĻļĽľĹĺŅņŃ¬√ńŇ∆«»… ňŐÕőŌ–—“”‘’÷◊ōŔŕŘ‹›řŖŗŠ‚„šŚśÁŤťÍŽžŪÓÔūŮÚůŰűŲųÝýķŻŁżĢˇ\"\n    },\n\n    \"808\": \"cp808\",\n    \"ibm808\": \"cp808\",\n    \"cp808\": {\n        \"type\": \"_sbcs\",\n        \"chars\": \"АБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯабвгдежзийклмноп░▒▓│┤╡╢╖╕╣║╗╝╜╛┐└┴┬├─┼╞╟╚╔╩╦╠═╬╧╨╤╥╙╘╒╓╫╪┘┌█▄▌▐▀рстуфхцчшщъыьэюяЁёЄєЇїЎў°∙·√№€■ \"\n    },\n\n    \"mik\": {\n        \"type\": \"_sbcs\",\n        \"chars\": \"АБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯабвгдежзийклмнопрстуфхцчшщъыьэюя└┴┬├─┼╣║╚╔╩╦╠═╬┐░▒▓│┤№§╗╝┘┌█▄▌▐▀αßΓπΣσµτΦΘΩδ∞φε∩≡±≥≤⌠⌡÷≈°∙·√ⁿ²■ \"\n    },\n\n    // Aliases of generated encodings.\n    \"ascii8bit\": \"ascii\",\n    \"usascii\": \"ascii\",\n    \"ansix34\": \"ascii\",\n    \"ansix341968\": \"ascii\",\n    \"ansix341986\": \"ascii\",\n    \"csascii\": \"ascii\",\n    \"cp367\": \"ascii\",\n    \"ibm367\": \"ascii\",\n    \"isoir6\": \"ascii\",\n    \"iso646us\": \"ascii\",\n    \"iso646irv\": \"ascii\",\n    \"us\": \"ascii\",\n\n    \"latin1\": \"iso88591\",\n    \"latin2\": \"iso88592\",\n    \"latin3\": \"iso88593\",\n    \"latin4\": \"iso88594\",\n    \"latin5\": \"iso88599\",\n    \"latin6\": \"iso885910\",\n    \"latin7\": \"iso885913\",\n    \"latin8\": \"iso885914\",\n    \"latin9\": \"iso885915\",\n    \"latin10\": \"iso885916\",\n\n    \"csisolatin1\": \"iso88591\",\n    \"csisolatin2\": \"iso88592\",\n    \"csisolatin3\": \"iso88593\",\n    \"csisolatin4\": \"iso88594\",\n    \"csisolatincyrillic\": \"iso88595\",\n    \"csisolatinarabic\": \"iso88596\",\n    \"csisolatingreek\" : \"iso88597\",\n    \"csisolatinhebrew\": \"iso88598\",\n    \"csisolatin5\": \"iso88599\",\n    \"csisolatin6\": \"iso885910\",\n\n    \"l1\": \"iso88591\",\n    \"l2\": \"iso88592\",\n    \"l3\": \"iso88593\",\n    \"l4\": \"iso88594\",\n    \"l5\": \"iso88599\",\n    \"l6\": \"iso885910\",\n    \"l7\": \"iso885913\",\n    \"l8\": \"iso885914\",\n    \"l9\": \"iso885915\",\n    \"l10\": \"iso885916\",\n\n    \"isoir14\": \"iso646jp\",\n    \"isoir57\": \"iso646cn\",\n    \"isoir100\": \"iso88591\",\n    \"isoir101\": \"iso88592\",\n    \"isoir109\": \"iso88593\",\n    \"isoir110\": \"iso88594\",\n    \"isoir144\": \"iso88595\",\n    \"isoir127\": \"iso88596\",\n    \"isoir126\": \"iso88597\",\n    \"isoir138\": \"iso88598\",\n    \"isoir148\": \"iso88599\",\n    \"isoir157\": \"iso885910\",\n    \"isoir166\": \"tis620\",\n    \"isoir179\": \"iso885913\",\n    \"isoir199\": \"iso885914\",\n    \"isoir203\": \"iso885915\",\n    \"isoir226\": \"iso885916\",\n\n    \"cp819\": \"iso88591\",\n    \"ibm819\": \"iso88591\",\n\n    \"cyrillic\": \"iso88595\",\n\n    \"arabic\": \"iso88596\",\n    \"arabic8\": \"iso88596\",\n    \"ecma114\": \"iso88596\",\n    \"asmo708\": \"iso88596\",\n\n    \"greek\" : \"iso88597\",\n    \"greek8\" : \"iso88597\",\n    \"ecma118\" : \"iso88597\",\n    \"elot928\" : \"iso88597\",\n\n    \"hebrew\": \"iso88598\",\n    \"hebrew8\": \"iso88598\",\n\n    \"turkish\": \"iso88599\",\n    \"turkish8\": \"iso88599\",\n\n    \"thai\": \"iso885911\",\n    \"thai8\": \"iso885911\",\n\n    \"celtic\": \"iso885914\",\n    \"celtic8\": \"iso885914\",\n    \"isoceltic\": \"iso885914\",\n\n    \"tis6200\": \"tis620\",\n    \"tis62025291\": \"tis620\",\n    \"tis62025330\": \"tis620\",\n\n    \"10000\": \"macroman\",\n    \"10006\": \"macgreek\",\n    \"10007\": \"maccyrillic\",\n    \"10079\": \"maciceland\",\n    \"10081\": \"macturkish\",\n\n    \"cspc8codepage437\": \"cp437\",\n    \"cspc775baltic\": \"cp775\",\n    \"cspc850multilingual\": \"cp850\",\n    \"cspcp852\": \"cp852\",\n    \"cspc862latinhebrew\": \"cp862\",\n    \"cpgr\": \"cp869\",\n\n    \"msee\": \"cp1250\",\n    \"mscyrl\": \"cp1251\",\n    \"msansi\": \"cp1252\",\n    \"msgreek\": \"cp1253\",\n    \"msturk\": \"cp1254\",\n    \"mshebr\": \"cp1255\",\n    \"msarab\": \"cp1256\",\n    \"winbaltrim\": \"cp1257\",\n\n    \"cp20866\": \"koi8r\",\n    \"20866\": \"koi8r\",\n    \"ibm878\": \"koi8r\",\n    \"cskoi8r\": \"koi8r\",\n\n    \"cp21866\": \"koi8u\",\n    \"21866\": \"koi8u\",\n    \"ibm1168\": \"koi8u\",\n\n    \"strk10482002\": \"rk1048\",\n\n    \"tcvn5712\": \"tcvn\",\n    \"tcvn57121\": \"tcvn\",\n\n    \"gb198880\": \"iso646cn\",\n    \"cn\": \"iso646cn\",\n\n    \"csiso14jisc6220ro\": \"iso646jp\",\n    \"jisc62201969ro\": \"iso646jp\",\n    \"jp\": \"iso646jp\",\n\n    \"cshproman8\": \"hproman8\",\n    \"r8\": \"hproman8\",\n    \"roman8\": \"hproman8\",\n    \"xroman8\": \"hproman8\",\n    \"ibm1051\": \"hproman8\",\n\n    \"mac\": \"macintosh\",\n    \"csmacintosh\": \"macintosh\",\n};\n\n","\"use strict\";\nvar Buffer = require(\"safer-buffer\").Buffer;\n\n// Note: UTF16-LE (or UCS2) codec is Node.js native. See encodings/internal.js\n\n// == UTF16-BE codec. ==========================================================\n\nexports.utf16be = Utf16BECodec;\nfunction Utf16BECodec() {\n}\n\nUtf16BECodec.prototype.encoder = Utf16BEEncoder;\nUtf16BECodec.prototype.decoder = Utf16BEDecoder;\nUtf16BECodec.prototype.bomAware = true;\n\n\n// -- Encoding\n\nfunction Utf16BEEncoder() {\n}\n\nUtf16BEEncoder.prototype.write = function(str) {\n    var buf = Buffer.from(str, 'ucs2');\n    for (var i = 0; i < buf.length; i += 2) {\n        var tmp = buf[i]; buf[i] = buf[i+1]; buf[i+1] = tmp;\n    }\n    return buf;\n}\n\nUtf16BEEncoder.prototype.end = function() {\n}\n\n\n// -- Decoding\n\nfunction Utf16BEDecoder() {\n    this.overflowByte = -1;\n}\n\nUtf16BEDecoder.prototype.write = function(buf) {\n    if (buf.length == 0)\n        return '';\n\n    var buf2 = Buffer.alloc(buf.length + 1),\n        i = 0, j = 0;\n\n    if (this.overflowByte !== -1) {\n        buf2[0] = buf[0];\n        buf2[1] = this.overflowByte;\n        i = 1; j = 2;\n    }\n\n    for (; i < buf.length-1; i += 2, j+= 2) {\n        buf2[j] = buf[i+1];\n        buf2[j+1] = buf[i];\n    }\n\n    this.overflowByte = (i == buf.length-1) ? buf[buf.length-1] : -1;\n\n    return buf2.slice(0, j).toString('ucs2');\n}\n\nUtf16BEDecoder.prototype.end = function() {\n}\n\n\n// == UTF-16 codec =============================================================\n// Decoder chooses automatically from UTF-16LE and UTF-16BE using BOM and space-based heuristic.\n// Defaults to UTF-16LE, as it's prevalent and default in Node.\n// http://en.wikipedia.org/wiki/UTF-16 and http://encoding.spec.whatwg.org/#utf-16le\n// Decoder default can be changed: iconv.decode(buf, 'utf16', {defaultEncoding: 'utf-16be'});\n\n// Encoder uses UTF-16LE and prepends BOM (which can be overridden with addBOM: false).\n\nexports.utf16 = Utf16Codec;\nfunction Utf16Codec(codecOptions, iconv) {\n    this.iconv = iconv;\n}\n\nUtf16Codec.prototype.encoder = Utf16Encoder;\nUtf16Codec.prototype.decoder = Utf16Decoder;\n\n\n// -- Encoding (pass-through)\n\nfunction Utf16Encoder(options, codec) {\n    options = options || {};\n    if (options.addBOM === undefined)\n        options.addBOM = true;\n    this.encoder = codec.iconv.getEncoder('utf-16le', options);\n}\n\nUtf16Encoder.prototype.write = function(str) {\n    return this.encoder.write(str);\n}\n\nUtf16Encoder.prototype.end = function() {\n    return this.encoder.end();\n}\n\n\n// -- Decoding\n\nfunction Utf16Decoder(options, codec) {\n    this.decoder = null;\n    this.initialBytes = [];\n    this.initialBytesLen = 0;\n\n    this.options = options || {};\n    this.iconv = codec.iconv;\n}\n\nUtf16Decoder.prototype.write = function(buf) {\n    if (!this.decoder) {\n        // Codec is not chosen yet. Accumulate initial bytes.\n        this.initialBytes.push(buf);\n        this.initialBytesLen += buf.length;\n        \n        if (this.initialBytesLen < 16) // We need more bytes to use space heuristic (see below)\n            return '';\n\n        // We have enough bytes -> detect endianness.\n        var buf = Buffer.concat(this.initialBytes),\n            encoding = detectEncoding(buf, this.options.defaultEncoding);\n        this.decoder = this.iconv.getDecoder(encoding, this.options);\n        this.initialBytes.length = this.initialBytesLen = 0;\n    }\n\n    return this.decoder.write(buf);\n}\n\nUtf16Decoder.prototype.end = function() {\n    if (!this.decoder) {\n        var buf = Buffer.concat(this.initialBytes),\n            encoding = detectEncoding(buf, this.options.defaultEncoding);\n        this.decoder = this.iconv.getDecoder(encoding, this.options);\n\n        var res = this.decoder.write(buf),\n            trail = this.decoder.end();\n\n        return trail ? (res + trail) : res;\n    }\n    return this.decoder.end();\n}\n\nfunction detectEncoding(buf, defaultEncoding) {\n    var enc = defaultEncoding || 'utf-16le';\n\n    if (buf.length >= 2) {\n        // Check BOM.\n        if (buf[0] == 0xFE && buf[1] == 0xFF) // UTF-16BE BOM\n            enc = 'utf-16be';\n        else if (buf[0] == 0xFF && buf[1] == 0xFE) // UTF-16LE BOM\n            enc = 'utf-16le';\n        else {\n            // No BOM found. Try to deduce encoding from initial content.\n            // Most of the time, the content has ASCII chars (U+00**), but the opposite (U+**00) is uncommon.\n            // So, we count ASCII as if it was LE or BE, and decide from that.\n            var asciiCharsLE = 0, asciiCharsBE = 0, // Counts of chars in both positions\n                _len = Math.min(buf.length - (buf.length % 2), 64); // Len is always even.\n\n            for (var i = 0; i < _len; i += 2) {\n                if (buf[i] === 0 && buf[i+1] !== 0) asciiCharsBE++;\n                if (buf[i] !== 0 && buf[i+1] === 0) asciiCharsLE++;\n            }\n\n            if (asciiCharsBE > asciiCharsLE)\n                enc = 'utf-16be';\n            else if (asciiCharsBE < asciiCharsLE)\n                enc = 'utf-16le';\n        }\n    }\n\n    return enc;\n}\n\n\n","\"use strict\";\nvar Buffer = require(\"safer-buffer\").Buffer;\n\n// UTF-7 codec, according to https://tools.ietf.org/html/rfc2152\n// See also below a UTF-7-IMAP codec, according to http://tools.ietf.org/html/rfc3501#section-5.1.3\n\nexports.utf7 = Utf7Codec;\nexports.unicode11utf7 = 'utf7'; // Alias UNICODE-1-1-UTF-7\nfunction Utf7Codec(codecOptions, iconv) {\n    this.iconv = iconv;\n};\n\nUtf7Codec.prototype.encoder = Utf7Encoder;\nUtf7Codec.prototype.decoder = Utf7Decoder;\nUtf7Codec.prototype.bomAware = true;\n\n\n// -- Encoding\n\nvar nonDirectChars = /[^A-Za-z0-9'\\(\\),-\\.\\/:\\? \\n\\r\\t]+/g;\n\nfunction Utf7Encoder(options, codec) {\n    this.iconv = codec.iconv;\n}\n\nUtf7Encoder.prototype.write = function(str) {\n    // Naive implementation.\n    // Non-direct chars are encoded as \"+<base64>-\"; single \"+\" char is encoded as \"+-\".\n    return Buffer.from(str.replace(nonDirectChars, function(chunk) {\n        return \"+\" + (chunk === '+' ? '' : \n            this.iconv.encode(chunk, 'utf16-be').toString('base64').replace(/=+$/, '')) \n            + \"-\";\n    }.bind(this)));\n}\n\nUtf7Encoder.prototype.end = function() {\n}\n\n\n// -- Decoding\n\nfunction Utf7Decoder(options, codec) {\n    this.iconv = codec.iconv;\n    this.inBase64 = false;\n    this.base64Accum = '';\n}\n\nvar base64Regex = /[A-Za-z0-9\\/+]/;\nvar base64Chars = [];\nfor (var i = 0; i < 256; i++)\n    base64Chars[i] = base64Regex.test(String.fromCharCode(i));\n\nvar plusChar = '+'.charCodeAt(0), \n    minusChar = '-'.charCodeAt(0),\n    andChar = '&'.charCodeAt(0);\n\nUtf7Decoder.prototype.write = function(buf) {\n    var res = \"\", lastI = 0,\n        inBase64 = this.inBase64,\n        base64Accum = this.base64Accum;\n\n    // The decoder is more involved as we must handle chunks in stream.\n\n    for (var i = 0; i < buf.length; i++) {\n        if (!inBase64) { // We're in direct mode.\n            // Write direct chars until '+'\n            if (buf[i] == plusChar) {\n                res += this.iconv.decode(buf.slice(lastI, i), \"ascii\"); // Write direct chars.\n                lastI = i+1;\n                inBase64 = true;\n            }\n        } else { // We decode base64.\n            if (!base64Chars[buf[i]]) { // Base64 ended.\n                if (i == lastI && buf[i] == minusChar) {// \"+-\" -> \"+\"\n                    res += \"+\";\n                } else {\n                    var b64str = base64Accum + buf.slice(lastI, i).toString();\n                    res += this.iconv.decode(Buffer.from(b64str, 'base64'), \"utf16-be\");\n                }\n\n                if (buf[i] != minusChar) // Minus is absorbed after base64.\n                    i--;\n\n                lastI = i+1;\n                inBase64 = false;\n                base64Accum = '';\n            }\n        }\n    }\n\n    if (!inBase64) {\n        res += this.iconv.decode(buf.slice(lastI), \"ascii\"); // Write direct chars.\n    } else {\n        var b64str = base64Accum + buf.slice(lastI).toString();\n\n        var canBeDecoded = b64str.length - (b64str.length % 8); // Minimal chunk: 2 quads -> 2x3 bytes -> 3 chars.\n        base64Accum = b64str.slice(canBeDecoded); // The rest will be decoded in future.\n        b64str = b64str.slice(0, canBeDecoded);\n\n        res += this.iconv.decode(Buffer.from(b64str, 'base64'), \"utf16-be\");\n    }\n\n    this.inBase64 = inBase64;\n    this.base64Accum = base64Accum;\n\n    return res;\n}\n\nUtf7Decoder.prototype.end = function() {\n    var res = \"\";\n    if (this.inBase64 && this.base64Accum.length > 0)\n        res = this.iconv.decode(Buffer.from(this.base64Accum, 'base64'), \"utf16-be\");\n\n    this.inBase64 = false;\n    this.base64Accum = '';\n    return res;\n}\n\n\n// UTF-7-IMAP codec.\n// RFC3501 Sec. 5.1.3 Modified UTF-7 (http://tools.ietf.org/html/rfc3501#section-5.1.3)\n// Differences:\n//  * Base64 part is started by \"&\" instead of \"+\"\n//  * Direct characters are 0x20-0x7E, except \"&\" (0x26)\n//  * In Base64, \",\" is used instead of \"/\"\n//  * Base64 must not be used to represent direct characters.\n//  * No implicit shift back from Base64 (should always end with '-')\n//  * String must end in non-shifted position.\n//  * \"-&\" while in base64 is not allowed.\n\n\nexports.utf7imap = Utf7IMAPCodec;\nfunction Utf7IMAPCodec(codecOptions, iconv) {\n    this.iconv = iconv;\n};\n\nUtf7IMAPCodec.prototype.encoder = Utf7IMAPEncoder;\nUtf7IMAPCodec.prototype.decoder = Utf7IMAPDecoder;\nUtf7IMAPCodec.prototype.bomAware = true;\n\n\n// -- Encoding\n\nfunction Utf7IMAPEncoder(options, codec) {\n    this.iconv = codec.iconv;\n    this.inBase64 = false;\n    this.base64Accum = Buffer.alloc(6);\n    this.base64AccumIdx = 0;\n}\n\nUtf7IMAPEncoder.prototype.write = function(str) {\n    var inBase64 = this.inBase64,\n        base64Accum = this.base64Accum,\n        base64AccumIdx = this.base64AccumIdx,\n        buf = Buffer.alloc(str.length*5 + 10), bufIdx = 0;\n\n    for (var i = 0; i < str.length; i++) {\n        var uChar = str.charCodeAt(i);\n        if (0x20 <= uChar && uChar <= 0x7E) { // Direct character or '&'.\n            if (inBase64) {\n                if (base64AccumIdx > 0) {\n                    bufIdx += buf.write(base64Accum.slice(0, base64AccumIdx).toString('base64').replace(/\\//g, ',').replace(/=+$/, ''), bufIdx);\n                    base64AccumIdx = 0;\n                }\n\n                buf[bufIdx++] = minusChar; // Write '-', then go to direct mode.\n                inBase64 = false;\n            }\n\n            if (!inBase64) {\n                buf[bufIdx++] = uChar; // Write direct character\n\n                if (uChar === andChar)  // Ampersand -> '&-'\n                    buf[bufIdx++] = minusChar;\n            }\n\n        } else { // Non-direct character\n            if (!inBase64) {\n                buf[bufIdx++] = andChar; // Write '&', then go to base64 mode.\n                inBase64 = true;\n            }\n            if (inBase64) {\n                base64Accum[base64AccumIdx++] = uChar >> 8;\n                base64Accum[base64AccumIdx++] = uChar & 0xFF;\n\n                if (base64AccumIdx == base64Accum.length) {\n                    bufIdx += buf.write(base64Accum.toString('base64').replace(/\\//g, ','), bufIdx);\n                    base64AccumIdx = 0;\n                }\n            }\n        }\n    }\n\n    this.inBase64 = inBase64;\n    this.base64AccumIdx = base64AccumIdx;\n\n    return buf.slice(0, bufIdx);\n}\n\nUtf7IMAPEncoder.prototype.end = function() {\n    var buf = Buffer.alloc(10), bufIdx = 0;\n    if (this.inBase64) {\n        if (this.base64AccumIdx > 0) {\n            bufIdx += buf.write(this.base64Accum.slice(0, this.base64AccumIdx).toString('base64').replace(/\\//g, ',').replace(/=+$/, ''), bufIdx);\n            this.base64AccumIdx = 0;\n        }\n\n        buf[bufIdx++] = minusChar; // Write '-', then go to direct mode.\n        this.inBase64 = false;\n    }\n\n    return buf.slice(0, bufIdx);\n}\n\n\n// -- Decoding\n\nfunction Utf7IMAPDecoder(options, codec) {\n    this.iconv = codec.iconv;\n    this.inBase64 = false;\n    this.base64Accum = '';\n}\n\nvar base64IMAPChars = base64Chars.slice();\nbase64IMAPChars[','.charCodeAt(0)] = true;\n\nUtf7IMAPDecoder.prototype.write = function(buf) {\n    var res = \"\", lastI = 0,\n        inBase64 = this.inBase64,\n        base64Accum = this.base64Accum;\n\n    // The decoder is more involved as we must handle chunks in stream.\n    // It is forgiving, closer to standard UTF-7 (for example, '-' is optional at the end).\n\n    for (var i = 0; i < buf.length; i++) {\n        if (!inBase64) { // We're in direct mode.\n            // Write direct chars until '&'\n            if (buf[i] == andChar) {\n                res += this.iconv.decode(buf.slice(lastI, i), \"ascii\"); // Write direct chars.\n                lastI = i+1;\n                inBase64 = true;\n            }\n        } else { // We decode base64.\n            if (!base64IMAPChars[buf[i]]) { // Base64 ended.\n                if (i == lastI && buf[i] == minusChar) { // \"&-\" -> \"&\"\n                    res += \"&\";\n                } else {\n                    var b64str = base64Accum + buf.slice(lastI, i).toString().replace(/,/g, '/');\n                    res += this.iconv.decode(Buffer.from(b64str, 'base64'), \"utf16-be\");\n                }\n\n                if (buf[i] != minusChar) // Minus may be absorbed after base64.\n                    i--;\n\n                lastI = i+1;\n                inBase64 = false;\n                base64Accum = '';\n            }\n        }\n    }\n\n    if (!inBase64) {\n        res += this.iconv.decode(buf.slice(lastI), \"ascii\"); // Write direct chars.\n    } else {\n        var b64str = base64Accum + buf.slice(lastI).toString().replace(/,/g, '/');\n\n        var canBeDecoded = b64str.length - (b64str.length % 8); // Minimal chunk: 2 quads -> 2x3 bytes -> 3 chars.\n        base64Accum = b64str.slice(canBeDecoded); // The rest will be decoded in future.\n        b64str = b64str.slice(0, canBeDecoded);\n\n        res += this.iconv.decode(Buffer.from(b64str, 'base64'), \"utf16-be\");\n    }\n\n    this.inBase64 = inBase64;\n    this.base64Accum = base64Accum;\n\n    return res;\n}\n\nUtf7IMAPDecoder.prototype.end = function() {\n    var res = \"\";\n    if (this.inBase64 && this.base64Accum.length > 0)\n        res = this.iconv.decode(Buffer.from(this.base64Accum, 'base64'), \"utf16-be\");\n\n    this.inBase64 = false;\n    this.base64Accum = '';\n    return res;\n}\n\n\n","\"use strict\";\n\nvar BOMChar = '\\uFEFF';\n\nexports.PrependBOM = PrependBOMWrapper\nfunction PrependBOMWrapper(encoder, options) {\n    this.encoder = encoder;\n    this.addBOM = true;\n}\n\nPrependBOMWrapper.prototype.write = function(str) {\n    if (this.addBOM) {\n        str = BOMChar + str;\n        this.addBOM = false;\n    }\n\n    return this.encoder.write(str);\n}\n\nPrependBOMWrapper.prototype.end = function() {\n    return this.encoder.end();\n}\n\n\n//------------------------------------------------------------------------------\n\nexports.StripBOM = StripBOMWrapper;\nfunction StripBOMWrapper(decoder, options) {\n    this.decoder = decoder;\n    this.pass = false;\n    this.options = options || {};\n}\n\nStripBOMWrapper.prototype.write = function(buf) {\n    var res = this.decoder.write(buf);\n    if (this.pass || !res)\n        return res;\n\n    if (res[0] === BOMChar) {\n        res = res.slice(1);\n        if (typeof this.options.stripBOM === 'function')\n            this.options.stripBOM();\n    }\n\n    this.pass = true;\n    return res;\n}\n\nStripBOMWrapper.prototype.end = function() {\n    return this.decoder.end();\n}\n\n","\"use strict\";\nvar Buffer = require(\"buffer\").Buffer;\n// Note: not polyfilled with safer-buffer on a purpose, as overrides Buffer\n\n// == Extend Node primitives to use iconv-lite =================================\n\nmodule.exports = function (iconv) {\n    var original = undefined; // Place to keep original methods.\n\n    // Node authors rewrote Buffer internals to make it compatible with\n    // Uint8Array and we cannot patch key functions since then.\n    // Note: this does use older Buffer API on a purpose\n    iconv.supportsNodeEncodingsExtension = !(Buffer.from || new Buffer(0) instanceof Uint8Array);\n\n    iconv.extendNodeEncodings = function extendNodeEncodings() {\n        if (original) return;\n        original = {};\n\n        if (!iconv.supportsNodeEncodingsExtension) {\n            console.error(\"ACTION NEEDED: require('iconv-lite').extendNodeEncodings() is not supported in your version of Node\");\n            console.error(\"See more info at https://github.com/ashtuchkin/iconv-lite/wiki/Node-v4-compatibility\");\n            return;\n        }\n\n        var nodeNativeEncodings = {\n            'hex': true, 'utf8': true, 'utf-8': true, 'ascii': true, 'binary': true, \n            'base64': true, 'ucs2': true, 'ucs-2': true, 'utf16le': true, 'utf-16le': true,\n        };\n\n        Buffer.isNativeEncoding = function(enc) {\n            return enc && nodeNativeEncodings[enc.toLowerCase()];\n        }\n\n        // -- SlowBuffer -----------------------------------------------------------\n        var SlowBuffer = require('buffer').SlowBuffer;\n\n        original.SlowBufferToString = SlowBuffer.prototype.toString;\n        SlowBuffer.prototype.toString = function(encoding, start, end) {\n            encoding = String(encoding || 'utf8').toLowerCase();\n\n            // Use native conversion when possible\n            if (Buffer.isNativeEncoding(encoding))\n                return original.SlowBufferToString.call(this, encoding, start, end);\n\n            // Otherwise, use our decoding method.\n            if (typeof start == 'undefined') start = 0;\n            if (typeof end == 'undefined') end = this.length;\n            return iconv.decode(this.slice(start, end), encoding);\n        }\n\n        original.SlowBufferWrite = SlowBuffer.prototype.write;\n        SlowBuffer.prototype.write = function(string, offset, length, encoding) {\n            // Support both (string, offset, length, encoding)\n            // and the legacy (string, encoding, offset, length)\n            if (isFinite(offset)) {\n                if (!isFinite(length)) {\n                    encoding = length;\n                    length = undefined;\n                }\n            } else {  // legacy\n                var swap = encoding;\n                encoding = offset;\n                offset = length;\n                length = swap;\n            }\n\n            offset = +offset || 0;\n            var remaining = this.length - offset;\n            if (!length) {\n                length = remaining;\n            } else {\n                length = +length;\n                if (length > remaining) {\n                    length = remaining;\n                }\n            }\n            encoding = String(encoding || 'utf8').toLowerCase();\n\n            // Use native conversion when possible\n            if (Buffer.isNativeEncoding(encoding))\n                return original.SlowBufferWrite.call(this, string, offset, length, encoding);\n\n            if (string.length > 0 && (length < 0 || offset < 0))\n                throw new RangeError('attempt to write beyond buffer bounds');\n\n            // Otherwise, use our encoding method.\n            var buf = iconv.encode(string, encoding);\n            if (buf.length < length) length = buf.length;\n            buf.copy(this, offset, 0, length);\n            return length;\n        }\n\n        // -- Buffer ---------------------------------------------------------------\n\n        original.BufferIsEncoding = Buffer.isEncoding;\n        Buffer.isEncoding = function(encoding) {\n            return Buffer.isNativeEncoding(encoding) || iconv.encodingExists(encoding);\n        }\n\n        original.BufferByteLength = Buffer.byteLength;\n        Buffer.byteLength = SlowBuffer.byteLength = function(str, encoding) {\n            encoding = String(encoding || 'utf8').toLowerCase();\n\n            // Use native conversion when possible\n            if (Buffer.isNativeEncoding(encoding))\n                return original.BufferByteLength.call(this, str, encoding);\n\n            // Slow, I know, but we don't have a better way yet.\n            return iconv.encode(str, encoding).length;\n        }\n\n        original.BufferToString = Buffer.prototype.toString;\n        Buffer.prototype.toString = function(encoding, start, end) {\n            encoding = String(encoding || 'utf8').toLowerCase();\n\n            // Use native conversion when possible\n            if (Buffer.isNativeEncoding(encoding))\n                return original.BufferToString.call(this, encoding, start, end);\n\n            // Otherwise, use our decoding method.\n            if (typeof start == 'undefined') start = 0;\n            if (typeof end == 'undefined') end = this.length;\n            return iconv.decode(this.slice(start, end), encoding);\n        }\n\n        original.BufferWrite = Buffer.prototype.write;\n        Buffer.prototype.write = function(string, offset, length, encoding) {\n            var _offset = offset, _length = length, _encoding = encoding;\n            // Support both (string, offset, length, encoding)\n            // and the legacy (string, encoding, offset, length)\n            if (isFinite(offset)) {\n                if (!isFinite(length)) {\n                    encoding = length;\n                    length = undefined;\n                }\n            } else {  // legacy\n                var swap = encoding;\n                encoding = offset;\n                offset = length;\n                length = swap;\n            }\n\n            encoding = String(encoding || 'utf8').toLowerCase();\n\n            // Use native conversion when possible\n            if (Buffer.isNativeEncoding(encoding))\n                return original.BufferWrite.call(this, string, _offset, _length, _encoding);\n\n            offset = +offset || 0;\n            var remaining = this.length - offset;\n            if (!length) {\n                length = remaining;\n            } else {\n                length = +length;\n                if (length > remaining) {\n                    length = remaining;\n                }\n            }\n\n            if (string.length > 0 && (length < 0 || offset < 0))\n                throw new RangeError('attempt to write beyond buffer bounds');\n\n            // Otherwise, use our encoding method.\n            var buf = iconv.encode(string, encoding);\n            if (buf.length < length) length = buf.length;\n            buf.copy(this, offset, 0, length);\n            return length;\n\n            // TODO: Set _charsWritten.\n        }\n\n\n        // -- Readable -------------------------------------------------------------\n        if (iconv.supportsStreams) {\n            var Readable = require('stream').Readable;\n\n            original.ReadableSetEncoding = Readable.prototype.setEncoding;\n            Readable.prototype.setEncoding = function setEncoding(enc, options) {\n                // Use our own decoder, it has the same interface.\n                // We cannot use original function as it doesn't handle BOM-s.\n                this._readableState.decoder = iconv.getDecoder(enc, options);\n                this._readableState.encoding = enc;\n            }\n\n            Readable.prototype.collect = iconv._collect;\n        }\n    }\n\n    // Remove iconv-lite Node primitive extensions.\n    iconv.undoExtendNodeEncodings = function undoExtendNodeEncodings() {\n        if (!iconv.supportsNodeEncodingsExtension)\n            return;\n        if (!original)\n            throw new Error(\"require('iconv-lite').undoExtendNodeEncodings(): Nothing to undo; extendNodeEncodings() is not called.\")\n\n        delete Buffer.isNativeEncoding;\n\n        var SlowBuffer = require('buffer').SlowBuffer;\n\n        SlowBuffer.prototype.toString = original.SlowBufferToString;\n        SlowBuffer.prototype.write = original.SlowBufferWrite;\n\n        Buffer.isEncoding = original.BufferIsEncoding;\n        Buffer.byteLength = original.BufferByteLength;\n        Buffer.prototype.toString = original.BufferToString;\n        Buffer.prototype.write = original.BufferWrite;\n\n        if (iconv.supportsStreams) {\n            var Readable = require('stream').Readable;\n\n            Readable.prototype.setEncoding = original.ReadableSetEncoding;\n            delete Readable.prototype.collect;\n        }\n\n        original = undefined;\n    }\n}\n","\"use strict\";\n\n// Some environments don't have global Buffer (e.g. React Native).\n// Solution would be installing npm modules \"buffer\" and \"stream\" explicitly.\nvar Buffer = require(\"safer-buffer\").Buffer;\n\nvar bomHandling = require(\"./bom-handling\"),\n    iconv = module.exports;\n\n// All codecs and aliases are kept here, keyed by encoding name/alias.\n// They are lazy loaded in `iconv.getCodec` from `encodings/index.js`.\niconv.encodings = null;\n\n// Characters emitted in case of error.\niconv.defaultCharUnicode = '�';\niconv.defaultCharSingleByte = '?';\n\n// Public API.\niconv.encode = function encode(str, encoding, options) {\n    str = \"\" + (str || \"\"); // Ensure string.\n\n    var encoder = iconv.getEncoder(encoding, options);\n\n    var res = encoder.write(str);\n    var trail = encoder.end();\n    \n    return (trail && trail.length > 0) ? Buffer.concat([res, trail]) : res;\n}\n\niconv.decode = function decode(buf, encoding, options) {\n    if (typeof buf === 'string') {\n        if (!iconv.skipDecodeWarning) {\n            console.error('Iconv-lite warning: decode()-ing strings is deprecated. Refer to https://github.com/ashtuchkin/iconv-lite/wiki/Use-Buffers-when-decoding');\n            iconv.skipDecodeWarning = true;\n        }\n\n        buf = Buffer.from(\"\" + (buf || \"\"), \"binary\"); // Ensure buffer.\n    }\n\n    var decoder = iconv.getDecoder(encoding, options);\n\n    var res = decoder.write(buf);\n    var trail = decoder.end();\n\n    return trail ? (res + trail) : res;\n}\n\niconv.encodingExists = function encodingExists(enc) {\n    try {\n        iconv.getCodec(enc);\n        return true;\n    } catch (e) {\n        return false;\n    }\n}\n\n// Legacy aliases to convert functions\niconv.toEncoding = iconv.encode;\niconv.fromEncoding = iconv.decode;\n\n// Search for a codec in iconv.encodings. Cache codec data in iconv._codecDataCache.\niconv._codecDataCache = {};\niconv.getCodec = function getCodec(encoding) {\n    if (!iconv.encodings)\n        iconv.encodings = require(\"../encodings\"); // Lazy load all encoding definitions.\n    \n    // Canonicalize encoding name: strip all non-alphanumeric chars and appended year.\n    var enc = iconv._canonicalizeEncoding(encoding);\n\n    // Traverse iconv.encodings to find actual codec.\n    var codecOptions = {};\n    while (true) {\n        var codec = iconv._codecDataCache[enc];\n        if (codec)\n            return codec;\n\n        var codecDef = iconv.encodings[enc];\n\n        switch (typeof codecDef) {\n            case \"string\": // Direct alias to other encoding.\n                enc = codecDef;\n                break;\n\n            case \"object\": // Alias with options. Can be layered.\n                for (var key in codecDef)\n                    codecOptions[key] = codecDef[key];\n\n                if (!codecOptions.encodingName)\n                    codecOptions.encodingName = enc;\n                \n                enc = codecDef.type;\n                break;\n\n            case \"function\": // Codec itself.\n                if (!codecOptions.encodingName)\n                    codecOptions.encodingName = enc;\n\n                // The codec function must load all tables and return object with .encoder and .decoder methods.\n                // It'll be called only once (for each different options object).\n                codec = new codecDef(codecOptions, iconv);\n\n                iconv._codecDataCache[codecOptions.encodingName] = codec; // Save it to be reused later.\n                return codec;\n\n            default:\n                throw new Error(\"Encoding not recognized: '\" + encoding + \"' (searched as: '\"+enc+\"')\");\n        }\n    }\n}\n\niconv._canonicalizeEncoding = function(encoding) {\n    // Canonicalize encoding name: strip all non-alphanumeric chars and appended year.\n    return (''+encoding).toLowerCase().replace(/:\\d{4}$|[^0-9a-z]/g, \"\");\n}\n\niconv.getEncoder = function getEncoder(encoding, options) {\n    var codec = iconv.getCodec(encoding),\n        encoder = new codec.encoder(options, codec);\n\n    if (codec.bomAware && options && options.addBOM)\n        encoder = new bomHandling.PrependBOM(encoder, options);\n\n    return encoder;\n}\n\niconv.getDecoder = function getDecoder(encoding, options) {\n    var codec = iconv.getCodec(encoding),\n        decoder = new codec.decoder(options, codec);\n\n    if (codec.bomAware && !(options && options.stripBOM === false))\n        decoder = new bomHandling.StripBOM(decoder, options);\n\n    return decoder;\n}\n\n\n// Load extensions in Node. All of them are omitted in Browserify build via 'browser' field in package.json.\nvar nodeVer = typeof process !== 'undefined' && process.versions && process.versions.node;\nif (nodeVer) {\n\n    // Load streaming support in Node v0.10+\n    var nodeVerArr = nodeVer.split(\".\").map(Number);\n    if (nodeVerArr[0] > 0 || nodeVerArr[1] >= 10) {\n        require(\"./streams\")(iconv);\n    }\n\n    // Load Node primitive extensions.\n    require(\"./extend-node\")(iconv);\n}\n\nif (\"Ā\" != \"\\u0100\") {\n    console.error(\"iconv-lite warning: javascript files use encoding different from utf-8. See https://github.com/ashtuchkin/iconv-lite/wiki/Javascript-source-file-encodings for more info.\");\n}\n","\"use strict\";\n\nvar Buffer = require(\"buffer\").Buffer,\n    Transform = require(\"stream\").Transform;\n\n\n// == Exports ==================================================================\nmodule.exports = function(iconv) {\n    \n    // Additional Public API.\n    iconv.encodeStream = function encodeStream(encoding, options) {\n        return new IconvLiteEncoderStream(iconv.getEncoder(encoding, options), options);\n    }\n\n    iconv.decodeStream = function decodeStream(encoding, options) {\n        return new IconvLiteDecoderStream(iconv.getDecoder(encoding, options), options);\n    }\n\n    iconv.supportsStreams = true;\n\n\n    // Not published yet.\n    iconv.IconvLiteEncoderStream = IconvLiteEncoderStream;\n    iconv.IconvLiteDecoderStream = IconvLiteDecoderStream;\n    iconv._collect = IconvLiteDecoderStream.prototype.collect;\n};\n\n\n// == Encoder stream =======================================================\nfunction IconvLiteEncoderStream(conv, options) {\n    this.conv = conv;\n    options = options || {};\n    options.decodeStrings = false; // We accept only strings, so we don't need to decode them.\n    Transform.call(this, options);\n}\n\nIconvLiteEncoderStream.prototype = Object.create(Transform.prototype, {\n    constructor: { value: IconvLiteEncoderStream }\n});\n\nIconvLiteEncoderStream.prototype._transform = function(chunk, encoding, done) {\n    if (typeof chunk != 'string')\n        return done(new Error(\"Iconv encoding stream needs strings as its input.\"));\n    try {\n        var res = this.conv.write(chunk);\n        if (res && res.length) this.push(res);\n        done();\n    }\n    catch (e) {\n        done(e);\n    }\n}\n\nIconvLiteEncoderStream.prototype._flush = function(done) {\n    try {\n        var res = this.conv.end();\n        if (res && res.length) this.push(res);\n        done();\n    }\n    catch (e) {\n        done(e);\n    }\n}\n\nIconvLiteEncoderStream.prototype.collect = function(cb) {\n    var chunks = [];\n    this.on('error', cb);\n    this.on('data', function(chunk) { chunks.push(chunk); });\n    this.on('end', function() {\n        cb(null, Buffer.concat(chunks));\n    });\n    return this;\n}\n\n\n// == Decoder stream =======================================================\nfunction IconvLiteDecoderStream(conv, options) {\n    this.conv = conv;\n    options = options || {};\n    options.encoding = this.encoding = 'utf8'; // We output strings.\n    Transform.call(this, options);\n}\n\nIconvLiteDecoderStream.prototype = Object.create(Transform.prototype, {\n    constructor: { value: IconvLiteDecoderStream }\n});\n\nIconvLiteDecoderStream.prototype._transform = function(chunk, encoding, done) {\n    if (!Buffer.isBuffer(chunk))\n        return done(new Error(\"Iconv decoding stream needs buffers as its input.\"));\n    try {\n        var res = this.conv.write(chunk);\n        if (res && res.length) this.push(res, this.encoding);\n        done();\n    }\n    catch (e) {\n        done(e);\n    }\n}\n\nIconvLiteDecoderStream.prototype._flush = function(done) {\n    try {\n        var res = this.conv.end();\n        if (res && res.length) this.push(res, this.encoding);                \n        done();\n    }\n    catch (e) {\n        done(e);\n    }\n}\n\nIconvLiteDecoderStream.prototype.collect = function(cb) {\n    var res = '';\n    this.on('error', cb);\n    this.on('data', function(chunk) { res += chunk; });\n    this.on('end', function() {\n        cb(null, res);\n    });\n    return this;\n}\n\n","try {\n  var util = require('util');\n  /* istanbul ignore next */\n  if (typeof util.inherits !== 'function') throw '';\n  module.exports = util.inherits;\n} catch (e) {\n  /* istanbul ignore next */\n  module.exports = require('./inherits_browser.js');\n}\n","if (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    if (superCtor) {\n      ctor.super_ = superCtor\n      ctor.prototype = Object.create(superCtor.prototype, {\n        constructor: {\n          value: ctor,\n          enumerable: false,\n          writable: true,\n          configurable: true\n        }\n      })\n    }\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    if (superCtor) {\n      ctor.super_ = superCtor\n      var TempCtor = function () {}\n      TempCtor.prototype = superCtor.prototype\n      ctor.prototype = new TempCtor()\n      ctor.prototype.constructor = ctor\n    }\n  }\n}\n","(function() {\n  var expandIPv6, ipaddr, ipv4Part, ipv4Regexes, ipv6Part, ipv6Regexes, matchCIDR, root, zoneIndex;\n\n  ipaddr = {};\n\n  root = this;\n\n  if ((typeof module !== \"undefined\" && module !== null) && module.exports) {\n    module.exports = ipaddr;\n  } else {\n    root['ipaddr'] = ipaddr;\n  }\n\n  matchCIDR = function(first, second, partSize, cidrBits) {\n    var part, shift;\n    if (first.length !== second.length) {\n      throw new Error(\"ipaddr: cannot match CIDR for objects with different lengths\");\n    }\n    part = 0;\n    while (cidrBits > 0) {\n      shift = partSize - cidrBits;\n      if (shift < 0) {\n        shift = 0;\n      }\n      if (first[part] >> shift !== second[part] >> shift) {\n        return false;\n      }\n      cidrBits -= partSize;\n      part += 1;\n    }\n    return true;\n  };\n\n  ipaddr.subnetMatch = function(address, rangeList, defaultName) {\n    var k, len, rangeName, rangeSubnets, subnet;\n    if (defaultName == null) {\n      defaultName = 'unicast';\n    }\n    for (rangeName in rangeList) {\n      rangeSubnets = rangeList[rangeName];\n      if (rangeSubnets[0] && !(rangeSubnets[0] instanceof Array)) {\n        rangeSubnets = [rangeSubnets];\n      }\n      for (k = 0, len = rangeSubnets.length; k < len; k++) {\n        subnet = rangeSubnets[k];\n        if (address.kind() === subnet[0].kind()) {\n          if (address.match.apply(address, subnet)) {\n            return rangeName;\n          }\n        }\n      }\n    }\n    return defaultName;\n  };\n\n  ipaddr.IPv4 = (function() {\n    function IPv4(octets) {\n      var k, len, octet;\n      if (octets.length !== 4) {\n        throw new Error(\"ipaddr: ipv4 octet count should be 4\");\n      }\n      for (k = 0, len = octets.length; k < len; k++) {\n        octet = octets[k];\n        if (!((0 <= octet && octet <= 255))) {\n          throw new Error(\"ipaddr: ipv4 octet should fit in 8 bits\");\n        }\n      }\n      this.octets = octets;\n    }\n\n    IPv4.prototype.kind = function() {\n      return 'ipv4';\n    };\n\n    IPv4.prototype.toString = function() {\n      return this.octets.join(\".\");\n    };\n\n    IPv4.prototype.toNormalizedString = function() {\n      return this.toString();\n    };\n\n    IPv4.prototype.toByteArray = function() {\n      return this.octets.slice(0);\n    };\n\n    IPv4.prototype.match = function(other, cidrRange) {\n      var ref;\n      if (cidrRange === void 0) {\n        ref = other, other = ref[0], cidrRange = ref[1];\n      }\n      if (other.kind() !== 'ipv4') {\n        throw new Error(\"ipaddr: cannot match ipv4 address with non-ipv4 one\");\n      }\n      return matchCIDR(this.octets, other.octets, 8, cidrRange);\n    };\n\n    IPv4.prototype.SpecialRanges = {\n      unspecified: [[new IPv4([0, 0, 0, 0]), 8]],\n      broadcast: [[new IPv4([255, 255, 255, 255]), 32]],\n      multicast: [[new IPv4([224, 0, 0, 0]), 4]],\n      linkLocal: [[new IPv4([169, 254, 0, 0]), 16]],\n      loopback: [[new IPv4([127, 0, 0, 0]), 8]],\n      carrierGradeNat: [[new IPv4([100, 64, 0, 0]), 10]],\n      \"private\": [[new IPv4([10, 0, 0, 0]), 8], [new IPv4([172, 16, 0, 0]), 12], [new IPv4([192, 168, 0, 0]), 16]],\n      reserved: [[new IPv4([192, 0, 0, 0]), 24], [new IPv4([192, 0, 2, 0]), 24], [new IPv4([192, 88, 99, 0]), 24], [new IPv4([198, 51, 100, 0]), 24], [new IPv4([203, 0, 113, 0]), 24], [new IPv4([240, 0, 0, 0]), 4]]\n    };\n\n    IPv4.prototype.range = function() {\n      return ipaddr.subnetMatch(this, this.SpecialRanges);\n    };\n\n    IPv4.prototype.toIPv4MappedAddress = function() {\n      return ipaddr.IPv6.parse(\"::ffff:\" + (this.toString()));\n    };\n\n    IPv4.prototype.prefixLengthFromSubnetMask = function() {\n      var cidr, i, k, octet, stop, zeros, zerotable;\n      zerotable = {\n        0: 8,\n        128: 7,\n        192: 6,\n        224: 5,\n        240: 4,\n        248: 3,\n        252: 2,\n        254: 1,\n        255: 0\n      };\n      cidr = 0;\n      stop = false;\n      for (i = k = 3; k >= 0; i = k += -1) {\n        octet = this.octets[i];\n        if (octet in zerotable) {\n          zeros = zerotable[octet];\n          if (stop && zeros !== 0) {\n            return null;\n          }\n          if (zeros !== 8) {\n            stop = true;\n          }\n          cidr += zeros;\n        } else {\n          return null;\n        }\n      }\n      return 32 - cidr;\n    };\n\n    return IPv4;\n\n  })();\n\n  ipv4Part = \"(0?\\\\d+|0x[a-f0-9]+)\";\n\n  ipv4Regexes = {\n    fourOctet: new RegExp(\"^\" + ipv4Part + \"\\\\.\" + ipv4Part + \"\\\\.\" + ipv4Part + \"\\\\.\" + ipv4Part + \"$\", 'i'),\n    longValue: new RegExp(\"^\" + ipv4Part + \"$\", 'i')\n  };\n\n  ipaddr.IPv4.parser = function(string) {\n    var match, parseIntAuto, part, shift, value;\n    parseIntAuto = function(string) {\n      if (string[0] === \"0\" && string[1] !== \"x\") {\n        return parseInt(string, 8);\n      } else {\n        return parseInt(string);\n      }\n    };\n    if (match = string.match(ipv4Regexes.fourOctet)) {\n      return (function() {\n        var k, len, ref, results;\n        ref = match.slice(1, 6);\n        results = [];\n        for (k = 0, len = ref.length; k < len; k++) {\n          part = ref[k];\n          results.push(parseIntAuto(part));\n        }\n        return results;\n      })();\n    } else if (match = string.match(ipv4Regexes.longValue)) {\n      value = parseIntAuto(match[1]);\n      if (value > 0xffffffff || value < 0) {\n        throw new Error(\"ipaddr: address outside defined range\");\n      }\n      return ((function() {\n        var k, results;\n        results = [];\n        for (shift = k = 0; k <= 24; shift = k += 8) {\n          results.push((value >> shift) & 0xff);\n        }\n        return results;\n      })()).reverse();\n    } else {\n      return null;\n    }\n  };\n\n  ipaddr.IPv6 = (function() {\n    function IPv6(parts, zoneId) {\n      var i, k, l, len, part, ref;\n      if (parts.length === 16) {\n        this.parts = [];\n        for (i = k = 0; k <= 14; i = k += 2) {\n          this.parts.push((parts[i] << 8) | parts[i + 1]);\n        }\n      } else if (parts.length === 8) {\n        this.parts = parts;\n      } else {\n        throw new Error(\"ipaddr: ipv6 part count should be 8 or 16\");\n      }\n      ref = this.parts;\n      for (l = 0, len = ref.length; l < len; l++) {\n        part = ref[l];\n        if (!((0 <= part && part <= 0xffff))) {\n          throw new Error(\"ipaddr: ipv6 part should fit in 16 bits\");\n        }\n      }\n      if (zoneId) {\n        this.zoneId = zoneId;\n      }\n    }\n\n    IPv6.prototype.kind = function() {\n      return 'ipv6';\n    };\n\n    IPv6.prototype.toString = function() {\n      return this.toNormalizedString().replace(/((^|:)(0(:|$))+)/, '::');\n    };\n\n    IPv6.prototype.toRFC5952String = function() {\n      var bestMatchIndex, bestMatchLength, match, regex, string;\n      regex = /((^|:)(0(:|$)){2,})/g;\n      string = this.toNormalizedString();\n      bestMatchIndex = 0;\n      bestMatchLength = -1;\n      while ((match = regex.exec(string))) {\n        if (match[0].length > bestMatchLength) {\n          bestMatchIndex = match.index;\n          bestMatchLength = match[0].length;\n        }\n      }\n      if (bestMatchLength < 0) {\n        return string;\n      }\n      return string.substring(0, bestMatchIndex) + '::' + string.substring(bestMatchIndex + bestMatchLength);\n    };\n\n    IPv6.prototype.toByteArray = function() {\n      var bytes, k, len, part, ref;\n      bytes = [];\n      ref = this.parts;\n      for (k = 0, len = ref.length; k < len; k++) {\n        part = ref[k];\n        bytes.push(part >> 8);\n        bytes.push(part & 0xff);\n      }\n      return bytes;\n    };\n\n    IPv6.prototype.toNormalizedString = function() {\n      var addr, part, suffix;\n      addr = ((function() {\n        var k, len, ref, results;\n        ref = this.parts;\n        results = [];\n        for (k = 0, len = ref.length; k < len; k++) {\n          part = ref[k];\n          results.push(part.toString(16));\n        }\n        return results;\n      }).call(this)).join(\":\");\n      suffix = '';\n      if (this.zoneId) {\n        suffix = '%' + this.zoneId;\n      }\n      return addr + suffix;\n    };\n\n    IPv6.prototype.toFixedLengthString = function() {\n      var addr, part, suffix;\n      addr = ((function() {\n        var k, len, ref, results;\n        ref = this.parts;\n        results = [];\n        for (k = 0, len = ref.length; k < len; k++) {\n          part = ref[k];\n          results.push(part.toString(16).padStart(4, '0'));\n        }\n        return results;\n      }).call(this)).join(\":\");\n      suffix = '';\n      if (this.zoneId) {\n        suffix = '%' + this.zoneId;\n      }\n      return addr + suffix;\n    };\n\n    IPv6.prototype.match = function(other, cidrRange) {\n      var ref;\n      if (cidrRange === void 0) {\n        ref = other, other = ref[0], cidrRange = ref[1];\n      }\n      if (other.kind() !== 'ipv6') {\n        throw new Error(\"ipaddr: cannot match ipv6 address with non-ipv6 one\");\n      }\n      return matchCIDR(this.parts, other.parts, 16, cidrRange);\n    };\n\n    IPv6.prototype.SpecialRanges = {\n      unspecified: [new IPv6([0, 0, 0, 0, 0, 0, 0, 0]), 128],\n      linkLocal: [new IPv6([0xfe80, 0, 0, 0, 0, 0, 0, 0]), 10],\n      multicast: [new IPv6([0xff00, 0, 0, 0, 0, 0, 0, 0]), 8],\n      loopback: [new IPv6([0, 0, 0, 0, 0, 0, 0, 1]), 128],\n      uniqueLocal: [new IPv6([0xfc00, 0, 0, 0, 0, 0, 0, 0]), 7],\n      ipv4Mapped: [new IPv6([0, 0, 0, 0, 0, 0xffff, 0, 0]), 96],\n      rfc6145: [new IPv6([0, 0, 0, 0, 0xffff, 0, 0, 0]), 96],\n      rfc6052: [new IPv6([0x64, 0xff9b, 0, 0, 0, 0, 0, 0]), 96],\n      '6to4': [new IPv6([0x2002, 0, 0, 0, 0, 0, 0, 0]), 16],\n      teredo: [new IPv6([0x2001, 0, 0, 0, 0, 0, 0, 0]), 32],\n      reserved: [[new IPv6([0x2001, 0xdb8, 0, 0, 0, 0, 0, 0]), 32]]\n    };\n\n    IPv6.prototype.range = function() {\n      return ipaddr.subnetMatch(this, this.SpecialRanges);\n    };\n\n    IPv6.prototype.isIPv4MappedAddress = function() {\n      return this.range() === 'ipv4Mapped';\n    };\n\n    IPv6.prototype.toIPv4Address = function() {\n      var high, low, ref;\n      if (!this.isIPv4MappedAddress()) {\n        throw new Error(\"ipaddr: trying to convert a generic ipv6 address to ipv4\");\n      }\n      ref = this.parts.slice(-2), high = ref[0], low = ref[1];\n      return new ipaddr.IPv4([high >> 8, high & 0xff, low >> 8, low & 0xff]);\n    };\n\n    IPv6.prototype.prefixLengthFromSubnetMask = function() {\n      var cidr, i, k, part, stop, zeros, zerotable;\n      zerotable = {\n        0: 16,\n        32768: 15,\n        49152: 14,\n        57344: 13,\n        61440: 12,\n        63488: 11,\n        64512: 10,\n        65024: 9,\n        65280: 8,\n        65408: 7,\n        65472: 6,\n        65504: 5,\n        65520: 4,\n        65528: 3,\n        65532: 2,\n        65534: 1,\n        65535: 0\n      };\n      cidr = 0;\n      stop = false;\n      for (i = k = 7; k >= 0; i = k += -1) {\n        part = this.parts[i];\n        if (part in zerotable) {\n          zeros = zerotable[part];\n          if (stop && zeros !== 0) {\n            return null;\n          }\n          if (zeros !== 16) {\n            stop = true;\n          }\n          cidr += zeros;\n        } else {\n          return null;\n        }\n      }\n      return 128 - cidr;\n    };\n\n    return IPv6;\n\n  })();\n\n  ipv6Part = \"(?:[0-9a-f]+::?)+\";\n\n  zoneIndex = \"%[0-9a-z]{1,}\";\n\n  ipv6Regexes = {\n    zoneIndex: new RegExp(zoneIndex, 'i'),\n    \"native\": new RegExp(\"^(::)?(\" + ipv6Part + \")?([0-9a-f]+)?(::)?(\" + zoneIndex + \")?$\", 'i'),\n    transitional: new RegExp((\"^((?:\" + ipv6Part + \")|(?:::)(?:\" + ipv6Part + \")?)\") + (ipv4Part + \"\\\\.\" + ipv4Part + \"\\\\.\" + ipv4Part + \"\\\\.\" + ipv4Part) + (\"(\" + zoneIndex + \")?$\"), 'i')\n  };\n\n  expandIPv6 = function(string, parts) {\n    var colonCount, lastColon, part, replacement, replacementCount, zoneId;\n    if (string.indexOf('::') !== string.lastIndexOf('::')) {\n      return null;\n    }\n    zoneId = (string.match(ipv6Regexes['zoneIndex']) || [])[0];\n    if (zoneId) {\n      zoneId = zoneId.substring(1);\n      string = string.replace(/%.+$/, '');\n    }\n    colonCount = 0;\n    lastColon = -1;\n    while ((lastColon = string.indexOf(':', lastColon + 1)) >= 0) {\n      colonCount++;\n    }\n    if (string.substr(0, 2) === '::') {\n      colonCount--;\n    }\n    if (string.substr(-2, 2) === '::') {\n      colonCount--;\n    }\n    if (colonCount > parts) {\n      return null;\n    }\n    replacementCount = parts - colonCount;\n    replacement = ':';\n    while (replacementCount--) {\n      replacement += '0:';\n    }\n    string = string.replace('::', replacement);\n    if (string[0] === ':') {\n      string = string.slice(1);\n    }\n    if (string[string.length - 1] === ':') {\n      string = string.slice(0, -1);\n    }\n    parts = (function() {\n      var k, len, ref, results;\n      ref = string.split(\":\");\n      results = [];\n      for (k = 0, len = ref.length; k < len; k++) {\n        part = ref[k];\n        results.push(parseInt(part, 16));\n      }\n      return results;\n    })();\n    return {\n      parts: parts,\n      zoneId: zoneId\n    };\n  };\n\n  ipaddr.IPv6.parser = function(string) {\n    var addr, k, len, match, octet, octets, zoneId;\n    if (ipv6Regexes['native'].test(string)) {\n      return expandIPv6(string, 8);\n    } else if (match = string.match(ipv6Regexes['transitional'])) {\n      zoneId = match[6] || '';\n      addr = expandIPv6(match[1].slice(0, -1) + zoneId, 6);\n      if (addr.parts) {\n        octets = [parseInt(match[2]), parseInt(match[3]), parseInt(match[4]), parseInt(match[5])];\n        for (k = 0, len = octets.length; k < len; k++) {\n          octet = octets[k];\n          if (!((0 <= octet && octet <= 255))) {\n            return null;\n          }\n        }\n        addr.parts.push(octets[0] << 8 | octets[1]);\n        addr.parts.push(octets[2] << 8 | octets[3]);\n        return {\n          parts: addr.parts,\n          zoneId: addr.zoneId\n        };\n      }\n    }\n    return null;\n  };\n\n  ipaddr.IPv4.isIPv4 = ipaddr.IPv6.isIPv6 = function(string) {\n    return this.parser(string) !== null;\n  };\n\n  ipaddr.IPv4.isValid = function(string) {\n    var e;\n    try {\n      new this(this.parser(string));\n      return true;\n    } catch (error1) {\n      e = error1;\n      return false;\n    }\n  };\n\n  ipaddr.IPv4.isValidFourPartDecimal = function(string) {\n    if (ipaddr.IPv4.isValid(string) && string.match(/^(0|[1-9]\\d*)(\\.(0|[1-9]\\d*)){3}$/)) {\n      return true;\n    } else {\n      return false;\n    }\n  };\n\n  ipaddr.IPv6.isValid = function(string) {\n    var addr, e;\n    if (typeof string === \"string\" && string.indexOf(\":\") === -1) {\n      return false;\n    }\n    try {\n      addr = this.parser(string);\n      new this(addr.parts, addr.zoneId);\n      return true;\n    } catch (error1) {\n      e = error1;\n      return false;\n    }\n  };\n\n  ipaddr.IPv4.parse = function(string) {\n    var parts;\n    parts = this.parser(string);\n    if (parts === null) {\n      throw new Error(\"ipaddr: string is not formatted like ip address\");\n    }\n    return new this(parts);\n  };\n\n  ipaddr.IPv6.parse = function(string) {\n    var addr;\n    addr = this.parser(string);\n    if (addr.parts === null) {\n      throw new Error(\"ipaddr: string is not formatted like ip address\");\n    }\n    return new this(addr.parts, addr.zoneId);\n  };\n\n  ipaddr.IPv4.parseCIDR = function(string) {\n    var maskLength, match, parsed;\n    if (match = string.match(/^(.+)\\/(\\d+)$/)) {\n      maskLength = parseInt(match[2]);\n      if (maskLength >= 0 && maskLength <= 32) {\n        parsed = [this.parse(match[1]), maskLength];\n        Object.defineProperty(parsed, 'toString', {\n          value: function() {\n            return this.join('/');\n          }\n        });\n        return parsed;\n      }\n    }\n    throw new Error(\"ipaddr: string is not formatted like an IPv4 CIDR range\");\n  };\n\n  ipaddr.IPv4.subnetMaskFromPrefixLength = function(prefix) {\n    var filledOctetCount, j, octets;\n    prefix = parseInt(prefix);\n    if (prefix < 0 || prefix > 32) {\n      throw new Error('ipaddr: invalid IPv4 prefix length');\n    }\n    octets = [0, 0, 0, 0];\n    j = 0;\n    filledOctetCount = Math.floor(prefix / 8);\n    while (j < filledOctetCount) {\n      octets[j] = 255;\n      j++;\n    }\n    if (filledOctetCount < 4) {\n      octets[filledOctetCount] = Math.pow(2, prefix % 8) - 1 << 8 - (prefix % 8);\n    }\n    return new this(octets);\n  };\n\n  ipaddr.IPv4.broadcastAddressFromCIDR = function(string) {\n    var cidr, error, i, ipInterfaceOctets, octets, subnetMaskOctets;\n    try {\n      cidr = this.parseCIDR(string);\n      ipInterfaceOctets = cidr[0].toByteArray();\n      subnetMaskOctets = this.subnetMaskFromPrefixLength(cidr[1]).toByteArray();\n      octets = [];\n      i = 0;\n      while (i < 4) {\n        octets.push(parseInt(ipInterfaceOctets[i], 10) | parseInt(subnetMaskOctets[i], 10) ^ 255);\n        i++;\n      }\n      return new this(octets);\n    } catch (error1) {\n      error = error1;\n      throw new Error('ipaddr: the address does not have IPv4 CIDR format');\n    }\n  };\n\n  ipaddr.IPv4.networkAddressFromCIDR = function(string) {\n    var cidr, error, i, ipInterfaceOctets, octets, subnetMaskOctets;\n    try {\n      cidr = this.parseCIDR(string);\n      ipInterfaceOctets = cidr[0].toByteArray();\n      subnetMaskOctets = this.subnetMaskFromPrefixLength(cidr[1]).toByteArray();\n      octets = [];\n      i = 0;\n      while (i < 4) {\n        octets.push(parseInt(ipInterfaceOctets[i], 10) & parseInt(subnetMaskOctets[i], 10));\n        i++;\n      }\n      return new this(octets);\n    } catch (error1) {\n      error = error1;\n      throw new Error('ipaddr: the address does not have IPv4 CIDR format');\n    }\n  };\n\n  ipaddr.IPv6.parseCIDR = function(string) {\n    var maskLength, match, parsed;\n    if (match = string.match(/^(.+)\\/(\\d+)$/)) {\n      maskLength = parseInt(match[2]);\n      if (maskLength >= 0 && maskLength <= 128) {\n        parsed = [this.parse(match[1]), maskLength];\n        Object.defineProperty(parsed, 'toString', {\n          value: function() {\n            return this.join('/');\n          }\n        });\n        return parsed;\n      }\n    }\n    throw new Error(\"ipaddr: string is not formatted like an IPv6 CIDR range\");\n  };\n\n  ipaddr.isValid = function(string) {\n    return ipaddr.IPv6.isValid(string) || ipaddr.IPv4.isValid(string);\n  };\n\n  ipaddr.parse = function(string) {\n    if (ipaddr.IPv6.isValid(string)) {\n      return ipaddr.IPv6.parse(string);\n    } else if (ipaddr.IPv4.isValid(string)) {\n      return ipaddr.IPv4.parse(string);\n    } else {\n      throw new Error(\"ipaddr: the address has neither IPv6 nor IPv4 format\");\n    }\n  };\n\n  ipaddr.parseCIDR = function(string) {\n    var e;\n    try {\n      return ipaddr.IPv6.parseCIDR(string);\n    } catch (error1) {\n      e = error1;\n      try {\n        return ipaddr.IPv4.parseCIDR(string);\n      } catch (error1) {\n        e = error1;\n        throw new Error(\"ipaddr: the address has neither IPv6 nor IPv4 CIDR format\");\n      }\n    }\n  };\n\n  ipaddr.fromByteArray = function(bytes) {\n    var length;\n    length = bytes.length;\n    if (length === 4) {\n      return new ipaddr.IPv4(bytes);\n    } else if (length === 16) {\n      return new ipaddr.IPv6(bytes);\n    } else {\n      throw new Error(\"ipaddr: the binary input is neither an IPv6 nor IPv4 address\");\n    }\n  };\n\n  ipaddr.process = function(string) {\n    var addr;\n    addr = this.parse(string);\n    if (addr.kind() === 'ipv6' && addr.isIPv4MappedAddress()) {\n      return addr.toIPv4Address();\n    } else {\n      return addr;\n    }\n  };\n\n}).call(this);\n","/*!\n * media-typer\n * Copyright(c) 2014 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n/**\n * RegExp to match *( \";\" parameter ) in RFC 2616 sec 3.7\n *\n * parameter     = token \"=\" ( token | quoted-string )\n * token         = 1*<any CHAR except CTLs or separators>\n * separators    = \"(\" | \")\" | \"<\" | \">\" | \"@\"\n *               | \",\" | \";\" | \":\" | \"\\\" | <\">\n *               | \"/\" | \"[\" | \"]\" | \"?\" | \"=\"\n *               | \"{\" | \"}\" | SP | HT\n * quoted-string = ( <\"> *(qdtext | quoted-pair ) <\"> )\n * qdtext        = <any TEXT except <\">>\n * quoted-pair   = \"\\\" CHAR\n * CHAR          = <any US-ASCII character (octets 0 - 127)>\n * TEXT          = <any OCTET except CTLs, but including LWS>\n * LWS           = [CRLF] 1*( SP | HT )\n * CRLF          = CR LF\n * CR            = <US-ASCII CR, carriage return (13)>\n * LF            = <US-ASCII LF, linefeed (10)>\n * SP            = <US-ASCII SP, space (32)>\n * SHT           = <US-ASCII HT, horizontal-tab (9)>\n * CTL           = <any US-ASCII control character (octets 0 - 31) and DEL (127)>\n * OCTET         = <any 8-bit sequence of data>\n */\nvar paramRegExp = /; *([!#$%&'\\*\\+\\-\\.0-9A-Z\\^_`a-z\\|~]+) *= *(\"(?:[ !\\u0023-\\u005b\\u005d-\\u007e\\u0080-\\u00ff]|\\\\[\\u0020-\\u007e])*\"|[!#$%&'\\*\\+\\-\\.0-9A-Z\\^_`a-z\\|~]+) */g;\nvar textRegExp = /^[\\u0020-\\u007e\\u0080-\\u00ff]+$/\nvar tokenRegExp = /^[!#$%&'\\*\\+\\-\\.0-9A-Z\\^_`a-z\\|~]+$/\n\n/**\n * RegExp to match quoted-pair in RFC 2616\n *\n * quoted-pair = \"\\\" CHAR\n * CHAR        = <any US-ASCII character (octets 0 - 127)>\n */\nvar qescRegExp = /\\\\([\\u0000-\\u007f])/g;\n\n/**\n * RegExp to match chars that must be quoted-pair in RFC 2616\n */\nvar quoteRegExp = /([\\\\\"])/g;\n\n/**\n * RegExp to match type in RFC 6838\n *\n * type-name = restricted-name\n * subtype-name = restricted-name\n * restricted-name = restricted-name-first *126restricted-name-chars\n * restricted-name-first  = ALPHA / DIGIT\n * restricted-name-chars  = ALPHA / DIGIT / \"!\" / \"#\" /\n *                          \"$\" / \"&\" / \"-\" / \"^\" / \"_\"\n * restricted-name-chars =/ \".\" ; Characters before first dot always\n *                              ; specify a facet name\n * restricted-name-chars =/ \"+\" ; Characters after last plus always\n *                              ; specify a structured syntax suffix\n * ALPHA =  %x41-5A / %x61-7A   ; A-Z / a-z\n * DIGIT =  %x30-39             ; 0-9\n */\nvar subtypeNameRegExp = /^[A-Za-z0-9][A-Za-z0-9!#$&^_.-]{0,126}$/\nvar typeNameRegExp = /^[A-Za-z0-9][A-Za-z0-9!#$&^_-]{0,126}$/\nvar typeRegExp = /^ *([A-Za-z0-9][A-Za-z0-9!#$&^_-]{0,126})\\/([A-Za-z0-9][A-Za-z0-9!#$&^_.+-]{0,126}) *$/;\n\n/**\n * Module exports.\n */\n\nexports.format = format\nexports.parse = parse\n\n/**\n * Format object to media type.\n *\n * @param {object} obj\n * @return {string}\n * @api public\n */\n\nfunction format(obj) {\n  if (!obj || typeof obj !== 'object') {\n    throw new TypeError('argument obj is required')\n  }\n\n  var parameters = obj.parameters\n  var subtype = obj.subtype\n  var suffix = obj.suffix\n  var type = obj.type\n\n  if (!type || !typeNameRegExp.test(type)) {\n    throw new TypeError('invalid type')\n  }\n\n  if (!subtype || !subtypeNameRegExp.test(subtype)) {\n    throw new TypeError('invalid subtype')\n  }\n\n  // format as type/subtype\n  var string = type + '/' + subtype\n\n  // append +suffix\n  if (suffix) {\n    if (!typeNameRegExp.test(suffix)) {\n      throw new TypeError('invalid suffix')\n    }\n\n    string += '+' + suffix\n  }\n\n  // append parameters\n  if (parameters && typeof parameters === 'object') {\n    var param\n    var params = Object.keys(parameters).sort()\n\n    for (var i = 0; i < params.length; i++) {\n      param = params[i]\n\n      if (!tokenRegExp.test(param)) {\n        throw new TypeError('invalid parameter name')\n      }\n\n      string += '; ' + param + '=' + qstring(parameters[param])\n    }\n  }\n\n  return string\n}\n\n/**\n * Parse media type to object.\n *\n * @param {string|object} string\n * @return {Object}\n * @api public\n */\n\nfunction parse(string) {\n  if (!string) {\n    throw new TypeError('argument string is required')\n  }\n\n  // support req/res-like objects as argument\n  if (typeof string === 'object') {\n    string = getcontenttype(string)\n  }\n\n  if (typeof string !== 'string') {\n    throw new TypeError('argument string is required to be a string')\n  }\n\n  var index = string.indexOf(';')\n  var type = index !== -1\n    ? string.substr(0, index)\n    : string\n\n  var key\n  var match\n  var obj = splitType(type)\n  var params = {}\n  var value\n\n  paramRegExp.lastIndex = index\n\n  while (match = paramRegExp.exec(string)) {\n    if (match.index !== index) {\n      throw new TypeError('invalid parameter format')\n    }\n\n    index += match[0].length\n    key = match[1].toLowerCase()\n    value = match[2]\n\n    if (value[0] === '\"') {\n      // remove quotes and escapes\n      value = value\n        .substr(1, value.length - 2)\n        .replace(qescRegExp, '$1')\n    }\n\n    params[key] = value\n  }\n\n  if (index !== -1 && index !== string.length) {\n    throw new TypeError('invalid parameter format')\n  }\n\n  obj.parameters = params\n\n  return obj\n}\n\n/**\n * Get content-type from req/res objects.\n *\n * @param {object}\n * @return {Object}\n * @api private\n */\n\nfunction getcontenttype(obj) {\n  if (typeof obj.getHeader === 'function') {\n    // res-like\n    return obj.getHeader('content-type')\n  }\n\n  if (typeof obj.headers === 'object') {\n    // req-like\n    return obj.headers && obj.headers['content-type']\n  }\n}\n\n/**\n * Quote a string if necessary.\n *\n * @param {string} val\n * @return {string}\n * @api private\n */\n\nfunction qstring(val) {\n  var str = String(val)\n\n  // no need to quote tokens\n  if (tokenRegExp.test(str)) {\n    return str\n  }\n\n  if (str.length > 0 && !textRegExp.test(str)) {\n    throw new TypeError('invalid parameter value')\n  }\n\n  return '\"' + str.replace(quoteRegExp, '\\\\$1') + '\"'\n}\n\n/**\n * Simply \"type/subtype+siffx\" into parts.\n *\n * @param {string} string\n * @return {Object}\n * @api private\n */\n\nfunction splitType(string) {\n  var match = typeRegExp.exec(string.toLowerCase())\n\n  if (!match) {\n    throw new TypeError('invalid media type')\n  }\n\n  var type = match[1]\n  var subtype = match[2]\n  var suffix\n\n  // suffix after last +\n  var index = subtype.lastIndexOf('+')\n  if (index !== -1) {\n    suffix = subtype.substr(index + 1)\n    subtype = subtype.substr(0, index)\n  }\n\n  var obj = {\n    type: type,\n    subtype: subtype,\n    suffix: suffix\n  }\n\n  return obj\n}\n","/*!\n * merge-descriptors\n * Copyright(c) 2014 Jonathan Ong\n * Copyright(c) 2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = merge\n\n/**\n * Module variables.\n * @private\n */\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty\n\n/**\n * Merge the property descriptors of `src` into `dest`\n *\n * @param {object} dest Object to add descriptors to\n * @param {object} src Object to clone descriptors from\n * @param {boolean} [redefine=true] Redefine `dest` properties with `src` properties\n * @returns {object} Reference to dest\n * @public\n */\n\nfunction merge(dest, src, redefine) {\n  if (!dest) {\n    throw new TypeError('argument dest is required')\n  }\n\n  if (!src) {\n    throw new TypeError('argument src is required')\n  }\n\n  if (redefine === undefined) {\n    // Default to true\n    redefine = true\n  }\n\n  Object.getOwnPropertyNames(src).forEach(function forEachOwnPropertyName(name) {\n    if (!redefine && hasOwnProperty.call(dest, name)) {\n      // Skip desriptor\n      return\n    }\n\n    // Copy descriptor\n    var descriptor = Object.getOwnPropertyDescriptor(src, name)\n    Object.defineProperty(dest, name, descriptor)\n  })\n\n  return dest\n}\n","/*!\n * methods\n * Copyright(c) 2013-2014 TJ Holowaychuk\n * Copyright(c) 2015-2016 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict';\n\n/**\n * Module dependencies.\n * @private\n */\n\nvar http = require('http');\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = getCurrentNodeMethods() || getBasicNodeMethods();\n\n/**\n * Get the current Node.js methods.\n * @private\n */\n\nfunction getCurrentNodeMethods() {\n  return http.METHODS && http.METHODS.map(function lowerCaseMethod(method) {\n    return method.toLowerCase();\n  });\n}\n\n/**\n * Get the \"basic\" Node.js methods, a snapshot from Node.js 0.10.\n * @private\n */\n\nfunction getBasicNodeMethods() {\n  return [\n    'get',\n    'post',\n    'put',\n    'head',\n    'delete',\n    'options',\n    'trace',\n    'copy',\n    'lock',\n    'mkcol',\n    'move',\n    'purge',\n    'propfind',\n    'proppatch',\n    'unlock',\n    'report',\n    'mkactivity',\n    'checkout',\n    'merge',\n    'm-search',\n    'notify',\n    'subscribe',\n    'unsubscribe',\n    'patch',\n    'search',\n    'connect'\n  ];\n}\n","/*!\n * mime-db\n * Copyright(c) 2014 Jonathan Ong\n * Copyright(c) 2015-2022 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n/**\n * Module exports.\n */\n\nmodule.exports = require('./db.json')\n","/*!\n * mime-types\n * Copyright(c) 2014 Jonathan Ong\n * Copyright(c) 2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * Module dependencies.\n * @private\n */\n\nvar db = require('mime-db')\nvar extname = require('path').extname\n\n/**\n * Module variables.\n * @private\n */\n\nvar EXTRACT_TYPE_REGEXP = /^\\s*([^;\\s]*)(?:;|\\s|$)/\nvar TEXT_TYPE_REGEXP = /^text\\//i\n\n/**\n * Module exports.\n * @public\n */\n\nexports.charset = charset\nexports.charsets = { lookup: charset }\nexports.contentType = contentType\nexports.extension = extension\nexports.extensions = Object.create(null)\nexports.lookup = lookup\nexports.types = Object.create(null)\n\n// Populate the extensions/types maps\npopulateMaps(exports.extensions, exports.types)\n\n/**\n * Get the default charset for a MIME type.\n *\n * @param {string} type\n * @return {boolean|string}\n */\n\nfunction charset (type) {\n  if (!type || typeof type !== 'string') {\n    return false\n  }\n\n  // TODO: use media-typer\n  var match = EXTRACT_TYPE_REGEXP.exec(type)\n  var mime = match && db[match[1].toLowerCase()]\n\n  if (mime && mime.charset) {\n    return mime.charset\n  }\n\n  // default text/* to utf-8\n  if (match && TEXT_TYPE_REGEXP.test(match[1])) {\n    return 'UTF-8'\n  }\n\n  return false\n}\n\n/**\n * Create a full Content-Type header given a MIME type or extension.\n *\n * @param {string} str\n * @return {boolean|string}\n */\n\nfunction contentType (str) {\n  // TODO: should this even be in this module?\n  if (!str || typeof str !== 'string') {\n    return false\n  }\n\n  var mime = str.indexOf('/') === -1\n    ? exports.lookup(str)\n    : str\n\n  if (!mime) {\n    return false\n  }\n\n  // TODO: use content-type or other module\n  if (mime.indexOf('charset') === -1) {\n    var charset = exports.charset(mime)\n    if (charset) mime += '; charset=' + charset.toLowerCase()\n  }\n\n  return mime\n}\n\n/**\n * Get the default extension for a MIME type.\n *\n * @param {string} type\n * @return {boolean|string}\n */\n\nfunction extension (type) {\n  if (!type || typeof type !== 'string') {\n    return false\n  }\n\n  // TODO: use media-typer\n  var match = EXTRACT_TYPE_REGEXP.exec(type)\n\n  // get extensions\n  var exts = match && exports.extensions[match[1].toLowerCase()]\n\n  if (!exts || !exts.length) {\n    return false\n  }\n\n  return exts[0]\n}\n\n/**\n * Lookup the MIME type for a file path/extension.\n *\n * @param {string} path\n * @return {boolean|string}\n */\n\nfunction lookup (path) {\n  if (!path || typeof path !== 'string') {\n    return false\n  }\n\n  // get the extension (\"ext\" or \".ext\" or full path)\n  var extension = extname('x.' + path)\n    .toLowerCase()\n    .substr(1)\n\n  if (!extension) {\n    return false\n  }\n\n  return exports.types[extension] || false\n}\n\n/**\n * Populate the extensions and types maps.\n * @private\n */\n\nfunction populateMaps (extensions, types) {\n  // source preference (least -> most)\n  var preference = ['nginx', 'apache', undefined, 'iana']\n\n  Object.keys(db).forEach(function forEachMimeType (type) {\n    var mime = db[type]\n    var exts = mime.extensions\n\n    if (!exts || !exts.length) {\n      return\n    }\n\n    // mime -> extensions\n    extensions[type] = exts\n\n    // extension -> mime\n    for (var i = 0; i < exts.length; i++) {\n      var extension = exts[i]\n\n      if (types[extension]) {\n        var from = preference.indexOf(db[types[extension]].source)\n        var to = preference.indexOf(mime.source)\n\n        if (types[extension] !== 'application/octet-stream' &&\n          (from > to || (from === to && types[extension].substr(0, 12) === 'application/'))) {\n          // skip the remapping\n          continue\n        }\n      }\n\n      // set the extension -> mime\n      types[extension] = type\n    }\n  })\n}\n","var path = require('path');\nvar fs = require('fs');\n\nfunction Mime() {\n  // Map of extension -> mime type\n  this.types = Object.create(null);\n\n  // Map of mime type -> extension\n  this.extensions = Object.create(null);\n}\n\n/**\n * Define mimetype -> extension mappings.  Each key is a mime-type that maps\n * to an array of extensions associated with the type.  The first extension is\n * used as the default extension for the type.\n *\n * e.g. mime.define({'audio/ogg', ['oga', 'ogg', 'spx']});\n *\n * @param map (Object) type definitions\n */\nMime.prototype.define = function (map) {\n  for (var type in map) {\n    var exts = map[type];\n    for (var i = 0; i < exts.length; i++) {\n      if (process.env.DEBUG_MIME && this.types[exts[i]]) {\n        console.warn((this._loading || \"define()\").replace(/.*\\//, ''), 'changes \"' + exts[i] + '\" extension type from ' +\n          this.types[exts[i]] + ' to ' + type);\n      }\n\n      this.types[exts[i]] = type;\n    }\n\n    // Default extension is the first one we encounter\n    if (!this.extensions[type]) {\n      this.extensions[type] = exts[0];\n    }\n  }\n};\n\n/**\n * Load an Apache2-style \".types\" file\n *\n * This may be called multiple times (it's expected).  Where files declare\n * overlapping types/extensions, the last file wins.\n *\n * @param file (String) path of file to load.\n */\nMime.prototype.load = function(file) {\n  this._loading = file;\n  // Read file and split into lines\n  var map = {},\n      content = fs.readFileSync(file, 'ascii'),\n      lines = content.split(/[\\r\\n]+/);\n\n  lines.forEach(function(line) {\n    // Clean up whitespace/comments, and split into fields\n    var fields = line.replace(/\\s*#.*|^\\s*|\\s*$/g, '').split(/\\s+/);\n    map[fields.shift()] = fields;\n  });\n\n  this.define(map);\n\n  this._loading = null;\n};\n\n/**\n * Lookup a mime type based on extension\n */\nMime.prototype.lookup = function(path, fallback) {\n  var ext = path.replace(/^.*[\\.\\/\\\\]/, '').toLowerCase();\n\n  return this.types[ext] || fallback || this.default_type;\n};\n\n/**\n * Return file extension associated with a mime type\n */\nMime.prototype.extension = function(mimeType) {\n  var type = mimeType.match(/^\\s*([^;\\s]*)(?:;|\\s|$)/)[1].toLowerCase();\n  return this.extensions[type];\n};\n\n// Default instance\nvar mime = new Mime();\n\n// Define built-in types\nmime.define(require('./types.json'));\n\n// Default type\nmime.default_type = mime.lookup('bin');\n\n//\n// Additional API specific to the default instance\n//\n\nmime.Mime = Mime;\n\n/**\n * Lookup a charset based on mime type.\n */\nmime.charsets = {\n  lookup: function(mimeType, fallback) {\n    // Assume text types are utf8\n    return (/^text\\/|^application\\/(javascript|json)/).test(mimeType) ? 'UTF-8' : fallback;\n  }\n};\n\nmodule.exports = mime;\n","/*!\n * negotiator\n * Copyright(c) 2012 Federico Romero\n * Copyright(c) 2012-2014 Isaac Z. Schlueter\n * Copyright(c) 2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict';\n\nvar preferredCharsets = require('./lib/charset')\nvar preferredEncodings = require('./lib/encoding')\nvar preferredLanguages = require('./lib/language')\nvar preferredMediaTypes = require('./lib/mediaType')\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = Negotiator;\nmodule.exports.Negotiator = Negotiator;\n\n/**\n * Create a Negotiator instance from a request.\n * @param {object} request\n * @public\n */\n\nfunction Negotiator(request) {\n  if (!(this instanceof Negotiator)) {\n    return new Negotiator(request);\n  }\n\n  this.request = request;\n}\n\nNegotiator.prototype.charset = function charset(available) {\n  var set = this.charsets(available);\n  return set && set[0];\n};\n\nNegotiator.prototype.charsets = function charsets(available) {\n  return preferredCharsets(this.request.headers['accept-charset'], available);\n};\n\nNegotiator.prototype.encoding = function encoding(available) {\n  var set = this.encodings(available);\n  return set && set[0];\n};\n\nNegotiator.prototype.encodings = function encodings(available) {\n  return preferredEncodings(this.request.headers['accept-encoding'], available);\n};\n\nNegotiator.prototype.language = function language(available) {\n  var set = this.languages(available);\n  return set && set[0];\n};\n\nNegotiator.prototype.languages = function languages(available) {\n  return preferredLanguages(this.request.headers['accept-language'], available);\n};\n\nNegotiator.prototype.mediaType = function mediaType(available) {\n  var set = this.mediaTypes(available);\n  return set && set[0];\n};\n\nNegotiator.prototype.mediaTypes = function mediaTypes(available) {\n  return preferredMediaTypes(this.request.headers.accept, available);\n};\n\n// Backwards compatibility\nNegotiator.prototype.preferredCharset = Negotiator.prototype.charset;\nNegotiator.prototype.preferredCharsets = Negotiator.prototype.charsets;\nNegotiator.prototype.preferredEncoding = Negotiator.prototype.encoding;\nNegotiator.prototype.preferredEncodings = Negotiator.prototype.encodings;\nNegotiator.prototype.preferredLanguage = Negotiator.prototype.language;\nNegotiator.prototype.preferredLanguages = Negotiator.prototype.languages;\nNegotiator.prototype.preferredMediaType = Negotiator.prototype.mediaType;\nNegotiator.prototype.preferredMediaTypes = Negotiator.prototype.mediaTypes;\n","/**\n * negotiator\n * Copyright(c) 2012 Isaac Z. Schlueter\n * Copyright(c) 2014 Federico Romero\n * Copyright(c) 2014-2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict';\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = preferredCharsets;\nmodule.exports.preferredCharsets = preferredCharsets;\n\n/**\n * Module variables.\n * @private\n */\n\nvar simpleCharsetRegExp = /^\\s*([^\\s;]+)\\s*(?:;(.*))?$/;\n\n/**\n * Parse the Accept-Charset header.\n * @private\n */\n\nfunction parseAcceptCharset(accept) {\n  var accepts = accept.split(',');\n\n  for (var i = 0, j = 0; i < accepts.length; i++) {\n    var charset = parseCharset(accepts[i].trim(), i);\n\n    if (charset) {\n      accepts[j++] = charset;\n    }\n  }\n\n  // trim accepts\n  accepts.length = j;\n\n  return accepts;\n}\n\n/**\n * Parse a charset from the Accept-Charset header.\n * @private\n */\n\nfunction parseCharset(str, i) {\n  var match = simpleCharsetRegExp.exec(str);\n  if (!match) return null;\n\n  var charset = match[1];\n  var q = 1;\n  if (match[2]) {\n    var params = match[2].split(';')\n    for (var j = 0; j < params.length; j++) {\n      var p = params[j].trim().split('=');\n      if (p[0] === 'q') {\n        q = parseFloat(p[1]);\n        break;\n      }\n    }\n  }\n\n  return {\n    charset: charset,\n    q: q,\n    i: i\n  };\n}\n\n/**\n * Get the priority of a charset.\n * @private\n */\n\nfunction getCharsetPriority(charset, accepted, index) {\n  var priority = {o: -1, q: 0, s: 0};\n\n  for (var i = 0; i < accepted.length; i++) {\n    var spec = specify(charset, accepted[i], index);\n\n    if (spec && (priority.s - spec.s || priority.q - spec.q || priority.o - spec.o) < 0) {\n      priority = spec;\n    }\n  }\n\n  return priority;\n}\n\n/**\n * Get the specificity of the charset.\n * @private\n */\n\nfunction specify(charset, spec, index) {\n  var s = 0;\n  if(spec.charset.toLowerCase() === charset.toLowerCase()){\n    s |= 1;\n  } else if (spec.charset !== '*' ) {\n    return null\n  }\n\n  return {\n    i: index,\n    o: spec.i,\n    q: spec.q,\n    s: s\n  }\n}\n\n/**\n * Get the preferred charsets from an Accept-Charset header.\n * @public\n */\n\nfunction preferredCharsets(accept, provided) {\n  // RFC 2616 sec 14.2: no header = *\n  var accepts = parseAcceptCharset(accept === undefined ? '*' : accept || '');\n\n  if (!provided) {\n    // sorted list of all charsets\n    return accepts\n      .filter(isQuality)\n      .sort(compareSpecs)\n      .map(getFullCharset);\n  }\n\n  var priorities = provided.map(function getPriority(type, index) {\n    return getCharsetPriority(type, accepts, index);\n  });\n\n  // sorted list of accepted charsets\n  return priorities.filter(isQuality).sort(compareSpecs).map(function getCharset(priority) {\n    return provided[priorities.indexOf(priority)];\n  });\n}\n\n/**\n * Compare two specs.\n * @private\n */\n\nfunction compareSpecs(a, b) {\n  return (b.q - a.q) || (b.s - a.s) || (a.o - b.o) || (a.i - b.i) || 0;\n}\n\n/**\n * Get full charset string.\n * @private\n */\n\nfunction getFullCharset(spec) {\n  return spec.charset;\n}\n\n/**\n * Check if a spec has any quality.\n * @private\n */\n\nfunction isQuality(spec) {\n  return spec.q > 0;\n}\n","/**\n * negotiator\n * Copyright(c) 2012 Isaac Z. Schlueter\n * Copyright(c) 2014 Federico Romero\n * Copyright(c) 2014-2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict';\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = preferredEncodings;\nmodule.exports.preferredEncodings = preferredEncodings;\n\n/**\n * Module variables.\n * @private\n */\n\nvar simpleEncodingRegExp = /^\\s*([^\\s;]+)\\s*(?:;(.*))?$/;\n\n/**\n * Parse the Accept-Encoding header.\n * @private\n */\n\nfunction parseAcceptEncoding(accept) {\n  var accepts = accept.split(',');\n  var hasIdentity = false;\n  var minQuality = 1;\n\n  for (var i = 0, j = 0; i < accepts.length; i++) {\n    var encoding = parseEncoding(accepts[i].trim(), i);\n\n    if (encoding) {\n      accepts[j++] = encoding;\n      hasIdentity = hasIdentity || specify('identity', encoding);\n      minQuality = Math.min(minQuality, encoding.q || 1);\n    }\n  }\n\n  if (!hasIdentity) {\n    /*\n     * If identity doesn't explicitly appear in the accept-encoding header,\n     * it's added to the list of acceptable encoding with the lowest q\n     */\n    accepts[j++] = {\n      encoding: 'identity',\n      q: minQuality,\n      i: i\n    };\n  }\n\n  // trim accepts\n  accepts.length = j;\n\n  return accepts;\n}\n\n/**\n * Parse an encoding from the Accept-Encoding header.\n * @private\n */\n\nfunction parseEncoding(str, i) {\n  var match = simpleEncodingRegExp.exec(str);\n  if (!match) return null;\n\n  var encoding = match[1];\n  var q = 1;\n  if (match[2]) {\n    var params = match[2].split(';');\n    for (var j = 0; j < params.length; j++) {\n      var p = params[j].trim().split('=');\n      if (p[0] === 'q') {\n        q = parseFloat(p[1]);\n        break;\n      }\n    }\n  }\n\n  return {\n    encoding: encoding,\n    q: q,\n    i: i\n  };\n}\n\n/**\n * Get the priority of an encoding.\n * @private\n */\n\nfunction getEncodingPriority(encoding, accepted, index) {\n  var priority = {o: -1, q: 0, s: 0};\n\n  for (var i = 0; i < accepted.length; i++) {\n    var spec = specify(encoding, accepted[i], index);\n\n    if (spec && (priority.s - spec.s || priority.q - spec.q || priority.o - spec.o) < 0) {\n      priority = spec;\n    }\n  }\n\n  return priority;\n}\n\n/**\n * Get the specificity of the encoding.\n * @private\n */\n\nfunction specify(encoding, spec, index) {\n  var s = 0;\n  if(spec.encoding.toLowerCase() === encoding.toLowerCase()){\n    s |= 1;\n  } else if (spec.encoding !== '*' ) {\n    return null\n  }\n\n  return {\n    i: index,\n    o: spec.i,\n    q: spec.q,\n    s: s\n  }\n};\n\n/**\n * Get the preferred encodings from an Accept-Encoding header.\n * @public\n */\n\nfunction preferredEncodings(accept, provided) {\n  var accepts = parseAcceptEncoding(accept || '');\n\n  if (!provided) {\n    // sorted list of all encodings\n    return accepts\n      .filter(isQuality)\n      .sort(compareSpecs)\n      .map(getFullEncoding);\n  }\n\n  var priorities = provided.map(function getPriority(type, index) {\n    return getEncodingPriority(type, accepts, index);\n  });\n\n  // sorted list of accepted encodings\n  return priorities.filter(isQuality).sort(compareSpecs).map(function getEncoding(priority) {\n    return provided[priorities.indexOf(priority)];\n  });\n}\n\n/**\n * Compare two specs.\n * @private\n */\n\nfunction compareSpecs(a, b) {\n  return (b.q - a.q) || (b.s - a.s) || (a.o - b.o) || (a.i - b.i) || 0;\n}\n\n/**\n * Get full encoding string.\n * @private\n */\n\nfunction getFullEncoding(spec) {\n  return spec.encoding;\n}\n\n/**\n * Check if a spec has any quality.\n * @private\n */\n\nfunction isQuality(spec) {\n  return spec.q > 0;\n}\n","/**\n * negotiator\n * Copyright(c) 2012 Isaac Z. Schlueter\n * Copyright(c) 2014 Federico Romero\n * Copyright(c) 2014-2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict';\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = preferredLanguages;\nmodule.exports.preferredLanguages = preferredLanguages;\n\n/**\n * Module variables.\n * @private\n */\n\nvar simpleLanguageRegExp = /^\\s*([^\\s\\-;]+)(?:-([^\\s;]+))?\\s*(?:;(.*))?$/;\n\n/**\n * Parse the Accept-Language header.\n * @private\n */\n\nfunction parseAcceptLanguage(accept) {\n  var accepts = accept.split(',');\n\n  for (var i = 0, j = 0; i < accepts.length; i++) {\n    var language = parseLanguage(accepts[i].trim(), i);\n\n    if (language) {\n      accepts[j++] = language;\n    }\n  }\n\n  // trim accepts\n  accepts.length = j;\n\n  return accepts;\n}\n\n/**\n * Parse a language from the Accept-Language header.\n * @private\n */\n\nfunction parseLanguage(str, i) {\n  var match = simpleLanguageRegExp.exec(str);\n  if (!match) return null;\n\n  var prefix = match[1]\n  var suffix = match[2]\n  var full = prefix\n\n  if (suffix) full += \"-\" + suffix;\n\n  var q = 1;\n  if (match[3]) {\n    var params = match[3].split(';')\n    for (var j = 0; j < params.length; j++) {\n      var p = params[j].split('=');\n      if (p[0] === 'q') q = parseFloat(p[1]);\n    }\n  }\n\n  return {\n    prefix: prefix,\n    suffix: suffix,\n    q: q,\n    i: i,\n    full: full\n  };\n}\n\n/**\n * Get the priority of a language.\n * @private\n */\n\nfunction getLanguagePriority(language, accepted, index) {\n  var priority = {o: -1, q: 0, s: 0};\n\n  for (var i = 0; i < accepted.length; i++) {\n    var spec = specify(language, accepted[i], index);\n\n    if (spec && (priority.s - spec.s || priority.q - spec.q || priority.o - spec.o) < 0) {\n      priority = spec;\n    }\n  }\n\n  return priority;\n}\n\n/**\n * Get the specificity of the language.\n * @private\n */\n\nfunction specify(language, spec, index) {\n  var p = parseLanguage(language)\n  if (!p) return null;\n  var s = 0;\n  if(spec.full.toLowerCase() === p.full.toLowerCase()){\n    s |= 4;\n  } else if (spec.prefix.toLowerCase() === p.full.toLowerCase()) {\n    s |= 2;\n  } else if (spec.full.toLowerCase() === p.prefix.toLowerCase()) {\n    s |= 1;\n  } else if (spec.full !== '*' ) {\n    return null\n  }\n\n  return {\n    i: index,\n    o: spec.i,\n    q: spec.q,\n    s: s\n  }\n};\n\n/**\n * Get the preferred languages from an Accept-Language header.\n * @public\n */\n\nfunction preferredLanguages(accept, provided) {\n  // RFC 2616 sec 14.4: no header = *\n  var accepts = parseAcceptLanguage(accept === undefined ? '*' : accept || '');\n\n  if (!provided) {\n    // sorted list of all languages\n    return accepts\n      .filter(isQuality)\n      .sort(compareSpecs)\n      .map(getFullLanguage);\n  }\n\n  var priorities = provided.map(function getPriority(type, index) {\n    return getLanguagePriority(type, accepts, index);\n  });\n\n  // sorted list of accepted languages\n  return priorities.filter(isQuality).sort(compareSpecs).map(function getLanguage(priority) {\n    return provided[priorities.indexOf(priority)];\n  });\n}\n\n/**\n * Compare two specs.\n * @private\n */\n\nfunction compareSpecs(a, b) {\n  return (b.q - a.q) || (b.s - a.s) || (a.o - b.o) || (a.i - b.i) || 0;\n}\n\n/**\n * Get full language string.\n * @private\n */\n\nfunction getFullLanguage(spec) {\n  return spec.full;\n}\n\n/**\n * Check if a spec has any quality.\n * @private\n */\n\nfunction isQuality(spec) {\n  return spec.q > 0;\n}\n","/**\n * negotiator\n * Copyright(c) 2012 Isaac Z. Schlueter\n * Copyright(c) 2014 Federico Romero\n * Copyright(c) 2014-2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict';\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = preferredMediaTypes;\nmodule.exports.preferredMediaTypes = preferredMediaTypes;\n\n/**\n * Module variables.\n * @private\n */\n\nvar simpleMediaTypeRegExp = /^\\s*([^\\s\\/;]+)\\/([^;\\s]+)\\s*(?:;(.*))?$/;\n\n/**\n * Parse the Accept header.\n * @private\n */\n\nfunction parseAccept(accept) {\n  var accepts = splitMediaTypes(accept);\n\n  for (var i = 0, j = 0; i < accepts.length; i++) {\n    var mediaType = parseMediaType(accepts[i].trim(), i);\n\n    if (mediaType) {\n      accepts[j++] = mediaType;\n    }\n  }\n\n  // trim accepts\n  accepts.length = j;\n\n  return accepts;\n}\n\n/**\n * Parse a media type from the Accept header.\n * @private\n */\n\nfunction parseMediaType(str, i) {\n  var match = simpleMediaTypeRegExp.exec(str);\n  if (!match) return null;\n\n  var params = Object.create(null);\n  var q = 1;\n  var subtype = match[2];\n  var type = match[1];\n\n  if (match[3]) {\n    var kvps = splitParameters(match[3]).map(splitKeyValuePair);\n\n    for (var j = 0; j < kvps.length; j++) {\n      var pair = kvps[j];\n      var key = pair[0].toLowerCase();\n      var val = pair[1];\n\n      // get the value, unwrapping quotes\n      var value = val && val[0] === '\"' && val[val.length - 1] === '\"'\n        ? val.substr(1, val.length - 2)\n        : val;\n\n      if (key === 'q') {\n        q = parseFloat(value);\n        break;\n      }\n\n      // store parameter\n      params[key] = value;\n    }\n  }\n\n  return {\n    type: type,\n    subtype: subtype,\n    params: params,\n    q: q,\n    i: i\n  };\n}\n\n/**\n * Get the priority of a media type.\n * @private\n */\n\nfunction getMediaTypePriority(type, accepted, index) {\n  var priority = {o: -1, q: 0, s: 0};\n\n  for (var i = 0; i < accepted.length; i++) {\n    var spec = specify(type, accepted[i], index);\n\n    if (spec && (priority.s - spec.s || priority.q - spec.q || priority.o - spec.o) < 0) {\n      priority = spec;\n    }\n  }\n\n  return priority;\n}\n\n/**\n * Get the specificity of the media type.\n * @private\n */\n\nfunction specify(type, spec, index) {\n  var p = parseMediaType(type);\n  var s = 0;\n\n  if (!p) {\n    return null;\n  }\n\n  if(spec.type.toLowerCase() == p.type.toLowerCase()) {\n    s |= 4\n  } else if(spec.type != '*') {\n    return null;\n  }\n\n  if(spec.subtype.toLowerCase() == p.subtype.toLowerCase()) {\n    s |= 2\n  } else if(spec.subtype != '*') {\n    return null;\n  }\n\n  var keys = Object.keys(spec.params);\n  if (keys.length > 0) {\n    if (keys.every(function (k) {\n      return spec.params[k] == '*' || (spec.params[k] || '').toLowerCase() == (p.params[k] || '').toLowerCase();\n    })) {\n      s |= 1\n    } else {\n      return null\n    }\n  }\n\n  return {\n    i: index,\n    o: spec.i,\n    q: spec.q,\n    s: s,\n  }\n}\n\n/**\n * Get the preferred media types from an Accept header.\n * @public\n */\n\nfunction preferredMediaTypes(accept, provided) {\n  // RFC 2616 sec 14.2: no header = */*\n  var accepts = parseAccept(accept === undefined ? '*/*' : accept || '');\n\n  if (!provided) {\n    // sorted list of all types\n    return accepts\n      .filter(isQuality)\n      .sort(compareSpecs)\n      .map(getFullType);\n  }\n\n  var priorities = provided.map(function getPriority(type, index) {\n    return getMediaTypePriority(type, accepts, index);\n  });\n\n  // sorted list of accepted types\n  return priorities.filter(isQuality).sort(compareSpecs).map(function getType(priority) {\n    return provided[priorities.indexOf(priority)];\n  });\n}\n\n/**\n * Compare two specs.\n * @private\n */\n\nfunction compareSpecs(a, b) {\n  return (b.q - a.q) || (b.s - a.s) || (a.o - b.o) || (a.i - b.i) || 0;\n}\n\n/**\n * Get full type string.\n * @private\n */\n\nfunction getFullType(spec) {\n  return spec.type + '/' + spec.subtype;\n}\n\n/**\n * Check if a spec has any quality.\n * @private\n */\n\nfunction isQuality(spec) {\n  return spec.q > 0;\n}\n\n/**\n * Count the number of quotes in a string.\n * @private\n */\n\nfunction quoteCount(string) {\n  var count = 0;\n  var index = 0;\n\n  while ((index = string.indexOf('\"', index)) !== -1) {\n    count++;\n    index++;\n  }\n\n  return count;\n}\n\n/**\n * Split a key value pair.\n * @private\n */\n\nfunction splitKeyValuePair(str) {\n  var index = str.indexOf('=');\n  var key;\n  var val;\n\n  if (index === -1) {\n    key = str;\n  } else {\n    key = str.substr(0, index);\n    val = str.substr(index + 1);\n  }\n\n  return [key, val];\n}\n\n/**\n * Split an Accept header into media types.\n * @private\n */\n\nfunction splitMediaTypes(accept) {\n  var accepts = accept.split(',');\n\n  for (var i = 1, j = 0; i < accepts.length; i++) {\n    if (quoteCount(accepts[j]) % 2 == 0) {\n      accepts[++j] = accepts[i];\n    } else {\n      accepts[j] += ',' + accepts[i];\n    }\n  }\n\n  // trim accepts\n  accepts.length = j + 1;\n\n  return accepts;\n}\n\n/**\n * Split a string of parameters.\n * @private\n */\n\nfunction splitParameters(str) {\n  var parameters = str.split(';');\n\n  for (var i = 1, j = 0; i < parameters.length; i++) {\n    if (quoteCount(parameters[j]) % 2 == 0) {\n      parameters[++j] = parameters[i];\n    } else {\n      parameters[j] += ';' + parameters[i];\n    }\n  }\n\n  // trim parameters\n  parameters.length = j + 1;\n\n  for (var i = 0; i < parameters.length; i++) {\n    parameters[i] = parameters[i].trim();\n  }\n\n  return parameters;\n}\n","var fs = require('fs')\nvar path = require('path')\nvar os = require('os')\n\n// Workaround to fix webpack's build warnings: 'the request of a dependency is an expression'\nvar runtimeRequire = typeof __webpack_require__ === 'function' ? __non_webpack_require__ : require // eslint-disable-line\n\nvar vars = (process.config && process.config.variables) || {}\nvar prebuildsOnly = !!process.env.PREBUILDS_ONLY\nvar abi = process.versions.modules // TODO: support old node where this is undef\nvar runtime = isElectron() ? 'electron' : (isNwjs() ? 'node-webkit' : 'node')\n\nvar arch = process.env.npm_config_arch || os.arch()\nvar platform = process.env.npm_config_platform || os.platform()\nvar libc = process.env.LIBC || (isAlpine(platform) ? 'musl' : 'glibc')\nvar armv = process.env.ARM_VERSION || (arch === 'arm64' ? '8' : vars.arm_version) || ''\nvar uv = (process.versions.uv || '').split('.')[0]\n\nmodule.exports = load\n\nfunction load (dir) {\n  return runtimeRequire(load.path(dir))\n}\n\nload.path = function (dir) {\n  dir = path.resolve(dir || '.')\n\n  try {\n    var name = runtimeRequire(path.join(dir, 'package.json')).name.toUpperCase().replace(/-/g, '_')\n    if (process.env[name + '_PREBUILD']) dir = process.env[name + '_PREBUILD']\n  } catch (err) {}\n\n  if (!prebuildsOnly) {\n    var release = getFirst(path.join(dir, 'build/Release'), matchBuild)\n    if (release) return release\n\n    var debug = getFirst(path.join(dir, 'build/Debug'), matchBuild)\n    if (debug) return debug\n  }\n\n  var prebuild = resolve(dir)\n  if (prebuild) return prebuild\n\n  var nearby = resolve(path.dirname(process.execPath))\n  if (nearby) return nearby\n\n  var target = [\n    'platform=' + platform,\n    'arch=' + arch,\n    'runtime=' + runtime,\n    'abi=' + abi,\n    'uv=' + uv,\n    armv ? 'armv=' + armv : '',\n    'libc=' + libc,\n    'node=' + process.versions.node,\n    process.versions.electron ? 'electron=' + process.versions.electron : '',\n    typeof __webpack_require__ === 'function' ? 'webpack=true' : '' // eslint-disable-line\n  ].filter(Boolean).join(' ')\n\n  throw new Error('No native build was found for ' + target + '\\n    loaded from: ' + dir + '\\n')\n\n  function resolve (dir) {\n    // Find matching \"prebuilds/<platform>-<arch>\" directory\n    var tuples = readdirSync(path.join(dir, 'prebuilds')).map(parseTuple)\n    var tuple = tuples.filter(matchTuple(platform, arch)).sort(compareTuples)[0]\n    if (!tuple) return\n\n    // Find most specific flavor first\n    var prebuilds = path.join(dir, 'prebuilds', tuple.name)\n    var parsed = readdirSync(prebuilds).map(parseTags)\n    var candidates = parsed.filter(matchTags(runtime, abi))\n    var winner = candidates.sort(compareTags(runtime))[0]\n    if (winner) return path.join(prebuilds, winner.file)\n  }\n}\n\nfunction readdirSync (dir) {\n  try {\n    return fs.readdirSync(dir)\n  } catch (err) {\n    return []\n  }\n}\n\nfunction getFirst (dir, filter) {\n  var files = readdirSync(dir).filter(filter)\n  return files[0] && path.join(dir, files[0])\n}\n\nfunction matchBuild (name) {\n  return /\\.node$/.test(name)\n}\n\nfunction parseTuple (name) {\n  // Example: darwin-x64+arm64\n  var arr = name.split('-')\n  if (arr.length !== 2) return\n\n  var platform = arr[0]\n  var architectures = arr[1].split('+')\n\n  if (!platform) return\n  if (!architectures.length) return\n  if (!architectures.every(Boolean)) return\n\n  return { name, platform, architectures }\n}\n\nfunction matchTuple (platform, arch) {\n  return function (tuple) {\n    if (tuple == null) return false\n    if (tuple.platform !== platform) return false\n    return tuple.architectures.includes(arch)\n  }\n}\n\nfunction compareTuples (a, b) {\n  // Prefer single-arch prebuilds over multi-arch\n  return a.architectures.length - b.architectures.length\n}\n\nfunction parseTags (file) {\n  var arr = file.split('.')\n  var extension = arr.pop()\n  var tags = { file: file, specificity: 0 }\n\n  if (extension !== 'node') return\n\n  for (var i = 0; i < arr.length; i++) {\n    var tag = arr[i]\n\n    if (tag === 'node' || tag === 'electron' || tag === 'node-webkit') {\n      tags.runtime = tag\n    } else if (tag === 'napi') {\n      tags.napi = true\n    } else if (tag.slice(0, 3) === 'abi') {\n      tags.abi = tag.slice(3)\n    } else if (tag.slice(0, 2) === 'uv') {\n      tags.uv = tag.slice(2)\n    } else if (tag.slice(0, 4) === 'armv') {\n      tags.armv = tag.slice(4)\n    } else if (tag === 'glibc' || tag === 'musl') {\n      tags.libc = tag\n    } else {\n      continue\n    }\n\n    tags.specificity++\n  }\n\n  return tags\n}\n\nfunction matchTags (runtime, abi) {\n  return function (tags) {\n    if (tags == null) return false\n    if (tags.runtime !== runtime && !runtimeAgnostic(tags)) return false\n    if (tags.abi !== abi && !tags.napi) return false\n    if (tags.uv && tags.uv !== uv) return false\n    if (tags.armv && tags.armv !== armv) return false\n    if (tags.libc && tags.libc !== libc) return false\n\n    return true\n  }\n}\n\nfunction runtimeAgnostic (tags) {\n  return tags.runtime === 'node' && tags.napi\n}\n\nfunction compareTags (runtime) {\n  // Precedence: non-agnostic runtime, abi over napi, then by specificity.\n  return function (a, b) {\n    if (a.runtime !== b.runtime) {\n      return a.runtime === runtime ? -1 : 1\n    } else if (a.abi !== b.abi) {\n      return a.abi ? -1 : 1\n    } else if (a.specificity !== b.specificity) {\n      return a.specificity > b.specificity ? -1 : 1\n    } else {\n      return 0\n    }\n  }\n}\n\nfunction isNwjs () {\n  return !!(process.versions && process.versions.nw)\n}\n\nfunction isElectron () {\n  if (process.versions && process.versions.electron) return true\n  if (process.env.ELECTRON_RUN_AS_NODE) return true\n  return typeof window !== 'undefined' && window.process && window.process.type === 'renderer'\n}\n\nfunction isAlpine (platform) {\n  return platform === 'linux' && fs.existsSync('/etc/alpine-release')\n}\n\n// Exposed for unit tests\n// TODO: move to lib\nload.parseTags = parseTags\nload.matchTags = matchTags\nload.compareTags = compareTags\nload.parseTuple = parseTuple\nload.matchTuple = matchTuple\nload.compareTuples = compareTuples\n","/*\nobject-assign\n(c) Sindre Sorhus\n@license MIT\n*/\n\n'use strict';\n/* eslint-disable no-unused-vars */\nvar getOwnPropertySymbols = Object.getOwnPropertySymbols;\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nvar propIsEnumerable = Object.prototype.propertyIsEnumerable;\n\nfunction toObject(val) {\n\tif (val === null || val === undefined) {\n\t\tthrow new TypeError('Object.assign cannot be called with null or undefined');\n\t}\n\n\treturn Object(val);\n}\n\nfunction shouldUseNative() {\n\ttry {\n\t\tif (!Object.assign) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Detect buggy property enumeration order in older V8 versions.\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=4118\n\t\tvar test1 = new String('abc');  // eslint-disable-line no-new-wrappers\n\t\ttest1[5] = 'de';\n\t\tif (Object.getOwnPropertyNames(test1)[0] === '5') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test2 = {};\n\t\tfor (var i = 0; i < 10; i++) {\n\t\t\ttest2['_' + String.fromCharCode(i)] = i;\n\t\t}\n\t\tvar order2 = Object.getOwnPropertyNames(test2).map(function (n) {\n\t\t\treturn test2[n];\n\t\t});\n\t\tif (order2.join('') !== '0123456789') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test3 = {};\n\t\t'abcdefghijklmnopqrst'.split('').forEach(function (letter) {\n\t\t\ttest3[letter] = letter;\n\t\t});\n\t\tif (Object.keys(Object.assign({}, test3)).join('') !==\n\t\t\t\t'abcdefghijklmnopqrst') {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t} catch (err) {\n\t\t// We don't expect any of the above to throw, but better to be safe.\n\t\treturn false;\n\t}\n}\n\nmodule.exports = shouldUseNative() ? Object.assign : function (target, source) {\n\tvar from;\n\tvar to = toObject(target);\n\tvar symbols;\n\n\tfor (var s = 1; s < arguments.length; s++) {\n\t\tfrom = Object(arguments[s]);\n\n\t\tfor (var key in from) {\n\t\t\tif (hasOwnProperty.call(from, key)) {\n\t\t\t\tto[key] = from[key];\n\t\t\t}\n\t\t}\n\n\t\tif (getOwnPropertySymbols) {\n\t\t\tsymbols = getOwnPropertySymbols(from);\n\t\t\tfor (var i = 0; i < symbols.length; i++) {\n\t\t\t\tif (propIsEnumerable.call(from, symbols[i])) {\n\t\t\t\t\tto[symbols[i]] = from[symbols[i]];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn to;\n};\n","var hasMap = typeof Map === 'function' && Map.prototype;\nvar mapSizeDescriptor = Object.getOwnPropertyDescriptor && hasMap ? Object.getOwnPropertyDescriptor(Map.prototype, 'size') : null;\nvar mapSize = hasMap && mapSizeDescriptor && typeof mapSizeDescriptor.get === 'function' ? mapSizeDescriptor.get : null;\nvar mapForEach = hasMap && Map.prototype.forEach;\nvar hasSet = typeof Set === 'function' && Set.prototype;\nvar setSizeDescriptor = Object.getOwnPropertyDescriptor && hasSet ? Object.getOwnPropertyDescriptor(Set.prototype, 'size') : null;\nvar setSize = hasSet && setSizeDescriptor && typeof setSizeDescriptor.get === 'function' ? setSizeDescriptor.get : null;\nvar setForEach = hasSet && Set.prototype.forEach;\nvar hasWeakMap = typeof WeakMap === 'function' && WeakMap.prototype;\nvar weakMapHas = hasWeakMap ? WeakMap.prototype.has : null;\nvar hasWeakSet = typeof WeakSet === 'function' && WeakSet.prototype;\nvar weakSetHas = hasWeakSet ? WeakSet.prototype.has : null;\nvar hasWeakRef = typeof WeakRef === 'function' && WeakRef.prototype;\nvar weakRefDeref = hasWeakRef ? WeakRef.prototype.deref : null;\nvar booleanValueOf = Boolean.prototype.valueOf;\nvar objectToString = Object.prototype.toString;\nvar functionToString = Function.prototype.toString;\nvar $match = String.prototype.match;\nvar $slice = String.prototype.slice;\nvar $replace = String.prototype.replace;\nvar $toUpperCase = String.prototype.toUpperCase;\nvar $toLowerCase = String.prototype.toLowerCase;\nvar $test = RegExp.prototype.test;\nvar $concat = Array.prototype.concat;\nvar $join = Array.prototype.join;\nvar $arrSlice = Array.prototype.slice;\nvar $floor = Math.floor;\nvar bigIntValueOf = typeof BigInt === 'function' ? BigInt.prototype.valueOf : null;\nvar gOPS = Object.getOwnPropertySymbols;\nvar symToString = typeof Symbol === 'function' && typeof Symbol.iterator === 'symbol' ? Symbol.prototype.toString : null;\nvar hasShammedSymbols = typeof Symbol === 'function' && typeof Symbol.iterator === 'object';\n// ie, `has-tostringtag/shams\nvar toStringTag = typeof Symbol === 'function' && Symbol.toStringTag && (typeof Symbol.toStringTag === hasShammedSymbols ? 'object' : 'symbol')\n    ? Symbol.toStringTag\n    : null;\nvar isEnumerable = Object.prototype.propertyIsEnumerable;\n\nvar gPO = (typeof Reflect === 'function' ? Reflect.getPrototypeOf : Object.getPrototypeOf) || (\n    [].__proto__ === Array.prototype // eslint-disable-line no-proto\n        ? function (O) {\n            return O.__proto__; // eslint-disable-line no-proto\n        }\n        : null\n);\n\nfunction addNumericSeparator(num, str) {\n    if (\n        num === Infinity\n        || num === -Infinity\n        || num !== num\n        || (num && num > -1000 && num < 1000)\n        || $test.call(/e/, str)\n    ) {\n        return str;\n    }\n    var sepRegex = /[0-9](?=(?:[0-9]{3})+(?![0-9]))/g;\n    if (typeof num === 'number') {\n        var int = num < 0 ? -$floor(-num) : $floor(num); // trunc(num)\n        if (int !== num) {\n            var intStr = String(int);\n            var dec = $slice.call(str, intStr.length + 1);\n            return $replace.call(intStr, sepRegex, '$&_') + '.' + $replace.call($replace.call(dec, /([0-9]{3})/g, '$&_'), /_$/, '');\n        }\n    }\n    return $replace.call(str, sepRegex, '$&_');\n}\n\nvar utilInspect = require('./util.inspect');\nvar inspectCustom = utilInspect.custom;\nvar inspectSymbol = isSymbol(inspectCustom) ? inspectCustom : null;\n\nmodule.exports = function inspect_(obj, options, depth, seen) {\n    var opts = options || {};\n\n    if (has(opts, 'quoteStyle') && (opts.quoteStyle !== 'single' && opts.quoteStyle !== 'double')) {\n        throw new TypeError('option \"quoteStyle\" must be \"single\" or \"double\"');\n    }\n    if (\n        has(opts, 'maxStringLength') && (typeof opts.maxStringLength === 'number'\n            ? opts.maxStringLength < 0 && opts.maxStringLength !== Infinity\n            : opts.maxStringLength !== null\n        )\n    ) {\n        throw new TypeError('option \"maxStringLength\", if provided, must be a positive integer, Infinity, or `null`');\n    }\n    var customInspect = has(opts, 'customInspect') ? opts.customInspect : true;\n    if (typeof customInspect !== 'boolean' && customInspect !== 'symbol') {\n        throw new TypeError('option \"customInspect\", if provided, must be `true`, `false`, or `\\'symbol\\'`');\n    }\n\n    if (\n        has(opts, 'indent')\n        && opts.indent !== null\n        && opts.indent !== '\\t'\n        && !(parseInt(opts.indent, 10) === opts.indent && opts.indent > 0)\n    ) {\n        throw new TypeError('option \"indent\" must be \"\\\\t\", an integer > 0, or `null`');\n    }\n    if (has(opts, 'numericSeparator') && typeof opts.numericSeparator !== 'boolean') {\n        throw new TypeError('option \"numericSeparator\", if provided, must be `true` or `false`');\n    }\n    var numericSeparator = opts.numericSeparator;\n\n    if (typeof obj === 'undefined') {\n        return 'undefined';\n    }\n    if (obj === null) {\n        return 'null';\n    }\n    if (typeof obj === 'boolean') {\n        return obj ? 'true' : 'false';\n    }\n\n    if (typeof obj === 'string') {\n        return inspectString(obj, opts);\n    }\n    if (typeof obj === 'number') {\n        if (obj === 0) {\n            return Infinity / obj > 0 ? '0' : '-0';\n        }\n        var str = String(obj);\n        return numericSeparator ? addNumericSeparator(obj, str) : str;\n    }\n    if (typeof obj === 'bigint') {\n        var bigIntStr = String(obj) + 'n';\n        return numericSeparator ? addNumericSeparator(obj, bigIntStr) : bigIntStr;\n    }\n\n    var maxDepth = typeof opts.depth === 'undefined' ? 5 : opts.depth;\n    if (typeof depth === 'undefined') { depth = 0; }\n    if (depth >= maxDepth && maxDepth > 0 && typeof obj === 'object') {\n        return isArray(obj) ? '[Array]' : '[Object]';\n    }\n\n    var indent = getIndent(opts, depth);\n\n    if (typeof seen === 'undefined') {\n        seen = [];\n    } else if (indexOf(seen, obj) >= 0) {\n        return '[Circular]';\n    }\n\n    function inspect(value, from, noIndent) {\n        if (from) {\n            seen = $arrSlice.call(seen);\n            seen.push(from);\n        }\n        if (noIndent) {\n            var newOpts = {\n                depth: opts.depth\n            };\n            if (has(opts, 'quoteStyle')) {\n                newOpts.quoteStyle = opts.quoteStyle;\n            }\n            return inspect_(value, newOpts, depth + 1, seen);\n        }\n        return inspect_(value, opts, depth + 1, seen);\n    }\n\n    if (typeof obj === 'function' && !isRegExp(obj)) { // in older engines, regexes are callable\n        var name = nameOf(obj);\n        var keys = arrObjKeys(obj, inspect);\n        return '[Function' + (name ? ': ' + name : ' (anonymous)') + ']' + (keys.length > 0 ? ' { ' + $join.call(keys, ', ') + ' }' : '');\n    }\n    if (isSymbol(obj)) {\n        var symString = hasShammedSymbols ? $replace.call(String(obj), /^(Symbol\\(.*\\))_[^)]*$/, '$1') : symToString.call(obj);\n        return typeof obj === 'object' && !hasShammedSymbols ? markBoxed(symString) : symString;\n    }\n    if (isElement(obj)) {\n        var s = '<' + $toLowerCase.call(String(obj.nodeName));\n        var attrs = obj.attributes || [];\n        for (var i = 0; i < attrs.length; i++) {\n            s += ' ' + attrs[i].name + '=' + wrapQuotes(quote(attrs[i].value), 'double', opts);\n        }\n        s += '>';\n        if (obj.childNodes && obj.childNodes.length) { s += '...'; }\n        s += '</' + $toLowerCase.call(String(obj.nodeName)) + '>';\n        return s;\n    }\n    if (isArray(obj)) {\n        if (obj.length === 0) { return '[]'; }\n        var xs = arrObjKeys(obj, inspect);\n        if (indent && !singleLineValues(xs)) {\n            return '[' + indentedJoin(xs, indent) + ']';\n        }\n        return '[ ' + $join.call(xs, ', ') + ' ]';\n    }\n    if (isError(obj)) {\n        var parts = arrObjKeys(obj, inspect);\n        if (!('cause' in Error.prototype) && 'cause' in obj && !isEnumerable.call(obj, 'cause')) {\n            return '{ [' + String(obj) + '] ' + $join.call($concat.call('[cause]: ' + inspect(obj.cause), parts), ', ') + ' }';\n        }\n        if (parts.length === 0) { return '[' + String(obj) + ']'; }\n        return '{ [' + String(obj) + '] ' + $join.call(parts, ', ') + ' }';\n    }\n    if (typeof obj === 'object' && customInspect) {\n        if (inspectSymbol && typeof obj[inspectSymbol] === 'function' && utilInspect) {\n            return utilInspect(obj, { depth: maxDepth - depth });\n        } else if (customInspect !== 'symbol' && typeof obj.inspect === 'function') {\n            return obj.inspect();\n        }\n    }\n    if (isMap(obj)) {\n        var mapParts = [];\n        mapForEach.call(obj, function (value, key) {\n            mapParts.push(inspect(key, obj, true) + ' => ' + inspect(value, obj));\n        });\n        return collectionOf('Map', mapSize.call(obj), mapParts, indent);\n    }\n    if (isSet(obj)) {\n        var setParts = [];\n        setForEach.call(obj, function (value) {\n            setParts.push(inspect(value, obj));\n        });\n        return collectionOf('Set', setSize.call(obj), setParts, indent);\n    }\n    if (isWeakMap(obj)) {\n        return weakCollectionOf('WeakMap');\n    }\n    if (isWeakSet(obj)) {\n        return weakCollectionOf('WeakSet');\n    }\n    if (isWeakRef(obj)) {\n        return weakCollectionOf('WeakRef');\n    }\n    if (isNumber(obj)) {\n        return markBoxed(inspect(Number(obj)));\n    }\n    if (isBigInt(obj)) {\n        return markBoxed(inspect(bigIntValueOf.call(obj)));\n    }\n    if (isBoolean(obj)) {\n        return markBoxed(booleanValueOf.call(obj));\n    }\n    if (isString(obj)) {\n        return markBoxed(inspect(String(obj)));\n    }\n    if (!isDate(obj) && !isRegExp(obj)) {\n        var ys = arrObjKeys(obj, inspect);\n        var isPlainObject = gPO ? gPO(obj) === Object.prototype : obj instanceof Object || obj.constructor === Object;\n        var protoTag = obj instanceof Object ? '' : 'null prototype';\n        var stringTag = !isPlainObject && toStringTag && Object(obj) === obj && toStringTag in obj ? $slice.call(toStr(obj), 8, -1) : protoTag ? 'Object' : '';\n        var constructorTag = isPlainObject || typeof obj.constructor !== 'function' ? '' : obj.constructor.name ? obj.constructor.name + ' ' : '';\n        var tag = constructorTag + (stringTag || protoTag ? '[' + $join.call($concat.call([], stringTag || [], protoTag || []), ': ') + '] ' : '');\n        if (ys.length === 0) { return tag + '{}'; }\n        if (indent) {\n            return tag + '{' + indentedJoin(ys, indent) + '}';\n        }\n        return tag + '{ ' + $join.call(ys, ', ') + ' }';\n    }\n    return String(obj);\n};\n\nfunction wrapQuotes(s, defaultStyle, opts) {\n    var quoteChar = (opts.quoteStyle || defaultStyle) === 'double' ? '\"' : \"'\";\n    return quoteChar + s + quoteChar;\n}\n\nfunction quote(s) {\n    return $replace.call(String(s), /\"/g, '&quot;');\n}\n\nfunction isArray(obj) { return toStr(obj) === '[object Array]' && (!toStringTag || !(typeof obj === 'object' && toStringTag in obj)); }\nfunction isDate(obj) { return toStr(obj) === '[object Date]' && (!toStringTag || !(typeof obj === 'object' && toStringTag in obj)); }\nfunction isRegExp(obj) { return toStr(obj) === '[object RegExp]' && (!toStringTag || !(typeof obj === 'object' && toStringTag in obj)); }\nfunction isError(obj) { return toStr(obj) === '[object Error]' && (!toStringTag || !(typeof obj === 'object' && toStringTag in obj)); }\nfunction isString(obj) { return toStr(obj) === '[object String]' && (!toStringTag || !(typeof obj === 'object' && toStringTag in obj)); }\nfunction isNumber(obj) { return toStr(obj) === '[object Number]' && (!toStringTag || !(typeof obj === 'object' && toStringTag in obj)); }\nfunction isBoolean(obj) { return toStr(obj) === '[object Boolean]' && (!toStringTag || !(typeof obj === 'object' && toStringTag in obj)); }\n\n// Symbol and BigInt do have Symbol.toStringTag by spec, so that can't be used to eliminate false positives\nfunction isSymbol(obj) {\n    if (hasShammedSymbols) {\n        return obj && typeof obj === 'object' && obj instanceof Symbol;\n    }\n    if (typeof obj === 'symbol') {\n        return true;\n    }\n    if (!obj || typeof obj !== 'object' || !symToString) {\n        return false;\n    }\n    try {\n        symToString.call(obj);\n        return true;\n    } catch (e) {}\n    return false;\n}\n\nfunction isBigInt(obj) {\n    if (!obj || typeof obj !== 'object' || !bigIntValueOf) {\n        return false;\n    }\n    try {\n        bigIntValueOf.call(obj);\n        return true;\n    } catch (e) {}\n    return false;\n}\n\nvar hasOwn = Object.prototype.hasOwnProperty || function (key) { return key in this; };\nfunction has(obj, key) {\n    return hasOwn.call(obj, key);\n}\n\nfunction toStr(obj) {\n    return objectToString.call(obj);\n}\n\nfunction nameOf(f) {\n    if (f.name) { return f.name; }\n    var m = $match.call(functionToString.call(f), /^function\\s*([\\w$]+)/);\n    if (m) { return m[1]; }\n    return null;\n}\n\nfunction indexOf(xs, x) {\n    if (xs.indexOf) { return xs.indexOf(x); }\n    for (var i = 0, l = xs.length; i < l; i++) {\n        if (xs[i] === x) { return i; }\n    }\n    return -1;\n}\n\nfunction isMap(x) {\n    if (!mapSize || !x || typeof x !== 'object') {\n        return false;\n    }\n    try {\n        mapSize.call(x);\n        try {\n            setSize.call(x);\n        } catch (s) {\n            return true;\n        }\n        return x instanceof Map; // core-js workaround, pre-v2.5.0\n    } catch (e) {}\n    return false;\n}\n\nfunction isWeakMap(x) {\n    if (!weakMapHas || !x || typeof x !== 'object') {\n        return false;\n    }\n    try {\n        weakMapHas.call(x, weakMapHas);\n        try {\n            weakSetHas.call(x, weakSetHas);\n        } catch (s) {\n            return true;\n        }\n        return x instanceof WeakMap; // core-js workaround, pre-v2.5.0\n    } catch (e) {}\n    return false;\n}\n\nfunction isWeakRef(x) {\n    if (!weakRefDeref || !x || typeof x !== 'object') {\n        return false;\n    }\n    try {\n        weakRefDeref.call(x);\n        return true;\n    } catch (e) {}\n    return false;\n}\n\nfunction isSet(x) {\n    if (!setSize || !x || typeof x !== 'object') {\n        return false;\n    }\n    try {\n        setSize.call(x);\n        try {\n            mapSize.call(x);\n        } catch (m) {\n            return true;\n        }\n        return x instanceof Set; // core-js workaround, pre-v2.5.0\n    } catch (e) {}\n    return false;\n}\n\nfunction isWeakSet(x) {\n    if (!weakSetHas || !x || typeof x !== 'object') {\n        return false;\n    }\n    try {\n        weakSetHas.call(x, weakSetHas);\n        try {\n            weakMapHas.call(x, weakMapHas);\n        } catch (s) {\n            return true;\n        }\n        return x instanceof WeakSet; // core-js workaround, pre-v2.5.0\n    } catch (e) {}\n    return false;\n}\n\nfunction isElement(x) {\n    if (!x || typeof x !== 'object') { return false; }\n    if (typeof HTMLElement !== 'undefined' && x instanceof HTMLElement) {\n        return true;\n    }\n    return typeof x.nodeName === 'string' && typeof x.getAttribute === 'function';\n}\n\nfunction inspectString(str, opts) {\n    if (str.length > opts.maxStringLength) {\n        var remaining = str.length - opts.maxStringLength;\n        var trailer = '... ' + remaining + ' more character' + (remaining > 1 ? 's' : '');\n        return inspectString($slice.call(str, 0, opts.maxStringLength), opts) + trailer;\n    }\n    // eslint-disable-next-line no-control-regex\n    var s = $replace.call($replace.call(str, /(['\\\\])/g, '\\\\$1'), /[\\x00-\\x1f]/g, lowbyte);\n    return wrapQuotes(s, 'single', opts);\n}\n\nfunction lowbyte(c) {\n    var n = c.charCodeAt(0);\n    var x = {\n        8: 'b',\n        9: 't',\n        10: 'n',\n        12: 'f',\n        13: 'r'\n    }[n];\n    if (x) { return '\\\\' + x; }\n    return '\\\\x' + (n < 0x10 ? '0' : '') + $toUpperCase.call(n.toString(16));\n}\n\nfunction markBoxed(str) {\n    return 'Object(' + str + ')';\n}\n\nfunction weakCollectionOf(type) {\n    return type + ' { ? }';\n}\n\nfunction collectionOf(type, size, entries, indent) {\n    var joinedEntries = indent ? indentedJoin(entries, indent) : $join.call(entries, ', ');\n    return type + ' (' + size + ') {' + joinedEntries + '}';\n}\n\nfunction singleLineValues(xs) {\n    for (var i = 0; i < xs.length; i++) {\n        if (indexOf(xs[i], '\\n') >= 0) {\n            return false;\n        }\n    }\n    return true;\n}\n\nfunction getIndent(opts, depth) {\n    var baseIndent;\n    if (opts.indent === '\\t') {\n        baseIndent = '\\t';\n    } else if (typeof opts.indent === 'number' && opts.indent > 0) {\n        baseIndent = $join.call(Array(opts.indent + 1), ' ');\n    } else {\n        return null;\n    }\n    return {\n        base: baseIndent,\n        prev: $join.call(Array(depth + 1), baseIndent)\n    };\n}\n\nfunction indentedJoin(xs, indent) {\n    if (xs.length === 0) { return ''; }\n    var lineJoiner = '\\n' + indent.prev + indent.base;\n    return lineJoiner + $join.call(xs, ',' + lineJoiner) + '\\n' + indent.prev;\n}\n\nfunction arrObjKeys(obj, inspect) {\n    var isArr = isArray(obj);\n    var xs = [];\n    if (isArr) {\n        xs.length = obj.length;\n        for (var i = 0; i < obj.length; i++) {\n            xs[i] = has(obj, i) ? inspect(obj[i], obj) : '';\n        }\n    }\n    var syms = typeof gOPS === 'function' ? gOPS(obj) : [];\n    var symMap;\n    if (hasShammedSymbols) {\n        symMap = {};\n        for (var k = 0; k < syms.length; k++) {\n            symMap['$' + syms[k]] = syms[k];\n        }\n    }\n\n    for (var key in obj) { // eslint-disable-line no-restricted-syntax\n        if (!has(obj, key)) { continue; } // eslint-disable-line no-restricted-syntax, no-continue\n        if (isArr && String(Number(key)) === key && key < obj.length) { continue; } // eslint-disable-line no-restricted-syntax, no-continue\n        if (hasShammedSymbols && symMap['$' + key] instanceof Symbol) {\n            // this is to prevent shammed Symbols, which are stored as strings, from being included in the string key section\n            continue; // eslint-disable-line no-restricted-syntax, no-continue\n        } else if ($test.call(/[^\\w$]/, key)) {\n            xs.push(inspect(key, obj) + ': ' + inspect(obj[key], obj));\n        } else {\n            xs.push(key + ': ' + inspect(obj[key], obj));\n        }\n    }\n    if (typeof gOPS === 'function') {\n        for (var j = 0; j < syms.length; j++) {\n            if (isEnumerable.call(obj, syms[j])) {\n                xs.push('[' + inspect(syms[j]) + ']: ' + inspect(obj[syms[j]], obj));\n            }\n        }\n    }\n    return xs;\n}\n","module.exports = require('util').inspect;\n","/*!\n * on-finished\n * Copyright(c) 2013 Jonathan Ong\n * Copyright(c) 2014 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = onFinished\nmodule.exports.isFinished = isFinished\n\n/**\n * Module dependencies.\n * @private\n */\n\nvar asyncHooks = tryRequireAsyncHooks()\nvar first = require('ee-first')\n\n/**\n * Variables.\n * @private\n */\n\n/* istanbul ignore next */\nvar defer = typeof setImmediate === 'function'\n  ? setImmediate\n  : function (fn) { process.nextTick(fn.bind.apply(fn, arguments)) }\n\n/**\n * Invoke callback when the response has finished, useful for\n * cleaning up resources afterwards.\n *\n * @param {object} msg\n * @param {function} listener\n * @return {object}\n * @public\n */\n\nfunction onFinished (msg, listener) {\n  if (isFinished(msg) !== false) {\n    defer(listener, null, msg)\n    return msg\n  }\n\n  // attach the listener to the message\n  attachListener(msg, wrap(listener))\n\n  return msg\n}\n\n/**\n * Determine if message is already finished.\n *\n * @param {object} msg\n * @return {boolean}\n * @public\n */\n\nfunction isFinished (msg) {\n  var socket = msg.socket\n\n  if (typeof msg.finished === 'boolean') {\n    // OutgoingMessage\n    return Boolean(msg.finished || (socket && !socket.writable))\n  }\n\n  if (typeof msg.complete === 'boolean') {\n    // IncomingMessage\n    return Boolean(msg.upgrade || !socket || !socket.readable || (msg.complete && !msg.readable))\n  }\n\n  // don't know\n  return undefined\n}\n\n/**\n * Attach a finished listener to the message.\n *\n * @param {object} msg\n * @param {function} callback\n * @private\n */\n\nfunction attachFinishedListener (msg, callback) {\n  var eeMsg\n  var eeSocket\n  var finished = false\n\n  function onFinish (error) {\n    eeMsg.cancel()\n    eeSocket.cancel()\n\n    finished = true\n    callback(error)\n  }\n\n  // finished on first message event\n  eeMsg = eeSocket = first([[msg, 'end', 'finish']], onFinish)\n\n  function onSocket (socket) {\n    // remove listener\n    msg.removeListener('socket', onSocket)\n\n    if (finished) return\n    if (eeMsg !== eeSocket) return\n\n    // finished on first socket event\n    eeSocket = first([[socket, 'error', 'close']], onFinish)\n  }\n\n  if (msg.socket) {\n    // socket already assigned\n    onSocket(msg.socket)\n    return\n  }\n\n  // wait for socket to be assigned\n  msg.on('socket', onSocket)\n\n  if (msg.socket === undefined) {\n    // istanbul ignore next: node.js 0.8 patch\n    patchAssignSocket(msg, onSocket)\n  }\n}\n\n/**\n * Attach the listener to the message.\n *\n * @param {object} msg\n * @return {function}\n * @private\n */\n\nfunction attachListener (msg, listener) {\n  var attached = msg.__onFinished\n\n  // create a private single listener with queue\n  if (!attached || !attached.queue) {\n    attached = msg.__onFinished = createListener(msg)\n    attachFinishedListener(msg, attached)\n  }\n\n  attached.queue.push(listener)\n}\n\n/**\n * Create listener on message.\n *\n * @param {object} msg\n * @return {function}\n * @private\n */\n\nfunction createListener (msg) {\n  function listener (err) {\n    if (msg.__onFinished === listener) msg.__onFinished = null\n    if (!listener.queue) return\n\n    var queue = listener.queue\n    listener.queue = null\n\n    for (var i = 0; i < queue.length; i++) {\n      queue[i](err, msg)\n    }\n  }\n\n  listener.queue = []\n\n  return listener\n}\n\n/**\n * Patch ServerResponse.prototype.assignSocket for node.js 0.8.\n *\n * @param {ServerResponse} res\n * @param {function} callback\n * @private\n */\n\n// istanbul ignore next: node.js 0.8 patch\nfunction patchAssignSocket (res, callback) {\n  var assignSocket = res.assignSocket\n\n  if (typeof assignSocket !== 'function') return\n\n  // res.on('socket', callback) is broken in 0.8\n  res.assignSocket = function _assignSocket (socket) {\n    assignSocket.call(this, socket)\n    callback(socket)\n  }\n}\n\n/**\n * Try to require async_hooks\n * @private\n */\n\nfunction tryRequireAsyncHooks () {\n  try {\n    return require('async_hooks')\n  } catch (e) {\n    return {}\n  }\n}\n\n/**\n * Wrap function with async resource, if possible.\n * AsyncResource.bind static method backported.\n * @private\n */\n\nfunction wrap (fn) {\n  var res\n\n  // create anonymous resource\n  if (asyncHooks.AsyncResource) {\n    res = new asyncHooks.AsyncResource(fn.name || 'bound-anonymous-fn')\n  }\n\n  // incompatible node.js\n  if (!res || !res.runInAsyncScope) {\n    return fn\n  }\n\n  // return bound function\n  return res.runInAsyncScope.bind(res, fn, null)\n}\n","/*!\n * parseurl\n * Copyright(c) 2014 Jonathan Ong\n * Copyright(c) 2014-2017 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * Module dependencies.\n * @private\n */\n\nvar url = require('url')\nvar parse = url.parse\nvar Url = url.Url\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = parseurl\nmodule.exports.original = originalurl\n\n/**\n * Parse the `req` url with memoization.\n *\n * @param {ServerRequest} req\n * @return {Object}\n * @public\n */\n\nfunction parseurl (req) {\n  var url = req.url\n\n  if (url === undefined) {\n    // URL is undefined\n    return undefined\n  }\n\n  var parsed = req._parsedUrl\n\n  if (fresh(url, parsed)) {\n    // Return cached URL parse\n    return parsed\n  }\n\n  // Parse the URL\n  parsed = fastparse(url)\n  parsed._raw = url\n\n  return (req._parsedUrl = parsed)\n};\n\n/**\n * Parse the `req` original url with fallback and memoization.\n *\n * @param {ServerRequest} req\n * @return {Object}\n * @public\n */\n\nfunction originalurl (req) {\n  var url = req.originalUrl\n\n  if (typeof url !== 'string') {\n    // Fallback\n    return parseurl(req)\n  }\n\n  var parsed = req._parsedOriginalUrl\n\n  if (fresh(url, parsed)) {\n    // Return cached URL parse\n    return parsed\n  }\n\n  // Parse the URL\n  parsed = fastparse(url)\n  parsed._raw = url\n\n  return (req._parsedOriginalUrl = parsed)\n};\n\n/**\n * Parse the `str` url with fast-path short-cut.\n *\n * @param {string} str\n * @return {Object}\n * @private\n */\n\nfunction fastparse (str) {\n  if (typeof str !== 'string' || str.charCodeAt(0) !== 0x2f /* / */) {\n    return parse(str)\n  }\n\n  var pathname = str\n  var query = null\n  var search = null\n\n  // This takes the regexp from https://github.com/joyent/node/pull/7878\n  // Which is /^(\\/[^?#\\s]*)(\\?[^#\\s]*)?$/\n  // And unrolls it into a for loop\n  for (var i = 1; i < str.length; i++) {\n    switch (str.charCodeAt(i)) {\n      case 0x3f: /* ?  */\n        if (search === null) {\n          pathname = str.substring(0, i)\n          query = str.substring(i + 1)\n          search = str.substring(i)\n        }\n        break\n      case 0x09: /* \\t */\n      case 0x0a: /* \\n */\n      case 0x0c: /* \\f */\n      case 0x0d: /* \\r */\n      case 0x20: /*    */\n      case 0x23: /* #  */\n      case 0xa0:\n      case 0xfeff:\n        return parse(str)\n    }\n  }\n\n  var url = Url !== undefined\n    ? new Url()\n    : {}\n\n  url.path = str\n  url.href = str\n  url.pathname = pathname\n\n  if (search !== null) {\n    url.query = query\n    url.search = search\n  }\n\n  return url\n}\n\n/**\n * Determine if parsed is still fresh for url.\n *\n * @param {string} url\n * @param {object} parsedUrl\n * @return {boolean}\n * @private\n */\n\nfunction fresh (url, parsedUrl) {\n  return typeof parsedUrl === 'object' &&\n    parsedUrl !== null &&\n    (Url === undefined || parsedUrl instanceof Url) &&\n    parsedUrl._raw === url\n}\n","/**\n * Expose `pathtoRegexp`.\n */\n\nmodule.exports = pathtoRegexp;\n\n/**\n * Match matching groups in a regular expression.\n */\nvar MATCHING_GROUP_REGEXP = /\\((?!\\?)/g;\n\n/**\n * Normalize the given path string,\n * returning a regular expression.\n *\n * An empty array should be passed,\n * which will contain the placeholder\n * key names. For example \"/user/:id\" will\n * then contain [\"id\"].\n *\n * @param  {String|RegExp|Array} path\n * @param  {Array} keys\n * @param  {Object} options\n * @return {RegExp}\n * @api private\n */\n\nfunction pathtoRegexp(path, keys, options) {\n  options = options || {};\n  keys = keys || [];\n  var strict = options.strict;\n  var end = options.end !== false;\n  var flags = options.sensitive ? '' : 'i';\n  var extraOffset = 0;\n  var keysOffset = keys.length;\n  var i = 0;\n  var name = 0;\n  var m;\n\n  if (path instanceof RegExp) {\n    while (m = MATCHING_GROUP_REGEXP.exec(path.source)) {\n      keys.push({\n        name: name++,\n        optional: false,\n        offset: m.index\n      });\n    }\n\n    return path;\n  }\n\n  if (Array.isArray(path)) {\n    // Map array parts into regexps and return their source. We also pass\n    // the same keys and options instance into every generation to get\n    // consistent matching groups before we join the sources together.\n    path = path.map(function (value) {\n      return pathtoRegexp(value, keys, options).source;\n    });\n\n    return new RegExp('(?:' + path.join('|') + ')', flags);\n  }\n\n  path = ('^' + path + (strict ? '' : path[path.length - 1] === '/' ? '?' : '/?'))\n    .replace(/\\/\\(/g, '/(?:')\n    .replace(/([\\/\\.])/g, '\\\\$1')\n    .replace(/(\\\\\\/)?(\\\\\\.)?:(\\w+)(\\(.*?\\))?(\\*)?(\\?)?/g, function (match, slash, format, key, capture, star, optional, offset) {\n      slash = slash || '';\n      format = format || '';\n      capture = capture || '([^\\\\/' + format + ']+?)';\n      optional = optional || '';\n\n      keys.push({\n        name: key,\n        optional: !!optional,\n        offset: offset + extraOffset\n      });\n\n      var result = ''\n        + (optional ? '' : slash)\n        + '(?:'\n        + format + (optional ? slash : '') + capture\n        + (star ? '((?:[\\\\/' + format + '].+?)?)' : '')\n        + ')'\n        + optional;\n\n      extraOffset += result.length - match.length;\n\n      return result;\n    })\n    .replace(/\\*/g, function (star, index) {\n      var len = keys.length\n\n      while (len-- > keysOffset && keys[len].offset > index) {\n        keys[len].offset += 3; // Replacement length minus asterisk length.\n      }\n\n      return '(.*)';\n    });\n\n  // This is a workaround for handling unnamed matching groups.\n  while (m = MATCHING_GROUP_REGEXP.exec(path)) {\n    var escapeCount = 0;\n    var index = m.index;\n\n    while (path.charAt(--index) === '\\\\') {\n      escapeCount++;\n    }\n\n    // It's possible to escape the bracket.\n    if (escapeCount % 2 === 1) {\n      continue;\n    }\n\n    if (keysOffset + i === keys.length || keys[keysOffset + i].offset > m.index) {\n      keys.splice(keysOffset + i, 0, {\n        name: name++, // Unnamed matching groups must be consistently linear.\n        optional: false,\n        offset: m.index\n      });\n    }\n\n    i++;\n  }\n\n  // If the path is non-ending, match until the end or a slash.\n  path += (end ? '$' : (path[path.length - 1] === '/' ? '' : '(?=\\\\/|$)'));\n\n  return new RegExp(path, flags);\n};\n","/*!\n * proxy-addr\n * Copyright(c) 2014-2016 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = proxyaddr\nmodule.exports.all = alladdrs\nmodule.exports.compile = compile\n\n/**\n * Module dependencies.\n * @private\n */\n\nvar forwarded = require('forwarded')\nvar ipaddr = require('ipaddr.js')\n\n/**\n * Variables.\n * @private\n */\n\nvar DIGIT_REGEXP = /^[0-9]+$/\nvar isip = ipaddr.isValid\nvar parseip = ipaddr.parse\n\n/**\n * Pre-defined IP ranges.\n * @private\n */\n\nvar IP_RANGES = {\n  linklocal: ['169.254.0.0/16', 'fe80::/10'],\n  loopback: ['127.0.0.1/8', '::1/128'],\n  uniquelocal: ['10.0.0.0/8', '172.16.0.0/12', '192.168.0.0/16', 'fc00::/7']\n}\n\n/**\n * Get all addresses in the request, optionally stopping\n * at the first untrusted.\n *\n * @param {Object} request\n * @param {Function|Array|String} [trust]\n * @public\n */\n\nfunction alladdrs (req, trust) {\n  // get addresses\n  var addrs = forwarded(req)\n\n  if (!trust) {\n    // Return all addresses\n    return addrs\n  }\n\n  if (typeof trust !== 'function') {\n    trust = compile(trust)\n  }\n\n  for (var i = 0; i < addrs.length - 1; i++) {\n    if (trust(addrs[i], i)) continue\n\n    addrs.length = i + 1\n  }\n\n  return addrs\n}\n\n/**\n * Compile argument into trust function.\n *\n * @param {Array|String} val\n * @private\n */\n\nfunction compile (val) {\n  if (!val) {\n    throw new TypeError('argument is required')\n  }\n\n  var trust\n\n  if (typeof val === 'string') {\n    trust = [val]\n  } else if (Array.isArray(val)) {\n    trust = val.slice()\n  } else {\n    throw new TypeError('unsupported trust argument')\n  }\n\n  for (var i = 0; i < trust.length; i++) {\n    val = trust[i]\n\n    if (!Object.prototype.hasOwnProperty.call(IP_RANGES, val)) {\n      continue\n    }\n\n    // Splice in pre-defined range\n    val = IP_RANGES[val]\n    trust.splice.apply(trust, [i, 1].concat(val))\n    i += val.length - 1\n  }\n\n  return compileTrust(compileRangeSubnets(trust))\n}\n\n/**\n * Compile `arr` elements into range subnets.\n *\n * @param {Array} arr\n * @private\n */\n\nfunction compileRangeSubnets (arr) {\n  var rangeSubnets = new Array(arr.length)\n\n  for (var i = 0; i < arr.length; i++) {\n    rangeSubnets[i] = parseipNotation(arr[i])\n  }\n\n  return rangeSubnets\n}\n\n/**\n * Compile range subnet array into trust function.\n *\n * @param {Array} rangeSubnets\n * @private\n */\n\nfunction compileTrust (rangeSubnets) {\n  // Return optimized function based on length\n  var len = rangeSubnets.length\n  return len === 0\n    ? trustNone\n    : len === 1\n      ? trustSingle(rangeSubnets[0])\n      : trustMulti(rangeSubnets)\n}\n\n/**\n * Parse IP notation string into range subnet.\n *\n * @param {String} note\n * @private\n */\n\nfunction parseipNotation (note) {\n  var pos = note.lastIndexOf('/')\n  var str = pos !== -1\n    ? note.substring(0, pos)\n    : note\n\n  if (!isip(str)) {\n    throw new TypeError('invalid IP address: ' + str)\n  }\n\n  var ip = parseip(str)\n\n  if (pos === -1 && ip.kind() === 'ipv6' && ip.isIPv4MappedAddress()) {\n    // Store as IPv4\n    ip = ip.toIPv4Address()\n  }\n\n  var max = ip.kind() === 'ipv6'\n    ? 128\n    : 32\n\n  var range = pos !== -1\n    ? note.substring(pos + 1, note.length)\n    : null\n\n  if (range === null) {\n    range = max\n  } else if (DIGIT_REGEXP.test(range)) {\n    range = parseInt(range, 10)\n  } else if (ip.kind() === 'ipv4' && isip(range)) {\n    range = parseNetmask(range)\n  } else {\n    range = null\n  }\n\n  if (range <= 0 || range > max) {\n    throw new TypeError('invalid range on address: ' + note)\n  }\n\n  return [ip, range]\n}\n\n/**\n * Parse netmask string into CIDR range.\n *\n * @param {String} netmask\n * @private\n */\n\nfunction parseNetmask (netmask) {\n  var ip = parseip(netmask)\n  var kind = ip.kind()\n\n  return kind === 'ipv4'\n    ? ip.prefixLengthFromSubnetMask()\n    : null\n}\n\n/**\n * Determine address of proxied request.\n *\n * @param {Object} request\n * @param {Function|Array|String} trust\n * @public\n */\n\nfunction proxyaddr (req, trust) {\n  if (!req) {\n    throw new TypeError('req argument is required')\n  }\n\n  if (!trust) {\n    throw new TypeError('trust argument is required')\n  }\n\n  var addrs = alladdrs(req, trust)\n  var addr = addrs[addrs.length - 1]\n\n  return addr\n}\n\n/**\n * Static trust function to trust nothing.\n *\n * @private\n */\n\nfunction trustNone () {\n  return false\n}\n\n/**\n * Compile trust function for multiple subnets.\n *\n * @param {Array} subnets\n * @private\n */\n\nfunction trustMulti (subnets) {\n  return function trust (addr) {\n    if (!isip(addr)) return false\n\n    var ip = parseip(addr)\n    var ipconv\n    var kind = ip.kind()\n\n    for (var i = 0; i < subnets.length; i++) {\n      var subnet = subnets[i]\n      var subnetip = subnet[0]\n      var subnetkind = subnetip.kind()\n      var subnetrange = subnet[1]\n      var trusted = ip\n\n      if (kind !== subnetkind) {\n        if (subnetkind === 'ipv4' && !ip.isIPv4MappedAddress()) {\n          // Incompatible IP addresses\n          continue\n        }\n\n        if (!ipconv) {\n          // Convert IP to match subnet IP kind\n          ipconv = subnetkind === 'ipv4'\n            ? ip.toIPv4Address()\n            : ip.toIPv4MappedAddress()\n        }\n\n        trusted = ipconv\n      }\n\n      if (trusted.match(subnetip, subnetrange)) {\n        return true\n      }\n    }\n\n    return false\n  }\n}\n\n/**\n * Compile trust function for single subnet.\n *\n * @param {Object} subnet\n * @private\n */\n\nfunction trustSingle (subnet) {\n  var subnetip = subnet[0]\n  var subnetkind = subnetip.kind()\n  var subnetisipv4 = subnetkind === 'ipv4'\n  var subnetrange = subnet[1]\n\n  return function trust (addr) {\n    if (!isip(addr)) return false\n\n    var ip = parseip(addr)\n    var kind = ip.kind()\n\n    if (kind !== subnetkind) {\n      if (subnetisipv4 && !ip.isIPv4MappedAddress()) {\n        // Incompatible IP addresses\n        return false\n      }\n\n      // Convert IP to match subnet IP kind\n      ip = subnetisipv4\n        ? ip.toIPv4Address()\n        : ip.toIPv4MappedAddress()\n    }\n\n    return ip.match(subnetip, subnetrange)\n  }\n}\n","'use strict';\n\nvar replace = String.prototype.replace;\nvar percentTwenties = /%20/g;\n\nvar Format = {\n    RFC1738: 'RFC1738',\n    RFC3986: 'RFC3986'\n};\n\nmodule.exports = {\n    'default': Format.RFC3986,\n    formatters: {\n        RFC1738: function (value) {\n            return replace.call(value, percentTwenties, '+');\n        },\n        RFC3986: function (value) {\n            return String(value);\n        }\n    },\n    RFC1738: Format.RFC1738,\n    RFC3986: Format.RFC3986\n};\n","'use strict';\n\nvar stringify = require('./stringify');\nvar parse = require('./parse');\nvar formats = require('./formats');\n\nmodule.exports = {\n    formats: formats,\n    parse: parse,\n    stringify: stringify\n};\n","'use strict';\n\nvar utils = require('./utils');\n\nvar has = Object.prototype.hasOwnProperty;\nvar isArray = Array.isArray;\n\nvar defaults = {\n    allowDots: false,\n    allowPrototypes: false,\n    allowSparse: false,\n    arrayLimit: 20,\n    charset: 'utf-8',\n    charsetSentinel: false,\n    comma: false,\n    decoder: utils.decode,\n    delimiter: '&',\n    depth: 5,\n    ignoreQueryPrefix: false,\n    interpretNumericEntities: false,\n    parameterLimit: 1000,\n    parseArrays: true,\n    plainObjects: false,\n    strictNullHandling: false\n};\n\nvar interpretNumericEntities = function (str) {\n    return str.replace(/&#(\\d+);/g, function ($0, numberStr) {\n        return String.fromCharCode(parseInt(numberStr, 10));\n    });\n};\n\nvar parseArrayValue = function (val, options) {\n    if (val && typeof val === 'string' && options.comma && val.indexOf(',') > -1) {\n        return val.split(',');\n    }\n\n    return val;\n};\n\n// This is what browsers will submit when the ✓ character occurs in an\n// application/x-www-form-urlencoded body and the encoding of the page containing\n// the form is iso-8859-1, or when the submitted form has an accept-charset\n// attribute of iso-8859-1. Presumably also with other charsets that do not contain\n// the ✓ character, such as us-ascii.\nvar isoSentinel = 'utf8=%26%2310003%3B'; // encodeURIComponent('&#10003;')\n\n// These are the percent-encoded utf-8 octets representing a checkmark, indicating that the request actually is utf-8 encoded.\nvar charsetSentinel = 'utf8=%E2%9C%93'; // encodeURIComponent('✓')\n\nvar parseValues = function parseQueryStringValues(str, options) {\n    var obj = {};\n    var cleanStr = options.ignoreQueryPrefix ? str.replace(/^\\?/, '') : str;\n    var limit = options.parameterLimit === Infinity ? undefined : options.parameterLimit;\n    var parts = cleanStr.split(options.delimiter, limit);\n    var skipIndex = -1; // Keep track of where the utf8 sentinel was found\n    var i;\n\n    var charset = options.charset;\n    if (options.charsetSentinel) {\n        for (i = 0; i < parts.length; ++i) {\n            if (parts[i].indexOf('utf8=') === 0) {\n                if (parts[i] === charsetSentinel) {\n                    charset = 'utf-8';\n                } else if (parts[i] === isoSentinel) {\n                    charset = 'iso-8859-1';\n                }\n                skipIndex = i;\n                i = parts.length; // The eslint settings do not allow break;\n            }\n        }\n    }\n\n    for (i = 0; i < parts.length; ++i) {\n        if (i === skipIndex) {\n            continue;\n        }\n        var part = parts[i];\n\n        var bracketEqualsPos = part.indexOf(']=');\n        var pos = bracketEqualsPos === -1 ? part.indexOf('=') : bracketEqualsPos + 1;\n\n        var key, val;\n        if (pos === -1) {\n            key = options.decoder(part, defaults.decoder, charset, 'key');\n            val = options.strictNullHandling ? null : '';\n        } else {\n            key = options.decoder(part.slice(0, pos), defaults.decoder, charset, 'key');\n            val = utils.maybeMap(\n                parseArrayValue(part.slice(pos + 1), options),\n                function (encodedVal) {\n                    return options.decoder(encodedVal, defaults.decoder, charset, 'value');\n                }\n            );\n        }\n\n        if (val && options.interpretNumericEntities && charset === 'iso-8859-1') {\n            val = interpretNumericEntities(val);\n        }\n\n        if (part.indexOf('[]=') > -1) {\n            val = isArray(val) ? [val] : val;\n        }\n\n        if (has.call(obj, key)) {\n            obj[key] = utils.combine(obj[key], val);\n        } else {\n            obj[key] = val;\n        }\n    }\n\n    return obj;\n};\n\nvar parseObject = function (chain, val, options, valuesParsed) {\n    var leaf = valuesParsed ? val : parseArrayValue(val, options);\n\n    for (var i = chain.length - 1; i >= 0; --i) {\n        var obj;\n        var root = chain[i];\n\n        if (root === '[]' && options.parseArrays) {\n            obj = [].concat(leaf);\n        } else {\n            obj = options.plainObjects ? Object.create(null) : {};\n            var cleanRoot = root.charAt(0) === '[' && root.charAt(root.length - 1) === ']' ? root.slice(1, -1) : root;\n            var index = parseInt(cleanRoot, 10);\n            if (!options.parseArrays && cleanRoot === '') {\n                obj = { 0: leaf };\n            } else if (\n                !isNaN(index)\n                && root !== cleanRoot\n                && String(index) === cleanRoot\n                && index >= 0\n                && (options.parseArrays && index <= options.arrayLimit)\n            ) {\n                obj = [];\n                obj[index] = leaf;\n            } else if (cleanRoot !== '__proto__') {\n                obj[cleanRoot] = leaf;\n            }\n        }\n\n        leaf = obj;\n    }\n\n    return leaf;\n};\n\nvar parseKeys = function parseQueryStringKeys(givenKey, val, options, valuesParsed) {\n    if (!givenKey) {\n        return;\n    }\n\n    // Transform dot notation to bracket notation\n    var key = options.allowDots ? givenKey.replace(/\\.([^.[]+)/g, '[$1]') : givenKey;\n\n    // The regex chunks\n\n    var brackets = /(\\[[^[\\]]*])/;\n    var child = /(\\[[^[\\]]*])/g;\n\n    // Get the parent\n\n    var segment = options.depth > 0 && brackets.exec(key);\n    var parent = segment ? key.slice(0, segment.index) : key;\n\n    // Stash the parent if it exists\n\n    var keys = [];\n    if (parent) {\n        // If we aren't using plain objects, optionally prefix keys that would overwrite object prototype properties\n        if (!options.plainObjects && has.call(Object.prototype, parent)) {\n            if (!options.allowPrototypes) {\n                return;\n            }\n        }\n\n        keys.push(parent);\n    }\n\n    // Loop through children appending to the array until we hit depth\n\n    var i = 0;\n    while (options.depth > 0 && (segment = child.exec(key)) !== null && i < options.depth) {\n        i += 1;\n        if (!options.plainObjects && has.call(Object.prototype, segment[1].slice(1, -1))) {\n            if (!options.allowPrototypes) {\n                return;\n            }\n        }\n        keys.push(segment[1]);\n    }\n\n    // If there's a remainder, just add whatever is left\n\n    if (segment) {\n        keys.push('[' + key.slice(segment.index) + ']');\n    }\n\n    return parseObject(keys, val, options, valuesParsed);\n};\n\nvar normalizeParseOptions = function normalizeParseOptions(opts) {\n    if (!opts) {\n        return defaults;\n    }\n\n    if (opts.decoder !== null && opts.decoder !== undefined && typeof opts.decoder !== 'function') {\n        throw new TypeError('Decoder has to be a function.');\n    }\n\n    if (typeof opts.charset !== 'undefined' && opts.charset !== 'utf-8' && opts.charset !== 'iso-8859-1') {\n        throw new TypeError('The charset option must be either utf-8, iso-8859-1, or undefined');\n    }\n    var charset = typeof opts.charset === 'undefined' ? defaults.charset : opts.charset;\n\n    return {\n        allowDots: typeof opts.allowDots === 'undefined' ? defaults.allowDots : !!opts.allowDots,\n        allowPrototypes: typeof opts.allowPrototypes === 'boolean' ? opts.allowPrototypes : defaults.allowPrototypes,\n        allowSparse: typeof opts.allowSparse === 'boolean' ? opts.allowSparse : defaults.allowSparse,\n        arrayLimit: typeof opts.arrayLimit === 'number' ? opts.arrayLimit : defaults.arrayLimit,\n        charset: charset,\n        charsetSentinel: typeof opts.charsetSentinel === 'boolean' ? opts.charsetSentinel : defaults.charsetSentinel,\n        comma: typeof opts.comma === 'boolean' ? opts.comma : defaults.comma,\n        decoder: typeof opts.decoder === 'function' ? opts.decoder : defaults.decoder,\n        delimiter: typeof opts.delimiter === 'string' || utils.isRegExp(opts.delimiter) ? opts.delimiter : defaults.delimiter,\n        // eslint-disable-next-line no-implicit-coercion, no-extra-parens\n        depth: (typeof opts.depth === 'number' || opts.depth === false) ? +opts.depth : defaults.depth,\n        ignoreQueryPrefix: opts.ignoreQueryPrefix === true,\n        interpretNumericEntities: typeof opts.interpretNumericEntities === 'boolean' ? opts.interpretNumericEntities : defaults.interpretNumericEntities,\n        parameterLimit: typeof opts.parameterLimit === 'number' ? opts.parameterLimit : defaults.parameterLimit,\n        parseArrays: opts.parseArrays !== false,\n        plainObjects: typeof opts.plainObjects === 'boolean' ? opts.plainObjects : defaults.plainObjects,\n        strictNullHandling: typeof opts.strictNullHandling === 'boolean' ? opts.strictNullHandling : defaults.strictNullHandling\n    };\n};\n\nmodule.exports = function (str, opts) {\n    var options = normalizeParseOptions(opts);\n\n    if (str === '' || str === null || typeof str === 'undefined') {\n        return options.plainObjects ? Object.create(null) : {};\n    }\n\n    var tempObj = typeof str === 'string' ? parseValues(str, options) : str;\n    var obj = options.plainObjects ? Object.create(null) : {};\n\n    // Iterate over the keys and setup the new object\n\n    var keys = Object.keys(tempObj);\n    for (var i = 0; i < keys.length; ++i) {\n        var key = keys[i];\n        var newObj = parseKeys(key, tempObj[key], options, typeof str === 'string');\n        obj = utils.merge(obj, newObj, options);\n    }\n\n    if (options.allowSparse === true) {\n        return obj;\n    }\n\n    return utils.compact(obj);\n};\n","'use strict';\n\nvar getSideChannel = require('side-channel');\nvar utils = require('./utils');\nvar formats = require('./formats');\nvar has = Object.prototype.hasOwnProperty;\n\nvar arrayPrefixGenerators = {\n    brackets: function brackets(prefix) {\n        return prefix + '[]';\n    },\n    comma: 'comma',\n    indices: function indices(prefix, key) {\n        return prefix + '[' + key + ']';\n    },\n    repeat: function repeat(prefix) {\n        return prefix;\n    }\n};\n\nvar isArray = Array.isArray;\nvar split = String.prototype.split;\nvar push = Array.prototype.push;\nvar pushToArray = function (arr, valueOrArray) {\n    push.apply(arr, isArray(valueOrArray) ? valueOrArray : [valueOrArray]);\n};\n\nvar toISO = Date.prototype.toISOString;\n\nvar defaultFormat = formats['default'];\nvar defaults = {\n    addQueryPrefix: false,\n    allowDots: false,\n    charset: 'utf-8',\n    charsetSentinel: false,\n    delimiter: '&',\n    encode: true,\n    encoder: utils.encode,\n    encodeValuesOnly: false,\n    format: defaultFormat,\n    formatter: formats.formatters[defaultFormat],\n    // deprecated\n    indices: false,\n    serializeDate: function serializeDate(date) {\n        return toISO.call(date);\n    },\n    skipNulls: false,\n    strictNullHandling: false\n};\n\nvar isNonNullishPrimitive = function isNonNullishPrimitive(v) {\n    return typeof v === 'string'\n        || typeof v === 'number'\n        || typeof v === 'boolean'\n        || typeof v === 'symbol'\n        || typeof v === 'bigint';\n};\n\nvar sentinel = {};\n\nvar stringify = function stringify(\n    object,\n    prefix,\n    generateArrayPrefix,\n    strictNullHandling,\n    skipNulls,\n    encoder,\n    filter,\n    sort,\n    allowDots,\n    serializeDate,\n    format,\n    formatter,\n    encodeValuesOnly,\n    charset,\n    sideChannel\n) {\n    var obj = object;\n\n    var tmpSc = sideChannel;\n    var step = 0;\n    var findFlag = false;\n    while ((tmpSc = tmpSc.get(sentinel)) !== void undefined && !findFlag) {\n        // Where object last appeared in the ref tree\n        var pos = tmpSc.get(object);\n        step += 1;\n        if (typeof pos !== 'undefined') {\n            if (pos === step) {\n                throw new RangeError('Cyclic object value');\n            } else {\n                findFlag = true; // Break while\n            }\n        }\n        if (typeof tmpSc.get(sentinel) === 'undefined') {\n            step = 0;\n        }\n    }\n\n    if (typeof filter === 'function') {\n        obj = filter(prefix, obj);\n    } else if (obj instanceof Date) {\n        obj = serializeDate(obj);\n    } else if (generateArrayPrefix === 'comma' && isArray(obj)) {\n        obj = utils.maybeMap(obj, function (value) {\n            if (value instanceof Date) {\n                return serializeDate(value);\n            }\n            return value;\n        });\n    }\n\n    if (obj === null) {\n        if (strictNullHandling) {\n            return encoder && !encodeValuesOnly ? encoder(prefix, defaults.encoder, charset, 'key', format) : prefix;\n        }\n\n        obj = '';\n    }\n\n    if (isNonNullishPrimitive(obj) || utils.isBuffer(obj)) {\n        if (encoder) {\n            var keyValue = encodeValuesOnly ? prefix : encoder(prefix, defaults.encoder, charset, 'key', format);\n            if (generateArrayPrefix === 'comma' && encodeValuesOnly) {\n                var valuesArray = split.call(String(obj), ',');\n                var valuesJoined = '';\n                for (var i = 0; i < valuesArray.length; ++i) {\n                    valuesJoined += (i === 0 ? '' : ',') + formatter(encoder(valuesArray[i], defaults.encoder, charset, 'value', format));\n                }\n                return [formatter(keyValue) + '=' + valuesJoined];\n            }\n            return [formatter(keyValue) + '=' + formatter(encoder(obj, defaults.encoder, charset, 'value', format))];\n        }\n        return [formatter(prefix) + '=' + formatter(String(obj))];\n    }\n\n    var values = [];\n\n    if (typeof obj === 'undefined') {\n        return values;\n    }\n\n    var objKeys;\n    if (generateArrayPrefix === 'comma' && isArray(obj)) {\n        // we need to join elements in\n        objKeys = [{ value: obj.length > 0 ? obj.join(',') || null : void undefined }];\n    } else if (isArray(filter)) {\n        objKeys = filter;\n    } else {\n        var keys = Object.keys(obj);\n        objKeys = sort ? keys.sort(sort) : keys;\n    }\n\n    for (var j = 0; j < objKeys.length; ++j) {\n        var key = objKeys[j];\n        var value = typeof key === 'object' && typeof key.value !== 'undefined' ? key.value : obj[key];\n\n        if (skipNulls && value === null) {\n            continue;\n        }\n\n        var keyPrefix = isArray(obj)\n            ? typeof generateArrayPrefix === 'function' ? generateArrayPrefix(prefix, key) : prefix\n            : prefix + (allowDots ? '.' + key : '[' + key + ']');\n\n        sideChannel.set(object, step);\n        var valueSideChannel = getSideChannel();\n        valueSideChannel.set(sentinel, sideChannel);\n        pushToArray(values, stringify(\n            value,\n            keyPrefix,\n            generateArrayPrefix,\n            strictNullHandling,\n            skipNulls,\n            encoder,\n            filter,\n            sort,\n            allowDots,\n            serializeDate,\n            format,\n            formatter,\n            encodeValuesOnly,\n            charset,\n            valueSideChannel\n        ));\n    }\n\n    return values;\n};\n\nvar normalizeStringifyOptions = function normalizeStringifyOptions(opts) {\n    if (!opts) {\n        return defaults;\n    }\n\n    if (opts.encoder !== null && typeof opts.encoder !== 'undefined' && typeof opts.encoder !== 'function') {\n        throw new TypeError('Encoder has to be a function.');\n    }\n\n    var charset = opts.charset || defaults.charset;\n    if (typeof opts.charset !== 'undefined' && opts.charset !== 'utf-8' && opts.charset !== 'iso-8859-1') {\n        throw new TypeError('The charset option must be either utf-8, iso-8859-1, or undefined');\n    }\n\n    var format = formats['default'];\n    if (typeof opts.format !== 'undefined') {\n        if (!has.call(formats.formatters, opts.format)) {\n            throw new TypeError('Unknown format option provided.');\n        }\n        format = opts.format;\n    }\n    var formatter = formats.formatters[format];\n\n    var filter = defaults.filter;\n    if (typeof opts.filter === 'function' || isArray(opts.filter)) {\n        filter = opts.filter;\n    }\n\n    return {\n        addQueryPrefix: typeof opts.addQueryPrefix === 'boolean' ? opts.addQueryPrefix : defaults.addQueryPrefix,\n        allowDots: typeof opts.allowDots === 'undefined' ? defaults.allowDots : !!opts.allowDots,\n        charset: charset,\n        charsetSentinel: typeof opts.charsetSentinel === 'boolean' ? opts.charsetSentinel : defaults.charsetSentinel,\n        delimiter: typeof opts.delimiter === 'undefined' ? defaults.delimiter : opts.delimiter,\n        encode: typeof opts.encode === 'boolean' ? opts.encode : defaults.encode,\n        encoder: typeof opts.encoder === 'function' ? opts.encoder : defaults.encoder,\n        encodeValuesOnly: typeof opts.encodeValuesOnly === 'boolean' ? opts.encodeValuesOnly : defaults.encodeValuesOnly,\n        filter: filter,\n        format: format,\n        formatter: formatter,\n        serializeDate: typeof opts.serializeDate === 'function' ? opts.serializeDate : defaults.serializeDate,\n        skipNulls: typeof opts.skipNulls === 'boolean' ? opts.skipNulls : defaults.skipNulls,\n        sort: typeof opts.sort === 'function' ? opts.sort : null,\n        strictNullHandling: typeof opts.strictNullHandling === 'boolean' ? opts.strictNullHandling : defaults.strictNullHandling\n    };\n};\n\nmodule.exports = function (object, opts) {\n    var obj = object;\n    var options = normalizeStringifyOptions(opts);\n\n    var objKeys;\n    var filter;\n\n    if (typeof options.filter === 'function') {\n        filter = options.filter;\n        obj = filter('', obj);\n    } else if (isArray(options.filter)) {\n        filter = options.filter;\n        objKeys = filter;\n    }\n\n    var keys = [];\n\n    if (typeof obj !== 'object' || obj === null) {\n        return '';\n    }\n\n    var arrayFormat;\n    if (opts && opts.arrayFormat in arrayPrefixGenerators) {\n        arrayFormat = opts.arrayFormat;\n    } else if (opts && 'indices' in opts) {\n        arrayFormat = opts.indices ? 'indices' : 'repeat';\n    } else {\n        arrayFormat = 'indices';\n    }\n\n    var generateArrayPrefix = arrayPrefixGenerators[arrayFormat];\n\n    if (!objKeys) {\n        objKeys = Object.keys(obj);\n    }\n\n    if (options.sort) {\n        objKeys.sort(options.sort);\n    }\n\n    var sideChannel = getSideChannel();\n    for (var i = 0; i < objKeys.length; ++i) {\n        var key = objKeys[i];\n\n        if (options.skipNulls && obj[key] === null) {\n            continue;\n        }\n        pushToArray(keys, stringify(\n            obj[key],\n            key,\n            generateArrayPrefix,\n            options.strictNullHandling,\n            options.skipNulls,\n            options.encode ? options.encoder : null,\n            options.filter,\n            options.sort,\n            options.allowDots,\n            options.serializeDate,\n            options.format,\n            options.formatter,\n            options.encodeValuesOnly,\n            options.charset,\n            sideChannel\n        ));\n    }\n\n    var joined = keys.join(options.delimiter);\n    var prefix = options.addQueryPrefix === true ? '?' : '';\n\n    if (options.charsetSentinel) {\n        if (options.charset === 'iso-8859-1') {\n            // encodeURIComponent('&#10003;'), the \"numeric entity\" representation of a checkmark\n            prefix += 'utf8=%26%2310003%3B&';\n        } else {\n            // encodeURIComponent('✓')\n            prefix += 'utf8=%E2%9C%93&';\n        }\n    }\n\n    return joined.length > 0 ? prefix + joined : '';\n};\n","'use strict';\n\nvar formats = require('./formats');\n\nvar has = Object.prototype.hasOwnProperty;\nvar isArray = Array.isArray;\n\nvar hexTable = (function () {\n    var array = [];\n    for (var i = 0; i < 256; ++i) {\n        array.push('%' + ((i < 16 ? '0' : '') + i.toString(16)).toUpperCase());\n    }\n\n    return array;\n}());\n\nvar compactQueue = function compactQueue(queue) {\n    while (queue.length > 1) {\n        var item = queue.pop();\n        var obj = item.obj[item.prop];\n\n        if (isArray(obj)) {\n            var compacted = [];\n\n            for (var j = 0; j < obj.length; ++j) {\n                if (typeof obj[j] !== 'undefined') {\n                    compacted.push(obj[j]);\n                }\n            }\n\n            item.obj[item.prop] = compacted;\n        }\n    }\n};\n\nvar arrayToObject = function arrayToObject(source, options) {\n    var obj = options && options.plainObjects ? Object.create(null) : {};\n    for (var i = 0; i < source.length; ++i) {\n        if (typeof source[i] !== 'undefined') {\n            obj[i] = source[i];\n        }\n    }\n\n    return obj;\n};\n\nvar merge = function merge(target, source, options) {\n    /* eslint no-param-reassign: 0 */\n    if (!source) {\n        return target;\n    }\n\n    if (typeof source !== 'object') {\n        if (isArray(target)) {\n            target.push(source);\n        } else if (target && typeof target === 'object') {\n            if ((options && (options.plainObjects || options.allowPrototypes)) || !has.call(Object.prototype, source)) {\n                target[source] = true;\n            }\n        } else {\n            return [target, source];\n        }\n\n        return target;\n    }\n\n    if (!target || typeof target !== 'object') {\n        return [target].concat(source);\n    }\n\n    var mergeTarget = target;\n    if (isArray(target) && !isArray(source)) {\n        mergeTarget = arrayToObject(target, options);\n    }\n\n    if (isArray(target) && isArray(source)) {\n        source.forEach(function (item, i) {\n            if (has.call(target, i)) {\n                var targetItem = target[i];\n                if (targetItem && typeof targetItem === 'object' && item && typeof item === 'object') {\n                    target[i] = merge(targetItem, item, options);\n                } else {\n                    target.push(item);\n                }\n            } else {\n                target[i] = item;\n            }\n        });\n        return target;\n    }\n\n    return Object.keys(source).reduce(function (acc, key) {\n        var value = source[key];\n\n        if (has.call(acc, key)) {\n            acc[key] = merge(acc[key], value, options);\n        } else {\n            acc[key] = value;\n        }\n        return acc;\n    }, mergeTarget);\n};\n\nvar assign = function assignSingleSource(target, source) {\n    return Object.keys(source).reduce(function (acc, key) {\n        acc[key] = source[key];\n        return acc;\n    }, target);\n};\n\nvar decode = function (str, decoder, charset) {\n    var strWithoutPlus = str.replace(/\\+/g, ' ');\n    if (charset === 'iso-8859-1') {\n        // unescape never throws, no try...catch needed:\n        return strWithoutPlus.replace(/%[0-9a-f]{2}/gi, unescape);\n    }\n    // utf-8\n    try {\n        return decodeURIComponent(strWithoutPlus);\n    } catch (e) {\n        return strWithoutPlus;\n    }\n};\n\nvar encode = function encode(str, defaultEncoder, charset, kind, format) {\n    // This code was originally written by Brian White (mscdex) for the io.js core querystring library.\n    // It has been adapted here for stricter adherence to RFC 3986\n    if (str.length === 0) {\n        return str;\n    }\n\n    var string = str;\n    if (typeof str === 'symbol') {\n        string = Symbol.prototype.toString.call(str);\n    } else if (typeof str !== 'string') {\n        string = String(str);\n    }\n\n    if (charset === 'iso-8859-1') {\n        return escape(string).replace(/%u[0-9a-f]{4}/gi, function ($0) {\n            return '%26%23' + parseInt($0.slice(2), 16) + '%3B';\n        });\n    }\n\n    var out = '';\n    for (var i = 0; i < string.length; ++i) {\n        var c = string.charCodeAt(i);\n\n        if (\n            c === 0x2D // -\n            || c === 0x2E // .\n            || c === 0x5F // _\n            || c === 0x7E // ~\n            || (c >= 0x30 && c <= 0x39) // 0-9\n            || (c >= 0x41 && c <= 0x5A) // a-z\n            || (c >= 0x61 && c <= 0x7A) // A-Z\n            || (format === formats.RFC1738 && (c === 0x28 || c === 0x29)) // ( )\n        ) {\n            out += string.charAt(i);\n            continue;\n        }\n\n        if (c < 0x80) {\n            out = out + hexTable[c];\n            continue;\n        }\n\n        if (c < 0x800) {\n            out = out + (hexTable[0xC0 | (c >> 6)] + hexTable[0x80 | (c & 0x3F)]);\n            continue;\n        }\n\n        if (c < 0xD800 || c >= 0xE000) {\n            out = out + (hexTable[0xE0 | (c >> 12)] + hexTable[0x80 | ((c >> 6) & 0x3F)] + hexTable[0x80 | (c & 0x3F)]);\n            continue;\n        }\n\n        i += 1;\n        c = 0x10000 + (((c & 0x3FF) << 10) | (string.charCodeAt(i) & 0x3FF));\n        /* eslint operator-linebreak: [2, \"before\"] */\n        out += hexTable[0xF0 | (c >> 18)]\n            + hexTable[0x80 | ((c >> 12) & 0x3F)]\n            + hexTable[0x80 | ((c >> 6) & 0x3F)]\n            + hexTable[0x80 | (c & 0x3F)];\n    }\n\n    return out;\n};\n\nvar compact = function compact(value) {\n    var queue = [{ obj: { o: value }, prop: 'o' }];\n    var refs = [];\n\n    for (var i = 0; i < queue.length; ++i) {\n        var item = queue[i];\n        var obj = item.obj[item.prop];\n\n        var keys = Object.keys(obj);\n        for (var j = 0; j < keys.length; ++j) {\n            var key = keys[j];\n            var val = obj[key];\n            if (typeof val === 'object' && val !== null && refs.indexOf(val) === -1) {\n                queue.push({ obj: obj, prop: key });\n                refs.push(val);\n            }\n        }\n    }\n\n    compactQueue(queue);\n\n    return value;\n};\n\nvar isRegExp = function isRegExp(obj) {\n    return Object.prototype.toString.call(obj) === '[object RegExp]';\n};\n\nvar isBuffer = function isBuffer(obj) {\n    if (!obj || typeof obj !== 'object') {\n        return false;\n    }\n\n    return !!(obj.constructor && obj.constructor.isBuffer && obj.constructor.isBuffer(obj));\n};\n\nvar combine = function combine(a, b) {\n    return [].concat(a, b);\n};\n\nvar maybeMap = function maybeMap(val, fn) {\n    if (isArray(val)) {\n        var mapped = [];\n        for (var i = 0; i < val.length; i += 1) {\n            mapped.push(fn(val[i]));\n        }\n        return mapped;\n    }\n    return fn(val);\n};\n\nmodule.exports = {\n    arrayToObject: arrayToObject,\n    assign: assign,\n    combine: combine,\n    compact: compact,\n    decode: decode,\n    encode: encode,\n    isBuffer: isBuffer,\n    isRegExp: isRegExp,\n    maybeMap: maybeMap,\n    merge: merge\n};\n","/*!\n * range-parser\n * Copyright(c) 2012-2014 TJ Holowaychuk\n * Copyright(c) 2015-2016 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = rangeParser\n\n/**\n * Parse \"Range\" header `str` relative to the given file `size`.\n *\n * @param {Number} size\n * @param {String} str\n * @param {Object} [options]\n * @return {Array}\n * @public\n */\n\nfunction rangeParser (size, str, options) {\n  if (typeof str !== 'string') {\n    throw new TypeError('argument str must be a string')\n  }\n\n  var index = str.indexOf('=')\n\n  if (index === -1) {\n    return -2\n  }\n\n  // split the range string\n  var arr = str.slice(index + 1).split(',')\n  var ranges = []\n\n  // add ranges type\n  ranges.type = str.slice(0, index)\n\n  // parse all ranges\n  for (var i = 0; i < arr.length; i++) {\n    var range = arr[i].split('-')\n    var start = parseInt(range[0], 10)\n    var end = parseInt(range[1], 10)\n\n    // -nnn\n    if (isNaN(start)) {\n      start = size - end\n      end = size - 1\n    // nnn-\n    } else if (isNaN(end)) {\n      end = size - 1\n    }\n\n    // limit last-byte-pos to current length\n    if (end > size - 1) {\n      end = size - 1\n    }\n\n    // invalid or unsatisifiable\n    if (isNaN(start) || isNaN(end) || start > end || start < 0) {\n      continue\n    }\n\n    // add range\n    ranges.push({\n      start: start,\n      end: end\n    })\n  }\n\n  if (ranges.length < 1) {\n    // unsatisifiable\n    return -1\n  }\n\n  return options && options.combine\n    ? combineRanges(ranges)\n    : ranges\n}\n\n/**\n * Combine overlapping & adjacent ranges.\n * @private\n */\n\nfunction combineRanges (ranges) {\n  var ordered = ranges.map(mapWithIndex).sort(sortByRangeStart)\n\n  for (var j = 0, i = 1; i < ordered.length; i++) {\n    var range = ordered[i]\n    var current = ordered[j]\n\n    if (range.start > current.end + 1) {\n      // next range\n      ordered[++j] = range\n    } else if (range.end > current.end) {\n      // extend range\n      current.end = range.end\n      current.index = Math.min(current.index, range.index)\n    }\n  }\n\n  // trim ordered array\n  ordered.length = j + 1\n\n  // generate combined range\n  var combined = ordered.sort(sortByRangeIndex).map(mapWithoutIndex)\n\n  // copy ranges type\n  combined.type = ranges.type\n\n  return combined\n}\n\n/**\n * Map function to add index value to ranges.\n * @private\n */\n\nfunction mapWithIndex (range, index) {\n  return {\n    start: range.start,\n    end: range.end,\n    index: index\n  }\n}\n\n/**\n * Map function to remove index value from ranges.\n * @private\n */\n\nfunction mapWithoutIndex (range) {\n  return {\n    start: range.start,\n    end: range.end\n  }\n}\n\n/**\n * Sort function to sort ranges by index.\n * @private\n */\n\nfunction sortByRangeIndex (a, b) {\n  return a.index - b.index\n}\n\n/**\n * Sort function to sort ranges by start position.\n * @private\n */\n\nfunction sortByRangeStart (a, b) {\n  return a.start - b.start\n}\n","/*!\n * raw-body\n * Copyright(c) 2013-2014 Jonathan Ong\n * Copyright(c) 2014-2022 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * Module dependencies.\n * @private\n */\n\nvar asyncHooks = tryRequireAsyncHooks()\nvar bytes = require('bytes')\nvar createError = require('http-errors')\nvar iconv = require('iconv-lite')\nvar unpipe = require('unpipe')\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = getRawBody\n\n/**\n * Module variables.\n * @private\n */\n\nvar ICONV_ENCODING_MESSAGE_REGEXP = /^Encoding not recognized: /\n\n/**\n * Get the decoder for a given encoding.\n *\n * @param {string} encoding\n * @private\n */\n\nfunction getDecoder (encoding) {\n  if (!encoding) return null\n\n  try {\n    return iconv.getDecoder(encoding)\n  } catch (e) {\n    // error getting decoder\n    if (!ICONV_ENCODING_MESSAGE_REGEXP.test(e.message)) throw e\n\n    // the encoding was not found\n    throw createError(415, 'specified encoding unsupported', {\n      encoding: encoding,\n      type: 'encoding.unsupported'\n    })\n  }\n}\n\n/**\n * Get the raw body of a stream (typically HTTP).\n *\n * @param {object} stream\n * @param {object|string|function} [options]\n * @param {function} [callback]\n * @public\n */\n\nfunction getRawBody (stream, options, callback) {\n  var done = callback\n  var opts = options || {}\n\n  if (options === true || typeof options === 'string') {\n    // short cut for encoding\n    opts = {\n      encoding: options\n    }\n  }\n\n  if (typeof options === 'function') {\n    done = options\n    opts = {}\n  }\n\n  // validate callback is a function, if provided\n  if (done !== undefined && typeof done !== 'function') {\n    throw new TypeError('argument callback must be a function')\n  }\n\n  // require the callback without promises\n  if (!done && !global.Promise) {\n    throw new TypeError('argument callback is required')\n  }\n\n  // get encoding\n  var encoding = opts.encoding !== true\n    ? opts.encoding\n    : 'utf-8'\n\n  // convert the limit to an integer\n  var limit = bytes.parse(opts.limit)\n\n  // convert the expected length to an integer\n  var length = opts.length != null && !isNaN(opts.length)\n    ? parseInt(opts.length, 10)\n    : null\n\n  if (done) {\n    // classic callback style\n    return readStream(stream, encoding, length, limit, wrap(done))\n  }\n\n  return new Promise(function executor (resolve, reject) {\n    readStream(stream, encoding, length, limit, function onRead (err, buf) {\n      if (err) return reject(err)\n      resolve(buf)\n    })\n  })\n}\n\n/**\n * Halt a stream.\n *\n * @param {Object} stream\n * @private\n */\n\nfunction halt (stream) {\n  // unpipe everything from the stream\n  unpipe(stream)\n\n  // pause stream\n  if (typeof stream.pause === 'function') {\n    stream.pause()\n  }\n}\n\n/**\n * Read the data from the stream.\n *\n * @param {object} stream\n * @param {string} encoding\n * @param {number} length\n * @param {number} limit\n * @param {function} callback\n * @public\n */\n\nfunction readStream (stream, encoding, length, limit, callback) {\n  var complete = false\n  var sync = true\n\n  // check the length and limit options.\n  // note: we intentionally leave the stream paused,\n  // so users should handle the stream themselves.\n  if (limit !== null && length !== null && length > limit) {\n    return done(createError(413, 'request entity too large', {\n      expected: length,\n      length: length,\n      limit: limit,\n      type: 'entity.too.large'\n    }))\n  }\n\n  // streams1: assert request encoding is buffer.\n  // streams2+: assert the stream encoding is buffer.\n  //   stream._decoder: streams1\n  //   state.encoding: streams2\n  //   state.decoder: streams2, specifically < 0.10.6\n  var state = stream._readableState\n  if (stream._decoder || (state && (state.encoding || state.decoder))) {\n    // developer error\n    return done(createError(500, 'stream encoding should not be set', {\n      type: 'stream.encoding.set'\n    }))\n  }\n\n  if (typeof stream.readable !== 'undefined' && !stream.readable) {\n    return done(createError(500, 'stream is not readable', {\n      type: 'stream.not.readable'\n    }))\n  }\n\n  var received = 0\n  var decoder\n\n  try {\n    decoder = getDecoder(encoding)\n  } catch (err) {\n    return done(err)\n  }\n\n  var buffer = decoder\n    ? ''\n    : []\n\n  // attach listeners\n  stream.on('aborted', onAborted)\n  stream.on('close', cleanup)\n  stream.on('data', onData)\n  stream.on('end', onEnd)\n  stream.on('error', onEnd)\n\n  // mark sync section complete\n  sync = false\n\n  function done () {\n    var args = new Array(arguments.length)\n\n    // copy arguments\n    for (var i = 0; i < args.length; i++) {\n      args[i] = arguments[i]\n    }\n\n    // mark complete\n    complete = true\n\n    if (sync) {\n      process.nextTick(invokeCallback)\n    } else {\n      invokeCallback()\n    }\n\n    function invokeCallback () {\n      cleanup()\n\n      if (args[0]) {\n        // halt the stream on error\n        halt(stream)\n      }\n\n      callback.apply(null, args)\n    }\n  }\n\n  function onAborted () {\n    if (complete) return\n\n    done(createError(400, 'request aborted', {\n      code: 'ECONNABORTED',\n      expected: length,\n      length: length,\n      received: received,\n      type: 'request.aborted'\n    }))\n  }\n\n  function onData (chunk) {\n    if (complete) return\n\n    received += chunk.length\n\n    if (limit !== null && received > limit) {\n      done(createError(413, 'request entity too large', {\n        limit: limit,\n        received: received,\n        type: 'entity.too.large'\n      }))\n    } else if (decoder) {\n      buffer += decoder.write(chunk)\n    } else {\n      buffer.push(chunk)\n    }\n  }\n\n  function onEnd (err) {\n    if (complete) return\n    if (err) return done(err)\n\n    if (length !== null && received !== length) {\n      done(createError(400, 'request size did not match content length', {\n        expected: length,\n        length: length,\n        received: received,\n        type: 'request.size.invalid'\n      }))\n    } else {\n      var string = decoder\n        ? buffer + (decoder.end() || '')\n        : Buffer.concat(buffer)\n      done(null, string)\n    }\n  }\n\n  function cleanup () {\n    buffer = null\n\n    stream.removeListener('aborted', onAborted)\n    stream.removeListener('data', onData)\n    stream.removeListener('end', onEnd)\n    stream.removeListener('error', onEnd)\n    stream.removeListener('close', cleanup)\n  }\n}\n\n/**\n * Try to require async_hooks\n * @private\n */\n\nfunction tryRequireAsyncHooks () {\n  try {\n    return require('async_hooks')\n  } catch (e) {\n    return {}\n  }\n}\n\n/**\n * Wrap function with async resource, if possible.\n * AsyncResource.bind static method backported.\n * @private\n */\n\nfunction wrap (fn) {\n  var res\n\n  // create anonymous resource\n  if (asyncHooks.AsyncResource) {\n    res = new asyncHooks.AsyncResource(fn.name || 'bound-anonymous-fn')\n  }\n\n  // incompatible node.js\n  if (!res || !res.runInAsyncScope) {\n    return fn\n  }\n\n  // return bound function\n  return res.runInAsyncScope.bind(res, fn, null)\n}\n","//////////////////////////////////////////////////////////\n// Here we need to reference our other deep imports\n// so VS code will figure out where they are\n// see conversation here:\n// https://github.com/microsoft/TypeScript/issues/43034\n//////////////////////////////////////////////////////////\n\n// tslint:disable: no-reference\n// It's tempting to add references to all of the deep-import locations, but\n// adding references to those that require DOM types breaks Node projects.\n/// <reference path=\"./operators/index.ts\" />\n/// <reference path=\"./testing/index.ts\" />\n// tslint:enable: no-reference\n\n/* Observable */\nexport { Observable } from './internal/Observable';\nexport { ConnectableObservable } from './internal/observable/ConnectableObservable';\nexport { GroupedObservable } from './internal/operators/groupBy';\nexport { Operator } from './internal/Operator';\nexport { observable } from './internal/symbol/observable';\nexport { animationFrames } from './internal/observable/dom/animationFrames';\n\n/* Subjects */\nexport { Subject } from './internal/Subject';\nexport { BehaviorSubject } from './internal/BehaviorSubject';\nexport { ReplaySubject } from './internal/ReplaySubject';\nexport { AsyncSubject } from './internal/AsyncSubject';\n\n/* Schedulers */\nexport { asap, asapScheduler } from './internal/scheduler/asap';\nexport { async, asyncScheduler } from './internal/scheduler/async';\nexport { queue, queueScheduler } from './internal/scheduler/queue';\nexport { animationFrame, animationFrameScheduler } from './internal/scheduler/animationFrame';\nexport { VirtualTimeScheduler, VirtualAction } from './internal/scheduler/VirtualTimeScheduler';\nexport { Scheduler } from './internal/Scheduler';\n\n/* Subscription */\nexport { Subscription } from './internal/Subscription';\nexport { Subscriber } from './internal/Subscriber';\n\n/* Notification */\nexport { Notification, NotificationKind } from './internal/Notification';\n\n/* Utils */\nexport { pipe } from './internal/util/pipe';\nexport { noop } from './internal/util/noop';\nexport { identity } from './internal/util/identity';\nexport { isObservable } from './internal/util/isObservable';\n\n/* Promise Conversion */\nexport { lastValueFrom } from './internal/lastValueFrom';\nexport { firstValueFrom } from './internal/firstValueFrom';\n\n/* Error types */\nexport { ArgumentOutOfRangeError } from './internal/util/ArgumentOutOfRangeError';\nexport { EmptyError } from './internal/util/EmptyError';\nexport { NotFoundError } from './internal/util/NotFoundError';\nexport { ObjectUnsubscribedError } from './internal/util/ObjectUnsubscribedError';\nexport { SequenceError } from './internal/util/SequenceError';\nexport { TimeoutError } from './internal/operators/timeout';\nexport { UnsubscriptionError } from './internal/util/UnsubscriptionError';\n\n/* Static observable creation exports */\nexport { bindCallback } from './internal/observable/bindCallback';\nexport { bindNodeCallback } from './internal/observable/bindNodeCallback';\nexport { combineLatest } from './internal/observable/combineLatest';\nexport { concat } from './internal/observable/concat';\nexport { connectable } from './internal/observable/connectable';\nexport { defer } from './internal/observable/defer';\nexport { empty } from './internal/observable/empty';\nexport { forkJoin } from './internal/observable/forkJoin';\nexport { from } from './internal/observable/from';\nexport { fromEvent } from './internal/observable/fromEvent';\nexport { fromEventPattern } from './internal/observable/fromEventPattern';\nexport { generate } from './internal/observable/generate';\nexport { iif } from './internal/observable/iif';\nexport { interval } from './internal/observable/interval';\nexport { merge } from './internal/observable/merge';\nexport { never } from './internal/observable/never';\nexport { of } from './internal/observable/of';\nexport { onErrorResumeNext } from './internal/observable/onErrorResumeNext';\nexport { pairs } from './internal/observable/pairs';\nexport { partition } from './internal/observable/partition';\nexport { race } from './internal/observable/race';\nexport { range } from './internal/observable/range';\nexport { throwError } from './internal/observable/throwError';\nexport { timer } from './internal/observable/timer';\nexport { using } from './internal/observable/using';\nexport { zip } from './internal/observable/zip';\nexport { scheduled } from './internal/scheduled/scheduled';\n\n/* Constants */\nexport { EMPTY } from './internal/observable/empty';\nexport { NEVER } from './internal/observable/never';\n\n/* Types */\nexport * from './internal/types';\n\n/* Config */\nexport { config, GlobalConfig } from './internal/config';\n\n/* Operators */\nexport { audit } from './internal/operators/audit';\nexport { auditTime } from './internal/operators/auditTime';\nexport { buffer } from './internal/operators/buffer';\nexport { bufferCount } from './internal/operators/bufferCount';\nexport { bufferTime } from './internal/operators/bufferTime';\nexport { bufferToggle } from './internal/operators/bufferToggle';\nexport { bufferWhen } from './internal/operators/bufferWhen';\nexport { catchError } from './internal/operators/catchError';\nexport { combineAll } from './internal/operators/combineAll';\nexport { combineLatestAll } from './internal/operators/combineLatestAll';\nexport { combineLatestWith } from './internal/operators/combineLatestWith';\nexport { concatAll } from './internal/operators/concatAll';\nexport { concatMap } from './internal/operators/concatMap';\nexport { concatMapTo } from './internal/operators/concatMapTo';\nexport { concatWith } from './internal/operators/concatWith';\nexport { connect, ConnectConfig } from './internal/operators/connect';\nexport { count } from './internal/operators/count';\nexport { debounce } from './internal/operators/debounce';\nexport { debounceTime } from './internal/operators/debounceTime';\nexport { defaultIfEmpty } from './internal/operators/defaultIfEmpty';\nexport { delay } from './internal/operators/delay';\nexport { delayWhen } from './internal/operators/delayWhen';\nexport { dematerialize } from './internal/operators/dematerialize';\nexport { distinct } from './internal/operators/distinct';\nexport { distinctUntilChanged } from './internal/operators/distinctUntilChanged';\nexport { distinctUntilKeyChanged } from './internal/operators/distinctUntilKeyChanged';\nexport { elementAt } from './internal/operators/elementAt';\nexport { endWith } from './internal/operators/endWith';\nexport { every } from './internal/operators/every';\nexport { exhaust } from './internal/operators/exhaust';\nexport { exhaustAll } from './internal/operators/exhaustAll';\nexport { exhaustMap } from './internal/operators/exhaustMap';\nexport { expand } from './internal/operators/expand';\nexport { filter } from './internal/operators/filter';\nexport { finalize } from './internal/operators/finalize';\nexport { find } from './internal/operators/find';\nexport { findIndex } from './internal/operators/findIndex';\nexport { first } from './internal/operators/first';\nexport { groupBy, BasicGroupByOptions, GroupByOptionsWithElement } from './internal/operators/groupBy';\nexport { ignoreElements } from './internal/operators/ignoreElements';\nexport { isEmpty } from './internal/operators/isEmpty';\nexport { last } from './internal/operators/last';\nexport { map } from './internal/operators/map';\nexport { mapTo } from './internal/operators/mapTo';\nexport { materialize } from './internal/operators/materialize';\nexport { max } from './internal/operators/max';\nexport { mergeAll } from './internal/operators/mergeAll';\nexport { flatMap } from './internal/operators/flatMap';\nexport { mergeMap } from './internal/operators/mergeMap';\nexport { mergeMapTo } from './internal/operators/mergeMapTo';\nexport { mergeScan } from './internal/operators/mergeScan';\nexport { mergeWith } from './internal/operators/mergeWith';\nexport { min } from './internal/operators/min';\nexport { multicast } from './internal/operators/multicast';\nexport { observeOn } from './internal/operators/observeOn';\nexport { pairwise } from './internal/operators/pairwise';\nexport { pluck } from './internal/operators/pluck';\nexport { publish } from './internal/operators/publish';\nexport { publishBehavior } from './internal/operators/publishBehavior';\nexport { publishLast } from './internal/operators/publishLast';\nexport { publishReplay } from './internal/operators/publishReplay';\nexport { raceWith } from './internal/operators/raceWith';\nexport { reduce } from './internal/operators/reduce';\nexport { repeat } from './internal/operators/repeat';\nexport { repeatWhen } from './internal/operators/repeatWhen';\nexport { retry, RetryConfig } from './internal/operators/retry';\nexport { retryWhen } from './internal/operators/retryWhen';\nexport { refCount } from './internal/operators/refCount';\nexport { sample } from './internal/operators/sample';\nexport { sampleTime } from './internal/operators/sampleTime';\nexport { scan } from './internal/operators/scan';\nexport { sequenceEqual } from './internal/operators/sequenceEqual';\nexport { share, ShareConfig } from './internal/operators/share';\nexport { shareReplay, ShareReplayConfig } from './internal/operators/shareReplay';\nexport { single } from './internal/operators/single';\nexport { skip } from './internal/operators/skip';\nexport { skipLast } from './internal/operators/skipLast';\nexport { skipUntil } from './internal/operators/skipUntil';\nexport { skipWhile } from './internal/operators/skipWhile';\nexport { startWith } from './internal/operators/startWith';\nexport { subscribeOn } from './internal/operators/subscribeOn';\nexport { switchAll } from './internal/operators/switchAll';\nexport { switchMap } from './internal/operators/switchMap';\nexport { switchMapTo } from './internal/operators/switchMapTo';\nexport { switchScan } from './internal/operators/switchScan';\nexport { take } from './internal/operators/take';\nexport { takeLast } from './internal/operators/takeLast';\nexport { takeUntil } from './internal/operators/takeUntil';\nexport { takeWhile } from './internal/operators/takeWhile';\nexport { tap } from './internal/operators/tap';\nexport { throttle, ThrottleConfig } from './internal/operators/throttle';\nexport { throttleTime } from './internal/operators/throttleTime';\nexport { throwIfEmpty } from './internal/operators/throwIfEmpty';\nexport { timeInterval } from './internal/operators/timeInterval';\nexport { timeout, TimeoutConfig, TimeoutInfo } from './internal/operators/timeout';\nexport { timeoutWith } from './internal/operators/timeoutWith';\nexport { timestamp } from './internal/operators/timestamp';\nexport { toArray } from './internal/operators/toArray';\nexport { window } from './internal/operators/window';\nexport { windowCount } from './internal/operators/windowCount';\nexport { windowTime } from './internal/operators/windowTime';\nexport { windowToggle } from './internal/operators/windowToggle';\nexport { windowWhen } from './internal/operators/windowWhen';\nexport { withLatestFrom } from './internal/operators/withLatestFrom';\nexport { zipAll } from './internal/operators/zipAll';\nexport { zipWith } from './internal/operators/zipWith';\n","import { Subject } from './Subject';\nimport { Subscriber } from './Subscriber';\n\n/**\n * A variant of Subject that only emits a value when it completes. It will emit\n * its latest value to all its observers on completion.\n *\n * @class AsyncSubject<T>\n */\nexport class AsyncSubject<T> extends Subject<T> {\n  private _value: T | null = null;\n  private _hasValue = false;\n  private _isComplete = false;\n\n  /** @internal */\n  protected _checkFinalizedStatuses(subscriber: Subscriber<T>) {\n    const { hasError, _hasValue, _value, thrownError, isStopped, _isComplete } = this;\n    if (hasError) {\n      subscriber.error(thrownError);\n    } else if (isStopped || _isComplete) {\n      _hasValue && subscriber.next(_value!);\n      subscriber.complete();\n    }\n  }\n\n  next(value: T): void {\n    if (!this.isStopped) {\n      this._value = value;\n      this._hasValue = true;\n    }\n  }\n\n  complete(): void {\n    const { _hasValue, _value, _isComplete } = this;\n    if (!_isComplete) {\n      this._isComplete = true;\n      _hasValue && super.next(_value!);\n      super.complete();\n    }\n  }\n}\n","import { Subject } from './Subject';\nimport { Subscriber } from './Subscriber';\nimport { Subscription } from './Subscription';\n\n/**\n * A variant of Subject that requires an initial value and emits its current\n * value whenever it is subscribed to.\n *\n * @class BehaviorSubject<T>\n */\nexport class BehaviorSubject<T> extends Subject<T> {\n  constructor(private _value: T) {\n    super();\n  }\n\n  get value(): T {\n    return this.getValue();\n  }\n\n  /** @internal */\n  protected _subscribe(subscriber: Subscriber<T>): Subscription {\n    const subscription = super._subscribe(subscriber);\n    !subscription.closed && subscriber.next(this._value);\n    return subscription;\n  }\n\n  getValue(): T {\n    const { hasError, thrownError, _value } = this;\n    if (hasError) {\n      throw thrownError;\n    }\n    this._throwIfClosed();\n    return _value;\n  }\n\n  next(value: T): void {\n    super.next((this._value = value));\n  }\n}\n","import { PartialObserver, ObservableNotification, CompleteNotification, NextNotification, ErrorNotification } from './types';\nimport { Observable } from './Observable';\nimport { EMPTY } from './observable/empty';\nimport { of } from './observable/of';\nimport { throwError } from './observable/throwError';\nimport { isFunction } from './util/isFunction';\n\n// TODO: When this enum is removed, replace it with a type alias. See #4556.\n/**\n * @deprecated Use a string literal instead. `NotificationKind` will be replaced with a type alias in v8.\n * It will not be replaced with a const enum as those are not compatible with isolated modules.\n */\nexport enum NotificationKind {\n  NEXT = 'N',\n  ERROR = 'E',\n  COMPLETE = 'C',\n}\n\n/**\n * Represents a push-based event or value that an {@link Observable} can emit.\n * This class is particularly useful for operators that manage notifications,\n * like {@link materialize}, {@link dematerialize}, {@link observeOn}, and\n * others. Besides wrapping the actual delivered value, it also annotates it\n * with metadata of, for instance, what type of push message it is (`next`,\n * `error`, or `complete`).\n *\n * @see {@link materialize}\n * @see {@link dematerialize}\n * @see {@link observeOn}\n * @deprecated It is NOT recommended to create instances of `Notification` directly.\n * Rather, try to create POJOs matching the signature outlined in {@link ObservableNotification}.\n * For example: `{ kind: 'N', value: 1 }`, `{ kind: 'E', error: new Error('bad') }`, or `{ kind: 'C' }`.\n * Will be removed in v8.\n */\nexport class Notification<T> {\n  /**\n   * A value signifying that the notification will \"next\" if observed. In truth,\n   * This is really synonymous with just checking `kind === \"N\"`.\n   * @deprecated Will be removed in v8. Instead, just check to see if the value of `kind` is `\"N\"`.\n   */\n  readonly hasValue: boolean;\n\n  /**\n   * Creates a \"Next\" notification object.\n   * @param kind Always `'N'`\n   * @param value The value to notify with if observed.\n   * @deprecated Internal implementation detail. Use {@link Notification#createNext createNext} instead.\n   */\n  constructor(kind: 'N', value?: T);\n  /**\n   * Creates an \"Error\" notification object.\n   * @param kind Always `'E'`\n   * @param value Always `undefined`\n   * @param error The error to notify with if observed.\n   * @deprecated Internal implementation detail. Use {@link Notification#createError createError} instead.\n   */\n  constructor(kind: 'E', value: undefined, error: any);\n  /**\n   * Creates a \"completion\" notification object.\n   * @param kind Always `'C'`\n   * @deprecated Internal implementation detail. Use {@link Notification#createComplete createComplete} instead.\n   */\n  constructor(kind: 'C');\n  constructor(public readonly kind: 'N' | 'E' | 'C', public readonly value?: T, public readonly error?: any) {\n    this.hasValue = kind === 'N';\n  }\n\n  /**\n   * Executes the appropriate handler on a passed `observer` given the `kind` of notification.\n   * If the handler is missing it will do nothing. Even if the notification is an error, if\n   * there is no error handler on the observer, an error will not be thrown, it will noop.\n   * @param observer The observer to notify.\n   */\n  observe(observer: PartialObserver<T>): void {\n    return observeNotification(this as ObservableNotification<T>, observer);\n  }\n\n  /**\n   * Executes a notification on the appropriate handler from a list provided.\n   * If a handler is missing for the kind of notification, nothing is called\n   * and no error is thrown, it will be a noop.\n   * @param next A next handler\n   * @param error An error handler\n   * @param complete A complete handler\n   * @deprecated Replaced with {@link Notification#observe observe}. Will be removed in v8.\n   */\n  do(next: (value: T) => void, error: (err: any) => void, complete: () => void): void;\n  /**\n   * Executes a notification on the appropriate handler from a list provided.\n   * If a handler is missing for the kind of notification, nothing is called\n   * and no error is thrown, it will be a noop.\n   * @param next A next handler\n   * @param error An error handler\n   * @deprecated Replaced with {@link Notification#observe observe}. Will be removed in v8.\n   */\n  do(next: (value: T) => void, error: (err: any) => void): void;\n  /**\n   * Executes the next handler if the Notification is of `kind` `\"N\"`. Otherwise\n   * this will not error, and it will be a noop.\n   * @param next The next handler\n   * @deprecated Replaced with {@link Notification#observe observe}. Will be removed in v8.\n   */\n  do(next: (value: T) => void): void;\n  do(nextHandler: (value: T) => void, errorHandler?: (err: any) => void, completeHandler?: () => void): void {\n    const { kind, value, error } = this;\n    return kind === 'N' ? nextHandler?.(value!) : kind === 'E' ? errorHandler?.(error) : completeHandler?.();\n  }\n\n  /**\n   * Executes a notification on the appropriate handler from a list provided.\n   * If a handler is missing for the kind of notification, nothing is called\n   * and no error is thrown, it will be a noop.\n   * @param next A next handler\n   * @param error An error handler\n   * @param complete A complete handler\n   * @deprecated Replaced with {@link Notification#observe observe}. Will be removed in v8.\n   */\n  accept(next: (value: T) => void, error: (err: any) => void, complete: () => void): void;\n  /**\n   * Executes a notification on the appropriate handler from a list provided.\n   * If a handler is missing for the kind of notification, nothing is called\n   * and no error is thrown, it will be a noop.\n   * @param next A next handler\n   * @param error An error handler\n   * @deprecated Replaced with {@link Notification#observe observe}. Will be removed in v8.\n   */\n  accept(next: (value: T) => void, error: (err: any) => void): void;\n  /**\n   * Executes the next handler if the Notification is of `kind` `\"N\"`. Otherwise\n   * this will not error, and it will be a noop.\n   * @param next The next handler\n   * @deprecated Replaced with {@link Notification#observe observe}. Will be removed in v8.\n   */\n  accept(next: (value: T) => void): void;\n\n  /**\n   * Executes the appropriate handler on a passed `observer` given the `kind` of notification.\n   * If the handler is missing it will do nothing. Even if the notification is an error, if\n   * there is no error handler on the observer, an error will not be thrown, it will noop.\n   * @param observer The observer to notify.\n   * @deprecated Replaced with {@link Notification#observe observe}. Will be removed in v8.\n   */\n  accept(observer: PartialObserver<T>): void;\n  accept(nextOrObserver: PartialObserver<T> | ((value: T) => void), error?: (err: any) => void, complete?: () => void) {\n    return isFunction((nextOrObserver as any)?.next)\n      ? this.observe(nextOrObserver as PartialObserver<T>)\n      : this.do(nextOrObserver as (value: T) => void, error as any, complete as any);\n  }\n\n  /**\n   * Returns a simple Observable that just delivers the notification represented\n   * by this Notification instance.\n   *\n   * @deprecated Will be removed in v8. To convert a `Notification` to an {@link Observable},\n   * use {@link of} and {@link dematerialize}: `of(notification).pipe(dematerialize())`.\n   */\n  toObservable(): Observable<T> {\n    const { kind, value, error } = this;\n    // Select the observable to return by `kind`\n    const result =\n      kind === 'N'\n        ? // Next kind. Return an observable of that value.\n          of(value!)\n        : //\n        kind === 'E'\n        ? // Error kind. Return an observable that emits the error.\n          throwError(() => error)\n        : //\n        kind === 'C'\n        ? // Completion kind. Kind is \"C\", return an observable that just completes.\n          EMPTY\n        : // Unknown kind, return falsy, so we error below.\n          0;\n    if (!result) {\n      // TODO: consider removing this check. The only way to cause this would be to\n      // use the Notification constructor directly in a way that is not type-safe.\n      // and direct use of the Notification constructor is deprecated.\n      throw new TypeError(`Unexpected notification kind ${kind}`);\n    }\n    return result;\n  }\n\n  private static completeNotification = new Notification('C') as Notification<never> & CompleteNotification;\n  /**\n   * A shortcut to create a Notification instance of the type `next` from a\n   * given value.\n   * @param {T} value The `next` value.\n   * @return {Notification<T>} The \"next\" Notification representing the\n   * argument.\n   * @nocollapse\n   * @deprecated It is NOT recommended to create instances of `Notification` directly.\n   * Rather, try to create POJOs matching the signature outlined in {@link ObservableNotification}.\n   * For example: `{ kind: 'N', value: 1 }`, `{ kind: 'E', error: new Error('bad') }`, or `{ kind: 'C' }`.\n   * Will be removed in v8.\n   */\n  static createNext<T>(value: T) {\n    return new Notification('N', value) as Notification<T> & NextNotification<T>;\n  }\n\n  /**\n   * A shortcut to create a Notification instance of the type `error` from a\n   * given error.\n   * @param {any} [err] The `error` error.\n   * @return {Notification<T>} The \"error\" Notification representing the\n   * argument.\n   * @nocollapse\n   * @deprecated It is NOT recommended to create instances of `Notification` directly.\n   * Rather, try to create POJOs matching the signature outlined in {@link ObservableNotification}.\n   * For example: `{ kind: 'N', value: 1 }`, `{ kind: 'E', error: new Error('bad') }`, or `{ kind: 'C' }`.\n   * Will be removed in v8.\n   */\n  static createError(err?: any) {\n    return new Notification('E', undefined, err) as Notification<never> & ErrorNotification;\n  }\n\n  /**\n   * A shortcut to create a Notification instance of the type `complete`.\n   * @return {Notification<any>} The valueless \"complete\" Notification.\n   * @nocollapse\n   * @deprecated It is NOT recommended to create instances of `Notification` directly.\n   * Rather, try to create POJOs matching the signature outlined in {@link ObservableNotification}.\n   * For example: `{ kind: 'N', value: 1 }`, `{ kind: 'E', error: new Error('bad') }`, or `{ kind: 'C' }`.\n   * Will be removed in v8.\n   */\n  static createComplete(): Notification<never> & CompleteNotification {\n    return Notification.completeNotification;\n  }\n}\n\n/**\n * Executes the appropriate handler on a passed `observer` given the `kind` of notification.\n * If the handler is missing it will do nothing. Even if the notification is an error, if\n * there is no error handler on the observer, an error will not be thrown, it will noop.\n * @param notification The notification object to observe.\n * @param observer The observer to notify.\n */\nexport function observeNotification<T>(notification: ObservableNotification<T>, observer: PartialObserver<T>) {\n  const { kind, value, error } = notification as any;\n  if (typeof kind !== 'string') {\n    throw new TypeError('Invalid notification, missing \"kind\"');\n  }\n  kind === 'N' ? observer.next?.(value!) : kind === 'E' ? observer.error?.(error) : observer.complete?.();\n}\n","import { CompleteNotification, NextNotification, ErrorNotification } from './types';\n\n/**\n * A completion object optimized for memory use and created to be the\n * same \"shape\" as other notifications in v8.\n * @internal\n */\nexport const COMPLETE_NOTIFICATION = (() => createNotification('C', undefined, undefined) as CompleteNotification)();\n\n/**\n * Internal use only. Creates an optimized error notification that is the same \"shape\"\n * as other notifications.\n * @internal\n */\nexport function errorNotification(error: any): ErrorNotification {\n  return createNotification('E', undefined, error) as any;\n}\n\n/**\n * Internal use only. Creates an optimized next notification that is the same \"shape\"\n * as other notifications.\n * @internal\n */\nexport function nextNotification<T>(value: T) {\n  return createNotification('N', value, undefined) as NextNotification<T>;\n}\n\n/**\n * Ensures that all notifications created internally have the same \"shape\" in v8.\n *\n * TODO: This is only exported to support a crazy legacy test in `groupBy`.\n * @internal\n */\nexport function createNotification(kind: 'N' | 'E' | 'C', value: any, error: any) {\n  return {\n    kind,\n    value,\n    error,\n  };\n}\n","import { Operator } from './Operator';\nimport { SafeSubscriber, Subscriber } from './Subscriber';\nimport { isSubscription, Subscription } from './Subscription';\nimport { TeardownLogic, OperatorFunction, Subscribable, Observer } from './types';\nimport { observable as Symbol_observable } from './symbol/observable';\nimport { pipeFromArray } from './util/pipe';\nimport { config } from './config';\nimport { isFunction } from './util/isFunction';\nimport { errorContext } from './util/errorContext';\n\n/**\n * A representation of any set of values over any amount of time. This is the most basic building block\n * of RxJS.\n *\n * @class Observable<T>\n */\nexport class Observable<T> implements Subscribable<T> {\n  /**\n   * @deprecated Internal implementation detail, do not use directly. Will be made internal in v8.\n   */\n  source: Observable<any> | undefined;\n\n  /**\n   * @deprecated Internal implementation detail, do not use directly. Will be made internal in v8.\n   */\n  operator: Operator<any, T> | undefined;\n\n  /**\n   * @constructor\n   * @param {Function} subscribe the function that is called when the Observable is\n   * initially subscribed to. This function is given a Subscriber, to which new values\n   * can be `next`ed, or an `error` method can be called to raise an error, or\n   * `complete` can be called to notify of a successful completion.\n   */\n  constructor(subscribe?: (this: Observable<T>, subscriber: Subscriber<T>) => TeardownLogic) {\n    if (subscribe) {\n      this._subscribe = subscribe;\n    }\n  }\n\n  // HACK: Since TypeScript inherits static properties too, we have to\n  // fight against TypeScript here so Subject can have a different static create signature\n  /**\n   * Creates a new Observable by calling the Observable constructor\n   * @owner Observable\n   * @method create\n   * @param {Function} subscribe? the subscriber function to be passed to the Observable constructor\n   * @return {Observable} a new observable\n   * @nocollapse\n   * @deprecated Use `new Observable()` instead. Will be removed in v8.\n   */\n  static create: (...args: any[]) => any = <T>(subscribe?: (subscriber: Subscriber<T>) => TeardownLogic) => {\n    return new Observable<T>(subscribe);\n  };\n\n  /**\n   * Creates a new Observable, with this Observable instance as the source, and the passed\n   * operator defined as the new observable's operator.\n   * @method lift\n   * @param operator the operator defining the operation to take on the observable\n   * @return a new observable with the Operator applied\n   * @deprecated Internal implementation detail, do not use directly. Will be made internal in v8.\n   * If you have implemented an operator using `lift`, it is recommended that you create an\n   * operator by simply returning `new Observable()` directly. See \"Creating new operators from\n   * scratch\" section here: https://rxjs.dev/guide/operators\n   */\n  lift<R>(operator?: Operator<T, R>): Observable<R> {\n    const observable = new Observable<R>();\n    observable.source = this;\n    observable.operator = operator;\n    return observable;\n  }\n\n  subscribe(observer?: Partial<Observer<T>>): Subscription;\n  subscribe(next: (value: T) => void): Subscription;\n  /** @deprecated Instead of passing separate callback arguments, use an observer argument. Signatures taking separate callback arguments will be removed in v8. Details: https://rxjs.dev/deprecations/subscribe-arguments */\n  subscribe(next?: ((value: T) => void) | null, error?: ((error: any) => void) | null, complete?: (() => void) | null): Subscription;\n  /**\n   * Invokes an execution of an Observable and registers Observer handlers for notifications it will emit.\n   *\n   * <span class=\"informal\">Use it when you have all these Observables, but still nothing is happening.</span>\n   *\n   * `subscribe` is not a regular operator, but a method that calls Observable's internal `subscribe` function. It\n   * might be for example a function that you passed to Observable's constructor, but most of the time it is\n   * a library implementation, which defines what will be emitted by an Observable, and when it be will emitted. This means\n   * that calling `subscribe` is actually the moment when Observable starts its work, not when it is created, as it is often\n   * the thought.\n   *\n   * Apart from starting the execution of an Observable, this method allows you to listen for values\n   * that an Observable emits, as well as for when it completes or errors. You can achieve this in two\n   * of the following ways.\n   *\n   * The first way is creating an object that implements {@link Observer} interface. It should have methods\n   * defined by that interface, but note that it should be just a regular JavaScript object, which you can create\n   * yourself in any way you want (ES6 class, classic function constructor, object literal etc.). In particular, do\n   * not attempt to use any RxJS implementation details to create Observers - you don't need them. Remember also\n   * that your object does not have to implement all methods. If you find yourself creating a method that doesn't\n   * do anything, you can simply omit it. Note however, if the `error` method is not provided and an error happens,\n   * it will be thrown asynchronously. Errors thrown asynchronously cannot be caught using `try`/`catch`. Instead,\n   * use the {@link onUnhandledError} configuration option or use a runtime handler (like `window.onerror` or\n   * `process.on('error)`) to be notified of unhandled errors. Because of this, it's recommended that you provide\n   * an `error` method to avoid missing thrown errors.\n   *\n   * The second way is to give up on Observer object altogether and simply provide callback functions in place of its methods.\n   * This means you can provide three functions as arguments to `subscribe`, where the first function is equivalent\n   * of a `next` method, the second of an `error` method and the third of a `complete` method. Just as in case of an Observer,\n   * if you do not need to listen for something, you can omit a function by passing `undefined` or `null`,\n   * since `subscribe` recognizes these functions by where they were placed in function call. When it comes\n   * to the `error` function, as with an Observer, if not provided, errors emitted by an Observable will be thrown asynchronously.\n   *\n   * You can, however, subscribe with no parameters at all. This may be the case where you're not interested in terminal events\n   * and you also handled emissions internally by using operators (e.g. using `tap`).\n   *\n   * Whichever style of calling `subscribe` you use, in both cases it returns a Subscription object.\n   * This object allows you to call `unsubscribe` on it, which in turn will stop the work that an Observable does and will clean\n   * up all resources that an Observable used. Note that cancelling a subscription will not call `complete` callback\n   * provided to `subscribe` function, which is reserved for a regular completion signal that comes from an Observable.\n   *\n   * Remember that callbacks provided to `subscribe` are not guaranteed to be called asynchronously.\n   * It is an Observable itself that decides when these functions will be called. For example {@link of}\n   * by default emits all its values synchronously. Always check documentation for how given Observable\n   * will behave when subscribed and if its default behavior can be modified with a `scheduler`.\n   *\n   * #### Examples\n   *\n   * Subscribe with an {@link guide/observer Observer}\n   *\n   * ```ts\n   * import { of } from 'rxjs';\n   *\n   * const sumObserver = {\n   *   sum: 0,\n   *   next(value) {\n   *     console.log('Adding: ' + value);\n   *     this.sum = this.sum + value;\n   *   },\n   *   error() {\n   *     // We actually could just remove this method,\n   *     // since we do not really care about errors right now.\n   *   },\n   *   complete() {\n   *     console.log('Sum equals: ' + this.sum);\n   *   }\n   * };\n   *\n   * of(1, 2, 3) // Synchronously emits 1, 2, 3 and then completes.\n   *   .subscribe(sumObserver);\n   *\n   * // Logs:\n   * // 'Adding: 1'\n   * // 'Adding: 2'\n   * // 'Adding: 3'\n   * // 'Sum equals: 6'\n   * ```\n   *\n   * Subscribe with functions ({@link deprecations/subscribe-arguments deprecated})\n   *\n   * ```ts\n   * import { of } from 'rxjs'\n   *\n   * let sum = 0;\n   *\n   * of(1, 2, 3).subscribe(\n   *   value => {\n   *     console.log('Adding: ' + value);\n   *     sum = sum + value;\n   *   },\n   *   undefined,\n   *   () => console.log('Sum equals: ' + sum)\n   * );\n   *\n   * // Logs:\n   * // 'Adding: 1'\n   * // 'Adding: 2'\n   * // 'Adding: 3'\n   * // 'Sum equals: 6'\n   * ```\n   *\n   * Cancel a subscription\n   *\n   * ```ts\n   * import { interval } from 'rxjs';\n   *\n   * const subscription = interval(1000).subscribe({\n   *   next(num) {\n   *     console.log(num)\n   *   },\n   *   complete() {\n   *     // Will not be called, even when cancelling subscription.\n   *     console.log('completed!');\n   *   }\n   * });\n   *\n   * setTimeout(() => {\n   *   subscription.unsubscribe();\n   *   console.log('unsubscribed!');\n   * }, 2500);\n   *\n   * // Logs:\n   * // 0 after 1s\n   * // 1 after 2s\n   * // 'unsubscribed!' after 2.5s\n   * ```\n   *\n   * @param {Observer|Function} observerOrNext (optional) Either an observer with methods to be called,\n   * or the first of three possible handlers, which is the handler for each value emitted from the subscribed\n   * Observable.\n   * @param {Function} error (optional) A handler for a terminal event resulting from an error. If no error handler is provided,\n   * the error will be thrown asynchronously as unhandled.\n   * @param {Function} complete (optional) A handler for a terminal event resulting from successful completion.\n   * @return {Subscription} a subscription reference to the registered handlers\n   * @method subscribe\n   */\n  subscribe(\n    observerOrNext?: Partial<Observer<T>> | ((value: T) => void) | null,\n    error?: ((error: any) => void) | null,\n    complete?: (() => void) | null\n  ): Subscription {\n    const subscriber = isSubscriber(observerOrNext) ? observerOrNext : new SafeSubscriber(observerOrNext, error, complete);\n\n    errorContext(() => {\n      const { operator, source } = this;\n      subscriber.add(\n        operator\n          ? // We're dealing with a subscription in the\n            // operator chain to one of our lifted operators.\n            operator.call(subscriber, source)\n          : source\n          ? // If `source` has a value, but `operator` does not, something that\n            // had intimate knowledge of our API, like our `Subject`, must have\n            // set it. We're going to just call `_subscribe` directly.\n            this._subscribe(subscriber)\n          : // In all other cases, we're likely wrapping a user-provided initializer\n            // function, so we need to catch errors and handle them appropriately.\n            this._trySubscribe(subscriber)\n      );\n    });\n\n    return subscriber;\n  }\n\n  /** @internal */\n  protected _trySubscribe(sink: Subscriber<T>): TeardownLogic {\n    try {\n      return this._subscribe(sink);\n    } catch (err) {\n      // We don't need to return anything in this case,\n      // because it's just going to try to `add()` to a subscription\n      // above.\n      sink.error(err);\n    }\n  }\n\n  /**\n   * Used as a NON-CANCELLABLE means of subscribing to an observable, for use with\n   * APIs that expect promises, like `async/await`. You cannot unsubscribe from this.\n   *\n   * **WARNING**: Only use this with observables you *know* will complete. If the source\n   * observable does not complete, you will end up with a promise that is hung up, and\n   * potentially all of the state of an async function hanging out in memory. To avoid\n   * this situation, look into adding something like {@link timeout}, {@link take},\n   * {@link takeWhile}, or {@link takeUntil} amongst others.\n   *\n   * #### Example\n   *\n   * ```ts\n   * import { interval, take } from 'rxjs';\n   *\n   * const source$ = interval(1000).pipe(take(4));\n   *\n   * async function getTotal() {\n   *   let total = 0;\n   *\n   *   await source$.forEach(value => {\n   *     total += value;\n   *     console.log('observable -> ' + value);\n   *   });\n   *\n   *   return total;\n   * }\n   *\n   * getTotal().then(\n   *   total => console.log('Total: ' + total)\n   * );\n   *\n   * // Expected:\n   * // 'observable -> 0'\n   * // 'observable -> 1'\n   * // 'observable -> 2'\n   * // 'observable -> 3'\n   * // 'Total: 6'\n   * ```\n   *\n   * @param next a handler for each value emitted by the observable\n   * @return a promise that either resolves on observable completion or\n   *  rejects with the handled error\n   */\n  forEach(next: (value: T) => void): Promise<void>;\n\n  /**\n   * @param next a handler for each value emitted by the observable\n   * @param promiseCtor a constructor function used to instantiate the Promise\n   * @return a promise that either resolves on observable completion or\n   *  rejects with the handled error\n   * @deprecated Passing a Promise constructor will no longer be available\n   * in upcoming versions of RxJS. This is because it adds weight to the library, for very\n   * little benefit. If you need this functionality, it is recommended that you either\n   * polyfill Promise, or you create an adapter to convert the returned native promise\n   * to whatever promise implementation you wanted. Will be removed in v8.\n   */\n  forEach(next: (value: T) => void, promiseCtor: PromiseConstructorLike): Promise<void>;\n\n  forEach(next: (value: T) => void, promiseCtor?: PromiseConstructorLike): Promise<void> {\n    promiseCtor = getPromiseCtor(promiseCtor);\n\n    return new promiseCtor<void>((resolve, reject) => {\n      const subscriber = new SafeSubscriber<T>({\n        next: (value) => {\n          try {\n            next(value);\n          } catch (err) {\n            reject(err);\n            subscriber.unsubscribe();\n          }\n        },\n        error: reject,\n        complete: resolve,\n      });\n      this.subscribe(subscriber);\n    }) as Promise<void>;\n  }\n\n  /** @internal */\n  protected _subscribe(subscriber: Subscriber<any>): TeardownLogic {\n    return this.source?.subscribe(subscriber);\n  }\n\n  /**\n   * An interop point defined by the es7-observable spec https://github.com/zenparsing/es-observable\n   * @method Symbol.observable\n   * @return {Observable} this instance of the observable\n   */\n  [Symbol_observable]() {\n    return this;\n  }\n\n  /* tslint:disable:max-line-length */\n  pipe(): Observable<T>;\n  pipe<A>(op1: OperatorFunction<T, A>): Observable<A>;\n  pipe<A, B>(op1: OperatorFunction<T, A>, op2: OperatorFunction<A, B>): Observable<B>;\n  pipe<A, B, C>(op1: OperatorFunction<T, A>, op2: OperatorFunction<A, B>, op3: OperatorFunction<B, C>): Observable<C>;\n  pipe<A, B, C, D>(\n    op1: OperatorFunction<T, A>,\n    op2: OperatorFunction<A, B>,\n    op3: OperatorFunction<B, C>,\n    op4: OperatorFunction<C, D>\n  ): Observable<D>;\n  pipe<A, B, C, D, E>(\n    op1: OperatorFunction<T, A>,\n    op2: OperatorFunction<A, B>,\n    op3: OperatorFunction<B, C>,\n    op4: OperatorFunction<C, D>,\n    op5: OperatorFunction<D, E>\n  ): Observable<E>;\n  pipe<A, B, C, D, E, F>(\n    op1: OperatorFunction<T, A>,\n    op2: OperatorFunction<A, B>,\n    op3: OperatorFunction<B, C>,\n    op4: OperatorFunction<C, D>,\n    op5: OperatorFunction<D, E>,\n    op6: OperatorFunction<E, F>\n  ): Observable<F>;\n  pipe<A, B, C, D, E, F, G>(\n    op1: OperatorFunction<T, A>,\n    op2: OperatorFunction<A, B>,\n    op3: OperatorFunction<B, C>,\n    op4: OperatorFunction<C, D>,\n    op5: OperatorFunction<D, E>,\n    op6: OperatorFunction<E, F>,\n    op7: OperatorFunction<F, G>\n  ): Observable<G>;\n  pipe<A, B, C, D, E, F, G, H>(\n    op1: OperatorFunction<T, A>,\n    op2: OperatorFunction<A, B>,\n    op3: OperatorFunction<B, C>,\n    op4: OperatorFunction<C, D>,\n    op5: OperatorFunction<D, E>,\n    op6: OperatorFunction<E, F>,\n    op7: OperatorFunction<F, G>,\n    op8: OperatorFunction<G, H>\n  ): Observable<H>;\n  pipe<A, B, C, D, E, F, G, H, I>(\n    op1: OperatorFunction<T, A>,\n    op2: OperatorFunction<A, B>,\n    op3: OperatorFunction<B, C>,\n    op4: OperatorFunction<C, D>,\n    op5: OperatorFunction<D, E>,\n    op6: OperatorFunction<E, F>,\n    op7: OperatorFunction<F, G>,\n    op8: OperatorFunction<G, H>,\n    op9: OperatorFunction<H, I>\n  ): Observable<I>;\n  pipe<A, B, C, D, E, F, G, H, I>(\n    op1: OperatorFunction<T, A>,\n    op2: OperatorFunction<A, B>,\n    op3: OperatorFunction<B, C>,\n    op4: OperatorFunction<C, D>,\n    op5: OperatorFunction<D, E>,\n    op6: OperatorFunction<E, F>,\n    op7: OperatorFunction<F, G>,\n    op8: OperatorFunction<G, H>,\n    op9: OperatorFunction<H, I>,\n    ...operations: OperatorFunction<any, any>[]\n  ): Observable<unknown>;\n  /* tslint:enable:max-line-length */\n\n  /**\n   * Used to stitch together functional operators into a chain.\n   * @method pipe\n   * @return {Observable} the Observable result of all of the operators having\n   * been called in the order they were passed in.\n   *\n   * ## Example\n   *\n   * ```ts\n   * import { interval, filter, map, scan } from 'rxjs';\n   *\n   * interval(1000)\n   *   .pipe(\n   *     filter(x => x % 2 === 0),\n   *     map(x => x + x),\n   *     scan((acc, x) => acc + x)\n   *   )\n   *   .subscribe(x => console.log(x));\n   * ```\n   */\n  pipe(...operations: OperatorFunction<any, any>[]): Observable<any> {\n    return pipeFromArray(operations)(this);\n  }\n\n  /* tslint:disable:max-line-length */\n  /** @deprecated Replaced with {@link firstValueFrom} and {@link lastValueFrom}. Will be removed in v8. Details: https://rxjs.dev/deprecations/to-promise */\n  toPromise(): Promise<T | undefined>;\n  /** @deprecated Replaced with {@link firstValueFrom} and {@link lastValueFrom}. Will be removed in v8. Details: https://rxjs.dev/deprecations/to-promise */\n  toPromise(PromiseCtor: typeof Promise): Promise<T | undefined>;\n  /** @deprecated Replaced with {@link firstValueFrom} and {@link lastValueFrom}. Will be removed in v8. Details: https://rxjs.dev/deprecations/to-promise */\n  toPromise(PromiseCtor: PromiseConstructorLike): Promise<T | undefined>;\n  /* tslint:enable:max-line-length */\n\n  /**\n   * Subscribe to this Observable and get a Promise resolving on\n   * `complete` with the last emission (if any).\n   *\n   * **WARNING**: Only use this with observables you *know* will complete. If the source\n   * observable does not complete, you will end up with a promise that is hung up, and\n   * potentially all of the state of an async function hanging out in memory. To avoid\n   * this situation, look into adding something like {@link timeout}, {@link take},\n   * {@link takeWhile}, or {@link takeUntil} amongst others.\n   *\n   * @method toPromise\n   * @param [promiseCtor] a constructor function used to instantiate\n   * the Promise\n   * @return A Promise that resolves with the last value emit, or\n   * rejects on an error. If there were no emissions, Promise\n   * resolves with undefined.\n   * @deprecated Replaced with {@link firstValueFrom} and {@link lastValueFrom}. Will be removed in v8. Details: https://rxjs.dev/deprecations/to-promise\n   */\n  toPromise(promiseCtor?: PromiseConstructorLike): Promise<T | undefined> {\n    promiseCtor = getPromiseCtor(promiseCtor);\n\n    return new promiseCtor((resolve, reject) => {\n      let value: T | undefined;\n      this.subscribe(\n        (x: T) => (value = x),\n        (err: any) => reject(err),\n        () => resolve(value)\n      );\n    }) as Promise<T | undefined>;\n  }\n}\n\n/**\n * Decides between a passed promise constructor from consuming code,\n * A default configured promise constructor, and the native promise\n * constructor and returns it. If nothing can be found, it will throw\n * an error.\n * @param promiseCtor The optional promise constructor to passed by consuming code\n */\nfunction getPromiseCtor(promiseCtor: PromiseConstructorLike | undefined) {\n  return promiseCtor ?? config.Promise ?? Promise;\n}\n\nfunction isObserver<T>(value: any): value is Observer<T> {\n  return value && isFunction(value.next) && isFunction(value.error) && isFunction(value.complete);\n}\n\nfunction isSubscriber<T>(value: any): value is Subscriber<T> {\n  return (value && value instanceof Subscriber) || (isObserver(value) && isSubscription(value));\n}\n","import { Subject } from './Subject';\nimport { TimestampProvider } from './types';\nimport { Subscriber } from './Subscriber';\nimport { Subscription } from './Subscription';\nimport { dateTimestampProvider } from './scheduler/dateTimestampProvider';\n\n/**\n * A variant of {@link Subject} that \"replays\" old values to new subscribers by emitting them when they first subscribe.\n *\n * `ReplaySubject` has an internal buffer that will store a specified number of values that it has observed. Like `Subject`,\n * `ReplaySubject` \"observes\" values by having them passed to its `next` method. When it observes a value, it will store that\n * value for a time determined by the configuration of the `ReplaySubject`, as passed to its constructor.\n *\n * When a new subscriber subscribes to the `ReplaySubject` instance, it will synchronously emit all values in its buffer in\n * a First-In-First-Out (FIFO) manner. The `ReplaySubject` will also complete, if it has observed completion; and it will\n * error if it has observed an error.\n *\n * There are two main configuration items to be concerned with:\n *\n * 1. `bufferSize` - This will determine how many items are stored in the buffer, defaults to infinite.\n * 2. `windowTime` - The amount of time to hold a value in the buffer before removing it from the buffer.\n *\n * Both configurations may exist simultaneously. So if you would like to buffer a maximum of 3 values, as long as the values\n * are less than 2 seconds old, you could do so with a `new ReplaySubject(3, 2000)`.\n *\n * ### Differences with BehaviorSubject\n *\n * `BehaviorSubject` is similar to `new ReplaySubject(1)`, with a couple fo exceptions:\n *\n * 1. `BehaviorSubject` comes \"primed\" with a single value upon construction.\n * 2. `ReplaySubject` will replay values, even after observing an error, where `BehaviorSubject` will not.\n *\n * @see {@link Subject}\n * @see {@link BehaviorSubject}\n * @see {@link shareReplay}\n */\nexport class ReplaySubject<T> extends Subject<T> {\n  private _buffer: (T | number)[] = [];\n  private _infiniteTimeWindow = true;\n\n  /**\n   * @param bufferSize The size of the buffer to replay on subscription\n   * @param windowTime The amount of time the buffered items will say buffered\n   * @param timestampProvider An object with a `now()` method that provides the current timestamp. This is used to\n   * calculate the amount of time something has been buffered.\n   */\n  constructor(\n    private _bufferSize = Infinity,\n    private _windowTime = Infinity,\n    private _timestampProvider: TimestampProvider = dateTimestampProvider\n  ) {\n    super();\n    this._infiniteTimeWindow = _windowTime === Infinity;\n    this._bufferSize = Math.max(1, _bufferSize);\n    this._windowTime = Math.max(1, _windowTime);\n  }\n\n  next(value: T): void {\n    const { isStopped, _buffer, _infiniteTimeWindow, _timestampProvider, _windowTime } = this;\n    if (!isStopped) {\n      _buffer.push(value);\n      !_infiniteTimeWindow && _buffer.push(_timestampProvider.now() + _windowTime);\n    }\n    this._trimBuffer();\n    super.next(value);\n  }\n\n  /** @internal */\n  protected _subscribe(subscriber: Subscriber<T>): Subscription {\n    this._throwIfClosed();\n    this._trimBuffer();\n\n    const subscription = this._innerSubscribe(subscriber);\n\n    const { _infiniteTimeWindow, _buffer } = this;\n    // We use a copy here, so reentrant code does not mutate our array while we're\n    // emitting it to a new subscriber.\n    const copy = _buffer.slice();\n    for (let i = 0; i < copy.length && !subscriber.closed; i += _infiniteTimeWindow ? 1 : 2) {\n      subscriber.next(copy[i] as T);\n    }\n\n    this._checkFinalizedStatuses(subscriber);\n\n    return subscription;\n  }\n\n  private _trimBuffer() {\n    const { _bufferSize, _timestampProvider, _buffer, _infiniteTimeWindow } = this;\n    // If we don't have an infinite buffer size, and we're over the length,\n    // use splice to truncate the old buffer values off. Note that we have to\n    // double the size for instances where we're not using an infinite time window\n    // because we're storing the values and the timestamps in the same array.\n    const adjustedBufferSize = (_infiniteTimeWindow ? 1 : 2) * _bufferSize;\n    _bufferSize < Infinity && adjustedBufferSize < _buffer.length && _buffer.splice(0, _buffer.length - adjustedBufferSize);\n\n    // Now, if we're not in an infinite time window, remove all values where the time is\n    // older than what is allowed.\n    if (!_infiniteTimeWindow) {\n      const now = _timestampProvider.now();\n      let last = 0;\n      // Search the array for the first timestamp that isn't expired and\n      // truncate the buffer up to that point.\n      for (let i = 1; i < _buffer.length && (_buffer[i] as number) <= now; i += 2) {\n        last = i;\n      }\n      last && _buffer.splice(0, last + 1);\n    }\n  }\n}\n","import { Action } from './scheduler/Action';\nimport { Subscription } from './Subscription';\nimport { SchedulerLike, SchedulerAction } from './types';\nimport { dateTimestampProvider } from './scheduler/dateTimestampProvider';\n\n/**\n * An execution context and a data structure to order tasks and schedule their\n * execution. Provides a notion of (potentially virtual) time, through the\n * `now()` getter method.\n *\n * Each unit of work in a Scheduler is called an `Action`.\n *\n * ```ts\n * class Scheduler {\n *   now(): number;\n *   schedule(work, delay?, state?): Subscription;\n * }\n * ```\n *\n * @class Scheduler\n * @deprecated Scheduler is an internal implementation detail of RxJS, and\n * should not be used directly. Rather, create your own class and implement\n * {@link SchedulerLike}. Will be made internal in v8.\n */\nexport class Scheduler implements SchedulerLike {\n  public static now: () => number = dateTimestampProvider.now;\n\n  constructor(private schedulerActionCtor: typeof Action, now: () => number = Scheduler.now) {\n    this.now = now;\n  }\n\n  /**\n   * A getter method that returns a number representing the current time\n   * (at the time this function was called) according to the scheduler's own\n   * internal clock.\n   * @return {number} A number that represents the current time. May or may not\n   * have a relation to wall-clock time. May or may not refer to a time unit\n   * (e.g. milliseconds).\n   */\n  public now: () => number;\n\n  /**\n   * Schedules a function, `work`, for execution. May happen at some point in\n   * the future, according to the `delay` parameter, if specified. May be passed\n   * some context object, `state`, which will be passed to the `work` function.\n   *\n   * The given arguments will be processed an stored as an Action object in a\n   * queue of actions.\n   *\n   * @param {function(state: ?T): ?Subscription} work A function representing a\n   * task, or some unit of work to be executed by the Scheduler.\n   * @param {number} [delay] Time to wait before executing the work, where the\n   * time unit is implicit and defined by the Scheduler itself.\n   * @param {T} [state] Some contextual data that the `work` function uses when\n   * called by the Scheduler.\n   * @return {Subscription} A subscription in order to be able to unsubscribe\n   * the scheduled work.\n   */\n  public schedule<T>(work: (this: SchedulerAction<T>, state?: T) => void, delay: number = 0, state?: T): Subscription {\n    return new this.schedulerActionCtor<T>(this, work).schedule(state, delay);\n  }\n}\n","import { Operator } from './Operator';\nimport { Observable } from './Observable';\nimport { Subscriber } from './Subscriber';\nimport { Subscription, EMPTY_SUBSCRIPTION } from './Subscription';\nimport { Observer, SubscriptionLike, TeardownLogic } from './types';\nimport { ObjectUnsubscribedError } from './util/ObjectUnsubscribedError';\nimport { arrRemove } from './util/arrRemove';\nimport { errorContext } from './util/errorContext';\n\n/**\n * A Subject is a special type of Observable that allows values to be\n * multicasted to many Observers. Subjects are like EventEmitters.\n *\n * Every Subject is an Observable and an Observer. You can subscribe to a\n * Subject, and you can call next to feed values as well as error and complete.\n */\nexport class Subject<T> extends Observable<T> implements SubscriptionLike {\n  closed = false;\n\n  private currentObservers: Observer<T>[] | null = null;\n\n  /** @deprecated Internal implementation detail, do not use directly. Will be made internal in v8. */\n  observers: Observer<T>[] = [];\n  /** @deprecated Internal implementation detail, do not use directly. Will be made internal in v8. */\n  isStopped = false;\n  /** @deprecated Internal implementation detail, do not use directly. Will be made internal in v8. */\n  hasError = false;\n  /** @deprecated Internal implementation detail, do not use directly. Will be made internal in v8. */\n  thrownError: any = null;\n\n  /**\n   * Creates a \"subject\" by basically gluing an observer to an observable.\n   *\n   * @nocollapse\n   * @deprecated Recommended you do not use. Will be removed at some point in the future. Plans for replacement still under discussion.\n   */\n  static create: (...args: any[]) => any = <T>(destination: Observer<T>, source: Observable<T>): AnonymousSubject<T> => {\n    return new AnonymousSubject<T>(destination, source);\n  };\n\n  constructor() {\n    // NOTE: This must be here to obscure Observable's constructor.\n    super();\n  }\n\n  /** @deprecated Internal implementation detail, do not use directly. Will be made internal in v8. */\n  lift<R>(operator: Operator<T, R>): Observable<R> {\n    const subject = new AnonymousSubject(this, this);\n    subject.operator = operator as any;\n    return subject as any;\n  }\n\n  /** @internal */\n  protected _throwIfClosed() {\n    if (this.closed) {\n      throw new ObjectUnsubscribedError();\n    }\n  }\n\n  next(value: T) {\n    errorContext(() => {\n      this._throwIfClosed();\n      if (!this.isStopped) {\n        if (!this.currentObservers) {\n          this.currentObservers = Array.from(this.observers);\n        }\n        for (const observer of this.currentObservers) {\n          observer.next(value);\n        }\n      }\n    });\n  }\n\n  error(err: any) {\n    errorContext(() => {\n      this._throwIfClosed();\n      if (!this.isStopped) {\n        this.hasError = this.isStopped = true;\n        this.thrownError = err;\n        const { observers } = this;\n        while (observers.length) {\n          observers.shift()!.error(err);\n        }\n      }\n    });\n  }\n\n  complete() {\n    errorContext(() => {\n      this._throwIfClosed();\n      if (!this.isStopped) {\n        this.isStopped = true;\n        const { observers } = this;\n        while (observers.length) {\n          observers.shift()!.complete();\n        }\n      }\n    });\n  }\n\n  unsubscribe() {\n    this.isStopped = this.closed = true;\n    this.observers = this.currentObservers = null!;\n  }\n\n  get observed() {\n    return this.observers?.length > 0;\n  }\n\n  /** @internal */\n  protected _trySubscribe(subscriber: Subscriber<T>): TeardownLogic {\n    this._throwIfClosed();\n    return super._trySubscribe(subscriber);\n  }\n\n  /** @internal */\n  protected _subscribe(subscriber: Subscriber<T>): Subscription {\n    this._throwIfClosed();\n    this._checkFinalizedStatuses(subscriber);\n    return this._innerSubscribe(subscriber);\n  }\n\n  /** @internal */\n  protected _innerSubscribe(subscriber: Subscriber<any>) {\n    const { hasError, isStopped, observers } = this;\n    if (hasError || isStopped) {\n      return EMPTY_SUBSCRIPTION;\n    }\n    this.currentObservers = null;\n    observers.push(subscriber);\n    return new Subscription(() => {\n      this.currentObservers = null;\n      arrRemove(observers, subscriber);\n    });\n  }\n\n  /** @internal */\n  protected _checkFinalizedStatuses(subscriber: Subscriber<any>) {\n    const { hasError, thrownError, isStopped } = this;\n    if (hasError) {\n      subscriber.error(thrownError);\n    } else if (isStopped) {\n      subscriber.complete();\n    }\n  }\n\n  /**\n   * Creates a new Observable with this Subject as the source. You can do this\n   * to create customize Observer-side logic of the Subject and conceal it from\n   * code that uses the Observable.\n   * @return {Observable} Observable that the Subject casts to\n   */\n  asObservable(): Observable<T> {\n    const observable: any = new Observable<T>();\n    observable.source = this;\n    return observable;\n  }\n}\n\n/**\n * @class AnonymousSubject<T>\n */\nexport class AnonymousSubject<T> extends Subject<T> {\n  constructor(\n    /** @deprecated Internal implementation detail, do not use directly. Will be made internal in v8. */\n    public destination?: Observer<T>,\n    source?: Observable<T>\n  ) {\n    super();\n    this.source = source;\n  }\n\n  next(value: T) {\n    this.destination?.next?.(value);\n  }\n\n  error(err: any) {\n    this.destination?.error?.(err);\n  }\n\n  complete() {\n    this.destination?.complete?.();\n  }\n\n  /** @internal */\n  protected _subscribe(subscriber: Subscriber<T>): Subscription {\n    return this.source?.subscribe(subscriber) ?? EMPTY_SUBSCRIPTION;\n  }\n}\n","import { isFunction } from './util/isFunction';\nimport { Observer, ObservableNotification } from './types';\nimport { isSubscription, Subscription } from './Subscription';\nimport { config } from './config';\nimport { reportUnhandledError } from './util/reportUnhandledError';\nimport { noop } from './util/noop';\nimport { nextNotification, errorNotification, COMPLETE_NOTIFICATION } from './NotificationFactories';\nimport { timeoutProvider } from './scheduler/timeoutProvider';\nimport { captureError } from './util/errorContext';\n\n/**\n * Implements the {@link Observer} interface and extends the\n * {@link Subscription} class. While the {@link Observer} is the public API for\n * consuming the values of an {@link Observable}, all Observers get converted to\n * a Subscriber, in order to provide Subscription-like capabilities such as\n * `unsubscribe`. Subscriber is a common type in RxJS, and crucial for\n * implementing operators, but it is rarely used as a public API.\n *\n * @class Subscriber<T>\n */\nexport class Subscriber<T> extends Subscription implements Observer<T> {\n  /**\n   * A static factory for a Subscriber, given a (potentially partial) definition\n   * of an Observer.\n   * @param next The `next` callback of an Observer.\n   * @param error The `error` callback of an\n   * Observer.\n   * @param complete The `complete` callback of an\n   * Observer.\n   * @return A Subscriber wrapping the (partially defined)\n   * Observer represented by the given arguments.\n   * @nocollapse\n   * @deprecated Do not use. Will be removed in v8. There is no replacement for this\n   * method, and there is no reason to be creating instances of `Subscriber` directly.\n   * If you have a specific use case, please file an issue.\n   */\n  static create<T>(next?: (x?: T) => void, error?: (e?: any) => void, complete?: () => void): Subscriber<T> {\n    return new SafeSubscriber(next, error, complete);\n  }\n\n  /** @deprecated Internal implementation detail, do not use directly. Will be made internal in v8. */\n  protected isStopped: boolean = false;\n  /** @deprecated Internal implementation detail, do not use directly. Will be made internal in v8. */\n  protected destination: Subscriber<any> | Observer<any>; // this `any` is the escape hatch to erase extra type param (e.g. R)\n\n  /**\n   * @deprecated Internal implementation detail, do not use directly. Will be made internal in v8.\n   * There is no reason to directly create an instance of Subscriber. This type is exported for typings reasons.\n   */\n  constructor(destination?: Subscriber<any> | Observer<any>) {\n    super();\n    if (destination) {\n      this.destination = destination;\n      // Automatically chain subscriptions together here.\n      // if destination is a Subscription, then it is a Subscriber.\n      if (isSubscription(destination)) {\n        destination.add(this);\n      }\n    } else {\n      this.destination = EMPTY_OBSERVER;\n    }\n  }\n\n  /**\n   * The {@link Observer} callback to receive notifications of type `next` from\n   * the Observable, with a value. The Observable may call this method 0 or more\n   * times.\n   * @param {T} [value] The `next` value.\n   * @return {void}\n   */\n  next(value?: T): void {\n    if (this.isStopped) {\n      handleStoppedNotification(nextNotification(value), this);\n    } else {\n      this._next(value!);\n    }\n  }\n\n  /**\n   * The {@link Observer} callback to receive notifications of type `error` from\n   * the Observable, with an attached `Error`. Notifies the Observer that\n   * the Observable has experienced an error condition.\n   * @param {any} [err] The `error` exception.\n   * @return {void}\n   */\n  error(err?: any): void {\n    if (this.isStopped) {\n      handleStoppedNotification(errorNotification(err), this);\n    } else {\n      this.isStopped = true;\n      this._error(err);\n    }\n  }\n\n  /**\n   * The {@link Observer} callback to receive a valueless notification of type\n   * `complete` from the Observable. Notifies the Observer that the Observable\n   * has finished sending push-based notifications.\n   * @return {void}\n   */\n  complete(): void {\n    if (this.isStopped) {\n      handleStoppedNotification(COMPLETE_NOTIFICATION, this);\n    } else {\n      this.isStopped = true;\n      this._complete();\n    }\n  }\n\n  unsubscribe(): void {\n    if (!this.closed) {\n      this.isStopped = true;\n      super.unsubscribe();\n      this.destination = null!;\n    }\n  }\n\n  protected _next(value: T): void {\n    this.destination.next(value);\n  }\n\n  protected _error(err: any): void {\n    try {\n      this.destination.error(err);\n    } finally {\n      this.unsubscribe();\n    }\n  }\n\n  protected _complete(): void {\n    try {\n      this.destination.complete();\n    } finally {\n      this.unsubscribe();\n    }\n  }\n}\n\n/**\n * This bind is captured here because we want to be able to have\n * compatibility with monoid libraries that tend to use a method named\n * `bind`. In particular, a library called Monio requires this.\n */\nconst _bind = Function.prototype.bind;\n\nfunction bind<Fn extends (...args: any[]) => any>(fn: Fn, thisArg: any): Fn {\n  return _bind.call(fn, thisArg);\n}\n\n/**\n * Internal optimization only, DO NOT EXPOSE.\n * @internal\n */\nclass ConsumerObserver<T> implements Observer<T> {\n  constructor(private partialObserver: Partial<Observer<T>>) {}\n\n  next(value: T): void {\n    const { partialObserver } = this;\n    if (partialObserver.next) {\n      try {\n        partialObserver.next(value);\n      } catch (error) {\n        handleUnhandledError(error);\n      }\n    }\n  }\n\n  error(err: any): void {\n    const { partialObserver } = this;\n    if (partialObserver.error) {\n      try {\n        partialObserver.error(err);\n      } catch (error) {\n        handleUnhandledError(error);\n      }\n    } else {\n      handleUnhandledError(err);\n    }\n  }\n\n  complete(): void {\n    const { partialObserver } = this;\n    if (partialObserver.complete) {\n      try {\n        partialObserver.complete();\n      } catch (error) {\n        handleUnhandledError(error);\n      }\n    }\n  }\n}\n\nexport class SafeSubscriber<T> extends Subscriber<T> {\n  constructor(\n    observerOrNext?: Partial<Observer<T>> | ((value: T) => void) | null,\n    error?: ((e?: any) => void) | null,\n    complete?: (() => void) | null\n  ) {\n    super();\n\n    let partialObserver: Partial<Observer<T>>;\n    if (isFunction(observerOrNext) || !observerOrNext) {\n      // The first argument is a function, not an observer. The next\n      // two arguments *could* be observers, or they could be empty.\n      partialObserver = {\n        next: (observerOrNext ?? undefined) as (((value: T) => void) | undefined),\n        error: error ?? undefined,\n        complete: complete ?? undefined,\n      };\n    } else {\n      // The first argument is a partial observer.\n      let context: any;\n      if (this && config.useDeprecatedNextContext) {\n        // This is a deprecated path that made `this.unsubscribe()` available in\n        // next handler functions passed to subscribe. This only exists behind a flag\n        // now, as it is *very* slow.\n        context = Object.create(observerOrNext);\n        context.unsubscribe = () => this.unsubscribe();\n        partialObserver = {\n          next: observerOrNext.next && bind(observerOrNext.next, context),\n          error: observerOrNext.error && bind(observerOrNext.error, context),\n          complete: observerOrNext.complete && bind(observerOrNext.complete, context),\n        };\n      } else {\n        // The \"normal\" path. Just use the partial observer directly.\n        partialObserver = observerOrNext;\n      }\n    }\n\n    // Wrap the partial observer to ensure it's a full observer, and\n    // make sure proper error handling is accounted for.\n    this.destination = new ConsumerObserver(partialObserver);\n  }\n}\n\nfunction handleUnhandledError(error: any) {\n  if (config.useDeprecatedSynchronousErrorHandling) {\n    captureError(error);\n  } else {\n    // Ideal path, we report this as an unhandled error,\n    // which is thrown on a new call stack.\n    reportUnhandledError(error);\n  }\n}\n\n/**\n * An error handler used when no error handler was supplied\n * to the SafeSubscriber -- meaning no error handler was supplied\n * do the `subscribe` call on our observable.\n * @param err The error to handle\n */\nfunction defaultErrorHandler(err: any) {\n  throw err;\n}\n\n/**\n * A handler for notifications that cannot be sent to a stopped subscriber.\n * @param notification The notification being sent\n * @param subscriber The stopped subscriber\n */\nfunction handleStoppedNotification(notification: ObservableNotification<any>, subscriber: Subscriber<any>) {\n  const { onStoppedNotification } = config;\n  onStoppedNotification && timeoutProvider.setTimeout(() => onStoppedNotification(notification, subscriber));\n}\n\n/**\n * The observer used as a stub for subscriptions where the user did not\n * pass any arguments to `subscribe`. Comes with the default error handling\n * behavior.\n */\nexport const EMPTY_OBSERVER: Readonly<Observer<any>> & { closed: true } = {\n  closed: true,\n  next: noop,\n  error: defaultErrorHandler,\n  complete: noop,\n};\n","import { isFunction } from './util/isFunction';\nimport { UnsubscriptionError } from './util/UnsubscriptionError';\nimport { SubscriptionLike, TeardownLogic, Unsubscribable } from './types';\nimport { arrRemove } from './util/arrRemove';\n\n/**\n * Represents a disposable resource, such as the execution of an Observable. A\n * Subscription has one important method, `unsubscribe`, that takes no argument\n * and just disposes the resource held by the subscription.\n *\n * Additionally, subscriptions may be grouped together through the `add()`\n * method, which will attach a child Subscription to the current Subscription.\n * When a Subscription is unsubscribed, all its children (and its grandchildren)\n * will be unsubscribed as well.\n *\n * @class Subscription\n */\nexport class Subscription implements SubscriptionLike {\n  /** @nocollapse */\n  public static EMPTY = (() => {\n    const empty = new Subscription();\n    empty.closed = true;\n    return empty;\n  })();\n\n  /**\n   * A flag to indicate whether this Subscription has already been unsubscribed.\n   */\n  public closed = false;\n\n  private _parentage: Subscription[] | Subscription | null = null;\n\n  /**\n   * The list of registered finalizers to execute upon unsubscription. Adding and removing from this\n   * list occurs in the {@link #add} and {@link #remove} methods.\n   */\n  private _finalizers: Exclude<TeardownLogic, void>[] | null = null;\n\n  /**\n   * @param initialTeardown A function executed first as part of the finalization\n   * process that is kicked off when {@link #unsubscribe} is called.\n   */\n  constructor(private initialTeardown?: () => void) {}\n\n  /**\n   * Disposes the resources held by the subscription. May, for instance, cancel\n   * an ongoing Observable execution or cancel any other type of work that\n   * started when the Subscription was created.\n   * @return {void}\n   */\n  unsubscribe(): void {\n    let errors: any[] | undefined;\n\n    if (!this.closed) {\n      this.closed = true;\n\n      // Remove this from it's parents.\n      const { _parentage } = this;\n      if (_parentage) {\n        this._parentage = null;\n        if (Array.isArray(_parentage)) {\n          for (const parent of _parentage) {\n            parent.remove(this);\n          }\n        } else {\n          _parentage.remove(this);\n        }\n      }\n\n      const { initialTeardown: initialFinalizer } = this;\n      if (isFunction(initialFinalizer)) {\n        try {\n          initialFinalizer();\n        } catch (e) {\n          errors = e instanceof UnsubscriptionError ? e.errors : [e];\n        }\n      }\n\n      const { _finalizers } = this;\n      if (_finalizers) {\n        this._finalizers = null;\n        for (const finalizer of _finalizers) {\n          try {\n            execFinalizer(finalizer);\n          } catch (err) {\n            errors = errors ?? [];\n            if (err instanceof UnsubscriptionError) {\n              errors = [...errors, ...err.errors];\n            } else {\n              errors.push(err);\n            }\n          }\n        }\n      }\n\n      if (errors) {\n        throw new UnsubscriptionError(errors);\n      }\n    }\n  }\n\n  /**\n   * Adds a finalizer to this subscription, so that finalization will be unsubscribed/called\n   * when this subscription is unsubscribed. If this subscription is already {@link #closed},\n   * because it has already been unsubscribed, then whatever finalizer is passed to it\n   * will automatically be executed (unless the finalizer itself is also a closed subscription).\n   *\n   * Closed Subscriptions cannot be added as finalizers to any subscription. Adding a closed\n   * subscription to a any subscription will result in no operation. (A noop).\n   *\n   * Adding a subscription to itself, or adding `null` or `undefined` will not perform any\n   * operation at all. (A noop).\n   *\n   * `Subscription` instances that are added to this instance will automatically remove themselves\n   * if they are unsubscribed. Functions and {@link Unsubscribable} objects that you wish to remove\n   * will need to be removed manually with {@link #remove}\n   *\n   * @param teardown The finalization logic to add to this subscription.\n   */\n  add(teardown: TeardownLogic): void {\n    // Only add the finalizer if it's not undefined\n    // and don't add a subscription to itself.\n    if (teardown && teardown !== this) {\n      if (this.closed) {\n        // If this subscription is already closed,\n        // execute whatever finalizer is handed to it automatically.\n        execFinalizer(teardown);\n      } else {\n        if (teardown instanceof Subscription) {\n          // We don't add closed subscriptions, and we don't add the same subscription\n          // twice. Subscription unsubscribe is idempotent.\n          if (teardown.closed || teardown._hasParent(this)) {\n            return;\n          }\n          teardown._addParent(this);\n        }\n        (this._finalizers = this._finalizers ?? []).push(teardown);\n      }\n    }\n  }\n\n  /**\n   * Checks to see if a this subscription already has a particular parent.\n   * This will signal that this subscription has already been added to the parent in question.\n   * @param parent the parent to check for\n   */\n  private _hasParent(parent: Subscription) {\n    const { _parentage } = this;\n    return _parentage === parent || (Array.isArray(_parentage) && _parentage.includes(parent));\n  }\n\n  /**\n   * Adds a parent to this subscription so it can be removed from the parent if it\n   * unsubscribes on it's own.\n   *\n   * NOTE: THIS ASSUMES THAT {@link _hasParent} HAS ALREADY BEEN CHECKED.\n   * @param parent The parent subscription to add\n   */\n  private _addParent(parent: Subscription) {\n    const { _parentage } = this;\n    this._parentage = Array.isArray(_parentage) ? (_parentage.push(parent), _parentage) : _parentage ? [_parentage, parent] : parent;\n  }\n\n  /**\n   * Called on a child when it is removed via {@link #remove}.\n   * @param parent The parent to remove\n   */\n  private _removeParent(parent: Subscription) {\n    const { _parentage } = this;\n    if (_parentage === parent) {\n      this._parentage = null;\n    } else if (Array.isArray(_parentage)) {\n      arrRemove(_parentage, parent);\n    }\n  }\n\n  /**\n   * Removes a finalizer from this subscription that was previously added with the {@link #add} method.\n   *\n   * Note that `Subscription` instances, when unsubscribed, will automatically remove themselves\n   * from every other `Subscription` they have been added to. This means that using the `remove` method\n   * is not a common thing and should be used thoughtfully.\n   *\n   * If you add the same finalizer instance of a function or an unsubscribable object to a `Subcription` instance\n   * more than once, you will need to call `remove` the same number of times to remove all instances.\n   *\n   * All finalizer instances are removed to free up memory upon unsubscription.\n   *\n   * @param teardown The finalizer to remove from this subscription\n   */\n  remove(teardown: Exclude<TeardownLogic, void>): void {\n    const { _finalizers } = this;\n    _finalizers && arrRemove(_finalizers, teardown);\n\n    if (teardown instanceof Subscription) {\n      teardown._removeParent(this);\n    }\n  }\n}\n\nexport const EMPTY_SUBSCRIPTION = Subscription.EMPTY;\n\nexport function isSubscription(value: any): value is Subscription {\n  return (\n    value instanceof Subscription ||\n    (value && 'closed' in value && isFunction(value.remove) && isFunction(value.add) && isFunction(value.unsubscribe))\n  );\n}\n\nfunction execFinalizer(finalizer: Unsubscribable | (() => void)) {\n  if (isFunction(finalizer)) {\n    finalizer();\n  } else {\n    finalizer.unsubscribe();\n  }\n}\n","import { Subscriber } from './Subscriber';\nimport { ObservableNotification } from './types';\n\n/**\n * The {@link GlobalConfig} object for RxJS. It is used to configure things\n * like how to react on unhandled errors.\n */\nexport const config: GlobalConfig = {\n  onUnhandledError: null,\n  onStoppedNotification: null,\n  Promise: undefined,\n  useDeprecatedSynchronousErrorHandling: false,\n  useDeprecatedNextContext: false,\n};\n\n/**\n * The global configuration object for RxJS, used to configure things\n * like how to react on unhandled errors. Accessible via {@link config}\n * object.\n */\nexport interface GlobalConfig {\n  /**\n   * A registration point for unhandled errors from RxJS. These are errors that\n   * cannot were not handled by consuming code in the usual subscription path. For\n   * example, if you have this configured, and you subscribe to an observable without\n   * providing an error handler, errors from that subscription will end up here. This\n   * will _always_ be called asynchronously on another job in the runtime. This is because\n   * we do not want errors thrown in this user-configured handler to interfere with the\n   * behavior of the library.\n   */\n  onUnhandledError: ((err: any) => void) | null;\n\n  /**\n   * A registration point for notifications that cannot be sent to subscribers because they\n   * have completed, errored or have been explicitly unsubscribed. By default, next, complete\n   * and error notifications sent to stopped subscribers are noops. However, sometimes callers\n   * might want a different behavior. For example, with sources that attempt to report errors\n   * to stopped subscribers, a caller can configure RxJS to throw an unhandled error instead.\n   * This will _always_ be called asynchronously on another job in the runtime. This is because\n   * we do not want errors thrown in this user-configured handler to interfere with the\n   * behavior of the library.\n   */\n  onStoppedNotification: ((notification: ObservableNotification<any>, subscriber: Subscriber<any>) => void) | null;\n\n  /**\n   * The promise constructor used by default for {@link Observable#toPromise toPromise} and {@link Observable#forEach forEach}\n   * methods.\n   *\n   * @deprecated As of version 8, RxJS will no longer support this sort of injection of a\n   * Promise constructor. If you need a Promise implementation other than native promises,\n   * please polyfill/patch Promise as you see appropriate. Will be removed in v8.\n   */\n  Promise?: PromiseConstructorLike;\n\n  /**\n   * If true, turns on synchronous error rethrowing, which is a deprecated behavior\n   * in v6 and higher. This behavior enables bad patterns like wrapping a subscribe\n   * call in a try/catch block. It also enables producer interference, a nasty bug\n   * where a multicast can be broken for all observers by a downstream consumer with\n   * an unhandled error. DO NOT USE THIS FLAG UNLESS IT'S NEEDED TO BUY TIME\n   * FOR MIGRATION REASONS.\n   *\n   * @deprecated As of version 8, RxJS will no longer support synchronous throwing\n   * of unhandled errors. All errors will be thrown on a separate call stack to prevent bad\n   * behaviors described above. Will be removed in v8.\n   */\n  useDeprecatedSynchronousErrorHandling: boolean;\n\n  /**\n   * If true, enables an as-of-yet undocumented feature from v5: The ability to access\n   * `unsubscribe()` via `this` context in `next` functions created in observers passed\n   * to `subscribe`.\n   *\n   * This is being removed because the performance was severely problematic, and it could also cause\n   * issues when types other than POJOs are passed to subscribe as subscribers, as they will likely have\n   * their `this` context overwritten.\n   *\n   * @deprecated As of version 8, RxJS will no longer support altering the\n   * context of next functions provided as part of an observer to Subscribe. Instead,\n   * you will have access to a subscription or a signal or token that will allow you to do things like\n   * unsubscribe and test closed status. Will be removed in v8.\n   */\n  useDeprecatedNextContext: boolean;\n}\n","import { Observable } from './Observable';\nimport { EmptyError } from './util/EmptyError';\nimport { SafeSubscriber } from './Subscriber';\n\nexport interface FirstValueFromConfig<T> {\n  defaultValue: T;\n}\n\nexport function firstValueFrom<T, D>(source: Observable<T>, config: FirstValueFromConfig<D>): Promise<T | D>;\nexport function firstValueFrom<T>(source: Observable<T>): Promise<T>;\n\n/**\n * Converts an observable to a promise by subscribing to the observable,\n * and returning a promise that will resolve as soon as the first value\n * arrives from the observable. The subscription will then be closed.\n *\n * If the observable stream completes before any values were emitted, the\n * returned promise will reject with {@link EmptyError} or will resolve\n * with the default value if a default was specified.\n *\n * If the observable stream emits an error, the returned promise will reject\n * with that error.\n *\n * **WARNING**: Only use this with observables you *know* will emit at least one value,\n * *OR* complete. If the source observable does not emit one value or complete, you will\n * end up with a promise that is hung up, and potentially all of the state of an\n * async function hanging out in memory. To avoid this situation, look into adding\n * something like {@link timeout}, {@link take}, {@link takeWhile}, or {@link takeUntil}\n * amongst others.\n *\n * ## Example\n *\n * Wait for the first value from a stream and emit it from a promise in\n * an async function\n *\n * ```ts\n * import { interval, firstValueFrom } from 'rxjs';\n *\n * async function execute() {\n *   const source$ = interval(2000);\n *   const firstNumber = await firstValueFrom(source$);\n *   console.log(`The first number is ${ firstNumber }`);\n * }\n *\n * execute();\n *\n * // Expected output:\n * // 'The first number is 0'\n * ```\n *\n * @see {@link lastValueFrom}\n *\n * @param source the observable to convert to a promise\n * @param config a configuration object to define the `defaultValue` to use if the source completes without emitting a value\n */\nexport function firstValueFrom<T, D>(source: Observable<T>, config?: FirstValueFromConfig<D>): Promise<T | D> {\n  const hasConfig = typeof config === 'object';\n  return new Promise<T | D>((resolve, reject) => {\n    const subscriber = new SafeSubscriber<T>({\n      next: (value) => {\n        resolve(value);\n        subscriber.unsubscribe();\n      },\n      error: reject,\n      complete: () => {\n        if (hasConfig) {\n          resolve(config!.defaultValue);\n        } else {\n          reject(new EmptyError());\n        }\n      },\n    });\n    source.subscribe(subscriber);\n  });\n}\n","import { Observable } from './Observable';\nimport { EmptyError } from './util/EmptyError';\n\nexport interface LastValueFromConfig<T> {\n  defaultValue: T;\n}\n\nexport function lastValueFrom<T, D>(source: Observable<T>, config: LastValueFromConfig<D>): Promise<T | D>;\nexport function lastValueFrom<T>(source: Observable<T>): Promise<T>;\n\n/**\n * Converts an observable to a promise by subscribing to the observable,\n * waiting for it to complete, and resolving the returned promise with the\n * last value from the observed stream.\n *\n * If the observable stream completes before any values were emitted, the\n * returned promise will reject with {@link EmptyError} or will resolve\n * with the default value if a default was specified.\n *\n * If the observable stream emits an error, the returned promise will reject\n * with that error.\n *\n * **WARNING**: Only use this with observables you *know* will complete. If the source\n * observable does not complete, you will end up with a promise that is hung up, and\n * potentially all of the state of an async function hanging out in memory. To avoid\n * this situation, look into adding something like {@link timeout}, {@link take},\n * {@link takeWhile}, or {@link takeUntil} amongst others.\n *\n * ## Example\n *\n * Wait for the last value from a stream and emit it from a promise in\n * an async function\n *\n * ```ts\n * import { interval, take, lastValueFrom } from 'rxjs';\n *\n * async function execute() {\n *   const source$ = interval(2000).pipe(take(10));\n *   const finalNumber = await lastValueFrom(source$);\n *   console.log(`The final number is ${ finalNumber }`);\n * }\n *\n * execute();\n *\n * // Expected output:\n * // 'The final number is 9'\n * ```\n *\n * @see {@link firstValueFrom}\n *\n * @param source the observable to convert to a promise\n * @param config a configuration object to define the `defaultValue` to use if the source completes without emitting a value\n */\nexport function lastValueFrom<T, D>(source: Observable<T>, config?: LastValueFromConfig<D>): Promise<T | D> {\n  const hasConfig = typeof config === 'object';\n  return new Promise<T | D>((resolve, reject) => {\n    let _hasValue = false;\n    let _value: T;\n    source.subscribe({\n      next: (value) => {\n        _value = value;\n        _hasValue = true;\n      },\n      error: reject,\n      complete: () => {\n        if (_hasValue) {\n          resolve(_value);\n        } else if (hasConfig) {\n          resolve(config!.defaultValue);\n        } else {\n          reject(new EmptyError());\n        }\n      },\n    });\n  });\n}\n","import { Subject } from '../Subject';\nimport { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { Subscription } from '../Subscription';\nimport { refCount as higherOrderRefCount } from '../operators/refCount';\nimport { createOperatorSubscriber } from '../operators/OperatorSubscriber';\nimport { hasLift } from '../util/lift';\n\n/**\n * @class ConnectableObservable<T>\n * @deprecated Will be removed in v8. Use {@link connectable} to create a connectable observable.\n * If you are using the `refCount` method of `ConnectableObservable`, use the {@link share} operator\n * instead.\n * Details: https://rxjs.dev/deprecations/multicasting\n */\nexport class ConnectableObservable<T> extends Observable<T> {\n  protected _subject: Subject<T> | null = null;\n  protected _refCount: number = 0;\n  protected _connection: Subscription | null = null;\n\n  /**\n   * @param source The source observable\n   * @param subjectFactory The factory that creates the subject used internally.\n   * @deprecated Will be removed in v8. Use {@link connectable} to create a connectable observable.\n   * `new ConnectableObservable(source, factory)` is equivalent to\n   * `connectable(source, { connector: factory })`.\n   * When the `refCount()` method is needed, the {@link share} operator should be used instead:\n   * `new ConnectableObservable(source, factory).refCount()` is equivalent to\n   * `source.pipe(share({ connector: factory }))`.\n   * Details: https://rxjs.dev/deprecations/multicasting\n   */\n  constructor(public source: Observable<T>, protected subjectFactory: () => Subject<T>) {\n    super();\n    // If we have lift, monkey patch that here. This is done so custom observable\n    // types will compose through multicast. Otherwise the resulting observable would\n    // simply be an instance of `ConnectableObservable`.\n    if (hasLift(source)) {\n      this.lift = source.lift;\n    }\n  }\n\n  /** @internal */\n  protected _subscribe(subscriber: Subscriber<T>) {\n    return this.getSubject().subscribe(subscriber);\n  }\n\n  protected getSubject(): Subject<T> {\n    const subject = this._subject;\n    if (!subject || subject.isStopped) {\n      this._subject = this.subjectFactory();\n    }\n    return this._subject!;\n  }\n\n  protected _teardown() {\n    this._refCount = 0;\n    const { _connection } = this;\n    this._subject = this._connection = null;\n    _connection?.unsubscribe();\n  }\n\n  /**\n   * @deprecated {@link ConnectableObservable} will be removed in v8. Use {@link connectable} instead.\n   * Details: https://rxjs.dev/deprecations/multicasting\n   */\n  connect(): Subscription {\n    let connection = this._connection;\n    if (!connection) {\n      connection = this._connection = new Subscription();\n      const subject = this.getSubject();\n      connection.add(\n        this.source.subscribe(\n          createOperatorSubscriber(\n            subject as any,\n            undefined,\n            () => {\n              this._teardown();\n              subject.complete();\n            },\n            (err) => {\n              this._teardown();\n              subject.error(err);\n            },\n            () => this._teardown()\n          )\n        )\n      );\n\n      if (connection.closed) {\n        this._connection = null;\n        connection = Subscription.EMPTY;\n      }\n    }\n    return connection;\n  }\n\n  /**\n   * @deprecated {@link ConnectableObservable} will be removed in v8. Use the {@link share} operator instead.\n   * Details: https://rxjs.dev/deprecations/multicasting\n   */\n  refCount(): Observable<T> {\n    return higherOrderRefCount()(this) as Observable<T>;\n  }\n}\n","/* @prettier */\nimport { SchedulerLike } from '../types';\nimport { Observable } from '../Observable';\nimport { bindCallbackInternals } from './bindCallbackInternals';\n\nexport function bindCallback(\n  callbackFunc: (...args: any[]) => void,\n  resultSelector: (...args: any[]) => any,\n  scheduler?: SchedulerLike\n): (...args: any[]) => Observable<any>;\n\n// args is the arguments array and we push the callback on the rest tuple since the rest parameter must be last (only item) in a parameter list\nexport function bindCallback<A extends readonly unknown[], R extends readonly unknown[]>(\n  callbackFunc: (...args: [...A, (...res: R) => void]) => void,\n  schedulerLike?: SchedulerLike\n): (...arg: A) => Observable<R extends [] ? void : R extends [any] ? R[0] : R>;\n\n/**\n * Converts a callback API to a function that returns an Observable.\n *\n * <span class=\"informal\">Give it a function `f` of type `f(x, callback)` and\n * it will return a function `g` that when called as `g(x)` will output an\n * Observable.</span>\n *\n * `bindCallback` is not an operator because its input and output are not\n * Observables. The input is a function `func` with some parameters. The\n * last parameter must be a callback function that `func` calls when it is\n * done.\n *\n * The output of `bindCallback` is a function that takes the same parameters\n * as `func`, except the last one (the callback). When the output function\n * is called with arguments it will return an Observable. If function `func`\n * calls its callback with one argument, the Observable will emit that value.\n * If on the other hand the callback is called with multiple values the resulting\n * Observable will emit an array with said values as arguments.\n *\n * It is **very important** to remember that input function `func` is not called\n * when the output function is, but rather when the Observable returned by the output\n * function is subscribed. This means if `func` makes an AJAX request, that request\n * will be made every time someone subscribes to the resulting Observable, but not before.\n *\n * The last optional parameter - `scheduler` - can be used to control when the call\n * to `func` happens after someone subscribes to Observable, as well as when results\n * passed to callback will be emitted. By default, the subscription to an Observable calls `func`\n * synchronously, but using {@link asyncScheduler} as the last parameter will defer the call to `func`,\n * just like wrapping the call in `setTimeout` with a timeout of `0` would. If you were to use the async Scheduler\n * and call `subscribe` on the output Observable, all function calls that are currently executing\n * will end before `func` is invoked.\n *\n * By default, results passed to the callback are emitted immediately after `func` invokes the callback.\n * In particular, if the callback is called synchronously, then the subscription of the resulting Observable\n * will call the `next` function synchronously as well.  If you want to defer that call,\n * you may use {@link asyncScheduler} just as before.  This means that by using `Scheduler.async` you can\n * ensure that `func` always calls its callback asynchronously, thus avoiding terrifying Zalgo.\n *\n * Note that the Observable created by the output function will always emit a single value\n * and then complete immediately. If `func` calls the callback multiple times, values from subsequent\n * calls will not appear in the stream. If you need to listen for multiple calls,\n *  you probably want to use {@link fromEvent} or {@link fromEventPattern} instead.\n *\n * If `func` depends on some context (`this` property) and is not already bound, the context of `func`\n * will be the context that the output function has at call time. In particular, if `func`\n * is called as a method of some objec and if `func` is not already bound, in order to preserve the context\n * it is recommended that the context of the output function is set to that object as well.\n *\n * If the input function calls its callback in the \"node style\" (i.e. first argument to callback is\n * optional error parameter signaling whether the call failed or not), {@link bindNodeCallback}\n * provides convenient error handling and probably is a better choice.\n * `bindCallback` will treat such functions the same as any other and error parameters\n * (whether passed or not) will always be interpreted as regular callback argument.\n *\n * ## Examples\n *\n * ### Convert jQuery's getJSON to an Observable API\n * ```ts\n * import { bindCallback } from 'rxjs';\n * import * as jQuery from 'jquery';\n *\n * // Suppose we have jQuery.getJSON('/my/url', callback)\n * const getJSONAsObservable = bindCallback(jQuery.getJSON);\n * const result = getJSONAsObservable('/my/url');\n * result.subscribe(x => console.log(x), e => console.error(e));\n * ```\n *\n * ### Receive an array of arguments passed to a callback\n * ```ts\n * import { bindCallback } from 'rxjs';\n *\n * const someFunction = (cb) => {\n *   cb(5, 'some string', {someProperty: 'someValue'})\n * };\n *\n * const boundSomeFunction = bindCallback(someFunction);\n * boundSomeFunction(12, 10).subscribe(values => {\n *   console.log(values); // [22, 2]\n * });\n * ```\n *\n * ### Compare behaviour with and without async Scheduler\n * ```ts\n * import { bindCallback, asyncScheduler } from 'rxjs';\n *\n * function iCallMyCallbackSynchronously(cb) {\n *   cb();\n * }\n *\n * const boundSyncFn = bindCallback(iCallMyCallbackSynchronously);\n * const boundAsyncFn = bindCallback(iCallMyCallbackSynchronously, null, asyncScheduler);\n *\n * boundSyncFn().subscribe(() => console.log('I was sync!'));\n * boundAsyncFn().subscribe(() => console.log('I was async!'));\n * console.log('This happened...');\n *\n * // Logs:\n * // I was sync!\n * // This happened...\n * // I was async!\n * ```\n *\n * ### Use bindCallback on an object method\n * ```ts\n * import { bindCallback } from 'rxjs';\n *\n * const boundMethod = bindCallback(someObject.methodWithCallback);\n * boundMethod\n *   .call(someObject) // make sure methodWithCallback has access to someObject\n *   .subscribe(subscriber);\n * ```\n *\n * @see {@link bindNodeCallback}\n * @see {@link from}\n *\n * @param {function} func A function with a callback as the last parameter.\n * @param {SchedulerLike} [scheduler] The scheduler on which to schedule the\n * callbacks.\n * @return {function(...params: *): Observable} A function which returns the\n * Observable that delivers the same values the callback would deliver.\n */\nexport function bindCallback(\n  callbackFunc: (...args: [...any[], (...res: any) => void]) => void,\n  resultSelector?: ((...args: any[]) => any) | SchedulerLike,\n  scheduler?: SchedulerLike\n): (...args: any[]) => Observable<unknown> {\n  return bindCallbackInternals(false, callbackFunc, resultSelector, scheduler);\n}\n","import { SchedulerLike } from '../types';\nimport { isScheduler } from '../util/isScheduler';\nimport { Observable } from '../Observable';\nimport { subscribeOn } from '../operators/subscribeOn';\nimport { mapOneOrManyArgs } from '../util/mapOneOrManyArgs';\nimport { observeOn } from '../operators/observeOn';\nimport { AsyncSubject } from '../AsyncSubject';\n\nexport function bindCallbackInternals(\n  isNodeStyle: boolean,\n  callbackFunc: any,\n  resultSelector?: any,\n  scheduler?: SchedulerLike\n): (...args: any[]) => Observable<unknown> {\n  if (resultSelector) {\n    if (isScheduler(resultSelector)) {\n      scheduler = resultSelector;\n    } else {\n      // The user provided a result selector.\n      return function (this: any, ...args: any[]) {\n        return (bindCallbackInternals(isNodeStyle, callbackFunc, scheduler) as any)\n          .apply(this, args)\n          .pipe(mapOneOrManyArgs(resultSelector as any));\n      };\n    }\n  }\n\n  // If a scheduler was passed, use our `subscribeOn` and `observeOn` operators\n  // to compose that behavior for the user.\n  if (scheduler) {\n    return function (this: any, ...args: any[]) {\n      return (bindCallbackInternals(isNodeStyle, callbackFunc) as any)\n        .apply(this, args)\n        .pipe(subscribeOn(scheduler!), observeOn(scheduler!));\n    };\n  }\n\n  return function (this: any, ...args: any[]): Observable<any> {\n    // We're using AsyncSubject, because it emits when it completes,\n    // and it will play the value to all late-arriving subscribers.\n    const subject = new AsyncSubject<any>();\n\n    // If this is true, then we haven't called our function yet.\n    let uninitialized = true;\n    return new Observable((subscriber) => {\n      // Add our subscriber to the subject.\n      const subs = subject.subscribe(subscriber);\n\n      if (uninitialized) {\n        uninitialized = false;\n        // We're going to execute the bound function\n        // This bit is to signal that we are hitting the callback asychronously.\n        // Because we don't have any anti-\"Zalgo\" gaurantees with whatever\n        // function we are handed, we use this bit to figure out whether or not\n        // we are getting hit in a callback synchronously during our call.\n        let isAsync = false;\n\n        // This is used to signal that the callback completed synchronously.\n        let isComplete = false;\n\n        // Call our function that has a callback. If at any time during this\n        // call, an error is thrown, it will be caught by the Observable\n        // subscription process and sent to the consumer.\n        callbackFunc.apply(\n          // Pass the appropriate `this` context.\n          this,\n          [\n            // Pass the arguments.\n            ...args,\n            // And our callback handler.\n            (...results: any[]) => {\n              if (isNodeStyle) {\n                // If this is a node callback, shift the first value off of the\n                // results and check it, as it is the error argument. By shifting,\n                // we leave only the argument(s) we want to pass to the consumer.\n                const err = results.shift();\n                if (err != null) {\n                  subject.error(err);\n                  // If we've errored, we can stop processing this function\n                  // as there's nothing else to do. Just return to escape.\n                  return;\n                }\n              }\n              // If we have one argument, notify the consumer\n              // of it as a single value, otherwise, if there's more than one, pass\n              // them as an array. Note that if there are no arguments, `undefined`\n              // will be emitted.\n              subject.next(1 < results.length ? results : results[0]);\n              // Flip this flag, so we know we can complete it in the synchronous\n              // case below.\n              isComplete = true;\n              // If we're not asynchronous, we need to defer the `complete` call\n              // until after the call to the function is over. This is because an\n              // error could be thrown in the function after it calls our callback,\n              // and if that is the case, if we complete here, we are unable to notify\n              // the consumer than an error occured.\n              if (isAsync) {\n                subject.complete();\n              }\n            },\n          ]\n        );\n        // If we flipped `isComplete` during the call, we resolved synchronously,\n        // notify complete, because we skipped it in the callback to wait\n        // to make sure there were no errors during the call.\n        if (isComplete) {\n          subject.complete();\n        }\n\n        // We're no longer synchronous. If the callback is called at this point\n        // we can notify complete on the spot.\n        isAsync = true;\n      }\n\n      // Return the subscription fron adding our subscriber to the subject.\n      return subs;\n    });\n  };\n}\n","/* @prettier */\nimport { Observable } from '../Observable';\nimport { SchedulerLike } from '../types';\nimport { bindCallbackInternals } from './bindCallbackInternals';\n\nexport function bindNodeCallback(\n  callbackFunc: (...args: any[]) => void,\n  resultSelector: (...args: any[]) => any,\n  scheduler?: SchedulerLike\n): (...args: any[]) => Observable<any>;\n\n// args is the arguments array and we push the callback on the rest tuple since the rest parameter must be last (only item) in a parameter list\nexport function bindNodeCallback<A extends readonly unknown[], R extends readonly unknown[]>(\n  callbackFunc: (...args: [...A, (err: any, ...res: R) => void]) => void,\n  schedulerLike?: SchedulerLike\n): (...arg: A) => Observable<R extends [] ? void : R extends [any] ? R[0] : R>;\n\n/**\n * Converts a Node.js-style callback API to a function that returns an\n * Observable.\n *\n * <span class=\"informal\">It's just like {@link bindCallback}, but the\n * callback is expected to be of type `callback(error, result)`.</span>\n *\n * `bindNodeCallback` is not an operator because its input and output are not\n * Observables. The input is a function `func` with some parameters, but the\n * last parameter must be a callback function that `func` calls when it is\n * done. The callback function is expected to follow Node.js conventions,\n * where the first argument to the callback is an error object, signaling\n * whether call was successful. If that object is passed to callback, it means\n * something went wrong.\n *\n * The output of `bindNodeCallback` is a function that takes the same\n * parameters as `func`, except the last one (the callback). When the output\n * function is called with arguments, it will return an Observable.\n * If `func` calls its callback with error parameter present, Observable will\n * error with that value as well. If error parameter is not passed, Observable will emit\n * second parameter. If there are more parameters (third and so on),\n * Observable will emit an array with all arguments, except first error argument.\n *\n * Note that `func` will not be called at the same time output function is,\n * but rather whenever resulting Observable is subscribed. By default call to\n * `func` will happen synchronously after subscription, but that can be changed\n * with proper `scheduler` provided as optional third parameter. {@link SchedulerLike}\n * can also control when values from callback will be emitted by Observable.\n * To find out more, check out documentation for {@link bindCallback}, where\n * {@link SchedulerLike} works exactly the same.\n *\n * As in {@link bindCallback}, context (`this` property) of input function will be set to context\n * of returned function, when it is called.\n *\n * After Observable emits value, it will complete immediately. This means\n * even if `func` calls callback again, values from second and consecutive\n * calls will never appear on the stream. If you need to handle functions\n * that call callbacks multiple times, check out {@link fromEvent} or\n * {@link fromEventPattern} instead.\n *\n * Note that `bindNodeCallback` can be used in non-Node.js environments as well.\n * \"Node.js-style\" callbacks are just a convention, so if you write for\n * browsers or any other environment and API you use implements that callback style,\n * `bindNodeCallback` can be safely used on that API functions as well.\n *\n * Remember that Error object passed to callback does not have to be an instance\n * of JavaScript built-in `Error` object. In fact, it does not even have to an object.\n * Error parameter of callback function is interpreted as \"present\", when value\n * of that parameter is truthy. It could be, for example, non-zero number, non-empty\n * string or boolean `true`. In all of these cases resulting Observable would error\n * with that value. This means usually regular style callbacks will fail very often when\n * `bindNodeCallback` is used. If your Observable errors much more often then you\n * would expect, check if callback really is called in Node.js-style and, if not,\n * switch to {@link bindCallback} instead.\n *\n * Note that even if error parameter is technically present in callback, but its value\n * is falsy, it still won't appear in array emitted by Observable.\n *\n * ## Examples\n * ###  Read a file from the filesystem and get the data as an Observable\n * ```ts\n * import * as fs from 'fs';\n * const readFileAsObservable = bindNodeCallback(fs.readFile);\n * const result = readFileAsObservable('./roadNames.txt', 'utf8');\n * result.subscribe(x => console.log(x), e => console.error(e));\n * ```\n *\n * ### Use on function calling callback with multiple arguments\n * ```ts\n * someFunction((err, a, b) => {\n *   console.log(err); // null\n *   console.log(a); // 5\n *   console.log(b); // \"some string\"\n * });\n * const boundSomeFunction = bindNodeCallback(someFunction);\n * boundSomeFunction()\n * .subscribe(value => {\n *   console.log(value); // [5, \"some string\"]\n * });\n * ```\n *\n * ### Use on function calling callback in regular style\n * ```ts\n * someFunction(a => {\n *   console.log(a); // 5\n * });\n * const boundSomeFunction = bindNodeCallback(someFunction);\n * boundSomeFunction()\n * .subscribe(\n *   value => {}             // never gets called\n *   err => console.log(err) // 5\n * );\n * ```\n *\n * @see {@link bindCallback}\n * @see {@link from}\n *\n * @param {function} func Function with a Node.js-style callback as the last parameter.\n * @param {SchedulerLike} [scheduler] The scheduler on which to schedule the\n * callbacks.\n * @return {function(...params: *): Observable} A function which returns the\n * Observable that delivers the same values the Node.js callback would\n * deliver.\n */\nexport function bindNodeCallback(\n  callbackFunc: (...args: [...any[], (err: any, ...res: any) => void]) => void,\n  resultSelector?: ((...args: any[]) => any) | SchedulerLike,\n  scheduler?: SchedulerLike\n): (...args: any[]) => Observable<any> {\n  return bindCallbackInternals(true, callbackFunc, resultSelector, scheduler);\n}\n","import { Observable } from '../Observable';\nimport { ObservableInput, SchedulerLike, ObservedValueOf, ObservableInputTuple } from '../types';\nimport { argsArgArrayOrObject } from '../util/argsArgArrayOrObject';\nimport { Subscriber } from '../Subscriber';\nimport { from } from './from';\nimport { identity } from '../util/identity';\nimport { Subscription } from '../Subscription';\nimport { mapOneOrManyArgs } from '../util/mapOneOrManyArgs';\nimport { popResultSelector, popScheduler } from '../util/args';\nimport { createObject } from '../util/createObject';\nimport { createOperatorSubscriber } from '../operators/OperatorSubscriber';\nimport { AnyCatcher } from '../AnyCatcher';\nimport { executeSchedule } from '../util/executeSchedule';\n\n// combineLatest(any)\n// We put this first because we need to catch cases where the user has supplied\n// _exactly `any`_ as the argument. Since `any` literally matches _anything_,\n// we don't want it to randomly hit one of the other type signatures below,\n// as we have no idea at build-time what type we should be returning when given an any.\n\n/**\n * You have passed `any` here, we can't figure out if it is\n * an array or an object, so you're getting `unknown`. Use better types.\n * @param arg Something typed as `any`\n */\nexport function combineLatest<T extends AnyCatcher>(arg: T): Observable<unknown>;\n\n// combineLatest([a, b, c])\nexport function combineLatest(sources: []): Observable<never>;\nexport function combineLatest<A extends readonly unknown[]>(sources: readonly [...ObservableInputTuple<A>]): Observable<A>;\n/** @deprecated The `scheduler` parameter will be removed in v8. Use `scheduled` and `combineLatestAll`. Details: https://rxjs.dev/deprecations/scheduler-argument */\nexport function combineLatest<A extends readonly unknown[], R>(\n  sources: readonly [...ObservableInputTuple<A>],\n  resultSelector: (...values: A) => R,\n  scheduler: SchedulerLike\n): Observable<R>;\nexport function combineLatest<A extends readonly unknown[], R>(\n  sources: readonly [...ObservableInputTuple<A>],\n  resultSelector: (...values: A) => R\n): Observable<R>;\n/** @deprecated The `scheduler` parameter will be removed in v8. Use `scheduled` and `combineLatestAll`. Details: https://rxjs.dev/deprecations/scheduler-argument */\nexport function combineLatest<A extends readonly unknown[]>(\n  sources: readonly [...ObservableInputTuple<A>],\n  scheduler: SchedulerLike\n): Observable<A>;\n\n// combineLatest(a, b, c)\n/** @deprecated Pass an array of sources instead. The rest-parameters signature will be removed in v8. Details: https://rxjs.dev/deprecations/array-argument */\nexport function combineLatest<A extends readonly unknown[]>(...sources: [...ObservableInputTuple<A>]): Observable<A>;\n/** @deprecated The `scheduler` parameter will be removed in v8. Use `scheduled` and `combineLatestAll`. Details: https://rxjs.dev/deprecations/scheduler-argument */\nexport function combineLatest<A extends readonly unknown[], R>(\n  ...sourcesAndResultSelectorAndScheduler: [...ObservableInputTuple<A>, (...values: A) => R, SchedulerLike]\n): Observable<R>;\n/** @deprecated Pass an array of sources instead. The rest-parameters signature will be removed in v8. Details: https://rxjs.dev/deprecations/array-argument */\nexport function combineLatest<A extends readonly unknown[], R>(\n  ...sourcesAndResultSelector: [...ObservableInputTuple<A>, (...values: A) => R]\n): Observable<R>;\n/** @deprecated The `scheduler` parameter will be removed in v8. Use `scheduled` and `combineLatestAll`. Details: https://rxjs.dev/deprecations/scheduler-argument */\nexport function combineLatest<A extends readonly unknown[]>(\n  ...sourcesAndScheduler: [...ObservableInputTuple<A>, SchedulerLike]\n): Observable<A>;\n\n// combineLatest({a, b, c})\nexport function combineLatest(sourcesObject: { [K in any]: never }): Observable<never>;\nexport function combineLatest<T extends Record<string, ObservableInput<any>>>(\n  sourcesObject: T\n): Observable<{ [K in keyof T]: ObservedValueOf<T[K]> }>;\n\n/**\n * Combines multiple Observables to create an Observable whose values are\n * calculated from the latest values of each of its input Observables.\n *\n * <span class=\"informal\">Whenever any input Observable emits a value, it\n * computes a formula using the latest values from all the inputs, then emits\n * the output of that formula.</span>\n *\n * ![](combineLatest.png)\n *\n * `combineLatest` combines the values from all the Observables passed in the\n * observables array. This is done by subscribing to each Observable in order and,\n * whenever any Observable emits, collecting an array of the most recent\n * values from each Observable. So if you pass `n` Observables to this operator,\n * the returned Observable will always emit an array of `n` values, in an order\n * corresponding to the order of the passed Observables (the value from the first Observable\n * will be at index 0 of the array and so on).\n *\n * Static version of `combineLatest` accepts an array of Observables. Note that an array of\n * Observables is a good choice, if you don't know beforehand how many Observables\n * you will combine. Passing an empty array will result in an Observable that\n * completes immediately.\n *\n * To ensure the output array always has the same length, `combineLatest` will\n * actually wait for all input Observables to emit at least once,\n * before it starts emitting results. This means if some Observable emits\n * values before other Observables started emitting, all these values but the last\n * will be lost. On the other hand, if some Observable does not emit a value but\n * completes, resulting Observable will complete at the same moment without\n * emitting anything, since it will now be impossible to include a value from the\n * completed Observable in the resulting array. Also, if some input Observable does\n * not emit any value and never completes, `combineLatest` will also never emit\n * and never complete, since, again, it will wait for all streams to emit some\n * value.\n *\n * If at least one Observable was passed to `combineLatest` and all passed Observables\n * emitted something, the resulting Observable will complete when all combined\n * streams complete. So even if some Observable completes, the result of\n * `combineLatest` will still emit values when other Observables do. In case\n * of a completed Observable, its value from now on will always be the last\n * emitted value. On the other hand, if any Observable errors, `combineLatest`\n * will error immediately as well, and all other Observables will be unsubscribed.\n *\n * ## Examples\n *\n * Combine two timer Observables\n *\n * ```ts\n * import { timer, combineLatest } from 'rxjs';\n *\n * const firstTimer = timer(0, 1000); // emit 0, 1, 2... after every second, starting from now\n * const secondTimer = timer(500, 1000); // emit 0, 1, 2... after every second, starting 0,5s from now\n * const combinedTimers = combineLatest([firstTimer, secondTimer]);\n * combinedTimers.subscribe(value => console.log(value));\n * // Logs\n * // [0, 0] after 0.5s\n * // [1, 0] after 1s\n * // [1, 1] after 1.5s\n * // [2, 1] after 2s\n * ```\n *\n * Combine a dictionary of Observables\n *\n * ```ts\n * import { of, delay, startWith, combineLatest } from 'rxjs';\n *\n * const observables = {\n *   a: of(1).pipe(delay(1000), startWith(0)),\n *   b: of(5).pipe(delay(5000), startWith(0)),\n *   c: of(10).pipe(delay(10000), startWith(0))\n * };\n * const combined = combineLatest(observables);\n * combined.subscribe(value => console.log(value));\n * // Logs\n * // { a: 0, b: 0, c: 0 } immediately\n * // { a: 1, b: 0, c: 0 } after 1s\n * // { a: 1, b: 5, c: 0 } after 5s\n * // { a: 1, b: 5, c: 10 } after 10s\n * ```\n *\n * Combine an array of Observables\n *\n * ```ts\n * import { of, delay, startWith, combineLatest } from 'rxjs';\n *\n * const observables = [1, 5, 10].map(\n *   n => of(n).pipe(\n *     delay(n * 1000), // emit 0 and then emit n after n seconds\n *     startWith(0)\n *   )\n * );\n * const combined = combineLatest(observables);\n * combined.subscribe(value => console.log(value));\n * // Logs\n * // [0, 0, 0] immediately\n * // [1, 0, 0] after 1s\n * // [1, 5, 0] after 5s\n * // [1, 5, 10] after 10s\n * ```\n *\n * Use map operator to dynamically calculate the Body-Mass Index\n *\n * ```ts\n * import { of, combineLatest, map } from 'rxjs';\n *\n * const weight = of(70, 72, 76, 79, 75);\n * const height = of(1.76, 1.77, 1.78);\n * const bmi = combineLatest([weight, height]).pipe(\n *   map(([w, h]) => w / (h * h)),\n * );\n * bmi.subscribe(x => console.log('BMI is ' + x));\n *\n * // With output to console:\n * // BMI is 24.212293388429753\n * // BMI is 23.93948099205209\n * // BMI is 23.671253629592222\n * ```\n *\n * @see {@link combineLatestAll}\n * @see {@link merge}\n * @see {@link withLatestFrom}\n *\n * @param {ObservableInput} [observables] An array of input Observables to combine with each other.\n * An array of Observables must be given as the first argument.\n * @param {function} [project] An optional function to project the values from\n * the combined latest values into a new value on the output Observable.\n * @param {SchedulerLike} [scheduler=null] The {@link SchedulerLike} to use for subscribing to\n * each input Observable.\n * @return {Observable} An Observable of projected values from the most recent\n * values from each input Observable, or an array of the most recent values from\n * each input Observable.\n */\nexport function combineLatest<O extends ObservableInput<any>, R>(...args: any[]): Observable<R> | Observable<ObservedValueOf<O>[]> {\n  const scheduler = popScheduler(args);\n  const resultSelector = popResultSelector(args);\n\n  const { args: observables, keys } = argsArgArrayOrObject(args);\n\n  if (observables.length === 0) {\n    // If no observables are passed, or someone has passed an ampty array\n    // of observables, or even an empty object POJO, we need to just\n    // complete (EMPTY), but we have to honor the scheduler provided if any.\n    return from([], scheduler as any);\n  }\n\n  const result = new Observable<ObservedValueOf<O>[]>(\n    combineLatestInit(\n      observables as ObservableInput<ObservedValueOf<O>>[],\n      scheduler,\n      keys\n        ? // A handler for scrubbing the array of args into a dictionary.\n          (values) => createObject(keys, values)\n        : // A passthrough to just return the array\n          identity\n    )\n  );\n\n  return resultSelector ? (result.pipe(mapOneOrManyArgs(resultSelector)) as Observable<R>) : result;\n}\n\nexport function combineLatestInit(\n  observables: ObservableInput<any>[],\n  scheduler?: SchedulerLike,\n  valueTransform: (values: any[]) => any = identity\n) {\n  return (subscriber: Subscriber<any>) => {\n    // The outer subscription. We're capturing this in a function\n    // because we may have to schedule it.\n    maybeSchedule(\n      scheduler,\n      () => {\n        const { length } = observables;\n        // A store for the values each observable has emitted so far. We match observable to value on index.\n        const values = new Array(length);\n        // The number of currently active subscriptions, as they complete, we decrement this number to see if\n        // we are all done combining values, so we can complete the result.\n        let active = length;\n        // The number of inner sources that still haven't emitted the first value\n        // We need to track this because all sources need to emit one value in order\n        // to start emitting values.\n        let remainingFirstValues = length;\n        // The loop to kick off subscription. We're keying everything on index `i` to relate the observables passed\n        // in to the slot in the output array or the key in the array of keys in the output dictionary.\n        for (let i = 0; i < length; i++) {\n          maybeSchedule(\n            scheduler,\n            () => {\n              const source = from(observables[i], scheduler as any);\n              let hasFirstValue = false;\n              source.subscribe(\n                createOperatorSubscriber(\n                  subscriber,\n                  (value) => {\n                    // When we get a value, record it in our set of values.\n                    values[i] = value;\n                    if (!hasFirstValue) {\n                      // If this is our first value, record that.\n                      hasFirstValue = true;\n                      remainingFirstValues--;\n                    }\n                    if (!remainingFirstValues) {\n                      // We're not waiting for any more\n                      // first values, so we can emit!\n                      subscriber.next(valueTransform(values.slice()));\n                    }\n                  },\n                  () => {\n                    if (!--active) {\n                      // We only complete the result if we have no more active\n                      // inner observables.\n                      subscriber.complete();\n                    }\n                  }\n                )\n              );\n            },\n            subscriber\n          );\n        }\n      },\n      subscriber\n    );\n  };\n}\n\n/**\n * A small utility to handle the couple of locations where we want to schedule if a scheduler was provided,\n * but we don't if there was no scheduler.\n */\nfunction maybeSchedule(scheduler: SchedulerLike | undefined, execute: () => void, subscription: Subscription) {\n  if (scheduler) {\n    executeSchedule(subscription, scheduler, execute);\n  } else {\n    execute();\n  }\n}\n","import { Observable } from '../Observable';\nimport { ObservableInputTuple, SchedulerLike } from '../types';\nimport { concatAll } from '../operators/concatAll';\nimport { popScheduler } from '../util/args';\nimport { from } from './from';\n\nexport function concat<T extends readonly unknown[]>(...inputs: [...ObservableInputTuple<T>]): Observable<T[number]>;\nexport function concat<T extends readonly unknown[]>(\n  ...inputsAndScheduler: [...ObservableInputTuple<T>, SchedulerLike]\n): Observable<T[number]>;\n\n/**\n * Creates an output Observable which sequentially emits all values from the first given\n * Observable and then moves on to the next.\n *\n * <span class=\"informal\">Concatenates multiple Observables together by\n * sequentially emitting their values, one Observable after the other.</span>\n *\n * ![](concat.png)\n *\n * `concat` joins multiple Observables together, by subscribing to them one at a time and\n * merging their results into the output Observable. You can pass either an array of\n * Observables, or put them directly as arguments. Passing an empty array will result\n * in Observable that completes immediately.\n *\n * `concat` will subscribe to first input Observable and emit all its values, without\n * changing or affecting them in any way. When that Observable completes, it will\n * subscribe to then next Observable passed and, again, emit its values. This will be\n * repeated, until the operator runs out of Observables. When last input Observable completes,\n * `concat` will complete as well. At any given moment only one Observable passed to operator\n * emits values. If you would like to emit values from passed Observables concurrently, check out\n * {@link merge} instead, especially with optional `concurrent` parameter. As a matter of fact,\n * `concat` is an equivalent of `merge` operator with `concurrent` parameter set to `1`.\n *\n * Note that if some input Observable never completes, `concat` will also never complete\n * and Observables following the one that did not complete will never be subscribed. On the other\n * hand, if some Observable simply completes immediately after it is subscribed, it will be\n * invisible for `concat`, which will just move on to the next Observable.\n *\n * If any Observable in chain errors, instead of passing control to the next Observable,\n * `concat` will error immediately as well. Observables that would be subscribed after\n * the one that emitted error, never will.\n *\n * If you pass to `concat` the same Observable many times, its stream of values\n * will be \"replayed\" on every subscription, which means you can repeat given Observable\n * as many times as you like. If passing the same Observable to `concat` 1000 times becomes tedious,\n * you can always use {@link repeat}.\n *\n * ## Examples\n *\n * Concatenate a timer counting from 0 to 3 with a synchronous sequence from 1 to 10\n *\n * ```ts\n * import { interval, take, range, concat } from 'rxjs';\n *\n * const timer = interval(1000).pipe(take(4));\n * const sequence = range(1, 10);\n * const result = concat(timer, sequence);\n * result.subscribe(x => console.log(x));\n *\n * // results in:\n * // 0 -1000ms-> 1 -1000ms-> 2 -1000ms-> 3 -immediate-> 1 ... 10\n * ```\n *\n * Concatenate 3 Observables\n *\n * ```ts\n * import { interval, take, concat } from 'rxjs';\n *\n * const timer1 = interval(1000).pipe(take(10));\n * const timer2 = interval(2000).pipe(take(6));\n * const timer3 = interval(500).pipe(take(10));\n *\n * const result = concat(timer1, timer2, timer3);\n * result.subscribe(x => console.log(x));\n *\n * // results in the following:\n * // (Prints to console sequentially)\n * // -1000ms-> 0 -1000ms-> 1 -1000ms-> ... 9\n * // -2000ms-> 0 -2000ms-> 1 -2000ms-> ... 5\n * // -500ms-> 0 -500ms-> 1 -500ms-> ... 9\n * ```\n *\n * Concatenate the same Observable to repeat it\n *\n * ```ts\n * import { interval, take, concat } from 'rxjs';\n *\n * const timer = interval(1000).pipe(take(2));\n *\n * concat(timer, timer) // concatenating the same Observable!\n *   .subscribe({\n *     next: value => console.log(value),\n *     complete: () => console.log('...and it is done!')\n *   });\n *\n * // Logs:\n * // 0 after 1s\n * // 1 after 2s\n * // 0 after 3s\n * // 1 after 4s\n * // '...and it is done!' also after 4s\n * ```\n *\n * @see {@link concatAll}\n * @see {@link concatMap}\n * @see {@link concatMapTo}\n * @see {@link startWith}\n * @see {@link endWith}\n *\n * @param args Input Observables to concatenate.\n */\nexport function concat(...args: any[]): Observable<unknown> {\n  return concatAll()(from(args, popScheduler(args)));\n}\n","import { Connectable, ObservableInput, SubjectLike } from '../types';\nimport { Subject } from '../Subject';\nimport { Subscription } from '../Subscription';\nimport { Observable } from '../Observable';\nimport { defer } from './defer';\n\nexport interface ConnectableConfig<T> {\n  /**\n   * A factory function used to create the Subject through which the source\n   * is multicast. By default this creates a {@link Subject}.\n   */\n  connector: () => SubjectLike<T>;\n  /**\n   * If true, the resulting observable will reset internal state upon disconnetion\n   * and return to a \"cold\" state. This allows the resulting observable to be\n   * reconnected.\n   * If false, upon disconnection, the connecting subject will remain the\n   * connecting subject, meaning the resulting observable will not go \"cold\" again,\n   * and subsequent repeats or resubscriptions will resubscribe to that same subject.\n   */\n  resetOnDisconnect?: boolean;\n}\n\n/**\n * The default configuration for `connectable`.\n */\nconst DEFAULT_CONFIG: ConnectableConfig<unknown> = {\n  connector: () => new Subject<unknown>(),\n  resetOnDisconnect: true,\n};\n\n/**\n * Creates an observable that multicasts once `connect()` is called on it.\n *\n * @param source The observable source to make connectable.\n * @param config The configuration object for `connectable`.\n * @returns A \"connectable\" observable, that has a `connect()` method, that you must call to\n * connect the source to all consumers through the subject provided as the connector.\n */\nexport function connectable<T>(source: ObservableInput<T>, config: ConnectableConfig<T> = DEFAULT_CONFIG): Connectable<T> {\n  // The subscription representing the connection.\n  let connection: Subscription | null = null;\n  const { connector, resetOnDisconnect = true } = config;\n  let subject = connector();\n\n  const result: any = new Observable<T>((subscriber) => {\n    return subject.subscribe(subscriber);\n  });\n\n  // Define the `connect` function. This is what users must call\n  // in order to \"connect\" the source to the subject that is\n  // multicasting it.\n  result.connect = () => {\n    if (!connection || connection.closed) {\n      connection = defer(() => source).subscribe(subject);\n      if (resetOnDisconnect) {\n        connection.add(() => (subject = connector()));\n      }\n    }\n    return connection;\n  };\n\n  return result;\n}\n","import { Observable } from '../Observable';\nimport { ObservedValueOf, ObservableInput } from '../types';\nimport { innerFrom } from './innerFrom';\n\n/**\n * Creates an Observable that, on subscribe, calls an Observable factory to\n * make an Observable for each new Observer.\n *\n * <span class=\"informal\">Creates the Observable lazily, that is, only when it\n * is subscribed.\n * </span>\n *\n * ![](defer.png)\n *\n * `defer` allows you to create an Observable only when the Observer\n * subscribes. It waits until an Observer subscribes to it, calls the given\n * factory function to get an Observable -- where a factory function typically\n * generates a new Observable -- and subscribes the Observer to this Observable.\n * In case the factory function returns a falsy value, then EMPTY is used as\n * Observable instead. Last but not least, an exception during the factory\n * function call is transferred to the Observer by calling `error`.\n *\n * ## Example\n *\n * Subscribe to either an Observable of clicks or an Observable of interval, at random\n *\n * ```ts\n * import { defer, fromEvent, interval } from 'rxjs';\n *\n * const clicksOrInterval = defer(() => {\n *   return Math.random() > 0.5\n *     ? fromEvent(document, 'click')\n *     : interval(1000);\n * });\n * clicksOrInterval.subscribe(x => console.log(x));\n *\n * // Results in the following behavior:\n * // If the result of Math.random() is greater than 0.5 it will listen\n * // for clicks anywhere on the \"document\"; when document is clicked it\n * // will log a MouseEvent object to the console. If the result is less\n * // than 0.5 it will emit ascending numbers, one every second(1000ms).\n * ```\n *\n * @see {@link Observable}\n *\n * @param {function(): ObservableInput} observableFactory The Observable\n * factory function to invoke for each Observer that subscribes to the output\n * Observable. May also return a Promise, which will be converted on the fly\n * to an Observable.\n * @return {Observable} An Observable whose Observers' subscriptions trigger\n * an invocation of the given Observable factory function.\n */\nexport function defer<R extends ObservableInput<any>>(observableFactory: () => R): Observable<ObservedValueOf<R>> {\n  return new Observable<ObservedValueOf<R>>((subscriber) => {\n    innerFrom(observableFactory()).subscribe(subscriber);\n  });\n}\n","import { Subject, AnonymousSubject } from '../../Subject';\nimport { Subscriber } from '../../Subscriber';\nimport { Observable } from '../../Observable';\nimport { Subscription } from '../../Subscription';\nimport { Operator } from '../../Operator';\nimport { ReplaySubject } from '../../ReplaySubject';\nimport { Observer, NextObserver } from '../../types';\n\n/**\n * WebSocketSubjectConfig is a plain Object that allows us to make our\n * webSocket configurable.\n *\n * <span class=\"informal\">Provides flexibility to {@link webSocket}</span>\n *\n * It defines a set of properties to provide custom behavior in specific\n * moments of the socket's lifecycle. When the connection opens we can\n * use `openObserver`, when the connection is closed `closeObserver`, if we\n * are interested in listening for data coming from server: `deserializer`,\n * which allows us to customize the deserialization strategy of data before passing it\n * to the socket client. By default, `deserializer` is going to apply `JSON.parse` to each message coming\n * from the Server.\n *\n * ## Examples\n *\n * **deserializer**, the default for this property is `JSON.parse` but since there are just two options\n * for incoming data, either be text or binarydata. We can apply a custom deserialization strategy\n * or just simply skip the default behaviour.\n *\n * ```ts\n * import { webSocket } from 'rxjs/webSocket';\n *\n * const wsSubject = webSocket({\n *   url: 'ws://localhost:8081',\n *   //Apply any transformation of your choice.\n *   deserializer: ({ data }) => data\n * });\n *\n * wsSubject.subscribe(console.log);\n *\n * // Let's suppose we have this on the Server: ws.send('This is a msg from the server')\n * //output\n * //\n * // This is a msg from the server\n * ```\n *\n * **serializer** allows us to apply custom serialization strategy but for the outgoing messages.\n *\n * ```ts\n * import { webSocket } from 'rxjs/webSocket';\n *\n * const wsSubject = webSocket({\n *   url: 'ws://localhost:8081',\n *   // Apply any transformation of your choice.\n *   serializer: msg => JSON.stringify({ channel: 'webDevelopment', msg: msg })\n * });\n *\n * wsSubject.subscribe(() => subject.next('msg to the server'));\n *\n * // Let's suppose we have this on the Server:\n * //   ws.on('message', msg => console.log);\n * //   ws.send('This is a msg from the server');\n * // output at server side:\n * //\n * // {\"channel\":\"webDevelopment\",\"msg\":\"msg to the server\"}\n * ```\n *\n * **closeObserver** allows us to set a custom error when an error raises up.\n *\n * ```ts\n * import { webSocket } from 'rxjs/webSocket';\n *\n * const wsSubject = webSocket({\n *   url: 'ws://localhost:8081',\n *   closeObserver: {\n *     next() {\n *       const customError = { code: 6666, reason: 'Custom evil reason' }\n *       console.log(`code: ${ customError.code }, reason: ${ customError.reason }`);\n *     }\n *   }\n * });\n *\n * // output\n * // code: 6666, reason: Custom evil reason\n * ```\n *\n * **openObserver**, Let's say we need to make some kind of init task before sending/receiving msgs to the\n * webSocket or sending notification that the connection was successful, this is when\n * openObserver is useful for.\n *\n * ```ts\n * import { webSocket } from 'rxjs/webSocket';\n *\n * const wsSubject = webSocket({\n *   url: 'ws://localhost:8081',\n *   openObserver: {\n *     next: () => {\n *       console.log('Connection ok');\n *     }\n *   }\n * });\n *\n * // output\n * // Connection ok\n * ```\n */\nexport interface WebSocketSubjectConfig<T> {\n  /** The url of the socket server to connect to */\n  url: string;\n  /** The protocol to use to connect */\n  protocol?: string | Array<string>;\n  /** @deprecated Will be removed in v8. Use {@link deserializer} instead. */\n  resultSelector?: (e: MessageEvent) => T;\n  /**\n   * A serializer used to create messages from passed values before the\n   * messages are sent to the server. Defaults to JSON.stringify.\n   */\n  serializer?: (value: T) => WebSocketMessage;\n  /**\n   * A deserializer used for messages arriving on the socket from the\n   * server. Defaults to JSON.parse.\n   */\n  deserializer?: (e: MessageEvent) => T;\n  /**\n   * An Observer that watches when open events occur on the underlying web socket.\n   */\n  openObserver?: NextObserver<Event>;\n  /**\n   * An Observer that watches when close events occur on the underlying web socket\n   */\n  closeObserver?: NextObserver<CloseEvent>;\n  /**\n   * An Observer that watches when a close is about to occur due to\n   * unsubscription.\n   */\n  closingObserver?: NextObserver<void>;\n  /**\n   * A WebSocket constructor to use. This is useful for situations like using a\n   * WebSocket impl in Node (WebSocket is a DOM API), or for mocking a WebSocket\n   * for testing purposes\n   */\n  WebSocketCtor?: { new (url: string, protocols?: string | string[]): WebSocket };\n  /** Sets the `binaryType` property of the underlying WebSocket. */\n  binaryType?: 'blob' | 'arraybuffer';\n}\n\nconst DEFAULT_WEBSOCKET_CONFIG: WebSocketSubjectConfig<any> = {\n  url: '',\n  deserializer: (e: MessageEvent) => JSON.parse(e.data),\n  serializer: (value: any) => JSON.stringify(value),\n};\n\nconst WEBSOCKETSUBJECT_INVALID_ERROR_OBJECT =\n  'WebSocketSubject.error must be called with an object with an error code, and an optional reason: { code: number, reason: string }';\n\nexport type WebSocketMessage = string | ArrayBuffer | Blob | ArrayBufferView;\n\nexport class WebSocketSubject<T> extends AnonymousSubject<T> {\n  // @ts-ignore: Property has no initializer and is not definitely assigned\n  private _config: WebSocketSubjectConfig<T>;\n\n  /** @internal */\n  // @ts-ignore: Property has no initializer and is not definitely assigned\n  _output: Subject<T>;\n\n  private _socket: WebSocket | null = null;\n\n  constructor(urlConfigOrSource: string | WebSocketSubjectConfig<T> | Observable<T>, destination?: Observer<T>) {\n    super();\n    if (urlConfigOrSource instanceof Observable) {\n      this.destination = destination;\n      this.source = urlConfigOrSource as Observable<T>;\n    } else {\n      const config = (this._config = { ...DEFAULT_WEBSOCKET_CONFIG });\n      this._output = new Subject<T>();\n      if (typeof urlConfigOrSource === 'string') {\n        config.url = urlConfigOrSource;\n      } else {\n        for (const key in urlConfigOrSource) {\n          if (urlConfigOrSource.hasOwnProperty(key)) {\n            (config as any)[key] = (urlConfigOrSource as any)[key];\n          }\n        }\n      }\n\n      if (!config.WebSocketCtor && WebSocket) {\n        config.WebSocketCtor = WebSocket;\n      } else if (!config.WebSocketCtor) {\n        throw new Error('no WebSocket constructor can be found');\n      }\n      this.destination = new ReplaySubject();\n    }\n  }\n\n  /** @deprecated Internal implementation detail, do not use directly. Will be made internal in v8. */\n  lift<R>(operator: Operator<T, R>): WebSocketSubject<R> {\n    const sock = new WebSocketSubject<R>(this._config as WebSocketSubjectConfig<any>, this.destination as any);\n    sock.operator = operator;\n    sock.source = this;\n    return sock;\n  }\n\n  private _resetState() {\n    this._socket = null;\n    if (!this.source) {\n      this.destination = new ReplaySubject();\n    }\n    this._output = new Subject<T>();\n  }\n\n  /**\n   * Creates an {@link Observable}, that when subscribed to, sends a message,\n   * defined by the `subMsg` function, to the server over the socket to begin a\n   * subscription to data over that socket. Once data arrives, the\n   * `messageFilter` argument will be used to select the appropriate data for\n   * the resulting Observable. When finalization occurs, either due to\n   * unsubscription, completion, or error, a message defined by the `unsubMsg`\n   * argument will be sent to the server over the WebSocketSubject.\n   *\n   * @param subMsg A function to generate the subscription message to be sent to\n   * the server. This will still be processed by the serializer in the\n   * WebSocketSubject's config. (Which defaults to JSON serialization)\n   * @param unsubMsg A function to generate the unsubscription message to be\n   * sent to the server at finalization. This will still be processed by the\n   * serializer in the WebSocketSubject's config.\n   * @param messageFilter A predicate for selecting the appropriate messages\n   * from the server for the output stream.\n   */\n  multiplex(subMsg: () => any, unsubMsg: () => any, messageFilter: (value: T) => boolean) {\n    const self = this;\n    return new Observable((observer: Observer<T>) => {\n      try {\n        self.next(subMsg());\n      } catch (err) {\n        observer.error(err);\n      }\n\n      const subscription = self.subscribe({\n        next: (x) => {\n          try {\n            if (messageFilter(x)) {\n              observer.next(x);\n            }\n          } catch (err) {\n            observer.error(err);\n          }\n        },\n        error: (err) => observer.error(err),\n        complete: () => observer.complete(),\n      });\n\n      return () => {\n        try {\n          self.next(unsubMsg());\n        } catch (err) {\n          observer.error(err);\n        }\n        subscription.unsubscribe();\n      };\n    });\n  }\n\n  private _connectSocket() {\n    const { WebSocketCtor, protocol, url, binaryType } = this._config;\n    const observer = this._output;\n\n    let socket: WebSocket | null = null;\n    try {\n      socket = protocol ? new WebSocketCtor!(url, protocol) : new WebSocketCtor!(url);\n      this._socket = socket;\n      if (binaryType) {\n        this._socket.binaryType = binaryType;\n      }\n    } catch (e) {\n      observer.error(e);\n      return;\n    }\n\n    const subscription = new Subscription(() => {\n      this._socket = null;\n      if (socket && socket.readyState === 1) {\n        socket.close();\n      }\n    });\n\n    socket.onopen = (evt: Event) => {\n      const { _socket } = this;\n      if (!_socket) {\n        socket!.close();\n        this._resetState();\n        return;\n      }\n      const { openObserver } = this._config;\n      if (openObserver) {\n        openObserver.next(evt);\n      }\n\n      const queue = this.destination;\n\n      this.destination = Subscriber.create<T>(\n        (x) => {\n          if (socket!.readyState === 1) {\n            try {\n              const { serializer } = this._config;\n              socket!.send(serializer!(x!));\n            } catch (e) {\n              this.destination!.error(e);\n            }\n          }\n        },\n        (err) => {\n          const { closingObserver } = this._config;\n          if (closingObserver) {\n            closingObserver.next(undefined);\n          }\n          if (err && err.code) {\n            socket!.close(err.code, err.reason);\n          } else {\n            observer.error(new TypeError(WEBSOCKETSUBJECT_INVALID_ERROR_OBJECT));\n          }\n          this._resetState();\n        },\n        () => {\n          const { closingObserver } = this._config;\n          if (closingObserver) {\n            closingObserver.next(undefined);\n          }\n          socket!.close();\n          this._resetState();\n        }\n      ) as Subscriber<any>;\n\n      if (queue && queue instanceof ReplaySubject) {\n        subscription.add((queue as ReplaySubject<T>).subscribe(this.destination));\n      }\n    };\n\n    socket.onerror = (e: Event) => {\n      this._resetState();\n      observer.error(e);\n    };\n\n    socket.onclose = (e: CloseEvent) => {\n      if (socket === this._socket) {\n        this._resetState();\n      }\n      const { closeObserver } = this._config;\n      if (closeObserver) {\n        closeObserver.next(e);\n      }\n      if (e.wasClean) {\n        observer.complete();\n      } else {\n        observer.error(e);\n      }\n    };\n\n    socket.onmessage = (e: MessageEvent) => {\n      try {\n        const { deserializer } = this._config;\n        observer.next(deserializer!(e));\n      } catch (err) {\n        observer.error(err);\n      }\n    };\n  }\n\n  /** @internal */\n  protected _subscribe(subscriber: Subscriber<T>): Subscription {\n    const { source } = this;\n    if (source) {\n      return source.subscribe(subscriber);\n    }\n    if (!this._socket) {\n      this._connectSocket();\n    }\n    this._output.subscribe(subscriber);\n    subscriber.add(() => {\n      const { _socket } = this;\n      if (this._output.observers.length === 0) {\n        if (_socket && (_socket.readyState === 1 || _socket.readyState === 0)) {\n          _socket.close();\n        }\n        this._resetState();\n      }\n    });\n    return subscriber;\n  }\n\n  unsubscribe() {\n    const { _socket } = this;\n    if (_socket && (_socket.readyState === 1 || _socket.readyState === 0)) {\n      _socket.close();\n    }\n    this._resetState();\n    super.unsubscribe();\n  }\n}\n","import { Observable } from '../../Observable';\nimport { Subscription } from '../../Subscription';\nimport { TimestampProvider } from '../../types';\nimport { performanceTimestampProvider } from '../../scheduler/performanceTimestampProvider';\nimport { animationFrameProvider } from '../../scheduler/animationFrameProvider';\n\n/**\n * An observable of animation frames\n *\n * Emits the amount of time elapsed since subscription and the timestamp on each animation frame.\n * Defaults to milliseconds provided to the requestAnimationFrame's callback. Does not end on its own.\n *\n * Every subscription will start a separate animation loop. Since animation frames are always scheduled\n * by the browser to occur directly before a repaint, scheduling more than one animation frame synchronously\n * should not be much different or have more overhead than looping over an array of events during\n * a single animation frame. However, if for some reason the developer would like to ensure the\n * execution of animation-related handlers are all executed during the same task by the engine,\n * the `share` operator can be used.\n *\n * This is useful for setting up animations with RxJS.\n *\n * ## Examples\n *\n * Tweening a div to move it on the screen\n *\n * ```ts\n * import { animationFrames, map, takeWhile, endWith } from 'rxjs';\n *\n * function tween(start: number, end: number, duration: number) {\n *   const diff = end - start;\n *   return animationFrames().pipe(\n *     // Figure out what percentage of time has passed\n *     map(({ elapsed }) => elapsed / duration),\n *     // Take the vector while less than 100%\n *     takeWhile(v => v < 1),\n *     // Finish with 100%\n *     endWith(1),\n *     // Calculate the distance traveled between start and end\n *     map(v => v * diff + start)\n *   );\n * }\n *\n * // Setup a div for us to move around\n * const div = document.createElement('div');\n * document.body.appendChild(div);\n * div.style.position = 'absolute';\n * div.style.width = '40px';\n * div.style.height = '40px';\n * div.style.backgroundColor = 'lime';\n * div.style.transform = 'translate3d(10px, 0, 0)';\n *\n * tween(10, 200, 4000).subscribe(x => {\n *   div.style.transform = `translate3d(${ x }px, 0, 0)`;\n * });\n * ```\n *\n * Providing a custom timestamp provider\n *\n * ```ts\n * import { animationFrames, TimestampProvider } from 'rxjs';\n *\n * // A custom timestamp provider\n * let now = 0;\n * const customTSProvider: TimestampProvider = {\n *   now() { return now++; }\n * };\n *\n * const source$ = animationFrames(customTSProvider);\n *\n * // Log increasing numbers 0...1...2... on every animation frame.\n * source$.subscribe(({ elapsed }) => console.log(elapsed));\n * ```\n *\n * @param timestampProvider An object with a `now` method that provides a numeric timestamp\n */\nexport function animationFrames(timestampProvider?: TimestampProvider) {\n  return timestampProvider ? animationFramesFactory(timestampProvider) : DEFAULT_ANIMATION_FRAMES;\n}\n\n/**\n * Does the work of creating the observable for `animationFrames`.\n * @param timestampProvider The timestamp provider to use to create the observable\n */\nfunction animationFramesFactory(timestampProvider?: TimestampProvider) {\n  const { schedule } = animationFrameProvider;\n  return new Observable<{ timestamp: number; elapsed: number }>((subscriber) => {\n    const subscription = new Subscription();\n    // If no timestamp provider is specified, use performance.now() - as it\n    // will return timestamps 'compatible' with those passed to the run\n    // callback and won't be affected by NTP adjustments, etc.\n    const provider = timestampProvider || performanceTimestampProvider;\n    // Capture the start time upon subscription, as the run callback can remain\n    // queued for a considerable period of time and the elapsed time should\n    // represent the time elapsed since subscription - not the time since the\n    // first rendered animation frame.\n    const start = provider.now();\n    const run = (timestamp: DOMHighResTimeStamp | number) => {\n      // Use the provider's timestamp to calculate the elapsed time. Note that\n      // this means - if the caller hasn't passed a provider - that\n      // performance.now() will be used instead of the timestamp that was\n      // passed to the run callback. The reason for this is that the timestamp\n      // passed to the callback can be earlier than the start time, as it\n      // represents the time at which the browser decided it would render any\n      // queued frames - and that time can be earlier the captured start time.\n      const now = provider.now();\n      subscriber.next({\n        timestamp: timestampProvider ? now : timestamp,\n        elapsed: now - start,\n      });\n      if (!subscriber.closed) {\n        subscription.add(schedule(run));\n      }\n    };\n    subscription.add(schedule(run));\n    return subscription;\n  });\n}\n\n/**\n * In the common case, where the timestamp provided by the rAF API is used,\n * we use this shared observable to reduce overhead.\n */\nconst DEFAULT_ANIMATION_FRAMES = animationFramesFactory();\n","import { WebSocketSubject, WebSocketSubjectConfig } from './WebSocketSubject';\n\n/**\n * Wrapper around the w3c-compatible WebSocket object provided by the browser.\n *\n * <span class=\"informal\">{@link Subject} that communicates with a server via WebSocket</span>\n *\n * `webSocket` is a factory function that produces a `WebSocketSubject`,\n * which can be used to make WebSocket connection with an arbitrary endpoint.\n * `webSocket` accepts as an argument either a string with url of WebSocket endpoint, or an\n * {@link WebSocketSubjectConfig} object for providing additional configuration, as\n * well as Observers for tracking lifecycle of WebSocket connection.\n *\n * When `WebSocketSubject` is subscribed, it attempts to make a socket connection,\n * unless there is one made already. This means that many subscribers will always listen\n * on the same socket, thus saving resources. If however, two instances are made of `WebSocketSubject`,\n * even if these two were provided with the same url, they will attempt to make separate\n * connections. When consumer of a `WebSocketSubject` unsubscribes, socket connection is closed,\n * only if there are no more subscribers still listening. If after some time a consumer starts\n * subscribing again, connection is reestablished.\n *\n * Once connection is made, whenever a new message comes from the server, `WebSocketSubject` will emit that\n * message as a value in the stream. By default, a message from the socket is parsed via `JSON.parse`. If you\n * want to customize how deserialization is handled (if at all), you can provide custom `resultSelector`\n * function in {@link WebSocketSubject}. When connection closes, stream will complete, provided it happened without\n * any errors. If at any point (starting, maintaining or closing a connection) there is an error,\n * stream will also error with whatever WebSocket API has thrown.\n *\n * By virtue of being a {@link Subject}, `WebSocketSubject` allows for receiving and sending messages from the server. In order\n * to communicate with a connected endpoint, use `next`, `error` and `complete` methods. `next` sends a value to the server, so bear in mind\n * that this value will not be serialized beforehand. Because of This, `JSON.stringify` will have to be called on a value by hand,\n * before calling `next` with a result. Note also that if at the moment of nexting value\n * there is no socket connection (for example no one is subscribing), those values will be buffered, and sent when connection\n * is finally established. `complete` method closes socket connection. `error` does the same,\n * as well as notifying the server that something went wrong via status code and string with details of what happened.\n * Since status code is required in WebSocket API, `WebSocketSubject` does not allow, like regular `Subject`,\n * arbitrary values being passed to the `error` method. It needs to be called with an object that has `code`\n * property with status code number and optional `reason` property with string describing details\n * of an error.\n *\n * Calling `next` does not affect subscribers of `WebSocketSubject` - they have no\n * information that something was sent to the server (unless of course the server\n * responds somehow to a message). On the other hand, since calling `complete` triggers\n * an attempt to close socket connection. If that connection is closed without any errors, stream will\n * complete, thus notifying all subscribers. And since calling `error` closes\n * socket connection as well, just with a different status code for the server, if closing itself proceeds\n * without errors, subscribed Observable will not error, as one might expect, but complete as usual. In both cases\n * (calling `complete` or `error`), if process of closing socket connection results in some errors, *then* stream\n * will error.\n *\n * **Multiplexing**\n *\n * `WebSocketSubject` has an additional operator, not found in other Subjects. It is called `multiplex` and it is\n * used to simulate opening several socket connections, while in reality maintaining only one.\n * For example, an application has both chat panel and real-time notifications about sport news. Since these are two distinct functions,\n * it would make sense to have two separate connections for each. Perhaps there could even be two separate services with WebSocket\n * endpoints, running on separate machines with only GUI combining them together. Having a socket connection\n * for each functionality could become too resource expensive. It is a common pattern to have single\n * WebSocket endpoint that acts as a gateway for the other services (in this case chat and sport news services).\n * Even though there is a single connection in a client app, having the ability to manipulate streams as if it\n * were two separate sockets is desirable. This eliminates manually registering and unregistering in a gateway for\n * given service and filter out messages of interest. This is exactly what `multiplex` method is for.\n *\n * Method accepts three parameters. First two are functions returning subscription and unsubscription messages\n * respectively. These are messages that will be sent to the server, whenever consumer of resulting Observable\n * subscribes and unsubscribes. Server can use them to verify that some kind of messages should start or stop\n * being forwarded to the client. In case of the above example application, after getting subscription message with proper identifier,\n * gateway server can decide that it should connect to real sport news service and start forwarding messages from it.\n * Note that both messages will be sent as returned by the functions, they are by default serialized using JSON.stringify, just\n * as messages pushed via `next`. Also bear in mind that these messages will be sent on *every* subscription and\n * unsubscription. This is potentially dangerous, because one consumer of an Observable may unsubscribe and the server\n * might stop sending messages, since it got unsubscription message. This needs to be handled\n * on the server or using {@link publish} on a Observable returned from 'multiplex'.\n *\n * Last argument to `multiplex` is a `messageFilter` function which should return a boolean. It is used to filter out messages\n * sent by the server to only those that belong to simulated WebSocket stream. For example, server might mark these\n * messages with some kind of string identifier on a message object and `messageFilter` would return `true`\n * if there is such identifier on an object emitted by the socket. Messages which returns `false` in `messageFilter` are simply skipped,\n * and are not passed down the stream.\n *\n * Return value of `multiplex` is an Observable with messages incoming from emulated socket connection. Note that this\n * is not a `WebSocketSubject`, so calling `next` or `multiplex` again will fail. For pushing values to the\n * server, use root `WebSocketSubject`.\n *\n * ## Examples\n *\n * Listening for messages from the server\n *\n * ```ts\n * import { webSocket } from 'rxjs/webSocket';\n *\n * const subject = webSocket('ws://localhost:8081');\n *\n * subject.subscribe({\n *   next: msg => console.log('message received: ' + msg), // Called whenever there is a message from the server.\n *   error: err => console.log(err), // Called if at any point WebSocket API signals some kind of error.\n *   complete: () => console.log('complete') // Called when connection is closed (for whatever reason).\n *  });\n * ```\n *\n * Pushing messages to the server\n *\n * ```ts\n * import { webSocket } from 'rxjs/webSocket';\n *\n * const subject = webSocket('ws://localhost:8081');\n *\n * subject.subscribe();\n * // Note that at least one consumer has to subscribe to the created subject - otherwise \"nexted\" values will be just buffered and not sent,\n * // since no connection was established!\n *\n * subject.next({ message: 'some message' });\n * // This will send a message to the server once a connection is made. Remember value is serialized with JSON.stringify by default!\n *\n * subject.complete(); // Closes the connection.\n *\n * subject.error({ code: 4000, reason: 'I think our app just broke!' });\n * // Also closes the connection, but let's the server know that this closing is caused by some error.\n * ```\n *\n * Multiplexing WebSocket\n *\n * ```ts\n * import { webSocket } from 'rxjs/webSocket';\n *\n * const subject = webSocket('ws://localhost:8081');\n *\n * const observableA = subject.multiplex(\n *   () => ({ subscribe: 'A' }), // When server gets this message, it will start sending messages for 'A'...\n *   () => ({ unsubscribe: 'A' }), // ...and when gets this one, it will stop.\n *   message => message.type === 'A' // If the function returns `true` message is passed down the stream. Skipped if the function returns false.\n * );\n *\n * const observableB = subject.multiplex( // And the same goes for 'B'.\n *   () => ({ subscribe: 'B' }),\n *   () => ({ unsubscribe: 'B' }),\n *   message => message.type === 'B'\n * );\n *\n * const subA = observableA.subscribe(messageForA => console.log(messageForA));\n * // At this moment WebSocket connection is established. Server gets '{\"subscribe\": \"A\"}' message and starts sending messages for 'A',\n * // which we log here.\n *\n * const subB = observableB.subscribe(messageForB => console.log(messageForB));\n * // Since we already have a connection, we just send '{\"subscribe\": \"B\"}' message to the server. It starts sending messages for 'B',\n * // which we log here.\n *\n * subB.unsubscribe();\n * // Message '{\"unsubscribe\": \"B\"}' is sent to the server, which stops sending 'B' messages.\n *\n * subA.unsubscribe();\n * // Message '{\"unsubscribe\": \"A\"}' makes the server stop sending messages for 'A'. Since there is no more subscribers to root Subject,\n * // socket connection closes.\n * ```\n *\n * @param {string|WebSocketSubjectConfig} urlConfigOrSource The WebSocket endpoint as an url or an object with\n * configuration and additional Observers.\n * @return {WebSocketSubject} Subject which allows to both send and receive messages via WebSocket connection.\n */\nexport function webSocket<T>(urlConfigOrSource: string | WebSocketSubjectConfig<T>): WebSocketSubject<T> {\n  return new WebSocketSubject<T>(urlConfigOrSource);\n}\n","import { Observable } from '../Observable';\nimport { SchedulerLike } from '../types';\n\n/**\n * A simple Observable that emits no items to the Observer and immediately\n * emits a complete notification.\n *\n * <span class=\"informal\">Just emits 'complete', and nothing else.</span>\n *\n * ![](empty.png)\n *\n * A simple Observable that only emits the complete notification. It can be used\n * for composing with other Observables, such as in a {@link mergeMap}.\n *\n * ## Examples\n *\n * Log complete notification\n *\n * ```ts\n * import { EMPTY } from 'rxjs';\n *\n * EMPTY.subscribe({\n *   next: () => console.log('Next'),\n *   complete: () => console.log('Complete!')\n * });\n *\n * // Outputs\n * // Complete!\n * ```\n *\n * Emit the number 7, then complete\n *\n * ```ts\n * import { EMPTY, startWith } from 'rxjs';\n *\n * const result = EMPTY.pipe(startWith(7));\n * result.subscribe(x => console.log(x));\n *\n * // Outputs\n * // 7\n * ```\n *\n * Map and flatten only odd numbers to the sequence `'a'`, `'b'`, `'c'`\n *\n * ```ts\n * import { interval, mergeMap, of, EMPTY } from 'rxjs';\n *\n * const interval$ = interval(1000);\n * const result = interval$.pipe(\n *   mergeMap(x => x % 2 === 1 ? of('a', 'b', 'c') : EMPTY),\n * );\n * result.subscribe(x => console.log(x));\n *\n * // Results in the following to the console:\n * // x is equal to the count on the interval, e.g. (0, 1, 2, 3, ...)\n * // x will occur every 1000ms\n * // if x % 2 is equal to 1, print a, b, c (each on its own)\n * // if x % 2 is not equal to 1, nothing will be output\n * ```\n *\n * @see {@link Observable}\n * @see {@link NEVER}\n * @see {@link of}\n * @see {@link throwError}\n */\nexport const EMPTY = new Observable<never>((subscriber) => subscriber.complete());\n\n/**\n * @param scheduler A {@link SchedulerLike} to use for scheduling\n * the emission of the complete notification.\n * @deprecated Replaced with the {@link EMPTY} constant or {@link scheduled} (e.g. `scheduled([], scheduler)`). Will be removed in v8.\n */\nexport function empty(scheduler?: SchedulerLike) {\n  return scheduler ? emptyScheduled(scheduler) : EMPTY;\n}\n\nfunction emptyScheduled(scheduler: SchedulerLike) {\n  return new Observable<never>((subscriber) => scheduler.schedule(() => subscriber.complete()));\n}\n","import { Observable } from '../Observable';\nimport { ObservedValueOf, ObservableInputTuple, ObservableInput } from '../types';\nimport { argsArgArrayOrObject } from '../util/argsArgArrayOrObject';\nimport { innerFrom } from './innerFrom';\nimport { popResultSelector } from '../util/args';\nimport { createOperatorSubscriber } from '../operators/OperatorSubscriber';\nimport { mapOneOrManyArgs } from '../util/mapOneOrManyArgs';\nimport { createObject } from '../util/createObject';\nimport { AnyCatcher } from '../AnyCatcher';\n\n// forkJoin(any)\n// We put this first because we need to catch cases where the user has supplied\n// _exactly `any`_ as the argument. Since `any` literally matches _anything_,\n// we don't want it to randomly hit one of the other type signatures below,\n// as we have no idea at build-time what type we should be returning when given an any.\n\n/**\n * You have passed `any` here, we can't figure out if it is\n * an array or an object, so you're getting `unknown`. Use better types.\n * @param arg Something typed as `any`\n */\nexport function forkJoin<T extends AnyCatcher>(arg: T): Observable<unknown>;\n\n// forkJoin(null | undefined)\nexport function forkJoin(scheduler: null | undefined): Observable<never>;\n\n// forkJoin([a, b, c])\nexport function forkJoin(sources: readonly []): Observable<never>;\nexport function forkJoin<A extends readonly unknown[]>(sources: readonly [...ObservableInputTuple<A>]): Observable<A>;\nexport function forkJoin<A extends readonly unknown[], R>(\n  sources: readonly [...ObservableInputTuple<A>],\n  resultSelector: (...values: A) => R\n): Observable<R>;\n\n// forkJoin(a, b, c)\n/** @deprecated Pass an array of sources instead. The rest-parameters signature will be removed in v8. Details: https://rxjs.dev/deprecations/array-argument */\nexport function forkJoin<A extends readonly unknown[]>(...sources: [...ObservableInputTuple<A>]): Observable<A>;\n/** @deprecated Pass an array of sources instead. The rest-parameters signature will be removed in v8. Details: https://rxjs.dev/deprecations/array-argument */\nexport function forkJoin<A extends readonly unknown[], R>(\n  ...sourcesAndResultSelector: [...ObservableInputTuple<A>, (...values: A) => R]\n): Observable<R>;\n\n// forkJoin({a, b, c})\nexport function forkJoin(sourcesObject: { [K in any]: never }): Observable<never>;\nexport function forkJoin<T extends Record<string, ObservableInput<any>>>(\n  sourcesObject: T\n): Observable<{ [K in keyof T]: ObservedValueOf<T[K]> }>;\n\n/**\n * Accepts an `Array` of {@link ObservableInput} or a dictionary `Object` of {@link ObservableInput} and returns\n * an {@link Observable} that emits either an array of values in the exact same order as the passed array,\n * or a dictionary of values in the same shape as the passed dictionary.\n *\n * <span class=\"informal\">Wait for Observables to complete and then combine last values they emitted;\n * complete immediately if an empty array is passed.</span>\n *\n * ![](forkJoin.png)\n *\n * `forkJoin` is an operator that takes any number of input observables which can be passed either as an array\n * or a dictionary of input observables. If no input observables are provided (e.g. an empty array is passed),\n * then the resulting stream will complete immediately.\n *\n * `forkJoin` will wait for all passed observables to emit and complete and then it will emit an array or an object with last\n * values from corresponding observables.\n *\n * If you pass an array of `n` observables to the operator, then the resulting\n * array will have `n` values, where the first value is the last one emitted by the first observable,\n * second value is the last one emitted by the second observable and so on.\n *\n * If you pass a dictionary of observables to the operator, then the resulting\n * objects will have the same keys as the dictionary passed, with their last values they have emitted\n * located at the corresponding key.\n *\n * That means `forkJoin` will not emit more than once and it will complete after that. If you need to emit combined\n * values not only at the end of the lifecycle of passed observables, but also throughout it, try out {@link combineLatest}\n * or {@link zip} instead.\n *\n * In order for the resulting array to have the same length as the number of input observables, whenever any of\n * the given observables completes without emitting any value, `forkJoin` will complete at that moment as well\n * and it will not emit anything either, even if it already has some last values from other observables.\n * Conversely, if there is an observable that never completes, `forkJoin` will never complete either,\n * unless at any point some other observable completes without emitting a value, which brings us back to\n * the previous case. Overall, in order for `forkJoin` to emit a value, all given observables\n * have to emit something at least once and complete.\n *\n * If any given observable errors at some point, `forkJoin` will error as well and immediately unsubscribe\n * from the other observables.\n *\n * Optionally `forkJoin` accepts a `resultSelector` function, that will be called with values which normally\n * would land in the emitted array. Whatever is returned by the `resultSelector`, will appear in the output\n * observable instead. This means that the default `resultSelector` can be thought of as a function that takes\n * all its arguments and puts them into an array. Note that the `resultSelector` will be called only\n * when `forkJoin` is supposed to emit a result.\n *\n * ## Examples\n *\n * Use `forkJoin` with a dictionary of observable inputs\n *\n * ```ts\n * import { forkJoin, of, timer } from 'rxjs';\n *\n * const observable = forkJoin({\n *   foo: of(1, 2, 3, 4),\n *   bar: Promise.resolve(8),\n *   baz: timer(4000)\n * });\n * observable.subscribe({\n *  next: value => console.log(value),\n *  complete: () => console.log('This is how it ends!'),\n * });\n *\n * // Logs:\n * // { foo: 4, bar: 8, baz: 0 } after 4 seconds\n * // 'This is how it ends!' immediately after\n * ```\n *\n * Use `forkJoin` with an array of observable inputs\n *\n * ```ts\n * import { forkJoin, of, timer } from 'rxjs';\n *\n * const observable = forkJoin([\n *   of(1, 2, 3, 4),\n *   Promise.resolve(8),\n *   timer(4000)\n * ]);\n * observable.subscribe({\n *  next: value => console.log(value),\n *  complete: () => console.log('This is how it ends!'),\n * });\n *\n * // Logs:\n * // [4, 8, 0] after 4 seconds\n * // 'This is how it ends!' immediately after\n * ```\n *\n * @see {@link combineLatest}\n * @see {@link zip}\n *\n * @param {...ObservableInput} args Any number of Observables provided either as an array or as an arguments\n * passed directly to the operator.\n * @param {function} [project] Function that takes values emitted by input Observables and returns value\n * that will appear in resulting Observable instead of default array.\n * @return {Observable} Observable emitting either an array of last values emitted by passed Observables\n * or value from project function.\n */\nexport function forkJoin(...args: any[]): Observable<any> {\n  const resultSelector = popResultSelector(args);\n  const { args: sources, keys } = argsArgArrayOrObject(args);\n  const result = new Observable((subscriber) => {\n    const { length } = sources;\n    if (!length) {\n      subscriber.complete();\n      return;\n    }\n    const values = new Array(length);\n    let remainingCompletions = length;\n    let remainingEmissions = length;\n    for (let sourceIndex = 0; sourceIndex < length; sourceIndex++) {\n      let hasValue = false;\n      innerFrom(sources[sourceIndex]).subscribe(\n        createOperatorSubscriber(\n          subscriber,\n          (value) => {\n            if (!hasValue) {\n              hasValue = true;\n              remainingEmissions--;\n            }\n            values[sourceIndex] = value;\n          },\n          () => remainingCompletions--,\n          undefined,\n          () => {\n            if (!remainingCompletions || !hasValue) {\n              if (!remainingEmissions) {\n                subscriber.next(keys ? createObject(keys, values) : values);\n              }\n              subscriber.complete();\n            }\n          }\n        )\n      );\n    }\n  });\n  return resultSelector ? result.pipe(mapOneOrManyArgs(resultSelector)) : result;\n}\n","import { Observable } from '../Observable';\nimport { ObservableInput, SchedulerLike, ObservedValueOf } from '../types';\nimport { scheduled } from '../scheduled/scheduled';\nimport { innerFrom } from './innerFrom';\n\nexport function from<O extends ObservableInput<any>>(input: O): Observable<ObservedValueOf<O>>;\n/** @deprecated The `scheduler` parameter will be removed in v8. Use `scheduled`. Details: https://rxjs.dev/deprecations/scheduler-argument */\nexport function from<O extends ObservableInput<any>>(input: O, scheduler: SchedulerLike | undefined): Observable<ObservedValueOf<O>>;\n\n/**\n * Creates an Observable from an Array, an array-like object, a Promise, an iterable object, or an Observable-like object.\n *\n * <span class=\"informal\">Converts almost anything to an Observable.</span>\n *\n * ![](from.png)\n *\n * `from` converts various other objects and data types into Observables. It also converts a Promise, an array-like, or an\n * <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols#iterable\" target=\"_blank\">iterable</a>\n * object into an Observable that emits the items in that promise, array, or iterable. A String, in this context, is treated\n * as an array of characters. Observable-like objects (contains a function named with the ES2015 Symbol for Observable) can also be\n * converted through this operator.\n *\n * ## Examples\n *\n * Converts an array to an Observable\n *\n * ```ts\n * import { from } from 'rxjs';\n *\n * const array = [10, 20, 30];\n * const result = from(array);\n *\n * result.subscribe(x => console.log(x));\n *\n * // Logs:\n * // 10\n * // 20\n * // 30\n * ```\n *\n * Convert an infinite iterable (from a generator) to an Observable\n *\n * ```ts\n * import { from, take } from 'rxjs';\n *\n * function* generateDoubles(seed) {\n *    let i = seed;\n *    while (true) {\n *      yield i;\n *      i = 2 * i; // double it\n *    }\n * }\n *\n * const iterator = generateDoubles(3);\n * const result = from(iterator).pipe(take(10));\n *\n * result.subscribe(x => console.log(x));\n *\n * // Logs:\n * // 3\n * // 6\n * // 12\n * // 24\n * // 48\n * // 96\n * // 192\n * // 384\n * // 768\n * // 1536\n * ```\n *\n * With `asyncScheduler`\n *\n * ```ts\n * import { from, asyncScheduler } from 'rxjs';\n *\n * console.log('start');\n *\n * const array = [10, 20, 30];\n * const result = from(array, asyncScheduler);\n *\n * result.subscribe(x => console.log(x));\n *\n * console.log('end');\n *\n * // Logs:\n * // 'start'\n * // 'end'\n * // 10\n * // 20\n * // 30\n * ```\n *\n * @see {@link fromEvent}\n * @see {@link fromEventPattern}\n *\n * @param {ObservableInput<T>} A subscription object, a Promise, an Observable-like,\n * an Array, an iterable, or an array-like object to be converted.\n * @param {SchedulerLike} An optional {@link SchedulerLike} on which to schedule the emission of values.\n * @return {Observable<T>}\n */\nexport function from<T>(input: ObservableInput<T>, scheduler?: SchedulerLike): Observable<T> {\n  return scheduler ? scheduled(input, scheduler) : innerFrom(input);\n}\n","import { innerFrom } from '../observable/innerFrom';\nimport { Observable } from '../Observable';\nimport { mergeMap } from '../operators/mergeMap';\nimport { isArrayLike } from '../util/isArrayLike';\nimport { isFunction } from '../util/isFunction';\nimport { mapOneOrManyArgs } from '../util/mapOneOrManyArgs';\n\n// These constants are used to create handler registry functions using array mapping below.\nconst nodeEventEmitterMethods = ['addListener', 'removeListener'] as const;\nconst eventTargetMethods = ['addEventListener', 'removeEventListener'] as const;\nconst jqueryMethods = ['on', 'off'] as const;\n\nexport interface NodeStyleEventEmitter {\n  addListener(eventName: string | symbol, handler: NodeEventHandler): this;\n  removeListener(eventName: string | symbol, handler: NodeEventHandler): this;\n}\n\nexport type NodeEventHandler = (...args: any[]) => void;\n\n// For APIs that implement `addListener` and `removeListener` methods that may\n// not use the same arguments or return EventEmitter values\n// such as React Native\nexport interface NodeCompatibleEventEmitter {\n  addListener(eventName: string, handler: NodeEventHandler): void | {};\n  removeListener(eventName: string, handler: NodeEventHandler): void | {};\n}\n\n// Use handler types like those in @types/jquery. See:\n// https://github.com/DefinitelyTyped/DefinitelyTyped/blob/847731ba1d7fa6db6b911c0e43aa0afe596e7723/types/jquery/misc.d.ts#L6395\nexport interface JQueryStyleEventEmitter<TContext, T> {\n  on(eventName: string, handler: (this: TContext, t: T, ...args: any[]) => any): void;\n  off(eventName: string, handler: (this: TContext, t: T, ...args: any[]) => any): void;\n}\n\nexport interface EventListenerObject<E> {\n  handleEvent(evt: E): void;\n}\n\nexport interface HasEventTargetAddRemove<E> {\n  addEventListener(\n    type: string,\n    listener: ((evt: E) => void) | EventListenerObject<E> | null,\n    options?: boolean | AddEventListenerOptions\n  ): void;\n  removeEventListener(\n    type: string,\n    listener: ((evt: E) => void) | EventListenerObject<E> | null,\n    options?: EventListenerOptions | boolean\n  ): void;\n}\n\nexport interface EventListenerOptions {\n  capture?: boolean;\n  passive?: boolean;\n  once?: boolean;\n}\n\nexport interface AddEventListenerOptions extends EventListenerOptions {\n  once?: boolean;\n  passive?: boolean;\n}\n\nexport function fromEvent<T>(target: HasEventTargetAddRemove<T> | ArrayLike<HasEventTargetAddRemove<T>>, eventName: string): Observable<T>;\nexport function fromEvent<T, R>(\n  target: HasEventTargetAddRemove<T> | ArrayLike<HasEventTargetAddRemove<T>>,\n  eventName: string,\n  resultSelector: (event: T) => R\n): Observable<R>;\nexport function fromEvent<T>(\n  target: HasEventTargetAddRemove<T> | ArrayLike<HasEventTargetAddRemove<T>>,\n  eventName: string,\n  options: EventListenerOptions\n): Observable<T>;\nexport function fromEvent<T, R>(\n  target: HasEventTargetAddRemove<T> | ArrayLike<HasEventTargetAddRemove<T>>,\n  eventName: string,\n  options: EventListenerOptions,\n  resultSelector: (event: T) => R\n): Observable<R>;\n\nexport function fromEvent(target: NodeStyleEventEmitter | ArrayLike<NodeStyleEventEmitter>, eventName: string): Observable<unknown>;\n/** @deprecated Do not specify explicit type parameters. Signatures with type parameters that cannot be inferred will be removed in v8. */\nexport function fromEvent<T>(target: NodeStyleEventEmitter | ArrayLike<NodeStyleEventEmitter>, eventName: string): Observable<T>;\nexport function fromEvent<R>(\n  target: NodeStyleEventEmitter | ArrayLike<NodeStyleEventEmitter>,\n  eventName: string,\n  resultSelector: (...args: any[]) => R\n): Observable<R>;\n\nexport function fromEvent(\n  target: NodeCompatibleEventEmitter | ArrayLike<NodeCompatibleEventEmitter>,\n  eventName: string\n): Observable<unknown>;\n/** @deprecated Do not specify explicit type parameters. Signatures with type parameters that cannot be inferred will be removed in v8. */\nexport function fromEvent<T>(target: NodeCompatibleEventEmitter | ArrayLike<NodeCompatibleEventEmitter>, eventName: string): Observable<T>;\nexport function fromEvent<R>(\n  target: NodeCompatibleEventEmitter | ArrayLike<NodeCompatibleEventEmitter>,\n  eventName: string,\n  resultSelector: (...args: any[]) => R\n): Observable<R>;\n\nexport function fromEvent<T>(\n  target: JQueryStyleEventEmitter<any, T> | ArrayLike<JQueryStyleEventEmitter<any, T>>,\n  eventName: string\n): Observable<T>;\nexport function fromEvent<T, R>(\n  target: JQueryStyleEventEmitter<any, T> | ArrayLike<JQueryStyleEventEmitter<any, T>>,\n  eventName: string,\n  resultSelector: (value: T, ...args: any[]) => R\n): Observable<R>;\n\n/**\n * Creates an Observable that emits events of a specific type coming from the\n * given event target.\n *\n * <span class=\"informal\">Creates an Observable from DOM events, or Node.js\n * EventEmitter events or others.</span>\n *\n * ![](fromEvent.png)\n *\n * `fromEvent` accepts as a first argument event target, which is an object with methods\n * for registering event handler functions. As a second argument it takes string that indicates\n * type of event we want to listen for. `fromEvent` supports selected types of event targets,\n * which are described in detail below. If your event target does not match any of the ones listed,\n * you should use {@link fromEventPattern}, which can be used on arbitrary APIs.\n * When it comes to APIs supported by `fromEvent`, their methods for adding and removing event\n * handler functions have different names, but they all accept a string describing event type\n * and function itself, which will be called whenever said event happens.\n *\n * Every time resulting Observable is subscribed, event handler function will be registered\n * to event target on given event type. When that event fires, value\n * passed as a first argument to registered function will be emitted by output Observable.\n * When Observable is unsubscribed, function will be unregistered from event target.\n *\n * Note that if event target calls registered function with more than one argument, second\n * and following arguments will not appear in resulting stream. In order to get access to them,\n * you can pass to `fromEvent` optional project function, which will be called with all arguments\n * passed to event handler. Output Observable will then emit value returned by project function,\n * instead of the usual value.\n *\n * Remember that event targets listed below are checked via duck typing. It means that\n * no matter what kind of object you have and no matter what environment you work in,\n * you can safely use `fromEvent` on that object if it exposes described methods (provided\n * of course they behave as was described above). So for example if Node.js library exposes\n * event target which has the same method names as DOM EventTarget, `fromEvent` is still\n * a good choice.\n *\n * If the API you use is more callback then event handler oriented (subscribed\n * callback function fires only once and thus there is no need to manually\n * unregister it), you should use {@link bindCallback} or {@link bindNodeCallback}\n * instead.\n *\n * `fromEvent` supports following types of event targets:\n *\n * **DOM EventTarget**\n *\n * This is an object with `addEventListener` and `removeEventListener` methods.\n *\n * In the browser, `addEventListener` accepts - apart from event type string and event\n * handler function arguments - optional third parameter, which is either an object or boolean,\n * both used for additional configuration how and when passed function will be called. When\n * `fromEvent` is used with event target of that type, you can provide this values\n * as third parameter as well.\n *\n * **Node.js EventEmitter**\n *\n * An object with `addListener` and `removeListener` methods.\n *\n * **JQuery-style event target**\n *\n * An object with `on` and `off` methods\n *\n * **DOM NodeList**\n *\n * List of DOM Nodes, returned for example by `document.querySelectorAll` or `Node.childNodes`.\n *\n * Although this collection is not event target in itself, `fromEvent` will iterate over all Nodes\n * it contains and install event handler function in every of them. When returned Observable\n * is unsubscribed, function will be removed from all Nodes.\n *\n * **DOM HtmlCollection**\n *\n * Just as in case of NodeList it is a collection of DOM nodes. Here as well event handler function is\n * installed and removed in each of elements.\n *\n *\n * ## Examples\n *\n * Emit clicks happening on the DOM document\n *\n * ```ts\n * import { fromEvent } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * clicks.subscribe(x => console.log(x));\n *\n * // Results in:\n * // MouseEvent object logged to console every time a click\n * // occurs on the document.\n * ```\n *\n * Use `addEventListener` with capture option\n *\n * ```ts\n * import { fromEvent } from 'rxjs';\n *\n * const clicksInDocument = fromEvent(document, 'click', true); // note optional configuration parameter\n *                                                              // which will be passed to addEventListener\n * const clicksInDiv = fromEvent(someDivInDocument, 'click');\n *\n * clicksInDocument.subscribe(() => console.log('document'));\n * clicksInDiv.subscribe(() => console.log('div'));\n *\n * // By default events bubble UP in DOM tree, so normally\n * // when we would click on div in document\n * // \"div\" would be logged first and then \"document\".\n * // Since we specified optional `capture` option, document\n * // will catch event when it goes DOWN DOM tree, so console\n * // will log \"document\" and then \"div\".\n * ```\n *\n * @see {@link bindCallback}\n * @see {@link bindNodeCallback}\n * @see {@link fromEventPattern}\n *\n * @param {FromEventTarget<T>} target The DOM EventTarget, Node.js\n * EventEmitter, JQuery-like event target, NodeList or HTMLCollection to attach the event handler to.\n * @param {string} eventName The event name of interest, being emitted by the\n * `target`.\n * @param {EventListenerOptions} [options] Options to pass through to addEventListener\n * @return {Observable<T>}\n */\nexport function fromEvent<T>(\n  target: any,\n  eventName: string,\n  options?: EventListenerOptions | ((...args: any[]) => T),\n  resultSelector?: (...args: any[]) => T\n): Observable<T> {\n  if (isFunction(options)) {\n    resultSelector = options;\n    options = undefined;\n  }\n  if (resultSelector) {\n    return fromEvent<T>(target, eventName, options as EventListenerOptions).pipe(mapOneOrManyArgs(resultSelector));\n  }\n\n  // Figure out our add and remove methods. In order to do this,\n  // we are going to analyze the target in a preferred order, if\n  // the target matches a given signature, we take the two \"add\" and \"remove\"\n  // method names and apply them to a map to create opposite versions of the\n  // same function. This is because they all operate in duplicate pairs,\n  // `addListener(name, handler)`, `removeListener(name, handler)`, for example.\n  // The call only differs by method name, as to whether or not you're adding or removing.\n  const [add, remove] =\n    // If it is an EventTarget, we need to use a slightly different method than the other two patterns.\n    isEventTarget(target)\n      ? eventTargetMethods.map((methodName) => (handler: any) => target[methodName](eventName, handler, options as EventListenerOptions))\n      : // In all other cases, the call pattern is identical with the exception of the method names.\n      isNodeStyleEventEmitter(target)\n      ? nodeEventEmitterMethods.map(toCommonHandlerRegistry(target, eventName))\n      : isJQueryStyleEventEmitter(target)\n      ? jqueryMethods.map(toCommonHandlerRegistry(target, eventName))\n      : [];\n\n  // If add is falsy, it's because we didn't match a pattern above.\n  // Check to see if it is an ArrayLike, because if it is, we want to\n  // try to apply fromEvent to all of it's items. We do this check last,\n  // because there are may be some types that are both ArrayLike *and* implement\n  // event registry points, and we'd rather delegate to that when possible.\n  if (!add) {\n    if (isArrayLike(target)) {\n      return mergeMap((subTarget: any) => fromEvent(subTarget, eventName, options as EventListenerOptions))(\n        innerFrom(target)\n      ) as Observable<T>;\n    }\n  }\n\n  // If add is falsy and we made it here, it's because we didn't\n  // match any valid target objects above.\n  if (!add) {\n    throw new TypeError('Invalid event target');\n  }\n\n  return new Observable<T>((subscriber) => {\n    // The handler we are going to register. Forwards the event object, by itself, or\n    // an array of arguments to the event handler, if there is more than one argument,\n    // to the consumer.\n    const handler = (...args: any[]) => subscriber.next(1 < args.length ? args : args[0]);\n    // Do the work of adding the handler to the target.\n    add(handler);\n    // When we finalize, we want to remove the handler and free up memory.\n    return () => remove!(handler);\n  });\n}\n\n/**\n * Used to create `add` and `remove` functions to register and unregister event handlers\n * from a target in the most common handler pattern, where there are only two arguments.\n * (e.g.  `on(name, fn)`, `off(name, fn)`, `addListener(name, fn)`, or `removeListener(name, fn)`)\n * @param target The target we're calling methods on\n * @param eventName The event name for the event we're creating register or unregister functions for\n */\nfunction toCommonHandlerRegistry(target: any, eventName: string) {\n  return (methodName: string) => (handler: any) => target[methodName](eventName, handler);\n}\n\n/**\n * Checks to see if the target implements the required node-style EventEmitter methods\n * for adding and removing event handlers.\n * @param target the object to check\n */\nfunction isNodeStyleEventEmitter(target: any): target is NodeStyleEventEmitter {\n  return isFunction(target.addListener) && isFunction(target.removeListener);\n}\n\n/**\n * Checks to see if the target implements the required jQuery-style EventEmitter methods\n * for adding and removing event handlers.\n * @param target the object to check\n */\nfunction isJQueryStyleEventEmitter(target: any): target is JQueryStyleEventEmitter<any, any> {\n  return isFunction(target.on) && isFunction(target.off);\n}\n\n/**\n * Checks to see if the target implements the required EventTarget methods\n * for adding and removing event handlers.\n * @param target the object to check\n */\nfunction isEventTarget(target: any): target is HasEventTargetAddRemove<any> {\n  return isFunction(target.addEventListener) && isFunction(target.removeEventListener);\n}\n","import { Observable } from '../Observable';\nimport { isFunction } from '../util/isFunction';\nimport { NodeEventHandler } from './fromEvent';\nimport { mapOneOrManyArgs } from '../util/mapOneOrManyArgs';\n\n/* tslint:disable:max-line-length */\nexport function fromEventPattern<T>(\n  addHandler: (handler: NodeEventHandler) => any,\n  removeHandler?: (handler: NodeEventHandler, signal?: any) => void\n): Observable<T>;\nexport function fromEventPattern<T>(\n  addHandler: (handler: NodeEventHandler) => any,\n  removeHandler?: (handler: NodeEventHandler, signal?: any) => void,\n  resultSelector?: (...args: any[]) => T\n): Observable<T>;\n/* tslint:enable:max-line-length */\n\n/**\n * Creates an Observable from an arbitrary API for registering event handlers.\n *\n * <span class=\"informal\">When that method for adding event handler was something {@link fromEvent}\n * was not prepared for.</span>\n *\n * ![](fromEventPattern.png)\n *\n * `fromEventPattern` allows you to convert into an Observable any API that supports registering handler functions\n * for events. It is similar to {@link fromEvent}, but far\n * more flexible. In fact, all use cases of {@link fromEvent} could be easily handled by\n * `fromEventPattern` (although in slightly more verbose way).\n *\n * This operator accepts as a first argument an `addHandler` function, which will be injected with\n * handler parameter. That handler is actually an event handler function that you now can pass\n * to API expecting it. `addHandler` will be called whenever Observable\n * returned by the operator is subscribed, so registering handler in API will not\n * necessarily happen when `fromEventPattern` is called.\n *\n * After registration, every time an event that we listen to happens,\n * Observable returned by `fromEventPattern` will emit value that event handler\n * function was called with. Note that if event handler was called with more\n * than one argument, second and following arguments will not appear in the Observable.\n *\n * If API you are using allows to unregister event handlers as well, you can pass to `fromEventPattern`\n * another function - `removeHandler` - as a second parameter. It will be injected\n * with the same handler function as before, which now you can use to unregister\n * it from the API. `removeHandler` will be called when consumer of resulting Observable\n * unsubscribes from it.\n *\n * In some APIs unregistering is actually handled differently. Method registering an event handler\n * returns some kind of token, which is later used to identify which function should\n * be unregistered or it itself has method that unregisters event handler.\n * If that is the case with your API, make sure token returned\n * by registering method is returned by `addHandler`. Then it will be passed\n * as a second argument to `removeHandler`, where you will be able to use it.\n *\n * If you need access to all event handler parameters (not only the first one),\n * or you need to transform them in any way, you can call `fromEventPattern` with optional\n * third parameter - project function which will accept all arguments passed to\n * event handler when it is called. Whatever is returned from project function will appear on\n * resulting stream instead of usual event handlers first argument. This means\n * that default project can be thought of as function that takes its first parameter\n * and ignores the rest.\n *\n * ## Examples\n *\n * Emits clicks happening on the DOM document\n *\n * ```ts\n * import { fromEventPattern } from 'rxjs';\n *\n * function addClickHandler(handler) {\n *   document.addEventListener('click', handler);\n * }\n *\n * function removeClickHandler(handler) {\n *   document.removeEventListener('click', handler);\n * }\n *\n * const clicks = fromEventPattern(\n *   addClickHandler,\n *   removeClickHandler\n * );\n * clicks.subscribe(x => console.log(x));\n *\n * // Whenever you click anywhere in the browser, DOM MouseEvent\n * // object will be logged.\n * ```\n *\n * Use with API that returns cancellation token\n *\n * ```ts\n * import { fromEventPattern } from 'rxjs';\n *\n * const token = someAPI.registerEventHandler(function() {});\n * someAPI.unregisterEventHandler(token); // this APIs cancellation method accepts\n *                                        // not handler itself, but special token.\n *\n * const someAPIObservable = fromEventPattern(\n *   function(handler) { return someAPI.registerEventHandler(handler); }, // Note that we return the token here...\n *   function(handler, token) { someAPI.unregisterEventHandler(token); }  // ...to then use it here.\n * );\n * ```\n *\n * Use with project function\n *\n * ```ts\n * import { fromEventPattern } from 'rxjs';\n *\n * someAPI.registerEventHandler((eventType, eventMessage) => {\n *   console.log(eventType, eventMessage); // Logs 'EVENT_TYPE' 'EVENT_MESSAGE' to console.\n * });\n *\n * const someAPIObservable = fromEventPattern(\n *   handler => someAPI.registerEventHandler(handler),\n *   handler => someAPI.unregisterEventHandler(handler)\n *   (eventType, eventMessage) => eventType + ' --- ' + eventMessage // without that function only 'EVENT_TYPE'\n * );                                                                // would be emitted by the Observable\n *\n * someAPIObservable.subscribe(value => console.log(value));\n *\n * // Logs:\n * // 'EVENT_TYPE --- EVENT_MESSAGE'\n * ```\n *\n * @see {@link fromEvent}\n * @see {@link bindCallback}\n * @see {@link bindNodeCallback}\n *\n * @param {function(handler: Function): any} addHandler A function that takes\n * a `handler` function as argument and attaches it somehow to the actual\n * source of events.\n * @param {function(handler: Function, token?: any): void} [removeHandler] A function that\n * takes a `handler` function as an argument and removes it from the event source. If `addHandler`\n * returns some kind of token, `removeHandler` function will have it as a second parameter.\n * @param {function(...args: any): T} [project] A function to\n * transform results. It takes the arguments from the event handler and\n * should return a single value.\n * @return {Observable<T>} Observable which, when an event happens, emits first parameter\n * passed to registered event handler. Alternatively it emits whatever project function returns\n * at that moment.\n */\nexport function fromEventPattern<T>(\n  addHandler: (handler: NodeEventHandler) => any,\n  removeHandler?: (handler: NodeEventHandler, signal?: any) => void,\n  resultSelector?: (...args: any[]) => T\n): Observable<T | T[]> {\n  if (resultSelector) {\n    return fromEventPattern<T>(addHandler, removeHandler).pipe(mapOneOrManyArgs(resultSelector));\n  }\n\n  return new Observable<T | T[]>((subscriber) => {\n    const handler = (...e: T[]) => subscriber.next(e.length === 1 ? e[0] : e);\n    const retValue = addHandler(handler);\n    return isFunction(removeHandler) ? () => removeHandler(handler, retValue) : undefined;\n  });\n}\n","import { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { Subscribable } from '../types';\n\n/**\n * Used to convert a subscribable to an observable.\n *\n * Currently, this is only used within internals.\n *\n * TODO: Discuss ObservableInput supporting \"Subscribable\".\n * https://github.com/ReactiveX/rxjs/issues/5909\n *\n * @param subscribable A subscribable\n */\nexport function fromSubscribable<T>(subscribable: Subscribable<T>) {\n  return new Observable((subscriber: Subscriber<T>) => subscribable.subscribe(subscriber));\n}\n","import { Observable } from '../Observable';\nimport { identity } from '../util/identity';\nimport { ObservableInput, SchedulerLike } from '../types';\nimport { isScheduler } from '../util/isScheduler';\nimport { defer } from './defer';\nimport { scheduleIterable } from '../scheduled/scheduleIterable';\n\ntype ConditionFunc<S> = (state: S) => boolean;\ntype IterateFunc<S> = (state: S) => S;\ntype ResultFunc<S, T> = (state: S) => T;\n\nexport interface GenerateBaseOptions<S> {\n  /**\n   * Initial state.\n   */\n  initialState: S;\n  /**\n   * Condition function that accepts state and returns boolean.\n   * When it returns false, the generator stops.\n   * If not specified, a generator never stops.\n   */\n  condition?: ConditionFunc<S>;\n  /**\n   * Iterate function that accepts state and returns new state.\n   */\n  iterate: IterateFunc<S>;\n  /**\n   * SchedulerLike to use for generation process.\n   * By default, a generator starts immediately.\n   */\n  scheduler?: SchedulerLike;\n}\n\nexport interface GenerateOptions<T, S> extends GenerateBaseOptions<S> {\n  /**\n   * Result selection function that accepts state and returns a value to emit.\n   */\n  resultSelector: ResultFunc<S, T>;\n}\n\n/**\n * Generates an observable sequence by running a state-driven loop\n * producing the sequence's elements, using the specified scheduler\n * to send out observer messages.\n *\n * ![](generate.png)\n *\n * ## Examples\n *\n * Produces sequence of numbers\n *\n * ```ts\n * import { generate } from 'rxjs';\n *\n * const result = generate(0, x => x < 3, x => x + 1, x => x);\n *\n * result.subscribe(x => console.log(x));\n *\n * // Logs:\n * // 0\n * // 1\n * // 2\n * ```\n *\n * Use `asapScheduler`\n *\n * ```ts\n * import { generate, asapScheduler } from 'rxjs';\n *\n * const result = generate(1, x => x < 5, x => x * 2, x => x + 1, asapScheduler);\n *\n * result.subscribe(x => console.log(x));\n *\n * // Logs:\n * // 2\n * // 3\n * // 5\n * ```\n *\n * @see {@link from}\n * @see {@link Observable}\n *\n * @param {S} initialState Initial state.\n * @param {function (state: S): boolean} condition Condition to terminate generation (upon returning false).\n * @param {function (state: S): S} iterate Iteration step function.\n * @param {function (state: S): T} resultSelector Selector function for results produced in the sequence. (deprecated)\n * @param {SchedulerLike} [scheduler] A {@link SchedulerLike} on which to run the generator loop. If not provided, defaults to emit immediately.\n * @returns {Observable<T>} The generated sequence.\n * @deprecated Instead of passing separate arguments, use the options argument. Signatures taking separate arguments will be removed in v8.\n */\nexport function generate<T, S>(\n  initialState: S,\n  condition: ConditionFunc<S>,\n  iterate: IterateFunc<S>,\n  resultSelector: ResultFunc<S, T>,\n  scheduler?: SchedulerLike\n): Observable<T>;\n\n/**\n * Generates an Observable by running a state-driven loop\n * that emits an element on each iteration.\n *\n * <span class=\"informal\">Use it instead of nexting values in a for loop.</span>\n *\n * ![](generate.png)\n *\n * `generate` allows you to create a stream of values generated with a loop very similar to\n * a traditional for loop. The first argument of `generate` is a beginning value. The second argument\n * is a function that accepts this value and tests if some condition still holds. If it does,\n * then the loop continues, if not, it stops. The third value is a function which takes the\n * previously defined value and modifies it in some way on each iteration. Note how these three parameters\n * are direct equivalents of three expressions in a traditional for loop: the first expression\n * initializes some state (for example, a numeric index), the second tests if the loop can perform the next\n * iteration (for example, if the index is lower than 10) and the third states how the defined value\n * will be modified on every step (for example, the index will be incremented by one).\n *\n * Return value of a `generate` operator is an Observable that on each loop iteration\n * emits a value. First of all, the condition function is ran. If it returns true, then the Observable\n * emits the currently stored value (initial value at the first iteration) and finally updates\n * that value with iterate function. If at some point the condition returns false, then the Observable\n * completes at that moment.\n *\n * Optionally you can pass a fourth parameter to `generate` - a result selector function which allows you\n * to immediately map the value that would normally be emitted by an Observable.\n *\n * If you find three anonymous functions in `generate` call hard to read, you can provide\n * a single object to the operator instead where the object has the properties: `initialState`,\n * `condition`, `iterate` and `resultSelector`, which should have respective values that you\n * would normally pass to `generate`. `resultSelector` is still optional, but that form\n * of calling `generate` allows you to omit `condition` as well. If you omit it, that means\n * condition always holds, or in other words the resulting Observable will never complete.\n *\n * Both forms of `generate` can optionally accept a scheduler. In case of a multi-parameter call,\n * scheduler simply comes as a last argument (no matter if there is a `resultSelector`\n * function or not). In case of a single-parameter call, you can provide it as a\n * `scheduler` property on the object passed to the operator. In both cases, a scheduler decides when\n * the next iteration of the loop will happen and therefore when the next value will be emitted\n * by the Observable. For example, to ensure that each value is pushed to the Observer\n * on a separate task in the event loop, you could use the `async` scheduler. Note that\n * by default (when no scheduler is passed) values are simply emitted synchronously.\n *\n *\n * ## Examples\n *\n * Use with condition and iterate functions\n *\n * ```ts\n * import { generate } from 'rxjs';\n *\n * const result = generate(0, x => x < 3, x => x + 1);\n *\n * result.subscribe({\n *   next: value => console.log(value),\n *   complete: () => console.log('Complete!')\n * });\n *\n * // Logs:\n * // 0\n * // 1\n * // 2\n * // 'Complete!'\n * ```\n *\n * Use with condition, iterate and resultSelector functions\n *\n * ```ts\n * import { generate } from 'rxjs';\n *\n * const result = generate(0, x => x < 3, x => x + 1, x => x * 1000);\n *\n * result.subscribe({\n *   next: value => console.log(value),\n *   complete: () => console.log('Complete!')\n * });\n *\n * // Logs:\n * // 0\n * // 1000\n * // 2000\n * // 'Complete!'\n * ```\n *\n * Use with options object\n *\n * ```ts\n * import { generate } from 'rxjs';\n *\n * const result = generate({\n *   initialState: 0,\n *   condition(value) { return value < 3; },\n *   iterate(value) { return value + 1; },\n *   resultSelector(value) { return value * 1000; }\n * });\n *\n * result.subscribe({\n *   next: value => console.log(value),\n *   complete: () => console.log('Complete!')\n * });\n *\n * // Logs:\n * // 0\n * // 1000\n * // 2000\n * // 'Complete!'\n * ```\n *\n * Use options object without condition function\n *\n * ```ts\n * import { generate } from 'rxjs';\n *\n * const result = generate({\n *   initialState: 0,\n *   iterate(value) { return value + 1; },\n *   resultSelector(value) { return value * 1000; }\n * });\n *\n * result.subscribe({\n *   next: value => console.log(value),\n *   complete: () => console.log('Complete!') // This will never run\n * });\n *\n * // Logs:\n * // 0\n * // 1000\n * // 2000\n * // 3000\n * // ...and never stops.\n * ```\n *\n * @see {@link from}\n *\n * @param {S} initialState Initial state.\n * @param {function (state: S): boolean} condition Condition to terminate generation (upon returning false).\n * @param {function (state: S): S} iterate Iteration step function.\n * @param {function (state: S): T} [resultSelector] Selector function for results produced in the sequence.\n * @param {Scheduler} [scheduler] A {@link Scheduler} on which to run the generator loop. If not provided, defaults to emitting immediately.\n * @return {Observable<T>} The generated sequence.\n * @deprecated Instead of passing separate arguments, use the options argument. Signatures taking separate arguments will be removed in v8.\n */\nexport function generate<S>(\n  initialState: S,\n  condition: ConditionFunc<S>,\n  iterate: IterateFunc<S>,\n  scheduler?: SchedulerLike\n): Observable<S>;\n\n/**\n * Generates an observable sequence by running a state-driven loop\n * producing the sequence's elements, using the specified scheduler\n * to send out observer messages.\n * The overload accepts options object that might contain initial state, iterate,\n * condition and scheduler.\n *\n * ![](generate.png)\n *\n * ## Examples\n *\n * Use options object with condition function\n *\n * ```ts\n * import { generate } from 'rxjs';\n *\n * const result = generate({\n *   initialState: 0,\n *   condition: x => x < 3,\n *   iterate: x => x + 1\n * });\n *\n * result.subscribe({\n *   next: value => console.log(value),\n *   complete: () => console.log('Complete!')\n * });\n *\n * // Logs:\n * // 0\n * // 1\n * // 2\n * // 'Complete!'\n * ```\n *\n * @see {@link from}\n * @see {@link Observable}\n *\n * @param {GenerateBaseOptions<S>} options Object that must contain initialState, iterate and might contain condition and scheduler.\n * @returns {Observable<S>} The generated sequence.\n */\nexport function generate<S>(options: GenerateBaseOptions<S>): Observable<S>;\n\n/**\n * Generates an observable sequence by running a state-driven loop\n * producing the sequence's elements, using the specified scheduler\n * to send out observer messages.\n * The overload accepts options object that might contain initial state, iterate,\n * condition, result selector and scheduler.\n *\n * ![](generate.png)\n *\n * ## Examples\n *\n * Use options object with condition and iterate function\n *\n * ```ts\n * import { generate } from 'rxjs';\n *\n * const result = generate({\n *   initialState: 0,\n *   condition: x => x < 3,\n *   iterate: x => x + 1,\n *   resultSelector: x => x\n * });\n *\n * result.subscribe({\n *   next: value => console.log(value),\n *   complete: () => console.log('Complete!')\n * });\n *\n * // Logs:\n * // 0\n * // 1\n * // 2\n * // 'Complete!'\n * ```\n *\n * @see {@link from}\n * @see {@link Observable}\n *\n * @param {GenerateOptions<T, S>} options Object that must contain initialState, iterate, resultSelector and might contain condition and scheduler.\n * @returns {Observable<T>} The generated sequence.\n */\nexport function generate<T, S>(options: GenerateOptions<T, S>): Observable<T>;\n\nexport function generate<T, S>(\n  initialStateOrOptions: S | GenerateOptions<T, S>,\n  condition?: ConditionFunc<S>,\n  iterate?: IterateFunc<S>,\n  resultSelectorOrScheduler?: ResultFunc<S, T> | SchedulerLike,\n  scheduler?: SchedulerLike\n): Observable<T> {\n  let resultSelector: ResultFunc<S, T>;\n  let initialState: S;\n\n  // TODO: Remove this as we move away from deprecated signatures\n  // and move towards a configuration object argument.\n  if (arguments.length === 1) {\n    // If we only have one argument, we can assume it is a configuration object.\n    // Note that folks not using TypeScript may trip over this.\n    ({\n      initialState,\n      condition,\n      iterate,\n      resultSelector = identity as ResultFunc<S, T>,\n      scheduler,\n    } = initialStateOrOptions as GenerateOptions<T, S>);\n  } else {\n    // Deprecated arguments path. Figure out what the user\n    // passed and set it here.\n    initialState = initialStateOrOptions as S;\n    if (!resultSelectorOrScheduler || isScheduler(resultSelectorOrScheduler)) {\n      resultSelector = identity as ResultFunc<S, T>;\n      scheduler = resultSelectorOrScheduler as SchedulerLike;\n    } else {\n      resultSelector = resultSelectorOrScheduler as ResultFunc<S, T>;\n    }\n  }\n\n  // The actual generator used to \"generate\" values.\n  function* gen() {\n    for (let state = initialState; !condition || condition(state); state = iterate!(state)) {\n      yield resultSelector(state);\n    }\n  }\n\n  // We use `defer` because we want to defer the creation of the iterator from the iterable.\n  return defer(\n    (scheduler\n      ? // If a scheduler was provided, use `scheduleIterable` to ensure that iteration/generation\n        // happens on the scheduler.\n        () => scheduleIterable(gen(), scheduler!)\n      : // Otherwise, if there's no scheduler, we can just use the generator function directly in\n        // `defer` and executing it will return the generator (which is iterable).\n        gen) as () => ObservableInput<T>\n  );\n}\n","import { Observable } from '../Observable';\nimport { defer } from './defer';\nimport { ObservableInput } from '../types';\n\n/**\n * Checks a boolean at subscription time, and chooses between one of two observable sources\n *\n * `iif` expects a function that returns a boolean (the `condition` function), and two sources,\n * the `trueResult` and the `falseResult`, and returns an Observable.\n *\n * At the moment of subscription, the `condition` function is called. If the result is `true`, the\n * subscription will be to the source passed as the `trueResult`, otherwise, the subscription will be\n * to the source passed as the `falseResult`.\n *\n * If you need to check more than two options to choose between more than one observable, have a look at the {@link defer} creation method.\n *\n * ## Examples\n *\n * Change at runtime which Observable will be subscribed\n *\n * ```ts\n * import { iif, of } from 'rxjs';\n *\n * let subscribeToFirst;\n * const firstOrSecond = iif(\n *   () => subscribeToFirst,\n *   of('first'),\n *   of('second')\n * );\n *\n * subscribeToFirst = true;\n * firstOrSecond.subscribe(value => console.log(value));\n *\n * // Logs:\n * // 'first'\n *\n * subscribeToFirst = false;\n * firstOrSecond.subscribe(value => console.log(value));\n *\n * // Logs:\n * // 'second'\n * ```\n *\n * Control access to an Observable\n *\n * ```ts\n * import { iif, of, EMPTY } from 'rxjs';\n *\n * let accessGranted;\n * const observableIfYouHaveAccess = iif(\n *   () => accessGranted,\n *   of('It seems you have an access...'),\n *   EMPTY\n * );\n *\n * accessGranted = true;\n * observableIfYouHaveAccess.subscribe({\n *   next: value => console.log(value),\n *   complete: () => console.log('The end')\n * });\n *\n * // Logs:\n * // 'It seems you have an access...'\n * // 'The end'\n *\n * accessGranted = false;\n * observableIfYouHaveAccess.subscribe({\n *   next: value => console.log(value),\n *   complete: () => console.log('The end')\n * });\n *\n * // Logs:\n * // 'The end'\n * ```\n *\n * @see {@link defer}\n *\n * @param condition Condition which Observable should be chosen.\n * @param trueResult An Observable that will be subscribed if condition is true.\n * @param falseResult An Observable that will be subscribed if condition is false.\n * @return An observable that proxies to `trueResult` or `falseResult`, depending on the result of the `condition` function.\n */\nexport function iif<T, F>(condition: () => boolean, trueResult: ObservableInput<T>, falseResult: ObservableInput<F>): Observable<T | F> {\n  return defer(() => (condition() ? trueResult : falseResult));\n}\n","import { isArrayLike } from '../util/isArrayLike';\nimport { isPromise } from '../util/isPromise';\nimport { Observable } from '../Observable';\nimport { ObservableInput, ObservedValueOf, ReadableStreamLike } from '../types';\nimport { isInteropObservable } from '../util/isInteropObservable';\nimport { isAsyncIterable } from '../util/isAsyncIterable';\nimport { createInvalidObservableTypeError } from '../util/throwUnobservableError';\nimport { isIterable } from '../util/isIterable';\nimport { isReadableStreamLike, readableStreamLikeToAsyncGenerator } from '../util/isReadableStreamLike';\nimport { Subscriber } from '../Subscriber';\nimport { isFunction } from '../util/isFunction';\nimport { reportUnhandledError } from '../util/reportUnhandledError';\nimport { observable as Symbol_observable } from '../symbol/observable';\n\nexport function innerFrom<O extends ObservableInput<any>>(input: O): Observable<ObservedValueOf<O>>;\nexport function innerFrom<T>(input: ObservableInput<T>): Observable<T> {\n  if (input instanceof Observable) {\n    return input;\n  }\n  if (input != null) {\n    if (isInteropObservable(input)) {\n      return fromInteropObservable(input);\n    }\n    if (isArrayLike(input)) {\n      return fromArrayLike(input);\n    }\n    if (isPromise(input)) {\n      return fromPromise(input);\n    }\n    if (isAsyncIterable(input)) {\n      return fromAsyncIterable(input);\n    }\n    if (isIterable(input)) {\n      return fromIterable(input);\n    }\n    if (isReadableStreamLike(input)) {\n      return fromReadableStreamLike(input);\n    }\n  }\n\n  throw createInvalidObservableTypeError(input);\n}\n\n/**\n * Creates an RxJS Observable from an object that implements `Symbol.observable`.\n * @param obj An object that properly implements `Symbol.observable`.\n */\nexport function fromInteropObservable<T>(obj: any) {\n  return new Observable((subscriber: Subscriber<T>) => {\n    const obs = obj[Symbol_observable]();\n    if (isFunction(obs.subscribe)) {\n      return obs.subscribe(subscriber);\n    }\n    // Should be caught by observable subscribe function error handling.\n    throw new TypeError('Provided object does not correctly implement Symbol.observable');\n  });\n}\n\n/**\n * Synchronously emits the values of an array like and completes.\n * This is exported because there are creation functions and operators that need to\n * make direct use of the same logic, and there's no reason to make them run through\n * `from` conditionals because we *know* they're dealing with an array.\n * @param array The array to emit values from\n */\nexport function fromArrayLike<T>(array: ArrayLike<T>) {\n  return new Observable((subscriber: Subscriber<T>) => {\n    // Loop over the array and emit each value. Note two things here:\n    // 1. We're making sure that the subscriber is not closed on each loop.\n    //    This is so we don't continue looping over a very large array after\n    //    something like a `take`, `takeWhile`, or other synchronous unsubscription\n    //    has already unsubscribed.\n    // 2. In this form, reentrant code can alter that array we're looping over.\n    //    This is a known issue, but considered an edge case. The alternative would\n    //    be to copy the array before executing the loop, but this has\n    //    performance implications.\n    for (let i = 0; i < array.length && !subscriber.closed; i++) {\n      subscriber.next(array[i]);\n    }\n    subscriber.complete();\n  });\n}\n\nexport function fromPromise<T>(promise: PromiseLike<T>) {\n  return new Observable((subscriber: Subscriber<T>) => {\n    promise\n      .then(\n        (value) => {\n          if (!subscriber.closed) {\n            subscriber.next(value);\n            subscriber.complete();\n          }\n        },\n        (err: any) => subscriber.error(err)\n      )\n      .then(null, reportUnhandledError);\n  });\n}\n\nexport function fromIterable<T>(iterable: Iterable<T>) {\n  return new Observable((subscriber: Subscriber<T>) => {\n    for (const value of iterable) {\n      subscriber.next(value);\n      if (subscriber.closed) {\n        return;\n      }\n    }\n    subscriber.complete();\n  });\n}\n\nexport function fromAsyncIterable<T>(asyncIterable: AsyncIterable<T>) {\n  return new Observable((subscriber: Subscriber<T>) => {\n    process(asyncIterable, subscriber).catch((err) => subscriber.error(err));\n  });\n}\n\nexport function fromReadableStreamLike<T>(readableStream: ReadableStreamLike<T>) {\n  return fromAsyncIterable(readableStreamLikeToAsyncGenerator(readableStream));\n}\n\nasync function process<T>(asyncIterable: AsyncIterable<T>, subscriber: Subscriber<T>) {\n  for await (const value of asyncIterable) {\n    subscriber.next(value);\n    // A side-effect may have closed our subscriber,\n    // check before the next iteration.\n    if (subscriber.closed) {\n      return;\n    }\n  }\n  subscriber.complete();\n}\n","import { Observable } from '../Observable';\nimport { asyncScheduler } from '../scheduler/async';\nimport { SchedulerLike } from '../types';\nimport { timer } from './timer';\n\n/**\n * Creates an Observable that emits sequential numbers every specified\n * interval of time, on a specified {@link SchedulerLike}.\n *\n * <span class=\"informal\">Emits incremental numbers periodically in time.</span>\n *\n * ![](interval.png)\n *\n * `interval` returns an Observable that emits an infinite sequence of\n * ascending integers, with a constant interval of time of your choosing\n * between those emissions. The first emission is not sent immediately, but\n * only after the first period has passed. By default, this operator uses the\n * `async` {@link SchedulerLike} to provide a notion of time, but you may pass any\n * {@link SchedulerLike} to it.\n *\n * ## Example\n *\n * Emits ascending numbers, one every second (1000ms) up to the number 3\n *\n * ```ts\n * import { interval, take } from 'rxjs';\n *\n * const numbers = interval(1000);\n *\n * const takeFourNumbers = numbers.pipe(take(4));\n *\n * takeFourNumbers.subscribe(x => console.log('Next: ', x));\n *\n * // Logs:\n * // Next: 0\n * // Next: 1\n * // Next: 2\n * // Next: 3\n * ```\n *\n * @see {@link timer}\n * @see {@link delay}\n *\n * @param {number} [period=0] The interval size in milliseconds (by default)\n * or the time unit determined by the scheduler's clock.\n * @param {SchedulerLike} [scheduler=async] The {@link SchedulerLike} to use for scheduling\n * the emission of values, and providing a notion of \"time\".\n * @return {Observable} An Observable that emits a sequential number each time\n * interval.\n */\nexport function interval(period = 0, scheduler: SchedulerLike = asyncScheduler): Observable<number> {\n  if (period < 0) {\n    // We cannot schedule an interval in the past.\n    period = 0;\n  }\n\n  return timer(period, period, scheduler);\n}\n","import { Observable } from '../Observable';\nimport { ObservableInput, ObservableInputTuple, SchedulerLike } from '../types';\nimport { mergeAll } from '../operators/mergeAll';\nimport { innerFrom } from './innerFrom';\nimport { EMPTY } from './empty';\nimport { popNumber, popScheduler } from '../util/args';\nimport { from } from './from';\n\nexport function merge<A extends readonly unknown[]>(...sources: [...ObservableInputTuple<A>]): Observable<A[number]>;\nexport function merge<A extends readonly unknown[]>(...sourcesAndConcurrency: [...ObservableInputTuple<A>, number?]): Observable<A[number]>;\n/** @deprecated The `scheduler` parameter will be removed in v8. Use `scheduled` and `mergeAll`. Details: https://rxjs.dev/deprecations/scheduler-argument */\nexport function merge<A extends readonly unknown[]>(\n  ...sourcesAndScheduler: [...ObservableInputTuple<A>, SchedulerLike?]\n): Observable<A[number]>;\n/** @deprecated The `scheduler` parameter will be removed in v8. Use `scheduled` and `mergeAll`. Details: https://rxjs.dev/deprecations/scheduler-argument */\nexport function merge<A extends readonly unknown[]>(\n  ...sourcesAndConcurrencyAndScheduler: [...ObservableInputTuple<A>, number?, SchedulerLike?]\n): Observable<A[number]>;\n\n/**\n * Creates an output Observable which concurrently emits all values from every\n * given input Observable.\n *\n * <span class=\"informal\">Flattens multiple Observables together by blending\n * their values into one Observable.</span>\n *\n * ![](merge.png)\n *\n * `merge` subscribes to each given input Observable (as arguments), and simply\n * forwards (without doing any transformation) all the values from all the input\n * Observables to the output Observable. The output Observable only completes\n * once all input Observables have completed. Any error delivered by an input\n * Observable will be immediately emitted on the output Observable.\n *\n * ## Examples\n *\n * Merge together two Observables: 1s interval and clicks\n *\n * ```ts\n * import { merge, fromEvent, interval } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const timer = interval(1000);\n * const clicksOrTimer = merge(clicks, timer);\n * clicksOrTimer.subscribe(x => console.log(x));\n *\n * // Results in the following:\n * // timer will emit ascending values, one every second(1000ms) to console\n * // clicks logs MouseEvents to console everytime the \"document\" is clicked\n * // Since the two streams are merged you see these happening\n * // as they occur.\n * ```\n *\n * Merge together 3 Observables, but run only 2 concurrently\n *\n * ```ts\n * import { interval, take, merge } from 'rxjs';\n *\n * const timer1 = interval(1000).pipe(take(10));\n * const timer2 = interval(2000).pipe(take(6));\n * const timer3 = interval(500).pipe(take(10));\n *\n * const concurrent = 2; // the argument\n * const merged = merge(timer1, timer2, timer3, concurrent);\n * merged.subscribe(x => console.log(x));\n *\n * // Results in the following:\n * // - First timer1 and timer2 will run concurrently\n * // - timer1 will emit a value every 1000ms for 10 iterations\n * // - timer2 will emit a value every 2000ms for 6 iterations\n * // - after timer1 hits its max iteration, timer2 will\n * //   continue, and timer3 will start to run concurrently with timer2\n * // - when timer2 hits its max iteration it terminates, and\n * //   timer3 will continue to emit a value every 500ms until it is complete\n * ```\n *\n * @see {@link mergeAll}\n * @see {@link mergeMap}\n * @see {@link mergeMapTo}\n * @see {@link mergeScan}\n *\n * @param {...ObservableInput} observables Input Observables to merge together.\n * @param {number} [concurrent=Infinity] Maximum number of input\n * Observables being subscribed to concurrently.\n * @param {SchedulerLike} [scheduler=null] The {@link SchedulerLike} to use for managing\n * concurrency of input Observables.\n * @return {Observable} an Observable that emits items that are the result of\n * every input Observable.\n */\nexport function merge(...args: (ObservableInput<unknown> | number | SchedulerLike)[]): Observable<unknown> {\n  const scheduler = popScheduler(args);\n  const concurrent = popNumber(args, Infinity);\n  const sources = args as ObservableInput<unknown>[];\n  return !sources.length\n    ? // No source provided\n      EMPTY\n    : sources.length === 1\n    ? // One source? Just return it.\n      innerFrom(sources[0])\n    : // Merge all sources\n      mergeAll(concurrent)(from(sources, scheduler));\n}\n","import { Observable } from '../Observable';\nimport { noop } from '../util/noop';\n\n/**\n * An Observable that emits no items to the Observer and never completes.\n *\n * ![](never.png)\n *\n * A simple Observable that emits neither values nor errors nor the completion\n * notification. It can be used for testing purposes or for composing with other\n * Observables. Please note that by never emitting a complete notification, this\n * Observable keeps the subscription from being disposed automatically.\n * Subscriptions need to be manually disposed.\n *\n * ##  Example\n *\n * Emit the number 7, then never emit anything else (not even complete)\n *\n * ```ts\n * import { NEVER, startWith } from 'rxjs';\n *\n * const info = () => console.log('Will not be called');\n *\n * const result = NEVER.pipe(startWith(7));\n * result.subscribe({\n *   next: x => console.log(x),\n *   error: info,\n *   complete: info\n * });\n * ```\n *\n * @see {@link Observable}\n * @see {@link EMPTY}\n * @see {@link of}\n * @see {@link throwError}\n */\nexport const NEVER = new Observable<never>(noop);\n\n/**\n * @deprecated Replaced with the {@link NEVER} constant. Will be removed in v8.\n */\nexport function never() {\n  return NEVER;\n}\n","import { SchedulerLike, ValueFromArray } from '../types';\nimport { Observable } from '../Observable';\nimport { popScheduler } from '../util/args';\nimport { from } from './from';\n\n// Devs are more likely to pass null or undefined than they are a scheduler\n// without accompanying values. To make things easier for (naughty) devs who\n// use the `strictNullChecks: false` TypeScript compiler option, these\n// overloads with explicit null and undefined values are included.\n\nexport function of(value: null): Observable<null>;\nexport function of(value: undefined): Observable<undefined>;\n\n/** @deprecated The `scheduler` parameter will be removed in v8. Use `scheduled`. Details: https://rxjs.dev/deprecations/scheduler-argument */\nexport function of(scheduler: SchedulerLike): Observable<never>;\n/** @deprecated The `scheduler` parameter will be removed in v8. Use `scheduled`. Details: https://rxjs.dev/deprecations/scheduler-argument */\nexport function of<A extends readonly unknown[]>(...valuesAndScheduler: [...A, SchedulerLike]): Observable<ValueFromArray<A>>;\n\nexport function of(): Observable<never>;\n/** @deprecated Do not specify explicit type parameters. Signatures with type parameters that cannot be inferred will be removed in v8. */\nexport function of<T>(): Observable<T>;\nexport function of<T>(value: T): Observable<T>;\nexport function of<A extends readonly unknown[]>(...values: A): Observable<ValueFromArray<A>>;\n\n/**\n * Converts the arguments to an observable sequence.\n *\n * <span class=\"informal\">Each argument becomes a `next` notification.</span>\n *\n * ![](of.png)\n *\n * Unlike {@link from}, it does not do any flattening and emits each argument in whole\n * as a separate `next` notification.\n *\n * ## Examples\n *\n * Emit the values `10, 20, 30`\n *\n * ```ts\n * import { of } from 'rxjs';\n *\n * of(10, 20, 30)\n *   .subscribe({\n *     next: value => console.log('next:', value),\n *     error: err => console.log('error:', err),\n *     complete: () => console.log('the end'),\n *   });\n *\n * // Outputs\n * // next: 10\n * // next: 20\n * // next: 30\n * // the end\n * ```\n *\n * Emit the array `[1, 2, 3]`\n *\n * ```ts\n * import { of } from 'rxjs';\n *\n * of([1, 2, 3])\n *   .subscribe({\n *     next: value => console.log('next:', value),\n *     error: err => console.log('error:', err),\n *     complete: () => console.log('the end'),\n *   });\n *\n * // Outputs\n * // next: [1, 2, 3]\n * // the end\n * ```\n *\n * @see {@link from}\n * @see {@link range}\n *\n * @param {...T} values A comma separated list of arguments you want to be emitted\n * @return {Observable} An Observable that emits the arguments\n * described above and then completes.\n */\nexport function of<T>(...args: Array<T | SchedulerLike>): Observable<T> {\n  const scheduler = popScheduler(args);\n  return from(args as T[], scheduler);\n}\n","import { Observable } from '../Observable';\nimport { ObservableInputTuple } from '../types';\nimport { EMPTY } from './empty';\nimport { onErrorResumeNext as onErrorResumeNextWith } from '../operators/onErrorResumeNext';\nimport { argsOrArgArray } from '../util/argsOrArgArray';\n\n/* tslint:disable:max-line-length */\nexport function onErrorResumeNext<A extends readonly unknown[]>(sources: [...ObservableInputTuple<A>]): Observable<A[number]>;\nexport function onErrorResumeNext<A extends readonly unknown[]>(...sources: [...ObservableInputTuple<A>]): Observable<A[number]>;\n\n/* tslint:enable:max-line-length */\n\n/**\n * When any of the provided Observable emits a complete or an error notification, it immediately subscribes to the next one\n * that was passed.\n *\n * <span class=\"informal\">Execute series of Observables no matter what, even if it means swallowing errors.</span>\n *\n * ![](onErrorResumeNext.png)\n *\n * `onErrorResumeNext` will subscribe to each observable source it is provided, in order.\n * If the source it's subscribed to emits an error or completes, it will move to the next source\n * without error.\n *\n * If `onErrorResumeNext` is provided no arguments, or a single, empty array, it will return {@link EMPTY}.\n *\n * `onErrorResumeNext` is basically {@link concat}, only it will continue, even if one of its\n * sources emits an error.\n *\n * Note that there is no way to handle any errors thrown by sources via the result of\n * `onErrorResumeNext`. If you want to handle errors thrown in any given source, you can\n * always use the {@link catchError} operator on them before passing them into `onErrorResumeNext`.\n *\n * ## Example\n *\n * Subscribe to the next Observable after map fails\n *\n * ```ts\n * import { onErrorResumeNext, of, map } from 'rxjs';\n *\n * onErrorResumeNext(\n *   of(1, 2, 3, 0).pipe(\n *     map(x => {\n *       if (x === 0) {\n *         throw Error();\n *       }\n *       return 10 / x;\n *     })\n *   ),\n *   of(1, 2, 3)\n * )\n * .subscribe({\n *   next: value => console.log(value),\n *   error: err => console.log(err),     // Will never be called.\n *   complete: () => console.log('done')\n * });\n *\n * // Logs:\n * // 10\n * // 5\n * // 3.3333333333333335\n * // 1\n * // 2\n * // 3\n * // 'done'\n * ```\n *\n * @see {@link concat}\n * @see {@link catchError}\n *\n * @param {...ObservableInput} sources Observables (or anything that *is* observable) passed either directly or as an array.\n * @return {Observable} An Observable that concatenates all sources, one after the other,\n * ignoring all errors, such that any error causes it to move on to the next source.\n */\nexport function onErrorResumeNext<A extends readonly unknown[]>(\n  ...sources: [[...ObservableInputTuple<A>]] | [...ObservableInputTuple<A>]\n): Observable<A[number]> {\n  return onErrorResumeNextWith(argsOrArgArray(sources))(EMPTY);\n}\n","import { Observable } from '../Observable';\nimport { SchedulerLike } from '../types';\nimport { from } from './from';\n\n/**\n * @deprecated Use `from(Object.entries(obj))` instead. Will be removed in v8.\n */\nexport function pairs<T>(arr: readonly T[], scheduler?: SchedulerLike): Observable<[string, T]>;\n/**\n * @deprecated Use `from(Object.entries(obj))` instead. Will be removed in v8.\n */\nexport function pairs<O extends Record<string, unknown>>(obj: O, scheduler?: SchedulerLike): Observable<[keyof O, O[keyof O]]>;\n/**\n * @deprecated Use `from(Object.entries(obj))` instead. Will be removed in v8.\n */\nexport function pairs<T>(iterable: Iterable<T>, scheduler?: SchedulerLike): Observable<[string, T]>;\n/**\n * @deprecated Use `from(Object.entries(obj))` instead. Will be removed in v8.\n */\nexport function pairs(\n  n: number | bigint | boolean | ((...args: any[]) => any) | symbol,\n  scheduler?: SchedulerLike\n): Observable<[never, never]>;\n\n/**\n * Convert an object into an Observable of `[key, value]` pairs.\n *\n * <span class=\"informal\">Turn entries of an object into a stream.</span>\n *\n * ![](pairs.png)\n *\n * `pairs` takes an arbitrary object and returns an Observable that emits arrays. Each\n * emitted array has exactly two elements - the first is a key from the object\n * and the second is a value corresponding to that key. Keys are extracted from\n * an object via `Object.keys` function, which means that they will be only\n * enumerable keys that are present on an object directly - not ones inherited\n * via prototype chain.\n *\n * By default, these arrays are emitted synchronously. To change that you can\n * pass a {@link SchedulerLike} as a second argument to `pairs`.\n *\n * ## Example\n *\n * Converts an object to an Observable\n *\n * ```ts\n * import { pairs } from 'rxjs';\n *\n * const obj = {\n *   foo: 42,\n *   bar: 56,\n *   baz: 78\n * };\n *\n * pairs(obj).subscribe({\n *   next: value => console.log(value),\n *   complete: () => console.log('Complete!')\n * });\n *\n * // Logs:\n * // ['foo', 42]\n * // ['bar', 56]\n * // ['baz', 78]\n * // 'Complete!'\n * ```\n *\n * ### Object.entries required\n *\n * In IE, you will need to polyfill `Object.entries` in order to use this.\n * [MDN has a polyfill here](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/entries)\n *\n * @param {Object} obj The object to inspect and turn into an\n * Observable sequence.\n * @param {Scheduler} [scheduler] An optional IScheduler to schedule\n * when resulting Observable will emit values.\n * @returns {(Observable<Array<string|T>>)} An observable sequence of\n * [key, value] pairs from the object.\n * @deprecated Use `from(Object.entries(obj))` instead. Will be removed in v8.\n */\nexport function pairs(obj: any, scheduler?: SchedulerLike) {\n  return from(Object.entries(obj), scheduler as any);\n}\n","import { not } from '../util/not';\nimport { filter } from '../operators/filter';\nimport { ObservableInput } from '../types';\nimport { Observable } from '../Observable';\nimport { innerFrom } from './innerFrom';\n\n/** @deprecated Use a closure instead of a `thisArg`. Signatures accepting a `thisArg` will be removed in v8. */\nexport function partition<T, U extends T, A>(\n  source: ObservableInput<T>,\n  predicate: (this: A, value: T, index: number) => value is U,\n  thisArg: A\n): [Observable<U>, Observable<Exclude<T, U>>];\nexport function partition<T, U extends T>(\n  source: ObservableInput<T>,\n  predicate: (value: T, index: number) => value is U\n): [Observable<U>, Observable<Exclude<T, U>>];\n\n/** @deprecated Use a closure instead of a `thisArg`. Signatures accepting a `thisArg` will be removed in v8. */\nexport function partition<T, A>(\n  source: ObservableInput<T>,\n  predicate: (this: A, value: T, index: number) => boolean,\n  thisArg: A\n): [Observable<T>, Observable<T>];\nexport function partition<T>(source: ObservableInput<T>, predicate: (value: T, index: number) => boolean): [Observable<T>, Observable<T>];\n\n/**\n * Splits the source Observable into two, one with values that satisfy a\n * predicate, and another with values that don't satisfy the predicate.\n *\n * <span class=\"informal\">It's like {@link filter}, but returns two Observables:\n * one like the output of {@link filter}, and the other with values that did not\n * pass the condition.</span>\n *\n * ![](partition.png)\n *\n * `partition` outputs an array with two Observables that partition the values\n * from the source Observable through the given `predicate` function. The first\n * Observable in that array emits source values for which the predicate argument\n * returns true. The second Observable emits source values for which the\n * predicate returns false. The first behaves like {@link filter} and the second\n * behaves like {@link filter} with the predicate negated.\n *\n * ## Example\n *\n * Partition a set of numbers into odds and evens observables\n *\n * ```ts\n * import { of, partition } from 'rxjs';\n *\n * const observableValues = of(1, 2, 3, 4, 5, 6);\n * const [evens$, odds$] = partition(observableValues, value => value % 2 === 0);\n *\n * odds$.subscribe(x => console.log('odds', x));\n * evens$.subscribe(x => console.log('evens', x));\n *\n * // Logs:\n * // odds 1\n * // odds 3\n * // odds 5\n * // evens 2\n * // evens 4\n * // evens 6\n * ```\n *\n * @see {@link filter}\n *\n * @param {function(value: T, index: number): boolean} predicate A function that\n * evaluates each value emitted by the source Observable. If it returns `true`,\n * the value is emitted on the first Observable in the returned array, if\n * `false` the value is emitted on the second Observable in the array. The\n * `index` parameter is the number `i` for the i-th source emission that has\n * happened since the subscription, starting from the number `0`.\n * @param {any} [thisArg] An optional argument to determine the value of `this`\n * in the `predicate` function.\n * @return {[Observable<T>, Observable<T>]} An array with two Observables: one\n * with values that passed the predicate, and another with values that did not\n * pass the predicate.\n */\nexport function partition<T>(\n  source: ObservableInput<T>,\n  predicate: (this: any, value: T, index: number) => boolean,\n  thisArg?: any\n): [Observable<T>, Observable<T>] {\n  return [filter(predicate, thisArg)(innerFrom(source)), filter(not(predicate, thisArg))(innerFrom(source))] as [\n    Observable<T>,\n    Observable<T>\n  ];\n}\n","import { Observable } from '../Observable';\nimport { innerFrom } from './innerFrom';\nimport { Subscription } from '../Subscription';\nimport { ObservableInput, ObservableInputTuple } from '../types';\nimport { argsOrArgArray } from '../util/argsOrArgArray';\nimport { createOperatorSubscriber } from '../operators/OperatorSubscriber';\nimport { Subscriber } from '../Subscriber';\n\nexport function race<T extends readonly unknown[]>(inputs: [...ObservableInputTuple<T>]): Observable<T[number]>;\nexport function race<T extends readonly unknown[]>(...inputs: [...ObservableInputTuple<T>]): Observable<T[number]>;\n\n/**\n * Returns an observable that mirrors the first source observable to emit an item.\n *\n * ![](race.png)\n *\n * `race` returns an observable, that when subscribed to, subscribes to all source observables immediately.\n * As soon as one of the source observables emits a value, the result unsubscribes from the other sources.\n * The resulting observable will forward all notifications, including error and completion, from the \"winning\"\n * source observable.\n *\n * If one of the used source observable throws an errors before a first notification\n * the race operator will also throw an error, no matter if another source observable\n * could potentially win the race.\n *\n * `race` can be useful for selecting the response from the fastest network connection for\n * HTTP or WebSockets. `race` can also be useful for switching observable context based on user\n * input.\n *\n * ## Example\n *\n * Subscribes to the observable that was the first to start emitting.\n *\n * ```ts\n * import { interval, map, race } from 'rxjs';\n *\n * const obs1 = interval(7000).pipe(map(() => 'slow one'));\n * const obs2 = interval(3000).pipe(map(() => 'fast one'));\n * const obs3 = interval(5000).pipe(map(() => 'medium one'));\n *\n * race(obs1, obs2, obs3)\n *   .subscribe(winner => console.log(winner));\n *\n * // Outputs\n * // a series of 'fast one'\n * ```\n *\n * @param {...Observables} ...observables sources used to race for which Observable emits first.\n * @return {Observable} an Observable that mirrors the output of the first Observable to emit an item.\n */\nexport function race<T>(...sources: (ObservableInput<T> | ObservableInput<T>[])[]): Observable<any> {\n  sources = argsOrArgArray(sources);\n  // If only one source was passed, just return it. Otherwise return the race.\n  return sources.length === 1 ? innerFrom(sources[0] as ObservableInput<T>) : new Observable<T>(raceInit(sources as ObservableInput<T>[]));\n}\n\n/**\n * An observable initializer function for both the static version and the\n * operator version of race.\n * @param sources The sources to race\n */\nexport function raceInit<T>(sources: ObservableInput<T>[]) {\n  return (subscriber: Subscriber<T>) => {\n    let subscriptions: Subscription[] = [];\n\n    // Subscribe to all of the sources. Note that we are checking `subscriptions` here\n    // Is is an array of all actively \"racing\" subscriptions, and it is `null` after the\n    // race has been won. So, if we have racer that synchronously \"wins\", this loop will\n    // stop before it subscribes to any more.\n    for (let i = 0; subscriptions && !subscriber.closed && i < sources.length; i++) {\n      subscriptions.push(\n        innerFrom(sources[i] as ObservableInput<T>).subscribe(\n          createOperatorSubscriber(subscriber, (value) => {\n            if (subscriptions) {\n              // We're still racing, but we won! So unsubscribe\n              // all other subscriptions that we have, except this one.\n              for (let s = 0; s < subscriptions.length; s++) {\n                s !== i && subscriptions[s].unsubscribe();\n              }\n              subscriptions = null!;\n            }\n            subscriber.next(value);\n          })\n        )\n      );\n    }\n  };\n}\n","import { SchedulerLike } from '../types';\nimport { Observable } from '../Observable';\nimport { EMPTY } from './empty';\n\nexport function range(start: number, count?: number): Observable<number>;\n\n/**\n * @deprecated The `scheduler` parameter will be removed in v8. Use `range(start, count).pipe(observeOn(scheduler))` instead. Details: Details: https://rxjs.dev/deprecations/scheduler-argument\n */\nexport function range(start: number, count: number | undefined, scheduler: SchedulerLike): Observable<number>;\n\n/**\n * Creates an Observable that emits a sequence of numbers within a specified\n * range.\n *\n * <span class=\"informal\">Emits a sequence of numbers in a range.</span>\n *\n * ![](range.png)\n *\n * `range` operator emits a range of sequential integers, in order, where you\n * select the `start` of the range and its `length`. By default, uses no\n * {@link SchedulerLike} and just delivers the notifications synchronously, but may use\n * an optional {@link SchedulerLike} to regulate those deliveries.\n *\n * ## Example\n *\n * Produce a range of numbers\n *\n * ```ts\n * import { range } from 'rxjs';\n *\n * const numbers = range(1, 3);\n *\n * numbers.subscribe({\n *   next: value => console.log(value),\n *   complete: () => console.log('Complete!')\n * });\n *\n * // Logs:\n * // 1\n * // 2\n * // 3\n * // 'Complete!'\n * ```\n *\n * @see {@link timer}\n * @see {@link interval}\n *\n * @param {number} [start=0] The value of the first integer in the sequence.\n * @param {number} count The number of sequential integers to generate.\n * @param {SchedulerLike} [scheduler] A {@link SchedulerLike} to use for scheduling\n * the emissions of the notifications.\n * @return {Observable} An Observable of numbers that emits a finite range of\n * sequential integers.\n */\nexport function range(start: number, count?: number, scheduler?: SchedulerLike): Observable<number> {\n  if (count == null) {\n    // If one argument was passed, it's the count, not the start.\n    count = start;\n    start = 0;\n  }\n\n  if (count <= 0) {\n    // No count? We're going nowhere. Return EMPTY.\n    return EMPTY;\n  }\n\n  // Where the range should stop.\n  const end = count + start;\n\n  return new Observable(\n    scheduler\n      ? // The deprecated scheduled path.\n        (subscriber) => {\n          let n = start;\n          return scheduler.schedule(function () {\n            if (n < end) {\n              subscriber.next(n++);\n              this.schedule();\n            } else {\n              subscriber.complete();\n            }\n          });\n        }\n      : // Standard synchronous range.\n        (subscriber) => {\n          let n = start;\n          while (n < end && !subscriber.closed) {\n            subscriber.next(n++);\n          }\n          subscriber.complete();\n        }\n  );\n}\n","import { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { SchedulerLike } from '../types';\nimport { isFunction } from '../util/isFunction';\n\n/**\n * Creates an observable that will create an error instance and push it to the consumer as an error\n * immediately upon subscription.\n *\n * <span class=\"informal\">Just errors and does nothing else</span>\n *\n * ![](throw.png)\n *\n * This creation function is useful for creating an observable that will create an error and error every\n * time it is subscribed to. Generally, inside of most operators when you might want to return an errored\n * observable, this is unnecessary. In most cases, such as in the inner return of {@link concatMap},\n * {@link mergeMap}, {@link defer}, and many others, you can simply throw the error, and RxJS will pick\n * that up and notify the consumer of the error.\n *\n * ## Example\n *\n * Create a simple observable that will create a new error with a timestamp and log it\n * and the message every time you subscribe to it\n *\n * ```ts\n * import { throwError } from 'rxjs';\n *\n * let errorCount = 0;\n *\n * const errorWithTimestamp$ = throwError(() => {\n *   const error: any = new Error(`This is error number ${ ++errorCount }`);\n *   error.timestamp = Date.now();\n *   return error;\n * });\n *\n * errorWithTimestamp$.subscribe({\n *   error: err => console.log(err.timestamp, err.message)\n * });\n *\n * errorWithTimestamp$.subscribe({\n *   error: err => console.log(err.timestamp, err.message)\n * });\n *\n * // Logs the timestamp and a new error message for each subscription\n * ```\n *\n * ### Unnecessary usage\n *\n * Using `throwError` inside of an operator or creation function\n * with a callback, is usually not necessary\n *\n * ```ts\n * import { of, concatMap, timer, throwError } from 'rxjs';\n *\n * const delays$ = of(1000, 2000, Infinity, 3000);\n *\n * delays$.pipe(\n *   concatMap(ms => {\n *     if (ms < 10000) {\n *       return timer(ms);\n *     } else {\n *       // This is probably overkill.\n *       return throwError(() => new Error(`Invalid time ${ ms }`));\n *     }\n *   })\n * )\n * .subscribe({\n *   next: console.log,\n *   error: console.error\n * });\n * ```\n *\n * You can just throw the error instead\n *\n * ```ts\n * import { of, concatMap, timer } from 'rxjs';\n *\n * const delays$ = of(1000, 2000, Infinity, 3000);\n *\n * delays$.pipe(\n *   concatMap(ms => {\n *     if (ms < 10000) {\n *       return timer(ms);\n *     } else {\n *       // Cleaner and easier to read for most folks.\n *       throw new Error(`Invalid time ${ ms }`);\n *     }\n *   })\n * )\n * .subscribe({\n *   next: console.log,\n *   error: console.error\n * });\n * ```\n *\n * @param errorFactory A factory function that will create the error instance that is pushed.\n */\nexport function throwError(errorFactory: () => any): Observable<never>;\n\n/**\n * Returns an observable that will error with the specified error immediately upon subscription.\n *\n * @param error The error instance to emit\n * @deprecated Support for passing an error value will be removed in v8. Instead, pass a factory function to `throwError(() => new Error('test'))`. This is\n * because it will create the error at the moment it should be created and capture a more appropriate stack trace. If\n * for some reason you need to create the error ahead of time, you can still do that: `const err = new Error('test'); throwError(() => err);`.\n */\nexport function throwError(error: any): Observable<never>;\n\n/**\n * Notifies the consumer of an error using a given scheduler by scheduling it at delay `0` upon subscription.\n *\n * @param errorOrErrorFactory An error instance or error factory\n * @param scheduler A scheduler to use to schedule the error notification\n * @deprecated The `scheduler` parameter will be removed in v8.\n * Use `throwError` in combination with {@link observeOn}: `throwError(() => new Error('test')).pipe(observeOn(scheduler));`.\n * Details: https://rxjs.dev/deprecations/scheduler-argument\n */\nexport function throwError(errorOrErrorFactory: any, scheduler: SchedulerLike): Observable<never>;\n\nexport function throwError(errorOrErrorFactory: any, scheduler?: SchedulerLike): Observable<never> {\n  const errorFactory = isFunction(errorOrErrorFactory) ? errorOrErrorFactory : () => errorOrErrorFactory;\n  const init = (subscriber: Subscriber<never>) => subscriber.error(errorFactory());\n  return new Observable(scheduler ? (subscriber) => scheduler.schedule(init as any, 0, subscriber) : init);\n}\n","import { Observable } from '../Observable';\nimport { SchedulerLike } from '../types';\nimport { async as asyncScheduler } from '../scheduler/async';\nimport { isScheduler } from '../util/isScheduler';\nimport { isValidDate } from '../util/isDate';\n\n/**\n * Creates an observable that will wait for a specified time period, or exact date, before\n * emitting the number 0.\n *\n * <span class=\"informal\">Used to emit a notification after a delay.</span>\n *\n * This observable is useful for creating delays in code, or racing against other values\n * for ad-hoc timeouts.\n *\n * The `delay` is specified by default in milliseconds, however providing a custom scheduler could\n * create a different behavior.\n *\n * ## Examples\n *\n * Wait 3 seconds and start another observable\n *\n * You might want to use `timer` to delay subscription to an\n * observable by a set amount of time. Here we use a timer with\n * {@link concatMapTo} or {@link concatMap} in order to wait\n * a few seconds and start a subscription to a source.\n *\n * ```ts\n * import { of, timer, concatMap } from 'rxjs';\n *\n * // This could be any observable\n * const source = of(1, 2, 3);\n *\n * timer(3000)\n *   .pipe(concatMap(() => source))\n *   .subscribe(console.log);\n * ```\n *\n * Take all values until the start of the next minute\n *\n * Using a `Date` as the trigger for the first emission, you can\n * do things like wait until midnight to fire an event, or in this case,\n * wait until a new minute starts (chosen so the example wouldn't take\n * too long to run) in order to stop watching a stream. Leveraging\n * {@link takeUntil}.\n *\n * ```ts\n * import { interval, takeUntil, timer } from 'rxjs';\n *\n * // Build a Date object that marks the\n * // next minute.\n * const currentDate = new Date();\n * const startOfNextMinute = new Date(\n *   currentDate.getFullYear(),\n *   currentDate.getMonth(),\n *   currentDate.getDate(),\n *   currentDate.getHours(),\n *   currentDate.getMinutes() + 1\n * );\n *\n * // This could be any observable stream\n * const source = interval(1000);\n *\n * const result = source.pipe(\n *   takeUntil(timer(startOfNextMinute))\n * );\n *\n * result.subscribe(console.log);\n * ```\n *\n * ### Known Limitations\n *\n * - The {@link asyncScheduler} uses `setTimeout` which has limitations for how far in the future it can be scheduled.\n *\n * - If a `scheduler` is provided that returns a timestamp other than an epoch from `now()`, and\n * a `Date` object is passed to the `dueTime` argument, the calculation for when the first emission\n * should occur will be incorrect. In this case, it would be best to do your own calculations\n * ahead of time, and pass a `number` in as the `dueTime`.\n *\n * @param due If a `number`, the amount of time in milliseconds to wait before emitting.\n * If a `Date`, the exact time at which to emit.\n * @param scheduler The scheduler to use to schedule the delay. Defaults to {@link asyncScheduler}.\n */\nexport function timer(due: number | Date, scheduler?: SchedulerLike): Observable<0>;\n\n/**\n * Creates an observable that starts an interval after a specified delay, emitting incrementing numbers -- starting at `0` --\n * on each interval after words.\n *\n * The `delay` and `intervalDuration` are specified by default in milliseconds, however providing a custom scheduler could\n * create a different behavior.\n *\n * ## Example\n *\n * ### Start an interval that starts right away\n *\n * Since {@link interval} waits for the passed delay before starting,\n * sometimes that's not ideal. You may want to start an interval immediately.\n * `timer` works well for this. Here we have both side-by-side so you can\n * see them in comparison.\n *\n * Note that this observable will never complete.\n *\n * ```ts\n * import { timer, interval } from 'rxjs';\n *\n * timer(0, 1000).subscribe(n => console.log('timer', n));\n * interval(1000).subscribe(n => console.log('interval', n));\n * ```\n *\n * ### Known Limitations\n *\n * - The {@link asyncScheduler} uses `setTimeout` which has limitations for how far in the future it can be scheduled.\n *\n * - If a `scheduler` is provided that returns a timestamp other than an epoch from `now()`, and\n * a `Date` object is passed to the `dueTime` argument, the calculation for when the first emission\n * should occur will be incorrect. In this case, it would be best to do your own calculations\n * ahead of time, and pass a `number` in as the `startDue`.\n * @param startDue If a `number`, is the time to wait before starting the interval.\n * If a `Date`, is the exact time at which to start the interval.\n * @param intervalDuration The delay between each value emitted in the interval. Passing a\n * negative number here will result in immediate completion after the first value is emitted, as though\n * no `intervalDuration` was passed at all.\n * @param scheduler The scheduler to use to schedule the delay. Defaults to {@link asyncScheduler}.\n */\nexport function timer(startDue: number | Date, intervalDuration: number, scheduler?: SchedulerLike): Observable<number>;\n\n/**\n * @deprecated The signature allowing `undefined` to be passed for `intervalDuration` will be removed in v8. Use the `timer(dueTime, scheduler?)` signature instead.\n */\nexport function timer(dueTime: number | Date, unused: undefined, scheduler?: SchedulerLike): Observable<0>;\n\nexport function timer(\n  dueTime: number | Date = 0,\n  intervalOrScheduler?: number | SchedulerLike,\n  scheduler: SchedulerLike = asyncScheduler\n): Observable<number> {\n  // Since negative intervalDuration is treated as though no\n  // interval was specified at all, we start with a negative number.\n  let intervalDuration = -1;\n\n  if (intervalOrScheduler != null) {\n    // If we have a second argument, and it's a scheduler,\n    // override the scheduler we had defaulted. Otherwise,\n    // it must be an interval.\n    if (isScheduler(intervalOrScheduler)) {\n      scheduler = intervalOrScheduler;\n    } else {\n      // Note that this *could* be negative, in which case\n      // it's like not passing an intervalDuration at all.\n      intervalDuration = intervalOrScheduler;\n    }\n  }\n\n  return new Observable((subscriber) => {\n    // If a valid date is passed, calculate how long to wait before\n    // executing the first value... otherwise, if it's a number just schedule\n    // that many milliseconds (or scheduler-specified unit size) in the future.\n    let due = isValidDate(dueTime) ? +dueTime - scheduler!.now() : dueTime;\n\n    if (due < 0) {\n      // Ensure we don't schedule in the future.\n      due = 0;\n    }\n\n    // The incrementing value we emit.\n    let n = 0;\n\n    // Start the timer.\n    return scheduler.schedule(function () {\n      if (!subscriber.closed) {\n        // Emit the next value and increment.\n        subscriber.next(n++);\n\n        if (0 <= intervalDuration) {\n          // If we have a interval after the initial timer,\n          // reschedule with the period.\n          this.schedule(undefined, intervalDuration);\n        } else {\n          // We didn't have an interval. So just complete.\n          subscriber.complete();\n        }\n      }\n    }, due);\n  });\n}\n","import { Observable } from '../Observable';\nimport { Unsubscribable, ObservableInput, ObservedValueOf } from '../types';\nimport { innerFrom } from './innerFrom';\nimport { EMPTY } from './empty';\n\n/**\n * Creates an Observable that uses a resource which will be disposed at the same time as the Observable.\n *\n * <span class=\"informal\">Use it when you catch yourself cleaning up after an Observable.</span>\n *\n * `using` is a factory operator, which accepts two functions. First function returns a disposable resource.\n * It can be an arbitrary object that implements `unsubscribe` method. Second function will be injected with\n * that object and should return an Observable. That Observable can use resource object during its execution.\n * Both functions passed to `using` will be called every time someone subscribes - neither an Observable nor\n * resource object will be shared in any way between subscriptions.\n *\n * When Observable returned by `using` is subscribed, Observable returned from the second function will be subscribed\n * as well. All its notifications (nexted values, completion and error events) will be emitted unchanged by the output\n * Observable. If however someone unsubscribes from the Observable or source Observable completes or errors by itself,\n * the `unsubscribe` method on resource object will be called. This can be used to do any necessary clean up, which\n * otherwise would have to be handled by hand. Note that complete or error notifications are not emitted when someone\n * cancels subscription to an Observable via `unsubscribe`, so `using` can be used as a hook, allowing you to make\n * sure that all resources which need to exist during an Observable execution will be disposed at appropriate time.\n *\n * @see {@link defer}\n *\n * @param {function(): ISubscription} resourceFactory A function which creates any resource object\n * that implements `unsubscribe` method.\n * @param {function(resource: ISubscription): Observable<T>} observableFactory A function which\n * creates an Observable, that can use injected resource object.\n * @return {Observable<T>} An Observable that behaves the same as Observable returned by `observableFactory`, but\n * which - when completed, errored or unsubscribed - will also call `unsubscribe` on created resource object.\n */\nexport function using<T extends ObservableInput<any>>(\n  resourceFactory: () => Unsubscribable | void,\n  observableFactory: (resource: Unsubscribable | void) => T | void\n): Observable<ObservedValueOf<T>> {\n  return new Observable<ObservedValueOf<T>>((subscriber) => {\n    const resource = resourceFactory();\n    const result = observableFactory(resource);\n    const source = result ? innerFrom(result) : EMPTY;\n    source.subscribe(subscriber);\n    return () => {\n      // NOTE: Optional chaining did not work here.\n      // Related TS Issue: https://github.com/microsoft/TypeScript/issues/40818\n      if (resource) {\n        resource.unsubscribe();\n      }\n    };\n  });\n}\n","import { Observable } from '../Observable';\nimport { ObservableInputTuple } from '../types';\nimport { innerFrom } from './innerFrom';\nimport { argsOrArgArray } from '../util/argsOrArgArray';\nimport { EMPTY } from './empty';\nimport { createOperatorSubscriber } from '../operators/OperatorSubscriber';\nimport { popResultSelector } from '../util/args';\n\nexport function zip<A extends readonly unknown[]>(sources: [...ObservableInputTuple<A>]): Observable<A>;\nexport function zip<A extends readonly unknown[], R>(\n  sources: [...ObservableInputTuple<A>],\n  resultSelector: (...values: A) => R\n): Observable<R>;\nexport function zip<A extends readonly unknown[]>(...sources: [...ObservableInputTuple<A>]): Observable<A>;\nexport function zip<A extends readonly unknown[], R>(\n  ...sourcesAndResultSelector: [...ObservableInputTuple<A>, (...values: A) => R]\n): Observable<R>;\n\n/**\n * Combines multiple Observables to create an Observable whose values are calculated from the values, in order, of each\n * of its input Observables.\n *\n * If the last parameter is a function, this function is used to compute the created value from the input values.\n * Otherwise, an array of the input values is returned.\n *\n * ## Example\n *\n * Combine age and name from different sources\n *\n * ```ts\n * import { of, zip, map } from 'rxjs';\n *\n * const age$ = of(27, 25, 29);\n * const name$ = of('Foo', 'Bar', 'Beer');\n * const isDev$ = of(true, true, false);\n *\n * zip(age$, name$, isDev$).pipe(\n *   map(([age, name, isDev]) => ({ age, name, isDev }))\n * )\n * .subscribe(x => console.log(x));\n *\n * // Outputs\n * // { age: 27, name: 'Foo', isDev: true }\n * // { age: 25, name: 'Bar', isDev: true }\n * // { age: 29, name: 'Beer', isDev: false }\n * ```\n *\n * @param sources\n * @return {Observable<R>}\n */\nexport function zip(...args: unknown[]): Observable<unknown> {\n  const resultSelector = popResultSelector(args);\n\n  const sources = argsOrArgArray(args) as Observable<unknown>[];\n\n  return sources.length\n    ? new Observable<unknown[]>((subscriber) => {\n        // A collection of buffers of values from each source.\n        // Keyed by the same index with which the sources were passed in.\n        let buffers: unknown[][] = sources.map(() => []);\n\n        // An array of flags of whether or not the sources have completed.\n        // This is used to check to see if we should complete the result.\n        // Keyed by the same index with which the sources were passed in.\n        let completed = sources.map(() => false);\n\n        // When everything is done, release the arrays above.\n        subscriber.add(() => {\n          buffers = completed = null!;\n        });\n\n        // Loop over our sources and subscribe to each one. The index `i` is\n        // especially important here, because we use it in closures below to\n        // access the related buffers and completion properties\n        for (let sourceIndex = 0; !subscriber.closed && sourceIndex < sources.length; sourceIndex++) {\n          innerFrom(sources[sourceIndex]).subscribe(\n            createOperatorSubscriber(\n              subscriber,\n              (value) => {\n                buffers[sourceIndex].push(value);\n                // if every buffer has at least one value in it, then we\n                // can shift out the oldest value from each buffer and emit\n                // them as an array.\n                if (buffers.every((buffer) => buffer.length)) {\n                  const result: any = buffers.map((buffer) => buffer.shift()!);\n                  // Emit the array. If theres' a result selector, use that.\n                  subscriber.next(resultSelector ? resultSelector(...result) : result);\n                  // If any one of the sources is both complete and has an empty buffer\n                  // then we complete the result. This is because we cannot possibly have\n                  // any more values to zip together.\n                  if (buffers.some((buffer, i) => !buffer.length && completed[i])) {\n                    subscriber.complete();\n                  }\n                }\n              },\n              () => {\n                // This source completed. Mark it as complete so we can check it later\n                // if we have to.\n                completed[sourceIndex] = true;\n                // But, if this complete source has nothing in its buffer, then we\n                // can complete the result, because we can't possibly have any more\n                // values from this to zip together with the other values.\n                !buffers[sourceIndex].length && subscriber.complete();\n              }\n            )\n          );\n        }\n\n        // When everything is done, release the arrays above.\n        return () => {\n          buffers = completed = null!;\n        };\n      })\n    : EMPTY;\n}\n","import { Subscriber } from '../Subscriber';\n\n/**\n * Creates an instance of an `OperatorSubscriber`.\n * @param destination The downstream subscriber.\n * @param onNext Handles next values, only called if this subscriber is not stopped or closed. Any\n * error that occurs in this function is caught and sent to the `error` method of this subscriber.\n * @param onError Handles errors from the subscription, any errors that occur in this handler are caught\n * and send to the `destination` error handler.\n * @param onComplete Handles completion notification from the subscription. Any errors that occur in\n * this handler are sent to the `destination` error handler.\n * @param onFinalize Additional teardown logic here. This will only be called on teardown if the\n * subscriber itself is not already closed. This is called after all other teardown logic is executed.\n */\nexport function createOperatorSubscriber<T>(\n  destination: Subscriber<any>,\n  onNext?: (value: T) => void,\n  onComplete?: () => void,\n  onError?: (err: any) => void,\n  onFinalize?: () => void\n): Subscriber<T> {\n  return new OperatorSubscriber(destination, onNext, onComplete, onError, onFinalize);\n}\n\n/**\n * A generic helper for allowing operators to be created with a Subscriber and\n * use closures to capture necessary state from the operator function itself.\n */\nexport class OperatorSubscriber<T> extends Subscriber<T> {\n  /**\n   * Creates an instance of an `OperatorSubscriber`.\n   * @param destination The downstream subscriber.\n   * @param onNext Handles next values, only called if this subscriber is not stopped or closed. Any\n   * error that occurs in this function is caught and sent to the `error` method of this subscriber.\n   * @param onError Handles errors from the subscription, any errors that occur in this handler are caught\n   * and send to the `destination` error handler.\n   * @param onComplete Handles completion notification from the subscription. Any errors that occur in\n   * this handler are sent to the `destination` error handler.\n   * @param onFinalize Additional finalization logic here. This will only be called on finalization if the\n   * subscriber itself is not already closed. This is called after all other finalization logic is executed.\n   * @param shouldUnsubscribe An optional check to see if an unsubscribe call should truly unsubscribe.\n   * NOTE: This currently **ONLY** exists to support the strange behavior of {@link groupBy}, where unsubscription\n   * to the resulting observable does not actually disconnect from the source if there are active subscriptions\n   * to any grouped observable. (DO NOT EXPOSE OR USE EXTERNALLY!!!)\n   */\n  constructor(\n    destination: Subscriber<any>,\n    onNext?: (value: T) => void,\n    onComplete?: () => void,\n    onError?: (err: any) => void,\n    private onFinalize?: () => void,\n    private shouldUnsubscribe?: () => boolean\n  ) {\n    // It's important - for performance reasons - that all of this class's\n    // members are initialized and that they are always initialized in the same\n    // order. This will ensure that all OperatorSubscriber instances have the\n    // same hidden class in V8. This, in turn, will help keep the number of\n    // hidden classes involved in property accesses within the base class as\n    // low as possible. If the number of hidden classes involved exceeds four,\n    // the property accesses will become megamorphic and performance penalties\n    // will be incurred - i.e. inline caches won't be used.\n    //\n    // The reasons for ensuring all instances have the same hidden class are\n    // further discussed in this blog post from Benedikt Meurer:\n    // https://benediktmeurer.de/2018/03/23/impact-of-polymorphism-on-component-based-frameworks-like-react/\n    super(destination);\n    this._next = onNext\n      ? function (this: OperatorSubscriber<T>, value: T) {\n          try {\n            onNext(value);\n          } catch (err) {\n            destination.error(err);\n          }\n        }\n      : super._next;\n    this._error = onError\n      ? function (this: OperatorSubscriber<T>, err: any) {\n          try {\n            onError(err);\n          } catch (err) {\n            // Send any errors that occur down stream.\n            destination.error(err);\n          } finally {\n            // Ensure finalization.\n            this.unsubscribe();\n          }\n        }\n      : super._error;\n    this._complete = onComplete\n      ? function (this: OperatorSubscriber<T>) {\n          try {\n            onComplete();\n          } catch (err) {\n            // Send any errors that occur down stream.\n            destination.error(err);\n          } finally {\n            // Ensure finalization.\n            this.unsubscribe();\n          }\n        }\n      : super._complete;\n  }\n\n  unsubscribe() {\n    if (!this.shouldUnsubscribe || this.shouldUnsubscribe()) {\n      const { closed } = this;\n      super.unsubscribe();\n      // Execute additional teardown if we have any and we didn't already do so.\n      !closed && this.onFinalize?.();\n    }\n  }\n}\n","import { Subscriber } from '../Subscriber';\nimport { MonoTypeOperatorFunction, ObservableInput } from '../types';\n\nimport { operate } from '../util/lift';\nimport { innerFrom } from '../observable/innerFrom';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\n\n/**\n * Ignores source values for a duration determined by another Observable, then\n * emits the most recent value from the source Observable, then repeats this\n * process.\n *\n * <span class=\"informal\">It's like {@link auditTime}, but the silencing\n * duration is determined by a second Observable.</span>\n *\n * ![](audit.svg)\n *\n * `audit` is similar to `throttle`, but emits the last value from the silenced\n * time window, instead of the first value. `audit` emits the most recent value\n * from the source Observable on the output Observable as soon as its internal\n * timer becomes disabled, and ignores source values while the timer is enabled.\n * Initially, the timer is disabled. As soon as the first source value arrives,\n * the timer is enabled by calling the `durationSelector` function with the\n * source value, which returns the \"duration\" Observable. When the duration\n * Observable emits a value, the timer is disabled, then the most\n * recent source value is emitted on the output Observable, and this process\n * repeats for the next source value.\n *\n * ## Example\n *\n * Emit clicks at a rate of at most one click per second\n *\n * ```ts\n * import { fromEvent, audit, interval } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const result = clicks.pipe(audit(ev => interval(1000)));\n * result.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link auditTime}\n * @see {@link debounce}\n * @see {@link delayWhen}\n * @see {@link sample}\n * @see {@link throttle}\n *\n * @param durationSelector A function\n * that receives a value from the source Observable, for computing the silencing\n * duration, returned as an Observable or a Promise.\n * @return A function that returns an Observable that performs rate-limiting of\n * emissions from the source Observable.\n */\nexport function audit<T>(durationSelector: (value: T) => ObservableInput<any>): MonoTypeOperatorFunction<T> {\n  return operate((source, subscriber) => {\n    let hasValue = false;\n    let lastValue: T | null = null;\n    let durationSubscriber: Subscriber<any> | null = null;\n    let isComplete = false;\n\n    const endDuration = () => {\n      durationSubscriber?.unsubscribe();\n      durationSubscriber = null;\n      if (hasValue) {\n        hasValue = false;\n        const value = lastValue!;\n        lastValue = null;\n        subscriber.next(value);\n      }\n      isComplete && subscriber.complete();\n    };\n\n    const cleanupDuration = () => {\n      durationSubscriber = null;\n      isComplete && subscriber.complete();\n    };\n\n    source.subscribe(\n      createOperatorSubscriber(\n        subscriber,\n        (value) => {\n          hasValue = true;\n          lastValue = value;\n          if (!durationSubscriber) {\n            innerFrom(durationSelector(value)).subscribe(\n              (durationSubscriber = createOperatorSubscriber(subscriber, endDuration, cleanupDuration))\n            );\n          }\n        },\n        () => {\n          isComplete = true;\n          (!hasValue || !durationSubscriber || durationSubscriber.closed) && subscriber.complete();\n        }\n      )\n    );\n  });\n}\n","import { asyncScheduler } from '../scheduler/async';\nimport { audit } from './audit';\nimport { timer } from '../observable/timer';\nimport { MonoTypeOperatorFunction, SchedulerLike } from '../types';\n\n/**\n * Ignores source values for `duration` milliseconds, then emits the most recent\n * value from the source Observable, then repeats this process.\n *\n * <span class=\"informal\">When it sees a source value, it ignores that plus\n * the next ones for `duration` milliseconds, and then it emits the most recent\n * value from the source.</span>\n *\n * ![](auditTime.png)\n *\n * `auditTime` is similar to `throttleTime`, but emits the last value from the\n * silenced time window, instead of the first value. `auditTime` emits the most\n * recent value from the source Observable on the output Observable as soon as\n * its internal timer becomes disabled, and ignores source values while the\n * timer is enabled. Initially, the timer is disabled. As soon as the first\n * source value arrives, the timer is enabled. After `duration` milliseconds (or\n * the time unit determined internally by the optional `scheduler`) has passed,\n * the timer is disabled, then the most recent source value is emitted on the\n * output Observable, and this process repeats for the next source value.\n * Optionally takes a {@link SchedulerLike} for managing timers.\n *\n * ## Example\n *\n * Emit clicks at a rate of at most one click per second\n *\n * ```ts\n * import { fromEvent, auditTime } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const result = clicks.pipe(auditTime(1000));\n * result.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link audit}\n * @see {@link debounceTime}\n * @see {@link delay}\n * @see {@link sampleTime}\n * @see {@link throttleTime}\n *\n * @param {number} duration Time to wait before emitting the most recent source\n * value, measured in milliseconds or the time unit determined internally\n * by the optional `scheduler`.\n * @param {SchedulerLike} [scheduler=async] The {@link SchedulerLike} to use for\n * managing the timers that handle the rate-limiting behavior.\n * @return A function that returns an Observable that performs rate-limiting of\n * emissions from the source Observable.\n */\nexport function auditTime<T>(duration: number, scheduler: SchedulerLike = asyncScheduler): MonoTypeOperatorFunction<T> {\n  return audit(() => timer(duration, scheduler));\n}\n","import { Observable } from '../Observable';\nimport { OperatorFunction } from '../types';\nimport { operate } from '../util/lift';\nimport { noop } from '../util/noop';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\n\n/**\n * Buffers the source Observable values until `closingNotifier` emits.\n *\n * <span class=\"informal\">Collects values from the past as an array, and emits\n * that array only when another Observable emits.</span>\n *\n * ![](buffer.png)\n *\n * Buffers the incoming Observable values until the given `closingNotifier`\n * Observable emits a value, at which point it emits the buffer on the output\n * Observable and starts a new buffer internally, awaiting the next time\n * `closingNotifier` emits.\n *\n * ## Example\n *\n * On every click, emit array of most recent interval events\n *\n * ```ts\n * import { fromEvent, interval, buffer } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const intervalEvents = interval(1000);\n * const buffered = intervalEvents.pipe(buffer(clicks));\n * buffered.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link bufferCount}\n * @see {@link bufferTime}\n * @see {@link bufferToggle}\n * @see {@link bufferWhen}\n * @see {@link window}\n *\n * @param {Observable<any>} closingNotifier An Observable that signals the\n * buffer to be emitted on the output Observable.\n * @return A function that returns an Observable of buffers, which are arrays\n * of values.\n */\nexport function buffer<T>(closingNotifier: Observable<any>): OperatorFunction<T, T[]> {\n  return operate((source, subscriber) => {\n    // The current buffered values.\n    let currentBuffer: T[] = [];\n\n    // Subscribe to our source.\n    source.subscribe(\n      createOperatorSubscriber(\n        subscriber,\n        (value) => currentBuffer.push(value),\n        () => {\n          subscriber.next(currentBuffer);\n          subscriber.complete();\n        }\n      )\n    );\n\n    // Subscribe to the closing notifier.\n    closingNotifier.subscribe(\n      createOperatorSubscriber(\n        subscriber,\n        () => {\n          // Start a new buffer and emit the previous one.\n          const b = currentBuffer;\n          currentBuffer = [];\n          subscriber.next(b);\n        },\n        noop\n      )\n    );\n\n    return () => {\n      // Ensure buffered values are released on finalization.\n      currentBuffer = null!;\n    };\n  });\n}\n","import { OperatorFunction } from '../types';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nimport { arrRemove } from '../util/arrRemove';\n\n/**\n * Buffers the source Observable values until the size hits the maximum\n * `bufferSize` given.\n *\n * <span class=\"informal\">Collects values from the past as an array, and emits\n * that array only when its size reaches `bufferSize`.</span>\n *\n * ![](bufferCount.png)\n *\n * Buffers a number of values from the source Observable by `bufferSize` then\n * emits the buffer and clears it, and starts a new buffer each\n * `startBufferEvery` values. If `startBufferEvery` is not provided or is\n * `null`, then new buffers are started immediately at the start of the source\n * and when each buffer closes and is emitted.\n *\n * ## Examples\n *\n * Emit the last two click events as an array\n *\n * ```ts\n * import { fromEvent, bufferCount } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const buffered = clicks.pipe(bufferCount(2));\n * buffered.subscribe(x => console.log(x));\n * ```\n *\n * On every click, emit the last two click events as an array\n *\n * ```ts\n * import { fromEvent, bufferCount } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const buffered = clicks.pipe(bufferCount(2, 1));\n * buffered.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link buffer}\n * @see {@link bufferTime}\n * @see {@link bufferToggle}\n * @see {@link bufferWhen}\n * @see {@link pairwise}\n * @see {@link windowCount}\n *\n * @param {number} bufferSize The maximum size of the buffer emitted.\n * @param {number} [startBufferEvery] Interval at which to start a new buffer.\n * For example if `startBufferEvery` is `2`, then a new buffer will be started\n * on every other value from the source. A new buffer is started at the\n * beginning of the source by default.\n * @return A function that returns an Observable of arrays of buffered values.\n */\nexport function bufferCount<T>(bufferSize: number, startBufferEvery: number | null = null): OperatorFunction<T, T[]> {\n  // If no `startBufferEvery` value was supplied, then we're\n  // opening and closing on the bufferSize itself.\n  startBufferEvery = startBufferEvery ?? bufferSize;\n\n  return operate((source, subscriber) => {\n    let buffers: T[][] = [];\n    let count = 0;\n\n    source.subscribe(\n      createOperatorSubscriber(\n        subscriber,\n        (value) => {\n          let toEmit: T[][] | null = null;\n\n          // Check to see if we need to start a buffer.\n          // This will start one at the first value, and then\n          // a new one every N after that.\n          if (count++ % startBufferEvery! === 0) {\n            buffers.push([]);\n          }\n\n          // Push our value into our active buffers.\n          for (const buffer of buffers) {\n            buffer.push(value);\n            // Check to see if we're over the bufferSize\n            // if we are, record it so we can emit it later.\n            // If we emitted it now and removed it, it would\n            // mutate the `buffers` array while we're looping\n            // over it.\n            if (bufferSize <= buffer.length) {\n              toEmit = toEmit ?? [];\n              toEmit.push(buffer);\n            }\n          }\n\n          if (toEmit) {\n            // We have found some buffers that are over the\n            // `bufferSize`. Emit them, and remove them from our\n            // buffers list.\n            for (const buffer of toEmit) {\n              arrRemove(buffers, buffer);\n              subscriber.next(buffer);\n            }\n          }\n        },\n        () => {\n          // When the source completes, emit all of our\n          // active buffers.\n          for (const buffer of buffers) {\n            subscriber.next(buffer);\n          }\n          subscriber.complete();\n        },\n        // Pass all errors through to consumer.\n        undefined,\n        () => {\n          // Clean up our memory when we finalize\n          buffers = null!;\n        }\n      )\n    );\n  });\n}\n","import { Subscription } from '../Subscription';\nimport { OperatorFunction, SchedulerLike } from '../types';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nimport { arrRemove } from '../util/arrRemove';\nimport { asyncScheduler } from '../scheduler/async';\nimport { popScheduler } from '../util/args';\nimport { executeSchedule } from '../util/executeSchedule';\n\n/* tslint:disable:max-line-length */\nexport function bufferTime<T>(bufferTimeSpan: number, scheduler?: SchedulerLike): OperatorFunction<T, T[]>;\nexport function bufferTime<T>(\n  bufferTimeSpan: number,\n  bufferCreationInterval: number | null | undefined,\n  scheduler?: SchedulerLike\n): OperatorFunction<T, T[]>;\nexport function bufferTime<T>(\n  bufferTimeSpan: number,\n  bufferCreationInterval: number | null | undefined,\n  maxBufferSize: number,\n  scheduler?: SchedulerLike\n): OperatorFunction<T, T[]>;\n/* tslint:enable:max-line-length */\n\n/**\n * Buffers the source Observable values for a specific time period.\n *\n * <span class=\"informal\">Collects values from the past as an array, and emits\n * those arrays periodically in time.</span>\n *\n * ![](bufferTime.png)\n *\n * Buffers values from the source for a specific time duration `bufferTimeSpan`.\n * Unless the optional argument `bufferCreationInterval` is given, it emits and\n * resets the buffer every `bufferTimeSpan` milliseconds. If\n * `bufferCreationInterval` is given, this operator opens the buffer every\n * `bufferCreationInterval` milliseconds and closes (emits and resets) the\n * buffer every `bufferTimeSpan` milliseconds. When the optional argument\n * `maxBufferSize` is specified, the buffer will be closed either after\n * `bufferTimeSpan` milliseconds or when it contains `maxBufferSize` elements.\n *\n * ## Examples\n *\n * Every second, emit an array of the recent click events\n *\n * ```ts\n * import { fromEvent, bufferTime } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const buffered = clicks.pipe(bufferTime(1000));\n * buffered.subscribe(x => console.log(x));\n * ```\n *\n * Every 5 seconds, emit the click events from the next 2 seconds\n *\n * ```ts\n * import { fromEvent, bufferTime } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const buffered = clicks.pipe(bufferTime(2000, 5000));\n * buffered.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link buffer}\n * @see {@link bufferCount}\n * @see {@link bufferToggle}\n * @see {@link bufferWhen}\n * @see {@link windowTime}\n *\n * @param {number} bufferTimeSpan The amount of time to fill each buffer array.\n * @param {number} [bufferCreationInterval] The interval at which to start new\n * buffers.\n * @param {number} [maxBufferSize] The maximum buffer size.\n * @param {SchedulerLike} [scheduler=async] The scheduler on which to schedule the\n * intervals that determine buffer boundaries.\n * @return A function that returns an Observable of arrays of buffered values.\n */\nexport function bufferTime<T>(bufferTimeSpan: number, ...otherArgs: any[]): OperatorFunction<T, T[]> {\n  const scheduler = popScheduler(otherArgs) ?? asyncScheduler;\n  const bufferCreationInterval = (otherArgs[0] as number) ?? null;\n  const maxBufferSize = (otherArgs[1] as number) || Infinity;\n\n  return operate((source, subscriber) => {\n    // The active buffers, their related subscriptions, and removal functions.\n    let bufferRecords: { buffer: T[]; subs: Subscription }[] | null = [];\n    // If true, it means that every time we emit a buffer, we want to start a new buffer\n    // this is only really used for when *just* the buffer time span is passed.\n    let restartOnEmit = false;\n\n    /**\n     * Does the work of emitting the buffer from the record, ensuring that the\n     * record is removed before the emission so reentrant code (from some custom scheduling, perhaps)\n     * does not alter the buffer. Also checks to see if a new buffer needs to be started\n     * after the emit.\n     */\n    const emit = (record: { buffer: T[]; subs: Subscription }) => {\n      const { buffer, subs } = record;\n      subs.unsubscribe();\n      arrRemove(bufferRecords, record);\n      subscriber.next(buffer);\n      restartOnEmit && startBuffer();\n    };\n\n    /**\n     * Called every time we start a new buffer. This does\n     * the work of scheduling a job at the requested bufferTimeSpan\n     * that will emit the buffer (if it's not unsubscribed before then).\n     */\n    const startBuffer = () => {\n      if (bufferRecords) {\n        const subs = new Subscription();\n        subscriber.add(subs);\n        const buffer: T[] = [];\n        const record = {\n          buffer,\n          subs,\n        };\n        bufferRecords.push(record);\n        executeSchedule(subs, scheduler, () => emit(record), bufferTimeSpan);\n      }\n    };\n\n    if (bufferCreationInterval !== null && bufferCreationInterval >= 0) {\n      // The user passed both a bufferTimeSpan (required), and a creation interval\n      // That means we need to start new buffers on the interval, and those buffers need\n      // to wait the required time span before emitting.\n      executeSchedule(subscriber, scheduler, startBuffer, bufferCreationInterval, true);\n    } else {\n      restartOnEmit = true;\n    }\n\n    startBuffer();\n\n    const bufferTimeSubscriber = createOperatorSubscriber(\n      subscriber,\n      (value: T) => {\n        // Copy the records, so if we need to remove one we\n        // don't mutate the array. It's hard, but not impossible to\n        // set up a buffer time that could mutate the array and\n        // cause issues here.\n        const recordsCopy = bufferRecords!.slice();\n        for (const record of recordsCopy) {\n          // Loop over all buffers and\n          const { buffer } = record;\n          buffer.push(value);\n          // If the buffer is over the max size, we need to emit it.\n          maxBufferSize <= buffer.length && emit(record);\n        }\n      },\n      () => {\n        // The source completed, emit all of the active\n        // buffers we have before we complete.\n        while (bufferRecords?.length) {\n          subscriber.next(bufferRecords.shift()!.buffer);\n        }\n        bufferTimeSubscriber?.unsubscribe();\n        subscriber.complete();\n        subscriber.unsubscribe();\n      },\n      // Pass all errors through to consumer.\n      undefined,\n      // Clean up\n      () => (bufferRecords = null)\n    );\n\n    source.subscribe(bufferTimeSubscriber);\n  });\n}\n","import { Subscription } from '../Subscription';\nimport { OperatorFunction, ObservableInput } from '../types';\nimport { operate } from '../util/lift';\nimport { innerFrom } from '../observable/innerFrom';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nimport { noop } from '../util/noop';\nimport { arrRemove } from '../util/arrRemove';\n\n/**\n * Buffers the source Observable values starting from an emission from\n * `openings` and ending when the output of `closingSelector` emits.\n *\n * <span class=\"informal\">Collects values from the past as an array. Starts\n * collecting only when `opening` emits, and calls the `closingSelector`\n * function to get an Observable that tells when to close the buffer.</span>\n *\n * ![](bufferToggle.png)\n *\n * Buffers values from the source by opening the buffer via signals from an\n * Observable provided to `openings`, and closing and sending the buffers when\n * a Subscribable or Promise returned by the `closingSelector` function emits.\n *\n * ## Example\n *\n * Every other second, emit the click events from the next 500ms\n *\n * ```ts\n * import { fromEvent, interval, bufferToggle, EMPTY } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const openings = interval(1000);\n * const buffered = clicks.pipe(bufferToggle(openings, i =>\n *   i % 2 ? interval(500) : EMPTY\n * ));\n * buffered.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link buffer}\n * @see {@link bufferCount}\n * @see {@link bufferTime}\n * @see {@link bufferWhen}\n * @see {@link windowToggle}\n *\n * @param openings A Subscribable or Promise of notifications to start new\n * buffers.\n * @param closingSelector A function that takes\n * the value emitted by the `openings` observable and returns a Subscribable or Promise,\n * which, when it emits, signals that the associated buffer should be emitted\n * and cleared.\n * @return A function that returns an Observable of arrays of buffered values.\n */\nexport function bufferToggle<T, O>(\n  openings: ObservableInput<O>,\n  closingSelector: (value: O) => ObservableInput<any>\n): OperatorFunction<T, T[]> {\n  return operate((source, subscriber) => {\n    const buffers: T[][] = [];\n\n    // Subscribe to the openings notifier first\n    innerFrom(openings).subscribe(\n      createOperatorSubscriber(\n        subscriber,\n        (openValue) => {\n          const buffer: T[] = [];\n          buffers.push(buffer);\n          // We use this composite subscription, so that\n          // when the closing notifier emits, we can tear it down.\n          const closingSubscription = new Subscription();\n\n          const emitBuffer = () => {\n            arrRemove(buffers, buffer);\n            subscriber.next(buffer);\n            closingSubscription.unsubscribe();\n          };\n\n          // The line below will add the subscription to the parent subscriber *and* the closing subscription.\n          closingSubscription.add(innerFrom(closingSelector(openValue)).subscribe(createOperatorSubscriber(subscriber, emitBuffer, noop)));\n        },\n        noop\n      )\n    );\n\n    source.subscribe(\n      createOperatorSubscriber(\n        subscriber,\n        (value) => {\n          // Value from our source. Add it to all pending buffers.\n          for (const buffer of buffers) {\n            buffer.push(value);\n          }\n        },\n        () => {\n          // Source complete. Emit all pending buffers.\n          while (buffers.length > 0) {\n            subscriber.next(buffers.shift()!);\n          }\n          subscriber.complete();\n        }\n      )\n    );\n  });\n}\n","import { Subscriber } from '../Subscriber';\nimport { ObservableInput, OperatorFunction } from '../types';\nimport { operate } from '../util/lift';\nimport { noop } from '../util/noop';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nimport { innerFrom } from '../observable/innerFrom';\n\n/**\n * Buffers the source Observable values, using a factory function of closing\n * Observables to determine when to close, emit, and reset the buffer.\n *\n * <span class=\"informal\">Collects values from the past as an array. When it\n * starts collecting values, it calls a function that returns an Observable that\n * tells when to close the buffer and restart collecting.</span>\n *\n * ![](bufferWhen.svg)\n *\n * Opens a buffer immediately, then closes the buffer when the observable\n * returned by calling `closingSelector` function emits a value. When it closes\n * the buffer, it immediately opens a new buffer and repeats the process.\n *\n * ## Example\n *\n * Emit an array of the last clicks every [1-5] random seconds\n *\n * ```ts\n * import { fromEvent, bufferWhen, interval } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const buffered = clicks.pipe(\n *   bufferWhen(() => interval(1000 + Math.random() * 4000))\n * );\n * buffered.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link buffer}\n * @see {@link bufferCount}\n * @see {@link bufferTime}\n * @see {@link bufferToggle}\n * @see {@link windowWhen}\n *\n * @param {function(): Observable} closingSelector A function that takes no\n * arguments and returns an Observable that signals buffer closure.\n * @return A function that returns an Observable of arrays of buffered values.\n */\nexport function bufferWhen<T>(closingSelector: () => ObservableInput<any>): OperatorFunction<T, T[]> {\n  return operate((source, subscriber) => {\n    // The buffer we keep and emit.\n    let buffer: T[] | null = null;\n    // A reference to the subscriber used to subscribe to\n    // the closing notifier. We need to hold this so we can\n    // end the subscription after the first notification.\n    let closingSubscriber: Subscriber<T> | null = null;\n\n    // Ends the previous closing notifier subscription, so it\n    // terminates after the first emission, then emits\n    // the current buffer  if there is one, starts a new buffer, and starts a\n    // new closing notifier.\n    const openBuffer = () => {\n      // Make sure to finalize the closing subscription, we only cared\n      // about one notification.\n      closingSubscriber?.unsubscribe();\n      // emit the buffer if we have one, and start a new buffer.\n      const b = buffer;\n      buffer = [];\n      b && subscriber.next(b);\n\n      // Get a new closing notifier and subscribe to it.\n      innerFrom(closingSelector()).subscribe((closingSubscriber = createOperatorSubscriber(subscriber, openBuffer, noop)));\n    };\n\n    // Start the first buffer.\n    openBuffer();\n\n    // Subscribe to our source.\n    source.subscribe(\n      createOperatorSubscriber(\n        subscriber,\n        // Add every new value to the current buffer.\n        (value) => buffer?.push(value),\n        // When we complete, emit the buffer if we have one,\n        // then complete the result.\n        () => {\n          buffer && subscriber.next(buffer);\n          subscriber.complete();\n        },\n        // Pass all errors through to consumer.\n        undefined,\n        // Release memory on finalization\n        () => (buffer = closingSubscriber = null!)\n      )\n    );\n  });\n}\n","import { Observable } from '../Observable';\n\nimport { ObservableInput, OperatorFunction, ObservedValueOf } from '../types';\nimport { Subscription } from '../Subscription';\nimport { innerFrom } from '../observable/innerFrom';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nimport { operate } from '../util/lift';\n\n/* tslint:disable:max-line-length */\nexport function catchError<T, O extends ObservableInput<any>>(\n  selector: (err: any, caught: Observable<T>) => O\n): OperatorFunction<T, T | ObservedValueOf<O>>;\n/* tslint:enable:max-line-length */\n\n/**\n * Catches errors on the observable to be handled by returning a new observable or throwing an error.\n *\n * <span class=\"informal\">\n * It only listens to the error channel and ignores notifications.\n * Handles errors from the source observable, and maps them to a new observable.\n * The error may also be rethrown, or a new error can be thrown to emit an error from the result.\n * </span>\n *\n * ![](catch.png)\n *\n * This operator handles errors, but forwards along all other events to the resulting observable.\n * If the source observable terminates with an error, it will map that error to a new observable,\n * subscribe to it, and forward all of its events to the resulting observable.\n *\n * ## Examples\n *\n * Continue with a different Observable when there's an error\n *\n * ```ts\n * import { of, map, catchError } from 'rxjs';\n *\n * of(1, 2, 3, 4, 5)\n *   .pipe(\n *     map(n => {\n *       if (n === 4) {\n *         throw 'four!';\n *       }\n *       return n;\n *     }),\n *     catchError(err => of('I', 'II', 'III', 'IV', 'V'))\n *   )\n *   .subscribe(x => console.log(x));\n *   // 1, 2, 3, I, II, III, IV, V\n * ```\n *\n * Retry the caught source Observable again in case of error, similar to `retry()` operator\n *\n * ```ts\n * import { of, map, catchError, take } from 'rxjs';\n *\n * of(1, 2, 3, 4, 5)\n *   .pipe(\n *     map(n => {\n *       if (n === 4) {\n *         throw 'four!';\n *       }\n *       return n;\n *     }),\n *     catchError((err, caught) => caught),\n *     take(30)\n *   )\n *   .subscribe(x => console.log(x));\n *   // 1, 2, 3, 1, 2, 3, ...\n * ```\n *\n * Throw a new error when the source Observable throws an error\n *\n * ```ts\n * import { of, map, catchError } from 'rxjs';\n *\n * of(1, 2, 3, 4, 5)\n *   .pipe(\n *     map(n => {\n *       if (n === 4) {\n *         throw 'four!';\n *       }\n *       return n;\n *     }),\n *     catchError(err => {\n *       throw 'error in source. Details: ' + err;\n *     })\n *   )\n *   .subscribe({\n *     next: x => console.log(x),\n *     error: err => console.log(err)\n *   });\n *   // 1, 2, 3, error in source. Details: four!\n * ```\n *\n * @see {@link onErrorResumeNext}\n * @see {@link repeat}\n * @see {@link repeatWhen}\n * @see {@link retry }\n * @see {@link retryWhen}\n *\n * @param {function} selector a function that takes as arguments `err`, which is the error, and `caught`, which\n * is the source observable, in case you'd like to \"retry\" that observable by returning it again. Whatever observable\n * is returned by the `selector` will be used to continue the observable chain.\n * @return A function that returns an Observable that originates from either\n * the source or the Observable returned by the `selector` function.\n */\nexport function catchError<T, O extends ObservableInput<any>>(\n  selector: (err: any, caught: Observable<T>) => O\n): OperatorFunction<T, T | ObservedValueOf<O>> {\n  return operate((source, subscriber) => {\n    let innerSub: Subscription | null = null;\n    let syncUnsub = false;\n    let handledResult: Observable<ObservedValueOf<O>>;\n\n    innerSub = source.subscribe(\n      createOperatorSubscriber(subscriber, undefined, undefined, (err) => {\n        handledResult = innerFrom(selector(err, catchError(selector)(source)));\n        if (innerSub) {\n          innerSub.unsubscribe();\n          innerSub = null;\n          handledResult.subscribe(subscriber);\n        } else {\n          // We don't have an innerSub yet, that means the error was synchronous\n          // because the subscribe call hasn't returned yet.\n          syncUnsub = true;\n        }\n      })\n    );\n\n    if (syncUnsub) {\n      // We have a synchronous error, we need to make sure to\n      // finalize right away. This ensures that callbacks in the `finalize` operator are called\n      // at the right time, and that finalization occurs at the expected\n      // time between the source error and the subscription to the\n      // next observable.\n      innerSub.unsubscribe();\n      innerSub = null;\n      handledResult!.subscribe(subscriber);\n    }\n  });\n}\n","import { combineLatestAll } from './combineLatestAll';\n\n/**\n * @deprecated Renamed to {@link combineLatestAll}. Will be removed in v8.\n */\nexport const combineAll = combineLatestAll;\n","import { combineLatestInit } from '../observable/combineLatest';\nimport { ObservableInput, ObservableInputTuple, OperatorFunction } from '../types';\nimport { operate } from '../util/lift';\nimport { argsOrArgArray } from '../util/argsOrArgArray';\nimport { mapOneOrManyArgs } from '../util/mapOneOrManyArgs';\nimport { pipe } from '../util/pipe';\nimport { popResultSelector } from '../util/args';\n\n/** @deprecated Replaced with {@link combineLatestWith}. Will be removed in v8. */\nexport function combineLatest<T, A extends readonly unknown[], R>(\n  sources: [...ObservableInputTuple<A>],\n  project: (...values: [T, ...A]) => R\n): OperatorFunction<T, R>;\n/** @deprecated Replaced with {@link combineLatestWith}. Will be removed in v8. */\nexport function combineLatest<T, A extends readonly unknown[], R>(sources: [...ObservableInputTuple<A>]): OperatorFunction<T, [T, ...A]>;\n\n/** @deprecated Replaced with {@link combineLatestWith}. Will be removed in v8. */\nexport function combineLatest<T, A extends readonly unknown[], R>(\n  ...sourcesAndProject: [...ObservableInputTuple<A>, (...values: [T, ...A]) => R]\n): OperatorFunction<T, R>;\n/** @deprecated Replaced with {@link combineLatestWith}. Will be removed in v8. */\nexport function combineLatest<T, A extends readonly unknown[], R>(...sources: [...ObservableInputTuple<A>]): OperatorFunction<T, [T, ...A]>;\n\n/**\n * @deprecated Replaced with {@link combineLatestWith}. Will be removed in v8.\n */\nexport function combineLatest<T, R>(...args: (ObservableInput<any> | ((...values: any[]) => R))[]): OperatorFunction<T, unknown> {\n  const resultSelector = popResultSelector(args);\n  return resultSelector\n    ? pipe(combineLatest(...(args as Array<ObservableInput<any>>)), mapOneOrManyArgs(resultSelector))\n    : operate((source, subscriber) => {\n        combineLatestInit([source, ...argsOrArgArray(args)])(subscriber);\n      });\n}\n","import { combineLatest } from '../observable/combineLatest';\nimport { OperatorFunction, ObservableInput } from '../types';\nimport { joinAllInternals } from './joinAllInternals';\n\nexport function combineLatestAll<T>(): OperatorFunction<ObservableInput<T>, T[]>;\nexport function combineLatestAll<T>(): OperatorFunction<any, T[]>;\nexport function combineLatestAll<T, R>(project: (...values: T[]) => R): OperatorFunction<ObservableInput<T>, R>;\nexport function combineLatestAll<R>(project: (...values: Array<any>) => R): OperatorFunction<any, R>;\n\n/**\n * Flattens an Observable-of-Observables by applying {@link combineLatest} when the Observable-of-Observables completes.\n *\n * `combineLatestAll` takes an Observable of Observables, and collects all Observables from it. Once the outer Observable completes,\n * it subscribes to all collected Observables and combines their values using the {@link combineLatest} strategy, such that:\n *\n * * Every time an inner Observable emits, the output Observable emits\n * * When the returned observable emits, it emits all of the latest values by:\n *    * If a `project` function is provided, it is called with each recent value from each inner Observable in whatever order they\n *      arrived, and the result of the `project` function is what is emitted by the output Observable.\n *    * If there is no `project` function, an array of all the most recent values is emitted by the output Observable.\n *\n * ## Example\n *\n * Map two click events to a finite interval Observable, then apply `combineLatestAll`\n *\n * ```ts\n * import { fromEvent, map, interval, take, combineLatestAll } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const higherOrder = clicks.pipe(\n *   map(() => interval(Math.random() * 2000).pipe(take(3))),\n *   take(2)\n * );\n * const result = higherOrder.pipe(combineLatestAll());\n *\n * result.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link combineLatest}\n * @see {@link combineLatestWith}\n * @see {@link mergeAll}\n *\n * @param project optional function to map the most recent values from each inner Observable into a new result.\n * Takes each of the most recent values from each collected inner Observable as arguments, in order.\n * @return A function that returns an Observable that flattens Observables\n * emitted by the source Observable.\n */\nexport function combineLatestAll<R>(project?: (...values: Array<any>) => R) {\n  return joinAllInternals(combineLatest, project);\n}\n","import { ObservableInputTuple, OperatorFunction, Cons } from '../types';\nimport { combineLatest } from './combineLatest';\n\n/**\n * Create an observable that combines the latest values from all passed observables and the source\n * into arrays and emits them.\n *\n * Returns an observable, that when subscribed to, will subscribe to the source observable and all\n * sources provided as arguments. Once all sources emit at least one value, all of the latest values\n * will be emitted as an array. After that, every time any source emits a value, all of the latest values\n * will be emitted as an array.\n *\n * This is a useful operator for eagerly calculating values based off of changed inputs.\n *\n * ## Example\n *\n * Simple concatenation of values from two inputs\n *\n * ```ts\n * import { fromEvent, combineLatestWith, map } from 'rxjs';\n *\n * // Setup: Add two inputs to the page\n * const input1 = document.createElement('input');\n * document.body.appendChild(input1);\n * const input2 = document.createElement('input');\n * document.body.appendChild(input2);\n *\n * // Get streams of changes\n * const input1Changes$ = fromEvent(input1, 'change');\n * const input2Changes$ = fromEvent(input2, 'change');\n *\n * // Combine the changes by adding them together\n * input1Changes$.pipe(\n *   combineLatestWith(input2Changes$),\n *   map(([e1, e2]) => (<HTMLInputElement>e1.target).value + ' - ' + (<HTMLInputElement>e2.target).value)\n * )\n * .subscribe(x => console.log(x));\n * ```\n *\n * @param otherSources the other sources to subscribe to.\n * @return A function that returns an Observable that emits the latest\n * emissions from both source and provided Observables.\n */\nexport function combineLatestWith<T, A extends readonly unknown[]>(\n  ...otherSources: [...ObservableInputTuple<A>]\n): OperatorFunction<T, Cons<T, A>> {\n  return combineLatest(...otherSources);\n}\n","import { ObservableInputTuple, OperatorFunction, SchedulerLike } from '../types';\nimport { operate } from '../util/lift';\nimport { concatAll } from './concatAll';\nimport { popScheduler } from '../util/args';\nimport { from } from '../observable/from';\n\n/** @deprecated Replaced with {@link concatWith}. Will be removed in v8. */\nexport function concat<T, A extends readonly unknown[]>(...sources: [...ObservableInputTuple<A>]): OperatorFunction<T, T | A[number]>;\n/** @deprecated Replaced with {@link concatWith}. Will be removed in v8. */\nexport function concat<T, A extends readonly unknown[]>(\n  ...sourcesAndScheduler: [...ObservableInputTuple<A>, SchedulerLike]\n): OperatorFunction<T, T | A[number]>;\n\n/**\n * @deprecated Replaced with {@link concatWith}. Will be removed in v8.\n */\nexport function concat<T, R>(...args: any[]): OperatorFunction<T, R> {\n  const scheduler = popScheduler(args);\n  return operate((source, subscriber) => {\n    concatAll()(from([source, ...args], scheduler)).subscribe(subscriber);\n  });\n}\n","import { mergeAll } from './mergeAll';\nimport { OperatorFunction, ObservableInput, ObservedValueOf } from '../types';\n\n/**\n * Converts a higher-order Observable into a first-order Observable by\n * concatenating the inner Observables in order.\n *\n * <span class=\"informal\">Flattens an Observable-of-Observables by putting one\n * inner Observable after the other.</span>\n *\n * ![](concatAll.svg)\n *\n * Joins every Observable emitted by the source (a higher-order Observable), in\n * a serial fashion. It subscribes to each inner Observable only after the\n * previous inner Observable has completed, and merges all of their values into\n * the returned observable.\n *\n * __Warning:__ If the source Observable emits Observables quickly and\n * endlessly, and the inner Observables it emits generally complete slower than\n * the source emits, you can run into memory issues as the incoming Observables\n * collect in an unbounded buffer.\n *\n * Note: `concatAll` is equivalent to `mergeAll` with concurrency parameter set\n * to `1`.\n *\n * ## Example\n *\n * For each click event, tick every second from 0 to 3, with no concurrency\n *\n * ```ts\n * import { fromEvent, map, interval, take, concatAll } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const higherOrder = clicks.pipe(\n *   map(() => interval(1000).pipe(take(4)))\n * );\n * const firstOrder = higherOrder.pipe(concatAll());\n * firstOrder.subscribe(x => console.log(x));\n *\n * // Results in the following:\n * // (results are not concurrent)\n * // For every click on the \"document\" it will emit values 0 to 3 spaced\n * // on a 1000ms interval\n * // one click = 1000ms-> 0 -1000ms-> 1 -1000ms-> 2 -1000ms-> 3\n * ```\n *\n * @see {@link combineLatestAll}\n * @see {@link concat}\n * @see {@link concatMap}\n * @see {@link concatMapTo}\n * @see {@link exhaustAll}\n * @see {@link mergeAll}\n * @see {@link switchAll}\n * @see {@link switchMap}\n * @see {@link zipAll}\n *\n * @return A function that returns an Observable emitting values from all the\n * inner Observables concatenated.\n */\nexport function concatAll<O extends ObservableInput<any>>(): OperatorFunction<O, ObservedValueOf<O>> {\n  return mergeAll(1);\n}\n","import { mergeMap } from './mergeMap';\nimport { ObservableInput, OperatorFunction, ObservedValueOf } from '../types';\nimport { isFunction } from '../util/isFunction';\n\n/* tslint:disable:max-line-length */\nexport function concatMap<T, O extends ObservableInput<any>>(\n  project: (value: T, index: number) => O\n): OperatorFunction<T, ObservedValueOf<O>>;\n/** @deprecated The `resultSelector` parameter will be removed in v8. Use an inner `map` instead. Details: https://rxjs.dev/deprecations/resultSelector */\nexport function concatMap<T, O extends ObservableInput<any>>(\n  project: (value: T, index: number) => O,\n  resultSelector: undefined\n): OperatorFunction<T, ObservedValueOf<O>>;\n/** @deprecated The `resultSelector` parameter will be removed in v8. Use an inner `map` instead. Details: https://rxjs.dev/deprecations/resultSelector */\nexport function concatMap<T, R, O extends ObservableInput<any>>(\n  project: (value: T, index: number) => O,\n  resultSelector: (outerValue: T, innerValue: ObservedValueOf<O>, outerIndex: number, innerIndex: number) => R\n): OperatorFunction<T, R>;\n/* tslint:enable:max-line-length */\n\n/**\n * Projects each source value to an Observable which is merged in the output\n * Observable, in a serialized fashion waiting for each one to complete before\n * merging the next.\n *\n * <span class=\"informal\">Maps each value to an Observable, then flattens all of\n * these inner Observables using {@link concatAll}.</span>\n *\n * ![](concatMap.png)\n *\n * Returns an Observable that emits items based on applying a function that you\n * supply to each item emitted by the source Observable, where that function\n * returns an (so-called \"inner\") Observable. Each new inner Observable is\n * concatenated with the previous inner Observable.\n *\n * __Warning:__ if source values arrive endlessly and faster than their\n * corresponding inner Observables can complete, it will result in memory issues\n * as inner Observables amass in an unbounded buffer waiting for their turn to\n * be subscribed to.\n *\n * Note: `concatMap` is equivalent to `mergeMap` with concurrency parameter set\n * to `1`.\n *\n * ## Example\n *\n * For each click event, tick every second from 0 to 3, with no concurrency\n *\n * ```ts\n * import { fromEvent, concatMap, interval, take } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const result = clicks.pipe(\n *   concatMap(ev => interval(1000).pipe(take(4)))\n * );\n * result.subscribe(x => console.log(x));\n *\n * // Results in the following:\n * // (results are not concurrent)\n * // For every click on the \"document\" it will emit values 0 to 3 spaced\n * // on a 1000ms interval\n * // one click = 1000ms-> 0 -1000ms-> 1 -1000ms-> 2 -1000ms-> 3\n * ```\n *\n * @see {@link concat}\n * @see {@link concatAll}\n * @see {@link concatMapTo}\n * @see {@link exhaustMap}\n * @see {@link mergeMap}\n * @see {@link switchMap}\n *\n * @param {function(value: T, ?index: number): ObservableInput} project A function\n * that, when applied to an item emitted by the source Observable, returns an\n * Observable.\n * @return A function that returns an Observable that emits the result of\n * applying the projection function (and the optional deprecated\n * `resultSelector`) to each item emitted by the source Observable and taking\n * values from each projected inner Observable sequentially.\n */\nexport function concatMap<T, R, O extends ObservableInput<any>>(\n  project: (value: T, index: number) => O,\n  resultSelector?: (outerValue: T, innerValue: ObservedValueOf<O>, outerIndex: number, innerIndex: number) => R\n): OperatorFunction<T, ObservedValueOf<O> | R> {\n  return isFunction(resultSelector) ? mergeMap(project, resultSelector, 1) : mergeMap(project, 1);\n}\n","import { concatMap } from './concatMap';\nimport { ObservableInput, OperatorFunction, ObservedValueOf } from '../types';\nimport { isFunction } from '../util/isFunction';\n\n/** @deprecated Will be removed in v9. Use {@link concatMap} instead: `concatMap(() => result)` */\nexport function concatMapTo<O extends ObservableInput<unknown>>(observable: O): OperatorFunction<unknown, ObservedValueOf<O>>;\n/** @deprecated The `resultSelector` parameter will be removed in v8. Use an inner `map` instead. Details: https://rxjs.dev/deprecations/resultSelector */\nexport function concatMapTo<O extends ObservableInput<unknown>>(\n  observable: O,\n  resultSelector: undefined\n): OperatorFunction<unknown, ObservedValueOf<O>>;\n/** @deprecated The `resultSelector` parameter will be removed in v8. Use an inner `map` instead. Details: https://rxjs.dev/deprecations/resultSelector */\nexport function concatMapTo<T, R, O extends ObservableInput<unknown>>(\n  observable: O,\n  resultSelector: (outerValue: T, innerValue: ObservedValueOf<O>, outerIndex: number, innerIndex: number) => R\n): OperatorFunction<T, R>;\n\n/**\n * Projects each source value to the same Observable which is merged multiple\n * times in a serialized fashion on the output Observable.\n *\n * <span class=\"informal\">It's like {@link concatMap}, but maps each value\n * always to the same inner Observable.</span>\n *\n * ![](concatMapTo.png)\n *\n * Maps each source value to the given Observable `innerObservable` regardless\n * of the source value, and then flattens those resulting Observables into one\n * single Observable, which is the output Observable. Each new `innerObservable`\n * instance emitted on the output Observable is concatenated with the previous\n * `innerObservable` instance.\n *\n * __Warning:__ if source values arrive endlessly and faster than their\n * corresponding inner Observables can complete, it will result in memory issues\n * as inner Observables amass in an unbounded buffer waiting for their turn to\n * be subscribed to.\n *\n * Note: `concatMapTo` is equivalent to `mergeMapTo` with concurrency parameter\n * set to `1`.\n *\n * ## Example\n *\n * For each click event, tick every second from 0 to 3, with no concurrency\n *\n * ```ts\n * import { fromEvent, concatMapTo, interval, take } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const result = clicks.pipe(\n *   concatMapTo(interval(1000).pipe(take(4)))\n * );\n * result.subscribe(x => console.log(x));\n *\n * // Results in the following:\n * // (results are not concurrent)\n * // For every click on the \"document\" it will emit values 0 to 3 spaced\n * // on a 1000ms interval\n * // one click = 1000ms-> 0 -1000ms-> 1 -1000ms-> 2 -1000ms-> 3\n * ```\n *\n * @see {@link concat}\n * @see {@link concatAll}\n * @see {@link concatMap}\n * @see {@link mergeMapTo}\n * @see {@link switchMapTo}\n *\n * @param {ObservableInput} innerObservable An Observable to replace each value from\n * the source Observable.\n * @return A function that returns an Observable of values merged together by\n * joining the passed Observable with itself, one after the other, for each\n * value emitted from the source.\n * @deprecated Will be removed in v9. Use {@link concatMap} instead: `concatMap(() => result)`\n */\nexport function concatMapTo<T, R, O extends ObservableInput<unknown>>(\n  innerObservable: O,\n  resultSelector?: (outerValue: T, innerValue: ObservedValueOf<O>, outerIndex: number, innerIndex: number) => R\n): OperatorFunction<T, ObservedValueOf<O> | R> {\n  return isFunction(resultSelector) ? concatMap(() => innerObservable, resultSelector) : concatMap(() => innerObservable);\n}\n","import { ObservableInputTuple, OperatorFunction } from '../types';\nimport { concat } from './concat';\n\n/**\n * Emits all of the values from the source observable, then, once it completes, subscribes\n * to each observable source provided, one at a time, emitting all of their values, and not subscribing\n * to the next one until it completes.\n *\n * `concat(a$, b$, c$)` is the same as `a$.pipe(concatWith(b$, c$))`.\n *\n * ## Example\n *\n * Listen for one mouse click, then listen for all mouse moves.\n *\n * ```ts\n * import { fromEvent, map, take, concatWith } from 'rxjs';\n *\n * const clicks$ = fromEvent(document, 'click');\n * const moves$ = fromEvent(document, 'mousemove');\n *\n * clicks$.pipe(\n *   map(() => 'click'),\n *   take(1),\n *   concatWith(\n *     moves$.pipe(\n *       map(() => 'move')\n *     )\n *   )\n * )\n * .subscribe(x => console.log(x));\n *\n * // 'click'\n * // 'move'\n * // 'move'\n * // 'move'\n * // ...\n * ```\n *\n * @param otherSources Other observable sources to subscribe to, in sequence, after the original source is complete.\n * @return A function that returns an Observable that concatenates\n * subscriptions to the source and provided Observables subscribing to the next\n * only once the current subscription completes.\n */\nexport function concatWith<T, A extends readonly unknown[]>(\n  ...otherSources: [...ObservableInputTuple<A>]\n): OperatorFunction<T, T | A[number]> {\n  return concat(...otherSources);\n}\n","import { OperatorFunction, ObservableInput, ObservedValueOf, SubjectLike } from '../types';\nimport { Observable } from '../Observable';\nimport { Subject } from '../Subject';\nimport { innerFrom } from '../observable/innerFrom';\nimport { operate } from '../util/lift';\nimport { fromSubscribable } from '../observable/fromSubscribable';\n\n/**\n * An object used to configure {@link connect} operator.\n */\nexport interface ConnectConfig<T> {\n  /**\n   * A factory function used to create the Subject through which the source\n   * is multicast. By default, this creates a {@link Subject}.\n   */\n  connector: () => SubjectLike<T>;\n}\n\n/**\n * The default configuration for `connect`.\n */\nconst DEFAULT_CONFIG: ConnectConfig<unknown> = {\n  connector: () => new Subject<unknown>(),\n};\n\n/**\n * Creates an observable by multicasting the source within a function that\n * allows the developer to define the usage of the multicast prior to connection.\n *\n * This is particularly useful if the observable source you wish to multicast could\n * be synchronous or asynchronous. This sets it apart from {@link share}, which, in the\n * case of totally synchronous sources will fail to share a single subscription with\n * multiple consumers, as by the time the subscription to the result of {@link share}\n * has returned, if the source is synchronous its internal reference count will jump from\n * 0 to 1 back to 0 and reset.\n *\n * To use `connect`, you provide a `selector` function that will give you\n * a multicast observable that is not yet connected. You then use that multicast observable\n * to create a resulting observable that, when subscribed, will set up your multicast. This is\n * generally, but not always, accomplished with {@link merge}.\n *\n * Note that using a {@link takeUntil} inside of `connect`'s `selector` _might_ mean you were looking\n * to use the {@link takeWhile} operator instead.\n *\n * When you subscribe to the result of `connect`, the `selector` function will be called. After\n * the `selector` function returns, the observable it returns will be subscribed to, _then_ the\n * multicast will be connected to the source.\n *\n * ## Example\n *\n * Sharing a totally synchronous observable\n *\n * ```ts\n * import { of, tap, connect, merge, map, filter } from 'rxjs';\n *\n * const source$ = of(1, 2, 3, 4, 5).pipe(\n *   tap({\n *     subscribe: () => console.log('subscription started'),\n *     next: n => console.log(`source emitted ${ n }`)\n *   })\n * );\n *\n * source$.pipe(\n *   // Notice in here we're merging 3 subscriptions to `shared$`.\n *   connect(shared$ => merge(\n *     shared$.pipe(map(n => `all ${ n }`)),\n *     shared$.pipe(filter(n => n % 2 === 0), map(n => `even ${ n }`)),\n *     shared$.pipe(filter(n => n % 2 === 1), map(n => `odd ${ n }`))\n *   ))\n * )\n * .subscribe(console.log);\n *\n * // Expected output: (notice only one subscription)\n * 'subscription started'\n * 'source emitted 1'\n * 'all 1'\n * 'odd 1'\n * 'source emitted 2'\n * 'all 2'\n * 'even 2'\n * 'source emitted 3'\n * 'all 3'\n * 'odd 3'\n * 'source emitted 4'\n * 'all 4'\n * 'even 4'\n * 'source emitted 5'\n * 'all 5'\n * 'odd 5'\n * ```\n *\n * @param selector A function used to set up the multicast. Gives you a multicast observable\n * that is not yet connected. With that, you're expected to create and return\n * and Observable, that when subscribed to, will utilize the multicast observable.\n * After this function is executed -- and its return value subscribed to -- the\n * operator will subscribe to the source, and the connection will be made.\n * @param config The configuration object for `connect`.\n */\nexport function connect<T, O extends ObservableInput<unknown>>(\n  selector: (shared: Observable<T>) => O,\n  config: ConnectConfig<T> = DEFAULT_CONFIG\n): OperatorFunction<T, ObservedValueOf<O>> {\n  const { connector } = config;\n  return operate((source, subscriber) => {\n    const subject = connector();\n    innerFrom(selector(fromSubscribable(subject))).subscribe(subscriber);\n    subscriber.add(source.subscribe(subject));\n  });\n}\n","import { OperatorFunction } from '../types';\nimport { reduce } from './reduce';\n\n/**\n * Counts the number of emissions on the source and emits that number when the\n * source completes.\n *\n * <span class=\"informal\">Tells how many values were emitted, when the source\n * completes.</span>\n *\n * ![](count.png)\n *\n * `count` transforms an Observable that emits values into an Observable that\n * emits a single value that represents the number of values emitted by the\n * source Observable. If the source Observable terminates with an error, `count`\n * will pass this error notification along without emitting a value first. If\n * the source Observable does not terminate at all, `count` will neither emit\n * a value nor terminate. This operator takes an optional `predicate` function\n * as argument, in which case the output emission will represent the number of\n * source values that matched `true` with the `predicate`.\n *\n * ## Examples\n *\n * Counts how many seconds have passed before the first click happened\n *\n * ```ts\n * import { interval, fromEvent, takeUntil, count } from 'rxjs';\n *\n * const seconds = interval(1000);\n * const clicks = fromEvent(document, 'click');\n * const secondsBeforeClick = seconds.pipe(takeUntil(clicks));\n * const result = secondsBeforeClick.pipe(count());\n * result.subscribe(x => console.log(x));\n * ```\n *\n * Counts how many odd numbers are there between 1 and 7\n *\n * ```ts\n * import { range, count } from 'rxjs';\n *\n * const numbers = range(1, 7);\n * const result = numbers.pipe(count(i => i % 2 === 1));\n * result.subscribe(x => console.log(x));\n * // Results in:\n * // 4\n * ```\n *\n * @see {@link max}\n * @see {@link min}\n * @see {@link reduce}\n *\n * @param predicate A function that is used to analyze the value and the index and\n * determine whether or not to increment the count. Return `true` to increment the count,\n * and return `false` to keep the count the same.\n * If the predicate is not provided, every value will be counted.\n * @return A function that returns an Observable that emits one number that\n * represents the count of emissions.\n */\nexport function count<T>(predicate?: (value: T, index: number) => boolean): OperatorFunction<T, number> {\n  return reduce((total, value, i) => (!predicate || predicate(value, i) ? total + 1 : total), 0);\n}\n","import { Subscriber } from '../Subscriber';\nimport { MonoTypeOperatorFunction, ObservableInput } from '../types';\nimport { operate } from '../util/lift';\nimport { noop } from '../util/noop';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nimport { innerFrom } from '../observable/innerFrom';\n\n/**\n * Emits a notification from the source Observable only after a particular time span\n * determined by another Observable has passed without another source emission.\n *\n * <span class=\"informal\">It's like {@link debounceTime}, but the time span of\n * emission silence is determined by a second Observable.</span>\n *\n * ![](debounce.svg)\n *\n * `debounce` delays notifications emitted by the source Observable, but drops previous\n * pending delayed emissions if a new notification arrives on the source Observable.\n * This operator keeps track of the most recent notification from the source\n * Observable, and spawns a duration Observable by calling the\n * `durationSelector` function. The notification is emitted only when the duration\n * Observable emits a next notification, and if no other notification was emitted on\n * the source Observable since the duration Observable was spawned. If a new\n * notification appears before the duration Observable emits, the previous notification will\n * not be emitted and a new duration is scheduled from `durationSelector` is scheduled.\n * If the completing event happens during the scheduled duration the last cached notification\n * is emitted before the completion event is forwarded to the output observable.\n * If the error event happens during the scheduled duration or after it only the error event is\n * forwarded to the output observable. The cache notification is not emitted in this case.\n *\n * Like {@link debounceTime}, this is a rate-limiting operator, and also a\n * delay-like operator since output emissions do not necessarily occur at the\n * same time as they did on the source Observable.\n *\n * ## Example\n *\n * Emit the most recent click after a burst of clicks\n *\n * ```ts\n * import { fromEvent, scan, debounce, interval } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const result = clicks.pipe(\n *   scan(i => ++i, 1),\n *   debounce(i => interval(200 * i))\n * );\n * result.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link audit}\n * @see {@link auditTime}\n * @see {@link debounceTime}\n * @see {@link delay}\n * @see {@link sample}\n * @see {@link sampleTime}\n * @see {@link throttle}\n * @see {@link throttleTime}\n *\n * @param durationSelector A function\n * that receives a value from the source Observable, for computing the timeout\n * duration for each source value, returned as an Observable or a Promise.\n * @return A function that returns an Observable that delays the emissions of\n * the source Observable by the specified duration Observable returned by\n * `durationSelector`, and may drop some values if they occur too frequently.\n */\nexport function debounce<T>(durationSelector: (value: T) => ObservableInput<any>): MonoTypeOperatorFunction<T> {\n  return operate((source, subscriber) => {\n    let hasValue = false;\n    let lastValue: T | null = null;\n    // The subscriber/subscription for the current debounce, if there is one.\n    let durationSubscriber: Subscriber<any> | null = null;\n\n    const emit = () => {\n      // Unsubscribe any current debounce subscription we have,\n      // we only cared about the first notification from it, and we\n      // want to clean that subscription up as soon as possible.\n      durationSubscriber?.unsubscribe();\n      durationSubscriber = null;\n      if (hasValue) {\n        // We have a value! Free up memory first, then emit the value.\n        hasValue = false;\n        const value = lastValue!;\n        lastValue = null;\n        subscriber.next(value);\n      }\n    };\n\n    source.subscribe(\n      createOperatorSubscriber(\n        subscriber,\n        (value: T) => {\n          // Cancel any pending debounce duration. We don't\n          // need to null it out here yet tho, because we're just going\n          // to create another one in a few lines.\n          durationSubscriber?.unsubscribe();\n          hasValue = true;\n          lastValue = value;\n          // Capture our duration subscriber, so we can unsubscribe it when we're notified\n          // and we're going to emit the value.\n          durationSubscriber = createOperatorSubscriber(subscriber, emit, noop);\n          // Subscribe to the duration.\n          innerFrom(durationSelector(value)).subscribe(durationSubscriber);\n        },\n        () => {\n          // Source completed.\n          // Emit any pending debounced values then complete\n          emit();\n          subscriber.complete();\n        },\n        // Pass all errors through to consumer\n        undefined,\n        () => {\n          // Finalization.\n          lastValue = durationSubscriber = null;\n        }\n      )\n    );\n  });\n}\n","import { asyncScheduler } from '../scheduler/async';\nimport { Subscription } from '../Subscription';\nimport { MonoTypeOperatorFunction, SchedulerAction, SchedulerLike } from '../types';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\n\n/**\n * Emits a notification from the source Observable only after a particular time span\n * has passed without another source emission.\n *\n * <span class=\"informal\">It's like {@link delay}, but passes only the most\n * recent notification from each burst of emissions.</span>\n *\n * ![](debounceTime.png)\n *\n * `debounceTime` delays notifications emitted by the source Observable, but drops\n * previous pending delayed emissions if a new notification arrives on the source\n * Observable. This operator keeps track of the most recent notification from the\n * source Observable, and emits that only when `dueTime` has passed\n * without any other notification appearing on the source Observable. If a new value\n * appears before `dueTime` silence occurs, the previous notification will be dropped\n * and will not be emitted and a new `dueTime` is scheduled.\n * If the completing event happens during `dueTime` the last cached notification\n * is emitted before the completion event is forwarded to the output observable.\n * If the error event happens during `dueTime` or after it only the error event is\n * forwarded to the output observable. The cache notification is not emitted in this case.\n *\n * This is a rate-limiting operator, because it is impossible for more than one\n * notification to be emitted in any time window of duration `dueTime`, but it is also\n * a delay-like operator since output emissions do not occur at the same time as\n * they did on the source Observable. Optionally takes a {@link SchedulerLike} for\n * managing timers.\n *\n * ## Example\n *\n * Emit the most recent click after a burst of clicks\n *\n * ```ts\n * import { fromEvent, debounceTime } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const result = clicks.pipe(debounceTime(1000));\n * result.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link audit}\n * @see {@link auditTime}\n * @see {@link debounce}\n * @see {@link sample}\n * @see {@link sampleTime}\n * @see {@link throttle}\n * @see {@link throttleTime}\n *\n * @param {number} dueTime The timeout duration in milliseconds (or the time\n * unit determined internally by the optional `scheduler`) for the window of\n * time required to wait for emission silence before emitting the most recent\n * source value.\n * @param {SchedulerLike} [scheduler=async] The {@link SchedulerLike} to use for\n * managing the timers that handle the timeout for each value.\n * @return A function that returns an Observable that delays the emissions of\n * the source Observable by the specified `dueTime`, and may drop some values\n * if they occur too frequently.\n */\nexport function debounceTime<T>(dueTime: number, scheduler: SchedulerLike = asyncScheduler): MonoTypeOperatorFunction<T> {\n  return operate((source, subscriber) => {\n    let activeTask: Subscription | null = null;\n    let lastValue: T | null = null;\n    let lastTime: number | null = null;\n\n    const emit = () => {\n      if (activeTask) {\n        // We have a value! Free up memory first, then emit the value.\n        activeTask.unsubscribe();\n        activeTask = null;\n        const value = lastValue!;\n        lastValue = null;\n        subscriber.next(value);\n      }\n    };\n    function emitWhenIdle(this: SchedulerAction<unknown>) {\n      // This is called `dueTime` after the first value\n      // but we might have received new values during this window!\n\n      const targetTime = lastTime! + dueTime;\n      const now = scheduler.now();\n      if (now < targetTime) {\n        // On that case, re-schedule to the new target\n        activeTask = this.schedule(undefined, targetTime - now);\n        subscriber.add(activeTask);\n        return;\n      }\n\n      emit();\n    }\n\n    source.subscribe(\n      createOperatorSubscriber(\n        subscriber,\n        (value: T) => {\n          lastValue = value;\n          lastTime = scheduler.now();\n\n          // Only set up a task if it's not already up\n          if (!activeTask) {\n            activeTask = scheduler.schedule(emitWhenIdle, dueTime);\n            subscriber.add(activeTask);\n          }\n        },\n        () => {\n          // Source completed.\n          // Emit any pending debounced values then complete\n          emit();\n          subscriber.complete();\n        },\n        // Pass all errors through to consumer.\n        undefined,\n        () => {\n          // Finalization.\n          lastValue = activeTask = null;\n        }\n      )\n    );\n  });\n}\n","import { OperatorFunction } from '../types';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\n\n/**\n * Emits a given value if the source Observable completes without emitting any\n * `next` value, otherwise mirrors the source Observable.\n *\n * <span class=\"informal\">If the source Observable turns out to be empty, then\n * this operator will emit a default value.</span>\n *\n * ![](defaultIfEmpty.png)\n *\n * `defaultIfEmpty` emits the values emitted by the source Observable or a\n * specified default value if the source Observable is empty (completes without\n * having emitted any `next` value).\n *\n * ## Example\n *\n * If no clicks happen in 5 seconds, then emit 'no clicks'\n *\n * ```ts\n * import { fromEvent, takeUntil, interval, defaultIfEmpty } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const clicksBeforeFive = clicks.pipe(takeUntil(interval(5000)));\n * const result = clicksBeforeFive.pipe(defaultIfEmpty('no clicks'));\n * result.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link empty}\n * @see {@link last}\n *\n * @param defaultValue The default value used if the source\n * Observable is empty.\n * @return A function that returns an Observable that emits either the\n * specified `defaultValue` if the source Observable emits no items, or the\n * values emitted by the source Observable.\n */\nexport function defaultIfEmpty<T, R>(defaultValue: R): OperatorFunction<T, T | R> {\n  return operate((source, subscriber) => {\n    let hasValue = false;\n    source.subscribe(\n      createOperatorSubscriber(\n        subscriber,\n        (value) => {\n          hasValue = true;\n          subscriber.next(value);\n        },\n        () => {\n          if (!hasValue) {\n            subscriber.next(defaultValue!);\n          }\n          subscriber.complete();\n        }\n      )\n    );\n  });\n}\n","import { asyncScheduler } from '../scheduler/async';\nimport { MonoTypeOperatorFunction, SchedulerLike } from '../types';\nimport { delayWhen } from './delayWhen';\nimport { timer } from '../observable/timer';\n\n/**\n * Delays the emission of items from the source Observable by a given timeout or\n * until a given Date.\n *\n * <span class=\"informal\">Time shifts each item by some specified amount of\n * milliseconds.</span>\n *\n * ![](delay.svg)\n *\n * If the delay argument is a Number, this operator time shifts the source\n * Observable by that amount of time expressed in milliseconds. The relative\n * time intervals between the values are preserved.\n *\n * If the delay argument is a Date, this operator time shifts the start of the\n * Observable execution until the given date occurs.\n *\n * ## Examples\n *\n * Delay each click by one second\n *\n * ```ts\n * import { fromEvent, delay } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const delayedClicks = clicks.pipe(delay(1000)); // each click emitted after 1 second\n * delayedClicks.subscribe(x => console.log(x));\n * ```\n *\n * Delay all clicks until a future date happens\n *\n * ```ts\n * import { fromEvent, delay } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const date = new Date('March 15, 2050 12:00:00'); // in the future\n * const delayedClicks = clicks.pipe(delay(date)); // click emitted only after that date\n * delayedClicks.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link delayWhen}\n * @see {@link throttle}\n * @see {@link throttleTime}\n * @see {@link debounce}\n * @see {@link debounceTime}\n * @see {@link sample}\n * @see {@link sampleTime}\n * @see {@link audit}\n * @see {@link auditTime}\n *\n * @param {number|Date} due The delay duration in milliseconds (a `number`) or\n * a `Date` until which the emission of the source items is delayed.\n * @param {SchedulerLike} [scheduler=async] The {@link SchedulerLike} to use for\n * managing the timers that handle the time-shift for each item.\n * @return A function that returns an Observable that delays the emissions of\n * the source Observable by the specified timeout or Date.\n */\nexport function delay<T>(due: number | Date, scheduler: SchedulerLike = asyncScheduler): MonoTypeOperatorFunction<T> {\n  const duration = timer(due, scheduler);\n  return delayWhen(() => duration);\n}\n","import { Observable } from '../Observable';\nimport { MonoTypeOperatorFunction } from '../types';\nimport { concat } from '../observable/concat';\nimport { take } from './take';\nimport { ignoreElements } from './ignoreElements';\nimport { mapTo } from './mapTo';\nimport { mergeMap } from './mergeMap';\n\n/** @deprecated The `subscriptionDelay` parameter will be removed in v8. */\nexport function delayWhen<T>(\n  delayDurationSelector: (value: T, index: number) => Observable<any>,\n  subscriptionDelay: Observable<any>\n): MonoTypeOperatorFunction<T>;\nexport function delayWhen<T>(delayDurationSelector: (value: T, index: number) => Observable<any>): MonoTypeOperatorFunction<T>;\n\n/**\n * Delays the emission of items from the source Observable by a given time span\n * determined by the emissions of another Observable.\n *\n * <span class=\"informal\">It's like {@link delay}, but the time span of the\n * delay duration is determined by a second Observable.</span>\n *\n * ![](delayWhen.png)\n *\n * `delayWhen` time shifts each emitted value from the source Observable by a\n * time span determined by another Observable. When the source emits a value,\n * the `delayDurationSelector` function is called with the source value as\n * argument, and should return an Observable, called the \"duration\" Observable.\n * The source value is emitted on the output Observable only when the duration\n * Observable emits a value or completes.\n * The completion of the notifier triggering the emission of the source value\n * is deprecated behavior and will be removed in future versions.\n *\n * Optionally, `delayWhen` takes a second argument, `subscriptionDelay`, which\n * is an Observable. When `subscriptionDelay` emits its first value or\n * completes, the source Observable is subscribed to and starts behaving like\n * described in the previous paragraph. If `subscriptionDelay` is not provided,\n * `delayWhen` will subscribe to the source Observable as soon as the output\n * Observable is subscribed.\n *\n * ## Example\n *\n * Delay each click by a random amount of time, between 0 and 5 seconds\n *\n * ```ts\n * import { fromEvent, delayWhen, interval } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const delayedClicks = clicks.pipe(\n *   delayWhen(() => interval(Math.random() * 5000))\n * );\n * delayedClicks.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link delay}\n * @see {@link throttle}\n * @see {@link throttleTime}\n * @see {@link debounce}\n * @see {@link debounceTime}\n * @see {@link sample}\n * @see {@link sampleTime}\n * @see {@link audit}\n * @see {@link auditTime}\n *\n * @param {function(value: T, index: number): Observable} delayDurationSelector A function that\n * returns an Observable for each value emitted by the source Observable, which\n * is then used to delay the emission of that item on the output Observable\n * until the Observable returned from this function emits a value.\n * @param {Observable} subscriptionDelay An Observable that triggers the\n * subscription to the source Observable once it emits any value.\n * @return A function that returns an Observable that delays the emissions of\n * the source Observable by an amount of time specified by the Observable\n * returned by `delayDurationSelector`.\n */\nexport function delayWhen<T>(\n  delayDurationSelector: (value: T, index: number) => Observable<any>,\n  subscriptionDelay?: Observable<any>\n): MonoTypeOperatorFunction<T> {\n  if (subscriptionDelay) {\n    // DEPRECATED PATH\n    return (source: Observable<T>) =>\n      concat(subscriptionDelay.pipe(take(1), ignoreElements()), source.pipe(delayWhen(delayDurationSelector)));\n  }\n\n  return mergeMap((value, index) => delayDurationSelector(value, index).pipe(take(1), mapTo(value)));\n}\n","import { observeNotification } from '../Notification';\nimport { OperatorFunction, ObservableNotification, ValueFromNotification } from '../types';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\n\n/**\n * Converts an Observable of {@link ObservableNotification} objects into the emissions\n * that they represent.\n *\n * <span class=\"informal\">Unwraps {@link ObservableNotification} objects as actual `next`,\n * `error` and `complete` emissions. The opposite of {@link materialize}.</span>\n *\n * ![](dematerialize.png)\n *\n * `dematerialize` is assumed to operate an Observable that only emits\n * {@link ObservableNotification} objects as `next` emissions, and does not emit any\n * `error`. Such Observable is the output of a `materialize` operation. Those\n * notifications are then unwrapped using the metadata they contain, and emitted\n * as `next`, `error`, and `complete` on the output Observable.\n *\n * Use this operator in conjunction with {@link materialize}.\n *\n * ## Example\n *\n * Convert an Observable of Notifications to an actual Observable\n *\n * ```ts\n * import { NextNotification, ErrorNotification, of, dematerialize } from 'rxjs';\n *\n * const notifA: NextNotification<string> = { kind: 'N', value: 'A' };\n * const notifB: NextNotification<string> = { kind: 'N', value: 'B' };\n * const notifE: ErrorNotification = { kind: 'E', error: new TypeError('x.toUpperCase is not a function') };\n *\n * const materialized = of(notifA, notifB, notifE);\n *\n * const upperCase = materialized.pipe(dematerialize());\n * upperCase.subscribe({\n *   next: x => console.log(x),\n *   error: e => console.error(e)\n * });\n *\n * // Results in:\n * // A\n * // B\n * // TypeError: x.toUpperCase is not a function\n * ```\n *\n * @see {@link materialize}\n *\n * @return A function that returns an Observable that emits items and\n * notifications embedded in Notification objects emitted by the source\n * Observable.\n */\nexport function dematerialize<N extends ObservableNotification<any>>(): OperatorFunction<N, ValueFromNotification<N>> {\n  return operate((source, subscriber) => {\n    source.subscribe(createOperatorSubscriber(subscriber, (notification) => observeNotification(notification, subscriber)));\n  });\n}\n","import { Observable } from '../Observable';\nimport { MonoTypeOperatorFunction } from '../types';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nimport { noop } from '../util/noop';\n\n/**\n * Returns an Observable that emits all items emitted by the source Observable that are distinct by comparison from previous items.\n *\n * If a `keySelector` function is provided, then it will project each value from the source observable into a new value that it will\n * check for equality with previously projected values. If the `keySelector` function is not provided, it will use each value from the\n * source observable directly with an equality check against previous values.\n *\n * In JavaScript runtimes that support `Set`, this operator will use a `Set` to improve performance of the distinct value checking.\n *\n * In other runtimes, this operator will use a minimal implementation of `Set` that relies on an `Array` and `indexOf` under the\n * hood, so performance will degrade as more values are checked for distinction. Even in newer browsers, a long-running `distinct`\n * use might result in memory leaks. To help alleviate this in some scenarios, an optional `flushes` parameter is also provided so\n * that the internal `Set` can be \"flushed\", basically clearing it of values.\n *\n * ## Examples\n *\n * A simple example with numbers\n *\n * ```ts\n * import { of, distinct } from 'rxjs';\n *\n * of(1, 1, 2, 2, 2, 1, 2, 3, 4, 3, 2, 1)\n *   .pipe(distinct())\n *   .subscribe(x => console.log(x));\n *\n * // Outputs\n * // 1\n * // 2\n * // 3\n * // 4\n * ```\n *\n * An example using the `keySelector` function\n *\n * ```ts\n * import { of, distinct } from 'rxjs';\n *\n * of(\n *   { age: 4, name: 'Foo'},\n *   { age: 7, name: 'Bar'},\n *   { age: 5, name: 'Foo'}\n * )\n * .pipe(distinct(({ name }) => name))\n * .subscribe(x => console.log(x));\n *\n * // Outputs\n * // { age: 4, name: 'Foo' }\n * // { age: 7, name: 'Bar' }\n * ```\n * @see {@link distinctUntilChanged}\n * @see {@link distinctUntilKeyChanged}\n *\n * @param {function} [keySelector] Optional function to select which value you want to check as distinct.\n * @param {Observable} [flushes] Optional Observable for flushing the internal HashSet of the operator.\n * @return A function that returns an Observable that emits items from the\n * source Observable with distinct values.\n */\nexport function distinct<T, K>(keySelector?: (value: T) => K, flushes?: Observable<any>): MonoTypeOperatorFunction<T> {\n  return operate((source, subscriber) => {\n    const distinctKeys = new Set();\n    source.subscribe(\n      createOperatorSubscriber(subscriber, (value) => {\n        const key = keySelector ? keySelector(value) : value;\n        if (!distinctKeys.has(key)) {\n          distinctKeys.add(key);\n          subscriber.next(value);\n        }\n      })\n    );\n\n    flushes?.subscribe(createOperatorSubscriber(subscriber, () => distinctKeys.clear(), noop));\n  });\n}\n","import { MonoTypeOperatorFunction } from '../types';\nimport { identity } from '../util/identity';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\n\nexport function distinctUntilChanged<T>(comparator?: (previous: T, current: T) => boolean): MonoTypeOperatorFunction<T>;\nexport function distinctUntilChanged<T, K>(\n  comparator: (previous: K, current: K) => boolean,\n  keySelector: (value: T) => K\n): MonoTypeOperatorFunction<T>;\n\n/**\n * Returns a result {@link Observable} that emits all values pushed by the source observable if they\n * are distinct in comparison to the last value the result observable emitted.\n *\n * When provided without parameters or with the first parameter (`{@link distinctUntilChanged#comparator comparator}`),\n * it behaves like this:\n *\n * 1. It will always emit the first value from the source.\n * 2. For all subsequent values pushed by the source, they will be compared to the previously emitted values\n *    using the provided `comparator` or an `===` equality check.\n * 3. If the value pushed by the source is determined to be unequal by this check, that value is emitted and\n *    becomes the new \"previously emitted value\" internally.\n *\n * When the second parameter (`{@link distinctUntilChanged#keySelector keySelector}`) is provided, the behavior\n * changes:\n *\n * 1. It will always emit the first value from the source.\n * 2. The `keySelector` will be run against all values, including the first value.\n * 3. For all values after the first, the selected key will be compared against the key selected from\n *    the previously emitted value using the `comparator`.\n * 4. If the keys are determined to be unequal by this check, the value (not the key), is emitted\n *    and the selected key from that value is saved for future comparisons against other keys.\n *\n * ## Examples\n *\n * A very basic example with no `{@link distinctUntilChanged#comparator comparator}`. Note that `1` is emitted more than once,\n * because it's distinct in comparison to the _previously emitted_ value,\n * not in comparison to _all other emitted values_.\n *\n * ```ts\n * import { of, distinctUntilChanged } from 'rxjs';\n *\n * of(1, 1, 1, 2, 2, 2, 1, 1, 3, 3)\n *   .pipe(distinctUntilChanged())\n *   .subscribe(console.log);\n * // Logs: 1, 2, 1, 3\n * ```\n *\n * With a `{@link distinctUntilChanged#comparator comparator}`, you can do custom comparisons. Let's say\n * you only want to emit a value when all of its components have\n * changed:\n *\n * ```ts\n * import { of, distinctUntilChanged } from 'rxjs';\n *\n * const totallyDifferentBuilds$ = of(\n *   { engineVersion: '1.1.0', transmissionVersion: '1.2.0' },\n *   { engineVersion: '1.1.0', transmissionVersion: '1.4.0' },\n *   { engineVersion: '1.3.0', transmissionVersion: '1.4.0' },\n *   { engineVersion: '1.3.0', transmissionVersion: '1.5.0' },\n *   { engineVersion: '2.0.0', transmissionVersion: '1.5.0' }\n * ).pipe(\n *   distinctUntilChanged((prev, curr) => {\n *     return (\n *       prev.engineVersion === curr.engineVersion ||\n *       prev.transmissionVersion === curr.transmissionVersion\n *     );\n *   })\n * );\n *\n * totallyDifferentBuilds$.subscribe(console.log);\n *\n * // Logs:\n * // { engineVersion: '1.1.0', transmissionVersion: '1.2.0' }\n * // { engineVersion: '1.3.0', transmissionVersion: '1.4.0' }\n * // { engineVersion: '2.0.0', transmissionVersion: '1.5.0' }\n * ```\n *\n * You can also provide a custom `{@link distinctUntilChanged#comparator comparator}` to check that emitted\n * changes are only in one direction. Let's say you only want to get\n * the next record temperature:\n *\n * ```ts\n * import { of, distinctUntilChanged } from 'rxjs';\n *\n * const temps$ = of(30, 31, 20, 34, 33, 29, 35, 20);\n *\n * const recordHighs$ = temps$.pipe(\n *   distinctUntilChanged((prevHigh, temp) => {\n *     // If the current temp is less than\n *     // or the same as the previous record,\n *     // the record hasn't changed.\n *     return temp <= prevHigh;\n *   })\n * );\n *\n * recordHighs$.subscribe(console.log);\n * // Logs: 30, 31, 34, 35\n * ```\n *\n * Selecting update events only when the `updatedBy` field shows\n * the account changed hands.\n *\n * ```ts\n * import { of, distinctUntilChanged } from 'rxjs';\n *\n * // A stream of updates to a given account\n * const accountUpdates$ = of(\n *   { updatedBy: 'blesh', data: [] },\n *   { updatedBy: 'blesh', data: [] },\n *   { updatedBy: 'ncjamieson', data: [] },\n *   { updatedBy: 'ncjamieson', data: [] },\n *   { updatedBy: 'blesh', data: [] }\n * );\n *\n * // We only want the events where it changed hands\n * const changedHands$ = accountUpdates$.pipe(\n *   distinctUntilChanged(undefined, update => update.updatedBy)\n * );\n *\n * changedHands$.subscribe(console.log);\n * // Logs:\n * // { updatedBy: 'blesh', data: Array[0] }\n * // { updatedBy: 'ncjamieson', data: Array[0] }\n * // { updatedBy: 'blesh', data: Array[0] }\n * ```\n *\n * @see {@link distinct}\n * @see {@link distinctUntilKeyChanged}\n *\n * @param comparator A function used to compare the previous and current keys for\n * equality. Defaults to a `===` check.\n * @param keySelector Used to select a key value to be passed to the `comparator`.\n *\n * @return A function that returns an Observable that emits items from the\n * source Observable with distinct values.\n */\nexport function distinctUntilChanged<T, K>(\n  comparator?: (previous: K, current: K) => boolean,\n  keySelector: (value: T) => K = identity as (value: T) => K\n): MonoTypeOperatorFunction<T> {\n  // We've been allowing `null` do be passed as the `compare`, so we can't do\n  // a default value for the parameter, because that will only work\n  // for `undefined`.\n  comparator = comparator ?? defaultCompare;\n\n  return operate((source, subscriber) => {\n    // The previous key, used to compare against keys selected\n    // from new arrivals to determine \"distinctiveness\".\n    let previousKey: K;\n    // Whether or not this is the first value we've gotten.\n    let first = true;\n\n    source.subscribe(\n      createOperatorSubscriber(subscriber, (value) => {\n        // We always call the key selector.\n        const currentKey = keySelector(value);\n\n        // If it's the first value, we always emit it.\n        // Otherwise, we compare this key to the previous key, and\n        // if the comparer returns false, we emit.\n        if (first || !comparator!(previousKey, currentKey)) {\n          // Update our state *before* we emit the value\n          // as emission can be the source of re-entrant code\n          // in functional libraries like this. We only really\n          // need to do this if it's the first value, or if the\n          // key we're tracking in previous needs to change.\n          first = false;\n          previousKey = currentKey;\n\n          // Emit the value!\n          subscriber.next(value);\n        }\n      })\n    );\n  });\n}\n\nfunction defaultCompare(a: any, b: any) {\n  return a === b;\n}\n","import { distinctUntilChanged } from './distinctUntilChanged';\nimport { MonoTypeOperatorFunction } from '../types';\n\n/* tslint:disable:max-line-length */\nexport function distinctUntilKeyChanged<T>(key: keyof T): MonoTypeOperatorFunction<T>;\nexport function distinctUntilKeyChanged<T, K extends keyof T>(key: K, compare: (x: T[K], y: T[K]) => boolean): MonoTypeOperatorFunction<T>;\n/* tslint:enable:max-line-length */\n\n/**\n * Returns an Observable that emits all items emitted by the source Observable that are distinct by comparison from the previous item,\n * using a property accessed by using the key provided to check if the two items are distinct.\n *\n * If a comparator function is provided, then it will be called for each item to test for whether or not that value should be emitted.\n *\n * If a comparator function is not provided, an equality check is used by default.\n *\n * ## Examples\n *\n * An example comparing the name of persons\n *\n * ```ts\n * import { of, distinctUntilKeyChanged } from 'rxjs';\n *\n * of(\n *   { age: 4, name: 'Foo' },\n *   { age: 7, name: 'Bar' },\n *   { age: 5, name: 'Foo' },\n *   { age: 6, name: 'Foo' }\n * ).pipe(\n *   distinctUntilKeyChanged('name')\n * )\n * .subscribe(x => console.log(x));\n *\n * // displays:\n * // { age: 4, name: 'Foo' }\n * // { age: 7, name: 'Bar' }\n * // { age: 5, name: 'Foo' }\n * ```\n *\n * An example comparing the first letters of the name\n *\n * ```ts\n * import { of, distinctUntilKeyChanged } from 'rxjs';\n *\n * of(\n *   { age: 4, name: 'Foo1' },\n *   { age: 7, name: 'Bar' },\n *   { age: 5, name: 'Foo2' },\n *   { age: 6, name: 'Foo3' }\n * ).pipe(\n *   distinctUntilKeyChanged('name', (x, y) => x.substring(0, 3) === y.substring(0, 3))\n * )\n * .subscribe(x => console.log(x));\n *\n * // displays:\n * // { age: 4, name: 'Foo1' }\n * // { age: 7, name: 'Bar' }\n * // { age: 5, name: 'Foo2' }\n * ```\n *\n * @see {@link distinct}\n * @see {@link distinctUntilChanged}\n *\n * @param {string} key String key for object property lookup on each item.\n * @param {function} [compare] Optional comparison function called to test if an item is distinct from the previous item in the source.\n * @return A function that returns an Observable that emits items from the\n * source Observable with distinct values based on the key specified.\n */\nexport function distinctUntilKeyChanged<T, K extends keyof T>(key: K, compare?: (x: T[K], y: T[K]) => boolean): MonoTypeOperatorFunction<T> {\n  return distinctUntilChanged((x: T, y: T) => compare ? compare(x[key], y[key]) : x[key] === y[key]);\n}\n","import { ArgumentOutOfRangeError } from '../util/ArgumentOutOfRangeError';\nimport { Observable } from '../Observable';\nimport { OperatorFunction } from '../types';\nimport { filter } from './filter';\nimport { throwIfEmpty } from './throwIfEmpty';\nimport { defaultIfEmpty } from './defaultIfEmpty';\nimport { take } from './take';\n\n/**\n * Emits the single value at the specified `index` in a sequence of emissions\n * from the source Observable.\n *\n * <span class=\"informal\">Emits only the i-th value, then completes.</span>\n *\n * ![](elementAt.png)\n *\n * `elementAt` returns an Observable that emits the item at the specified\n * `index` in the source Observable, or a default value if that `index` is out\n * of range and the `default` argument is provided. If the `default` argument is\n * not given and the `index` is out of range, the output Observable will emit an\n * `ArgumentOutOfRangeError` error.\n *\n * ## Example\n *\n * Emit only the third click event\n *\n * ```ts\n * import { fromEvent, elementAt } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const result = clicks.pipe(elementAt(2));\n * result.subscribe(x => console.log(x));\n *\n * // Results in:\n * // click 1 = nothing\n * // click 2 = nothing\n * // click 3 = MouseEvent object logged to console\n * ```\n *\n * @see {@link first}\n * @see {@link last}\n * @see {@link skip}\n * @see {@link single}\n * @see {@link take}\n *\n * @throws {ArgumentOutOfRangeError} When using `elementAt(i)`, it delivers an\n * ArgumentOutOfRangeError to the Observer's `error` callback if `i < 0` or the\n * Observable has completed before emitting the i-th `next` notification.\n *\n * @param {number} index Is the number `i` for the i-th source emission that has\n * happened since the subscription, starting from the number `0`.\n * @param {T} [defaultValue] The default value returned for missing indices.\n * @return A function that returns an Observable that emits a single item, if\n * it is found. Otherwise, it will emit the default value if given. If not, it\n * emits an error.\n */\nexport function elementAt<T, D = T>(index: number, defaultValue?: D): OperatorFunction<T, T | D> {\n  if (index < 0) {\n    throw new ArgumentOutOfRangeError();\n  }\n  const hasDefaultValue = arguments.length >= 2;\n  return (source: Observable<T>) =>\n    source.pipe(\n      filter((v, i) => i === index),\n      take(1),\n      hasDefaultValue ? defaultIfEmpty(defaultValue!) : throwIfEmpty(() => new ArgumentOutOfRangeError())\n    );\n}\n","/** prettier */\nimport { Observable } from '../Observable';\nimport { concat } from '../observable/concat';\nimport { of } from '../observable/of';\nimport { MonoTypeOperatorFunction, SchedulerLike, OperatorFunction, ValueFromArray } from '../types';\n\n/** @deprecated The `scheduler` parameter will be removed in v8. Use `scheduled` and `concatAll`. Details: https://rxjs.dev/deprecations/scheduler-argument */\nexport function endWith<T>(scheduler: SchedulerLike): MonoTypeOperatorFunction<T>;\n/** @deprecated The `scheduler` parameter will be removed in v8. Use `scheduled` and `concatAll`. Details: https://rxjs.dev/deprecations/scheduler-argument */\nexport function endWith<T, A extends unknown[] = T[]>(\n  ...valuesAndScheduler: [...A, SchedulerLike]\n): OperatorFunction<T, T | ValueFromArray<A>>;\n\nexport function endWith<T, A extends unknown[] = T[]>(...values: A): OperatorFunction<T, T | ValueFromArray<A>>;\n\n/**\n * Returns an observable that will emit all values from the source, then synchronously emit\n * the provided value(s) immediately after the source completes.\n *\n * NOTE: Passing a last argument of a Scheduler is _deprecated_, and may result in incorrect\n * types in TypeScript.\n *\n * This is useful for knowing when an observable ends. Particularly when paired with an\n * operator like {@link takeUntil}\n *\n * ![](endWith.png)\n *\n * ## Example\n *\n * Emit values to know when an interval starts and stops. The interval will\n * stop when a user clicks anywhere on the document.\n *\n * ```ts\n * import { interval, map, fromEvent, startWith, takeUntil, endWith } from 'rxjs';\n *\n * const ticker$ = interval(5000).pipe(\n *   map(() => 'tick')\n * );\n *\n * const documentClicks$ = fromEvent(document, 'click');\n *\n * ticker$.pipe(\n *   startWith('interval started'),\n *   takeUntil(documentClicks$),\n *   endWith('interval ended by click')\n * )\n * .subscribe(x => console.log(x));\n *\n * // Result (assuming a user clicks after 15 seconds)\n * // 'interval started'\n * // 'tick'\n * // 'tick'\n * // 'tick'\n * // 'interval ended by click'\n * ```\n *\n * @see {@link startWith}\n * @see {@link concat}\n * @see {@link takeUntil}\n *\n * @param values Items you want the modified Observable to emit last.\n * @return A function that returns an Observable that emits all values from the\n * source, then synchronously emits the provided value(s) immediately after the\n * source completes.\n */\nexport function endWith<T>(...values: Array<T | SchedulerLike>): MonoTypeOperatorFunction<T> {\n  return (source: Observable<T>) => concat(source, of(...values)) as Observable<T>;\n}\n","import { Observable } from '../Observable';\nimport { Falsy, OperatorFunction } from '../types';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\n\nexport function every<T>(predicate: BooleanConstructor): OperatorFunction<T, Exclude<T, Falsy> extends never ? false : boolean>;\n/** @deprecated Use a closure instead of a `thisArg`. Signatures accepting a `thisArg` will be removed in v8. */\nexport function every<T>(\n  predicate: BooleanConstructor,\n  thisArg: any\n): OperatorFunction<T, Exclude<T, Falsy> extends never ? false : boolean>;\n/** @deprecated Use a closure instead of a `thisArg`. Signatures accepting a `thisArg` will be removed in v8. */\nexport function every<T, A>(\n  predicate: (this: A, value: T, index: number, source: Observable<T>) => boolean,\n  thisArg: A\n): OperatorFunction<T, boolean>;\nexport function every<T>(predicate: (value: T, index: number, source: Observable<T>) => boolean): OperatorFunction<T, boolean>;\n\n/**\n * Returns an Observable that emits whether or not every item of the source satisfies the condition specified.\n *\n * <span class=\"informal\">If all values pass predicate before the source completes, emits true before completion,\n * otherwise emit false, then complete.</span>\n *\n * ![](every.png)\n *\n * ## Example\n *\n * A simple example emitting true if all elements are less than 5, false otherwise\n *\n * ```ts\n * import { of, every } from 'rxjs';\n *\n * of(1, 2, 3, 4, 5, 6)\n *   .pipe(every(x => x < 5))\n *   .subscribe(x => console.log(x)); // -> false\n * ```\n *\n * @param {function} predicate A function for determining if an item meets a specified condition.\n * @param {any} [thisArg] Optional object to use for `this` in the callback.\n * @return A function that returns an Observable of booleans that determines if\n * all items of the source Observable meet the condition specified.\n */\nexport function every<T>(\n  predicate: (value: T, index: number, source: Observable<T>) => boolean,\n  thisArg?: any\n): OperatorFunction<T, boolean> {\n  return operate((source, subscriber) => {\n    let index = 0;\n    source.subscribe(\n      createOperatorSubscriber(\n        subscriber,\n        (value) => {\n          if (!predicate.call(thisArg, value, index++, source)) {\n            subscriber.next(false);\n            subscriber.complete();\n          }\n        },\n        () => {\n          subscriber.next(true);\n          subscriber.complete();\n        }\n      )\n    );\n  });\n}\n","import { exhaustAll } from './exhaustAll';\n\n/**\n * @deprecated Renamed to {@link exhaustAll}. Will be removed in v8.\n */\nexport const exhaust = exhaustAll;\n","import { OperatorFunction, ObservableInput, ObservedValueOf } from '../types';\nimport { exhaustMap } from './exhaustMap';\nimport { identity } from '../util/identity';\n\n/**\n * Converts a higher-order Observable into a first-order Observable by dropping\n * inner Observables while the previous inner Observable has not yet completed.\n *\n * <span class=\"informal\">Flattens an Observable-of-Observables by dropping the\n * next inner Observables while the current inner is still executing.</span>\n *\n * ![](exhaust.png)\n *\n * `exhaustAll` subscribes to an Observable that emits Observables, also known as a\n * higher-order Observable. Each time it observes one of these emitted inner\n * Observables, the output Observable begins emitting the items emitted by that\n * inner Observable. So far, it behaves like {@link mergeAll}. However,\n * `exhaustAll` ignores every new inner Observable if the previous Observable has\n * not yet completed. Once that one completes, it will accept and flatten the\n * next inner Observable and repeat this process.\n *\n * ## Example\n *\n * Run a finite timer for each click, only if there is no currently active timer\n *\n * ```ts\n * import { fromEvent, map, interval, take, exhaustAll } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const higherOrder = clicks.pipe(\n *   map(() => interval(1000).pipe(take(5)))\n * );\n * const result = higherOrder.pipe(exhaustAll());\n * result.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link combineLatestAll}\n * @see {@link concatAll}\n * @see {@link switchAll}\n * @see {@link switchMap}\n * @see {@link mergeAll}\n * @see {@link exhaustMap}\n * @see {@link zipAll}\n *\n * @return A function that returns an Observable that takes a source of\n * Observables and propagates the first Observable exclusively until it\n * completes before subscribing to the next.\n */\nexport function exhaustAll<O extends ObservableInput<any>>(): OperatorFunction<O, ObservedValueOf<O>> {\n  return exhaustMap(identity);\n}\n","import { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { ObservableInput, OperatorFunction, ObservedValueOf } from '../types';\nimport { map } from './map';\nimport { innerFrom } from '../observable/innerFrom';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\n\n/* tslint:disable:max-line-length */\nexport function exhaustMap<T, O extends ObservableInput<any>>(\n  project: (value: T, index: number) => O\n): OperatorFunction<T, ObservedValueOf<O>>;\n/** @deprecated The `resultSelector` parameter will be removed in v8. Use an inner `map` instead. Details: https://rxjs.dev/deprecations/resultSelector */\nexport function exhaustMap<T, O extends ObservableInput<any>>(\n  project: (value: T, index: number) => O,\n  resultSelector: undefined\n): OperatorFunction<T, ObservedValueOf<O>>;\n/** @deprecated The `resultSelector` parameter will be removed in v8. Use an inner `map` instead. Details: https://rxjs.dev/deprecations/resultSelector */\nexport function exhaustMap<T, I, R>(\n  project: (value: T, index: number) => ObservableInput<I>,\n  resultSelector: (outerValue: T, innerValue: I, outerIndex: number, innerIndex: number) => R\n): OperatorFunction<T, R>;\n/* tslint:enable:max-line-length */\n\n/**\n * Projects each source value to an Observable which is merged in the output\n * Observable only if the previous projected Observable has completed.\n *\n * <span class=\"informal\">Maps each value to an Observable, then flattens all of\n * these inner Observables using {@link exhaust}.</span>\n *\n * ![](exhaustMap.png)\n *\n * Returns an Observable that emits items based on applying a function that you\n * supply to each item emitted by the source Observable, where that function\n * returns an (so-called \"inner\") Observable. When it projects a source value to\n * an Observable, the output Observable begins emitting the items emitted by\n * that projected Observable. However, `exhaustMap` ignores every new projected\n * Observable if the previous projected Observable has not yet completed. Once\n * that one completes, it will accept and flatten the next projected Observable\n * and repeat this process.\n *\n * ## Example\n *\n * Run a finite timer for each click, only if there is no currently active timer\n *\n * ```ts\n * import { fromEvent, exhaustMap, interval, take } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const result = clicks.pipe(\n *   exhaustMap(() => interval(1000).pipe(take(5)))\n * );\n * result.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link concatMap}\n * @see {@link exhaust}\n * @see {@link mergeMap}\n * @see {@link switchMap}\n *\n * @param {function(value: T, ?index: number): ObservableInput} project A function\n * that, when applied to an item emitted by the source Observable, returns an\n * Observable.\n * @return A function that returns an Observable containing projected\n * Observables of each item of the source, ignoring projected Observables that\n * start before their preceding Observable has completed.\n */\nexport function exhaustMap<T, R, O extends ObservableInput<any>>(\n  project: (value: T, index: number) => O,\n  resultSelector?: (outerValue: T, innerValue: ObservedValueOf<O>, outerIndex: number, innerIndex: number) => R\n): OperatorFunction<T, ObservedValueOf<O> | R> {\n  if (resultSelector) {\n    // DEPRECATED PATH\n    return (source: Observable<T>) =>\n      source.pipe(exhaustMap((a, i) => innerFrom(project(a, i)).pipe(map((b: any, ii: any) => resultSelector(a, b, i, ii)))));\n  }\n  return operate((source, subscriber) => {\n    let index = 0;\n    let innerSub: Subscriber<T> | null = null;\n    let isComplete = false;\n    source.subscribe(\n      createOperatorSubscriber(\n        subscriber,\n        (outerValue) => {\n          if (!innerSub) {\n            innerSub = createOperatorSubscriber(subscriber, undefined, () => {\n              innerSub = null;\n              isComplete && subscriber.complete();\n            });\n            innerFrom(project(outerValue, index++)).subscribe(innerSub);\n          }\n        },\n        () => {\n          isComplete = true;\n          !innerSub && subscriber.complete();\n        }\n      )\n    );\n  });\n}\n","import { OperatorFunction, ObservableInput, ObservedValueOf, SchedulerLike } from '../types';\nimport { operate } from '../util/lift';\nimport { mergeInternals } from './mergeInternals';\n\n/* tslint:disable:max-line-length */\nexport function expand<T, O extends ObservableInput<unknown>>(\n  project: (value: T, index: number) => O,\n  concurrent?: number,\n  scheduler?: SchedulerLike\n): OperatorFunction<T, ObservedValueOf<O>>;\n/**\n * @deprecated The `scheduler` parameter will be removed in v8. If you need to schedule the inner subscription,\n * use `subscribeOn` within the projection function: `expand((value) => fn(value).pipe(subscribeOn(scheduler)))`.\n * Details: Details: https://rxjs.dev/deprecations/scheduler-argument\n */\nexport function expand<T, O extends ObservableInput<unknown>>(\n  project: (value: T, index: number) => O,\n  concurrent: number | undefined,\n  scheduler: SchedulerLike\n): OperatorFunction<T, ObservedValueOf<O>>;\n/* tslint:enable:max-line-length */\n\n/**\n * Recursively projects each source value to an Observable which is merged in\n * the output Observable.\n *\n * <span class=\"informal\">It's similar to {@link mergeMap}, but applies the\n * projection function to every source value as well as every output value.\n * It's recursive.</span>\n *\n * ![](expand.png)\n *\n * Returns an Observable that emits items based on applying a function that you\n * supply to each item emitted by the source Observable, where that function\n * returns an Observable, and then merging those resulting Observables and\n * emitting the results of this merger. *Expand* will re-emit on the output\n * Observable every source value. Then, each output value is given to the\n * `project` function which returns an inner Observable to be merged on the\n * output Observable. Those output values resulting from the projection are also\n * given to the `project` function to produce new output values. This is how\n * *expand* behaves recursively.\n *\n * ## Example\n *\n * Start emitting the powers of two on every click, at most 10 of them\n *\n * ```ts\n * import { fromEvent, map, expand, of, delay, take } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const powersOfTwo = clicks.pipe(\n *   map(() => 1),\n *   expand(x => of(2 * x).pipe(delay(1000))),\n *   take(10)\n * );\n * powersOfTwo.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link mergeMap}\n * @see {@link mergeScan}\n *\n * @param {function(value: T, index: number) => Observable} project A function\n * that, when applied to an item emitted by the source or the output Observable,\n * returns an Observable.\n * @param {number} [concurrent=Infinity] Maximum number of input\n * Observables being subscribed to concurrently.\n * @param {SchedulerLike} [scheduler=null] The {@link SchedulerLike} to use for subscribing to\n * each projected inner Observable.\n * @return A function that returns an Observable that emits the source values\n * and also result of applying the projection function to each value emitted on\n * the output Observable and merging the results of the Observables obtained\n * from this transformation.\n */\nexport function expand<T, O extends ObservableInput<unknown>>(\n  project: (value: T, index: number) => O,\n  concurrent = Infinity,\n  scheduler?: SchedulerLike\n): OperatorFunction<T, ObservedValueOf<O>> {\n  concurrent = (concurrent || 0) < 1 ? Infinity : concurrent;\n  return operate((source, subscriber) =>\n    mergeInternals(\n      // General merge params\n      source,\n      subscriber,\n      project,\n      concurrent,\n\n      // onBeforeNext\n      undefined,\n\n      // Expand-specific\n      true, // Use expand path\n      scheduler // Inner subscription scheduler\n    )\n  );\n}\n","import { OperatorFunction, MonoTypeOperatorFunction, TruthyTypesOf } from '../types';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\n\n/** @deprecated Use a closure instead of a `thisArg`. Signatures accepting a `thisArg` will be removed in v8. */\nexport function filter<T, S extends T, A>(predicate: (this: A, value: T, index: number) => value is S, thisArg: A): OperatorFunction<T, S>;\nexport function filter<T, S extends T>(predicate: (value: T, index: number) => value is S): OperatorFunction<T, S>;\nexport function filter<T>(predicate: BooleanConstructor): OperatorFunction<T, TruthyTypesOf<T>>;\n/** @deprecated Use a closure instead of a `thisArg`. Signatures accepting a `thisArg` will be removed in v8. */\nexport function filter<T, A>(predicate: (this: A, value: T, index: number) => boolean, thisArg: A): MonoTypeOperatorFunction<T>;\nexport function filter<T>(predicate: (value: T, index: number) => boolean): MonoTypeOperatorFunction<T>;\n\n/**\n * Filter items emitted by the source Observable by only emitting those that\n * satisfy a specified predicate.\n *\n * <span class=\"informal\">Like\n * [Array.prototype.filter()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter),\n * it only emits a value from the source if it passes a criterion function.</span>\n *\n * ![](filter.png)\n *\n * Similar to the well-known `Array.prototype.filter` method, this operator\n * takes values from the source Observable, passes them through a `predicate`\n * function and only emits those values that yielded `true`.\n *\n * ## Example\n *\n * Emit only click events whose target was a DIV element\n *\n * ```ts\n * import { fromEvent, filter } from 'rxjs';\n *\n * const div = document.createElement('div');\n * div.style.cssText = 'width: 200px; height: 200px; background: #09c;';\n * document.body.appendChild(div);\n *\n * const clicks = fromEvent(document, 'click');\n * const clicksOnDivs = clicks.pipe(filter(ev => (<HTMLElement>ev.target).tagName === 'DIV'));\n * clicksOnDivs.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link distinct}\n * @see {@link distinctUntilChanged}\n * @see {@link distinctUntilKeyChanged}\n * @see {@link ignoreElements}\n * @see {@link partition}\n * @see {@link skip}\n *\n * @param predicate A function that\n * evaluates each value emitted by the source Observable. If it returns `true`,\n * the value is emitted, if `false` the value is not passed to the output\n * Observable. The `index` parameter is the number `i` for the i-th source\n * emission that has happened since the subscription, starting from the number\n * `0`.\n * @param thisArg An optional argument to determine the value of `this`\n * in the `predicate` function.\n * @return A function that returns an Observable that emits items from the\n * source Observable that satisfy the specified `predicate`.\n */\nexport function filter<T>(predicate: (value: T, index: number) => boolean, thisArg?: any): MonoTypeOperatorFunction<T> {\n  return operate((source, subscriber) => {\n    // An index passed to our predicate function on each call.\n    let index = 0;\n\n    // Subscribe to the source, all errors and completions are\n    // forwarded to the consumer.\n    source.subscribe(\n      // Call the predicate with the appropriate `this` context,\n      // if the predicate returns `true`, then send the value\n      // to the consumer.\n      createOperatorSubscriber(subscriber, (value) => predicate.call(thisArg, value, index++) && subscriber.next(value))\n    );\n  });\n}\n","import { MonoTypeOperatorFunction } from '../types';\nimport { operate } from '../util/lift';\n\n/**\n * Returns an Observable that mirrors the source Observable, but will call a specified function when\n * the source terminates on complete or error.\n * The specified function will also be called when the subscriber explicitly unsubscribes.\n *\n * ## Examples\n *\n * Execute callback function when the observable completes\n *\n * ```ts\n * import { interval, take, finalize } from 'rxjs';\n *\n * // emit value in sequence every 1 second\n * const source = interval(1000);\n * const example = source.pipe(\n *   take(5), //take only the first 5 values\n *   finalize(() => console.log('Sequence complete')) // Execute when the observable completes\n * );\n * const subscribe = example.subscribe(val => console.log(val));\n *\n * // results:\n * // 0\n * // 1\n * // 2\n * // 3\n * // 4\n * // 'Sequence complete'\n * ```\n *\n * Execute callback function when the subscriber explicitly unsubscribes\n *\n * ```ts\n * import { interval, finalize, tap, noop, timer } from 'rxjs';\n *\n * const source = interval(100).pipe(\n *   finalize(() => console.log('[finalize] Called')),\n *   tap({\n *     next: () => console.log('[next] Called'),\n *     error: () => console.log('[error] Not called'),\n *     complete: () => console.log('[tap complete] Not called')\n *   })\n * );\n *\n * const sub = source.subscribe({\n *   next: x => console.log(x),\n *   error: noop,\n *   complete: () => console.log('[complete] Not called')\n * });\n *\n * timer(150).subscribe(() => sub.unsubscribe());\n *\n * // results:\n * // '[next] Called'\n * // 0\n * // '[finalize] Called'\n * ```\n *\n * @param {function} callback Function to be called when source terminates.\n * @return A function that returns an Observable that mirrors the source, but\n * will call the specified function on termination.\n */\nexport function finalize<T>(callback: () => void): MonoTypeOperatorFunction<T> {\n  return operate((source, subscriber) => {\n    // TODO: This try/finally was only added for `useDeprecatedSynchronousErrorHandling`.\n    // REMOVE THIS WHEN THAT HOT GARBAGE IS REMOVED IN V8.\n    try {\n      source.subscribe(subscriber);\n    } finally {\n      subscriber.add(callback);\n    }\n  });\n}\n","import { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { OperatorFunction, TruthyTypesOf } from '../types';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\n\nexport function find<T>(predicate: BooleanConstructor): OperatorFunction<T, TruthyTypesOf<T>>;\n/** @deprecated Use a closure instead of a `thisArg`. Signatures accepting a `thisArg` will be removed in v8. */\nexport function find<T, S extends T, A>(\n  predicate: (this: A, value: T, index: number, source: Observable<T>) => value is S,\n  thisArg: A\n): OperatorFunction<T, S | undefined>;\nexport function find<T, S extends T>(\n  predicate: (value: T, index: number, source: Observable<T>) => value is S\n): OperatorFunction<T, S | undefined>;\n/** @deprecated Use a closure instead of a `thisArg`. Signatures accepting a `thisArg` will be removed in v8. */\nexport function find<T, A>(\n  predicate: (this: A, value: T, index: number, source: Observable<T>) => boolean,\n  thisArg: A\n): OperatorFunction<T, T | undefined>;\nexport function find<T>(predicate: (value: T, index: number, source: Observable<T>) => boolean): OperatorFunction<T, T | undefined>;\n/**\n * Emits only the first value emitted by the source Observable that meets some\n * condition.\n *\n * <span class=\"informal\">Finds the first value that passes some test and emits\n * that.</span>\n *\n * ![](find.png)\n *\n * `find` searches for the first item in the source Observable that matches the\n * specified condition embodied by the `predicate`, and returns the first\n * occurrence in the source. Unlike {@link first}, the `predicate` is required\n * in `find`, and does not emit an error if a valid value is not found\n * (emits `undefined` instead).\n *\n * ## Example\n *\n * Find and emit the first click that happens on a DIV element\n *\n * ```ts\n * import { fromEvent, find } from 'rxjs';\n *\n * const div = document.createElement('div');\n * div.style.cssText = 'width: 200px; height: 200px; background: #09c;';\n * document.body.appendChild(div);\n *\n * const clicks = fromEvent(document, 'click');\n * const result = clicks.pipe(find(ev => (<HTMLElement>ev.target).tagName === 'DIV'));\n * result.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link filter}\n * @see {@link first}\n * @see {@link findIndex}\n * @see {@link take}\n *\n * @param {function(value: T, index: number, source: Observable<T>): boolean} predicate\n * A function called with each item to test for condition matching.\n * @param {any} [thisArg] An optional argument to determine the value of `this`\n * in the `predicate` function.\n * @return A function that returns an Observable that emits the first item that\n * matches the condition.\n */\nexport function find<T>(\n  predicate: (value: T, index: number, source: Observable<T>) => boolean,\n  thisArg?: any\n): OperatorFunction<T, T | undefined> {\n  return operate(createFind(predicate, thisArg, 'value'));\n}\n\nexport function createFind<T>(\n  predicate: (value: T, index: number, source: Observable<T>) => boolean,\n  thisArg: any,\n  emit: 'value' | 'index'\n) {\n  const findIndex = emit === 'index';\n  return (source: Observable<T>, subscriber: Subscriber<any>) => {\n    let index = 0;\n    source.subscribe(\n      createOperatorSubscriber(\n        subscriber,\n        (value) => {\n          const i = index++;\n          if (predicate.call(thisArg, value, i, source)) {\n            subscriber.next(findIndex ? i : value);\n            subscriber.complete();\n          }\n        },\n        () => {\n          subscriber.next(findIndex ? -1 : undefined);\n          subscriber.complete();\n        }\n      )\n    );\n  };\n}\n","import { Observable } from '../Observable';\nimport { Falsy, OperatorFunction } from '../types';\nimport { operate } from '../util/lift';\nimport { createFind } from './find';\n\nexport function findIndex<T>(predicate: BooleanConstructor): OperatorFunction<T, T extends Falsy ? -1 : number>;\n/** @deprecated Use a closure instead of a `thisArg`. Signatures accepting a `thisArg` will be removed in v8. */\nexport function findIndex<T>(predicate: BooleanConstructor, thisArg: any): OperatorFunction<T, T extends Falsy ? -1 : number>;\n/** @deprecated Use a closure instead of a `thisArg`. Signatures accepting a `thisArg` will be removed in v8. */\nexport function findIndex<T, A>(\n  predicate: (this: A, value: T, index: number, source: Observable<T>) => boolean,\n  thisArg: A\n): OperatorFunction<T, number>;\nexport function findIndex<T>(predicate: (value: T, index: number, source: Observable<T>) => boolean): OperatorFunction<T, number>;\n\n/**\n * Emits only the index of the first value emitted by the source Observable that\n * meets some condition.\n *\n * <span class=\"informal\">It's like {@link find}, but emits the index of the\n * found value, not the value itself.</span>\n *\n * ![](findIndex.png)\n *\n * `findIndex` searches for the first item in the source Observable that matches\n * the specified condition embodied by the `predicate`, and returns the\n * (zero-based) index of the first occurrence in the source. Unlike\n * {@link first}, the `predicate` is required in `findIndex`, and does not emit\n * an error if a valid value is not found.\n *\n * ## Example\n *\n * Emit the index of first click that happens on a DIV element\n *\n * ```ts\n * import { fromEvent, findIndex } from 'rxjs';\n *\n * const div = document.createElement('div');\n * div.style.cssText = 'width: 200px; height: 200px; background: #09c;';\n * document.body.appendChild(div);\n *\n * const clicks = fromEvent(document, 'click');\n * const result = clicks.pipe(findIndex(ev => (<HTMLElement>ev.target).tagName === 'DIV'));\n * result.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link filter}\n * @see {@link find}\n * @see {@link first}\n * @see {@link take}\n *\n * @param {function(value: T, index: number, source: Observable<T>): boolean} predicate\n * A function called with each item to test for condition matching.\n * @param {any} [thisArg] An optional argument to determine the value of `this`\n * in the `predicate` function.\n * @return A function that returns an Observable that emits the index of the\n * first item that matches the condition.\n */\nexport function findIndex<T>(\n  predicate: (value: T, index: number, source: Observable<T>) => boolean,\n  thisArg?: any\n): OperatorFunction<T, number> {\n  return operate(createFind(predicate, thisArg, 'index'));\n}\n","import { Observable } from '../Observable';\nimport { EmptyError } from '../util/EmptyError';\nimport { OperatorFunction, TruthyTypesOf } from '../types';\nimport { filter } from './filter';\nimport { take } from './take';\nimport { defaultIfEmpty } from './defaultIfEmpty';\nimport { throwIfEmpty } from './throwIfEmpty';\nimport { identity } from '../util/identity';\n\nexport function first<T, D = T>(predicate?: null, defaultValue?: D): OperatorFunction<T, T | D>;\nexport function first<T>(predicate: BooleanConstructor): OperatorFunction<T, TruthyTypesOf<T>>;\nexport function first<T, D>(predicate: BooleanConstructor, defaultValue: D): OperatorFunction<T, TruthyTypesOf<T> | D>;\nexport function first<T, S extends T>(\n  predicate: (value: T, index: number, source: Observable<T>) => value is S,\n  defaultValue?: S\n): OperatorFunction<T, S>;\nexport function first<T, S extends T, D>(\n  predicate: (value: T, index: number, source: Observable<T>) => value is S,\n  defaultValue: D\n): OperatorFunction<T, S | D>;\nexport function first<T, D = T>(\n  predicate: (value: T, index: number, source: Observable<T>) => boolean,\n  defaultValue?: D\n): OperatorFunction<T, T | D>;\n\n/**\n * Emits only the first value (or the first value that meets some condition)\n * emitted by the source Observable.\n *\n * <span class=\"informal\">Emits only the first value. Or emits only the first\n * value that passes some test.</span>\n *\n * ![](first.png)\n *\n * If called with no arguments, `first` emits the first value of the source\n * Observable, then completes. If called with a `predicate` function, `first`\n * emits the first value of the source that matches the specified condition. Throws an error if\n * `defaultValue` was not provided and a matching element is not found.\n *\n * ## Examples\n *\n * Emit only the first click that happens on the DOM\n *\n * ```ts\n * import { fromEvent, first } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const result = clicks.pipe(first());\n * result.subscribe(x => console.log(x));\n * ```\n *\n * Emits the first click that happens on a DIV\n *\n * ```ts\n * import { fromEvent, first } from 'rxjs';\n *\n * const div = document.createElement('div');\n * div.style.cssText = 'width: 200px; height: 200px; background: #09c;';\n * document.body.appendChild(div);\n *\n * const clicks = fromEvent(document, 'click');\n * const result = clicks.pipe(first(ev => (<HTMLElement>ev.target).tagName === 'DIV'));\n * result.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link filter}\n * @see {@link find}\n * @see {@link take}\n *\n * @throws {EmptyError} Delivers an EmptyError to the Observer's `error`\n * callback if the Observable completes before any `next` notification was sent.\n * This is how `first()` is different from {@link take}(1) which completes instead.\n *\n * @param {function(value: T, index: number, source: Observable<T>): boolean} [predicate]\n * An optional function called with each item to test for condition matching.\n * @param {D} [defaultValue] The default value emitted in case no valid value\n * was found on the source.\n * @return A function that returns an Observable that emits the first item that\n * matches the condition.\n */\nexport function first<T, D>(\n  predicate?: ((value: T, index: number, source: Observable<T>) => boolean) | null,\n  defaultValue?: D\n): OperatorFunction<T, T | D> {\n  const hasDefaultValue = arguments.length >= 2;\n  return (source: Observable<T>) =>\n    source.pipe(\n      predicate ? filter((v, i) => predicate(v, i, source)) : identity,\n      take(1),\n      hasDefaultValue ? defaultIfEmpty(defaultValue!) : throwIfEmpty(() => new EmptyError())\n    );\n}\n","import { mergeMap } from './mergeMap';\n\n/**\n * @deprecated Renamed to {@link mergeMap}. Will be removed in v8.\n */\nexport const flatMap = mergeMap;\n","import { Observable } from '../Observable';\nimport { innerFrom } from '../observable/innerFrom';\nimport { Subject } from '../Subject';\nimport { ObservableInput, Observer, OperatorFunction, SubjectLike } from '../types';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber, OperatorSubscriber } from './OperatorSubscriber';\n\nexport interface BasicGroupByOptions<K, T> {\n  element?: undefined;\n  duration?: (grouped: GroupedObservable<K, T>) => ObservableInput<any>;\n  connector?: () => SubjectLike<T>;\n}\n\nexport interface GroupByOptionsWithElement<K, E, T> {\n  element: (value: T) => E;\n  duration?: (grouped: GroupedObservable<K, E>) => ObservableInput<any>;\n  connector?: () => SubjectLike<E>;\n}\n\nexport function groupBy<T, K>(key: (value: T) => K, options: BasicGroupByOptions<K, T>): OperatorFunction<T, GroupedObservable<K, T>>;\n\nexport function groupBy<T, K, E>(\n  key: (value: T) => K,\n  options: GroupByOptionsWithElement<K, E, T>\n): OperatorFunction<T, GroupedObservable<K, E>>;\n\nexport function groupBy<T, K extends T>(\n  key: (value: T) => value is K\n): OperatorFunction<T, GroupedObservable<true, K> | GroupedObservable<false, Exclude<T, K>>>;\n\nexport function groupBy<T, K>(key: (value: T) => K): OperatorFunction<T, GroupedObservable<K, T>>;\n\n/**\n * @deprecated use the options parameter instead.\n */\nexport function groupBy<T, K>(\n  key: (value: T) => K,\n  element: void,\n  duration: (grouped: GroupedObservable<K, T>) => Observable<any>\n): OperatorFunction<T, GroupedObservable<K, T>>;\n\n/**\n * @deprecated use the options parameter instead.\n */\nexport function groupBy<T, K, R>(\n  key: (value: T) => K,\n  element?: (value: T) => R,\n  duration?: (grouped: GroupedObservable<K, R>) => Observable<any>\n): OperatorFunction<T, GroupedObservable<K, R>>;\n\n/**\n * Groups the items emitted by an Observable according to a specified criterion,\n * and emits these grouped items as `GroupedObservables`, one\n * {@link GroupedObservable} per group.\n *\n * ![](groupBy.png)\n *\n * When the Observable emits an item, a key is computed for this item with the key function.\n *\n * If a {@link GroupedObservable} for this key exists, this {@link GroupedObservable} emits. Otherwise, a new\n * {@link GroupedObservable} for this key is created and emits.\n *\n * A {@link GroupedObservable} represents values belonging to the same group represented by a common key. The common\n * key is available as the `key` field of a {@link GroupedObservable} instance.\n *\n * The elements emitted by {@link GroupedObservable}s are by default the items emitted by the Observable, or elements\n * returned by the element function.\n *\n * ## Examples\n *\n * Group objects by `id` and return as array\n *\n * ```ts\n * import { of, groupBy, mergeMap, reduce } from 'rxjs';\n *\n * of(\n *   { id: 1, name: 'JavaScript' },\n *   { id: 2, name: 'Parcel' },\n *   { id: 2, name: 'webpack' },\n *   { id: 1, name: 'TypeScript' },\n *   { id: 3, name: 'TSLint' }\n * ).pipe(\n *   groupBy(p => p.id),\n *   mergeMap(group$ => group$.pipe(reduce((acc, cur) => [...acc, cur], [])))\n * )\n * .subscribe(p => console.log(p));\n *\n * // displays:\n * // [{ id: 1, name: 'JavaScript' }, { id: 1, name: 'TypeScript'}]\n * // [{ id: 2, name: 'Parcel' }, { id: 2, name: 'webpack'}]\n * // [{ id: 3, name: 'TSLint' }]\n * ```\n *\n * Pivot data on the `id` field\n *\n * ```ts\n * import { of, groupBy, mergeMap, reduce, map } from 'rxjs';\n *\n * of(\n *   { id: 1, name: 'JavaScript' },\n *   { id: 2, name: 'Parcel' },\n *   { id: 2, name: 'webpack' },\n *   { id: 1, name: 'TypeScript' },\n *   { id: 3, name: 'TSLint' }\n * ).pipe(\n *   groupBy(p => p.id, { element: p => p.name }),\n *   mergeMap(group$ => group$.pipe(reduce((acc, cur) => [...acc, cur], [`${ group$.key }`]))),\n *   map(arr => ({ id: parseInt(arr[0], 10), values: arr.slice(1) }))\n * )\n * .subscribe(p => console.log(p));\n *\n * // displays:\n * // { id: 1, values: [ 'JavaScript', 'TypeScript' ] }\n * // { id: 2, values: [ 'Parcel', 'webpack' ] }\n * // { id: 3, values: [ 'TSLint' ] }\n * ```\n *\n * @param key A function that extracts the key\n * for each item.\n * @param element A function that extracts the\n * return element for each item.\n * @param duration\n * A function that returns an Observable to determine how long each group should\n * exist.\n * @param connector Factory function to create an\n * intermediate Subject through which grouped elements are emitted.\n * @return A function that returns an Observable that emits GroupedObservables,\n * each of which corresponds to a unique key value and each of which emits\n * those items from the source Observable that share that key value.\n *\n * @deprecated Use the options parameter instead.\n */\nexport function groupBy<T, K, R>(\n  key: (value: T) => K,\n  element?: (value: T) => R,\n  duration?: (grouped: GroupedObservable<K, R>) => Observable<any>,\n  connector?: () => Subject<R>\n): OperatorFunction<T, GroupedObservable<K, R>>;\n\n// Impl\nexport function groupBy<T, K, R>(\n  keySelector: (value: T) => K,\n  elementOrOptions?: ((value: any) => any) | void | BasicGroupByOptions<K, T> | GroupByOptionsWithElement<K, R, T>,\n  duration?: (grouped: GroupedObservable<any, any>) => ObservableInput<any>,\n  connector?: () => SubjectLike<any>\n): OperatorFunction<T, GroupedObservable<K, R>> {\n  return operate((source, subscriber) => {\n    let element: ((value: any) => any) | void;\n    if (!elementOrOptions || typeof elementOrOptions === 'function') {\n      element = elementOrOptions as ((value: any) => any);\n    } else {\n      ({ duration, element, connector } = elementOrOptions);\n    }\n\n    // A lookup for the groups that we have so far.\n    const groups = new Map<K, SubjectLike<any>>();\n\n    // Used for notifying all groups and the subscriber in the same way.\n    const notify = (cb: (group: Observer<any>) => void) => {\n      groups.forEach(cb);\n      cb(subscriber);\n    };\n\n    // Used to handle errors from the source, AND errors that occur during the\n    // next call from the source.\n    const handleError = (err: any) => notify((consumer) => consumer.error(err));\n\n    // The number of actively subscribed groups\n    let activeGroups = 0;\n\n    // Whether or not teardown was attempted on this subscription.\n    let teardownAttempted = false;\n\n    // Capturing a reference to this, because we need a handle to it\n    // in `createGroupedObservable` below. This is what we use to\n    // subscribe to our source observable. This sometimes needs to be unsubscribed\n    // out-of-band with our `subscriber` which is the downstream subscriber, or destination,\n    // in cases where a user unsubscribes from the main resulting subscription, but\n    // still has groups from this subscription subscribed and would expect values from it\n    // Consider:  `source.pipe(groupBy(fn), take(2))`.\n    const groupBySourceSubscriber = new OperatorSubscriber(\n      subscriber,\n      (value: T) => {\n        // Because we have to notify all groups of any errors that occur in here,\n        // we have to add our own try/catch to ensure that those errors are propagated.\n        // OperatorSubscriber will only send the error to the main subscriber.\n        try {\n          const key = keySelector(value);\n\n          let group = groups.get(key);\n          if (!group) {\n            // Create our group subject\n            groups.set(key, (group = connector ? connector() : new Subject<any>()));\n\n            // Emit the grouped observable. Note that we can't do a simple `asObservable()` here,\n            // because the grouped observable has special semantics around reference counting\n            // to ensure we don't sever our connection to the source prematurely.\n            const grouped = createGroupedObservable(key, group);\n            subscriber.next(grouped);\n\n            if (duration) {\n              const durationSubscriber = createOperatorSubscriber(\n                // Providing the group here ensures that it is disposed of -- via `unsubscribe` --\n                // wnen the duration subscription is torn down. That is important, because then\n                // if someone holds a handle to the grouped observable and tries to subscribe to it\n                // after the connection to the source has been severed, they will get an\n                // `ObjectUnsubscribedError` and know they can't possibly get any notifications.\n                group as any,\n                () => {\n                  // Our duration notified! We can complete the group.\n                  // The group will be removed from the map in the finalization phase.\n                  group!.complete();\n                  durationSubscriber?.unsubscribe();\n                },\n                // Completions are also sent to the group, but just the group.\n                undefined,\n                // Errors on the duration subscriber are sent to the group\n                // but only the group. They are not sent to the main subscription.\n                undefined,\n                // Finalization: Remove this group from our map.\n                () => groups.delete(key)\n              );\n\n              // Start our duration notifier.\n              groupBySourceSubscriber.add(innerFrom(duration(grouped)).subscribe(durationSubscriber));\n            }\n          }\n\n          // Send the value to our group.\n          group.next(element ? element(value) : value);\n        } catch (err) {\n          handleError(err);\n        }\n      },\n      // Source completes.\n      () => notify((consumer) => consumer.complete()),\n      // Error from the source.\n      handleError,\n      // Free up memory.\n      // When the source subscription is _finally_ torn down, release the subjects and keys\n      // in our groups Map, they may be quite large and we don't want to keep them around if we\n      // don't have to.\n      () => groups.clear(),\n      () => {\n        teardownAttempted = true;\n        // We only kill our subscription to the source if we have\n        // no active groups. As stated above, consider this scenario:\n        // source$.pipe(groupBy(fn), take(2)).\n        return activeGroups === 0;\n      }\n    );\n\n    // Subscribe to the source\n    source.subscribe(groupBySourceSubscriber);\n\n    /**\n     * Creates the actual grouped observable returned.\n     * @param key The key of the group\n     * @param groupSubject The subject that fuels the group\n     */\n    function createGroupedObservable(key: K, groupSubject: SubjectLike<any>) {\n      const result: any = new Observable<T>((groupSubscriber) => {\n        activeGroups++;\n        const innerSub = groupSubject.subscribe(groupSubscriber);\n        return () => {\n          innerSub.unsubscribe();\n          // We can kill the subscription to our source if we now have no more\n          // active groups subscribed, and a finalization was already attempted on\n          // the source.\n          --activeGroups === 0 && teardownAttempted && groupBySourceSubscriber.unsubscribe();\n        };\n      });\n      result.key = key;\n      return result;\n    }\n  });\n}\n\n/**\n * An observable of values that is the emitted by the result of a {@link groupBy} operator,\n * contains a `key` property for the grouping.\n */\nexport interface GroupedObservable<K, T> extends Observable<T> {\n  /**\n   * The key value for the grouped notifications.\n   */\n  readonly key: K;\n}\n","import { OperatorFunction } from '../types';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nimport { noop } from '../util/noop';\n\n/**\n * Ignores all items emitted by the source Observable and only passes calls of `complete` or `error`.\n *\n * ![](ignoreElements.png)\n *\n * The `ignoreElements` operator suppresses all items emitted by the source Observable,\n * but allows its termination notification (either `error` or `complete`) to pass through unchanged.\n *\n * If you do not care about the items being emitted by an Observable, but you do want to be notified\n * when it completes or when it terminates with an error, you can apply the `ignoreElements` operator\n * to the Observable, which will ensure that it will never call its observers’ `next` handlers.\n *\n * ## Example\n *\n * Ignore all `next` emissions from the source\n *\n * ```ts\n * import { of, ignoreElements } from 'rxjs';\n *\n * of('you', 'talking', 'to', 'me')\n *   .pipe(ignoreElements())\n *   .subscribe({\n *     next: word => console.log(word),\n *     error: err => console.log('error:', err),\n *     complete: () => console.log('the end'),\n *   });\n *\n * // result:\n * // 'the end'\n * ```\n *\n * @return A function that returns an empty Observable that only calls\n * `complete` or `error`, based on which one is called by the source\n * Observable.\n */\nexport function ignoreElements(): OperatorFunction<unknown, never> {\n  return operate((source, subscriber) => {\n    source.subscribe(createOperatorSubscriber(subscriber, noop));\n  });\n}\n","import { OperatorFunction } from '../types';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\n\n/**\n * Emits `false` if the input Observable emits any values, or emits `true` if the\n * input Observable completes without emitting any values.\n *\n * <span class=\"informal\">Tells whether any values are emitted by an Observable.</span>\n *\n * ![](isEmpty.png)\n *\n * `isEmpty` transforms an Observable that emits values into an Observable that\n * emits a single boolean value representing whether or not any values were\n * emitted by the source Observable. As soon as the source Observable emits a\n * value, `isEmpty` will emit a `false` and complete.  If the source Observable\n * completes having not emitted anything, `isEmpty` will emit a `true` and\n * complete.\n *\n * A similar effect could be achieved with {@link count}, but `isEmpty` can emit\n * a `false` value sooner.\n *\n * ## Examples\n *\n * Emit `false` for a non-empty Observable\n *\n * ```ts\n * import { Subject, isEmpty } from 'rxjs';\n *\n * const source = new Subject<string>();\n * const result = source.pipe(isEmpty());\n *\n * source.subscribe(x => console.log(x));\n * result.subscribe(x => console.log(x));\n *\n * source.next('a');\n * source.next('b');\n * source.next('c');\n * source.complete();\n *\n * // Outputs\n * // 'a'\n * // false\n * // 'b'\n * // 'c'\n * ```\n *\n * Emit `true` for an empty Observable\n *\n * ```ts\n * import { EMPTY, isEmpty } from 'rxjs';\n *\n * const result = EMPTY.pipe(isEmpty());\n * result.subscribe(x => console.log(x));\n *\n * // Outputs\n * // true\n * ```\n *\n * @see {@link count}\n * @see {@link EMPTY}\n *\n * @return A function that returns an Observable that emits boolean value\n * indicating whether the source Observable was empty or not.\n */\nexport function isEmpty<T>(): OperatorFunction<T, boolean> {\n  return operate((source, subscriber) => {\n    source.subscribe(\n      createOperatorSubscriber(\n        subscriber,\n        () => {\n          subscriber.next(false);\n          subscriber.complete();\n        },\n        () => {\n          subscriber.next(true);\n          subscriber.complete();\n        }\n      )\n    );\n  });\n}\n","import { Observable } from '../Observable';\nimport { ObservableInput, OperatorFunction } from '../types';\nimport { identity } from '../util/identity';\nimport { mapOneOrManyArgs } from '../util/mapOneOrManyArgs';\nimport { pipe } from '../util/pipe';\nimport { mergeMap } from './mergeMap';\nimport { toArray } from './toArray';\n\n/**\n * Collects all of the inner sources from source observable. Then, once the\n * source completes, joins the values using the given static.\n *\n * This is used for {@link combineLatestAll} and {@link zipAll} which both have the\n * same behavior of collecting all inner observables, then operating on them.\n *\n * @param joinFn The type of static join to apply to the sources collected\n * @param project The projection function to apply to the values, if any\n */\nexport function joinAllInternals<T, R>(joinFn: (sources: ObservableInput<T>[]) => Observable<T>, project?: (...args: any[]) => R) {\n  return pipe(\n    // Collect all inner sources into an array, and emit them when the\n    // source completes.\n    toArray() as OperatorFunction<ObservableInput<T>, ObservableInput<T>[]>,\n    // Run the join function on the collected array of inner sources.\n    mergeMap((sources) => joinFn(sources)),\n    // If a projection function was supplied, apply it to each result.\n    project ? mapOneOrManyArgs(project) : (identity as any)\n  );\n}\n","import { Observable } from '../Observable';\nimport { EmptyError } from '../util/EmptyError';\nimport { OperatorFunction, TruthyTypesOf } from '../types';\nimport { filter } from './filter';\nimport { takeLast } from './takeLast';\nimport { throwIfEmpty } from './throwIfEmpty';\nimport { defaultIfEmpty } from './defaultIfEmpty';\nimport { identity } from '../util/identity';\n\nexport function last<T>(predicate: BooleanConstructor): OperatorFunction<T, TruthyTypesOf<T>>;\nexport function last<T, D>(predicate: BooleanConstructor, defaultValue: D): OperatorFunction<T, TruthyTypesOf<T> | D>;\nexport function last<T, D = T>(predicate?: null, defaultValue?: D): OperatorFunction<T, T | D>;\nexport function last<T, S extends T>(\n  predicate: (value: T, index: number, source: Observable<T>) => value is S,\n  defaultValue?: S\n): OperatorFunction<T, S>;\nexport function last<T, D = T>(\n  predicate: (value: T, index: number, source: Observable<T>) => boolean,\n  defaultValue?: D\n): OperatorFunction<T, T | D>;\n\n/**\n * Returns an Observable that emits only the last item emitted by the source Observable.\n * It optionally takes a predicate function as a parameter, in which case, rather than emitting\n * the last item from the source Observable, the resulting Observable will emit the last item\n * from the source Observable that satisfies the predicate.\n *\n * ![](last.png)\n *\n * It will throw an error if the source completes without notification or one that matches the predicate. It\n * returns the last value or if a predicate is provided last value that matches the predicate. It returns the\n * given default value if no notification is emitted or matches the predicate.\n *\n * ## Examples\n *\n * Last alphabet from the sequence\n *\n * ```ts\n * import { from, last } from 'rxjs';\n *\n * const source = from(['x', 'y', 'z']);\n * const result = source.pipe(last());\n *\n * result.subscribe(value => console.log(`Last alphabet: ${ value }`));\n *\n * // Outputs\n * // Last alphabet: z\n * ```\n *\n * Default value when the value in the predicate is not matched\n *\n * ```ts\n * import { from, last } from 'rxjs';\n *\n * const source = from(['x', 'y', 'z']);\n * const result = source.pipe(last(char => char === 'a', 'not found'));\n *\n * result.subscribe(value => console.log(`'a' is ${ value }.`));\n *\n * // Outputs\n * // 'a' is not found.\n * ```\n *\n * @see {@link skip}\n * @see {@link skipUntil}\n * @see {@link skipLast}\n * @see {@link skipWhile}\n *\n * @throws {EmptyError} Delivers an EmptyError to the Observer's `error`\n * callback if the Observable completes before any `next` notification was sent.\n * @param {function} [predicate] - The condition any source emitted item has to satisfy.\n * @param {any} [defaultValue] - An optional default value to provide if last\n * predicate isn't met or no values were emitted.\n * @return A function that returns an Observable that emits only the last item\n * satisfying the given condition from the source, or a NoSuchElementException\n * if no such items are emitted.\n * @throws - Throws if no items that match the predicate are emitted by the source Observable.\n */\nexport function last<T, D>(\n  predicate?: ((value: T, index: number, source: Observable<T>) => boolean) | null,\n  defaultValue?: D\n): OperatorFunction<T, T | D> {\n  const hasDefaultValue = arguments.length >= 2;\n  return (source: Observable<T>) =>\n    source.pipe(\n      predicate ? filter((v, i) => predicate(v, i, source)) : identity,\n      takeLast(1),\n      hasDefaultValue ? defaultIfEmpty(defaultValue!) : throwIfEmpty(() => new EmptyError())\n    );\n}\n","import { OperatorFunction } from '../types';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\n\nexport function map<T, R>(project: (value: T, index: number) => R): OperatorFunction<T, R>;\n/** @deprecated Use a closure instead of a `thisArg`. Signatures accepting a `thisArg` will be removed in v8. */\nexport function map<T, R, A>(project: (this: A, value: T, index: number) => R, thisArg: A): OperatorFunction<T, R>;\n\n/**\n * Applies a given `project` function to each value emitted by the source\n * Observable, and emits the resulting values as an Observable.\n *\n * <span class=\"informal\">Like [Array.prototype.map()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map),\n * it passes each source value through a transformation function to get\n * corresponding output values.</span>\n *\n * ![](map.png)\n *\n * Similar to the well known `Array.prototype.map` function, this operator\n * applies a projection to each value and emits that projection in the output\n * Observable.\n *\n * ## Example\n *\n * Map every click to the `clientX` position of that click\n *\n * ```ts\n * import { fromEvent, map } from 'rxjs';\n *\n * const clicks = fromEvent<PointerEvent>(document, 'click');\n * const positions = clicks.pipe(map(ev => ev.clientX));\n *\n * positions.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link mapTo}\n * @see {@link pluck}\n *\n * @param {function(value: T, index: number): R} project The function to apply\n * to each `value` emitted by the source Observable. The `index` parameter is\n * the number `i` for the i-th emission that has happened since the\n * subscription, starting from the number `0`.\n * @param {any} [thisArg] An optional argument to define what `this` is in the\n * `project` function.\n * @return A function that returns an Observable that emits the values from the\n * source Observable transformed by the given `project` function.\n */\nexport function map<T, R>(project: (value: T, index: number) => R, thisArg?: any): OperatorFunction<T, R> {\n  return operate((source, subscriber) => {\n    // The index of the value from the source. Used with projection.\n    let index = 0;\n    // Subscribe to the source, all errors and completions are sent along\n    // to the consumer.\n    source.subscribe(\n      createOperatorSubscriber(subscriber, (value: T) => {\n        // Call the projection function with the appropriate this context,\n        // and send the resulting value to the consumer.\n        subscriber.next(project.call(thisArg, value, index++));\n      })\n    );\n  });\n}\n","import { OperatorFunction } from '../types';\nimport { map } from './map';\n\n/** @deprecated To be removed in v9. Use {@link map} instead: `map(() => value)`. */\nexport function mapTo<R>(value: R): OperatorFunction<unknown, R>;\n/**\n * @deprecated Do not specify explicit type parameters. Signatures with type parameters\n * that cannot be inferred will be removed in v8. `mapTo` itself will be removed in v9,\n * use {@link map} instead: `map(() => value)`.\n * */\nexport function mapTo<T, R>(value: R): OperatorFunction<T, R>;\n\n/**\n * Emits the given constant value on the output Observable every time the source\n * Observable emits a value.\n *\n * <span class=\"informal\">Like {@link map}, but it maps every source value to\n * the same output value every time.</span>\n *\n * ![](mapTo.png)\n *\n * Takes a constant `value` as argument, and emits that whenever the source\n * Observable emits a value. In other words, ignores the actual source value,\n * and simply uses the emission moment to know when to emit the given `value`.\n *\n * ## Example\n *\n * Map every click to the string `'Hi'`\n *\n * ```ts\n * import { fromEvent, mapTo } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const greetings = clicks.pipe(mapTo('Hi'));\n *\n * greetings.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link map}\n *\n * @param value The value to map each source value to.\n * @return A function that returns an Observable that emits the given `value`\n * every time the source Observable emits.\n * @deprecated To be removed in v9. Use {@link map} instead: `map(() => value)`.\n */\nexport function mapTo<R>(value: R): OperatorFunction<unknown, R> {\n  return map(() => value);\n}\n","import { Notification } from '../Notification';\nimport { OperatorFunction, ObservableNotification } from '../types';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\n\n/**\n * Represents all of the notifications from the source Observable as `next`\n * emissions marked with their original types within {@link Notification}\n * objects.\n *\n * <span class=\"informal\">Wraps `next`, `error` and `complete` emissions in\n * {@link Notification} objects, emitted as `next` on the output Observable.\n * </span>\n *\n * ![](materialize.png)\n *\n * `materialize` returns an Observable that emits a `next` notification for each\n * `next`, `error`, or `complete` emission of the source Observable. When the\n * source Observable emits `complete`, the output Observable will emit `next` as\n * a Notification of type \"complete\", and then it will emit `complete` as well.\n * When the source Observable emits `error`, the output will emit `next` as a\n * Notification of type \"error\", and then `complete`.\n *\n * This operator is useful for producing metadata of the source Observable, to\n * be consumed as `next` emissions. Use it in conjunction with\n * {@link dematerialize}.\n *\n * ## Example\n *\n * Convert a faulty Observable to an Observable of Notifications\n *\n * ```ts\n * import { of, materialize, map } from 'rxjs';\n *\n * const letters = of('a', 'b', 13, 'd');\n * const upperCase = letters.pipe(map((x: any) => x.toUpperCase()));\n * const materialized = upperCase.pipe(materialize());\n *\n * materialized.subscribe(x => console.log(x));\n *\n * // Results in the following:\n * // - Notification { kind: 'N', value: 'A', error: undefined, hasValue: true }\n * // - Notification { kind: 'N', value: 'B', error: undefined, hasValue: true }\n * // - Notification { kind: 'E', value: undefined, error: TypeError { message: x.toUpperCase is not a function }, hasValue: false }\n * ```\n *\n * @see {@link Notification}\n * @see {@link dematerialize}\n *\n * @return A function that returns an Observable that emits\n * {@link Notification} objects that wrap the original emissions from the\n * source Observable with metadata.\n */\nexport function materialize<T>(): OperatorFunction<T, Notification<T> & ObservableNotification<T>> {\n  return operate((source, subscriber) => {\n    source.subscribe(\n      createOperatorSubscriber(\n        subscriber,\n        (value) => {\n          subscriber.next(Notification.createNext(value));\n        },\n        () => {\n          subscriber.next(Notification.createComplete());\n          subscriber.complete();\n        },\n        (err) => {\n          subscriber.next(Notification.createError(err));\n          subscriber.complete();\n        }\n      )\n    );\n  });\n}\n","import { reduce } from './reduce';\nimport { MonoTypeOperatorFunction } from '../types';\nimport { isFunction } from '../util/isFunction';\n\n/**\n * The Max operator operates on an Observable that emits numbers (or items that can be compared with a provided function),\n * and when source Observable completes it emits a single item: the item with the largest value.\n *\n * ![](max.png)\n *\n * ## Examples\n *\n * Get the maximal value of a series of numbers\n *\n * ```ts\n * import { of, max } from 'rxjs';\n *\n * of(5, 4, 7, 2, 8)\n *   .pipe(max())\n *   .subscribe(x => console.log(x));\n *\n * // Outputs\n * // 8\n * ```\n *\n * Use a comparer function to get the maximal item\n *\n * ```ts\n * import { of, max } from 'rxjs';\n *\n * of(\n *   { age: 7, name: 'Foo' },\n *   { age: 5, name: 'Bar' },\n *   { age: 9, name: 'Beer' }\n * ).pipe(\n *   max((a, b) => a.age < b.age ? -1 : 1)\n * )\n * .subscribe(x => console.log(x.name));\n *\n * // Outputs\n * // 'Beer'\n * ```\n *\n * @see {@link min}\n *\n * @param {Function} [comparer] - Optional comparer function that it will use instead of its default to compare the\n * value of two items.\n * @return A function that returns an Observable that emits item with the\n * largest value.\n */\nexport function max<T>(comparer?: (x: T, y: T) => number): MonoTypeOperatorFunction<T> {\n  return reduce(isFunction(comparer) ? (x, y) => (comparer(x, y) > 0 ? x : y) : (x, y) => (x > y ? x : y));\n}\n","import { ObservableInput, ObservableInputTuple, OperatorFunction, SchedulerLike } from '../types';\nimport { operate } from '../util/lift';\nimport { argsOrArgArray } from '../util/argsOrArgArray';\nimport { mergeAll } from './mergeAll';\nimport { popNumber, popScheduler } from '../util/args';\nimport { from } from '../observable/from';\n\n/** @deprecated Replaced with {@link mergeWith}. Will be removed in v8. */\nexport function merge<T, A extends readonly unknown[]>(...sources: [...ObservableInputTuple<A>]): OperatorFunction<T, T | A[number]>;\n/** @deprecated Replaced with {@link mergeWith}. Will be removed in v8. */\nexport function merge<T, A extends readonly unknown[]>(\n  ...sourcesAndConcurrency: [...ObservableInputTuple<A>, number]\n): OperatorFunction<T, T | A[number]>;\n/** @deprecated Replaced with {@link mergeWith}. Will be removed in v8. */\nexport function merge<T, A extends readonly unknown[]>(\n  ...sourcesAndScheduler: [...ObservableInputTuple<A>, SchedulerLike]\n): OperatorFunction<T, T | A[number]>;\n/** @deprecated Replaced with {@link mergeWith}. Will be removed in v8. */\nexport function merge<T, A extends readonly unknown[]>(\n  ...sourcesAndConcurrencyAndScheduler: [...ObservableInputTuple<A>, number, SchedulerLike]\n): OperatorFunction<T, T | A[number]>;\n\nexport function merge<T>(...args: unknown[]): OperatorFunction<T, unknown> {\n  const scheduler = popScheduler(args);\n  const concurrent = popNumber(args, Infinity);\n  args = argsOrArgArray(args);\n\n  return operate((source, subscriber) => {\n    mergeAll(concurrent)(from([source, ...(args as ObservableInput<T>[])], scheduler)).subscribe(subscriber);\n  });\n}\n","import { mergeMap } from './mergeMap';\nimport { identity } from '../util/identity';\nimport { OperatorFunction, ObservableInput, ObservedValueOf } from '../types';\n\n/**\n * Converts a higher-order Observable into a first-order Observable which\n * concurrently delivers all values that are emitted on the inner Observables.\n *\n * <span class=\"informal\">Flattens an Observable-of-Observables.</span>\n *\n * ![](mergeAll.png)\n *\n * `mergeAll` subscribes to an Observable that emits Observables, also known as\n * a higher-order Observable. Each time it observes one of these emitted inner\n * Observables, it subscribes to that and delivers all the values from the\n * inner Observable on the output Observable. The output Observable only\n * completes once all inner Observables have completed. Any error delivered by\n * a inner Observable will be immediately emitted on the output Observable.\n *\n * ## Examples\n *\n * Spawn a new interval Observable for each click event, and blend their outputs as one Observable\n *\n * ```ts\n * import { fromEvent, map, interval, mergeAll } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const higherOrder = clicks.pipe(map(() => interval(1000)));\n * const firstOrder = higherOrder.pipe(mergeAll());\n *\n * firstOrder.subscribe(x => console.log(x));\n * ```\n *\n * Count from 0 to 9 every second for each click, but only allow 2 concurrent timers\n *\n * ```ts\n * import { fromEvent, map, interval, take, mergeAll } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const higherOrder = clicks.pipe(\n *   map(() => interval(1000).pipe(take(10)))\n * );\n * const firstOrder = higherOrder.pipe(mergeAll(2));\n *\n * firstOrder.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link combineLatestAll}\n * @see {@link concatAll}\n * @see {@link exhaustAll}\n * @see {@link merge}\n * @see {@link mergeMap}\n * @see {@link mergeMapTo}\n * @see {@link mergeScan}\n * @see {@link switchAll}\n * @see {@link switchMap}\n * @see {@link zipAll}\n *\n * @param {number} [concurrent=Infinity] Maximum number of inner\n * Observables being subscribed to concurrently.\n * @return A function that returns an Observable that emits values coming from\n * all the inner Observables emitted by the source Observable.\n */\nexport function mergeAll<O extends ObservableInput<any>>(concurrent: number = Infinity): OperatorFunction<O, ObservedValueOf<O>> {\n  return mergeMap(identity, concurrent);\n}\n","import { Observable } from '../Observable';\nimport { innerFrom } from '../observable/innerFrom';\nimport { Subscriber } from '../Subscriber';\nimport { ObservableInput, SchedulerLike } from '../types';\nimport { executeSchedule } from '../util/executeSchedule';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\n\n/**\n * A process embodying the general \"merge\" strategy. This is used in\n * `mergeMap` and `mergeScan` because the logic is otherwise nearly identical.\n * @param source The original source observable\n * @param subscriber The consumer subscriber\n * @param project The projection function to get our inner sources\n * @param concurrent The number of concurrent inner subscriptions\n * @param onBeforeNext Additional logic to apply before nexting to our consumer\n * @param expand If `true` this will perform an \"expand\" strategy, which differs only\n * in that it recurses, and the inner subscription must be schedule-able.\n * @param innerSubScheduler A scheduler to use to schedule inner subscriptions,\n * this is to support the expand strategy, mostly, and should be deprecated\n */\nexport function mergeInternals<T, R>(\n  source: Observable<T>,\n  subscriber: Subscriber<R>,\n  project: (value: T, index: number) => ObservableInput<R>,\n  concurrent: number,\n  onBeforeNext?: (innerValue: R) => void,\n  expand?: boolean,\n  innerSubScheduler?: SchedulerLike,\n  additionalFinalizer?: () => void\n) {\n  // Buffered values, in the event of going over our concurrency limit\n  const buffer: T[] = [];\n  // The number of active inner subscriptions.\n  let active = 0;\n  // An index to pass to our accumulator function\n  let index = 0;\n  // Whether or not the outer source has completed.\n  let isComplete = false;\n\n  /**\n   * Checks to see if we can complete our result or not.\n   */\n  const checkComplete = () => {\n    // If the outer has completed, and nothing is left in the buffer,\n    // and we don't have any active inner subscriptions, then we can\n    // Emit the state and complete.\n    if (isComplete && !buffer.length && !active) {\n      subscriber.complete();\n    }\n  };\n\n  // If we're under our concurrency limit, just start the inner subscription, otherwise buffer and wait.\n  const outerNext = (value: T) => (active < concurrent ? doInnerSub(value) : buffer.push(value));\n\n  const doInnerSub = (value: T) => {\n    // If we're expanding, we need to emit the outer values and the inner values\n    // as the inners will \"become outers\" in a way as they are recursively fed\n    // back to the projection mechanism.\n    expand && subscriber.next(value as any);\n\n    // Increment the number of active subscriptions so we can track it\n    // against our concurrency limit later.\n    active++;\n\n    // A flag used to show that the inner observable completed.\n    // This is checked during finalization to see if we should\n    // move to the next item in the buffer, if there is on.\n    let innerComplete = false;\n\n    // Start our inner subscription.\n    innerFrom(project(value, index++)).subscribe(\n      createOperatorSubscriber(\n        subscriber,\n        (innerValue) => {\n          // `mergeScan` has additional handling here. For example\n          // taking the inner value and updating state.\n          onBeforeNext?.(innerValue);\n\n          if (expand) {\n            // If we're expanding, then just recurse back to our outer\n            // handler. It will emit the value first thing.\n            outerNext(innerValue as any);\n          } else {\n            // Otherwise, emit the inner value.\n            subscriber.next(innerValue);\n          }\n        },\n        () => {\n          // Flag that we have completed, so we know to check the buffer\n          // during finalization.\n          innerComplete = true;\n        },\n        // Errors are passed to the destination.\n        undefined,\n        () => {\n          // During finalization, if the inner completed (it wasn't errored or\n          // cancelled), then we want to try the next item in the buffer if\n          // there is one.\n          if (innerComplete) {\n            // We have to wrap this in a try/catch because it happens during\n            // finalization, possibly asynchronously, and we want to pass\n            // any errors that happen (like in a projection function) to\n            // the outer Subscriber.\n            try {\n              // INNER SOURCE COMPLETE\n              // Decrement the active count to ensure that the next time\n              // we try to call `doInnerSub`, the number is accurate.\n              active--;\n              // If we have more values in the buffer, try to process those\n              // Note that this call will increment `active` ahead of the\n              // next conditional, if there were any more inner subscriptions\n              // to start.\n              while (buffer.length && active < concurrent) {\n                const bufferedValue = buffer.shift()!;\n                // Particularly for `expand`, we need to check to see if a scheduler was provided\n                // for when we want to start our inner subscription. Otherwise, we just start\n                // are next inner subscription.\n                if (innerSubScheduler) {\n                  executeSchedule(subscriber, innerSubScheduler, () => doInnerSub(bufferedValue));\n                } else {\n                  doInnerSub(bufferedValue);\n                }\n              }\n              // Check to see if we can complete, and complete if so.\n              checkComplete();\n            } catch (err) {\n              subscriber.error(err);\n            }\n          }\n        }\n      )\n    );\n  };\n\n  // Subscribe to our source observable.\n  source.subscribe(\n    createOperatorSubscriber(subscriber, outerNext, () => {\n      // Outer completed, make a note of it, and check to see if we can complete everything.\n      isComplete = true;\n      checkComplete();\n    })\n  );\n\n  // Additional finalization (for when the destination is torn down).\n  // Other finalization is added implicitly via subscription above.\n  return () => {\n    additionalFinalizer?.();\n  };\n}\n","import { ObservableInput, OperatorFunction, ObservedValueOf } from '../types';\nimport { map } from './map';\nimport { innerFrom } from '../observable/innerFrom';\nimport { operate } from '../util/lift';\nimport { mergeInternals } from './mergeInternals';\nimport { isFunction } from '../util/isFunction';\n\n/* tslint:disable:max-line-length */\nexport function mergeMap<T, O extends ObservableInput<any>>(\n  project: (value: T, index: number) => O,\n  concurrent?: number\n): OperatorFunction<T, ObservedValueOf<O>>;\n/** @deprecated The `resultSelector` parameter will be removed in v8. Use an inner `map` instead. Details: https://rxjs.dev/deprecations/resultSelector */\nexport function mergeMap<T, O extends ObservableInput<any>>(\n  project: (value: T, index: number) => O,\n  resultSelector: undefined,\n  concurrent?: number\n): OperatorFunction<T, ObservedValueOf<O>>;\n/** @deprecated The `resultSelector` parameter will be removed in v8. Use an inner `map` instead. Details: https://rxjs.dev/deprecations/resultSelector */\nexport function mergeMap<T, R, O extends ObservableInput<any>>(\n  project: (value: T, index: number) => O,\n  resultSelector: (outerValue: T, innerValue: ObservedValueOf<O>, outerIndex: number, innerIndex: number) => R,\n  concurrent?: number\n): OperatorFunction<T, R>;\n/* tslint:enable:max-line-length */\n\n/**\n * Projects each source value to an Observable which is merged in the output\n * Observable.\n *\n * <span class=\"informal\">Maps each value to an Observable, then flattens all of\n * these inner Observables using {@link mergeAll}.</span>\n *\n * ![](mergeMap.png)\n *\n * Returns an Observable that emits items based on applying a function that you\n * supply to each item emitted by the source Observable, where that function\n * returns an Observable, and then merging those resulting Observables and\n * emitting the results of this merger.\n *\n * ## Example\n *\n * Map and flatten each letter to an Observable ticking every 1 second\n *\n * ```ts\n * import { of, mergeMap, interval, map } from 'rxjs';\n *\n * const letters = of('a', 'b', 'c');\n * const result = letters.pipe(\n *   mergeMap(x => interval(1000).pipe(map(i => x + i)))\n * );\n *\n * result.subscribe(x => console.log(x));\n *\n * // Results in the following:\n * // a0\n * // b0\n * // c0\n * // a1\n * // b1\n * // c1\n * // continues to list a, b, c every second with respective ascending integers\n * ```\n *\n * @see {@link concatMap}\n * @see {@link exhaustMap}\n * @see {@link merge}\n * @see {@link mergeAll}\n * @see {@link mergeMapTo}\n * @see {@link mergeScan}\n * @see {@link switchMap}\n *\n * @param {function(value: T, ?index: number): ObservableInput} project A function\n * that, when applied to an item emitted by the source Observable, returns an\n * Observable.\n * @param {number} [concurrent=Infinity] Maximum number of input\n * Observables being subscribed to concurrently.\n * @return A function that returns an Observable that emits the result of\n * applying the projection function (and the optional deprecated\n * `resultSelector`) to each item emitted by the source Observable and merging\n * the results of the Observables obtained from this transformation.\n */\nexport function mergeMap<T, R, O extends ObservableInput<any>>(\n  project: (value: T, index: number) => O,\n  resultSelector?: ((outerValue: T, innerValue: ObservedValueOf<O>, outerIndex: number, innerIndex: number) => R) | number,\n  concurrent: number = Infinity\n): OperatorFunction<T, ObservedValueOf<O> | R> {\n  if (isFunction(resultSelector)) {\n    // DEPRECATED PATH\n    return mergeMap((a, i) => map((b: any, ii: number) => resultSelector(a, b, i, ii))(innerFrom(project(a, i))), concurrent);\n  } else if (typeof resultSelector === 'number') {\n    concurrent = resultSelector;\n  }\n\n  return operate((source, subscriber) => mergeInternals(source, subscriber, project, concurrent));\n}\n","import { OperatorFunction, ObservedValueOf, ObservableInput } from '../types';\nimport { mergeMap } from './mergeMap';\nimport { isFunction } from '../util/isFunction';\n\n/** @deprecated Will be removed in v9. Use {@link mergeMap} instead: `mergeMap(() => result)` */\nexport function mergeMapTo<O extends ObservableInput<unknown>>(\n  innerObservable: O,\n  concurrent?: number\n): OperatorFunction<unknown, ObservedValueOf<O>>;\n/**\n * @deprecated The `resultSelector` parameter will be removed in v8. Use an inner `map` instead.\n * Details: https://rxjs.dev/deprecations/resultSelector\n */\nexport function mergeMapTo<T, R, O extends ObservableInput<unknown>>(\n  innerObservable: O,\n  resultSelector: (outerValue: T, innerValue: ObservedValueOf<O>, outerIndex: number, innerIndex: number) => R,\n  concurrent?: number\n): OperatorFunction<T, R>;\n/* tslint:enable:max-line-length */\n\n/**\n * Projects each source value to the same Observable which is merged multiple\n * times in the output Observable.\n *\n * <span class=\"informal\">It's like {@link mergeMap}, but maps each value always\n * to the same inner Observable.</span>\n *\n * ![](mergeMapTo.png)\n *\n * Maps each source value to the given Observable `innerObservable` regardless\n * of the source value, and then merges those resulting Observables into one\n * single Observable, which is the output Observable.\n *\n * ## Example\n *\n * For each click event, start an interval Observable ticking every 1 second\n *\n * ```ts\n * import { fromEvent, mergeMapTo, interval } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const result = clicks.pipe(mergeMapTo(interval(1000)));\n *\n * result.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link concatMapTo}\n * @see {@link merge}\n * @see {@link mergeAll}\n * @see {@link mergeMap}\n * @see {@link mergeScan}\n * @see {@link switchMapTo}\n *\n * @param {ObservableInput} innerObservable An Observable to replace each value from\n * the source Observable.\n * @param {number} [concurrent=Infinity] Maximum number of input\n * Observables being subscribed to concurrently.\n * @return A function that returns an Observable that emits items from the\n * given `innerObservable`.\n * @deprecated Will be removed in v9. Use {@link mergeMap} instead: `mergeMap(() => result)`\n */\nexport function mergeMapTo<T, R, O extends ObservableInput<unknown>>(\n  innerObservable: O,\n  resultSelector?: ((outerValue: T, innerValue: ObservedValueOf<O>, outerIndex: number, innerIndex: number) => R) | number,\n  concurrent: number = Infinity\n): OperatorFunction<T, ObservedValueOf<O> | R> {\n  if (isFunction(resultSelector)) {\n    return mergeMap(() => innerObservable, resultSelector, concurrent);\n  }\n  if (typeof resultSelector === 'number') {\n    concurrent = resultSelector;\n  }\n  return mergeMap(() => innerObservable, concurrent);\n}\n","import { ObservableInput, OperatorFunction } from '../types';\nimport { operate } from '../util/lift';\nimport { mergeInternals } from './mergeInternals';\n\n/**\n * Applies an accumulator function over the source Observable where the\n * accumulator function itself returns an Observable, then each intermediate\n * Observable returned is merged into the output Observable.\n *\n * <span class=\"informal\">It's like {@link scan}, but the Observables returned\n * by the accumulator are merged into the outer Observable.</span>\n *\n * The first parameter of the `mergeScan` is an `accumulator` function which is\n * being called every time the source Observable emits a value. `mergeScan` will\n * subscribe to the value returned by the `accumulator` function and will emit\n * values to the subscriber emitted by inner Observable.\n *\n * The `accumulator` function is being called with three parameters passed to it:\n * `acc`, `value` and `index`. The `acc` parameter is used as the state parameter\n * whose value is initially set to the `seed` parameter (the second parameter\n * passed to the `mergeScan` operator).\n *\n * `mergeScan` internally keeps the value of the `acc` parameter: as long as the\n * source Observable emits without inner Observable emitting, the `acc` will be\n * set to `seed`. The next time the inner Observable emits a value, `mergeScan`\n * will internally remember it and it will be passed to the `accumulator`\n * function as `acc` parameter the next time source emits.\n *\n * The `value` parameter of the `accumulator` function is the value emitted by the\n * source Observable, while the `index` is a number which represent the order of the\n * current emission by the source Observable. It starts with 0.\n *\n * The last parameter to the `mergeScan` is the `concurrent` value which defaults\n * to Infinity. It represents the maximum number of inner Observable subscriptions\n * at a time.\n *\n * ## Example\n *\n * Count the number of click events\n *\n * ```ts\n * import { fromEvent, map, mergeScan, of } from 'rxjs';\n *\n * const click$ = fromEvent(document, 'click');\n * const one$ = click$.pipe(map(() => 1));\n * const seed = 0;\n * const count$ = one$.pipe(\n *   mergeScan((acc, one) => of(acc + one), seed)\n * );\n *\n * count$.subscribe(x => console.log(x));\n *\n * // Results:\n * // 1\n * // 2\n * // 3\n * // 4\n * // ...and so on for each click\n * ```\n *\n * @see {@link scan}\n * @see {@link switchScan}\n *\n * @param {function(acc: R, value: T): Observable<R>} accumulator\n * The accumulator function called on each source value.\n * @param seed The initial accumulation value.\n * @param {number} [concurrent=Infinity] Maximum number of\n * input Observables being subscribed to concurrently.\n * @return A function that returns an Observable of the accumulated values.\n */\nexport function mergeScan<T, R>(\n  accumulator: (acc: R, value: T, index: number) => ObservableInput<R>,\n  seed: R,\n  concurrent = Infinity\n): OperatorFunction<T, R> {\n  return operate((source, subscriber) => {\n    // The accumulated state.\n    let state = seed;\n\n    return mergeInternals(\n      source,\n      subscriber,\n      (value, index) => accumulator(state, value, index),\n      concurrent,\n      (value) => {\n        state = value;\n      },\n      false,\n      undefined,\n      () => (state = null!)\n    );\n  });\n}\n","import { ObservableInputTuple, OperatorFunction } from '../types';\nimport { merge } from './merge';\n\n/**\n * Merge the values from all observables to a single observable result.\n *\n * Creates an observable, that when subscribed to, subscribes to the source\n * observable, and all other sources provided as arguments. All values from\n * every source are emitted from the resulting subscription.\n *\n * When all sources complete, the resulting observable will complete.\n *\n * When any source errors, the resulting observable will error.\n *\n * ## Example\n *\n * Joining all outputs from multiple user input event streams\n *\n * ```ts\n * import { fromEvent, map, mergeWith } from 'rxjs';\n *\n * const clicks$ = fromEvent(document, 'click').pipe(map(() => 'click'));\n * const mousemoves$ = fromEvent(document, 'mousemove').pipe(map(() => 'mousemove'));\n * const dblclicks$ = fromEvent(document, 'dblclick').pipe(map(() => 'dblclick'));\n *\n * mousemoves$\n *   .pipe(mergeWith(clicks$, dblclicks$))\n *   .subscribe(x => console.log(x));\n *\n * // result (assuming user interactions)\n * // 'mousemove'\n * // 'mousemove'\n * // 'mousemove'\n * // 'click'\n * // 'click'\n * // 'dblclick'\n * ```\n *\n * @see {@link merge}\n *\n * @param otherSources the sources to combine the current source with.\n * @return A function that returns an Observable that merges the values from\n * all given Observables.\n */\nexport function mergeWith<T, A extends readonly unknown[]>(\n  ...otherSources: [...ObservableInputTuple<A>]\n): OperatorFunction<T, T | A[number]> {\n  return merge(...otherSources);\n}\n","import { reduce } from './reduce';\nimport { MonoTypeOperatorFunction } from '../types';\nimport { isFunction } from '../util/isFunction';\n\n/**\n * The Min operator operates on an Observable that emits numbers (or items that can be compared with a provided function),\n * and when source Observable completes it emits a single item: the item with the smallest value.\n *\n * ![](min.png)\n *\n * ## Examples\n *\n * Get the minimal value of a series of numbers\n *\n * ```ts\n * import { of, min } from 'rxjs';\n *\n * of(5, 4, 7, 2, 8)\n *   .pipe(min())\n *   .subscribe(x => console.log(x));\n *\n * // Outputs\n * // 2\n * ```\n *\n * Use a comparer function to get the minimal item\n *\n * ```ts\n * import { of, min } from 'rxjs';\n *\n * of(\n *   { age: 7, name: 'Foo' },\n *   { age: 5, name: 'Bar' },\n *   { age: 9, name: 'Beer' }\n * ).pipe(\n *   min((a, b) => a.age < b.age ? -1 : 1)\n * )\n * .subscribe(x => console.log(x.name));\n *\n * // Outputs\n * // 'Bar'\n * ```\n *\n * @see {@link max}\n *\n * @param {Function} [comparer] - Optional comparer function that it will use instead of its default to compare the\n * value of two items.\n * @return A function that returns an Observable that emits item with the\n * smallest value.\n */\nexport function min<T>(comparer?: (x: T, y: T) => number): MonoTypeOperatorFunction<T> {\n  return reduce(isFunction(comparer) ? (x, y) => (comparer(x, y) < 0 ? x : y) : (x, y) => (x < y ? x : y));\n}\n","import { Subject } from '../Subject';\nimport { Observable } from '../Observable';\nimport { ConnectableObservable } from '../observable/ConnectableObservable';\nimport { OperatorFunction, UnaryFunction, ObservedValueOf, ObservableInput } from '../types';\nimport { isFunction } from '../util/isFunction';\nimport { connect } from './connect';\n\n/**\n * An operator that creates a {@link ConnectableObservable}, that when connected,\n * with the `connect` method, will use the provided subject to multicast the values\n * from the source to all consumers.\n *\n * @param subject The subject to multicast through.\n * @return A function that returns a {@link ConnectableObservable}\n * @deprecated Will be removed in v8. To create a connectable observable, use {@link connectable}.\n * If you're using {@link refCount} after `multicast`, use the {@link share} operator instead.\n * `multicast(subject), refCount()` is equivalent to\n * `share({ connector: () => subject, resetOnError: false, resetOnComplete: false, resetOnRefCountZero: false })`.\n * Details: https://rxjs.dev/deprecations/multicasting\n */\nexport function multicast<T>(subject: Subject<T>): UnaryFunction<Observable<T>, ConnectableObservable<T>>;\n\n/**\n * Because this is deprecated in favor of the {@link connect} operator, and was otherwise poorly documented,\n * rather than duplicate the effort of documenting the same behavior, please see documentation for the\n * {@link connect} operator.\n *\n * @param subject The subject used to multicast.\n * @param selector A setup function to setup the multicast\n * @return A function that returns an observable that mirrors the observable returned by the selector.\n * @deprecated Will be removed in v8. Use the {@link connect} operator instead.\n * `multicast(subject, selector)` is equivalent to\n * `connect(selector, { connector: () => subject })`.\n * Details: https://rxjs.dev/deprecations/multicasting\n */\nexport function multicast<T, O extends ObservableInput<any>>(\n  subject: Subject<T>,\n  selector: (shared: Observable<T>) => O\n): OperatorFunction<T, ObservedValueOf<O>>;\n\n/**\n * An operator that creates a {@link ConnectableObservable}, that when connected,\n * with the `connect` method, will use the provided subject to multicast the values\n * from the source to all consumers.\n *\n * @param subjectFactory A factory that will be called to create the subject. Passing a function here\n * will cause the underlying subject to be \"reset\" on error, completion, or refCounted unsubscription of\n * the source.\n * @return A function that returns a {@link ConnectableObservable}\n * @deprecated Will be removed in v8. To create a connectable observable, use {@link connectable}.\n * If you're using {@link refCount} after `multicast`, use the {@link share} operator instead.\n * `multicast(() => new BehaviorSubject('test')), refCount()` is equivalent to\n * `share({ connector: () => new BehaviorSubject('test') })`.\n * Details: https://rxjs.dev/deprecations/multicasting\n */\nexport function multicast<T>(subjectFactory: () => Subject<T>): UnaryFunction<Observable<T>, ConnectableObservable<T>>;\n\n/**\n * Because this is deprecated in favor of the {@link connect} operator, and was otherwise poorly documented,\n * rather than duplicate the effort of documenting the same behavior, please see documentation for the\n * {@link connect} operator.\n *\n * @param subjectFactory A factory that creates the subject used to multicast.\n * @param selector A function to setup the multicast and select the output.\n * @return A function that returns an observable that mirrors the observable returned by the selector.\n * @deprecated Will be removed in v8. Use the {@link connect} operator instead.\n * `multicast(subjectFactory, selector)` is equivalent to\n * `connect(selector, { connector: subjectFactory })`.\n * Details: https://rxjs.dev/deprecations/multicasting\n */\nexport function multicast<T, O extends ObservableInput<any>>(\n  subjectFactory: () => Subject<T>,\n  selector: (shared: Observable<T>) => O\n): OperatorFunction<T, ObservedValueOf<O>>;\n\n/**\n * @deprecated Will be removed in v8. Use the {@link connectable} observable, the {@link connect} operator or the\n * {@link share} operator instead. See the overloads below for equivalent replacement examples of this operator's\n * behaviors.\n * Details: https://rxjs.dev/deprecations/multicasting\n */\nexport function multicast<T, R>(\n  subjectOrSubjectFactory: Subject<T> | (() => Subject<T>),\n  selector?: (source: Observable<T>) => Observable<R>\n): OperatorFunction<T, R> {\n  const subjectFactory = isFunction(subjectOrSubjectFactory) ? subjectOrSubjectFactory : () => subjectOrSubjectFactory;\n\n  if (isFunction(selector)) {\n    // If a selector function is provided, then we're a \"normal\" operator that isn't\n    // going to return a ConnectableObservable. We can use `connect` to do what we\n    // need to do.\n    return connect(selector, {\n      connector: subjectFactory,\n    });\n  }\n\n  return (source: Observable<T>) => new ConnectableObservable<any>(source, subjectFactory);\n}\n","/** @prettier */\nimport { MonoTypeOperatorFunction, SchedulerLike } from '../types';\nimport { executeSchedule } from '../util/executeSchedule';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\n\n/**\n * Re-emits all notifications from source Observable with specified scheduler.\n *\n * <span class=\"informal\">Ensure a specific scheduler is used, from outside of an Observable.</span>\n *\n * `observeOn` is an operator that accepts a scheduler as a first parameter, which will be used to reschedule\n * notifications emitted by the source Observable. It might be useful, if you do not have control over\n * internal scheduler of a given Observable, but want to control when its values are emitted nevertheless.\n *\n * Returned Observable emits the same notifications (nexted values, complete and error events) as the source Observable,\n * but rescheduled with provided scheduler. Note that this doesn't mean that source Observables internal\n * scheduler will be replaced in any way. Original scheduler still will be used, but when the source Observable emits\n * notification, it will be immediately scheduled again - this time with scheduler passed to `observeOn`.\n * An anti-pattern would be calling `observeOn` on Observable that emits lots of values synchronously, to split\n * that emissions into asynchronous chunks. For this to happen, scheduler would have to be passed into the source\n * Observable directly (usually into the operator that creates it). `observeOn` simply delays notifications a\n * little bit more, to ensure that they are emitted at expected moments.\n *\n * As a matter of fact, `observeOn` accepts second parameter, which specifies in milliseconds with what delay notifications\n * will be emitted. The main difference between {@link delay} operator and `observeOn` is that `observeOn`\n * will delay all notifications - including error notifications - while `delay` will pass through error\n * from source Observable immediately when it is emitted. In general it is highly recommended to use `delay` operator\n * for any kind of delaying of values in the stream, while using `observeOn` to specify which scheduler should be used\n * for notification emissions in general.\n *\n * ## Example\n *\n * Ensure values in subscribe are called just before browser repaint\n *\n * ```ts\n * import { interval, observeOn, animationFrameScheduler } from 'rxjs';\n *\n * const someDiv = document.createElement('div');\n * someDiv.style.cssText = 'width: 200px;background: #09c';\n * document.body.appendChild(someDiv);\n * const intervals = interval(10);      // Intervals are scheduled\n *                                      // with async scheduler by default...\n * intervals.pipe(\n *   observeOn(animationFrameScheduler) // ...but we will observe on animationFrame\n * )                                    // scheduler to ensure smooth animation.\n * .subscribe(val => {\n *   someDiv.style.height = val + 'px';\n * });\n * ```\n *\n * @see {@link delay}\n *\n * @param scheduler Scheduler that will be used to reschedule notifications from source Observable.\n * @param delay Number of milliseconds that states with what delay every notification should be rescheduled.\n * @return A function that returns an Observable that emits the same\n * notifications as the source Observable, but with provided scheduler.\n */\nexport function observeOn<T>(scheduler: SchedulerLike, delay = 0): MonoTypeOperatorFunction<T> {\n  return operate((source, subscriber) => {\n    source.subscribe(\n      createOperatorSubscriber(\n        subscriber,\n        (value) => executeSchedule(subscriber, scheduler, () => subscriber.next(value), delay),\n        () => executeSchedule(subscriber, scheduler, () => subscriber.complete(), delay),\n        (err) => executeSchedule(subscriber, scheduler, () => subscriber.error(err), delay)\n      )\n    );\n  });\n}\n","import { Observable } from '../Observable';\nimport { ObservableInputTuple, OperatorFunction } from '../types';\nimport { operate } from '../util/lift';\nimport { innerFrom } from '../observable/innerFrom';\nimport { argsOrArgArray } from '../util/argsOrArgArray';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nimport { noop } from '../util/noop';\n\nexport function onErrorResumeNext<T, A extends readonly unknown[]>(\n  sources: [...ObservableInputTuple<A>]\n): OperatorFunction<T, T | A[number]>;\nexport function onErrorResumeNext<T, A extends readonly unknown[]>(\n  ...sources: [...ObservableInputTuple<A>]\n): OperatorFunction<T, T | A[number]>;\n\n/**\n * When any of the provided Observable emits an complete or error notification, it immediately subscribes to the next one\n * that was passed.\n *\n * <span class=\"informal\">Execute series of Observables, subscribes to next one on error or complete.</span>\n *\n * ![](onErrorResumeNext.png)\n *\n * `onErrorResumeNext` is an operator that accepts a series of Observables, provided either directly as\n * arguments or as an array. If no single Observable is provided, returned Observable will simply behave the same\n * as the source.\n *\n * `onErrorResumeNext` returns an Observable that starts by subscribing and re-emitting values from the source Observable.\n * When its stream of values ends - no matter if Observable completed or emitted an error - `onErrorResumeNext`\n * will subscribe to the first Observable that was passed as an argument to the method. It will start re-emitting\n * its values as well and - again - when that stream ends, `onErrorResumeNext` will proceed to subscribing yet another\n * Observable in provided series, no matter if previous Observable completed or ended with an error. This will\n * be happening until there is no more Observables left in the series, at which point returned Observable will\n * complete - even if the last subscribed stream ended with an error.\n *\n * `onErrorResumeNext` can be therefore thought of as version of {@link concat} operator, which is more permissive\n * when it comes to the errors emitted by its input Observables. While `concat` subscribes to the next Observable\n * in series only if previous one successfully completed, `onErrorResumeNext` subscribes even if it ended with\n * an error.\n *\n * Note that you do not get any access to errors emitted by the Observables. In particular do not\n * expect these errors to appear in error callback passed to {@link Observable#subscribe}. If you want to take\n * specific actions based on what error was emitted by an Observable, you should try out {@link catchError} instead.\n *\n *\n * ## Example\n *\n * Subscribe to the next Observable after map fails\n *\n * ```ts\n * import { of, onErrorResumeNext, map } from 'rxjs';\n *\n * of(1, 2, 3, 0)\n *   .pipe(\n *     map(x => {\n *       if (x === 0) {\n *         throw Error();\n *       }\n *\n *       return 10 / x;\n *     }),\n *     onErrorResumeNext(of(1, 2, 3))\n *   )\n *   .subscribe({\n *     next: val => console.log(val),\n *     error: err => console.log(err),          // Will never be called.\n *     complete: () => console.log('that\\'s it!')\n *   });\n *\n * // Logs:\n * // 10\n * // 5\n * // 3.3333333333333335\n * // 1\n * // 2\n * // 3\n * // 'that's it!'\n * ```\n *\n * @see {@link concat}\n * @see {@link catchError}\n *\n * @param {...ObservableInput} sources Observables passed either directly or as an array.\n * @return A function that returns an Observable that emits values from source\n * Observable, but - if it errors - subscribes to the next passed Observable\n * and so on, until it completes or runs out of Observables.\n */\nexport function onErrorResumeNext<T, A extends readonly unknown[]>(\n  ...sources: [[...ObservableInputTuple<A>]] | [...ObservableInputTuple<A>]\n): OperatorFunction<T, T | A[number]> {\n  // For some reason, TS 4.1 RC gets the inference wrong here and infers the\n  // result to be `A[number][]` - completely dropping the ObservableInput part\n  // of the type. This makes no sense whatsoever. As a workaround, the type is\n  // asserted explicitly.\n  const nextSources = argsOrArgArray(sources) as unknown as ObservableInputTuple<A>;\n\n  return operate((source, subscriber) => {\n    const remaining = [source, ...nextSources];\n    const subscribeNext = () => {\n      if (!subscriber.closed) {\n        if (remaining.length > 0) {\n          let nextSource: Observable<A[number]>;\n          try {\n            nextSource = innerFrom(remaining.shift()!);\n          } catch (err) {\n            subscribeNext();\n            return;\n          }\n\n          // Here we have to use one of our Subscribers, or it does not wire up\n          // The `closed` property of upstream Subscribers synchronously, that\n          // would result in situation were we could not stop a synchronous firehose\n          // with something like `take(3)`.\n          const innerSub = createOperatorSubscriber(subscriber, undefined, noop, noop);\n          nextSource.subscribe(innerSub);\n          innerSub.add(subscribeNext);\n        } else {\n          subscriber.complete();\n        }\n      }\n    };\n\n    subscribeNext();\n  });\n}\n","import { OperatorFunction } from '../types';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\n\n/**\n * Groups pairs of consecutive emissions together and emits them as an array of\n * two values.\n *\n * <span class=\"informal\">Puts the current value and previous value together as\n * an array, and emits that.</span>\n *\n * ![](pairwise.png)\n *\n * The Nth emission from the source Observable will cause the output Observable\n * to emit an array [(N-1)th, Nth] of the previous and the current value, as a\n * pair. For this reason, `pairwise` emits on the second and subsequent\n * emissions from the source Observable, but not on the first emission, because\n * there is no previous value in that case.\n *\n * ## Example\n *\n * On every click (starting from the second), emit the relative distance to the previous click\n *\n * ```ts\n * import { fromEvent, pairwise, map } from 'rxjs';\n *\n * const clicks = fromEvent<PointerEvent>(document, 'click');\n * const pairs = clicks.pipe(pairwise());\n * const distance = pairs.pipe(\n *   map(([first, second]) => {\n *     const x0 = first.clientX;\n *     const y0 = first.clientY;\n *     const x1 = second.clientX;\n *     const y1 = second.clientY;\n *     return Math.sqrt(Math.pow(x0 - x1, 2) + Math.pow(y0 - y1, 2));\n *   })\n * );\n *\n * distance.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link buffer}\n * @see {@link bufferCount}\n *\n * @return A function that returns an Observable of pairs (as arrays) of\n * consecutive values from the source Observable.\n */\nexport function pairwise<T>(): OperatorFunction<T, [T, T]> {\n  return operate((source, subscriber) => {\n    let prev: T;\n    let hasPrev = false;\n    source.subscribe(\n      createOperatorSubscriber(subscriber, (value) => {\n        const p = prev;\n        prev = value;\n        hasPrev && subscriber.next([p, value]);\n        hasPrev = true;\n      })\n    );\n  });\n}\n","import { map } from './map';\nimport { OperatorFunction } from '../types';\n\n/* tslint:disable:max-line-length */\n/** @deprecated Use {@link map} and optional chaining: `pluck('foo', 'bar')` is `map(x => x?.foo?.bar)`. Will be removed in v8. */\nexport function pluck<T, K1 extends keyof T>(k1: K1): OperatorFunction<T, T[K1]>;\n/** @deprecated Use {@link map} and optional chaining: `pluck('foo', 'bar')` is `map(x => x?.foo?.bar)`. Will be removed in v8. */\nexport function pluck<T, K1 extends keyof T, K2 extends keyof T[K1]>(k1: K1, k2: K2): OperatorFunction<T, T[K1][K2]>;\n/** @deprecated Use {@link map} and optional chaining: `pluck('foo', 'bar')` is `map(x => x?.foo?.bar)`. Will be removed in v8. */\nexport function pluck<T, K1 extends keyof T, K2 extends keyof T[K1], K3 extends keyof T[K1][K2]>(\n  k1: K1,\n  k2: K2,\n  k3: K3\n): OperatorFunction<T, T[K1][K2][K3]>;\n/** @deprecated Use {@link map} and optional chaining: `pluck('foo', 'bar')` is `map(x => x?.foo?.bar)`. Will be removed in v8. */\nexport function pluck<T, K1 extends keyof T, K2 extends keyof T[K1], K3 extends keyof T[K1][K2], K4 extends keyof T[K1][K2][K3]>(\n  k1: K1,\n  k2: K2,\n  k3: K3,\n  k4: K4\n): OperatorFunction<T, T[K1][K2][K3][K4]>;\n/** @deprecated Use {@link map} and optional chaining: `pluck('foo', 'bar')` is `map(x => x?.foo?.bar)`. Will be removed in v8. */\nexport function pluck<\n  T,\n  K1 extends keyof T,\n  K2 extends keyof T[K1],\n  K3 extends keyof T[K1][K2],\n  K4 extends keyof T[K1][K2][K3],\n  K5 extends keyof T[K1][K2][K3][K4]\n>(k1: K1, k2: K2, k3: K3, k4: K4, k5: K5): OperatorFunction<T, T[K1][K2][K3][K4][K5]>;\n/** @deprecated Use {@link map} and optional chaining: `pluck('foo', 'bar')` is `map(x => x?.foo?.bar)`. Will be removed in v8. */\nexport function pluck<\n  T,\n  K1 extends keyof T,\n  K2 extends keyof T[K1],\n  K3 extends keyof T[K1][K2],\n  K4 extends keyof T[K1][K2][K3],\n  K5 extends keyof T[K1][K2][K3][K4],\n  K6 extends keyof T[K1][K2][K3][K4][K5]\n>(k1: K1, k2: K2, k3: K3, k4: K4, k5: K5, k6: K6): OperatorFunction<T, T[K1][K2][K3][K4][K5][K6]>;\n/** @deprecated Use {@link map} and optional chaining: `pluck('foo', 'bar')` is `map(x => x?.foo?.bar)`. Will be removed in v8. */\nexport function pluck<\n  T,\n  K1 extends keyof T,\n  K2 extends keyof T[K1],\n  K3 extends keyof T[K1][K2],\n  K4 extends keyof T[K1][K2][K3],\n  K5 extends keyof T[K1][K2][K3][K4],\n  K6 extends keyof T[K1][K2][K3][K4][K5]\n>(k1: K1, k2: K2, k3: K3, k4: K4, k5: K5, k6: K6, ...rest: string[]): OperatorFunction<T, unknown>;\n/** @deprecated Use {@link map} and optional chaining: `pluck('foo', 'bar')` is `map(x => x?.foo?.bar)`. Will be removed in v8. */\nexport function pluck<T>(...properties: string[]): OperatorFunction<T, unknown>;\n/* tslint:enable:max-line-length */\n\n/**\n * Maps each source value to its specified nested property.\n *\n * <span class=\"informal\">Like {@link map}, but meant only for picking one of\n * the nested properties of every emitted value.</span>\n *\n * ![](pluck.png)\n *\n * Given a list of strings or numbers describing a path to a property, retrieves\n * the value of a specified nested property from all values in the source\n * Observable. If a property can't be resolved, it will return `undefined` for\n * that value.\n *\n * ## Example\n *\n * Map every click to the tagName of the clicked target element\n *\n * ```ts\n * import { fromEvent, pluck } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const tagNames = clicks.pipe(pluck('target', 'tagName'));\n *\n * tagNames.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link map}\n *\n * @param properties The nested properties to pluck from each source\n * value.\n * @return A function that returns an Observable of property values from the\n * source values.\n * @deprecated Use {@link map} and optional chaining: `pluck('foo', 'bar')` is `map(x => x?.foo?.bar)`. Will be removed in v8.\n */\nexport function pluck<T, R>(...properties: Array<string | number | symbol>): OperatorFunction<T, R> {\n  const length = properties.length;\n  if (length === 0) {\n    throw new Error('list of properties cannot be empty.');\n  }\n  return map((x) => {\n    let currentProp: any = x;\n    for (let i = 0; i < length; i++) {\n      const p = currentProp?.[properties[i]];\n      if (typeof p !== 'undefined') {\n        currentProp = p;\n      } else {\n        return undefined;\n      }\n    }\n    return currentProp;\n  });\n}\n","import { Observable } from '../Observable';\nimport { Subject } from '../Subject';\nimport { multicast } from './multicast';\nimport { ConnectableObservable } from '../observable/ConnectableObservable';\nimport { MonoTypeOperatorFunction, OperatorFunction, UnaryFunction, ObservableInput, ObservedValueOf } from '../types';\nimport { connect } from './connect';\n\n/**\n * Returns a connectable observable that, when connected, will multicast\n * all values through a single underlying {@link Subject} instance.\n *\n * @deprecated Will be removed in v8. To create a connectable observable, use {@link connectable}.\n * `source.pipe(publish())` is equivalent to\n * `connectable(source, { connector: () => new Subject(), resetOnDisconnect: false })`.\n * If you're using {@link refCount} after `publish`, use {@link share} operator instead.\n * `source.pipe(publish(), refCount())` is equivalent to\n * `source.pipe(share({ resetOnError: false, resetOnComplete: false, resetOnRefCountZero: false }))`.\n * Details: https://rxjs.dev/deprecations/multicasting\n */\nexport function publish<T>(): UnaryFunction<Observable<T>, ConnectableObservable<T>>;\n\n/**\n * Returns an observable, that when subscribed to, creates an underlying {@link Subject},\n * provides an observable view of it to a `selector` function, takes the observable result of\n * that selector function and subscribes to it, sending its values to the consumer, _then_ connects\n * the subject to the original source.\n *\n * @param selector A function used to setup multicasting prior to automatic connection.\n *\n * @deprecated Will be removed in v8. Use the {@link connect} operator instead.\n * `publish(selector)` is equivalent to `connect(selector)`.\n * Details: https://rxjs.dev/deprecations/multicasting\n */\nexport function publish<T, O extends ObservableInput<any>>(selector: (shared: Observable<T>) => O): OperatorFunction<T, ObservedValueOf<O>>;\n\n/**\n * Returns a ConnectableObservable, which is a variety of Observable that waits until its connect method is called\n * before it begins emitting items to those Observers that have subscribed to it.\n *\n * <span class=\"informal\">Makes a cold Observable hot</span>\n *\n * ![](publish.png)\n *\n * ## Examples\n *\n * Make `source$` hot by applying `publish` operator, then merge each inner observable into a single one\n * and subscribe\n *\n * ```ts\n * import { zip, interval, of, map, publish, merge, tap } from 'rxjs';\n *\n * const source$ = zip(interval(2000), of(1, 2, 3, 4, 5, 6, 7, 8, 9))\n *   .pipe(map(([, number]) => number));\n *\n * source$\n *   .pipe(\n *     publish(multicasted$ =>\n *       merge(\n *         multicasted$.pipe(tap(x => console.log('Stream 1:', x))),\n *         multicasted$.pipe(tap(x => console.log('Stream 2:', x))),\n *         multicasted$.pipe(tap(x => console.log('Stream 3:', x)))\n *       )\n *     )\n *   )\n *   .subscribe();\n *\n * // Results every two seconds\n * // Stream 1: 1\n * // Stream 2: 1\n * // Stream 3: 1\n * // ...\n * // Stream 1: 9\n * // Stream 2: 9\n * // Stream 3: 9\n * ```\n *\n * @see {@link publishLast}\n * @see {@link publishReplay}\n * @see {@link publishBehavior}\n *\n * @param {Function} [selector] - Optional selector function which can use the multicasted source sequence as many times\n * as needed, without causing multiple subscriptions to the source sequence.\n * Subscribers to the given source will receive all notifications of the source from the time of the subscription on.\n * @return A function that returns a ConnectableObservable that upon connection\n * causes the source Observable to emit items to its Observers.\n * @deprecated Will be removed in v8. Use the {@link connectable} observable, the {@link connect} operator or the\n * {@link share} operator instead. See the overloads below for equivalent replacement examples of this operator's\n * behaviors.\n * Details: https://rxjs.dev/deprecations/multicasting\n */\nexport function publish<T, R>(selector?: OperatorFunction<T, R>): MonoTypeOperatorFunction<T> | OperatorFunction<T, R> {\n  return selector ? (source) => connect(selector)(source) : (source) => multicast(new Subject<T>())(source);\n}\n","import { Observable } from '../Observable';\nimport { BehaviorSubject } from '../BehaviorSubject';\nimport { ConnectableObservable } from '../observable/ConnectableObservable';\nimport { UnaryFunction } from '../types';\n\n/**\n * Creates a {@link ConnectableObservable} that utilizes a {@link BehaviorSubject}.\n *\n * @param initialValue The initial value passed to the {@link BehaviorSubject}.\n * @return A function that returns a {@link ConnectableObservable}\n * @deprecated Will be removed in v8. To create a connectable observable that uses a\n * {@link BehaviorSubject} under the hood, use {@link connectable}.\n * `source.pipe(publishBehavior(initValue))` is equivalent to\n * `connectable(source, { connector: () => new BehaviorSubject(initValue), resetOnDisconnect: false })`.\n * If you're using {@link refCount} after `publishBehavior`, use the {@link share} operator instead.\n * `source.pipe(publishBehavior(initValue), refCount())` is equivalent to\n * `source.pipe(share({ connector: () => new BehaviorSubject(initValue), resetOnError: false, resetOnComplete: false, resetOnRefCountZero: false  }))`.\n * Details: https://rxjs.dev/deprecations/multicasting\n */\nexport function publishBehavior<T>(initialValue: T): UnaryFunction<Observable<T>, ConnectableObservable<T>> {\n  // Note that this has *never* supported the selector function.\n  return (source) => {\n    const subject = new BehaviorSubject<T>(initialValue);\n    return new ConnectableObservable(source, () => subject);\n  };\n}\n","import { Observable } from '../Observable';\nimport { AsyncSubject } from '../AsyncSubject';\nimport { ConnectableObservable } from '../observable/ConnectableObservable';\nimport { UnaryFunction } from '../types';\n\n/**\n * Returns a connectable observable sequence that shares a single subscription to the\n * underlying sequence containing only the last notification.\n *\n * ![](publishLast.png)\n *\n * Similar to {@link publish}, but it waits until the source observable completes and stores\n * the last emitted value.\n * Similarly to {@link publishReplay} and {@link publishBehavior}, this keeps storing the last\n * value even if it has no more subscribers. If subsequent subscriptions happen, they will\n * immediately get that last stored value and complete.\n *\n * ## Example\n *\n * ```ts\n * import { ConnectableObservable, interval, publishLast, tap, take } from 'rxjs';\n *\n * const connectable = <ConnectableObservable<number>>interval(1000)\n *   .pipe(\n *     tap(x => console.log('side effect', x)),\n *     take(3),\n *     publishLast()\n *   );\n *\n * connectable.subscribe({\n *   next: x => console.log('Sub. A', x),\n *   error: err => console.log('Sub. A Error', err),\n *   complete: () => console.log('Sub. A Complete')\n * });\n *\n * connectable.subscribe({\n *   next: x => console.log('Sub. B', x),\n *   error: err => console.log('Sub. B Error', err),\n *   complete: () => console.log('Sub. B Complete')\n * });\n *\n * connectable.connect();\n *\n * // Results:\n * // 'side effect 0'   - after one second\n * // 'side effect 1'   - after two seconds\n * // 'side effect 2'   - after three seconds\n * // 'Sub. A 2'        - immediately after 'side effect 2'\n * // 'Sub. B 2'\n * // 'Sub. A Complete'\n * // 'Sub. B Complete'\n * ```\n *\n * @see {@link ConnectableObservable}\n * @see {@link publish}\n * @see {@link publishReplay}\n * @see {@link publishBehavior}\n *\n * @return A function that returns an Observable that emits elements of a\n * sequence produced by multicasting the source sequence.\n * @deprecated Will be removed in v8. To create a connectable observable with an\n * {@link AsyncSubject} under the hood, use {@link connectable}.\n * `source.pipe(publishLast())` is equivalent to\n * `connectable(source, { connector: () => new AsyncSubject(), resetOnDisconnect: false })`.\n * If you're using {@link refCount} after `publishLast`, use the {@link share} operator instead.\n * `source.pipe(publishLast(), refCount())` is equivalent to\n * `source.pipe(share({ connector: () => new AsyncSubject(), resetOnError: false, resetOnComplete: false, resetOnRefCountZero: false }))`.\n * Details: https://rxjs.dev/deprecations/multicasting\n */\nexport function publishLast<T>(): UnaryFunction<Observable<T>, ConnectableObservable<T>> {\n  // Note that this has *never* supported a selector function like `publish` and `publishReplay`.\n  return (source) => {\n    const subject = new AsyncSubject<T>();\n    return new ConnectableObservable(source, () => subject);\n  };\n}\n","import { Observable } from '../Observable';\nimport { ReplaySubject } from '../ReplaySubject';\nimport { multicast } from './multicast';\nimport { MonoTypeOperatorFunction, OperatorFunction, TimestampProvider, ObservableInput, ObservedValueOf } from '../types';\nimport { isFunction } from '../util/isFunction';\n\n/**\n * Creates a {@link ConnectableObservable} that uses a {@link ReplaySubject}\n * internally.\n *\n * @param bufferSize The buffer size for the underlying {@link ReplaySubject}.\n * @param windowTime The window time for the underlying {@link ReplaySubject}.\n * @param timestampProvider The timestamp provider for the underlying {@link ReplaySubject}.\n * @deprecated Will be removed in v8. To create a connectable observable that uses a\n * {@link ReplaySubject} under the hood, use {@link connectable}.\n * `source.pipe(publishReplay(size, time, scheduler))` is equivalent to\n * `connectable(source, { connector: () => new ReplaySubject(size, time, scheduler), resetOnDisconnect: false })`.\n * If you're using {@link refCount} after `publishReplay`, use the {@link share} operator instead.\n * `publishReplay(size, time, scheduler), refCount()` is equivalent to\n * `share({ connector: () => new ReplaySubject(size, time, scheduler), resetOnError: false, resetOnComplete: false, resetOnRefCountZero: false })`.\n * Details: https://rxjs.dev/deprecations/multicasting\n */\nexport function publishReplay<T>(\n  bufferSize?: number,\n  windowTime?: number,\n  timestampProvider?: TimestampProvider\n): MonoTypeOperatorFunction<T>;\n\n/**\n * Creates an observable, that when subscribed to, will create a {@link ReplaySubject},\n * and pass an observable from it (using [asObservable](api/index/class/Subject#asObservable)) to\n * the `selector` function, which then returns an observable that is subscribed to before\n * \"connecting\" the source to the internal `ReplaySubject`.\n *\n * Since this is deprecated, for additional details see the documentation for {@link connect}.\n *\n * @param bufferSize The buffer size for the underlying {@link ReplaySubject}.\n * @param windowTime The window time for the underlying {@link ReplaySubject}.\n * @param selector A function used to setup the multicast.\n * @param timestampProvider The timestamp provider for the underlying {@link ReplaySubject}.\n * @deprecated Will be removed in v8. Use the {@link connect} operator instead.\n * `source.pipe(publishReplay(size, window, selector, scheduler))` is equivalent to\n * `source.pipe(connect(selector, { connector: () => new ReplaySubject(size, window, scheduler) }))`.\n * Details: https://rxjs.dev/deprecations/multicasting\n */\nexport function publishReplay<T, O extends ObservableInput<any>>(\n  bufferSize: number | undefined,\n  windowTime: number | undefined,\n  selector: (shared: Observable<T>) => O,\n  timestampProvider?: TimestampProvider\n): OperatorFunction<T, ObservedValueOf<O>>;\n\n/**\n * Creates a {@link ConnectableObservable} that uses a {@link ReplaySubject}\n * internally.\n *\n * @param bufferSize The buffer size for the underlying {@link ReplaySubject}.\n * @param windowTime The window time for the underlying {@link ReplaySubject}.\n * @param selector Passing `undefined` here determines that this operator will return a {@link ConnectableObservable}.\n * @param timestampProvider The timestamp provider for the underlying {@link ReplaySubject}.\n * @deprecated Will be removed in v8. To create a connectable observable that uses a\n * {@link ReplaySubject} under the hood, use {@link connectable}.\n * `source.pipe(publishReplay(size, time, scheduler))` is equivalent to\n * `connectable(source, { connector: () => new ReplaySubject(size, time, scheduler), resetOnDisconnect: false })`.\n * If you're using {@link refCount} after `publishReplay`, use the {@link share} operator instead.\n * `publishReplay(size, time, scheduler), refCount()` is equivalent to\n * `share({ connector: () => new ReplaySubject(size, time, scheduler), resetOnError: false, resetOnComplete: false, resetOnRefCountZero: false })`.\n * Details: https://rxjs.dev/deprecations/multicasting\n */\nexport function publishReplay<T, O extends ObservableInput<any>>(\n  bufferSize: number | undefined,\n  windowTime: number | undefined,\n  selector: undefined,\n  timestampProvider: TimestampProvider\n): OperatorFunction<T, ObservedValueOf<O>>;\n\n/**\n * @deprecated Will be removed in v8. Use the {@link connectable} observable, the {@link connect} operator or the\n * {@link share} operator instead. See the overloads below for equivalent replacement examples of this operator's\n * behaviors.\n * Details: https://rxjs.dev/deprecations/multicasting\n */\nexport function publishReplay<T, R>(\n  bufferSize?: number,\n  windowTime?: number,\n  selectorOrScheduler?: TimestampProvider | OperatorFunction<T, R>,\n  timestampProvider?: TimestampProvider\n) {\n  if (selectorOrScheduler && !isFunction(selectorOrScheduler)) {\n    timestampProvider = selectorOrScheduler;\n  }\n  const selector = isFunction(selectorOrScheduler) ? selectorOrScheduler : undefined;\n  // Note, we're passing `selector!` here, because at runtime, `undefined` is an acceptable argument\n  // but it makes our TypeScript signature for `multicast` unhappy (as it should, because it's gross).\n  return (source: Observable<T>) => multicast(new ReplaySubject<T>(bufferSize, windowTime, timestampProvider), selector!)(source);\n}\n","import { OperatorFunction, ObservableInputTuple } from '../types';\nimport { raceInit } from '../observable/race';\nimport { operate } from '../util/lift';\nimport { identity } from '../util/identity';\n\n/**\n * Creates an Observable that mirrors the first source Observable to emit a next,\n * error or complete notification from the combination of the Observable to which\n * the operator is applied and supplied Observables.\n *\n * ## Example\n *\n * ```ts\n * import { interval, map, raceWith } from 'rxjs';\n *\n * const obs1 = interval(7000).pipe(map(() => 'slow one'));\n * const obs2 = interval(3000).pipe(map(() => 'fast one'));\n * const obs3 = interval(5000).pipe(map(() => 'medium one'));\n *\n * obs1\n *   .pipe(raceWith(obs2, obs3))\n *   .subscribe(winner => console.log(winner));\n *\n * // Outputs\n * // a series of 'fast one'\n * ```\n *\n * @param otherSources Sources used to race for which Observable emits first.\n * @return A function that returns an Observable that mirrors the output of the\n * first Observable to emit an item.\n */\nexport function raceWith<T, A extends readonly unknown[]>(\n  ...otherSources: [...ObservableInputTuple<A>]\n): OperatorFunction<T, T | A[number]> {\n  return !otherSources.length\n    ? identity\n    : operate((source, subscriber) => {\n        raceInit<T | A[number]>([source, ...otherSources])(subscriber);\n      });\n}\n","import { scanInternals } from './scanInternals';\nimport { OperatorFunction } from '../types';\nimport { operate } from '../util/lift';\n\nexport function reduce<V, A = V>(accumulator: (acc: A | V, value: V, index: number) => A): OperatorFunction<V, V | A>;\nexport function reduce<V, A>(accumulator: (acc: A, value: V, index: number) => A, seed: A): OperatorFunction<V, A>;\nexport function reduce<V, A, S = A>(accumulator: (acc: A | S, value: V, index: number) => A, seed: S): OperatorFunction<V, A>;\n\n/**\n * Applies an accumulator function over the source Observable, and returns the\n * accumulated result when the source completes, given an optional seed value.\n *\n * <span class=\"informal\">Combines together all values emitted on the source,\n * using an accumulator function that knows how to join a new source value into\n * the accumulation from the past.</span>\n *\n * ![](reduce.png)\n *\n * Like\n * [Array.prototype.reduce()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce),\n * `reduce` applies an `accumulator` function against an accumulation and each\n * value of the source Observable (from the past) to reduce it to a single\n * value, emitted on the output Observable. Note that `reduce` will only emit\n * one value, only when the source Observable completes. It is equivalent to\n * applying operator {@link scan} followed by operator {@link last}.\n *\n * Returns an Observable that applies a specified `accumulator` function to each\n * item emitted by the source Observable. If a `seed` value is specified, then\n * that value will be used as the initial value for the accumulator. If no seed\n * value is specified, the first item of the source is used as the seed.\n *\n * ## Example\n *\n * Count the number of click events that happened in 5 seconds\n *\n * ```ts\n * import { fromEvent, takeUntil, interval, map, reduce } from 'rxjs';\n *\n * const clicksInFiveSeconds = fromEvent(document, 'click')\n *   .pipe(takeUntil(interval(5000)));\n *\n * const ones = clicksInFiveSeconds.pipe(map(() => 1));\n * const seed = 0;\n * const count = ones.pipe(reduce((acc, one) => acc + one, seed));\n *\n * count.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link count}\n * @see {@link expand}\n * @see {@link mergeScan}\n * @see {@link scan}\n *\n * @param {function(acc: A, value: V, index: number): A} accumulator The accumulator function\n * called on each source value.\n * @param {A} [seed] The initial accumulation value.\n * @return A function that returns an Observable that emits a single value that\n * is the result of accumulating the values emitted by the source Observable.\n */\nexport function reduce<V, A>(accumulator: (acc: V | A, value: V, index: number) => A, seed?: any): OperatorFunction<V, V | A> {\n  return operate(scanInternals(accumulator, seed, arguments.length >= 2, false, true));\n}\n","import { ConnectableObservable } from '../observable/ConnectableObservable';\nimport { Subscription } from '../Subscription';\nimport { MonoTypeOperatorFunction } from '../types';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\n\n/**\n * Make a {@link ConnectableObservable} behave like a ordinary observable and automates the way\n * you can connect to it.\n *\n * Internally it counts the subscriptions to the observable and subscribes (only once) to the source if\n * the number of subscriptions is larger than 0. If the number of subscriptions is smaller than 1, it\n * unsubscribes from the source. This way you can make sure that everything before the *published*\n * refCount has only a single subscription independently of the number of subscribers to the target\n * observable.\n *\n * Note that using the {@link share} operator is exactly the same as using the `multicast(() => new Subject())` operator\n * (making the observable hot) and the *refCount* operator in a sequence.\n *\n * ![](refCount.png)\n *\n * ## Example\n *\n * In the following example there are two intervals turned into connectable observables\n * by using the *publish* operator. The first one uses the *refCount* operator, the\n * second one does not use it. You will notice that a connectable observable does nothing\n * until you call its connect function.\n *\n * ```ts\n * import { interval, tap, publish, refCount } from 'rxjs';\n *\n * // Turn the interval observable into a ConnectableObservable (hot)\n * const refCountInterval = interval(400).pipe(\n *   tap(num => console.log(`refCount ${ num }`)),\n *   publish(),\n *   refCount()\n * );\n *\n * const publishedInterval = interval(400).pipe(\n *   tap(num => console.log(`publish ${ num }`)),\n *   publish()\n * );\n *\n * refCountInterval.subscribe();\n * refCountInterval.subscribe();\n * // 'refCount 0' -----> 'refCount 1' -----> etc\n * // All subscriptions will receive the same value and the tap (and\n * // every other operator) before the `publish` operator will be executed\n * // only once per event independently of the number of subscriptions.\n *\n * publishedInterval.subscribe();\n * // Nothing happens until you call .connect() on the observable.\n * ```\n *\n * @return A function that returns an Observable that automates the connection\n * to ConnectableObservable.\n * @see {@link ConnectableObservable}\n * @see {@link share}\n * @see {@link publish}\n * @deprecated Replaced with the {@link share} operator. How `share` is used\n * will depend on the connectable observable you created just prior to the\n * `refCount` operator.\n * Details: https://rxjs.dev/deprecations/multicasting\n */\nexport function refCount<T>(): MonoTypeOperatorFunction<T> {\n  return operate((source, subscriber) => {\n    let connection: Subscription | null = null;\n\n    (source as any)._refCount++;\n\n    const refCounter = createOperatorSubscriber(subscriber, undefined, undefined, undefined, () => {\n      if (!source || (source as any)._refCount <= 0 || 0 < --(source as any)._refCount) {\n        connection = null;\n        return;\n      }\n\n      ///\n      // Compare the local RefCountSubscriber's connection Subscription to the\n      // connection Subscription on the shared ConnectableObservable. In cases\n      // where the ConnectableObservable source synchronously emits values, and\n      // the RefCountSubscriber's downstream Observers synchronously unsubscribe,\n      // execution continues to here before the RefCountOperator has a chance to\n      // supply the RefCountSubscriber with the shared connection Subscription.\n      // For example:\n      // ```\n      // range(0, 10).pipe(\n      //   publish(),\n      //   refCount(),\n      //   take(5),\n      // )\n      // .subscribe();\n      // ```\n      // In order to account for this case, RefCountSubscriber should only dispose\n      // the ConnectableObservable's shared connection Subscription if the\n      // connection Subscription exists, *and* either:\n      //   a. RefCountSubscriber doesn't have a reference to the shared connection\n      //      Subscription yet, or,\n      //   b. RefCountSubscriber's connection Subscription reference is identical\n      //      to the shared connection Subscription\n      ///\n\n      const sharedConnection = (source as any)._connection;\n      const conn = connection;\n      connection = null;\n\n      if (sharedConnection && (!conn || sharedConnection === conn)) {\n        sharedConnection.unsubscribe();\n      }\n\n      subscriber.unsubscribe();\n    });\n\n    source.subscribe(refCounter);\n\n    if (!refCounter.closed) {\n      connection = (source as ConnectableObservable<T>).connect();\n    }\n  });\n}\n","import { Subscription } from '../Subscription';\nimport { EMPTY } from '../observable/empty';\nimport { operate } from '../util/lift';\nimport { MonoTypeOperatorFunction, ObservableInput } from '../types';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nimport { innerFrom } from '../observable/innerFrom';\nimport { timer } from '../observable/timer';\n\nexport interface RepeatConfig {\n  /**\n   * The number of times to repeat the source. Defaults to `Infinity`.\n   */\n  count?: number;\n\n  /**\n   * If a `number`, will delay the repeat of the source by that number of milliseconds.\n   * If a function, it will provide the number of times the source has been subscribed to,\n   * and the return value should be a valid observable input that will notify when the source\n   * should be repeated. If the notifier observable is empty, the result will complete.\n   */\n  delay?: number | ((count: number) => ObservableInput<any>);\n}\n\n/**\n * Returns an Observable that will resubscribe to the source stream when the source stream completes.\n *\n * <span class=\"informal\">Repeats all values emitted on the source. It's like {@link retry}, but for non error cases.</span>\n *\n * ![](repeat.png)\n *\n * Repeat will output values from a source until the source completes, then it will resubscribe to the\n * source a specified number of times, with a specified delay. Repeat can be particularly useful in\n * combination with closing operators like {@link take}, {@link takeUntil}, {@link first}, or {@link takeWhile},\n * as it can be used to restart a source again from scratch.\n *\n * Repeat is very similar to {@link retry}, where {@link retry} will resubscribe to the source in the error case, but\n * `repeat` will resubscribe if the source completes.\n *\n * Note that `repeat` will _not_ catch errors. Use {@link retry} for that.\n *\n * - `repeat(0)` returns an empty observable\n * - `repeat()` will repeat forever\n * - `repeat({ delay: 200 })` will repeat forever, with a delay of 200ms between repetitions.\n * - `repeat({ count: 2, delay: 400 })` will repeat twice, with a delay of 400ms between repetitions.\n * - `repeat({ delay: (count) => timer(count * 1000) })` will repeat forever, but will have a delay that grows by one second for each repetition.\n *\n * ## Example\n *\n * Repeat a message stream\n *\n * ```ts\n * import { of, repeat } from 'rxjs';\n *\n * const source = of('Repeat message');\n * const result = source.pipe(repeat(3));\n *\n * result.subscribe(x => console.log(x));\n *\n * // Results\n * // 'Repeat message'\n * // 'Repeat message'\n * // 'Repeat message'\n * ```\n *\n * Repeat 3 values, 2 times\n *\n * ```ts\n * import { interval, take, repeat } from 'rxjs';\n *\n * const source = interval(1000);\n * const result = source.pipe(take(3), repeat(2));\n *\n * result.subscribe(x => console.log(x));\n *\n * // Results every second\n * // 0\n * // 1\n * // 2\n * // 0\n * // 1\n * // 2\n * ```\n *\n * Defining two complex repeats with delays on the same source.\n * Note that the second repeat cannot be called until the first\n * repeat as exhausted it's count.\n *\n * ```ts\n * import { defer, of, repeat } from 'rxjs';\n *\n * const source = defer(() => {\n *    return of(`Hello, it is ${new Date()}`)\n * });\n *\n * source.pipe(\n *    // Repeat 3 times with a delay of 1 second between repetitions\n *    repeat({\n *      count: 3,\n *      delay: 1000,\n *    }),\n *\n *    // *Then* repeat forever, but with an exponential step-back\n *    // maxing out at 1 minute.\n *    repeat({\n *      delay: (count) => timer(Math.min(60000, 2 ^ count * 1000))\n *    })\n * )\n * ```\n *\n * @see {@link repeatWhen}\n * @see {@link retry}\n *\n * @param count The number of times the source Observable items are repeated, a count of 0 will yield\n * an empty Observable.\n */\nexport function repeat<T>(countOrConfig?: number | RepeatConfig): MonoTypeOperatorFunction<T> {\n  let count = Infinity;\n  let delay: RepeatConfig['delay'];\n\n  if (countOrConfig != null) {\n    if (typeof countOrConfig === 'object') {\n      ({ count = Infinity, delay } = countOrConfig);\n    } else {\n      count = countOrConfig;\n    }\n  }\n\n  return count <= 0\n    ? () => EMPTY\n    : operate((source, subscriber) => {\n        let soFar = 0;\n        let sourceSub: Subscription | null;\n\n        const resubscribe = () => {\n          sourceSub?.unsubscribe();\n          sourceSub = null;\n          if (delay != null) {\n            const notifier = typeof delay === 'number' ? timer(delay) : innerFrom(delay(soFar));\n            const notifierSubscriber = createOperatorSubscriber(subscriber, () => {\n              notifierSubscriber.unsubscribe();\n              subscribeToSource();\n            });\n            notifier.subscribe(notifierSubscriber);\n          } else {\n            subscribeToSource();\n          }\n        };\n\n        const subscribeToSource = () => {\n          let syncUnsub = false;\n          sourceSub = source.subscribe(\n            createOperatorSubscriber(subscriber, undefined, () => {\n              if (++soFar < count) {\n                if (sourceSub) {\n                  resubscribe();\n                } else {\n                  syncUnsub = true;\n                }\n              } else {\n                subscriber.complete();\n              }\n            })\n          );\n\n          if (syncUnsub) {\n            resubscribe();\n          }\n        };\n\n        subscribeToSource();\n      });\n}\n","import { Observable } from '../Observable';\nimport { Subject } from '../Subject';\nimport { Subscription } from '../Subscription';\n\nimport { MonoTypeOperatorFunction } from '../types';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\n\n/**\n * Returns an Observable that mirrors the source Observable with the exception of a `complete`. If the source\n * Observable calls `complete`, this method will emit to the Observable returned from `notifier`. If that Observable\n * calls `complete` or `error`, then this method will call `complete` or `error` on the child subscription. Otherwise\n * this method will resubscribe to the source Observable.\n *\n * ![](repeatWhen.png)\n *\n * ## Example\n *\n * Repeat a message stream on click\n *\n * ```ts\n * import { of, fromEvent, repeatWhen } from 'rxjs';\n *\n * const source = of('Repeat message');\n * const documentClick$ = fromEvent(document, 'click');\n *\n * const result = source.pipe(repeatWhen(() => documentClick$));\n *\n * result.subscribe(data => console.log(data))\n * ```\n *\n * @see {@link repeat}\n * @see {@link retry}\n * @see {@link retryWhen}\n *\n * @param {function(notifications: Observable): Observable} notifier - Receives an Observable of notifications with\n * which a user can `complete` or `error`, aborting the repetition.\n * @return A function that returns an Observable that that mirrors the source\n * Observable with the exception of a `complete`.\n * @deprecated Will be removed in v9 or v10. Use {@link repeat}'s `delay` option instead.\n */\nexport function repeatWhen<T>(notifier: (notifications: Observable<void>) => Observable<any>): MonoTypeOperatorFunction<T> {\n  return operate((source, subscriber) => {\n    let innerSub: Subscription | null;\n    let syncResub = false;\n    let completions$: Subject<void>;\n    let isNotifierComplete = false;\n    let isMainComplete = false;\n\n    /**\n     * Checks to see if we can complete the result, completes it, and returns `true` if it was completed.\n     */\n    const checkComplete = () => isMainComplete && isNotifierComplete && (subscriber.complete(), true);\n    /**\n     * Gets the subject to send errors through. If it doesn't exist,\n     * we know we need to setup the notifier.\n     */\n    const getCompletionSubject = () => {\n      if (!completions$) {\n        completions$ = new Subject();\n\n        // If the call to `notifier` throws, it will be caught by the OperatorSubscriber\n        // In the main subscription -- in `subscribeForRepeatWhen`.\n        notifier(completions$).subscribe(\n          createOperatorSubscriber(\n            subscriber,\n            () => {\n              if (innerSub) {\n                subscribeForRepeatWhen();\n              } else {\n                // If we don't have an innerSub yet, that's because the inner subscription\n                // call hasn't even returned yet. We've arrived here synchronously.\n                // So we flag that we want to resub, such that we can ensure finalization\n                // happens before we resubscribe.\n                syncResub = true;\n              }\n            },\n            () => {\n              isNotifierComplete = true;\n              checkComplete();\n            }\n          )\n        );\n      }\n      return completions$;\n    };\n\n    const subscribeForRepeatWhen = () => {\n      isMainComplete = false;\n\n      innerSub = source.subscribe(\n        createOperatorSubscriber(subscriber, undefined, () => {\n          isMainComplete = true;\n          // Check to see if we are complete, and complete if so.\n          // If we are not complete. Get the subject. This calls the `notifier` function.\n          // If that function fails, it will throw and `.next()` will not be reached on this\n          // line. The thrown error is caught by the _complete handler in this\n          // `OperatorSubscriber` and handled appropriately.\n          !checkComplete() && getCompletionSubject().next();\n        })\n      );\n\n      if (syncResub) {\n        // Ensure that the inner subscription is torn down before\n        // moving on to the next subscription in the synchronous case.\n        // If we don't do this here, all inner subscriptions will not be\n        // torn down until the entire observable is done.\n        innerSub.unsubscribe();\n        // It is important to null this out. Not only to free up memory, but\n        // to make sure code above knows we are in a subscribing state to\n        // handle synchronous resubscription.\n        innerSub = null;\n        // We may need to do this multiple times, so reset the flags.\n        syncResub = false;\n        // Resubscribe\n        subscribeForRepeatWhen();\n      }\n    };\n\n    // Start the subscription\n    subscribeForRepeatWhen();\n  });\n}\n","import { MonoTypeOperatorFunction, ObservableInput } from '../types';\nimport { operate } from '../util/lift';\nimport { Subscription } from '../Subscription';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nimport { identity } from '../util/identity';\nimport { timer } from '../observable/timer';\nimport { innerFrom } from '../observable/innerFrom';\n\n/**\n * The {@link retry} operator configuration object. `retry` either accepts a `number`\n * or an object described by this interface.\n */\nexport interface RetryConfig {\n  /**\n   * The maximum number of times to retry. If `count` is omitted, `retry` will try to\n   * resubscribe on errors infinite number of times.\n   */\n  count?: number;\n  /**\n   * The number of milliseconds to delay before retrying, OR a function to\n   * return a notifier for delaying. If a function is given, that function should\n   * return a notifier that, when it emits will retry the source. If the notifier\n   * completes _without_ emitting, the resulting observable will complete without error,\n   * if the notifier errors, the error will be pushed to the result.\n   */\n  delay?: number | ((error: any, retryCount: number) => ObservableInput<any>);\n  /**\n   * Whether or not to reset the retry counter when the retried subscription\n   * emits its first value.\n   */\n  resetOnSuccess?: boolean;\n}\n\nexport function retry<T>(count?: number): MonoTypeOperatorFunction<T>;\nexport function retry<T>(config: RetryConfig): MonoTypeOperatorFunction<T>;\n\n/**\n * Returns an Observable that mirrors the source Observable with the exception of an `error`.\n *\n * If the source Observable calls `error`, this method will resubscribe to the source Observable for a maximum of\n * `count` resubscriptions rather than propagating the `error` call.\n *\n * ![](retry.png)\n *\n * The number of retries is determined by the `count` parameter. It can be set either by passing a number to\n * `retry` function or by setting `count` property when `retry` is configured using {@link RetryConfig}. If\n * `count` is omitted, `retry` will try to resubscribe on errors infinite number of times.\n *\n * Any and all items emitted by the source Observable will be emitted by the resulting Observable, even those\n * emitted during failed subscriptions. For example, if an Observable fails at first but emits `[1, 2]` then\n * succeeds the second time and emits: `[1, 2, 3, 4, 5, complete]` then the complete stream of emissions and\n * notifications would be: `[1, 2, 1, 2, 3, 4, 5, complete]`.\n *\n * ## Example\n *\n * ```ts\n * import { interval, mergeMap, throwError, of, retry } from 'rxjs';\n *\n * const source = interval(1000);\n * const result = source.pipe(\n *   mergeMap(val => val > 5 ? throwError(() => 'Error!') : of(val)),\n *   retry(2) // retry 2 times on error\n * );\n *\n * result.subscribe({\n *   next: value => console.log(value),\n *   error: err => console.log(`${ err }: Retried 2 times then quit!`)\n * });\n *\n * // Output:\n * // 0..1..2..3..4..5..\n * // 0..1..2..3..4..5..\n * // 0..1..2..3..4..5..\n * // 'Error!: Retried 2 times then quit!'\n * ```\n *\n * @see {@link retryWhen}\n *\n * @param configOrCount - Either number of retry attempts before failing or a {@link RetryConfig} object.\n * @return A function that returns an Observable that will resubscribe to the\n * source stream when the source stream errors, at most `count` times.\n */\nexport function retry<T>(configOrCount: number | RetryConfig = Infinity): MonoTypeOperatorFunction<T> {\n  let config: RetryConfig;\n  if (configOrCount && typeof configOrCount === 'object') {\n    config = configOrCount;\n  } else {\n    config = {\n      count: configOrCount as number,\n    };\n  }\n  const { count = Infinity, delay, resetOnSuccess: resetOnSuccess = false } = config;\n\n  return count <= 0\n    ? identity\n    : operate((source, subscriber) => {\n        let soFar = 0;\n        let innerSub: Subscription | null;\n        const subscribeForRetry = () => {\n          let syncUnsub = false;\n          innerSub = source.subscribe(\n            createOperatorSubscriber(\n              subscriber,\n              (value) => {\n                // If we're resetting on success\n                if (resetOnSuccess) {\n                  soFar = 0;\n                }\n                subscriber.next(value);\n              },\n              // Completions are passed through to consumer.\n              undefined,\n              (err) => {\n                if (soFar++ < count) {\n                  // We are still under our retry count\n                  const resub = () => {\n                    if (innerSub) {\n                      innerSub.unsubscribe();\n                      innerSub = null;\n                      subscribeForRetry();\n                    } else {\n                      syncUnsub = true;\n                    }\n                  };\n\n                  if (delay != null) {\n                    // The user specified a retry delay.\n                    // They gave us a number, use a timer, otherwise, it's a function,\n                    // and we're going to call it to get a notifier.\n                    const notifier = typeof delay === 'number' ? timer(delay) : innerFrom(delay(err, soFar));\n                    const notifierSubscriber = createOperatorSubscriber(\n                      subscriber,\n                      () => {\n                        // After we get the first notification, we\n                        // unsubscribe from the notifer, because we don't want anymore\n                        // and we resubscribe to the source.\n                        notifierSubscriber.unsubscribe();\n                        resub();\n                      },\n                      () => {\n                        // The notifier completed without emitting.\n                        // The author is telling us they want to complete.\n                        subscriber.complete();\n                      }\n                    );\n                    notifier.subscribe(notifierSubscriber);\n                  } else {\n                    // There was no notifier given. Just resub immediately.\n                    resub();\n                  }\n                } else {\n                  // We're past our maximum number of retries.\n                  // Just send along the error.\n                  subscriber.error(err);\n                }\n              }\n            )\n          );\n          if (syncUnsub) {\n            innerSub.unsubscribe();\n            innerSub = null;\n            subscribeForRetry();\n          }\n        };\n        subscribeForRetry();\n      });\n}\n","import { Observable } from '../Observable';\nimport { Subject } from '../Subject';\nimport { Subscription } from '../Subscription';\n\nimport { MonoTypeOperatorFunction } from '../types';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\n\n/**\n * Returns an Observable that mirrors the source Observable with the exception of an `error`. If the source Observable\n * calls `error`, this method will emit the Throwable that caused the error to the Observable returned from `notifier`.\n * If that Observable calls `complete` or `error` then this method will call `complete` or `error` on the child\n * subscription. Otherwise this method will resubscribe to the source Observable.\n *\n * ![](retryWhen.png)\n *\n * Retry an observable sequence on error based on custom criteria.\n *\n * ## Example\n *\n * ```ts\n * import { interval, map, retryWhen, tap, delayWhen, timer } from 'rxjs';\n *\n * const source = interval(1000);\n * const result = source.pipe(\n *   map(value => {\n *     if (value > 5) {\n *       // error will be picked up by retryWhen\n *       throw value;\n *     }\n *     return value;\n *   }),\n *   retryWhen(errors =>\n *     errors.pipe(\n *       // log error message\n *       tap(value => console.log(`Value ${ value } was too high!`)),\n *       // restart in 5 seconds\n *       delayWhen(value => timer(value * 1000))\n *     )\n *   )\n * );\n *\n * result.subscribe(value => console.log(value));\n *\n * // results:\n * // 0\n * // 1\n * // 2\n * // 3\n * // 4\n * // 5\n * // 'Value 6 was too high!'\n * // - Wait 5 seconds then repeat\n * ```\n *\n * @see {@link retry}\n *\n * @param {function(errors: Observable): Observable} notifier - Receives an Observable of notifications with which a\n * user can `complete` or `error`, aborting the retry.\n * @return A function that returns an Observable that mirrors the source\n * Observable with the exception of an `error`.\n * @deprecated Will be removed in v9 or v10, use {@link retry}'s `delay` option instead.\n */\nexport function retryWhen<T>(notifier: (errors: Observable<any>) => Observable<any>): MonoTypeOperatorFunction<T> {\n  return operate((source, subscriber) => {\n    let innerSub: Subscription | null;\n    let syncResub = false;\n    let errors$: Subject<any>;\n\n    const subscribeForRetryWhen = () => {\n      innerSub = source.subscribe(\n        createOperatorSubscriber(subscriber, undefined, undefined, (err) => {\n          if (!errors$) {\n            errors$ = new Subject();\n            notifier(errors$).subscribe(\n              createOperatorSubscriber(subscriber, () =>\n                // If we have an innerSub, this was an asynchronous call, kick off the retry.\n                // Otherwise, if we don't have an innerSub yet, that's because the inner subscription\n                // call hasn't even returned yet. We've arrived here synchronously.\n                // So we flag that we want to resub, such that we can ensure finalization\n                // happens before we resubscribe.\n                innerSub ? subscribeForRetryWhen() : (syncResub = true)\n              )\n            );\n          }\n          if (errors$) {\n            // We have set up the notifier without error.\n            errors$.next(err);\n          }\n        })\n      );\n\n      if (syncResub) {\n        // Ensure that the inner subscription is torn down before\n        // moving on to the next subscription in the synchronous case.\n        // If we don't do this here, all inner subscriptions will not be\n        // torn down until the entire observable is done.\n        innerSub.unsubscribe();\n        innerSub = null;\n        // We may need to do this multiple times, so reset the flag.\n        syncResub = false;\n        // Resubscribe\n        subscribeForRetryWhen();\n      }\n    };\n\n    // Start the subscription\n    subscribeForRetryWhen();\n  });\n}\n","import { Observable } from '../Observable';\nimport { MonoTypeOperatorFunction } from '../types';\nimport { operate } from '../util/lift';\nimport { noop } from '../util/noop';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\n\n/**\n * Emits the most recently emitted value from the source Observable whenever\n * another Observable, the `notifier`, emits.\n *\n * <span class=\"informal\">It's like {@link sampleTime}, but samples whenever\n * the `notifier` Observable emits something.</span>\n *\n * ![](sample.png)\n *\n * Whenever the `notifier` Observable emits a value, `sample`\n * looks at the source Observable and emits whichever value it has most recently\n * emitted since the previous sampling, unless the source has not emitted\n * anything since the previous sampling. The `notifier` is subscribed to as soon\n * as the output Observable is subscribed.\n *\n * ## Example\n *\n * On every click, sample the most recent `seconds` timer\n *\n * ```ts\n * import { fromEvent, interval, sample } from 'rxjs';\n *\n * const seconds = interval(1000);\n * const clicks = fromEvent(document, 'click');\n * const result = seconds.pipe(sample(clicks));\n *\n * result.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link audit}\n * @see {@link debounce}\n * @see {@link sampleTime}\n * @see {@link throttle}\n *\n * @param notifier The Observable to use for sampling the\n * source Observable.\n * @return A function that returns an Observable that emits the results of\n * sampling the values emitted by the source Observable whenever the notifier\n * Observable emits value or completes.\n */\nexport function sample<T>(notifier: Observable<any>): MonoTypeOperatorFunction<T> {\n  return operate((source, subscriber) => {\n    let hasValue = false;\n    let lastValue: T | null = null;\n    source.subscribe(\n      createOperatorSubscriber(subscriber, (value) => {\n        hasValue = true;\n        lastValue = value;\n      })\n    );\n    notifier.subscribe(\n      createOperatorSubscriber(\n        subscriber,\n        () => {\n          if (hasValue) {\n            hasValue = false;\n            const value = lastValue!;\n            lastValue = null;\n            subscriber.next(value);\n          }\n        },\n        noop\n      )\n    );\n  });\n}\n","import { asyncScheduler } from '../scheduler/async';\nimport { MonoTypeOperatorFunction, SchedulerLike } from '../types';\nimport { sample } from './sample';\nimport { interval } from '../observable/interval';\n\n/**\n * Emits the most recently emitted value from the source Observable within\n * periodic time intervals.\n *\n * <span class=\"informal\">Samples the source Observable at periodic time\n * intervals, emitting what it samples.</span>\n *\n * ![](sampleTime.png)\n *\n * `sampleTime` periodically looks at the source Observable and emits whichever\n * value it has most recently emitted since the previous sampling, unless the\n * source has not emitted anything since the previous sampling. The sampling\n * happens periodically in time every `period` milliseconds (or the time unit\n * defined by the optional `scheduler` argument). The sampling starts as soon as\n * the output Observable is subscribed.\n *\n * ## Example\n *\n * Every second, emit the most recent click at most once\n *\n * ```ts\n * import { fromEvent, sampleTime } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const result = clicks.pipe(sampleTime(1000));\n *\n * result.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link auditTime}\n * @see {@link debounceTime}\n * @see {@link delay}\n * @see {@link sample}\n * @see {@link throttleTime}\n *\n * @param {number} period The sampling period expressed in milliseconds or the\n * time unit determined internally by the optional `scheduler`.\n * @param {SchedulerLike} [scheduler=async] The {@link SchedulerLike} to use for\n * managing the timers that handle the sampling.\n * @return A function that returns an Observable that emits the results of\n * sampling the values emitted by the source Observable at the specified time\n * interval.\n */\nexport function sampleTime<T>(period: number, scheduler: SchedulerLike = asyncScheduler): MonoTypeOperatorFunction<T> {\n  return sample(interval(period, scheduler));\n}\n","import { OperatorFunction } from '../types';\nimport { operate } from '../util/lift';\nimport { scanInternals } from './scanInternals';\n\nexport function scan<V, A = V>(accumulator: (acc: A | V, value: V, index: number) => A): OperatorFunction<V, V | A>;\nexport function scan<V, A>(accumulator: (acc: A, value: V, index: number) => A, seed: A): OperatorFunction<V, A>;\nexport function scan<V, A, S>(accumulator: (acc: A | S, value: V, index: number) => A, seed: S): OperatorFunction<V, A>;\n\n// TODO: link to a \"redux pattern\" section in the guide (location TBD)\n\n/**\n * Useful for encapsulating and managing state. Applies an accumulator (or \"reducer function\")\n * to each value from the source after an initial state is established -- either via\n * a `seed` value (second argument), or from the first value from the source.\n *\n * <span class=\"informal\">It's like {@link reduce}, but emits the current\n * accumulation state after each update</span>\n *\n * ![](scan.png)\n *\n * This operator maintains an internal state and emits it after processing each value as follows:\n *\n * 1. First value arrives\n *   - If a `seed` value was supplied (as the second argument to `scan`), let `state = seed` and `value = firstValue`.\n *   - If NO `seed` value was supplied (no second argument), let `state = firstValue` and go to 3.\n * 2. Let `state = accumulator(state, value)`.\n *   - If an error is thrown by `accumulator`, notify the consumer of an error. The process ends.\n * 3. Emit `state`.\n * 4. Next value arrives, let `value = nextValue`, go to 2.\n *\n * ## Examples\n *\n * An average of previous numbers. This example shows how\n * not providing a `seed` can prime the stream with the\n * first value from the source.\n *\n * ```ts\n * import { of, scan, map } from 'rxjs';\n *\n * const numbers$ = of(1, 2, 3);\n *\n * numbers$\n *   .pipe(\n *     // Get the sum of the numbers coming in.\n *     scan((total, n) => total + n),\n *     // Get the average by dividing the sum by the total number\n *     // received so var (which is 1 more than the zero-based index).\n *     map((sum, index) => sum / (index + 1))\n *   )\n *   .subscribe(console.log);\n * ```\n *\n * The Fibonacci sequence. This example shows how you can use\n * a seed to prime accumulation process. Also... you know... Fibonacci.\n * So important to like, computers and stuff that its whiteboarded\n * in job interviews. Now you can show them the Rx version! (Please don't, haha)\n *\n * ```ts\n * import { interval, scan, map, startWith } from 'rxjs';\n *\n * const firstTwoFibs = [0, 1];\n * // An endless stream of Fibonacci numbers.\n * const fibonacci$ = interval(1000).pipe(\n *   // Scan to get the fibonacci numbers (after 0, 1)\n *   scan(([a, b]) => [b, a + b], firstTwoFibs),\n *   // Get the second number in the tuple, it's the one you calculated\n *   map(([, n]) => n),\n *   // Start with our first two digits :)\n *   startWith(...firstTwoFibs)\n * );\n *\n * fibonacci$.subscribe(console.log);\n * ```\n *\n * @see {@link expand}\n * @see {@link mergeScan}\n * @see {@link reduce}\n * @see {@link switchScan}\n *\n * @param accumulator A \"reducer function\". This will be called for each value after an initial state is\n * acquired.\n * @param seed The initial state. If this is not provided, the first value from the source will\n * be used as the initial state, and emitted without going through the accumulator. All subsequent values\n * will be processed by the accumulator function. If this is provided, all values will go through\n * the accumulator function.\n * @return A function that returns an Observable of the accumulated values.\n */\nexport function scan<V, A, S>(accumulator: (acc: V | A | S, value: V, index: number) => A, seed?: S): OperatorFunction<V, V | A> {\n  // providing a seed of `undefined` *should* be valid and trigger\n  // hasSeed! so don't use `seed !== undefined` checks!\n  // For this reason, we have to check it here at the original call site\n  // otherwise inside Operator/Subscriber we won't know if `undefined`\n  // means they didn't provide anything or if they literally provided `undefined`\n  return operate(scanInternals(accumulator, seed as S, arguments.length >= 2, true));\n}\n","import { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\n\n/**\n * A basic scan operation. This is used for `scan` and `reduce`.\n * @param accumulator The accumulator to use\n * @param seed The seed value for the state to accumulate\n * @param hasSeed Whether or not a seed was provided\n * @param emitOnNext Whether or not to emit the state on next\n * @param emitBeforeComplete Whether or not to emit the before completion\n */\n\nexport function scanInternals<V, A, S>(\n  accumulator: (acc: V | A | S, value: V, index: number) => A,\n  seed: S,\n  hasSeed: boolean,\n  emitOnNext: boolean,\n  emitBeforeComplete?: undefined | true\n) {\n  return (source: Observable<V>, subscriber: Subscriber<any>) => {\n    // Whether or not we have state yet. This will only be\n    // false before the first value arrives if we didn't get\n    // a seed value.\n    let hasState = hasSeed;\n    // The state that we're tracking, starting with the seed,\n    // if there is one, and then updated by the return value\n    // from the accumulator on each emission.\n    let state: any = seed;\n    // An index to pass to the accumulator function.\n    let index = 0;\n\n    // Subscribe to our source. All errors and completions are passed through.\n    source.subscribe(\n      createOperatorSubscriber(\n        subscriber,\n        (value) => {\n          // Always increment the index.\n          const i = index++;\n          // Set the state\n          state = hasState\n            ? // We already have state, so we can get the new state from the accumulator\n              accumulator(state, value, i)\n            : // We didn't have state yet, a seed value was not provided, so\n\n              // we set the state to the first value, and mark that we have state now\n              ((hasState = true), value);\n\n          // Maybe send it to the consumer.\n          emitOnNext && subscriber.next(state);\n        },\n        // If an onComplete was given, call it, otherwise\n        // just pass through the complete notification to the consumer.\n        emitBeforeComplete &&\n          (() => {\n            hasState && subscriber.next(state);\n            subscriber.complete();\n          })\n      )\n    );\n  };\n}\n","import { Observable } from '../Observable';\n\nimport { OperatorFunction } from '../types';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\n\n/**\n * Compares all values of two observables in sequence using an optional comparator function\n * and returns an observable of a single boolean value representing whether or not the two sequences\n * are equal.\n *\n * <span class=\"informal\">Checks to see of all values emitted by both observables are equal, in order.</span>\n *\n * ![](sequenceEqual.png)\n *\n * `sequenceEqual` subscribes to two observables and buffers incoming values from each observable. Whenever either\n * observable emits a value, the value is buffered and the buffers are shifted and compared from the bottom\n * up; If any value pair doesn't match, the returned observable will emit `false` and complete. If one of the\n * observables completes, the operator will wait for the other observable to complete; If the other\n * observable emits before completing, the returned observable will emit `false` and complete. If one observable never\n * completes or emits after the other completes, the returned observable will never complete.\n *\n * ## Example\n *\n * Figure out if the Konami code matches\n *\n * ```ts\n * import { from, fromEvent, map, bufferCount, mergeMap, sequenceEqual } from 'rxjs';\n *\n * const codes = from([\n *   'ArrowUp',\n *   'ArrowUp',\n *   'ArrowDown',\n *   'ArrowDown',\n *   'ArrowLeft',\n *   'ArrowRight',\n *   'ArrowLeft',\n *   'ArrowRight',\n *   'KeyB',\n *   'KeyA',\n *   'Enter', // no start key, clearly.\n * ]);\n *\n * const keys = fromEvent<KeyboardEvent>(document, 'keyup').pipe(map(e => e.code));\n * const matches = keys.pipe(\n *   bufferCount(11, 1),\n *   mergeMap(last11 => from(last11).pipe(sequenceEqual(codes)))\n * );\n * matches.subscribe(matched => console.log('Successful cheat at Contra? ', matched));\n * ```\n *\n * @see {@link combineLatest}\n * @see {@link zip}\n * @see {@link withLatestFrom}\n *\n * @param {Observable} compareTo The observable sequence to compare the source sequence to.\n * @param {function} [comparator] An optional function to compare each value pair\n * @return A function that returns an Observable that emits a single boolean\n * value representing whether or not the values emitted by the source\n * Observable and provided Observable were equal in sequence.\n */\nexport function sequenceEqual<T>(\n  compareTo: Observable<T>,\n  comparator: (a: T, b: T) => boolean = (a, b) => a === b\n): OperatorFunction<T, boolean> {\n  return operate((source, subscriber) => {\n    // The state for the source observable\n    const aState = createState<T>();\n    // The state for the compareTo observable;\n    const bState = createState<T>();\n\n    /** A utility to emit and complete */\n    const emit = (isEqual: boolean) => {\n      subscriber.next(isEqual);\n      subscriber.complete();\n    };\n\n    /**\n     * Creates a subscriber that subscribes to one of the sources, and compares its collected\n     * state -- `selfState` -- to the other source's collected state -- `otherState`. This\n     * is used for both streams.\n     */\n    const createSubscriber = (selfState: SequenceState<T>, otherState: SequenceState<T>) => {\n      const sequenceEqualSubscriber = createOperatorSubscriber(\n        subscriber,\n        (a: T) => {\n          const { buffer, complete } = otherState;\n          if (buffer.length === 0) {\n            // If there's no values in the other buffer\n            // and the other stream is complete, we know\n            // this isn't a match, because we got one more value.\n            // Otherwise, we push onto our buffer, so when the other\n            // stream emits, it can pull this value off our buffer and check it\n            // at the appropriate time.\n            complete ? emit(false) : selfState.buffer.push(a);\n          } else {\n            // If the other stream *does* have values in it's buffer,\n            // pull the oldest one off so we can compare it to what we\n            // just got. If it wasn't a match, emit `false` and complete.\n            !comparator(a, buffer.shift()!) && emit(false);\n          }\n        },\n        () => {\n          // Or observable completed\n          selfState.complete = true;\n          const { complete, buffer } = otherState;\n          // If the other observable is also complete, and there's\n          // still stuff left in their buffer, it doesn't match, if their\n          // buffer is empty, then it does match. This is because we can't\n          // possibly get more values here anymore.\n          complete && emit(buffer.length === 0);\n          // Be sure to clean up our stream as soon as possible if we can.\n          sequenceEqualSubscriber?.unsubscribe();\n        }\n      );\n\n      return sequenceEqualSubscriber;\n    };\n\n    // Subscribe to each source.\n    source.subscribe(createSubscriber(aState, bState));\n    compareTo.subscribe(createSubscriber(bState, aState));\n  });\n}\n\n/**\n * A simple structure for the data used to test each sequence\n */\ninterface SequenceState<T> {\n  /** A temporary store for arrived values before they are checked */\n  buffer: T[];\n  /** Whether or not the sequence source has completed. */\n  complete: boolean;\n}\n\n/**\n * Creates a simple structure that is used to represent\n * data used to test each sequence.\n */\nfunction createState<T>(): SequenceState<T> {\n  return {\n    buffer: [],\n    complete: false,\n  };\n}\n","import { Observable } from '../Observable';\nimport { innerFrom } from '../observable/innerFrom';\nimport { Subject } from '../Subject';\nimport { SafeSubscriber } from '../Subscriber';\nimport { Subscription } from '../Subscription';\nimport { MonoTypeOperatorFunction, SubjectLike } from '../types';\nimport { operate } from '../util/lift';\n\nexport interface ShareConfig<T> {\n  /**\n   * The factory used to create the subject that will connect the source observable to\n   * multicast consumers.\n   */\n  connector?: () => SubjectLike<T>;\n  /**\n   * If true, the resulting observable will reset internal state on error from source and return to a \"cold\" state. This\n   * allows the resulting observable to be \"retried\" in the event of an error.\n   * If false, when an error comes from the source it will push the error into the connecting subject, and the subject\n   * will remain the connecting subject, meaning the resulting observable will not go \"cold\" again, and subsequent retries\n   * or resubscriptions will resubscribe to that same subject. In all cases, RxJS subjects will emit the same error again, however\n   * {@link ReplaySubject} will also push its buffered values before pushing the error.\n   * It is also possible to pass a notifier factory returning an observable instead which grants more fine-grained\n   * control over how and when the reset should happen. This allows behaviors like conditional or delayed resets.\n   */\n  resetOnError?: boolean | ((error: any) => Observable<any>);\n  /**\n   * If true, the resulting observable will reset internal state on completion from source and return to a \"cold\" state. This\n   * allows the resulting observable to be \"repeated\" after it is done.\n   * If false, when the source completes, it will push the completion through the connecting subject, and the subject\n   * will remain the connecting subject, meaning the resulting observable will not go \"cold\" again, and subsequent repeats\n   * or resubscriptions will resubscribe to that same subject.\n   * It is also possible to pass a notifier factory returning an observable instead which grants more fine-grained\n   * control over how and when the reset should happen. This allows behaviors like conditional or delayed resets.\n   */\n  resetOnComplete?: boolean | (() => Observable<any>);\n  /**\n   * If true, when the number of subscribers to the resulting observable reaches zero due to those subscribers unsubscribing, the\n   * internal state will be reset and the resulting observable will return to a \"cold\" state. This means that the next\n   * time the resulting observable is subscribed to, a new subject will be created and the source will be subscribed to\n   * again.\n   * If false, when the number of subscribers to the resulting observable reaches zero due to unsubscription, the subject\n   * will remain connected to the source, and new subscriptions to the result will be connected through that same subject.\n   * It is also possible to pass a notifier factory returning an observable instead which grants more fine-grained\n   * control over how and when the reset should happen. This allows behaviors like conditional or delayed resets.\n   */\n  resetOnRefCountZero?: boolean | (() => Observable<any>);\n}\n\nexport function share<T>(): MonoTypeOperatorFunction<T>;\n\nexport function share<T>(options: ShareConfig<T>): MonoTypeOperatorFunction<T>;\n\n/**\n * Returns a new Observable that multicasts (shares) the original Observable. As long as there is at least one\n * Subscriber this Observable will be subscribed and emitting data. When all subscribers have unsubscribed it will\n * unsubscribe from the source Observable. Because the Observable is multicasting it makes the stream `hot`.\n * This is an alias for `multicast(() => new Subject()), refCount()`.\n *\n * The subscription to the underlying source Observable can be reset (unsubscribe and resubscribe for new subscribers),\n * if the subscriber count to the shared observable drops to 0, or if the source Observable errors or completes. It is\n * possible to use notifier factories for the resets to allow for behaviors like conditional or delayed resets. Please\n * note that resetting on error or complete of the source Observable does not behave like a transparent retry or restart\n * of the source because the error or complete will be forwarded to all subscribers and their subscription will be\n * closed. Only new subscribers after a reset on error or complete happened will cause a fresh subscription to the\n * source. To achieve transparent retries or restarts pipe the source through appropriate operators before sharing.\n *\n * ![](share.png)\n *\n * ## Example\n *\n * Generate new multicast Observable from the `source` Observable value\n *\n * ```ts\n * import { interval, tap, map, take, share } from 'rxjs';\n *\n * const source = interval(1000).pipe(\n *   tap(x => console.log('Processing: ', x)),\n *   map(x => x * x),\n *   take(6),\n *   share()\n * );\n *\n * source.subscribe(x => console.log('subscription 1: ', x));\n * source.subscribe(x => console.log('subscription 2: ', x));\n *\n * // Logs:\n * // Processing: 0\n * // subscription 1: 0\n * // subscription 2: 0\n * // Processing: 1\n * // subscription 1: 1\n * // subscription 2: 1\n * // Processing: 2\n * // subscription 1: 4\n * // subscription 2: 4\n * // Processing: 3\n * // subscription 1: 9\n * // subscription 2: 9\n * // Processing: 4\n * // subscription 1: 16\n * // subscription 2: 16\n * // Processing: 5\n * // subscription 1: 25\n * // subscription 2: 25\n * ```\n *\n * ## Example with notifier factory: Delayed reset\n *\n * ```ts\n * import { interval, take, share, timer } from 'rxjs';\n *\n * const source = interval(1000).pipe(\n *   take(3),\n *   share({\n *     resetOnRefCountZero: () => timer(1000)\n *   })\n * );\n *\n * const subscriptionOne = source.subscribe(x => console.log('subscription 1: ', x));\n * setTimeout(() => subscriptionOne.unsubscribe(), 1300);\n *\n * setTimeout(() => source.subscribe(x => console.log('subscription 2: ', x)), 1700);\n *\n * setTimeout(() => source.subscribe(x => console.log('subscription 3: ', x)), 5000);\n *\n * // Logs:\n * // subscription 1:  0\n * // (subscription 1 unsubscribes here)\n * // (subscription 2 subscribes here ~400ms later, source was not reset)\n * // subscription 2:  1\n * // subscription 2:  2\n * // (subscription 2 unsubscribes here)\n * // (subscription 3 subscribes here ~2000ms later, source did reset before)\n * // subscription 3:  0\n * // subscription 3:  1\n * // subscription 3:  2\n * ```\n *\n * @see {@link shareReplay}\n *\n * @return A function that returns an Observable that mirrors the source.\n */\nexport function share<T>(options: ShareConfig<T> = {}): MonoTypeOperatorFunction<T> {\n  const { connector = () => new Subject<T>(), resetOnError = true, resetOnComplete = true, resetOnRefCountZero = true } = options;\n  // It's necessary to use a wrapper here, as the _operator_ must be\n  // referentially transparent. Otherwise, it cannot be used in calls to the\n  // static `pipe` function - to create a partial pipeline.\n  //\n  // The _operator function_ - the function returned by the _operator_ - will\n  // not be referentially transparent - as it shares its source - but the\n  // _operator function_ is called when the complete pipeline is composed via a\n  // call to a source observable's `pipe` method - not when the static `pipe`\n  // function is called.\n  return (wrapperSource) => {\n    let connection: SafeSubscriber<T> | undefined;\n    let resetConnection: Subscription | undefined;\n    let subject: SubjectLike<T> | undefined;\n    let refCount = 0;\n    let hasCompleted = false;\n    let hasErrored = false;\n\n    const cancelReset = () => {\n      resetConnection?.unsubscribe();\n      resetConnection = undefined;\n    };\n    // Used to reset the internal state to a \"cold\"\n    // state, as though it had never been subscribed to.\n    const reset = () => {\n      cancelReset();\n      connection = subject = undefined;\n      hasCompleted = hasErrored = false;\n    };\n    const resetAndUnsubscribe = () => {\n      // We need to capture the connection before\n      // we reset (if we need to reset).\n      const conn = connection;\n      reset();\n      conn?.unsubscribe();\n    };\n\n    return operate<T, T>((source, subscriber) => {\n      refCount++;\n      if (!hasErrored && !hasCompleted) {\n        cancelReset();\n      }\n\n      // Create the subject if we don't have one yet. Grab a local reference to\n      // it as well, which avoids non-null assertations when using it and, if we\n      // connect to it now, then error/complete need a reference after it was\n      // reset.\n      const dest = (subject = subject ?? connector());\n\n      // Add the finalization directly to the subscriber - instead of returning it -\n      // so that the handling of the subscriber's unsubscription will be wired\n      // up _before_ the subscription to the source occurs. This is done so that\n      // the assignment to the source connection's `closed` property will be seen\n      // by synchronous firehose sources.\n      subscriber.add(() => {\n        refCount--;\n\n        // If we're resetting on refCount === 0, and it's 0, we only want to do\n        // that on \"unsubscribe\", really. Resetting on error or completion is a different\n        // configuration.\n        if (refCount === 0 && !hasErrored && !hasCompleted) {\n          resetConnection = handleReset(resetAndUnsubscribe, resetOnRefCountZero);\n        }\n      });\n\n      // The following line adds the subscription to the subscriber passed.\n      // Basically, `subscriber === dest.subscribe(subscriber)` is `true`.\n      dest.subscribe(subscriber);\n\n      if (\n        !connection &&\n        // Check this shareReplay is still activate - it can be reset to 0\n        // and be \"unsubscribed\" _before_ it actually subscribes.\n        // If we were to subscribe then, it'd leak and get stuck.\n        refCount > 0\n      ) {\n        // We need to create a subscriber here - rather than pass an observer and\n        // assign the returned subscription to connection - because it's possible\n        // for reentrant subscriptions to the shared observable to occur and in\n        // those situations we want connection to be already-assigned so that we\n        // don't create another connection to the source.\n        connection = new SafeSubscriber({\n          next: (value) => dest.next(value),\n          error: (err) => {\n            hasErrored = true;\n            cancelReset();\n            resetConnection = handleReset(reset, resetOnError, err);\n            dest.error(err);\n          },\n          complete: () => {\n            hasCompleted = true;\n            cancelReset();\n            resetConnection = handleReset(reset, resetOnComplete);\n            dest.complete();\n          },\n        });\n        innerFrom(source).subscribe(connection);\n      }\n    })(wrapperSource);\n  };\n}\n\nfunction handleReset<T extends unknown[] = never[]>(\n  reset: () => void,\n  on: boolean | ((...args: T) => Observable<any>),\n  ...args: T\n): Subscription | undefined {\n  if (on === true) {\n    reset();\n    return;\n  }\n\n  if (on === false) {\n    return;\n  }\n\n  const onSubscriber = new SafeSubscriber({\n    next: () => {\n      onSubscriber.unsubscribe();\n      reset();\n    },\n  });\n\n  return on(...args).subscribe(onSubscriber);\n}\n","import { ReplaySubject } from '../ReplaySubject';\nimport { MonoTypeOperatorFunction, SchedulerLike } from '../types';\nimport { share } from './share';\n\nexport interface ShareReplayConfig {\n  bufferSize?: number;\n  windowTime?: number;\n  refCount: boolean;\n  scheduler?: SchedulerLike;\n}\n\nexport function shareReplay<T>(config: ShareReplayConfig): MonoTypeOperatorFunction<T>;\nexport function shareReplay<T>(bufferSize?: number, windowTime?: number, scheduler?: SchedulerLike): MonoTypeOperatorFunction<T>;\n\n/**\n * Share source and replay specified number of emissions on subscription.\n *\n * This operator is a specialization of `replay` that connects to a source observable\n * and multicasts through a `ReplaySubject` constructed with the specified arguments.\n * A successfully completed source will stay cached in the `shareReplayed observable` forever,\n * but an errored source can be retried.\n *\n * ## Why use shareReplay?\n * You generally want to use `shareReplay` when you have side-effects or taxing computations\n * that you do not wish to be executed amongst multiple subscribers.\n * It may also be valuable in situations where you know you will have late subscribers to\n * a stream that need access to previously emitted values.\n * This ability to replay values on subscription is what differentiates {@link share} and `shareReplay`.\n *\n * ![](shareReplay.png)\n *\n * ## Reference counting\n * By default `shareReplay` will use `refCount` of false, meaning that it will _not_ unsubscribe the\n * source when the reference counter drops to zero, i.e. the inner `ReplaySubject` will _not_ be unsubscribed\n * (and potentially run for ever).\n * This is the default as it is expected that `shareReplay` is often used to keep around expensive to setup\n * observables which we want to keep running instead of having to do the expensive setup again.\n *\n * As of RXJS version 6.4.0 a new overload signature was added to allow for manual control over what\n * happens when the operators internal reference counter drops to zero.\n * If `refCount` is true, the source will be unsubscribed from once the reference count drops to zero, i.e.\n * the inner `ReplaySubject` will be unsubscribed. All new subscribers will receive value emissions from a\n * new `ReplaySubject` which in turn will cause a new subscription to the source observable.\n *\n * ## Examples\n *\n * Example with a third subscriber coming late to the party\n *\n * ```ts\n * import { interval, take, shareReplay } from 'rxjs';\n *\n * const shared$ = interval(2000).pipe(\n *   take(6),\n *   shareReplay(3)\n * );\n *\n * shared$.subscribe(x => console.log('sub A: ', x));\n * shared$.subscribe(y => console.log('sub B: ', y));\n *\n * setTimeout(() => {\n *   shared$.subscribe(y => console.log('sub C: ', y));\n * }, 11000);\n *\n * // Logs:\n * // (after ~2000 ms)\n * // sub A: 0\n * // sub B: 0\n * // (after ~4000 ms)\n * // sub A: 1\n * // sub B: 1\n * // (after ~6000 ms)\n * // sub A: 2\n * // sub B: 2\n * // (after ~8000 ms)\n * // sub A: 3\n * // sub B: 3\n * // (after ~10000 ms)\n * // sub A: 4\n * // sub B: 4\n * // (after ~11000 ms, sub C gets the last 3 values)\n * // sub C: 2\n * // sub C: 3\n * // sub C: 4\n * // (after ~12000 ms)\n * // sub A: 5\n * // sub B: 5\n * // sub C: 5\n * ```\n *\n * Example for `refCount` usage\n *\n * ```ts\n * import { Observable, tap, interval, shareReplay, take } from 'rxjs';\n *\n * const log = <T>(name: string, source: Observable<T>) => source.pipe(\n *   tap({\n *     subscribe: () => console.log(`${ name }: subscribed`),\n *     next: value => console.log(`${ name }: ${ value }`),\n *     complete: () => console.log(`${ name }: completed`),\n *     finalize: () => console.log(`${ name }: unsubscribed`)\n *   })\n * );\n *\n * const obs$ = log('source', interval(1000));\n *\n * const shared$ = log('shared', obs$.pipe(\n *   shareReplay({ bufferSize: 1, refCount: true }),\n *   take(2)\n * ));\n *\n * shared$.subscribe(x => console.log('sub A: ', x));\n * shared$.subscribe(y => console.log('sub B: ', y));\n *\n * // PRINTS:\n * // shared: subscribed <-- reference count = 1\n * // source: subscribed\n * // shared: subscribed <-- reference count = 2\n * // source: 0\n * // shared: 0\n * // sub A: 0\n * // shared: 0\n * // sub B: 0\n * // source: 1\n * // shared: 1\n * // sub A: 1\n * // shared: completed <-- take(2) completes the subscription for sub A\n * // shared: unsubscribed <-- reference count = 1\n * // shared: 1\n * // sub B: 1\n * // shared: completed <-- take(2) completes the subscription for sub B\n * // shared: unsubscribed <-- reference count = 0\n * // source: unsubscribed <-- replaySubject unsubscribes from source observable because the reference count dropped to 0 and refCount is true\n *\n * // In case of refCount being false, the unsubscribe is never called on the source and the source would keep on emitting, even if no subscribers\n * // are listening.\n * // source: 2\n * // source: 3\n * // source: 4\n * // ...\n * ```\n *\n * @see {@link publish}\n * @see {@link share}\n * @see {@link publishReplay}\n *\n * @param {Number} [bufferSize=Infinity] Maximum element count of the replay buffer.\n * @param {Number} [windowTime=Infinity] Maximum time length of the replay buffer in milliseconds.\n * @param {Scheduler} [scheduler] Scheduler where connected observers within the selector function\n * will be invoked on.\n * @return A function that returns an Observable sequence that contains the\n * elements of a sequence produced by multicasting the source sequence within a\n * selector function.\n */\nexport function shareReplay<T>(\n  configOrBufferSize?: ShareReplayConfig | number,\n  windowTime?: number,\n  scheduler?: SchedulerLike\n): MonoTypeOperatorFunction<T> {\n  let bufferSize: number;\n  let refCount = false;\n  if (configOrBufferSize && typeof configOrBufferSize === 'object') {\n    ({ bufferSize = Infinity, windowTime = Infinity, refCount = false, scheduler } = configOrBufferSize);\n  } else {\n    bufferSize = (configOrBufferSize ?? Infinity) as number;\n  }\n  return share<T>({\n    connector: () => new ReplaySubject(bufferSize, windowTime, scheduler),\n    resetOnError: true,\n    resetOnComplete: false,\n    resetOnRefCountZero: refCount,\n  });\n}\n","import { Observable } from '../Observable';\nimport { EmptyError } from '../util/EmptyError';\n\nimport { MonoTypeOperatorFunction, OperatorFunction, TruthyTypesOf } from '../types';\nimport { SequenceError } from '../util/SequenceError';\nimport { NotFoundError } from '../util/NotFoundError';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\n\nexport function single<T>(predicate: BooleanConstructor): OperatorFunction<T, TruthyTypesOf<T>>;\nexport function single<T>(predicate?: (value: T, index: number, source: Observable<T>) => boolean): MonoTypeOperatorFunction<T>;\n\n/**\n * Returns an observable that asserts that only one value is\n * emitted from the observable that matches the predicate. If no\n * predicate is provided, then it will assert that the observable\n * only emits one value.\n *\n * In the event that the observable is empty, it will throw an\n * {@link EmptyError}.\n *\n * In the event that two values are found that match the predicate,\n * or when there are two values emitted and no predicate, it will\n * throw a {@link SequenceError}\n *\n * In the event that no values match the predicate, if one is provided,\n * it will throw a {@link NotFoundError}\n *\n * ## Example\n *\n * Expect only `name` beginning with `'B'`\n *\n * ```ts\n * import { of, single } from 'rxjs';\n *\n * const source1 = of(\n *  { name: 'Ben' },\n *  { name: 'Tracy' },\n *  { name: 'Laney' },\n *  { name: 'Lily' }\n * );\n *\n * source1\n *   .pipe(single(x => x.name.startsWith('B')))\n *   .subscribe(x => console.log(x));\n * // Emits 'Ben'\n *\n *\n * const source2 = of(\n *  { name: 'Ben' },\n *  { name: 'Tracy' },\n *  { name: 'Bradley' },\n *  { name: 'Lincoln' }\n * );\n *\n * source2\n *   .pipe(single(x => x.name.startsWith('B')))\n *   .subscribe({ error: err => console.error(err) });\n * // Error emitted: SequenceError('Too many values match')\n *\n *\n * const source3 = of(\n *  { name: 'Laney' },\n *  { name: 'Tracy' },\n *  { name: 'Lily' },\n *  { name: 'Lincoln' }\n * );\n *\n * source3\n *   .pipe(single(x => x.name.startsWith('B')))\n *   .subscribe({ error: err => console.error(err) });\n * // Error emitted: NotFoundError('No values match')\n * ```\n *\n * @see {@link first}\n * @see {@link find}\n * @see {@link findIndex}\n * @see {@link elementAt}\n *\n * @throws {NotFoundError} Delivers an NotFoundError to the Observer's `error`\n * callback if the Observable completes before any `next` notification was sent.\n * @throws {SequenceError} Delivers a SequenceError if more than one value is emitted that matches the\n * provided predicate. If no predicate is provided, will deliver a SequenceError if more\n * than one value comes from the source\n * @param {Function} predicate - A predicate function to evaluate items emitted by the source Observable.\n * @return A function that returns an Observable that emits the single item\n * emitted by the source Observable that matches the predicate.\n */\nexport function single<T>(predicate?: (value: T, index: number, source: Observable<T>) => boolean): MonoTypeOperatorFunction<T> {\n  return operate((source, subscriber) => {\n    let hasValue = false;\n    let singleValue: T;\n    let seenValue = false;\n    let index = 0;\n    source.subscribe(\n      createOperatorSubscriber(\n        subscriber,\n        (value) => {\n          seenValue = true;\n          if (!predicate || predicate(value, index++, source)) {\n            hasValue && subscriber.error(new SequenceError('Too many matching values'));\n            hasValue = true;\n            singleValue = value;\n          }\n        },\n        () => {\n          if (hasValue) {\n            subscriber.next(singleValue);\n            subscriber.complete();\n          } else {\n            subscriber.error(seenValue ? new NotFoundError('No matching values') : new EmptyError());\n          }\n        }\n      )\n    );\n  });\n}\n","import { MonoTypeOperatorFunction } from '../types';\nimport { filter } from './filter';\n\n/**\n * Returns an Observable that skips the first `count` items emitted by the source Observable.\n *\n * ![](skip.png)\n *\n * Skips the values until the sent notifications are equal or less than provided skip count. It raises\n * an error if skip count is equal or more than the actual number of emits and source raises an error.\n *\n * ## Example\n *\n * Skip the values before the emission\n *\n * ```ts\n * import { interval, skip } from 'rxjs';\n *\n * // emit every half second\n * const source = interval(500);\n * // skip the first 10 emitted values\n * const result = source.pipe(skip(10));\n *\n * result.subscribe(value => console.log(value));\n * // output: 10...11...12...13...\n * ```\n *\n * @see {@link last}\n * @see {@link skipWhile}\n * @see {@link skipUntil}\n * @see {@link skipLast}\n *\n * @param {Number} count - The number of times, items emitted by source Observable should be skipped.\n * @return A function that returns an Observable that skips the first `count`\n * values emitted by the source Observable.\n */\nexport function skip<T>(count: number): MonoTypeOperatorFunction<T> {\n  return filter((_, index) => count <= index);\n}\n","import { MonoTypeOperatorFunction } from '../types';\nimport { identity } from '../util/identity';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\n\n/**\n * Skip a specified number of values before the completion of an observable.\n *\n * ![](skipLast.png)\n *\n * Returns an observable that will emit values as soon as it can, given a number of\n * skipped values. For example, if you `skipLast(3)` on a source, when the source\n * emits its fourth value, the first value the source emitted will finally be emitted\n * from the returned observable, as it is no longer part of what needs to be skipped.\n *\n * All values emitted by the result of `skipLast(N)` will be delayed by `N` emissions,\n * as each value is held in a buffer until enough values have been emitted that that\n * the buffered value may finally be sent to the consumer.\n *\n * After subscribing, unsubscribing will not result in the emission of the buffered\n * skipped values.\n *\n * ## Example\n *\n * Skip the last 2 values of an observable with many values\n *\n * ```ts\n * import { of, skipLast } from 'rxjs';\n *\n * const numbers = of(1, 2, 3, 4, 5);\n * const skipLastTwo = numbers.pipe(skipLast(2));\n * skipLastTwo.subscribe(x => console.log(x));\n *\n * // Results in:\n * // 1 2 3\n * // (4 and 5 are skipped)\n * ```\n *\n * @see {@link skip}\n * @see {@link skipUntil}\n * @see {@link skipWhile}\n * @see {@link take}\n *\n * @param skipCount Number of elements to skip from the end of the source Observable.\n * @return A function that returns an Observable that skips the last `count`\n * values emitted by the source Observable.\n */\nexport function skipLast<T>(skipCount: number): MonoTypeOperatorFunction<T> {\n  return skipCount <= 0\n    ? // For skipCounts less than or equal to zero, we are just mirroring the source.\n      identity\n    : operate((source, subscriber) => {\n        // A ring buffer to hold the values while we wait to see\n        // if we can emit it or it's part of the \"skipped\" last values.\n        // Note that it is the _same size_ as the skip count.\n        let ring: T[] = new Array(skipCount);\n        // The number of values seen so far. This is used to get\n        // the index of the current value when it arrives.\n        let seen = 0;\n        source.subscribe(\n          createOperatorSubscriber(subscriber, (value) => {\n            // Get the index of the value we have right now\n            // relative to all other values we've seen, then\n            // increment `seen`. This ensures we've moved to\n            // the next slot in our ring buffer.\n            const valueIndex = seen++;\n            if (valueIndex < skipCount) {\n              // If we haven't seen enough values to fill our buffer yet,\n              // Then we aren't to a number of seen values where we can\n              // emit anything, so let's just start by filling the ring buffer.\n              ring[valueIndex] = value;\n            } else {\n              // We are traversing over the ring array in such\n              // a way that when we get to the end, we loop back\n              // and go to the start.\n              const index = valueIndex % skipCount;\n              // Pull the oldest value out so we can emit it,\n              // and stuff the new value in it's place.\n              const oldValue = ring[index];\n              ring[index] = value;\n              // Emit the old value. It is important that this happens\n              // after we swap the value in the buffer, if it happens\n              // before we swap the value in the buffer, then a synchronous\n              // source can get the buffer out of whack.\n              subscriber.next(oldValue);\n            }\n          })\n        );\n\n        return () => {\n          // Release our values in memory\n          ring = null!;\n        };\n      });\n}\n","import { Observable } from '../Observable';\nimport { MonoTypeOperatorFunction } from '../types';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nimport { innerFrom } from '../observable/innerFrom';\nimport { noop } from '../util/noop';\n\n/**\n * Returns an Observable that skips items emitted by the source Observable until a second Observable emits an item.\n *\n * The `skipUntil` operator causes the observable stream to skip the emission of values until the passed in observable emits the first value.\n * This can be particularly useful in combination with user interactions, responses of http requests or waiting for specific times to pass by.\n *\n * ![](skipUntil.png)\n *\n * Internally the `skipUntil` operator subscribes to the passed in observable (in the following called *notifier*) in order to recognize the emission\n * of its first value. When this happens, the operator unsubscribes from the *notifier* and starts emitting the values of the *source*\n * observable. It will never let the *source* observable emit any values if the *notifier* completes or throws an error without emitting\n * a value before.\n *\n * ## Example\n *\n * In the following example, all emitted values of the interval observable are skipped until the user clicks anywhere within the page\n *\n * ```ts\n * import { interval, fromEvent, skipUntil } from 'rxjs';\n *\n * const intervalObservable = interval(1000);\n * const click = fromEvent(document, 'click');\n *\n * const emitAfterClick = intervalObservable.pipe(\n *   skipUntil(click)\n * );\n * // clicked at 4.6s. output: 5...6...7...8........ or\n * // clicked at 7.3s. output: 8...9...10..11.......\n * emitAfterClick.subscribe(value => console.log(value));\n * ```\n *\n * @see {@link last}\n * @see {@link skip}\n * @see {@link skipWhile}\n * @see {@link skipLast}\n *\n * @param {Observable} notifier - The second Observable that has to emit an item before the source Observable's elements begin to\n * be mirrored by the resulting Observable.\n * @return A function that returns an Observable that skips items from the\n * source Observable until the second Observable emits an item, then emits the\n * remaining items.\n */\nexport function skipUntil<T>(notifier: Observable<any>): MonoTypeOperatorFunction<T> {\n  return operate((source, subscriber) => {\n    let taking = false;\n\n    const skipSubscriber = createOperatorSubscriber(\n      subscriber,\n      () => {\n        skipSubscriber?.unsubscribe();\n        taking = true;\n      },\n      noop\n    );\n\n    innerFrom(notifier).subscribe(skipSubscriber);\n\n    source.subscribe(createOperatorSubscriber(subscriber, (value) => taking && subscriber.next(value)));\n  });\n}\n","import { Falsy, MonoTypeOperatorFunction, OperatorFunction } from '../types';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\n\nexport function skipWhile<T>(predicate: BooleanConstructor): OperatorFunction<T, Extract<T, Falsy> extends never ? never : T>;\nexport function skipWhile<T>(predicate: (value: T, index: number) => true): OperatorFunction<T, never>;\nexport function skipWhile<T>(predicate: (value: T, index: number) => boolean): MonoTypeOperatorFunction<T>;\n\n/**\n * Returns an Observable that skips all items emitted by the source Observable as long as a specified condition holds\n * true, but emits all further source items as soon as the condition becomes false.\n *\n * ![](skipWhile.png)\n *\n * Skips all the notifications with a truthy predicate. It will not skip the notifications when the predicate is falsy.\n * It can also be skipped using index. Once the predicate is true, it will not be called again.\n *\n * ## Example\n *\n * Skip some super heroes\n *\n * ```ts\n * import { from, skipWhile } from 'rxjs';\n *\n * const source = from(['Green Arrow', 'SuperMan', 'Flash', 'SuperGirl', 'Black Canary'])\n * // Skip the heroes until SuperGirl\n * const example = source.pipe(skipWhile(hero => hero !== 'SuperGirl'));\n * // output: SuperGirl, Black Canary\n * example.subscribe(femaleHero => console.log(femaleHero));\n * ```\n *\n * Skip values from the array until index 5\n *\n * ```ts\n * import { from, skipWhile } from 'rxjs';\n *\n * const source = from([1, 2, 3, 4, 5, 6, 7, 9, 10]);\n * const example = source.pipe(skipWhile((_, i) => i !== 5));\n * // output: 6, 7, 9, 10\n * example.subscribe(value => console.log(value));\n * ```\n *\n * @see {@link last}\n * @see {@link skip}\n * @see {@link skipUntil}\n * @see {@link skipLast}\n *\n * @param {Function} predicate - A function to test each item emitted from the source Observable.\n * @return A function that returns an Observable that begins emitting items\n * emitted by the source Observable when the specified predicate becomes false.\n */\nexport function skipWhile<T>(predicate: (value: T, index: number) => boolean): MonoTypeOperatorFunction<T> {\n  return operate((source, subscriber) => {\n    let taking = false;\n    let index = 0;\n    source.subscribe(\n      createOperatorSubscriber(subscriber, (value) => (taking || (taking = !predicate(value, index++))) && subscriber.next(value))\n    );\n  });\n}\n","import { concat } from '../observable/concat';\nimport { OperatorFunction, SchedulerLike, ValueFromArray } from '../types';\nimport { popScheduler } from '../util/args';\nimport { operate } from '../util/lift';\n\n// Devs are more likely to pass null or undefined than they are a scheduler\n// without accompanying values. To make things easier for (naughty) devs who\n// use the `strictNullChecks: false` TypeScript compiler option, these\n// overloads with explicit null and undefined values are included.\n\nexport function startWith<T>(value: null): OperatorFunction<T, T | null>;\nexport function startWith<T>(value: undefined): OperatorFunction<T, T | undefined>;\n\n/** @deprecated The `scheduler` parameter will be removed in v8. Use `scheduled` and `concatAll`. Details: https://rxjs.dev/deprecations/scheduler-argument */\nexport function startWith<T, A extends readonly unknown[] = T[]>(\n  ...valuesAndScheduler: [...A, SchedulerLike]\n): OperatorFunction<T, T | ValueFromArray<A>>;\nexport function startWith<T, A extends readonly unknown[] = T[]>(...values: A): OperatorFunction<T, T | ValueFromArray<A>>;\n\n/**\n * Returns an observable that, at the moment of subscription, will synchronously emit all\n * values provided to this operator, then subscribe to the source and mirror all of its emissions\n * to subscribers.\n *\n * This is a useful way to know when subscription has occurred on an existing observable.\n *\n * <span class=\"informal\">First emits its arguments in order, and then any\n * emissions from the source.</span>\n *\n * ![](startWith.png)\n *\n * ## Examples\n *\n * Emit a value when a timer starts.\n *\n * ```ts\n * import { timer, map, startWith } from 'rxjs';\n *\n * timer(1000)\n *   .pipe(\n *     map(() => 'timer emit'),\n *     startWith('timer start')\n *   )\n *   .subscribe(x => console.log(x));\n *\n * // results:\n * // 'timer start'\n * // 'timer emit'\n * ```\n *\n * @param values Items you want the modified Observable to emit first.\n * @return A function that returns an Observable that synchronously emits\n * provided values before subscribing to the source Observable.\n *\n * @see {@link endWith}\n * @see {@link finalize}\n * @see {@link concat}\n */\nexport function startWith<T, D>(...values: D[]): OperatorFunction<T, T | D> {\n  const scheduler = popScheduler(values);\n  return operate((source, subscriber) => {\n    // Here we can't pass `undefined` as a scheduler, because if we did, the\n    // code inside of `concat` would be confused by the `undefined`, and treat it\n    // like an invalid observable. So we have to split it two different ways.\n    (scheduler ? concat(values, source, scheduler) : concat(values, source)).subscribe(subscriber);\n  });\n}\n","import { MonoTypeOperatorFunction, SchedulerLike } from '../types';\nimport { operate } from '../util/lift';\n\n/**\n * Asynchronously subscribes Observers to this Observable on the specified {@link SchedulerLike}.\n *\n * With `subscribeOn` you can decide what type of scheduler a specific Observable will be using when it is subscribed to.\n *\n * Schedulers control the speed and order of emissions to observers from an Observable stream.\n *\n * ![](subscribeOn.png)\n *\n * ## Example\n *\n * Given the following code:\n *\n * ```ts\n * import { of, merge } from 'rxjs';\n *\n * const a = of(1, 2, 3);\n * const b = of(4, 5, 6);\n *\n * merge(a, b).subscribe(console.log);\n *\n * // Outputs\n * // 1\n * // 2\n * // 3\n * // 4\n * // 5\n * // 6\n * ```\n *\n * Both Observable `a` and `b` will emit their values directly and synchronously once they are subscribed to.\n *\n * If we instead use the `subscribeOn` operator declaring that we want to use the {@link asyncScheduler} for values emitted by Observable `a`:\n *\n * ```ts\n * import { of, subscribeOn, asyncScheduler, merge } from 'rxjs';\n *\n * const a = of(1, 2, 3).pipe(subscribeOn(asyncScheduler));\n * const b = of(4, 5, 6);\n *\n * merge(a, b).subscribe(console.log);\n *\n * // Outputs\n * // 4\n * // 5\n * // 6\n * // 1\n * // 2\n * // 3\n * ```\n *\n * The reason for this is that Observable `b` emits its values directly and synchronously like before\n * but the emissions from `a` are scheduled on the event loop because we are now using the {@link asyncScheduler} for that specific Observable.\n *\n * @param scheduler The {@link SchedulerLike} to perform subscription actions on.\n * @param delay A delay to pass to the scheduler to delay subscriptions\n * @return A function that returns an Observable modified so that its\n * subscriptions happen on the specified {@link SchedulerLike}.\n */\nexport function subscribeOn<T>(scheduler: SchedulerLike, delay: number = 0): MonoTypeOperatorFunction<T> {\n  return operate((source, subscriber) => {\n    subscriber.add(scheduler.schedule(() => source.subscribe(subscriber), delay));\n  });\n}\n","import { OperatorFunction, ObservableInput, ObservedValueOf } from '../types';\nimport { switchMap } from './switchMap';\nimport { identity } from '../util/identity';\n\n/**\n * Converts a higher-order Observable into a first-order Observable\n * producing values only from the most recent observable sequence\n *\n * <span class=\"informal\">Flattens an Observable-of-Observables.</span>\n *\n * ![](switchAll.png)\n *\n * `switchAll` subscribes to a source that is an observable of observables, also known as a\n * \"higher-order observable\" (or `Observable<Observable<T>>`). It subscribes to the most recently\n * provided \"inner observable\" emitted by the source, unsubscribing from any previously subscribed\n * to inner observable, such that only the most recent inner observable may be subscribed to at\n * any point in time. The resulting observable returned by `switchAll` will only complete if the\n * source observable completes, *and* any currently subscribed to inner observable also has completed,\n * if there are any.\n *\n * ## Examples\n *\n * Spawn a new interval observable for each click event, but for every new\n * click, cancel the previous interval and subscribe to the new one\n *\n * ```ts\n * import { fromEvent, tap, map, interval, switchAll } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click').pipe(tap(() => console.log('click')));\n * const source = clicks.pipe(map(() => interval(1000)));\n *\n * source\n *   .pipe(switchAll())\n *   .subscribe(x => console.log(x));\n *\n * // Output\n * // click\n * // 0\n * // 1\n * // 2\n * // 3\n * // ...\n * // click\n * // 0\n * // 1\n * // 2\n * // ...\n * // click\n * // ...\n * ```\n *\n * @see {@link combineLatestAll}\n * @see {@link concatAll}\n * @see {@link exhaustAll}\n * @see {@link switchMap}\n * @see {@link switchMapTo}\n * @see {@link mergeAll}\n *\n * @return A function that returns an Observable that converts a higher-order\n * Observable into a first-order Observable producing values only from the most\n * recent Observable sequence.\n */\nexport function switchAll<O extends ObservableInput<any>>(): OperatorFunction<O, ObservedValueOf<O>> {\n  return switchMap(identity);\n}\n","import { Subscriber } from '../Subscriber';\nimport { ObservableInput, OperatorFunction, ObservedValueOf } from '../types';\nimport { innerFrom } from '../observable/innerFrom';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\n\n/* tslint:disable:max-line-length */\nexport function switchMap<T, O extends ObservableInput<any>>(\n  project: (value: T, index: number) => O\n): OperatorFunction<T, ObservedValueOf<O>>;\n/** @deprecated The `resultSelector` parameter will be removed in v8. Use an inner `map` instead. Details: https://rxjs.dev/deprecations/resultSelector */\nexport function switchMap<T, O extends ObservableInput<any>>(\n  project: (value: T, index: number) => O,\n  resultSelector: undefined\n): OperatorFunction<T, ObservedValueOf<O>>;\n/** @deprecated The `resultSelector` parameter will be removed in v8. Use an inner `map` instead. Details: https://rxjs.dev/deprecations/resultSelector */\nexport function switchMap<T, R, O extends ObservableInput<any>>(\n  project: (value: T, index: number) => O,\n  resultSelector: (outerValue: T, innerValue: ObservedValueOf<O>, outerIndex: number, innerIndex: number) => R\n): OperatorFunction<T, R>;\n/* tslint:enable:max-line-length */\n\n/**\n * Projects each source value to an Observable which is merged in the output\n * Observable, emitting values only from the most recently projected Observable.\n *\n * <span class=\"informal\">Maps each value to an Observable, then flattens all of\n * these inner Observables.</span>\n *\n * ![](switchMap.png)\n *\n * Returns an Observable that emits items based on applying a function that you\n * supply to each item emitted by the source Observable, where that function\n * returns an (so-called \"inner\") Observable. Each time it observes one of these\n * inner Observables, the output Observable begins emitting the items emitted by\n * that inner Observable. When a new inner Observable is emitted, `switchMap`\n * stops emitting items from the earlier-emitted inner Observable and begins\n * emitting items from the new one. It continues to behave like this for\n * subsequent inner Observables.\n *\n * ## Example\n *\n * Generate new Observable according to source Observable values\n *\n * ```ts\n * import { of, switchMap } from 'rxjs';\n *\n * const switched = of(1, 2, 3).pipe(switchMap(x => of(x, x ** 2, x ** 3)));\n * switched.subscribe(x => console.log(x));\n * // outputs\n * // 1\n * // 1\n * // 1\n * // 2\n * // 4\n * // 8\n * // 3\n * // 9\n * // 27\n * ```\n *\n * Restart an interval Observable on every click event\n *\n * ```ts\n * import { fromEvent, switchMap, interval } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const result = clicks.pipe(switchMap(() => interval(1000)));\n * result.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link concatMap}\n * @see {@link exhaustMap}\n * @see {@link mergeMap}\n * @see {@link switchAll}\n * @see {@link switchMapTo}\n *\n * @param {function(value: T, index: number): ObservableInput} project A function\n * that, when applied to an item emitted by the source Observable, returns an\n * Observable.\n * @return A function that returns an Observable that emits the result of\n * applying the projection function (and the optional deprecated\n * `resultSelector`) to each item emitted by the source Observable and taking\n * only the values from the most recently projected inner Observable.\n */\nexport function switchMap<T, R, O extends ObservableInput<any>>(\n  project: (value: T, index: number) => O,\n  resultSelector?: (outerValue: T, innerValue: ObservedValueOf<O>, outerIndex: number, innerIndex: number) => R\n): OperatorFunction<T, ObservedValueOf<O> | R> {\n  return operate((source, subscriber) => {\n    let innerSubscriber: Subscriber<ObservedValueOf<O>> | null = null;\n    let index = 0;\n    // Whether or not the source subscription has completed\n    let isComplete = false;\n\n    // We only complete the result if the source is complete AND we don't have an active inner subscription.\n    // This is called both when the source completes and when the inners complete.\n    const checkComplete = () => isComplete && !innerSubscriber && subscriber.complete();\n\n    source.subscribe(\n      createOperatorSubscriber(\n        subscriber,\n        (value) => {\n          // Cancel the previous inner subscription if there was one\n          innerSubscriber?.unsubscribe();\n          let innerIndex = 0;\n          const outerIndex = index++;\n          // Start the next inner subscription\n          innerFrom(project(value, outerIndex)).subscribe(\n            (innerSubscriber = createOperatorSubscriber(\n              subscriber,\n              // When we get a new inner value, next it through. Note that this is\n              // handling the deprecate result selector here. This is because with this architecture\n              // it ends up being smaller than using the map operator.\n              (innerValue) => subscriber.next(resultSelector ? resultSelector(value, innerValue, outerIndex, innerIndex++) : innerValue),\n              () => {\n                // The inner has completed. Null out the inner subcriber to\n                // free up memory and to signal that we have no inner subscription\n                // currently.\n                innerSubscriber = null!;\n                checkComplete();\n              }\n            ))\n          );\n        },\n        () => {\n          isComplete = true;\n          checkComplete();\n        }\n      )\n    );\n  });\n}\n","import { switchMap } from './switchMap';\nimport { ObservableInput, OperatorFunction, ObservedValueOf } from '../types';\nimport { isFunction } from '../util/isFunction';\n\n/** @deprecated Will be removed in v9. Use {@link switchMap} instead: `switchMap(() => result)` */\nexport function switchMapTo<O extends ObservableInput<unknown>>(observable: O): OperatorFunction<unknown, ObservedValueOf<O>>;\n/** @deprecated The `resultSelector` parameter will be removed in v8. Use an inner `map` instead. Details: https://rxjs.dev/deprecations/resultSelector */\nexport function switchMapTo<O extends ObservableInput<unknown>>(\n  observable: O,\n  resultSelector: undefined\n): OperatorFunction<unknown, ObservedValueOf<O>>;\n/** @deprecated The `resultSelector` parameter will be removed in v8. Use an inner `map` instead. Details: https://rxjs.dev/deprecations/resultSelector */\nexport function switchMapTo<T, R, O extends ObservableInput<unknown>>(\n  observable: O,\n  resultSelector: (outerValue: T, innerValue: ObservedValueOf<O>, outerIndex: number, innerIndex: number) => R\n): OperatorFunction<T, R>;\n\n/**\n * Projects each source value to the same Observable which is flattened multiple\n * times with {@link switchMap} in the output Observable.\n *\n * <span class=\"informal\">It's like {@link switchMap}, but maps each value\n * always to the same inner Observable.</span>\n *\n * ![](switchMapTo.png)\n *\n * Maps each source value to the given Observable `innerObservable` regardless\n * of the source value, and then flattens those resulting Observables into one\n * single Observable, which is the output Observable. The output Observables\n * emits values only from the most recently emitted instance of\n * `innerObservable`.\n *\n * ## Example\n *\n * Restart an interval Observable on every click event\n *\n * ```ts\n * import { fromEvent, switchMapTo, interval } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const result = clicks.pipe(switchMapTo(interval(1000)));\n * result.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link concatMapTo}\n * @see {@link switchAll}\n * @see {@link switchMap}\n * @see {@link mergeMapTo}\n *\n * @param {ObservableInput} innerObservable An Observable to replace each value from\n * the source Observable.\n * @return A function that returns an Observable that emits items from the\n * given `innerObservable` (and optionally transformed through the deprecated\n * `resultSelector`) every time a value is emitted on the source Observable,\n * and taking only the values from the most recently projected inner\n * Observable.\n * @deprecated Will be removed in v9. Use {@link switchMap} instead: `switchMap(() => result)`\n */\nexport function switchMapTo<T, R, O extends ObservableInput<unknown>>(\n  innerObservable: O,\n  resultSelector?: (outerValue: T, innerValue: ObservedValueOf<O>, outerIndex: number, innerIndex: number) => R\n): OperatorFunction<T, ObservedValueOf<O> | R> {\n  return isFunction(resultSelector) ? switchMap(() => innerObservable, resultSelector) : switchMap(() => innerObservable);\n}\n","import { ObservableInput, ObservedValueOf, OperatorFunction } from '../types';\nimport { switchMap } from './switchMap';\nimport { operate } from '../util/lift';\n\n// TODO: Generate a marble diagram for these docs.\n\n/**\n * Applies an accumulator function over the source Observable where the\n * accumulator function itself returns an Observable, emitting values\n * only from the most recently returned Observable.\n *\n * <span class=\"informal\">It's like {@link mergeScan}, but only the most recent\n * Observable returned by the accumulator is merged into the outer Observable.</span>\n *\n * @see {@link scan}\n * @see {@link mergeScan}\n * @see {@link switchMap}\n *\n * @param accumulator\n * The accumulator function called on each source value.\n * @param seed The initial accumulation value.\n * @return A function that returns an observable of the accumulated values.\n */\nexport function switchScan<T, R, O extends ObservableInput<any>>(\n  accumulator: (acc: R, value: T, index: number) => O,\n  seed: R\n): OperatorFunction<T, ObservedValueOf<O>> {\n  return operate((source, subscriber) => {\n    // The state we will keep up to date to pass into our\n    // accumulator function at each new value from the source.\n    let state = seed;\n\n    // Use `switchMap` on our `source` to do the work of creating\n    // this operator. Note the backwards order here of `switchMap()(source)`\n    // to avoid needing to use `pipe` unnecessarily\n    switchMap(\n      // On each value from the source, call the accumulator with\n      // our previous state, the value and the index.\n      (value: T, index) => accumulator(state, value, index),\n      // Using the deprecated result selector here as a dirty trick\n      // to update our state with the flattened value.\n      (_, innerValue) => ((state = innerValue), innerValue)\n    )(source).subscribe(subscriber);\n\n    return () => {\n      // Release state on finalization\n      state = null!;\n    };\n  });\n}\n","import { MonoTypeOperatorFunction } from '../types';\nimport { EMPTY } from '../observable/empty';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\n\n/**\n * Emits only the first `count` values emitted by the source Observable.\n *\n * <span class=\"informal\">Takes the first `count` values from the source, then\n * completes.</span>\n *\n * ![](take.png)\n *\n * `take` returns an Observable that emits only the first `count` values emitted\n * by the source Observable. If the source emits fewer than `count` values then\n * all of its values are emitted. After that, it completes, regardless if the\n * source completes.\n *\n * ## Example\n *\n * Take the first 5 seconds of an infinite 1-second interval Observable\n *\n * ```ts\n * import { interval, take } from 'rxjs';\n *\n * const intervalCount = interval(1000);\n * const takeFive = intervalCount.pipe(take(5));\n * takeFive.subscribe(x => console.log(x));\n *\n * // Logs:\n * // 0\n * // 1\n * // 2\n * // 3\n * // 4\n * ```\n *\n * @see {@link takeLast}\n * @see {@link takeUntil}\n * @see {@link takeWhile}\n * @see {@link skip}\n *\n * @param count The maximum number of `next` values to emit.\n * @return A function that returns an Observable that emits only the first\n * `count` values emitted by the source Observable, or all of the values from\n * the source if the source emits fewer than `count` values.\n */\nexport function take<T>(count: number): MonoTypeOperatorFunction<T> {\n  return count <= 0\n    ? // If we are taking no values, that's empty.\n      () => EMPTY\n    : operate((source, subscriber) => {\n        let seen = 0;\n        source.subscribe(\n          createOperatorSubscriber(subscriber, (value) => {\n            // Increment the number of values we have seen,\n            // then check it against the allowed count to see\n            // if we are still letting values through.\n            if (++seen <= count) {\n              subscriber.next(value);\n              // If we have met or passed our allowed count,\n              // we need to complete. We have to do <= here,\n              // because re-entrant code will increment `seen` twice.\n              if (count <= seen) {\n                subscriber.complete();\n              }\n            }\n          })\n        );\n      });\n}\n","import { EMPTY } from '../observable/empty';\nimport { MonoTypeOperatorFunction } from '../types';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\n\n/**\n * Waits for the source to complete, then emits the last N values from the source,\n * as specified by the `count` argument.\n *\n * ![](takeLast.png)\n *\n * `takeLast` results in an observable that will hold values up to `count` values in memory,\n * until the source completes. It then pushes all values in memory to the consumer, in the\n * order they were received from the source, then notifies the consumer that it is\n * complete.\n *\n * If for some reason the source completes before the `count` supplied to `takeLast` is reached,\n * all values received until that point are emitted, and then completion is notified.\n *\n * **Warning**: Using `takeLast` with an observable that never completes will result\n * in an observable that never emits a value.\n *\n * ## Example\n *\n * Take the last 3 values of an Observable with many values\n *\n * ```ts\n * import { range, takeLast } from 'rxjs';\n *\n * const many = range(1, 100);\n * const lastThree = many.pipe(takeLast(3));\n * lastThree.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link take}\n * @see {@link takeUntil}\n * @see {@link takeWhile}\n * @see {@link skip}\n *\n * @param count The maximum number of values to emit from the end of\n * the sequence of values emitted by the source Observable.\n * @return A function that returns an Observable that emits at most the last\n * `count` values emitted by the source Observable.\n */\nexport function takeLast<T>(count: number): MonoTypeOperatorFunction<T> {\n  return count <= 0\n    ? () => EMPTY\n    : operate((source, subscriber) => {\n        // This buffer will hold the values we are going to emit\n        // when the source completes. Since we only want to take the\n        // last N values, we can't emit until we're sure we're not getting\n        // any more values.\n        let buffer: T[] = [];\n        source.subscribe(\n          createOperatorSubscriber(\n            subscriber,\n            (value) => {\n              // Add the most recent value onto the end of our buffer.\n              buffer.push(value);\n              // If our buffer is now larger than the number of values we\n              // want to take, we remove the oldest value from the buffer.\n              count < buffer.length && buffer.shift();\n            },\n            () => {\n              // The source completed, we now know what are last values\n              // are, emit them in the order they were received.\n              for (const value of buffer) {\n                subscriber.next(value);\n              }\n              subscriber.complete();\n            },\n            // Errors are passed through to the consumer\n            undefined,\n            () => {\n              // During finalization release the values in our buffer.\n              buffer = null!;\n            }\n          )\n        );\n      });\n}\n","import { MonoTypeOperatorFunction, ObservableInput } from '../types';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nimport { innerFrom } from '../observable/innerFrom';\nimport { noop } from '../util/noop';\n\n/**\n * Emits the values emitted by the source Observable until a `notifier`\n * Observable emits a value.\n *\n * <span class=\"informal\">Lets values pass until a second Observable,\n * `notifier`, emits a value. Then, it completes.</span>\n *\n * ![](takeUntil.png)\n *\n * `takeUntil` subscribes and begins mirroring the source Observable. It also\n * monitors a second Observable, `notifier` that you provide. If the `notifier`\n * emits a value, the output Observable stops mirroring the source Observable\n * and completes. If the `notifier` doesn't emit any value and completes\n * then `takeUntil` will pass all values.\n *\n * ## Example\n *\n * Tick every second until the first click happens\n *\n * ```ts\n * import { interval, fromEvent, takeUntil } from 'rxjs';\n *\n * const source = interval(1000);\n * const clicks = fromEvent(document, 'click');\n * const result = source.pipe(takeUntil(clicks));\n * result.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link take}\n * @see {@link takeLast}\n * @see {@link takeWhile}\n * @see {@link skip}\n *\n * @param {Observable} notifier The Observable whose first emitted value will\n * cause the output Observable of `takeUntil` to stop emitting values from the\n * source Observable.\n * @return A function that returns an Observable that emits the values from the\n * source Observable until `notifier` emits its first value.\n */\nexport function takeUntil<T>(notifier: ObservableInput<any>): MonoTypeOperatorFunction<T> {\n  return operate((source, subscriber) => {\n    innerFrom(notifier).subscribe(createOperatorSubscriber(subscriber, () => subscriber.complete(), noop));\n    !subscriber.closed && source.subscribe(subscriber);\n  });\n}\n","import { OperatorFunction, MonoTypeOperatorFunction, TruthyTypesOf } from '../types';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\n\nexport function takeWhile<T>(predicate: BooleanConstructor, inclusive: true): MonoTypeOperatorFunction<T>;\nexport function takeWhile<T>(predicate: BooleanConstructor, inclusive: false): OperatorFunction<T, TruthyTypesOf<T>>;\nexport function takeWhile<T>(predicate: BooleanConstructor): OperatorFunction<T, TruthyTypesOf<T>>;\nexport function takeWhile<T, S extends T>(predicate: (value: T, index: number) => value is S): OperatorFunction<T, S>;\nexport function takeWhile<T, S extends T>(predicate: (value: T, index: number) => value is S, inclusive: false): OperatorFunction<T, S>;\nexport function takeWhile<T>(predicate: (value: T, index: number) => boolean, inclusive?: boolean): MonoTypeOperatorFunction<T>;\n\n/**\n * Emits values emitted by the source Observable so long as each value satisfies\n * the given `predicate`, and then completes as soon as this `predicate` is not\n * satisfied.\n *\n * <span class=\"informal\">Takes values from the source only while they pass the\n * condition given. When the first value does not satisfy, it completes.</span>\n *\n * ![](takeWhile.png)\n *\n * `takeWhile` subscribes and begins mirroring the source Observable. Each value\n * emitted on the source is given to the `predicate` function which returns a\n * boolean, representing a condition to be satisfied by the source values. The\n * output Observable emits the source values until such time as the `predicate`\n * returns false, at which point `takeWhile` stops mirroring the source\n * Observable and completes the output Observable.\n *\n * ## Example\n *\n * Emit click events only while the clientX property is greater than 200\n *\n * ```ts\n * import { fromEvent, takeWhile } from 'rxjs';\n *\n * const clicks = fromEvent<PointerEvent>(document, 'click');\n * const result = clicks.pipe(takeWhile(ev => ev.clientX > 200));\n * result.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link take}\n * @see {@link takeLast}\n * @see {@link takeUntil}\n * @see {@link skip}\n *\n * @param {function(value: T, index: number): boolean} predicate A function that\n * evaluates a value emitted by the source Observable and returns a boolean.\n * Also takes the (zero-based) index as the second argument.\n * @param {boolean} inclusive When set to `true` the value that caused\n * `predicate` to return `false` will also be emitted.\n * @return A function that returns an Observable that emits values from the\n * source Observable so long as each value satisfies the condition defined by\n * the `predicate`, then completes.\n */\nexport function takeWhile<T>(predicate: (value: T, index: number) => boolean, inclusive = false): MonoTypeOperatorFunction<T> {\n  return operate((source, subscriber) => {\n    let index = 0;\n    source.subscribe(\n      createOperatorSubscriber(subscriber, (value) => {\n        const result = predicate(value, index++);\n        (result || inclusive) && subscriber.next(value);\n        !result && subscriber.complete();\n      })\n    );\n  });\n}\n","import { MonoTypeOperatorFunction, Observer } from '../types';\nimport { isFunction } from '../util/isFunction';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nimport { identity } from '../util/identity';\n\nexport interface TapObserver<T> extends Observer<T> {\n  subscribe: () => void;\n  unsubscribe: () => void;\n  finalize: () => void;\n}\n\nexport function tap<T>(observer?: Partial<TapObserver<T>>): MonoTypeOperatorFunction<T>;\nexport function tap<T>(next: (value: T) => void): MonoTypeOperatorFunction<T>;\n/** @deprecated Instead of passing separate callback arguments, use an observer argument. Signatures taking separate callback arguments will be removed in v8. Details: https://rxjs.dev/deprecations/subscribe-arguments */\nexport function tap<T>(\n  next?: ((value: T) => void) | null,\n  error?: ((error: any) => void) | null,\n  complete?: (() => void) | null\n): MonoTypeOperatorFunction<T>;\n\n/**\n * Used to perform side-effects for notifications from the source observable\n *\n * <span class=\"informal\">Used when you want to affect outside state with a notification without altering the notification</span>\n *\n * ![](tap.png)\n *\n * Tap is designed to allow the developer a designated place to perform side effects. While you _could_ perform side-effects\n * inside of a `map` or a `mergeMap`, that would make their mapping functions impure, which isn't always a big deal, but will\n * make it so you can't do things like memoize those functions. The `tap` operator is designed solely for such side-effects to\n * help you remove side-effects from other operations.\n *\n * For any notification, next, error, or complete, `tap` will call the appropriate callback you have provided to it, via a function\n * reference, or a partial observer, then pass that notification down the stream.\n *\n * The observable returned by `tap` is an exact mirror of the source, with one exception: Any error that occurs -- synchronously -- in a handler\n * provided to `tap` will be emitted as an error from the returned observable.\n *\n * > Be careful! You can mutate objects as they pass through the `tap` operator's handlers.\n *\n * The most common use of `tap` is actually for debugging. You can place a `tap(console.log)` anywhere\n * in your observable `pipe`, log out the notifications as they are emitted by the source returned by the previous\n * operation.\n *\n * ## Examples\n *\n * Check a random number before it is handled. Below is an observable that will use a random number between 0 and 1,\n * and emit `'big'` or `'small'` depending on the size of that number. But we wanted to log what the original number\n * was, so we have added a `tap(console.log)`.\n *\n * ```ts\n * import { of, tap, map } from 'rxjs';\n *\n * of(Math.random()).pipe(\n *   tap(console.log),\n *   map(n => n > 0.5 ? 'big' : 'small')\n * ).subscribe(console.log);\n * ```\n *\n * Using `tap` to analyze a value and force an error. Below is an observable where in our system we only\n * want to emit numbers 3 or less we get from another source. We can force our observable to error\n * using `tap`.\n *\n * ```ts\n * import { of, tap } from 'rxjs';\n *\n * const source = of(1, 2, 3, 4, 5);\n *\n * source.pipe(\n *   tap(n => {\n *     if (n > 3) {\n *       throw new TypeError(`Value ${ n } is greater than 3`);\n *     }\n *   })\n * )\n * .subscribe({ next: console.log, error: err => console.log(err.message) });\n * ```\n *\n * We want to know when an observable completes before moving on to the next observable. The system\n * below will emit a random series of `'X'` characters from 3 different observables in sequence. The\n * only way we know when one observable completes and moves to the next one, in this case, is because\n * we have added a `tap` with the side effect of logging to console.\n *\n * ```ts\n * import { of, concatMap, interval, take, map, tap } from 'rxjs';\n *\n * of(1, 2, 3).pipe(\n *   concatMap(n => interval(1000).pipe(\n *     take(Math.round(Math.random() * 10)),\n *     map(() => 'X'),\n *     tap({ complete: () => console.log(`Done with ${ n }`) })\n *   ))\n * )\n * .subscribe(console.log);\n * ```\n *\n * @see {@link finalize}\n * @see {@link Observable#subscribe}\n *\n * @param observerOrNext A next handler or partial observer\n * @param error An error handler\n * @param complete A completion handler\n * @return A function that returns an Observable identical to the source, but\n * runs the specified Observer or callback(s) for each item.\n */\nexport function tap<T>(\n  observerOrNext?: Partial<TapObserver<T>> | ((value: T) => void) | null,\n  error?: ((e: any) => void) | null,\n  complete?: (() => void) | null\n): MonoTypeOperatorFunction<T> {\n  // We have to check to see not only if next is a function,\n  // but if error or complete were passed. This is because someone\n  // could technically call tap like `tap(null, fn)` or `tap(null, null, fn)`.\n  const tapObserver =\n    isFunction(observerOrNext) || error || complete\n      ? // tslint:disable-next-line: no-object-literal-type-assertion\n        ({ next: observerOrNext as Exclude<typeof observerOrNext, Partial<TapObserver<T>>>, error, complete } as Partial<TapObserver<T>>)\n      : observerOrNext;\n\n  return tapObserver\n    ? operate((source, subscriber) => {\n        tapObserver.subscribe?.();\n        let isUnsub = true;\n        source.subscribe(\n          createOperatorSubscriber(\n            subscriber,\n            (value) => {\n              tapObserver.next?.(value);\n              subscriber.next(value);\n            },\n            () => {\n              isUnsub = false;\n              tapObserver.complete?.();\n              subscriber.complete();\n            },\n            (err) => {\n              isUnsub = false;\n              tapObserver.error?.(err);\n              subscriber.error(err);\n            },\n            () => {\n              if (isUnsub) {\n                tapObserver.unsubscribe?.();\n              }\n              tapObserver.finalize?.();\n            }\n          )\n        );\n      })\n    : // Tap was called with no valid tap observer or handler\n      // (e.g. `tap(null, null, null)` or `tap(null)` or `tap()`)\n      // so we're going to just mirror the source.\n      identity;\n}\n","import { Subscription } from '../Subscription';\n\nimport { MonoTypeOperatorFunction, ObservableInput } from '../types';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nimport { innerFrom } from '../observable/innerFrom';\n\nexport interface ThrottleConfig {\n  leading?: boolean;\n  trailing?: boolean;\n}\n\nexport const defaultThrottleConfig: ThrottleConfig = {\n  leading: true,\n  trailing: false,\n};\n\n/**\n * Emits a value from the source Observable, then ignores subsequent source\n * values for a duration determined by another Observable, then repeats this\n * process.\n *\n * <span class=\"informal\">It's like {@link throttleTime}, but the silencing\n * duration is determined by a second Observable.</span>\n *\n * ![](throttle.svg)\n *\n * `throttle` emits the source Observable values on the output Observable\n * when its internal timer is disabled, and ignores source values when the timer\n * is enabled. Initially, the timer is disabled. As soon as the first source\n * value arrives, it is forwarded to the output Observable, and then the timer\n * is enabled by calling the `durationSelector` function with the source value,\n * which returns the \"duration\" Observable. When the duration Observable emits a\n * value, the timer is disabled, and this process repeats for the\n * next source value.\n *\n * ## Example\n *\n * Emit clicks at a rate of at most one click per second\n *\n * ```ts\n * import { fromEvent, throttle, interval } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const result = clicks.pipe(throttle(() => interval(1000)));\n *\n * result.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link audit}\n * @see {@link debounce}\n * @see {@link delayWhen}\n * @see {@link sample}\n * @see {@link throttleTime}\n *\n * @param durationSelector A function\n * that receives a value from the source Observable, for computing the silencing\n * duration for each source value, returned as an Observable or a Promise.\n * @param config a configuration object to define `leading` and `trailing` behavior. Defaults\n * to `{ leading: true, trailing: false }`.\n * @return A function that returns an Observable that performs the throttle\n * operation to limit the rate of emissions from the source.\n */\nexport function throttle<T>(\n  durationSelector: (value: T) => ObservableInput<any>,\n  config: ThrottleConfig = defaultThrottleConfig\n): MonoTypeOperatorFunction<T> {\n  return operate((source, subscriber) => {\n    const { leading, trailing } = config;\n    let hasValue = false;\n    let sendValue: T | null = null;\n    let throttled: Subscription | null = null;\n    let isComplete = false;\n\n    const endThrottling = () => {\n      throttled?.unsubscribe();\n      throttled = null;\n      if (trailing) {\n        send();\n        isComplete && subscriber.complete();\n      }\n    };\n\n    const cleanupThrottling = () => {\n      throttled = null;\n      isComplete && subscriber.complete();\n    };\n\n    const startThrottle = (value: T) =>\n      (throttled = innerFrom(durationSelector(value)).subscribe(createOperatorSubscriber(subscriber, endThrottling, cleanupThrottling)));\n\n    const send = () => {\n      if (hasValue) {\n        // Ensure we clear out our value and hasValue flag\n        // before we emit, otherwise reentrant code can cause\n        // issues here.\n        hasValue = false;\n        const value = sendValue!;\n        sendValue = null;\n        // Emit the value.\n        subscriber.next(value);\n        !isComplete && startThrottle(value);\n      }\n    };\n\n    source.subscribe(\n      createOperatorSubscriber(\n        subscriber,\n        // Regarding the presence of throttled.closed in the following\n        // conditions, if a synchronous duration selector is specified - weird,\n        // but legal - an already-closed subscription will be assigned to\n        // throttled, so the subscription's closed property needs to be checked,\n        // too.\n        (value) => {\n          hasValue = true;\n          sendValue = value;\n          !(throttled && !throttled.closed) && (leading ? send() : startThrottle(value));\n        },\n        () => {\n          isComplete = true;\n          !(trailing && hasValue && throttled && !throttled.closed) && subscriber.complete();\n        }\n      )\n    );\n  });\n}\n","import { asyncScheduler } from '../scheduler/async';\nimport { defaultThrottleConfig, throttle } from './throttle';\nimport { MonoTypeOperatorFunction, SchedulerLike } from '../types';\nimport { timer } from '../observable/timer';\n\n/**\n * Emits a value from the source Observable, then ignores subsequent source\n * values for `duration` milliseconds, then repeats this process.\n *\n * <span class=\"informal\">Lets a value pass, then ignores source values for the\n * next `duration` milliseconds.</span>\n *\n * ![](throttleTime.png)\n *\n * `throttleTime` emits the source Observable values on the output Observable\n * when its internal timer is disabled, and ignores source values when the timer\n * is enabled. Initially, the timer is disabled. As soon as the first source\n * value arrives, it is forwarded to the output Observable, and then the timer\n * is enabled. After `duration` milliseconds (or the time unit determined\n * internally by the optional `scheduler`) has passed, the timer is disabled,\n * and this process repeats for the next source value. Optionally takes a\n * {@link SchedulerLike} for managing timers.\n *\n * ## Examples\n *\n * ### Limit click rate\n *\n * Emit clicks at a rate of at most one click per second\n *\n * ```ts\n * import { fromEvent, throttleTime } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const result = clicks.pipe(throttleTime(1000));\n *\n * result.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link auditTime}\n * @see {@link debounceTime}\n * @see {@link delay}\n * @see {@link sampleTime}\n * @see {@link throttle}\n *\n * @param duration Time to wait before emitting another value after\n * emitting the last value, measured in milliseconds or the time unit determined\n * internally by the optional `scheduler`.\n * @param scheduler The {@link SchedulerLike} to use for\n * managing the timers that handle the throttling. Defaults to {@link asyncScheduler}.\n * @param config a configuration object to define `leading` and\n * `trailing` behavior. Defaults to `{ leading: true, trailing: false }`.\n * @return A function that returns an Observable that performs the throttle\n * operation to limit the rate of emissions from the source.\n */\nexport function throttleTime<T>(\n  duration: number,\n  scheduler: SchedulerLike = asyncScheduler,\n  config = defaultThrottleConfig\n): MonoTypeOperatorFunction<T> {\n  const duration$ = timer(duration, scheduler);\n  return throttle(() => duration$, config);\n}\n","import { EmptyError } from '../util/EmptyError';\nimport { MonoTypeOperatorFunction } from '../types';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\n\n/**\n * If the source observable completes without emitting a value, it will emit\n * an error. The error will be created at that time by the optional\n * `errorFactory` argument, otherwise, the error will be {@link EmptyError}.\n *\n * ![](throwIfEmpty.png)\n *\n * ## Example\n *\n * Throw an error if the document wasn't clicked within 1 second\n *\n * ```ts\n * import { fromEvent, takeUntil, timer, throwIfEmpty } from 'rxjs';\n *\n * const click$ = fromEvent(document, 'click');\n *\n * click$.pipe(\n *   takeUntil(timer(1000)),\n *   throwIfEmpty(() => new Error('The document was not clicked within 1 second'))\n * )\n * .subscribe({\n *   next() {\n *    console.log('The document was clicked');\n *   },\n *   error(err) {\n *     console.error(err.message);\n *   }\n * });\n * ```\n *\n * @param errorFactory A factory function called to produce the\n * error to be thrown when the source observable completes without emitting a\n * value.\n * @return A function that returns an Observable that throws an error if the\n * source Observable completed without emitting.\n */\nexport function throwIfEmpty<T>(errorFactory: () => any = defaultErrorFactory): MonoTypeOperatorFunction<T> {\n  return operate((source, subscriber) => {\n    let hasValue = false;\n    source.subscribe(\n      createOperatorSubscriber(\n        subscriber,\n        (value) => {\n          hasValue = true;\n          subscriber.next(value);\n        },\n        () => (hasValue ? subscriber.complete() : subscriber.error(errorFactory()))\n      )\n    );\n  });\n}\n\nfunction defaultErrorFactory() {\n  return new EmptyError();\n}\n","import { asyncScheduler } from '../scheduler/async';\nimport { SchedulerLike, OperatorFunction } from '../types';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\n\n/**\n * Emits an object containing the current value, and the time that has\n * passed between emitting the current value and the previous value, which is\n * calculated by using the provided `scheduler`'s `now()` method to retrieve\n * the current time at each emission, then calculating the difference. The `scheduler`\n * defaults to {@link asyncScheduler}, so by default, the `interval` will be in\n * milliseconds.\n *\n * <span class=\"informal\">Convert an Observable that emits items into one that\n * emits indications of the amount of time elapsed between those emissions.</span>\n *\n * ![](timeInterval.png)\n *\n * ## Example\n *\n * Emit interval between current value with the last value\n *\n * ```ts\n * import { interval, timeInterval } from 'rxjs';\n *\n * const seconds = interval(1000);\n *\n * seconds\n *   .pipe(timeInterval())\n *   .subscribe(value => console.log(value));\n *\n * // NOTE: The values will never be this precise,\n * // intervals created with `interval` or `setInterval`\n * // are non-deterministic.\n *\n * // { value: 0, interval: 1000 }\n * // { value: 1, interval: 1000 }\n * // { value: 2, interval: 1000 }\n * ```\n *\n * @param {SchedulerLike} [scheduler] Scheduler used to get the current time.\n * @return A function that returns an Observable that emits information about\n * value and interval.\n */\nexport function timeInterval<T>(scheduler: SchedulerLike = asyncScheduler): OperatorFunction<T, TimeInterval<T>> {\n  return operate((source, subscriber) => {\n    let last = scheduler.now();\n    source.subscribe(\n      createOperatorSubscriber(subscriber, (value) => {\n        const now = scheduler.now();\n        const interval = now - last;\n        last = now;\n        subscriber.next(new TimeInterval(value, interval));\n      })\n    );\n  });\n}\n\n// TODO(benlesh): make this an interface, export the interface, but not the implemented class,\n// there's no reason users should be manually creating this type.\n\nexport class TimeInterval<T> {\n  /**\n   * @deprecated Internal implementation detail, do not construct directly. Will be made an interface in v8.\n   */\n  constructor(public value: T, public interval: number) {}\n}\n","import { asyncScheduler } from '../scheduler/async';\nimport { MonoTypeOperatorFunction, SchedulerLike, OperatorFunction, ObservableInput, ObservedValueOf } from '../types';\nimport { isValidDate } from '../util/isDate';\nimport { Subscription } from '../Subscription';\nimport { operate } from '../util/lift';\nimport { Observable } from '../Observable';\nimport { innerFrom } from '../observable/innerFrom';\nimport { createErrorClass } from '../util/createErrorClass';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nimport { executeSchedule } from '../util/executeSchedule';\n\nexport interface TimeoutConfig<T, O extends ObservableInput<unknown> = ObservableInput<T>, M = unknown> {\n  /**\n   * The time allowed between values from the source before timeout is triggered.\n   */\n  each?: number;\n\n  /**\n   * The relative time as a `number` in milliseconds, or a specific time as a `Date` object,\n   * by which the first value must arrive from the source before timeout is triggered.\n   */\n  first?: number | Date;\n\n  /**\n   * The scheduler to use with time-related operations within this operator. Defaults to {@link asyncScheduler}\n   */\n  scheduler?: SchedulerLike;\n\n  /**\n   * A factory used to create observable to switch to when timeout occurs. Provides\n   * a {@link TimeoutInfo} about the source observable's emissions and what delay or\n   * exact time triggered the timeout.\n   */\n  with?: (info: TimeoutInfo<T, M>) => O;\n\n  /**\n   * Optional additional metadata you can provide to code that handles\n   * the timeout, will be provided through the {@link TimeoutError}.\n   * This can be used to help identify the source of a timeout or pass along\n   * other information related to the timeout.\n   */\n  meta?: M;\n}\n\nexport interface TimeoutInfo<T, M = unknown> {\n  /** Optional metadata that was provided to the timeout configuration. */\n  readonly meta: M;\n  /** The number of messages seen before the timeout */\n  readonly seen: number;\n  /** The last message seen */\n  readonly lastValue: T | null;\n}\n\n/**\n * An error emitted when a timeout occurs.\n */\nexport interface TimeoutError<T = unknown, M = unknown> extends Error {\n  /**\n   * The information provided to the error by the timeout\n   * operation that created the error. Will be `null` if\n   * used directly in non-RxJS code with an empty constructor.\n   * (Note that using this constructor directly is not recommended,\n   * you should create your own errors)\n   */\n  info: TimeoutInfo<T, M> | null;\n}\n\nexport interface TimeoutErrorCtor {\n  /**\n   * @deprecated Internal implementation detail. Do not construct error instances.\n   * Cannot be tagged as internal: https://github.com/ReactiveX/rxjs/issues/6269\n   */\n  new <T = unknown, M = unknown>(info?: TimeoutInfo<T, M>): TimeoutError<T, M>;\n}\n\n/**\n * An error thrown by the {@link timeout} operator.\n *\n * Provided so users can use as a type and do quality comparisons.\n * We recommend you do not subclass this or create instances of this class directly.\n * If you have need of a error representing a timeout, you should\n * create your own error class and use that.\n *\n * @see {@link timeout}\n *\n * @class TimeoutError\n */\nexport const TimeoutError: TimeoutErrorCtor = createErrorClass(\n  (_super) =>\n    function TimeoutErrorImpl(this: any, info: TimeoutInfo<any> | null = null) {\n      _super(this);\n      this.message = 'Timeout has occurred';\n      this.name = 'TimeoutError';\n      this.info = info;\n    }\n);\n\n/**\n * If `with` is provided, this will return an observable that will switch to a different observable if the source\n * does not push values within the specified time parameters.\n *\n * <span class=\"informal\">The most flexible option for creating a timeout behavior.</span>\n *\n * The first thing to know about the configuration is if you do not provide a `with` property to the configuration,\n * when timeout conditions are met, this operator will emit a {@link TimeoutError}. Otherwise, it will use the factory\n * function provided by `with`, and switch your subscription to the result of that. Timeout conditions are provided by\n * the settings in `first` and `each`.\n *\n * The `first` property can be either a `Date` for a specific time, a `number` for a time period relative to the\n * point of subscription, or it can be skipped. This property is to check timeout conditions for the arrival of\n * the first value from the source _only_. The timings of all subsequent values  from the source will be checked\n * against the time period provided by `each`, if it was provided.\n *\n * The `each` property can be either a `number` or skipped. If a value for `each` is provided, it represents the amount of\n * time the resulting observable will wait between the arrival of values from the source before timing out. Note that if\n * `first` is _not_ provided, the value from `each` will be used to check timeout conditions for the arrival of the first\n * value and all subsequent values. If `first` _is_ provided, `each` will only be use to check all values after the first.\n *\n * ## Examples\n *\n * Emit a custom error if there is too much time between values\n *\n * ```ts\n * import { interval, timeout, throwError } from 'rxjs';\n *\n * class CustomTimeoutError extends Error {\n *   constructor() {\n *     super('It was too slow');\n *     this.name = 'CustomTimeoutError';\n *   }\n * }\n *\n * const slow$ = interval(900);\n *\n * slow$.pipe(\n *   timeout({\n *     each: 1000,\n *     with: () => throwError(() => new CustomTimeoutError())\n *   })\n * )\n * .subscribe({\n *   error: console.error\n * });\n * ```\n *\n * Switch to a faster observable if your source is slow.\n *\n * ```ts\n * import { interval, timeout } from 'rxjs';\n *\n * const slow$ = interval(900);\n * const fast$ = interval(500);\n *\n * slow$.pipe(\n *   timeout({\n *     each: 1000,\n *     with: () => fast$,\n *   })\n * )\n * .subscribe(console.log);\n * ```\n * @param config The configuration for the timeout.\n */\nexport function timeout<T, O extends ObservableInput<unknown>, M = unknown>(\n  config: TimeoutConfig<T, O, M> & { with: (info: TimeoutInfo<T, M>) => O }\n): OperatorFunction<T, T | ObservedValueOf<O>>;\n\n/**\n * Returns an observable that will error or switch to a different observable if the source does not push values\n * within the specified time parameters.\n *\n * <span class=\"informal\">The most flexible option for creating a timeout behavior.</span>\n *\n * The first thing to know about the configuration is if you do not provide a `with` property to the configuration,\n * when timeout conditions are met, this operator will emit a {@link TimeoutError}. Otherwise, it will use the factory\n * function provided by `with`, and switch your subscription to the result of that. Timeout conditions are provided by\n * the settings in `first` and `each`.\n *\n * The `first` property can be either a `Date` for a specific time, a `number` for a time period relative to the\n * point of subscription, or it can be skipped. This property is to check timeout conditions for the arrival of\n * the first value from the source _only_. The timings of all subsequent values  from the source will be checked\n * against the time period provided by `each`, if it was provided.\n *\n * The `each` property can be either a `number` or skipped. If a value for `each` is provided, it represents the amount of\n * time the resulting observable will wait between the arrival of values from the source before timing out. Note that if\n * `first` is _not_ provided, the value from `each` will be used to check timeout conditions for the arrival of the first\n * value and all subsequent values. If `first` _is_ provided, `each` will only be use to check all values after the first.\n *\n * ### Handling TimeoutErrors\n *\n * If no `with` property was provided, subscriptions to the resulting observable may emit an error of {@link TimeoutError}.\n * The timeout error provides useful information you can examine when you're handling the error. The most common way to handle\n * the error would be with {@link catchError}, although you could use {@link tap} or just the error handler in your `subscribe` call\n * directly, if your error handling is only a side effect (such as notifying the user, or logging).\n *\n * In this case, you would check the error for `instanceof TimeoutError` to validate that the error was indeed from `timeout`, and\n * not from some other source. If it's not from `timeout`, you should probably rethrow it if you're in a `catchError`.\n *\n * ## Examples\n *\n * Emit a {@link TimeoutError} if the first value, and _only_ the first value, does not arrive within 5 seconds\n *\n * ```ts\n * import { interval, timeout } from 'rxjs';\n *\n * // A random interval that lasts between 0 and 10 seconds per tick\n * const source$ = interval(Math.round(Math.random() * 10_000));\n *\n * source$.pipe(\n *   timeout({ first: 5_000 })\n * )\n * .subscribe({\n *   next: console.log,\n *   error: console.error\n * });\n * ```\n *\n * Emit a {@link TimeoutError} if the source waits longer than 5 seconds between any two values or the first value\n * and subscription.\n *\n * ```ts\n * import { timer, timeout, expand } from 'rxjs';\n *\n * const getRandomTime = () => Math.round(Math.random() * 10_000);\n *\n * // An observable that waits a random amount of time between each delivered value\n * const source$ = timer(getRandomTime())\n *   .pipe(expand(() => timer(getRandomTime())));\n *\n * source$\n *   .pipe(timeout({ each: 5_000 }))\n *   .subscribe({\n *     next: console.log,\n *     error: console.error\n *   });\n * ```\n *\n * Emit a {@link TimeoutError} if the source does not emit before 7 seconds, _or_ if the source waits longer than\n * 5 seconds between any two values after the first.\n *\n * ```ts\n * import { timer, timeout, expand } from 'rxjs';\n *\n * const getRandomTime = () => Math.round(Math.random() * 10_000);\n *\n * // An observable that waits a random amount of time between each delivered value\n * const source$ = timer(getRandomTime())\n *   .pipe(expand(() => timer(getRandomTime())));\n *\n * source$\n *   .pipe(timeout({ first: 7_000, each: 5_000 }))\n *   .subscribe({\n *     next: console.log,\n *     error: console.error\n *   });\n * ```\n */\nexport function timeout<T, M = unknown>(config: Omit<TimeoutConfig<T, any, M>, 'with'>): OperatorFunction<T, T>;\n\n/**\n * Returns an observable that will error if the source does not push its first value before the specified time passed as a `Date`.\n * This is functionally the same as `timeout({ first: someDate })`.\n *\n * <span class=\"informal\">Errors if the first value doesn't show up before the given date and time</span>\n *\n * ![](timeout.png)\n *\n * @param first The date to at which the resulting observable will timeout if the source observable\n * does not emit at least one value.\n * @param scheduler The scheduler to use. Defaults to {@link asyncScheduler}.\n */\nexport function timeout<T>(first: Date, scheduler?: SchedulerLike): MonoTypeOperatorFunction<T>;\n\n/**\n * Returns an observable that will error if the source does not push a value within the specified time in milliseconds.\n * This is functionally the same as `timeout({ each: milliseconds })`.\n *\n * <span class=\"informal\">Errors if it waits too long between any value</span>\n *\n * ![](timeout.png)\n *\n * @param each The time allowed between each pushed value from the source before the resulting observable\n * will timeout.\n * @param scheduler The scheduler to use. Defaults to {@link asyncScheduler}.\n */\nexport function timeout<T>(each: number, scheduler?: SchedulerLike): MonoTypeOperatorFunction<T>;\n\n/**\n *\n * Errors if Observable does not emit a value in given time span.\n *\n * <span class=\"informal\">Timeouts on Observable that doesn't emit values fast enough.</span>\n *\n * ![](timeout.png)\n *\n * @see {@link timeoutWith}\n *\n * @return A function that returns an Observable that mirrors behaviour of the\n * source Observable, unless timeout happens when it throws an error.\n */\nexport function timeout<T, O extends ObservableInput<any>, M>(\n  config: number | Date | TimeoutConfig<T, O, M>,\n  schedulerArg?: SchedulerLike\n): OperatorFunction<T, T | ObservedValueOf<O>> {\n  // Intentionally terse code.\n  // If the first argument is a valid `Date`, then we use it as the `first` config.\n  // Otherwise, if the first argument is a `number`, then we use it as the `each` config.\n  // Otherwise, it can be assumed the first argument is the configuration object itself, and\n  // we destructure that into what we're going to use, setting important defaults as we do.\n  // NOTE: The default for `scheduler` will be the `scheduler` argument if it exists, or\n  // it will default to the `asyncScheduler`.\n  const {\n    first,\n    each,\n    with: _with = timeoutErrorFactory,\n    scheduler = schedulerArg ?? asyncScheduler,\n    meta = null!,\n  } = (isValidDate(config) ? { first: config } : typeof config === 'number' ? { each: config } : config) as TimeoutConfig<T, O, M>;\n\n  if (first == null && each == null) {\n    // Ensure timeout was provided at runtime.\n    throw new TypeError('No timeout provided.');\n  }\n\n  return operate((source, subscriber) => {\n    // This subscription encapsulates our subscription to the\n    // source for this operator. We're capturing it separately,\n    // because if there is a `with` observable to fail over to,\n    // we want to unsubscribe from our original subscription, and\n    // hand of the subscription to that one.\n    let originalSourceSubscription: Subscription;\n    // The subscription for our timeout timer. This changes\n    // every time get get a new value.\n    let timerSubscription: Subscription;\n    // A bit of state we pass to our with and error factories to\n    // tell what the last value we saw was.\n    let lastValue: T | null = null;\n    // A bit of state we pass to the with and error factories to\n    // tell how many values we have seen so far.\n    let seen = 0;\n    const startTimer = (delay: number) => {\n      timerSubscription = executeSchedule(\n        subscriber,\n        scheduler,\n        () => {\n          try {\n            originalSourceSubscription.unsubscribe();\n            innerFrom(\n              _with!({\n                meta,\n                lastValue,\n                seen,\n              })\n            ).subscribe(subscriber);\n          } catch (err) {\n            subscriber.error(err);\n          }\n        },\n        delay\n      );\n    };\n\n    originalSourceSubscription = source.subscribe(\n      createOperatorSubscriber(\n        subscriber,\n        (value: T) => {\n          // clear the timer so we can emit and start another one.\n          timerSubscription?.unsubscribe();\n          seen++;\n          // Emit\n          subscriber.next((lastValue = value));\n          // null | undefined are both < 0. Thanks, JavaScript.\n          each! > 0 && startTimer(each!);\n        },\n        undefined,\n        undefined,\n        () => {\n          if (!timerSubscription?.closed) {\n            timerSubscription?.unsubscribe();\n          }\n          // Be sure not to hold the last value in memory after unsubscription\n          // it could be quite large.\n          lastValue = null;\n        }\n      )\n    );\n\n    // Intentionally terse code.\n    // If we've `seen` a value, that means the \"first\" clause was met already, if it existed.\n    //   it also means that a timer was already started for \"each\" (in the next handler above).\n    // If `first` was provided, and it's a number, then use it.\n    // If `first` was provided and it's not a number, it's a Date, and we get the difference between it and \"now\".\n    // If `first` was not provided at all, then our first timer will be the value from `each`.\n    !seen && startTimer(first != null ? (typeof first === 'number' ? first : +first - scheduler!.now()) : each!);\n  });\n}\n\n/**\n * The default function to use to emit an error when timeout occurs and a `with` function\n * is not specified.\n * @param info The information about the timeout to pass along to the error\n */\nfunction timeoutErrorFactory(info: TimeoutInfo<any>): Observable<never> {\n  throw new TimeoutError(info);\n}\n","import { async } from '../scheduler/async';\nimport { isValidDate } from '../util/isDate';\nimport { ObservableInput, OperatorFunction, SchedulerLike } from '../types';\nimport { timeout } from './timeout';\n\n/** @deprecated Replaced with {@link timeout}. Instead of `timeoutWith(someDate, a$, scheduler)`, use the configuration object\n * `timeout({ first: someDate, with: () => a$, scheduler })`. Will be removed in v8. */\nexport function timeoutWith<T, R>(dueBy: Date, switchTo: ObservableInput<R>, scheduler?: SchedulerLike): OperatorFunction<T, T | R>;\n/** @deprecated Replaced with {@link timeout}. Instead of `timeoutWith(100, a$, scheduler)`, use the configuration object\n *  `timeout({ each: 100, with: () => a$, scheduler })`. Will be removed in v8. */\nexport function timeoutWith<T, R>(waitFor: number, switchTo: ObservableInput<R>, scheduler?: SchedulerLike): OperatorFunction<T, T | R>;\n\n/**\n * When the passed timespan elapses before the source emits any given value, it will unsubscribe from the source,\n * and switch the subscription to another observable.\n *\n * <span class=\"informal\">Used to switch to a different observable if your source is being slow.</span>\n *\n * Useful in cases where:\n *\n * - You want to switch to a different source that may be faster.\n * - You want to notify a user that the data stream is slow.\n * - You want to emit a custom error rather than the {@link TimeoutError} emitted\n *   by the default usage of {@link timeout}.\n *\n * If the first parameter is passed as Date and the time of the Date arrives before the first value arrives from the source,\n * it will unsubscribe from the source and switch the subscription to another observable.\n *\n * <span class=\"informal\">Use Date object to switch to a different observable if the first value doesn't arrive by a specific time.</span>\n *\n * Can be used to set a timeout only for the first value, however it's recommended to use the {@link timeout} operator with\n * the `first` configuration to get the same effect.\n *\n * ## Examples\n *\n * Fallback to a faster observable\n *\n * ```ts\n * import { interval, timeoutWith } from 'rxjs';\n *\n * const slow$ = interval(1000);\n * const faster$ = interval(500);\n *\n * slow$\n *   .pipe(timeoutWith(900, faster$))\n *   .subscribe(console.log);\n * ```\n *\n * Emit your own custom timeout error\n *\n * ```ts\n * import { interval, timeoutWith, throwError } from 'rxjs';\n *\n * class CustomTimeoutError extends Error {\n *   constructor() {\n *     super('It was too slow');\n *     this.name = 'CustomTimeoutError';\n *   }\n * }\n *\n * const slow$ = interval(1000);\n *\n * slow$\n *   .pipe(timeoutWith(900, throwError(() => new CustomTimeoutError())))\n *   .subscribe({\n *     error: err => console.error(err.message)\n *   });\n * ```\n *\n * @see {@link timeout}\n *\n * @param due When passed a number, used as the time (in milliseconds) allowed between each value from the source before timeout\n * is triggered. When passed a Date, used as the exact time at which the timeout will be triggered if the first value does not arrive.\n * @param withObservable The observable to switch to when timeout occurs.\n * @param scheduler The scheduler to use with time-related operations within this operator. Defaults to {@link asyncScheduler}\n * @return A function that returns an Observable that mirrors behaviour of the\n * source Observable, unless timeout happens when it starts emitting values\n * from the `ObservableInput` passed as a second parameter.\n * @deprecated Replaced with {@link timeout}. Instead of `timeoutWith(100, a$, scheduler)`, use {@link timeout} with the configuration\n * object: `timeout({ each: 100, with: () => a$, scheduler })`. Instead of `timeoutWith(someDate, a$, scheduler)`, use {@link timeout}\n * with the configuration object: `timeout({ first: someDate, with: () => a$, scheduler })`. Will be removed in v8.\n */\nexport function timeoutWith<T, R>(\n  due: number | Date,\n  withObservable: ObservableInput<R>,\n  scheduler?: SchedulerLike\n): OperatorFunction<T, T | R> {\n  let first: number | Date | undefined;\n  let each: number | undefined;\n  let _with: () => ObservableInput<R>;\n  scheduler = scheduler ?? async;\n\n  if (isValidDate(due)) {\n    first = due;\n  } else if (typeof due === 'number') {\n    each = due;\n  }\n\n  if (withObservable) {\n    _with = () => withObservable;\n  } else {\n    throw new TypeError('No observable provided to switch to');\n  }\n\n  if (first == null && each == null) {\n    // Ensure timeout was provided at runtime.\n    throw new TypeError('No timeout provided.');\n  }\n\n  return timeout<T, ObservableInput<R>>({\n    first,\n    each,\n    scheduler,\n    with: _with,\n  });\n}\n","import { OperatorFunction, TimestampProvider, Timestamp } from '../types';\nimport { dateTimestampProvider } from '../scheduler/dateTimestampProvider';\nimport { map } from './map';\n\n/**\n * Attaches a timestamp to each item emitted by an observable indicating when it was emitted\n *\n * The `timestamp` operator maps the *source* observable stream to an object of type\n * `{value: T, timestamp: R}`. The properties are generically typed. The `value` property contains the value\n * and type of the *source* observable. The `timestamp` is generated by the schedulers `now` function. By\n * default, it uses the `asyncScheduler` which simply returns `Date.now()` (milliseconds since 1970/01/01\n * 00:00:00:000) and therefore is of type `number`.\n *\n * ![](timestamp.png)\n *\n * ## Example\n *\n * In this example there is a timestamp attached to the document's click events\n *\n * ```ts\n * import { fromEvent, timestamp } from 'rxjs';\n *\n * const clickWithTimestamp = fromEvent(document, 'click').pipe(\n *   timestamp()\n * );\n *\n * // Emits data of type { value: PointerEvent, timestamp: number }\n * clickWithTimestamp.subscribe(data => {\n *   console.log(data);\n * });\n * ```\n *\n * @param timestampProvider An object with a `now()` method used to get the current timestamp.\n * @return A function that returns an Observable that attaches a timestamp to\n * each item emitted by the source Observable indicating when it was emitted.\n */\nexport function timestamp<T>(timestampProvider: TimestampProvider = dateTimestampProvider): OperatorFunction<T, Timestamp<T>> {\n  return map((value: T) => ({ value, timestamp: timestampProvider.now() }));\n}\n","import { reduce } from './reduce';\nimport { OperatorFunction } from '../types';\nimport { operate } from '../util/lift';\n\nconst arrReducer = (arr: any[], value: any) => (arr.push(value), arr);\n\n/**\n * Collects all source emissions and emits them as an array when the source completes.\n *\n * <span class=\"informal\">Get all values inside an array when the source completes</span>\n *\n * ![](toArray.png)\n *\n * `toArray` will wait until the source Observable completes before emitting\n * the array containing all emissions. When the source Observable errors no\n * array will be emitted.\n *\n * ## Example\n *\n * ```ts\n * import { interval, take, toArray } from 'rxjs';\n *\n * const source = interval(1000);\n * const example = source.pipe(\n *   take(10),\n *   toArray()\n * );\n *\n * example.subscribe(value => console.log(value));\n *\n * // output: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]\n * ```\n *\n * @return A function that returns an Observable that emits an array of items\n * emitted by the source Observable when source completes.\n */\nexport function toArray<T>(): OperatorFunction<T, T[]> {\n  // Because arrays are mutable, and we're mutating the array in this\n  // reducer process, we have to escapulate the creation of the initial\n  // array within this `operate` function.\n  return operate((source, subscriber) => {\n    reduce(arrReducer, [] as T[])(source).subscribe(subscriber);\n  });\n}\n","import { Observable } from '../Observable';\nimport { OperatorFunction } from '../types';\nimport { Subject } from '../Subject';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nimport { noop } from '../util/noop';\n\n/**\n * Branch out the source Observable values as a nested Observable whenever\n * `windowBoundaries` emits.\n *\n * <span class=\"informal\">It's like {@link buffer}, but emits a nested Observable\n * instead of an array.</span>\n *\n * ![](window.png)\n *\n * Returns an Observable that emits windows of items it collects from the source\n * Observable. The output Observable emits connected, non-overlapping\n * windows. It emits the current window and opens a new one whenever the\n * Observable `windowBoundaries` emits an item. Because each window is an\n * Observable, the output is a higher-order Observable.\n *\n * ## Example\n *\n * In every window of 1 second each, emit at most 2 click events\n *\n * ```ts\n * import { fromEvent, interval, window, map, take, mergeAll } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const sec = interval(1000);\n * const result = clicks.pipe(\n *   window(sec),\n *   map(win => win.pipe(take(2))), // take at most 2 emissions from each window\n *   mergeAll()                     // flatten the Observable-of-Observables\n * );\n * result.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link windowCount}\n * @see {@link windowTime}\n * @see {@link windowToggle}\n * @see {@link windowWhen}\n * @see {@link buffer}\n *\n * @param {Observable<any>} windowBoundaries An Observable that completes the\n * previous window and starts a new window.\n * @return A function that returns an Observable of windows, which are\n * Observables emitting values of the source Observable.\n */\nexport function window<T>(windowBoundaries: Observable<any>): OperatorFunction<T, Observable<T>> {\n  return operate((source, subscriber) => {\n    let windowSubject: Subject<T> = new Subject<T>();\n\n    subscriber.next(windowSubject.asObservable());\n\n    const errorHandler = (err: any) => {\n      windowSubject.error(err);\n      subscriber.error(err);\n    };\n\n    // Subscribe to our source\n    source.subscribe(\n      createOperatorSubscriber(\n        subscriber,\n        (value) => windowSubject?.next(value),\n        () => {\n          windowSubject.complete();\n          subscriber.complete();\n        },\n        errorHandler\n      )\n    );\n\n    // Subscribe to the window boundaries.\n    windowBoundaries.subscribe(\n      createOperatorSubscriber(\n        subscriber,\n        () => {\n          windowSubject.complete();\n          subscriber.next((windowSubject = new Subject()));\n        },\n        noop,\n        errorHandler\n      )\n    );\n\n    return () => {\n      // Unsubscribing the subject ensures that anyone who has captured\n      // a reference to this window that tries to use it after it can\n      // no longer get values from the source will get an ObjectUnsubscribedError.\n      windowSubject?.unsubscribe();\n      windowSubject = null!;\n    };\n  });\n}\n","import { Observable } from '../Observable';\nimport { Subject } from '../Subject';\nimport { OperatorFunction } from '../types';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\n\n/**\n * Branch out the source Observable values as a nested Observable with each\n * nested Observable emitting at most `windowSize` values.\n *\n * <span class=\"informal\">It's like {@link bufferCount}, but emits a nested\n * Observable instead of an array.</span>\n *\n * ![](windowCount.png)\n *\n * Returns an Observable that emits windows of items it collects from the source\n * Observable. The output Observable emits windows every `startWindowEvery`\n * items, each containing no more than `windowSize` items. When the source\n * Observable completes or encounters an error, the output Observable emits\n * the current window and propagates the notification from the source\n * Observable. If `startWindowEvery` is not provided, then new windows are\n * started immediately at the start of the source and when each window completes\n * with size `windowSize`.\n *\n * ## Examples\n *\n * Ignore every 3rd click event, starting from the first one\n *\n * ```ts\n * import { fromEvent, windowCount, map, skip, mergeAll } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const result = clicks.pipe(\n *   windowCount(3),\n *   map(win => win.pipe(skip(1))), // skip first of every 3 clicks\n *   mergeAll()                     // flatten the Observable-of-Observables\n * );\n * result.subscribe(x => console.log(x));\n * ```\n *\n * Ignore every 3rd click event, starting from the third one\n *\n * ```ts\n * import { fromEvent, windowCount, mergeAll } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const result = clicks.pipe(\n *   windowCount(2, 3),\n *   mergeAll() // flatten the Observable-of-Observables\n * );\n * result.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link window}\n * @see {@link windowTime}\n * @see {@link windowToggle}\n * @see {@link windowWhen}\n * @see {@link bufferCount}\n *\n * @param {number} windowSize The maximum number of values emitted by each\n * window.\n * @param {number} [startWindowEvery] Interval at which to start a new window.\n * For example if `startWindowEvery` is `2`, then a new window will be started\n * on every other value from the source. A new window is started at the\n * beginning of the source by default.\n * @return A function that returns an Observable of windows, which in turn are\n * Observable of values.\n */\nexport function windowCount<T>(windowSize: number, startWindowEvery: number = 0): OperatorFunction<T, Observable<T>> {\n  const startEvery = startWindowEvery > 0 ? startWindowEvery : windowSize;\n\n  return operate((source, subscriber) => {\n    let windows = [new Subject<T>()];\n    let starts: number[] = [];\n    let count = 0;\n\n    // Open the first window.\n    subscriber.next(windows[0].asObservable());\n\n    source.subscribe(\n      createOperatorSubscriber(\n        subscriber,\n        (value: T) => {\n          // Emit the value through all current windows.\n          // We don't need to create a new window yet, we\n          // do that as soon as we close one.\n          for (const window of windows) {\n            window.next(value);\n          }\n          // Here we're using the size of the window array to figure\n          // out if the oldest window has emitted enough values. We can do this\n          // because the size of the window array is a function of the values\n          // seen by the subscription. If it's time to close it, we complete\n          // it and remove it.\n          const c = count - windowSize + 1;\n          if (c >= 0 && c % startEvery === 0) {\n            windows.shift()!.complete();\n          }\n\n          // Look to see if the next count tells us it's time to open a new window.\n          // TODO: We need to figure out if this really makes sense. We're technically\n          // emitting windows *before* we have a value to emit them for. It's probably\n          // more expected that we should be emitting the window when the start\n          // count is reached -- not before.\n          if (++count % startEvery === 0) {\n            const window = new Subject<T>();\n            windows.push(window);\n            subscriber.next(window.asObservable());\n          }\n        },\n        () => {\n          while (windows.length > 0) {\n            windows.shift()!.complete();\n          }\n          subscriber.complete();\n        },\n        (err) => {\n          while (windows.length > 0) {\n            windows.shift()!.error(err);\n          }\n          subscriber.error(err);\n        },\n        () => {\n          starts = null!;\n          windows = null!;\n        }\n      )\n    );\n  });\n}\n","import { Subject } from '../Subject';\nimport { asyncScheduler } from '../scheduler/async';\nimport { Observable } from '../Observable';\nimport { Subscription } from '../Subscription';\nimport { Observer, OperatorFunction, SchedulerLike } from '../types';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nimport { arrRemove } from '../util/arrRemove';\nimport { popScheduler } from '../util/args';\nimport { executeSchedule } from '../util/executeSchedule';\n\nexport function windowTime<T>(windowTimeSpan: number, scheduler?: SchedulerLike): OperatorFunction<T, Observable<T>>;\nexport function windowTime<T>(\n  windowTimeSpan: number,\n  windowCreationInterval: number,\n  scheduler?: SchedulerLike\n): OperatorFunction<T, Observable<T>>;\nexport function windowTime<T>(\n  windowTimeSpan: number,\n  windowCreationInterval: number | null | void,\n  maxWindowSize: number,\n  scheduler?: SchedulerLike\n): OperatorFunction<T, Observable<T>>;\n\n/**\n * Branch out the source Observable values as a nested Observable periodically\n * in time.\n *\n * <span class=\"informal\">It's like {@link bufferTime}, but emits a nested\n * Observable instead of an array.</span>\n *\n * ![](windowTime.png)\n *\n * Returns an Observable that emits windows of items it collects from the source\n * Observable. The output Observable starts a new window periodically, as\n * determined by the `windowCreationInterval` argument. It emits each window\n * after a fixed timespan, specified by the `windowTimeSpan` argument. When the\n * source Observable completes or encounters an error, the output Observable\n * emits the current window and propagates the notification from the source\n * Observable. If `windowCreationInterval` is not provided, the output\n * Observable starts a new window when the previous window of duration\n * `windowTimeSpan` completes. If `maxWindowCount` is provided, each window\n * will emit at most fixed number of values. Window will complete immediately\n * after emitting last value and next one still will open as specified by\n * `windowTimeSpan` and `windowCreationInterval` arguments.\n *\n * ## Examples\n *\n * In every window of 1 second each, emit at most 2 click events\n *\n * ```ts\n * import { fromEvent, windowTime, map, take, mergeAll } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const result = clicks.pipe(\n *   windowTime(1000),\n *   map(win => win.pipe(take(2))), // take at most 2 emissions from each window\n *   mergeAll()                     // flatten the Observable-of-Observables\n * );\n * result.subscribe(x => console.log(x));\n * ```\n *\n * Every 5 seconds start a window 1 second long, and emit at most 2 click events per window\n *\n * ```ts\n * import { fromEvent, windowTime, map, take, mergeAll } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const result = clicks.pipe(\n *   windowTime(1000, 5000),\n *   map(win => win.pipe(take(2))), // take at most 2 emissions from each window\n *   mergeAll()                     // flatten the Observable-of-Observables\n * );\n * result.subscribe(x => console.log(x));\n * ```\n *\n * Same as example above but with `maxWindowCount` instead of `take`\n *\n * ```ts\n * import { fromEvent, windowTime, mergeAll } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const result = clicks.pipe(\n *   windowTime(1000, 5000, 2), // take at most 2 emissions from each window\n *   mergeAll()                 // flatten the Observable-of-Observables\n * );\n * result.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link window}\n * @see {@link windowCount}\n * @see {@link windowToggle}\n * @see {@link windowWhen}\n * @see {@link bufferTime}\n *\n * @param windowTimeSpan The amount of time, in milliseconds, to fill each window.\n * @param windowCreationInterval The interval at which to start new\n * windows.\n * @param maxWindowSize Max number of\n * values each window can emit before completion.\n * @param scheduler The scheduler on which to schedule the\n * intervals that determine window boundaries.\n * @return A function that returns an Observable of windows, which in turn are\n * Observables.\n */\nexport function windowTime<T>(windowTimeSpan: number, ...otherArgs: any[]): OperatorFunction<T, Observable<T>> {\n  const scheduler = popScheduler(otherArgs) ?? asyncScheduler;\n  const windowCreationInterval = (otherArgs[0] as number) ?? null;\n  const maxWindowSize = (otherArgs[1] as number) || Infinity;\n\n  return operate((source, subscriber) => {\n    // The active windows, their related subscriptions, and removal functions.\n    let windowRecords: WindowRecord<T>[] | null = [];\n    // If true, it means that every time we close a window, we want to start a new window.\n    // This is only really used for when *just* the time span is passed.\n    let restartOnClose = false;\n\n    const closeWindow = (record: { window: Subject<T>; subs: Subscription }) => {\n      const { window, subs } = record;\n      window.complete();\n      subs.unsubscribe();\n      arrRemove(windowRecords, record);\n      restartOnClose && startWindow();\n    };\n\n    /**\n     * Called every time we start a new window. This also does\n     * the work of scheduling the job to close the window.\n     */\n    const startWindow = () => {\n      if (windowRecords) {\n        const subs = new Subscription();\n        subscriber.add(subs);\n        const window = new Subject<T>();\n        const record = {\n          window,\n          subs,\n          seen: 0,\n        };\n        windowRecords.push(record);\n        subscriber.next(window.asObservable());\n        executeSchedule(subs, scheduler, () => closeWindow(record), windowTimeSpan);\n      }\n    };\n\n    if (windowCreationInterval !== null && windowCreationInterval >= 0) {\n      // The user passed both a windowTimeSpan (required), and a creation interval\n      // That means we need to start new window on the interval, and those windows need\n      // to wait the required time span before completing.\n      executeSchedule(subscriber, scheduler, startWindow, windowCreationInterval, true);\n    } else {\n      restartOnClose = true;\n    }\n\n    startWindow();\n\n    /**\n     * We need to loop over a copy of the window records several times in this operator.\n     * This is to save bytes over the wire more than anything.\n     * The reason we copy the array is that reentrant code could mutate the array while\n     * we are iterating over it.\n     */\n    const loop = (cb: (record: WindowRecord<T>) => void) => windowRecords!.slice().forEach(cb);\n\n    /**\n     * Used to notify all of the windows and the subscriber in the same way\n     * in the error and complete handlers.\n     */\n    const terminate = (cb: (consumer: Observer<any>) => void) => {\n      loop(({ window }) => cb(window));\n      cb(subscriber);\n      subscriber.unsubscribe();\n    };\n\n    source.subscribe(\n      createOperatorSubscriber(\n        subscriber,\n        (value: T) => {\n          // Notify all windows of the value.\n          loop((record) => {\n            record.window.next(value);\n            // If the window is over the max size, we need to close it.\n            maxWindowSize <= ++record.seen && closeWindow(record);\n          });\n        },\n        // Complete the windows and the downstream subscriber and clean up.\n        () => terminate((consumer) => consumer.complete()),\n        // Notify the windows and the downstream subscriber of the error and clean up.\n        (err) => terminate((consumer) => consumer.error(err))\n      )\n    );\n\n    // Additional finalization. This will be called when the\n    // destination tears down. Other finalizations are registered implicitly\n    // above via subscription.\n    return () => {\n      // Ensure that the buffer is released.\n      windowRecords = null!;\n    };\n  });\n}\n\ninterface WindowRecord<T> {\n  seen: number;\n  window: Subject<T>;\n  subs: Subscription;\n}\n","import { Observable } from '../Observable';\nimport { Subject } from '../Subject';\nimport { Subscription } from '../Subscription';\nimport { ObservableInput, OperatorFunction } from '../types';\nimport { operate } from '../util/lift';\nimport { innerFrom } from '../observable/innerFrom';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nimport { noop } from '../util/noop';\nimport { arrRemove } from '../util/arrRemove';\n\n/**\n * Branch out the source Observable values as a nested Observable starting from\n * an emission from `openings` and ending when the output of `closingSelector`\n * emits.\n *\n * <span class=\"informal\">It's like {@link bufferToggle}, but emits a nested\n * Observable instead of an array.</span>\n *\n * ![](windowToggle.png)\n *\n * Returns an Observable that emits windows of items it collects from the source\n * Observable. The output Observable emits windows that contain those items\n * emitted by the source Observable between the time when the `openings`\n * Observable emits an item and when the Observable returned by\n * `closingSelector` emits an item.\n *\n * ## Example\n *\n * Every other second, emit the click events from the next 500ms\n *\n * ```ts\n * import { fromEvent, interval, windowToggle, EMPTY, mergeAll } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const openings = interval(1000);\n * const result = clicks.pipe(\n *   windowToggle(openings, i => i % 2 ? interval(500) : EMPTY),\n *   mergeAll()\n * );\n * result.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link window}\n * @see {@link windowCount}\n * @see {@link windowTime}\n * @see {@link windowWhen}\n * @see {@link bufferToggle}\n *\n * @param {Observable<O>} openings An observable of notifications to start new\n * windows.\n * @param {function(value: O): Observable} closingSelector A function that takes\n * the value emitted by the `openings` observable and returns an Observable,\n * which, when it emits a next notification, signals that the\n * associated window should complete.\n * @return A function that returns an Observable of windows, which in turn are\n * Observables.\n */\nexport function windowToggle<T, O>(\n  openings: ObservableInput<O>,\n  closingSelector: (openValue: O) => ObservableInput<any>\n): OperatorFunction<T, Observable<T>> {\n  return operate((source, subscriber) => {\n    const windows: Subject<T>[] = [];\n\n    const handleError = (err: any) => {\n      while (0 < windows.length) {\n        windows.shift()!.error(err);\n      }\n      subscriber.error(err);\n    };\n\n    innerFrom(openings).subscribe(\n      createOperatorSubscriber(\n        subscriber,\n        (openValue) => {\n          const window = new Subject<T>();\n          windows.push(window);\n          const closingSubscription = new Subscription();\n          const closeWindow = () => {\n            arrRemove(windows, window);\n            window.complete();\n            closingSubscription.unsubscribe();\n          };\n\n          let closingNotifier: Observable<any>;\n          try {\n            closingNotifier = innerFrom(closingSelector(openValue));\n          } catch (err) {\n            handleError(err);\n            return;\n          }\n\n          subscriber.next(window.asObservable());\n\n          closingSubscription.add(closingNotifier.subscribe(createOperatorSubscriber(subscriber, closeWindow, noop, handleError)));\n        },\n        noop\n      )\n    );\n\n    // Subcribe to the source to get things started.\n    source.subscribe(\n      createOperatorSubscriber(\n        subscriber,\n        (value: T) => {\n          // Copy the windows array before we emit to\n          // make sure we don't have issues with reentrant code.\n          const windowsCopy = windows.slice();\n          for (const window of windowsCopy) {\n            window.next(value);\n          }\n        },\n        () => {\n          // Complete all of our windows before we complete.\n          while (0 < windows.length) {\n            windows.shift()!.complete();\n          }\n          subscriber.complete();\n        },\n        handleError,\n        () => {\n          // Add this finalization so that all window subjects are\n          // disposed of. This way, if a user tries to subscribe\n          // to a window *after* the outer subscription has been unsubscribed,\n          // they will get an error, instead of waiting forever to\n          // see if a value arrives.\n          while (0 < windows.length) {\n            windows.shift()!.unsubscribe();\n          }\n        }\n      )\n    );\n  });\n}\n","import { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { Subject } from '../Subject';\nimport { ObservableInput, OperatorFunction } from '../types';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nimport { innerFrom } from '../observable/innerFrom';\n\n/**\n * Branch out the source Observable values as a nested Observable using a\n * factory function of closing Observables to determine when to start a new\n * window.\n *\n * <span class=\"informal\">It's like {@link bufferWhen}, but emits a nested\n * Observable instead of an array.</span>\n *\n * ![](windowWhen.png)\n *\n * Returns an Observable that emits windows of items it collects from the source\n * Observable. The output Observable emits connected, non-overlapping windows.\n * It emits the current window and opens a new one whenever the Observable\n * produced by the specified `closingSelector` function emits an item. The first\n * window is opened immediately when subscribing to the output Observable.\n *\n * ## Example\n *\n * Emit only the first two clicks events in every window of [1-5] random seconds\n *\n * ```ts\n * import { fromEvent, windowWhen, interval, map, take, mergeAll } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const result = clicks.pipe(\n *   windowWhen(() => interval(1000 + Math.random() * 4000)),\n *   map(win => win.pipe(take(2))), // take at most 2 emissions from each window\n *   mergeAll()                     // flatten the Observable-of-Observables\n * );\n * result.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link window}\n * @see {@link windowCount}\n * @see {@link windowTime}\n * @see {@link windowToggle}\n * @see {@link bufferWhen}\n *\n * @param {function(): Observable} closingSelector A function that takes no\n * arguments and returns an Observable that signals (on either `next` or\n * `complete`) when to close the previous window and start a new one.\n * @return A function that returns an Observable of windows, which in turn are\n * Observables.\n */\nexport function windowWhen<T>(closingSelector: () => ObservableInput<any>): OperatorFunction<T, Observable<T>> {\n  return operate((source, subscriber) => {\n    let window: Subject<T> | null;\n    let closingSubscriber: Subscriber<any> | undefined;\n\n    /**\n     * When we get an error, we have to notify both the\n     * destiation subscriber and the window.\n     */\n    const handleError = (err: any) => {\n      window!.error(err);\n      subscriber.error(err);\n    };\n\n    /**\n     * Called every time we need to open a window.\n     * Recursive, as it will start the closing notifier, which\n     * inevitably *should* call openWindow -- but may not if\n     * it is a \"never\" observable.\n     */\n    const openWindow = () => {\n      // We need to clean up our closing subscription,\n      // we only cared about the first next or complete notification.\n      closingSubscriber?.unsubscribe();\n\n      // Close our window before starting a new one.\n      window?.complete();\n\n      // Start the new window.\n      window = new Subject<T>();\n      subscriber.next(window.asObservable());\n\n      // Get our closing notifier.\n      let closingNotifier: Observable<any>;\n      try {\n        closingNotifier = innerFrom(closingSelector());\n      } catch (err) {\n        handleError(err);\n        return;\n      }\n\n      // Subscribe to the closing notifier, be sure\n      // to capture the subscriber (aka Subscription)\n      // so we can clean it up when we close the window\n      // and open a new one.\n      closingNotifier.subscribe((closingSubscriber = createOperatorSubscriber(subscriber, openWindow, openWindow, handleError)));\n    };\n\n    // Start the first window.\n    openWindow();\n\n    // Subscribe to the source\n    source.subscribe(\n      createOperatorSubscriber(\n        subscriber,\n        (value) => window!.next(value),\n        () => {\n          // The source completed, close the window and complete.\n          window!.complete();\n          subscriber.complete();\n        },\n        handleError,\n        () => {\n          // Be sure to clean up our closing subscription\n          // when this tears down.\n          closingSubscriber?.unsubscribe();\n          window = null!;\n        }\n      )\n    );\n  });\n}\n","import { OperatorFunction, ObservableInputTuple } from '../types';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nimport { innerFrom } from '../observable/innerFrom';\nimport { identity } from '../util/identity';\nimport { noop } from '../util/noop';\nimport { popResultSelector } from '../util/args';\n\nexport function withLatestFrom<T, O extends unknown[]>(...inputs: [...ObservableInputTuple<O>]): OperatorFunction<T, [T, ...O]>;\n\nexport function withLatestFrom<T, O extends unknown[], R>(\n  ...inputs: [...ObservableInputTuple<O>, (...value: [T, ...O]) => R]\n): OperatorFunction<T, R>;\n\n/**\n * Combines the source Observable with other Observables to create an Observable\n * whose values are calculated from the latest values of each, only when the\n * source emits.\n *\n * <span class=\"informal\">Whenever the source Observable emits a value, it\n * computes a formula using that value plus the latest values from other input\n * Observables, then emits the output of that formula.</span>\n *\n * ![](withLatestFrom.png)\n *\n * `withLatestFrom` combines each value from the source Observable (the\n * instance) with the latest values from the other input Observables only when\n * the source emits a value, optionally using a `project` function to determine\n * the value to be emitted on the output Observable. All input Observables must\n * emit at least one value before the output Observable will emit a value.\n *\n * ## Example\n *\n * On every click event, emit an array with the latest timer event plus the click event\n *\n * ```ts\n * import { fromEvent, interval, withLatestFrom } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const timer = interval(1000);\n * const result = clicks.pipe(withLatestFrom(timer));\n * result.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link combineLatest}\n *\n * @param {ObservableInput} other An input Observable to combine with the source\n * Observable. More than one input Observables may be given as argument.\n * @param {Function} [project] Projection function for combining values\n * together. Receives all values in order of the Observables passed, where the\n * first parameter is a value from the source Observable. (e.g.\n * `a.pipe(withLatestFrom(b, c), map(([a1, b1, c1]) => a1 + b1 + c1))`). If this is not\n * passed, arrays will be emitted on the output Observable.\n * @return A function that returns an Observable of projected values from the\n * most recent values from each input Observable, or an array of the most\n * recent values from each input Observable.\n */\nexport function withLatestFrom<T, R>(...inputs: any[]): OperatorFunction<T, R | any[]> {\n  const project = popResultSelector(inputs) as ((...args: any[]) => R) | undefined;\n\n  return operate((source, subscriber) => {\n    const len = inputs.length;\n    const otherValues = new Array(len);\n    // An array of whether or not the other sources have emitted. Matched with them by index.\n    // TODO: At somepoint, we should investigate the performance implications here, and look\n    // into using a `Set()` and checking the `size` to see if we're ready.\n    let hasValue = inputs.map(() => false);\n    // Flipped true when we have at least one value from all other sources and\n    // we are ready to start emitting values.\n    let ready = false;\n\n    // Other sources. Note that here we are not checking `subscriber.closed`,\n    // this causes all inputs to be subscribed to, even if nothing can be emitted\n    // from them. This is an important distinction because subscription constitutes\n    // a side-effect.\n    for (let i = 0; i < len; i++) {\n      innerFrom(inputs[i]).subscribe(\n        createOperatorSubscriber(\n          subscriber,\n          (value) => {\n            otherValues[i] = value;\n            if (!ready && !hasValue[i]) {\n              // If we're not ready yet, flag to show this observable has emitted.\n              hasValue[i] = true;\n              // Intentionally terse code.\n              // If all of our other observables have emitted, set `ready` to `true`,\n              // so we know we can start emitting values, then clean up the `hasValue` array,\n              // because we don't need it anymore.\n              (ready = hasValue.every(identity)) && (hasValue = null!);\n            }\n          },\n          // Completing one of the other sources has\n          // no bearing on the completion of our result.\n          noop\n        )\n      );\n    }\n\n    // Source subscription\n    source.subscribe(\n      createOperatorSubscriber(subscriber, (value) => {\n        if (ready) {\n          // We have at least one value from the other sources. Go ahead and emit.\n          const values = [value, ...otherValues];\n          subscriber.next(project ? project(...values) : values);\n        }\n      })\n    );\n  });\n}\n","import { zip as zipStatic } from '../observable/zip';\nimport { ObservableInput, ObservableInputTuple, OperatorFunction, Cons } from '../types';\nimport { operate } from '../util/lift';\n\n/** @deprecated Replaced with {@link zipWith}. Will be removed in v8. */\nexport function zip<T, A extends readonly unknown[]>(otherInputs: [...ObservableInputTuple<A>]): OperatorFunction<T, Cons<T, A>>;\n/** @deprecated Replaced with {@link zipWith}. Will be removed in v8. */\nexport function zip<T, A extends readonly unknown[], R>(\n  otherInputsAndProject: [...ObservableInputTuple<A>],\n  project: (...values: Cons<T, A>) => R\n): OperatorFunction<T, R>;\n/** @deprecated Replaced with {@link zipWith}. Will be removed in v8. */\nexport function zip<T, A extends readonly unknown[]>(...otherInputs: [...ObservableInputTuple<A>]): OperatorFunction<T, Cons<T, A>>;\n/** @deprecated Replaced with {@link zipWith}. Will be removed in v8. */\nexport function zip<T, A extends readonly unknown[], R>(\n  ...otherInputsAndProject: [...ObservableInputTuple<A>, (...values: Cons<T, A>) => R]\n): OperatorFunction<T, R>;\n\n/**\n * @deprecated Replaced with {@link zipWith}. Will be removed in v8.\n */\nexport function zip<T, R>(...sources: Array<ObservableInput<any> | ((...values: Array<any>) => R)>): OperatorFunction<T, any> {\n  return operate((source, subscriber) => {\n    zipStatic(source as ObservableInput<any>, ...(sources as Array<ObservableInput<any>>)).subscribe(subscriber);\n  });\n}\n","import { OperatorFunction, ObservableInput } from '../types';\nimport { zip } from '../observable/zip';\nimport { joinAllInternals } from './joinAllInternals';\n\n/**\n * Collects all observable inner sources from the source, once the source completes,\n * it will subscribe to all inner sources, combining their values by index and emitting\n * them.\n *\n * @see {@link zipWith}\n * @see {@link zip}\n */\nexport function zipAll<T>(): OperatorFunction<ObservableInput<T>, T[]>;\nexport function zipAll<T>(): OperatorFunction<any, T[]>;\nexport function zipAll<T, R>(project: (...values: T[]) => R): OperatorFunction<ObservableInput<T>, R>;\nexport function zipAll<R>(project: (...values: Array<any>) => R): OperatorFunction<any, R>;\n\nexport function zipAll<T, R>(project?: (...values: T[]) => R) {\n  return joinAllInternals(zip, project);\n}\n","import { ObservableInputTuple, OperatorFunction, Cons } from '../types';\nimport { zip } from './zip';\n\n/**\n * Subscribes to the source, and the observable inputs provided as arguments, and combines their values, by index, into arrays.\n *\n * What is meant by \"combine by index\": The first value from each will be made into a single array, then emitted,\n * then the second value from each will be combined into a single array and emitted, then the third value\n * from each will be combined into a single array and emitted, and so on.\n *\n * This will continue until it is no longer able to combine values of the same index into an array.\n *\n * After the last value from any one completed source is emitted in an array, the resulting observable will complete,\n * as there is no way to continue \"zipping\" values together by index.\n *\n * Use-cases for this operator are limited. There are memory concerns if one of the streams is emitting\n * values at a much faster rate than the others. Usage should likely be limited to streams that emit\n * at a similar pace, or finite streams of known length.\n *\n * In many cases, authors want `combineLatestWith` and not `zipWith`.\n *\n * @param otherInputs other observable inputs to collate values from.\n * @return A function that returns an Observable that emits items by index\n * combined from the source Observable and provided Observables, in form of an\n * array.\n */\nexport function zipWith<T, A extends readonly unknown[]>(...otherInputs: [...ObservableInputTuple<A>]): OperatorFunction<T, Cons<T, A>> {\n  return zip(...otherInputs);\n}\n","import { Observable } from '../Observable';\nimport { SchedulerLike } from '../types';\n\nexport function scheduleArray<T>(input: ArrayLike<T>, scheduler: SchedulerLike) {\n  return new Observable<T>((subscriber) => {\n    // The current array index.\n    let i = 0;\n    // Start iterating over the array like on a schedule.\n    return scheduler.schedule(function () {\n      if (i === input.length) {\n        // If we have hit the end of the array like in the\n        // previous job, we can complete.\n        subscriber.complete();\n      } else {\n        // Otherwise let's next the value at the current index,\n        // then increment our index.\n        subscriber.next(input[i++]);\n        // If the last emission didn't cause us to close the subscriber\n        // (via take or some side effect), reschedule the job and we'll\n        // make another pass.\n        if (!subscriber.closed) {\n          this.schedule();\n        }\n      }\n    });\n  });\n}\n","import { SchedulerLike } from '../types';\nimport { Observable } from '../Observable';\nimport { executeSchedule } from '../util/executeSchedule';\n\nexport function scheduleAsyncIterable<T>(input: AsyncIterable<T>, scheduler: SchedulerLike) {\n  if (!input) {\n    throw new Error('Iterable cannot be null');\n  }\n  return new Observable<T>((subscriber) => {\n    executeSchedule(subscriber, scheduler, () => {\n      const iterator = input[Symbol.asyncIterator]();\n      executeSchedule(\n        subscriber,\n        scheduler,\n        () => {\n          iterator.next().then((result) => {\n            if (result.done) {\n              // This will remove the subscriptions from\n              // the parent subscription.\n              subscriber.complete();\n            } else {\n              subscriber.next(result.value);\n            }\n          });\n        },\n        0,\n        true\n      );\n    });\n  });\n}\n","import { Observable } from '../Observable';\nimport { SchedulerLike } from '../types';\nimport { iterator as Symbol_iterator } from '../symbol/iterator';\nimport { isFunction } from '../util/isFunction';\nimport { executeSchedule } from '../util/executeSchedule';\n\n/**\n * Used in {@link scheduled} to create an observable from an Iterable.\n * @param input The iterable to create an observable from\n * @param scheduler The scheduler to use\n */\nexport function scheduleIterable<T>(input: Iterable<T>, scheduler: SchedulerLike) {\n  return new Observable<T>((subscriber) => {\n    let iterator: Iterator<T, T>;\n\n    // Schedule the initial creation of the iterator from\n    // the iterable. This is so the code in the iterable is\n    // not called until the scheduled job fires.\n    executeSchedule(subscriber, scheduler, () => {\n      // Create the iterator.\n      iterator = (input as any)[Symbol_iterator]();\n\n      executeSchedule(\n        subscriber,\n        scheduler,\n        () => {\n          let value: T;\n          let done: boolean | undefined;\n          try {\n            // Pull the value out of the iterator\n            ({ value, done } = iterator.next());\n          } catch (err) {\n            // We got an error while pulling from the iterator\n            subscriber.error(err);\n            return;\n          }\n\n          if (done) {\n            // If it is \"done\" we just complete. This mimics the\n            // behavior of JavaScript's `for..of` consumption of\n            // iterables, which will not emit the value from an iterator\n            // result of `{ done: true: value: 'here' }`.\n            subscriber.complete();\n          } else {\n            // The iterable is not done, emit the value.\n            subscriber.next(value);\n          }\n        },\n        0,\n        true\n      );\n    });\n\n    // During finalization, if we see this iterator has a `return` method,\n    // then we know it is a Generator, and not just an Iterator. So we call\n    // the `return()` function. This will ensure that any `finally { }` blocks\n    // inside of the generator we can hit will be hit properly.\n    return () => isFunction(iterator?.return) && iterator.return();\n  });\n}\n","import { innerFrom } from '../observable/innerFrom';\nimport { observeOn } from '../operators/observeOn';\nimport { subscribeOn } from '../operators/subscribeOn';\nimport { InteropObservable, SchedulerLike } from '../types';\n\nexport function scheduleObservable<T>(input: InteropObservable<T>, scheduler: SchedulerLike) {\n  return innerFrom(input).pipe(subscribeOn(scheduler), observeOn(scheduler));\n}\n","import { innerFrom } from '../observable/innerFrom';\nimport { observeOn } from '../operators/observeOn';\nimport { subscribeOn } from '../operators/subscribeOn';\nimport { SchedulerLike } from '../types';\n\nexport function schedulePromise<T>(input: PromiseLike<T>, scheduler: SchedulerLike) {\n  return innerFrom(input).pipe(subscribeOn(scheduler), observeOn(scheduler));\n}\n","import { SchedulerLike, ReadableStreamLike } from '../types';\nimport { Observable } from '../Observable';\nimport { scheduleAsyncIterable } from './scheduleAsyncIterable';\nimport { readableStreamLikeToAsyncGenerator } from '../util/isReadableStreamLike';\n\nexport function scheduleReadableStreamLike<T>(input: ReadableStreamLike<T>, scheduler: SchedulerLike): Observable<T> {\n  return scheduleAsyncIterable(readableStreamLikeToAsyncGenerator(input), scheduler);\n}\n","import { scheduleObservable } from './scheduleObservable';\nimport { schedulePromise } from './schedulePromise';\nimport { scheduleArray } from './scheduleArray';\nimport { scheduleIterable } from './scheduleIterable';\nimport { scheduleAsyncIterable } from './scheduleAsyncIterable';\nimport { isInteropObservable } from '../util/isInteropObservable';\nimport { isPromise } from '../util/isPromise';\nimport { isArrayLike } from '../util/isArrayLike';\nimport { isIterable } from '../util/isIterable';\nimport { ObservableInput, SchedulerLike } from '../types';\nimport { Observable } from '../Observable';\nimport { isAsyncIterable } from '../util/isAsyncIterable';\nimport { createInvalidObservableTypeError } from '../util/throwUnobservableError';\nimport { isReadableStreamLike } from '../util/isReadableStreamLike';\nimport { scheduleReadableStreamLike } from './scheduleReadableStreamLike';\n\n/**\n * Converts from a common {@link ObservableInput} type to an observable where subscription and emissions\n * are scheduled on the provided scheduler.\n *\n * @see {@link from}\n * @see {@link of}\n *\n * @param input The observable, array, promise, iterable, etc you would like to schedule\n * @param scheduler The scheduler to use to schedule the subscription and emissions from\n * the returned observable.\n */\nexport function scheduled<T>(input: ObservableInput<T>, scheduler: SchedulerLike): Observable<T> {\n  if (input != null) {\n    if (isInteropObservable(input)) {\n      return scheduleObservable(input, scheduler);\n    }\n    if (isArrayLike(input)) {\n      return scheduleArray(input, scheduler);\n    }\n    if (isPromise(input)) {\n      return schedulePromise(input, scheduler);\n    }\n    if (isAsyncIterable(input)) {\n      return scheduleAsyncIterable(input, scheduler);\n    }\n    if (isIterable(input)) {\n      return scheduleIterable(input, scheduler);\n    }\n    if (isReadableStreamLike(input)) {\n      return scheduleReadableStreamLike(input, scheduler);\n    }\n  }\n  throw createInvalidObservableTypeError(input);\n}\n","import { Scheduler } from '../Scheduler';\nimport { Subscription } from '../Subscription';\nimport { SchedulerAction } from '../types';\n\n/**\n * A unit of work to be executed in a `scheduler`. An action is typically\n * created from within a {@link SchedulerLike} and an RxJS user does not need to concern\n * themselves about creating and manipulating an Action.\n *\n * ```ts\n * class Action<T> extends Subscription {\n *   new (scheduler: Scheduler, work: (state?: T) => void);\n *   schedule(state?: T, delay: number = 0): Subscription;\n * }\n * ```\n *\n * @class Action<T>\n */\nexport class Action<T> extends Subscription {\n  constructor(scheduler: Scheduler, work: (this: SchedulerAction<T>, state?: T) => void) {\n    super();\n  }\n  /**\n   * Schedules this action on its parent {@link SchedulerLike} for execution. May be passed\n   * some context object, `state`. May happen at some point in the future,\n   * according to the `delay` parameter, if specified.\n   * @param {T} [state] Some contextual data that the `work` function uses when\n   * called by the Scheduler.\n   * @param {number} [delay] Time to wait before executing the work, where the\n   * time unit is implicit and defined by the Scheduler.\n   * @return {void}\n   */\n  public schedule(state?: T, delay: number = 0): Subscription {\n    return this;\n  }\n}\n","import { AsyncAction } from './AsyncAction';\nimport { AnimationFrameScheduler } from './AnimationFrameScheduler';\nimport { SchedulerAction } from '../types';\nimport { animationFrameProvider } from './animationFrameProvider';\n\nexport class AnimationFrameAction<T> extends AsyncAction<T> {\n  constructor(protected scheduler: AnimationFrameScheduler, protected work: (this: SchedulerAction<T>, state?: T) => void) {\n    super(scheduler, work);\n  }\n\n  protected requestAsyncId(scheduler: AnimationFrameScheduler, id?: any, delay: number = 0): any {\n    // If delay is greater than 0, request as an async action.\n    if (delay !== null && delay > 0) {\n      return super.requestAsyncId(scheduler, id, delay);\n    }\n    // Push the action to the end of the scheduler queue.\n    scheduler.actions.push(this);\n    // If an animation frame has already been requested, don't request another\n    // one. If an animation frame hasn't been requested yet, request one. Return\n    // the current animation frame request id.\n    return scheduler._scheduled || (scheduler._scheduled = animationFrameProvider.requestAnimationFrame(() => scheduler.flush(undefined)));\n  }\n  protected recycleAsyncId(scheduler: AnimationFrameScheduler, id?: any, delay: number = 0): any {\n    // If delay exists and is greater than 0, or if the delay is null (the\n    // action wasn't rescheduled) but was originally scheduled as an async\n    // action, then recycle as an async action.\n    if ((delay != null && delay > 0) || (delay == null && this.delay > 0)) {\n      return super.recycleAsyncId(scheduler, id, delay);\n    }\n    // If the scheduler queue has no remaining actions with the same async id,\n    // cancel the requested animation frame and set the scheduled flag to\n    // undefined so the next AnimationFrameAction will request its own.\n    if (!scheduler.actions.some((action) => action.id === id)) {\n      animationFrameProvider.cancelAnimationFrame(id);\n      scheduler._scheduled = undefined;\n    }\n    // Return undefined so the action knows to request a new async id if it's rescheduled.\n    return undefined;\n  }\n}\n","import { AsyncAction } from './AsyncAction';\nimport { AsyncScheduler } from './AsyncScheduler';\n\nexport class AnimationFrameScheduler extends AsyncScheduler {\n  public flush(action?: AsyncAction<any>): void {\n    this._active = true;\n    // The async id that effects a call to flush is stored in _scheduled.\n    // Before executing an action, it's necessary to check the action's async\n    // id to determine whether it's supposed to be executed in the current\n    // flush.\n    // Previous implementations of this method used a count to determine this,\n    // but that was unsound, as actions that are unsubscribed - i.e. cancelled -\n    // are removed from the actions array and that can shift actions that are\n    // scheduled to be executed in a subsequent flush into positions at which\n    // they are executed within the current flush.\n    const flushId = this._scheduled;\n    this._scheduled = undefined;\n\n    const { actions } = this;\n    let error: any;\n    action = action || actions.shift()!;\n\n    do {\n      if ((error = action.execute(action.state, action.delay))) {\n        break;\n      }\n    } while ((action = actions[0]) && action.id === flushId && actions.shift());\n\n    this._active = false;\n\n    if (error) {\n      while ((action = actions[0]) && action.id === flushId && actions.shift()) {\n        action.unsubscribe();\n      }\n      throw error;\n    }\n  }\n}\n","import { AsyncAction } from './AsyncAction';\nimport { AsapScheduler } from './AsapScheduler';\nimport { SchedulerAction } from '../types';\nimport { immediateProvider } from './immediateProvider';\n\nexport class AsapAction<T> extends AsyncAction<T> {\n  constructor(protected scheduler: AsapScheduler, protected work: (this: SchedulerAction<T>, state?: T) => void) {\n    super(scheduler, work);\n  }\n\n  protected requestAsyncId(scheduler: AsapScheduler, id?: any, delay: number = 0): any {\n    // If delay is greater than 0, request as an async action.\n    if (delay !== null && delay > 0) {\n      return super.requestAsyncId(scheduler, id, delay);\n    }\n    // Push the action to the end of the scheduler queue.\n    scheduler.actions.push(this);\n    // If a microtask has already been scheduled, don't schedule another\n    // one. If a microtask hasn't been scheduled yet, schedule one now. Return\n    // the current scheduled microtask id.\n    return scheduler._scheduled || (scheduler._scheduled = immediateProvider.setImmediate(scheduler.flush.bind(scheduler, undefined)));\n  }\n  protected recycleAsyncId(scheduler: AsapScheduler, id?: any, delay: number = 0): any {\n    // If delay exists and is greater than 0, or if the delay is null (the\n    // action wasn't rescheduled) but was originally scheduled as an async\n    // action, then recycle as an async action.\n    if ((delay != null && delay > 0) || (delay == null && this.delay > 0)) {\n      return super.recycleAsyncId(scheduler, id, delay);\n    }\n    // If the scheduler queue has no remaining actions with the same async id,\n    // cancel the requested microtask and set the scheduled flag to undefined\n    // so the next AsapAction will request its own.\n    if (!scheduler.actions.some((action) => action.id === id)) {\n      immediateProvider.clearImmediate(id);\n      scheduler._scheduled = undefined;\n    }\n    // Return undefined so the action knows to request a new async id if it's rescheduled.\n    return undefined;\n  }\n}\n","import { AsyncAction } from './AsyncAction';\nimport { AsyncScheduler } from './AsyncScheduler';\n\nexport class AsapScheduler extends AsyncScheduler {\n  public flush(action?: AsyncAction<any>): void {\n    this._active = true;\n    // The async id that effects a call to flush is stored in _scheduled.\n    // Before executing an action, it's necessary to check the action's async\n    // id to determine whether it's supposed to be executed in the current\n    // flush.\n    // Previous implementations of this method used a count to determine this,\n    // but that was unsound, as actions that are unsubscribed - i.e. cancelled -\n    // are removed from the actions array and that can shift actions that are\n    // scheduled to be executed in a subsequent flush into positions at which\n    // they are executed within the current flush.\n    const flushId = this._scheduled;\n    this._scheduled = undefined;\n\n    const { actions } = this;\n    let error: any;\n    action = action || actions.shift()!;\n\n    do {\n      if ((error = action.execute(action.state, action.delay))) {\n        break;\n      }\n    } while ((action = actions[0]) && action.id === flushId && actions.shift());\n\n    this._active = false;\n\n    if (error) {\n      while ((action = actions[0]) && action.id === flushId && actions.shift()) {\n        action.unsubscribe();\n      }\n      throw error;\n    }\n  }\n}\n","import { Action } from './Action';\nimport { SchedulerAction } from '../types';\nimport { Subscription } from '../Subscription';\nimport { AsyncScheduler } from './AsyncScheduler';\nimport { intervalProvider } from './intervalProvider';\nimport { arrRemove } from '../util/arrRemove';\n\nexport class AsyncAction<T> extends Action<T> {\n  public id: any;\n  public state?: T;\n  // @ts-ignore: Property has no initializer and is not definitely assigned\n  public delay: number;\n  protected pending: boolean = false;\n\n  constructor(protected scheduler: AsyncScheduler, protected work: (this: SchedulerAction<T>, state?: T) => void) {\n    super(scheduler, work);\n  }\n\n  public schedule(state?: T, delay: number = 0): Subscription {\n    if (this.closed) {\n      return this;\n    }\n\n    // Always replace the current state with the new state.\n    this.state = state;\n\n    const id = this.id;\n    const scheduler = this.scheduler;\n\n    //\n    // Important implementation note:\n    //\n    // Actions only execute once by default, unless rescheduled from within the\n    // scheduled callback. This allows us to implement single and repeat\n    // actions via the same code path, without adding API surface area, as well\n    // as mimic traditional recursion but across asynchronous boundaries.\n    //\n    // However, JS runtimes and timers distinguish between intervals achieved by\n    // serial `setTimeout` calls vs. a single `setInterval` call. An interval of\n    // serial `setTimeout` calls can be individually delayed, which delays\n    // scheduling the next `setTimeout`, and so on. `setInterval` attempts to\n    // guarantee the interval callback will be invoked more precisely to the\n    // interval period, regardless of load.\n    //\n    // Therefore, we use `setInterval` to schedule single and repeat actions.\n    // If the action reschedules itself with the same delay, the interval is not\n    // canceled. If the action doesn't reschedule, or reschedules with a\n    // different delay, the interval will be canceled after scheduled callback\n    // execution.\n    //\n    if (id != null) {\n      this.id = this.recycleAsyncId(scheduler, id, delay);\n    }\n\n    // Set the pending flag indicating that this action has been scheduled, or\n    // has recursively rescheduled itself.\n    this.pending = true;\n\n    this.delay = delay;\n    // If this action has already an async Id, don't request a new one.\n    this.id = this.id || this.requestAsyncId(scheduler, this.id, delay);\n\n    return this;\n  }\n\n  protected requestAsyncId(scheduler: AsyncScheduler, _id?: any, delay: number = 0): any {\n    return intervalProvider.setInterval(scheduler.flush.bind(scheduler, this), delay);\n  }\n\n  protected recycleAsyncId(_scheduler: AsyncScheduler, id: any, delay: number | null = 0): any {\n    // If this action is rescheduled with the same delay time, don't clear the interval id.\n    if (delay != null && this.delay === delay && this.pending === false) {\n      return id;\n    }\n    // Otherwise, if the action's delay time is different from the current delay,\n    // or the action has been rescheduled before it's executed, clear the interval id\n    intervalProvider.clearInterval(id);\n    return undefined;\n  }\n\n  /**\n   * Immediately executes this action and the `work` it contains.\n   * @return {any}\n   */\n  public execute(state: T, delay: number): any {\n    if (this.closed) {\n      return new Error('executing a cancelled action');\n    }\n\n    this.pending = false;\n    const error = this._execute(state, delay);\n    if (error) {\n      return error;\n    } else if (this.pending === false && this.id != null) {\n      // Dequeue if the action didn't reschedule itself. Don't call\n      // unsubscribe(), because the action could reschedule later.\n      // For example:\n      // ```\n      // scheduler.schedule(function doWork(counter) {\n      //   /* ... I'm a busy worker bee ... */\n      //   var originalAction = this;\n      //   /* wait 100ms before rescheduling the action */\n      //   setTimeout(function () {\n      //     originalAction.schedule(counter + 1);\n      //   }, 100);\n      // }, 1000);\n      // ```\n      this.id = this.recycleAsyncId(this.scheduler, this.id, null);\n    }\n  }\n\n  protected _execute(state: T, _delay: number): any {\n    let errored: boolean = false;\n    let errorValue: any;\n    try {\n      this.work(state);\n    } catch (e) {\n      errored = true;\n      // HACK: Since code elsewhere is relying on the \"truthiness\" of the\n      // return here, we can't have it return \"\" or 0 or false.\n      // TODO: Clean this up when we refactor schedulers mid-version-8 or so.\n      errorValue = e ? e : new Error('Scheduled action threw falsy error');\n    }\n    if (errored) {\n      this.unsubscribe();\n      return errorValue;\n    }\n  }\n\n  unsubscribe() {\n    if (!this.closed) {\n      const { id, scheduler } = this;\n      const { actions } = scheduler;\n\n      this.work = this.state = this.scheduler = null!;\n      this.pending = false;\n\n      arrRemove(actions, this);\n      if (id != null) {\n        this.id = this.recycleAsyncId(scheduler, id, null);\n      }\n\n      this.delay = null!;\n      super.unsubscribe();\n    }\n  }\n}\n","import { Scheduler } from '../Scheduler';\nimport { Action } from './Action';\nimport { AsyncAction } from './AsyncAction';\n\nexport class AsyncScheduler extends Scheduler {\n  public actions: Array<AsyncAction<any>> = [];\n  /**\n   * A flag to indicate whether the Scheduler is currently executing a batch of\n   * queued actions.\n   * @type {boolean}\n   * @internal\n   */\n  public _active: boolean = false;\n  /**\n   * An internal ID used to track the latest asynchronous task such as those\n   * coming from `setTimeout`, `setInterval`, `requestAnimationFrame`, and\n   * others.\n   * @type {any}\n   * @internal\n   */\n  public _scheduled: any = undefined;\n\n  constructor(SchedulerAction: typeof Action, now: () => number = Scheduler.now) {\n    super(SchedulerAction, now);\n  }\n\n  public flush(action: AsyncAction<any>): void {\n    const { actions } = this;\n\n    if (this._active) {\n      actions.push(action);\n      return;\n    }\n\n    let error: any;\n    this._active = true;\n\n    do {\n      if ((error = action.execute(action.state, action.delay))) {\n        break;\n      }\n    } while ((action = actions.shift()!)); // exhaust the scheduler queue\n\n    this._active = false;\n\n    if (error) {\n      while ((action = actions.shift()!)) {\n        action.unsubscribe();\n      }\n      throw error;\n    }\n  }\n}\n","import { AsyncAction } from './AsyncAction';\nimport { Subscription } from '../Subscription';\nimport { QueueScheduler } from './QueueScheduler';\nimport { SchedulerAction } from '../types';\n\nexport class QueueAction<T> extends AsyncAction<T> {\n\n  constructor(protected scheduler: QueueScheduler,\n              protected work: (this: SchedulerAction<T>, state?: T) => void) {\n    super(scheduler, work);\n  }\n\n  public schedule(state?: T, delay: number = 0): Subscription {\n    if (delay > 0) {\n      return super.schedule(state, delay);\n    }\n    this.delay = delay;\n    this.state = state;\n    this.scheduler.flush(this);\n    return this;\n  }\n\n  public execute(state: T, delay: number): any {\n    return (delay > 0 || this.closed) ?\n      super.execute(state, delay) :\n      this._execute(state, delay) ;\n  }\n\n  protected requestAsyncId(scheduler: QueueScheduler, id?: any, delay: number = 0): any {\n    // If delay exists and is greater than 0, or if the delay is null (the\n    // action wasn't rescheduled) but was originally scheduled as an async\n    // action, then recycle as an async action.\n\n    if ((delay != null && delay > 0) || (delay == null && this.delay > 0)) {\n      return super.requestAsyncId(scheduler, id, delay);\n    }\n    // Otherwise flush the scheduler starting with this action.\n    return scheduler.flush(this);\n  }\n}\n","import { AsyncScheduler } from './AsyncScheduler';\n\nexport class QueueScheduler extends AsyncScheduler {\n}\n","import { AsyncAction } from './AsyncAction';\nimport { Subscription } from '../Subscription';\nimport { AsyncScheduler } from './AsyncScheduler';\nimport { SchedulerAction } from '../types';\n\nexport class VirtualTimeScheduler extends AsyncScheduler {\n  /** @deprecated Not used in VirtualTimeScheduler directly. Will be removed in v8. */\n  static frameTimeFactor = 10;\n\n  /**\n   * The current frame for the state of the virtual scheduler instance. The the difference\n   * between two \"frames\" is synonymous with the passage of \"virtual time units\". So if\n   * you record `scheduler.frame` to be `1`, then later, observe `scheduler.frame` to be at `11`,\n   * that means `10` virtual time units have passed.\n   */\n  public frame: number = 0;\n\n  /**\n   * Used internally to examine the current virtual action index being processed.\n   * @deprecated Internal implementation detail, do not use directly. Will be made internal in v8.\n   */\n  public index: number = -1;\n\n  /**\n   * This creates an instance of a `VirtualTimeScheduler`. Experts only. The signature of\n   * this constructor is likely to change in the long run.\n   *\n   * @param schedulerActionCtor The type of Action to initialize when initializing actions during scheduling.\n   * @param maxFrames The maximum number of frames to process before stopping. Used to prevent endless flush cycles.\n   */\n  constructor(schedulerActionCtor: typeof AsyncAction = VirtualAction as any, public maxFrames: number = Infinity) {\n    super(schedulerActionCtor, () => this.frame);\n  }\n\n  /**\n   * Prompt the Scheduler to execute all of its queued actions, therefore\n   * clearing its queue.\n   * @return {void}\n   */\n  public flush(): void {\n    const { actions, maxFrames } = this;\n    let error: any;\n    let action: AsyncAction<any> | undefined;\n\n    while ((action = actions[0]) && action.delay <= maxFrames) {\n      actions.shift();\n      this.frame = action.delay;\n\n      if ((error = action.execute(action.state, action.delay))) {\n        break;\n      }\n    }\n\n    if (error) {\n      while ((action = actions.shift())) {\n        action.unsubscribe();\n      }\n      throw error;\n    }\n  }\n}\n\nexport class VirtualAction<T> extends AsyncAction<T> {\n  protected active: boolean = true;\n\n  constructor(\n    protected scheduler: VirtualTimeScheduler,\n    protected work: (this: SchedulerAction<T>, state?: T) => void,\n    protected index: number = (scheduler.index += 1)\n  ) {\n    super(scheduler, work);\n    this.index = scheduler.index = index;\n  }\n\n  public schedule(state?: T, delay: number = 0): Subscription {\n    if (Number.isFinite(delay)) {\n      if (!this.id) {\n        return super.schedule(state, delay);\n      }\n      this.active = false;\n      // If an action is rescheduled, we save allocations by mutating its state,\n      // pushing it to the end of the scheduler queue, and recycling the action.\n      // But since the VirtualTimeScheduler is used for testing, VirtualActions\n      // must be immutable so they can be inspected later.\n      const action = new VirtualAction(this.scheduler, this.work);\n      this.add(action);\n      return action.schedule(state, delay);\n    } else {\n      // If someone schedules something with Infinity, it'll never happen. So we\n      // don't even schedule it.\n      return Subscription.EMPTY;\n    }\n  }\n\n  protected requestAsyncId(scheduler: VirtualTimeScheduler, id?: any, delay: number = 0): any {\n    this.delay = scheduler.frame + delay;\n    const { actions } = scheduler;\n    actions.push(this);\n    (actions as Array<VirtualAction<T>>).sort(VirtualAction.sortActions);\n    return true;\n  }\n\n  protected recycleAsyncId(scheduler: VirtualTimeScheduler, id?: any, delay: number = 0): any {\n    return undefined;\n  }\n\n  protected _execute(state: T, delay: number): any {\n    if (this.active === true) {\n      return super._execute(state, delay);\n    }\n  }\n\n  private static sortActions<T>(a: VirtualAction<T>, b: VirtualAction<T>) {\n    if (a.delay === b.delay) {\n      if (a.index === b.index) {\n        return 0;\n      } else if (a.index > b.index) {\n        return 1;\n      } else {\n        return -1;\n      }\n    } else if (a.delay > b.delay) {\n      return 1;\n    } else {\n      return -1;\n    }\n  }\n}\n","import { AnimationFrameAction } from './AnimationFrameAction';\nimport { AnimationFrameScheduler } from './AnimationFrameScheduler';\n\n/**\n *\n * Animation Frame Scheduler\n *\n * <span class=\"informal\">Perform task when `window.requestAnimationFrame` would fire</span>\n *\n * When `animationFrame` scheduler is used with delay, it will fall back to {@link asyncScheduler} scheduler\n * behaviour.\n *\n * Without delay, `animationFrame` scheduler can be used to create smooth browser animations.\n * It makes sure scheduled task will happen just before next browser content repaint,\n * thus performing animations as efficiently as possible.\n *\n * ## Example\n * Schedule div height animation\n * ```ts\n * // html: <div style=\"background: #0ff;\"></div>\n * import { animationFrameScheduler } from 'rxjs';\n *\n * const div = document.querySelector('div');\n *\n * animationFrameScheduler.schedule(function(height) {\n *   div.style.height = height + \"px\";\n *\n *   this.schedule(height + 1);  // `this` references currently executing Action,\n *                               // which we reschedule with new state\n * }, 0, 0);\n *\n * // You will see a div element growing in height\n * ```\n */\n\nexport const animationFrameScheduler = new AnimationFrameScheduler(AnimationFrameAction);\n\n/**\n * @deprecated Renamed to {@link animationFrameScheduler}. Will be removed in v8.\n */\nexport const animationFrame = animationFrameScheduler;\n","import { Subscription } from '../Subscription';\n\ninterface AnimationFrameProvider {\n  schedule(callback: FrameRequestCallback): Subscription;\n  requestAnimationFrame: typeof requestAnimationFrame;\n  cancelAnimationFrame: typeof cancelAnimationFrame;\n  delegate:\n    | {\n        requestAnimationFrame: typeof requestAnimationFrame;\n        cancelAnimationFrame: typeof cancelAnimationFrame;\n      }\n    | undefined;\n}\n\nexport const animationFrameProvider: AnimationFrameProvider = {\n  // When accessing the delegate, use the variable rather than `this` so that\n  // the functions can be called without being bound to the provider.\n  schedule(callback) {\n    let request = requestAnimationFrame;\n    let cancel: typeof cancelAnimationFrame | undefined = cancelAnimationFrame;\n    const { delegate } = animationFrameProvider;\n    if (delegate) {\n      request = delegate.requestAnimationFrame;\n      cancel = delegate.cancelAnimationFrame;\n    }\n    const handle = request((timestamp) => {\n      // Clear the cancel function. The request has been fulfilled, so\n      // attempting to cancel the request upon unsubscription would be\n      // pointless.\n      cancel = undefined;\n      callback(timestamp);\n    });\n    return new Subscription(() => cancel?.(handle));\n  },\n  requestAnimationFrame(...args) {\n    const { delegate } = animationFrameProvider;\n    return (delegate?.requestAnimationFrame || requestAnimationFrame)(...args);\n  },\n  cancelAnimationFrame(...args) {\n    const { delegate } = animationFrameProvider;\n    return (delegate?.cancelAnimationFrame || cancelAnimationFrame)(...args);\n  },\n  delegate: undefined,\n};\n","import { AsapAction } from './AsapAction';\nimport { AsapScheduler } from './AsapScheduler';\n\n/**\n *\n * Asap Scheduler\n *\n * <span class=\"informal\">Perform task as fast as it can be performed asynchronously</span>\n *\n * `asap` scheduler behaves the same as {@link asyncScheduler} scheduler when you use it to delay task\n * in time. If however you set delay to `0`, `asap` will wait for current synchronously executing\n * code to end and then it will try to execute given task as fast as possible.\n *\n * `asap` scheduler will do its best to minimize time between end of currently executing code\n * and start of scheduled task. This makes it best candidate for performing so called \"deferring\".\n * Traditionally this was achieved by calling `setTimeout(deferredTask, 0)`, but that technique involves\n * some (although minimal) unwanted delay.\n *\n * Note that using `asap` scheduler does not necessarily mean that your task will be first to process\n * after currently executing code. In particular, if some task was also scheduled with `asap` before,\n * that task will execute first. That being said, if you need to schedule task asynchronously, but\n * as soon as possible, `asap` scheduler is your best bet.\n *\n * ## Example\n * Compare async and asap scheduler<\n * ```ts\n * import { asapScheduler, asyncScheduler } from 'rxjs';\n *\n * asyncScheduler.schedule(() => console.log('async')); // scheduling 'async' first...\n * asapScheduler.schedule(() => console.log('asap'));\n *\n * // Logs:\n * // \"asap\"\n * // \"async\"\n * // ... but 'asap' goes first!\n * ```\n */\n\nexport const asapScheduler = new AsapScheduler(AsapAction);\n\n/**\n * @deprecated Renamed to {@link asapScheduler}. Will be removed in v8.\n */\nexport const asap = asapScheduler;\n","import { AsyncAction } from './AsyncAction';\nimport { AsyncScheduler } from './AsyncScheduler';\n\n/**\n *\n * Async Scheduler\n *\n * <span class=\"informal\">Schedule task as if you used setTimeout(task, duration)</span>\n *\n * `async` scheduler schedules tasks asynchronously, by putting them on the JavaScript\n * event loop queue. It is best used to delay tasks in time or to schedule tasks repeating\n * in intervals.\n *\n * If you just want to \"defer\" task, that is to perform it right after currently\n * executing synchronous code ends (commonly achieved by `setTimeout(deferredTask, 0)`),\n * better choice will be the {@link asapScheduler} scheduler.\n *\n * ## Examples\n * Use async scheduler to delay task\n * ```ts\n * import { asyncScheduler } from 'rxjs';\n *\n * const task = () => console.log('it works!');\n *\n * asyncScheduler.schedule(task, 2000);\n *\n * // After 2 seconds logs:\n * // \"it works!\"\n * ```\n *\n * Use async scheduler to repeat task in intervals\n * ```ts\n * import { asyncScheduler } from 'rxjs';\n *\n * function task(state) {\n *   console.log(state);\n *   this.schedule(state + 1, 1000); // `this` references currently executing Action,\n *                                   // which we reschedule with new state and delay\n * }\n *\n * asyncScheduler.schedule(task, 3000, 0);\n *\n * // Logs:\n * // 0 after 3s\n * // 1 after 4s\n * // 2 after 5s\n * // 3 after 6s\n * ```\n */\n\nexport const asyncScheduler = new AsyncScheduler(AsyncAction);\n\n/**\n * @deprecated Renamed to {@link asyncScheduler}. Will be removed in v8.\n */\nexport const async = asyncScheduler;\n","import { TimestampProvider } from '../types';\n\ninterface DateTimestampProvider extends TimestampProvider {\n  delegate: TimestampProvider | undefined;\n}\n\nexport const dateTimestampProvider: DateTimestampProvider = {\n  now() {\n    // Use the variable rather than `this` so that the function can be called\n    // without being bound to the provider.\n    return (dateTimestampProvider.delegate || Date).now();\n  },\n  delegate: undefined,\n};\n","import { Immediate } from '../util/Immediate';\nimport type { TimerHandle } from './timerHandle';\nconst { setImmediate, clearImmediate } = Immediate;\n\ntype SetImmediateFunction = (handler: () => void, ...args: any[]) => TimerHandle;\ntype ClearImmediateFunction = (handle: TimerHandle) => void;\n\ninterface ImmediateProvider {\n  setImmediate: SetImmediateFunction;\n  clearImmediate: ClearImmediateFunction;\n  delegate:\n    | {\n        setImmediate: SetImmediateFunction;\n        clearImmediate: ClearImmediateFunction;\n      }\n    | undefined;\n}\n\nexport const immediateProvider: ImmediateProvider = {\n  // When accessing the delegate, use the variable rather than `this` so that\n  // the functions can be called without being bound to the provider.\n  setImmediate(...args) {\n    const { delegate } = immediateProvider;\n    return (delegate?.setImmediate || setImmediate)(...args);\n  },\n  clearImmediate(handle) {\n    const { delegate } = immediateProvider;\n    return (delegate?.clearImmediate || clearImmediate)(handle as any);\n  },\n  delegate: undefined,\n};\n","import type { TimerHandle } from './timerHandle';\ntype SetIntervalFunction = (handler: () => void, timeout?: number, ...args: any[]) => TimerHandle;\ntype ClearIntervalFunction = (handle: TimerHandle) => void;\n\ninterface IntervalProvider {\n  setInterval: SetIntervalFunction;\n  clearInterval: ClearIntervalFunction;\n  delegate:\n    | {\n        setInterval: SetIntervalFunction;\n        clearInterval: ClearIntervalFunction;\n      }\n    | undefined;\n}\n\nexport const intervalProvider: IntervalProvider = {\n  // When accessing the delegate, use the variable rather than `this` so that\n  // the functions can be called without being bound to the provider.\n  setInterval(handler: () => void, timeout?: number, ...args) {\n    const { delegate } = intervalProvider;\n    if (delegate?.setInterval) {\n      return delegate.setInterval(handler, timeout, ...args);\n    }\n    return setInterval(handler, timeout, ...args);\n  },\n  clearInterval(handle) {\n    const { delegate } = intervalProvider;\n    return (delegate?.clearInterval || clearInterval)(handle as any);\n  },\n  delegate: undefined,\n};\n","import { TimestampProvider } from '../types';\n\ninterface PerformanceTimestampProvider extends TimestampProvider {\n  delegate: TimestampProvider | undefined;\n}\n\nexport const performanceTimestampProvider: PerformanceTimestampProvider = {\n  now() {\n    // Use the variable rather than `this` so that the function can be called\n    // without being bound to the provider.\n    return (performanceTimestampProvider.delegate || performance).now();\n  },\n  delegate: undefined,\n};\n","import { QueueAction } from './QueueAction';\nimport { QueueScheduler } from './QueueScheduler';\n\n/**\n *\n * Queue Scheduler\n *\n * <span class=\"informal\">Put every next task on a queue, instead of executing it immediately</span>\n *\n * `queue` scheduler, when used with delay, behaves the same as {@link asyncScheduler} scheduler.\n *\n * When used without delay, it schedules given task synchronously - executes it right when\n * it is scheduled. However when called recursively, that is when inside the scheduled task,\n * another task is scheduled with queue scheduler, instead of executing immediately as well,\n * that task will be put on a queue and wait for current one to finish.\n *\n * This means that when you execute task with `queue` scheduler, you are sure it will end\n * before any other task scheduled with that scheduler will start.\n *\n * ## Examples\n * Schedule recursively first, then do something\n * ```ts\n * import { queueScheduler } from 'rxjs';\n *\n * queueScheduler.schedule(() => {\n *   queueScheduler.schedule(() => console.log('second')); // will not happen now, but will be put on a queue\n *\n *   console.log('first');\n * });\n *\n * // Logs:\n * // \"first\"\n * // \"second\"\n * ```\n *\n * Reschedule itself recursively\n * ```ts\n * import { queueScheduler } from 'rxjs';\n *\n * queueScheduler.schedule(function(state) {\n *   if (state !== 0) {\n *     console.log('before', state);\n *     this.schedule(state - 1); // `this` references currently executing Action,\n *                               // which we reschedule with new state\n *     console.log('after', state);\n *   }\n * }, 0, 3);\n *\n * // In scheduler that runs recursively, you would expect:\n * // \"before\", 3\n * // \"before\", 2\n * // \"before\", 1\n * // \"after\", 1\n * // \"after\", 2\n * // \"after\", 3\n *\n * // But with queue it logs:\n * // \"before\", 3\n * // \"after\", 3\n * // \"before\", 2\n * // \"after\", 2\n * // \"before\", 1\n * // \"after\", 1\n * ```\n */\n\nexport const queueScheduler = new QueueScheduler(QueueAction);\n\n/**\n * @deprecated Renamed to {@link queueScheduler}. Will be removed in v8.\n */\nexport const queue = queueScheduler;\n","import type { TimerHandle } from './timerHandle';\ntype SetTimeoutFunction = (handler: () => void, timeout?: number, ...args: any[]) => TimerHandle;\ntype ClearTimeoutFunction = (handle: TimerHandle) => void;\n\ninterface TimeoutProvider {\n  setTimeout: SetTimeoutFunction;\n  clearTimeout: ClearTimeoutFunction;\n  delegate:\n    | {\n        setTimeout: SetTimeoutFunction;\n        clearTimeout: ClearTimeoutFunction;\n      }\n    | undefined;\n}\n\nexport const timeoutProvider: TimeoutProvider = {\n  // When accessing the delegate, use the variable rather than `this` so that\n  // the functions can be called without being bound to the provider.\n  setTimeout(handler: () => void, timeout?: number, ...args) {\n    const { delegate } = timeoutProvider;\n    if (delegate?.setTimeout) {\n      return delegate.setTimeout(handler, timeout, ...args);\n    }\n    return setTimeout(handler, timeout, ...args);\n  },\n  clearTimeout(handle) {\n    const { delegate } = timeoutProvider;\n    return (delegate?.clearTimeout || clearTimeout)(handle as any);\n  },\n  delegate: undefined,\n};\n","export function getSymbolIterator(): symbol {\n  if (typeof Symbol !== 'function' || !Symbol.iterator) {\n    return '@@iterator' as any;\n  }\n\n  return Symbol.iterator;\n}\n\nexport const iterator = getSymbolIterator();\n","/** Symbol.observable or a string \"@@observable\". Used for interop */\nexport const observable: string | symbol = (() => (typeof Symbol === 'function' && Symbol.observable) || '@@observable')();\n","import { createErrorClass } from './createErrorClass';\n\nexport interface ArgumentOutOfRangeError extends Error {}\n\nexport interface ArgumentOutOfRangeErrorCtor {\n  /**\n   * @deprecated Internal implementation detail. Do not construct error instances.\n   * Cannot be tagged as internal: https://github.com/ReactiveX/rxjs/issues/6269\n   */\n  new (): ArgumentOutOfRangeError;\n}\n\n/**\n * An error thrown when an element was queried at a certain index of an\n * Observable, but no such index or position exists in that sequence.\n *\n * @see {@link elementAt}\n * @see {@link take}\n * @see {@link takeLast}\n *\n * @class ArgumentOutOfRangeError\n */\nexport const ArgumentOutOfRangeError: ArgumentOutOfRangeErrorCtor = createErrorClass(\n  (_super) =>\n    function ArgumentOutOfRangeErrorImpl(this: any) {\n      _super(this);\n      this.name = 'ArgumentOutOfRangeError';\n      this.message = 'argument out of range';\n    }\n);\n","import { createErrorClass } from './createErrorClass';\n\nexport interface EmptyError extends Error {}\n\nexport interface EmptyErrorCtor {\n  /**\n   * @deprecated Internal implementation detail. Do not construct error instances.\n   * Cannot be tagged as internal: https://github.com/ReactiveX/rxjs/issues/6269\n   */\n  new (): EmptyError;\n}\n\n/**\n * An error thrown when an Observable or a sequence was queried but has no\n * elements.\n *\n * @see {@link first}\n * @see {@link last}\n * @see {@link single}\n * @see {@link firstValueFrom}\n * @see {@link lastValueFrom}\n *\n * @class EmptyError\n */\nexport const EmptyError: EmptyErrorCtor = createErrorClass((_super) => function EmptyErrorImpl(this: any) {\n  _super(this);\n  this.name = 'EmptyError';\n  this.message = 'no elements in sequence';\n});\n","let nextHandle = 1;\n// The promise needs to be created lazily otherwise it won't be patched by Zones\nlet resolved: Promise<any>;\nconst activeHandles: { [key: number]: any } = {};\n\n/**\n * Finds the handle in the list of active handles, and removes it.\n * Returns `true` if found, `false` otherwise. Used both to clear\n * Immediate scheduled tasks, and to identify if a task should be scheduled.\n */\nfunction findAndClearHandle(handle: number): boolean {\n  if (handle in activeHandles) {\n    delete activeHandles[handle];\n    return true;\n  }\n  return false;\n}\n\n/**\n * Helper functions to schedule and unschedule microtasks.\n */\nexport const Immediate = {\n  setImmediate(cb: () => void): number {\n    const handle = nextHandle++;\n    activeHandles[handle] = true;\n    if (!resolved) {\n      resolved = Promise.resolve();\n    }\n    resolved.then(() => findAndClearHandle(handle) && cb());\n    return handle;\n  },\n\n  clearImmediate(handle: number): void {\n    findAndClearHandle(handle);\n  },\n};\n\n/**\n * Used for internal testing purposes only. Do not export from library.\n */\nexport const TestTools = {\n  pending() {\n    return Object.keys(activeHandles).length;\n  }\n};\n","import { createErrorClass } from './createErrorClass';\n\nexport interface NotFoundError extends Error {}\n\nexport interface NotFoundErrorCtor {\n  /**\n   * @deprecated Internal implementation detail. Do not construct error instances.\n   * Cannot be tagged as internal: https://github.com/ReactiveX/rxjs/issues/6269\n   */\n  new (message: string): NotFoundError;\n}\n\n/**\n * An error thrown when a value or values are missing from an\n * observable sequence.\n *\n * @see {@link operators/single}\n *\n * @class NotFoundError\n */\nexport const NotFoundError: NotFoundErrorCtor = createErrorClass(\n  (_super) =>\n    function NotFoundErrorImpl(this: any, message: string) {\n      _super(this);\n      this.name = 'NotFoundError';\n      this.message = message;\n    }\n);\n","import { createErrorClass } from './createErrorClass';\n\nexport interface ObjectUnsubscribedError extends Error {}\n\nexport interface ObjectUnsubscribedErrorCtor {\n  /**\n   * @deprecated Internal implementation detail. Do not construct error instances.\n   * Cannot be tagged as internal: https://github.com/ReactiveX/rxjs/issues/6269\n   */\n  new (): ObjectUnsubscribedError;\n}\n\n/**\n * An error thrown when an action is invalid because the object has been\n * unsubscribed.\n *\n * @see {@link Subject}\n * @see {@link BehaviorSubject}\n *\n * @class ObjectUnsubscribedError\n */\nexport const ObjectUnsubscribedError: ObjectUnsubscribedErrorCtor = createErrorClass(\n  (_super) =>\n    function ObjectUnsubscribedErrorImpl(this: any) {\n      _super(this);\n      this.name = 'ObjectUnsubscribedError';\n      this.message = 'object unsubscribed';\n    }\n);\n","import { createErrorClass } from './createErrorClass';\n\nexport interface SequenceError extends Error {}\n\nexport interface SequenceErrorCtor {\n  /**\n   * @deprecated Internal implementation detail. Do not construct error instances.\n   * Cannot be tagged as internal: https://github.com/ReactiveX/rxjs/issues/6269\n   */\n  new (message: string): SequenceError;\n}\n\n/**\n * An error thrown when something is wrong with the sequence of\n * values arriving on the observable.\n *\n * @see {@link operators/single}\n *\n * @class SequenceError\n */\nexport const SequenceError: SequenceErrorCtor = createErrorClass(\n  (_super) =>\n    function SequenceErrorImpl(this: any, message: string) {\n      _super(this);\n      this.name = 'SequenceError';\n      this.message = message;\n    }\n);\n","import { createErrorClass } from './createErrorClass';\n\nexport interface UnsubscriptionError extends Error {\n  readonly errors: any[];\n}\n\nexport interface UnsubscriptionErrorCtor {\n  /**\n   * @deprecated Internal implementation detail. Do not construct error instances.\n   * Cannot be tagged as internal: https://github.com/ReactiveX/rxjs/issues/6269\n   */\n  new (errors: any[]): UnsubscriptionError;\n}\n\n/**\n * An error thrown when one or more errors have occurred during the\n * `unsubscribe` of a {@link Subscription}.\n */\nexport const UnsubscriptionError: UnsubscriptionErrorCtor = createErrorClass(\n  (_super) =>\n    function UnsubscriptionErrorImpl(this: any, errors: (Error | string)[]) {\n      _super(this);\n      this.message = errors\n        ? `${errors.length} errors occurred during unsubscription:\n${errors.map((err, i) => `${i + 1}) ${err.toString()}`).join('\\n  ')}`\n        : '';\n      this.name = 'UnsubscriptionError';\n      this.errors = errors;\n    }\n);\n","import { SchedulerLike } from '../types';\nimport { isFunction } from './isFunction';\nimport { isScheduler } from './isScheduler';\n\nfunction last<T>(arr: T[]): T | undefined {\n  return arr[arr.length - 1];\n}\n\nexport function popResultSelector(args: any[]): ((...args: unknown[]) => unknown) | undefined {\n  return isFunction(last(args)) ? args.pop() : undefined;\n}\n\nexport function popScheduler(args: any[]): SchedulerLike | undefined {\n  return isScheduler(last(args)) ? args.pop() : undefined;\n}\n\nexport function popNumber(args: any[], defaultValue: number): number {\n  return typeof last(args) === 'number' ? args.pop()! : defaultValue;\n}\n","const { isArray } = Array;\nconst { getPrototypeOf, prototype: objectProto, keys: getKeys } = Object;\n\n/**\n * Used in functions where either a list of arguments, a single array of arguments, or a\n * dictionary of arguments can be returned. Returns an object with an `args` property with\n * the arguments in an array, if it is a dictionary, it will also return the `keys` in another\n * property.\n */\nexport function argsArgArrayOrObject<T, O extends Record<string, T>>(args: T[] | [O] | [T[]]): { args: T[]; keys: string[] | null } {\n  if (args.length === 1) {\n    const first = args[0];\n    if (isArray(first)) {\n      return { args: first, keys: null };\n    }\n    if (isPOJO(first)) {\n      const keys = getKeys(first);\n      return {\n        args: keys.map((key) => first[key]),\n        keys,\n      };\n    }\n  }\n\n  return { args: args as T[], keys: null };\n}\n\nfunction isPOJO(obj: any): obj is object {\n  return obj && typeof obj === 'object' && getPrototypeOf(obj) === objectProto;\n}\n","const { isArray } = Array;\n\n/**\n * Used in operators and functions that accept either a list of arguments, or an array of arguments\n * as a single argument.\n */\nexport function argsOrArgArray<T>(args: (T | T[])[]): T[] {\n  return args.length === 1 && isArray(args[0]) ? args[0] : (args as T[]);\n}\n","/**\n * Removes an item from an array, mutating it.\n * @param arr The array to remove the item from\n * @param item The item to remove\n */\nexport function arrRemove<T>(arr: T[] | undefined | null, item: T) {\n  if (arr) {\n    const index = arr.indexOf(item);\n    0 <= index && arr.splice(index, 1);\n  }\n}\n","/**\n * Used to create Error subclasses until the community moves away from ES5.\n *\n * This is because compiling from TypeScript down to ES5 has issues with subclassing Errors\n * as well as other built-in types: https://github.com/Microsoft/TypeScript/issues/12123\n *\n * @param createImpl A factory function to create the actual constructor implementation. The returned\n * function should be a named function that calls `_super` internally.\n */\nexport function createErrorClass<T>(createImpl: (_super: any) => any): T {\n  const _super = (instance: any) => {\n    Error.call(instance);\n    instance.stack = new Error().stack;\n  };\n\n  const ctorFunc = createImpl(_super);\n  ctorFunc.prototype = Object.create(Error.prototype);\n  ctorFunc.prototype.constructor = ctorFunc;\n  return ctorFunc;\n}\n","export function createObject(keys: string[], values: any[]) {\n  return keys.reduce((result, key, i) => ((result[key] = values[i]), result), {} as any);\n}\n","import { config } from '../config';\n\nlet context: { errorThrown: boolean; error: any } | null = null;\n\n/**\n * Handles dealing with errors for super-gross mode. Creates a context, in which\n * any synchronously thrown errors will be passed to {@link captureError}. Which\n * will record the error such that it will be rethrown after the call back is complete.\n * TODO: Remove in v8\n * @param cb An immediately executed function.\n */\nexport function errorContext(cb: () => void) {\n  if (config.useDeprecatedSynchronousErrorHandling) {\n    const isRoot = !context;\n    if (isRoot) {\n      context = { errorThrown: false, error: null };\n    }\n    cb();\n    if (isRoot) {\n      const { errorThrown, error } = context!;\n      context = null;\n      if (errorThrown) {\n        throw error;\n      }\n    }\n  } else {\n    // This is the general non-deprecated path for everyone that\n    // isn't crazy enough to use super-gross mode (useDeprecatedSynchronousErrorHandling)\n    cb();\n  }\n}\n\n/**\n * Captures errors only in super-gross mode.\n * @param err the error to capture\n */\nexport function captureError(err: any) {\n  if (config.useDeprecatedSynchronousErrorHandling && context) {\n    context.errorThrown = true;\n    context.error = err;\n  }\n}\n","import { Subscription } from '../Subscription';\nimport { SchedulerAction, SchedulerLike } from '../types';\n\nexport function executeSchedule(\n  parentSubscription: Subscription,\n  scheduler: SchedulerLike,\n  work: () => void,\n  delay: number,\n  repeat: true\n): void;\nexport function executeSchedule(\n  parentSubscription: Subscription,\n  scheduler: SchedulerLike,\n  work: () => void,\n  delay?: number,\n  repeat?: false\n): Subscription;\n\nexport function executeSchedule(\n  parentSubscription: Subscription,\n  scheduler: SchedulerLike,\n  work: () => void,\n  delay = 0,\n  repeat = false\n): Subscription | void {\n  const scheduleSubscription = scheduler.schedule(function (this: SchedulerAction<any>) {\n    work();\n    if (repeat) {\n      parentSubscription.add(this.schedule(null, delay));\n    } else {\n      this.unsubscribe();\n    }\n  }, delay);\n\n  parentSubscription.add(scheduleSubscription);\n\n  if (!repeat) {\n    // Because user-land scheduler implementations are unlikely to properly reuse\n    // Actions for repeat scheduling, we can't trust that the returned subscription\n    // will control repeat subscription scenarios. So we're trying to avoid using them\n    // incorrectly within this library.\n    return scheduleSubscription;\n  }\n}\n","/**\n * This function takes one parameter and just returns it. Simply put,\n * this is like `<T>(x: T): T => x`.\n *\n * ## Examples\n *\n * This is useful in some cases when using things like `mergeMap`\n *\n * ```ts\n * import { interval, take, map, range, mergeMap, identity } from 'rxjs';\n *\n * const source$ = interval(1000).pipe(take(5));\n *\n * const result$ = source$.pipe(\n *   map(i => range(i)),\n *   mergeMap(identity) // same as mergeMap(x => x)\n * );\n *\n * result$.subscribe({\n *   next: console.log\n * });\n * ```\n *\n * Or when you want to selectively apply an operator\n *\n * ```ts\n * import { interval, take, identity } from 'rxjs';\n *\n * const shouldLimit = () => Math.random() < 0.5;\n *\n * const source$ = interval(1000);\n *\n * const result$ = source$.pipe(shouldLimit() ? take(5) : identity);\n *\n * result$.subscribe({\n *   next: console.log\n * });\n * ```\n *\n * @param x Any value that is returned by this function\n * @returns The value passed as the first parameter to this function\n */\nexport function identity<T>(x: T): T {\n  return x;\n}\n","export const isArrayLike = (<T>(x: any): x is ArrayLike<T> => x && typeof x.length === 'number' && typeof x !== 'function');","import { isFunction } from './isFunction';\n\nexport function isAsyncIterable<T>(obj: any): obj is AsyncIterable<T> {\n  return Symbol.asyncIterator && isFunction(obj?.[Symbol.asyncIterator]);\n}\n","/**\n * Checks to see if a value is not only a `Date` object,\n * but a *valid* `Date` object that can be converted to a\n * number. For example, `new Date('blah')` is indeed an\n * `instanceof Date`, however it cannot be converted to a\n * number.\n */\nexport function isValidDate(value: any): value is Date {\n  return value instanceof Date && !isNaN(value as any);\n}\n","/**\n * Returns true if the object is a function.\n * @param value The value to check\n */\nexport function isFunction(value: any): value is (...args: any[]) => any {\n  return typeof value === 'function';\n}\n","import { InteropObservable } from '../types';\nimport { observable as Symbol_observable } from '../symbol/observable';\nimport { isFunction } from './isFunction';\n\n/** Identifies an input as being Observable (but not necessary an Rx Observable) */\nexport function isInteropObservable(input: any): input is InteropObservable<any> {\n  return isFunction(input[Symbol_observable]);\n}\n","import { iterator as Symbol_iterator } from '../symbol/iterator';\nimport { isFunction } from './isFunction';\n\n/** Identifies an input as being an Iterable */\nexport function isIterable(input: any): input is Iterable<any> {\n  return isFunction(input?.[Symbol_iterator]);\n}\n","/** prettier */\nimport { Observable } from '../Observable';\nimport { isFunction } from './isFunction';\n\n/**\n * Tests to see if the object is an RxJS {@link Observable}\n * @param obj the object to test\n */\nexport function isObservable(obj: any): obj is Observable<unknown> {\n  // The !! is to ensure that this publicly exposed function returns\n  // `false` if something like `null` or `0` is passed.\n  return !!obj && (obj instanceof Observable || (isFunction(obj.lift) && isFunction(obj.subscribe)));\n}\n","import { isFunction } from \"./isFunction\";\n\n/**\n * Tests to see if the object is \"thennable\".\n * @param value the object to test\n */\nexport function isPromise(value: any): value is PromiseLike<any> {\n  return isFunction(value?.then);\n}\n","import { ReadableStreamLike } from '../types';\nimport { isFunction } from './isFunction';\n\nexport async function* readableStreamLikeToAsyncGenerator<T>(readableStream: ReadableStreamLike<T>): AsyncGenerator<T> {\n  const reader = readableStream.getReader();\n  try {\n    while (true) {\n      const { value, done } = await reader.read();\n      if (done) {\n        return;\n      }\n      yield value!;\n    }\n  } finally {\n    reader.releaseLock();\n  }\n}\n\nexport function isReadableStreamLike<T>(obj: any): obj is ReadableStreamLike<T> {\n  // We don't want to use instanceof checks because they would return\n  // false for instances from another Realm, like an <iframe>.\n  return isFunction(obj?.getReader);\n}\n","import { SchedulerLike } from '../types';\nimport { isFunction } from './isFunction';\n\nexport function isScheduler(value: any): value is SchedulerLike {\n  return value && isFunction(value.schedule);\n}\n","import { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { OperatorFunction } from '../types';\nimport { isFunction } from './isFunction';\n\n/**\n * Used to determine if an object is an Observable with a lift function.\n */\nexport function hasLift(source: any): source is { lift: InstanceType<typeof Observable>['lift'] } {\n  return isFunction(source?.lift);\n}\n\n/**\n * Creates an `OperatorFunction`. Used to define operators throughout the library in a concise way.\n * @param init The logic to connect the liftedSource to the subscriber at the moment of subscription.\n */\nexport function operate<T, R>(\n  init: (liftedSource: Observable<T>, subscriber: Subscriber<R>) => (() => void) | void\n): OperatorFunction<T, R> {\n  return (source: Observable<T>) => {\n    if (hasLift(source)) {\n      return source.lift(function (this: Subscriber<R>, liftedSource: Observable<T>) {\n        try {\n          return init(liftedSource, this);\n        } catch (err) {\n          this.error(err);\n        }\n      });\n    }\n    throw new TypeError('Unable to lift unknown Observable type');\n  };\n}\n","import { OperatorFunction } from \"../types\";\nimport { map } from \"../operators/map\";\n\nconst { isArray } = Array;\n\nfunction callOrApply<T, R>(fn: ((...values: T[]) => R), args: T|T[]): R {\n    return isArray(args) ? fn(...args) : fn(args);\n}\n\n/**\n * Used in several -- mostly deprecated -- situations where we need to \n * apply a list of arguments or a single argument to a result selector.\n */\nexport function mapOneOrManyArgs<T, R>(fn: ((...values: T[]) => R)): OperatorFunction<T|T[], R> {\n    return map(args => callOrApply(fn, args))\n}","/* tslint:disable:no-empty */\nexport function noop() { }\n","export function not<T>(pred: (value: T, index: number) => boolean, thisArg: any): (value: T, index: number) => boolean {\n  return (value: T, index: number) => !pred.call(thisArg, value, index); \n}","import { identity } from './identity';\nimport { UnaryFunction } from '../types';\n\nexport function pipe(): typeof identity;\nexport function pipe<T, A>(fn1: UnaryFunction<T, A>): UnaryFunction<T, A>;\nexport function pipe<T, A, B>(fn1: UnaryFunction<T, A>, fn2: UnaryFunction<A, B>): UnaryFunction<T, B>;\nexport function pipe<T, A, B, C>(fn1: UnaryFunction<T, A>, fn2: UnaryFunction<A, B>, fn3: UnaryFunction<B, C>): UnaryFunction<T, C>;\nexport function pipe<T, A, B, C, D>(\n  fn1: UnaryFunction<T, A>,\n  fn2: UnaryFunction<A, B>,\n  fn3: UnaryFunction<B, C>,\n  fn4: UnaryFunction<C, D>\n): UnaryFunction<T, D>;\nexport function pipe<T, A, B, C, D, E>(\n  fn1: UnaryFunction<T, A>,\n  fn2: UnaryFunction<A, B>,\n  fn3: UnaryFunction<B, C>,\n  fn4: UnaryFunction<C, D>,\n  fn5: UnaryFunction<D, E>\n): UnaryFunction<T, E>;\nexport function pipe<T, A, B, C, D, E, F>(\n  fn1: UnaryFunction<T, A>,\n  fn2: UnaryFunction<A, B>,\n  fn3: UnaryFunction<B, C>,\n  fn4: UnaryFunction<C, D>,\n  fn5: UnaryFunction<D, E>,\n  fn6: UnaryFunction<E, F>\n): UnaryFunction<T, F>;\nexport function pipe<T, A, B, C, D, E, F, G>(\n  fn1: UnaryFunction<T, A>,\n  fn2: UnaryFunction<A, B>,\n  fn3: UnaryFunction<B, C>,\n  fn4: UnaryFunction<C, D>,\n  fn5: UnaryFunction<D, E>,\n  fn6: UnaryFunction<E, F>,\n  fn7: UnaryFunction<F, G>\n): UnaryFunction<T, G>;\nexport function pipe<T, A, B, C, D, E, F, G, H>(\n  fn1: UnaryFunction<T, A>,\n  fn2: UnaryFunction<A, B>,\n  fn3: UnaryFunction<B, C>,\n  fn4: UnaryFunction<C, D>,\n  fn5: UnaryFunction<D, E>,\n  fn6: UnaryFunction<E, F>,\n  fn7: UnaryFunction<F, G>,\n  fn8: UnaryFunction<G, H>\n): UnaryFunction<T, H>;\nexport function pipe<T, A, B, C, D, E, F, G, H, I>(\n  fn1: UnaryFunction<T, A>,\n  fn2: UnaryFunction<A, B>,\n  fn3: UnaryFunction<B, C>,\n  fn4: UnaryFunction<C, D>,\n  fn5: UnaryFunction<D, E>,\n  fn6: UnaryFunction<E, F>,\n  fn7: UnaryFunction<F, G>,\n  fn8: UnaryFunction<G, H>,\n  fn9: UnaryFunction<H, I>\n): UnaryFunction<T, I>;\nexport function pipe<T, A, B, C, D, E, F, G, H, I>(\n  fn1: UnaryFunction<T, A>,\n  fn2: UnaryFunction<A, B>,\n  fn3: UnaryFunction<B, C>,\n  fn4: UnaryFunction<C, D>,\n  fn5: UnaryFunction<D, E>,\n  fn6: UnaryFunction<E, F>,\n  fn7: UnaryFunction<F, G>,\n  fn8: UnaryFunction<G, H>,\n  fn9: UnaryFunction<H, I>,\n  ...fns: UnaryFunction<any, any>[]\n): UnaryFunction<T, unknown>;\n\n/**\n * pipe() can be called on one or more functions, each of which can take one argument (\"UnaryFunction\")\n * and uses it to return a value.\n * It returns a function that takes one argument, passes it to the first UnaryFunction, and then\n * passes the result to the next one, passes that result to the next one, and so on.  \n */\nexport function pipe(...fns: Array<UnaryFunction<any, any>>): UnaryFunction<any, any> {\n  return pipeFromArray(fns);\n}\n\n/** @internal */\nexport function pipeFromArray<T, R>(fns: Array<UnaryFunction<T, R>>): UnaryFunction<T, R> {\n  if (fns.length === 0) {\n    return identity as UnaryFunction<any, any>;\n  }\n\n  if (fns.length === 1) {\n    return fns[0];\n  }\n\n  return function piped(input: T): R {\n    return fns.reduce((prev: any, fn: UnaryFunction<T, R>) => fn(prev), input as any);\n  };\n}\n","import { config } from '../config';\nimport { timeoutProvider } from '../scheduler/timeoutProvider';\n\n/**\n * Handles an error on another job either with the user-configured {@link onUnhandledError},\n * or by throwing it on that new job so it can be picked up by `window.onerror`, `process.on('error')`, etc.\n *\n * This should be called whenever there is an error that is out-of-band with the subscription\n * or when an error hits a terminal boundary of the subscription and no error handler was provided.\n *\n * @param err the error to report\n */\nexport function reportUnhandledError(err: any) {\n  timeoutProvider.setTimeout(() => {\n    const { onUnhandledError } = config;\n    if (onUnhandledError) {\n      // Execute the user-configured error handler.\n      onUnhandledError(err);\n    } else {\n      // Throw so it is picked up by the runtime's uncaught error mechanism.\n      throw err;\n    }\n  });\n}\n","/**\n * Creates the TypeError to throw if an invalid object is passed to `from` or `scheduled`.\n * @param input The object that was passed.\n */\nexport function createInvalidObservableTypeError(input: any) {\n  // TODO: We should create error codes that can be looked up, so this can be less verbose.\n  return new TypeError(\n    `You provided ${\n      input !== null && typeof input === 'object' ? 'an invalid object' : `'${input}'`\n    } where a stream was expected. You can provide an Observable, Promise, ReadableStream, Array, AsyncIterable, or Iterable.`\n  );\n}\n","export { webSocket as webSocket } from '../internal/observable/dom/webSocket';\nexport { WebSocketSubject, WebSocketSubjectConfig } from '../internal/observable/dom/WebSocketSubject';\n","/* eslint-disable node/no-deprecated-api */\n\n'use strict'\n\nvar buffer = require('buffer')\nvar Buffer = buffer.Buffer\n\nvar safer = {}\n\nvar key\n\nfor (key in buffer) {\n  if (!buffer.hasOwnProperty(key)) continue\n  if (key === 'SlowBuffer' || key === 'Buffer') continue\n  safer[key] = buffer[key]\n}\n\nvar Safer = safer.Buffer = {}\nfor (key in Buffer) {\n  if (!Buffer.hasOwnProperty(key)) continue\n  if (key === 'allocUnsafe' || key === 'allocUnsafeSlow') continue\n  Safer[key] = Buffer[key]\n}\n\nsafer.Buffer.prototype = Buffer.prototype\n\nif (!Safer.from || Safer.from === Uint8Array.from) {\n  Safer.from = function (value, encodingOrOffset, length) {\n    if (typeof value === 'number') {\n      throw new TypeError('The \"value\" argument must not be of type number. Received type ' + typeof value)\n    }\n    if (value && typeof value.length === 'undefined') {\n      throw new TypeError('The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type ' + typeof value)\n    }\n    return Buffer(value, encodingOrOffset, length)\n  }\n}\n\nif (!Safer.alloc) {\n  Safer.alloc = function (size, fill, encoding) {\n    if (typeof size !== 'number') {\n      throw new TypeError('The \"size\" argument must be of type number. Received type ' + typeof size)\n    }\n    if (size < 0 || size >= 2 * (1 << 30)) {\n      throw new RangeError('The value \"' + size + '\" is invalid for option \"size\"')\n    }\n    var buf = Buffer(size)\n    if (!fill || fill.length === 0) {\n      buf.fill(0)\n    } else if (typeof encoding === 'string') {\n      buf.fill(fill, encoding)\n    } else {\n      buf.fill(fill)\n    }\n    return buf\n  }\n}\n\nif (!safer.kStringMaxLength) {\n  try {\n    safer.kStringMaxLength = process.binding('buffer').kStringMaxLength\n  } catch (e) {\n    // we can't determine kStringMaxLength in environments where process.binding\n    // is unsupported, so let's not set it\n  }\n}\n\nif (!safer.constants) {\n  safer.constants = {\n    MAX_LENGTH: safer.kMaxLength\n  }\n  if (safer.kStringMaxLength) {\n    safer.constants.MAX_STRING_LENGTH = safer.kStringMaxLength\n  }\n}\n\nmodule.exports = safer\n","/*!\n * send\n * Copyright(c) 2012 TJ Holowaychuk\n * Copyright(c) 2014-2022 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * Module dependencies.\n * @private\n */\n\nvar createError = require('http-errors')\nvar debug = require('debug')('send')\nvar deprecate = require('depd')('send')\nvar destroy = require('destroy')\nvar encodeUrl = require('encodeurl')\nvar escapeHtml = require('escape-html')\nvar etag = require('etag')\nvar fresh = require('fresh')\nvar fs = require('fs')\nvar mime = require('mime')\nvar ms = require('ms')\nvar onFinished = require('on-finished')\nvar parseRange = require('range-parser')\nvar path = require('path')\nvar statuses = require('statuses')\nvar Stream = require('stream')\nvar util = require('util')\n\n/**\n * Path function references.\n * @private\n */\n\nvar extname = path.extname\nvar join = path.join\nvar normalize = path.normalize\nvar resolve = path.resolve\nvar sep = path.sep\n\n/**\n * Regular expression for identifying a bytes Range header.\n * @private\n */\n\nvar BYTES_RANGE_REGEXP = /^ *bytes=/\n\n/**\n * Maximum value allowed for the max age.\n * @private\n */\n\nvar MAX_MAXAGE = 60 * 60 * 24 * 365 * 1000 // 1 year\n\n/**\n * Regular expression to match a path with a directory up component.\n * @private\n */\n\nvar UP_PATH_REGEXP = /(?:^|[\\\\/])\\.\\.(?:[\\\\/]|$)/\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = send\nmodule.exports.mime = mime\n\n/**\n * Return a `SendStream` for `req` and `path`.\n *\n * @param {object} req\n * @param {string} path\n * @param {object} [options]\n * @return {SendStream}\n * @public\n */\n\nfunction send (req, path, options) {\n  return new SendStream(req, path, options)\n}\n\n/**\n * Initialize a `SendStream` with the given `path`.\n *\n * @param {Request} req\n * @param {String} path\n * @param {object} [options]\n * @private\n */\n\nfunction SendStream (req, path, options) {\n  Stream.call(this)\n\n  var opts = options || {}\n\n  this.options = opts\n  this.path = path\n  this.req = req\n\n  this._acceptRanges = opts.acceptRanges !== undefined\n    ? Boolean(opts.acceptRanges)\n    : true\n\n  this._cacheControl = opts.cacheControl !== undefined\n    ? Boolean(opts.cacheControl)\n    : true\n\n  this._etag = opts.etag !== undefined\n    ? Boolean(opts.etag)\n    : true\n\n  this._dotfiles = opts.dotfiles !== undefined\n    ? opts.dotfiles\n    : 'ignore'\n\n  if (this._dotfiles !== 'ignore' && this._dotfiles !== 'allow' && this._dotfiles !== 'deny') {\n    throw new TypeError('dotfiles option must be \"allow\", \"deny\", or \"ignore\"')\n  }\n\n  this._hidden = Boolean(opts.hidden)\n\n  if (opts.hidden !== undefined) {\n    deprecate('hidden: use dotfiles: \\'' + (this._hidden ? 'allow' : 'ignore') + '\\' instead')\n  }\n\n  // legacy support\n  if (opts.dotfiles === undefined) {\n    this._dotfiles = undefined\n  }\n\n  this._extensions = opts.extensions !== undefined\n    ? normalizeList(opts.extensions, 'extensions option')\n    : []\n\n  this._immutable = opts.immutable !== undefined\n    ? Boolean(opts.immutable)\n    : false\n\n  this._index = opts.index !== undefined\n    ? normalizeList(opts.index, 'index option')\n    : ['index.html']\n\n  this._lastModified = opts.lastModified !== undefined\n    ? Boolean(opts.lastModified)\n    : true\n\n  this._maxage = opts.maxAge || opts.maxage\n  this._maxage = typeof this._maxage === 'string'\n    ? ms(this._maxage)\n    : Number(this._maxage)\n  this._maxage = !isNaN(this._maxage)\n    ? Math.min(Math.max(0, this._maxage), MAX_MAXAGE)\n    : 0\n\n  this._root = opts.root\n    ? resolve(opts.root)\n    : null\n\n  if (!this._root && opts.from) {\n    this.from(opts.from)\n  }\n}\n\n/**\n * Inherits from `Stream`.\n */\n\nutil.inherits(SendStream, Stream)\n\n/**\n * Enable or disable etag generation.\n *\n * @param {Boolean} val\n * @return {SendStream}\n * @api public\n */\n\nSendStream.prototype.etag = deprecate.function(function etag (val) {\n  this._etag = Boolean(val)\n  debug('etag %s', this._etag)\n  return this\n}, 'send.etag: pass etag as option')\n\n/**\n * Enable or disable \"hidden\" (dot) files.\n *\n * @param {Boolean} path\n * @return {SendStream}\n * @api public\n */\n\nSendStream.prototype.hidden = deprecate.function(function hidden (val) {\n  this._hidden = Boolean(val)\n  this._dotfiles = undefined\n  debug('hidden %s', this._hidden)\n  return this\n}, 'send.hidden: use dotfiles option')\n\n/**\n * Set index `paths`, set to a falsy\n * value to disable index support.\n *\n * @param {String|Boolean|Array} paths\n * @return {SendStream}\n * @api public\n */\n\nSendStream.prototype.index = deprecate.function(function index (paths) {\n  var index = !paths ? [] : normalizeList(paths, 'paths argument')\n  debug('index %o', paths)\n  this._index = index\n  return this\n}, 'send.index: pass index as option')\n\n/**\n * Set root `path`.\n *\n * @param {String} path\n * @return {SendStream}\n * @api public\n */\n\nSendStream.prototype.root = function root (path) {\n  this._root = resolve(String(path))\n  debug('root %s', this._root)\n  return this\n}\n\nSendStream.prototype.from = deprecate.function(SendStream.prototype.root,\n  'send.from: pass root as option')\n\nSendStream.prototype.root = deprecate.function(SendStream.prototype.root,\n  'send.root: pass root as option')\n\n/**\n * Set max-age to `maxAge`.\n *\n * @param {Number} maxAge\n * @return {SendStream}\n * @api public\n */\n\nSendStream.prototype.maxage = deprecate.function(function maxage (maxAge) {\n  this._maxage = typeof maxAge === 'string'\n    ? ms(maxAge)\n    : Number(maxAge)\n  this._maxage = !isNaN(this._maxage)\n    ? Math.min(Math.max(0, this._maxage), MAX_MAXAGE)\n    : 0\n  debug('max-age %d', this._maxage)\n  return this\n}, 'send.maxage: pass maxAge as option')\n\n/**\n * Emit error with `status`.\n *\n * @param {number} status\n * @param {Error} [err]\n * @private\n */\n\nSendStream.prototype.error = function error (status, err) {\n  // emit if listeners instead of responding\n  if (hasListeners(this, 'error')) {\n    return this.emit('error', createHttpError(status, err))\n  }\n\n  var res = this.res\n  var msg = statuses.message[status] || String(status)\n  var doc = createHtmlDocument('Error', escapeHtml(msg))\n\n  // clear existing headers\n  clearHeaders(res)\n\n  // add error headers\n  if (err && err.headers) {\n    setHeaders(res, err.headers)\n  }\n\n  // send basic response\n  res.statusCode = status\n  res.setHeader('Content-Type', 'text/html; charset=UTF-8')\n  res.setHeader('Content-Length', Buffer.byteLength(doc))\n  res.setHeader('Content-Security-Policy', \"default-src 'none'\")\n  res.setHeader('X-Content-Type-Options', 'nosniff')\n  res.end(doc)\n}\n\n/**\n * Check if the pathname ends with \"/\".\n *\n * @return {boolean}\n * @private\n */\n\nSendStream.prototype.hasTrailingSlash = function hasTrailingSlash () {\n  return this.path[this.path.length - 1] === '/'\n}\n\n/**\n * Check if this is a conditional GET request.\n *\n * @return {Boolean}\n * @api private\n */\n\nSendStream.prototype.isConditionalGET = function isConditionalGET () {\n  return this.req.headers['if-match'] ||\n    this.req.headers['if-unmodified-since'] ||\n    this.req.headers['if-none-match'] ||\n    this.req.headers['if-modified-since']\n}\n\n/**\n * Check if the request preconditions failed.\n *\n * @return {boolean}\n * @private\n */\n\nSendStream.prototype.isPreconditionFailure = function isPreconditionFailure () {\n  var req = this.req\n  var res = this.res\n\n  // if-match\n  var match = req.headers['if-match']\n  if (match) {\n    var etag = res.getHeader('ETag')\n    return !etag || (match !== '*' && parseTokenList(match).every(function (match) {\n      return match !== etag && match !== 'W/' + etag && 'W/' + match !== etag\n    }))\n  }\n\n  // if-unmodified-since\n  var unmodifiedSince = parseHttpDate(req.headers['if-unmodified-since'])\n  if (!isNaN(unmodifiedSince)) {\n    var lastModified = parseHttpDate(res.getHeader('Last-Modified'))\n    return isNaN(lastModified) || lastModified > unmodifiedSince\n  }\n\n  return false\n}\n\n/**\n * Strip various content header fields for a change in entity.\n *\n * @private\n */\n\nSendStream.prototype.removeContentHeaderFields = function removeContentHeaderFields () {\n  var res = this.res\n\n  res.removeHeader('Content-Encoding')\n  res.removeHeader('Content-Language')\n  res.removeHeader('Content-Length')\n  res.removeHeader('Content-Range')\n  res.removeHeader('Content-Type')\n}\n\n/**\n * Respond with 304 not modified.\n *\n * @api private\n */\n\nSendStream.prototype.notModified = function notModified () {\n  var res = this.res\n  debug('not modified')\n  this.removeContentHeaderFields()\n  res.statusCode = 304\n  res.end()\n}\n\n/**\n * Raise error that headers already sent.\n *\n * @api private\n */\n\nSendStream.prototype.headersAlreadySent = function headersAlreadySent () {\n  var err = new Error('Can\\'t set headers after they are sent.')\n  debug('headers already sent')\n  this.error(500, err)\n}\n\n/**\n * Check if the request is cacheable, aka\n * responded with 2xx or 304 (see RFC 2616 section 14.2{5,6}).\n *\n * @return {Boolean}\n * @api private\n */\n\nSendStream.prototype.isCachable = function isCachable () {\n  var statusCode = this.res.statusCode\n  return (statusCode >= 200 && statusCode < 300) ||\n    statusCode === 304\n}\n\n/**\n * Handle stat() error.\n *\n * @param {Error} error\n * @private\n */\n\nSendStream.prototype.onStatError = function onStatError (error) {\n  switch (error.code) {\n    case 'ENAMETOOLONG':\n    case 'ENOENT':\n    case 'ENOTDIR':\n      this.error(404, error)\n      break\n    default:\n      this.error(500, error)\n      break\n  }\n}\n\n/**\n * Check if the cache is fresh.\n *\n * @return {Boolean}\n * @api private\n */\n\nSendStream.prototype.isFresh = function isFresh () {\n  return fresh(this.req.headers, {\n    etag: this.res.getHeader('ETag'),\n    'last-modified': this.res.getHeader('Last-Modified')\n  })\n}\n\n/**\n * Check if the range is fresh.\n *\n * @return {Boolean}\n * @api private\n */\n\nSendStream.prototype.isRangeFresh = function isRangeFresh () {\n  var ifRange = this.req.headers['if-range']\n\n  if (!ifRange) {\n    return true\n  }\n\n  // if-range as etag\n  if (ifRange.indexOf('\"') !== -1) {\n    var etag = this.res.getHeader('ETag')\n    return Boolean(etag && ifRange.indexOf(etag) !== -1)\n  }\n\n  // if-range as modified date\n  var lastModified = this.res.getHeader('Last-Modified')\n  return parseHttpDate(lastModified) <= parseHttpDate(ifRange)\n}\n\n/**\n * Redirect to path.\n *\n * @param {string} path\n * @private\n */\n\nSendStream.prototype.redirect = function redirect (path) {\n  var res = this.res\n\n  if (hasListeners(this, 'directory')) {\n    this.emit('directory', res, path)\n    return\n  }\n\n  if (this.hasTrailingSlash()) {\n    this.error(403)\n    return\n  }\n\n  var loc = encodeUrl(collapseLeadingSlashes(this.path + '/'))\n  var doc = createHtmlDocument('Redirecting', 'Redirecting to <a href=\"' + escapeHtml(loc) + '\">' +\n    escapeHtml(loc) + '</a>')\n\n  // redirect\n  res.statusCode = 301\n  res.setHeader('Content-Type', 'text/html; charset=UTF-8')\n  res.setHeader('Content-Length', Buffer.byteLength(doc))\n  res.setHeader('Content-Security-Policy', \"default-src 'none'\")\n  res.setHeader('X-Content-Type-Options', 'nosniff')\n  res.setHeader('Location', loc)\n  res.end(doc)\n}\n\n/**\n * Pipe to `res.\n *\n * @param {Stream} res\n * @return {Stream} res\n * @api public\n */\n\nSendStream.prototype.pipe = function pipe (res) {\n  // root path\n  var root = this._root\n\n  // references\n  this.res = res\n\n  // decode the path\n  var path = decode(this.path)\n  if (path === -1) {\n    this.error(400)\n    return res\n  }\n\n  // null byte(s)\n  if (~path.indexOf('\\0')) {\n    this.error(400)\n    return res\n  }\n\n  var parts\n  if (root !== null) {\n    // normalize\n    if (path) {\n      path = normalize('.' + sep + path)\n    }\n\n    // malicious path\n    if (UP_PATH_REGEXP.test(path)) {\n      debug('malicious path \"%s\"', path)\n      this.error(403)\n      return res\n    }\n\n    // explode path parts\n    parts = path.split(sep)\n\n    // join / normalize from optional root dir\n    path = normalize(join(root, path))\n  } else {\n    // \"..\" is malicious without \"root\"\n    if (UP_PATH_REGEXP.test(path)) {\n      debug('malicious path \"%s\"', path)\n      this.error(403)\n      return res\n    }\n\n    // explode path parts\n    parts = normalize(path).split(sep)\n\n    // resolve the path\n    path = resolve(path)\n  }\n\n  // dotfile handling\n  if (containsDotFile(parts)) {\n    var access = this._dotfiles\n\n    // legacy support\n    if (access === undefined) {\n      access = parts[parts.length - 1][0] === '.'\n        ? (this._hidden ? 'allow' : 'ignore')\n        : 'allow'\n    }\n\n    debug('%s dotfile \"%s\"', access, path)\n    switch (access) {\n      case 'allow':\n        break\n      case 'deny':\n        this.error(403)\n        return res\n      case 'ignore':\n      default:\n        this.error(404)\n        return res\n    }\n  }\n\n  // index file support\n  if (this._index.length && this.hasTrailingSlash()) {\n    this.sendIndex(path)\n    return res\n  }\n\n  this.sendFile(path)\n  return res\n}\n\n/**\n * Transfer `path`.\n *\n * @param {String} path\n * @api public\n */\n\nSendStream.prototype.send = function send (path, stat) {\n  var len = stat.size\n  var options = this.options\n  var opts = {}\n  var res = this.res\n  var req = this.req\n  var ranges = req.headers.range\n  var offset = options.start || 0\n\n  if (headersSent(res)) {\n    // impossible to send now\n    this.headersAlreadySent()\n    return\n  }\n\n  debug('pipe \"%s\"', path)\n\n  // set header fields\n  this.setHeader(path, stat)\n\n  // set content-type\n  this.type(path)\n\n  // conditional GET support\n  if (this.isConditionalGET()) {\n    if (this.isPreconditionFailure()) {\n      this.error(412)\n      return\n    }\n\n    if (this.isCachable() && this.isFresh()) {\n      this.notModified()\n      return\n    }\n  }\n\n  // adjust len to start/end options\n  len = Math.max(0, len - offset)\n  if (options.end !== undefined) {\n    var bytes = options.end - offset + 1\n    if (len > bytes) len = bytes\n  }\n\n  // Range support\n  if (this._acceptRanges && BYTES_RANGE_REGEXP.test(ranges)) {\n    // parse\n    ranges = parseRange(len, ranges, {\n      combine: true\n    })\n\n    // If-Range support\n    if (!this.isRangeFresh()) {\n      debug('range stale')\n      ranges = -2\n    }\n\n    // unsatisfiable\n    if (ranges === -1) {\n      debug('range unsatisfiable')\n\n      // Content-Range\n      res.setHeader('Content-Range', contentRange('bytes', len))\n\n      // 416 Requested Range Not Satisfiable\n      return this.error(416, {\n        headers: { 'Content-Range': res.getHeader('Content-Range') }\n      })\n    }\n\n    // valid (syntactically invalid/multiple ranges are treated as a regular response)\n    if (ranges !== -2 && ranges.length === 1) {\n      debug('range %j', ranges)\n\n      // Content-Range\n      res.statusCode = 206\n      res.setHeader('Content-Range', contentRange('bytes', len, ranges[0]))\n\n      // adjust for requested range\n      offset += ranges[0].start\n      len = ranges[0].end - ranges[0].start + 1\n    }\n  }\n\n  // clone options\n  for (var prop in options) {\n    opts[prop] = options[prop]\n  }\n\n  // set read options\n  opts.start = offset\n  opts.end = Math.max(offset, offset + len - 1)\n\n  // content-length\n  res.setHeader('Content-Length', len)\n\n  // HEAD support\n  if (req.method === 'HEAD') {\n    res.end()\n    return\n  }\n\n  this.stream(path, opts)\n}\n\n/**\n * Transfer file for `path`.\n *\n * @param {String} path\n * @api private\n */\nSendStream.prototype.sendFile = function sendFile (path) {\n  var i = 0\n  var self = this\n\n  debug('stat \"%s\"', path)\n  fs.stat(path, function onstat (err, stat) {\n    if (err && err.code === 'ENOENT' && !extname(path) && path[path.length - 1] !== sep) {\n      // not found, check extensions\n      return next(err)\n    }\n    if (err) return self.onStatError(err)\n    if (stat.isDirectory()) return self.redirect(path)\n    self.emit('file', path, stat)\n    self.send(path, stat)\n  })\n\n  function next (err) {\n    if (self._extensions.length <= i) {\n      return err\n        ? self.onStatError(err)\n        : self.error(404)\n    }\n\n    var p = path + '.' + self._extensions[i++]\n\n    debug('stat \"%s\"', p)\n    fs.stat(p, function (err, stat) {\n      if (err) return next(err)\n      if (stat.isDirectory()) return next()\n      self.emit('file', p, stat)\n      self.send(p, stat)\n    })\n  }\n}\n\n/**\n * Transfer index for `path`.\n *\n * @param {String} path\n * @api private\n */\nSendStream.prototype.sendIndex = function sendIndex (path) {\n  var i = -1\n  var self = this\n\n  function next (err) {\n    if (++i >= self._index.length) {\n      if (err) return self.onStatError(err)\n      return self.error(404)\n    }\n\n    var p = join(path, self._index[i])\n\n    debug('stat \"%s\"', p)\n    fs.stat(p, function (err, stat) {\n      if (err) return next(err)\n      if (stat.isDirectory()) return next()\n      self.emit('file', p, stat)\n      self.send(p, stat)\n    })\n  }\n\n  next()\n}\n\n/**\n * Stream `path` to the response.\n *\n * @param {String} path\n * @param {Object} options\n * @api private\n */\n\nSendStream.prototype.stream = function stream (path, options) {\n  var self = this\n  var res = this.res\n\n  // pipe\n  var stream = fs.createReadStream(path, options)\n  this.emit('stream', stream)\n  stream.pipe(res)\n\n  // cleanup\n  function cleanup () {\n    destroy(stream, true)\n  }\n\n  // response finished, cleanup\n  onFinished(res, cleanup)\n\n  // error handling\n  stream.on('error', function onerror (err) {\n    // clean up stream early\n    cleanup()\n\n    // error\n    self.onStatError(err)\n  })\n\n  // end\n  stream.on('end', function onend () {\n    self.emit('end')\n  })\n}\n\n/**\n * Set content-type based on `path`\n * if it hasn't been explicitly set.\n *\n * @param {String} path\n * @api private\n */\n\nSendStream.prototype.type = function type (path) {\n  var res = this.res\n\n  if (res.getHeader('Content-Type')) return\n\n  var type = mime.lookup(path)\n\n  if (!type) {\n    debug('no content-type')\n    return\n  }\n\n  var charset = mime.charsets.lookup(type)\n\n  debug('content-type %s', type)\n  res.setHeader('Content-Type', type + (charset ? '; charset=' + charset : ''))\n}\n\n/**\n * Set response header fields, most\n * fields may be pre-defined.\n *\n * @param {String} path\n * @param {Object} stat\n * @api private\n */\n\nSendStream.prototype.setHeader = function setHeader (path, stat) {\n  var res = this.res\n\n  this.emit('headers', res, path, stat)\n\n  if (this._acceptRanges && !res.getHeader('Accept-Ranges')) {\n    debug('accept ranges')\n    res.setHeader('Accept-Ranges', 'bytes')\n  }\n\n  if (this._cacheControl && !res.getHeader('Cache-Control')) {\n    var cacheControl = 'public, max-age=' + Math.floor(this._maxage / 1000)\n\n    if (this._immutable) {\n      cacheControl += ', immutable'\n    }\n\n    debug('cache-control %s', cacheControl)\n    res.setHeader('Cache-Control', cacheControl)\n  }\n\n  if (this._lastModified && !res.getHeader('Last-Modified')) {\n    var modified = stat.mtime.toUTCString()\n    debug('modified %s', modified)\n    res.setHeader('Last-Modified', modified)\n  }\n\n  if (this._etag && !res.getHeader('ETag')) {\n    var val = etag(stat)\n    debug('etag %s', val)\n    res.setHeader('ETag', val)\n  }\n}\n\n/**\n * Clear all headers from a response.\n *\n * @param {object} res\n * @private\n */\n\nfunction clearHeaders (res) {\n  var headers = getHeaderNames(res)\n\n  for (var i = 0; i < headers.length; i++) {\n    res.removeHeader(headers[i])\n  }\n}\n\n/**\n * Collapse all leading slashes into a single slash\n *\n * @param {string} str\n * @private\n */\nfunction collapseLeadingSlashes (str) {\n  for (var i = 0; i < str.length; i++) {\n    if (str[i] !== '/') {\n      break\n    }\n  }\n\n  return i > 1\n    ? '/' + str.substr(i)\n    : str\n}\n\n/**\n * Determine if path parts contain a dotfile.\n *\n * @api private\n */\n\nfunction containsDotFile (parts) {\n  for (var i = 0; i < parts.length; i++) {\n    var part = parts[i]\n    if (part.length > 1 && part[0] === '.') {\n      return true\n    }\n  }\n\n  return false\n}\n\n/**\n * Create a Content-Range header.\n *\n * @param {string} type\n * @param {number} size\n * @param {array} [range]\n */\n\nfunction contentRange (type, size, range) {\n  return type + ' ' + (range ? range.start + '-' + range.end : '*') + '/' + size\n}\n\n/**\n * Create a minimal HTML document.\n *\n * @param {string} title\n * @param {string} body\n * @private\n */\n\nfunction createHtmlDocument (title, body) {\n  return '<!DOCTYPE html>\\n' +\n    '<html lang=\"en\">\\n' +\n    '<head>\\n' +\n    '<meta charset=\"utf-8\">\\n' +\n    '<title>' + title + '</title>\\n' +\n    '</head>\\n' +\n    '<body>\\n' +\n    '<pre>' + body + '</pre>\\n' +\n    '</body>\\n' +\n    '</html>\\n'\n}\n\n/**\n * Create a HttpError object from simple arguments.\n *\n * @param {number} status\n * @param {Error|object} err\n * @private\n */\n\nfunction createHttpError (status, err) {\n  if (!err) {\n    return createError(status)\n  }\n\n  return err instanceof Error\n    ? createError(status, err, { expose: false })\n    : createError(status, err)\n}\n\n/**\n * decodeURIComponent.\n *\n * Allows V8 to only deoptimize this fn instead of all\n * of send().\n *\n * @param {String} path\n * @api private\n */\n\nfunction decode (path) {\n  try {\n    return decodeURIComponent(path)\n  } catch (err) {\n    return -1\n  }\n}\n\n/**\n * Get the header names on a respnse.\n *\n * @param {object} res\n * @returns {array[string]}\n * @private\n */\n\nfunction getHeaderNames (res) {\n  return typeof res.getHeaderNames !== 'function'\n    ? Object.keys(res._headers || {})\n    : res.getHeaderNames()\n}\n\n/**\n * Determine if emitter has listeners of a given type.\n *\n * The way to do this check is done three different ways in Node.js >= 0.8\n * so this consolidates them into a minimal set using instance methods.\n *\n * @param {EventEmitter} emitter\n * @param {string} type\n * @returns {boolean}\n * @private\n */\n\nfunction hasListeners (emitter, type) {\n  var count = typeof emitter.listenerCount !== 'function'\n    ? emitter.listeners(type).length\n    : emitter.listenerCount(type)\n\n  return count > 0\n}\n\n/**\n * Determine if the response headers have been sent.\n *\n * @param {object} res\n * @returns {boolean}\n * @private\n */\n\nfunction headersSent (res) {\n  return typeof res.headersSent !== 'boolean'\n    ? Boolean(res._header)\n    : res.headersSent\n}\n\n/**\n * Normalize the index option into an array.\n *\n * @param {boolean|string|array} val\n * @param {string} name\n * @private\n */\n\nfunction normalizeList (val, name) {\n  var list = [].concat(val || [])\n\n  for (var i = 0; i < list.length; i++) {\n    if (typeof list[i] !== 'string') {\n      throw new TypeError(name + ' must be array of strings or false')\n    }\n  }\n\n  return list\n}\n\n/**\n * Parse an HTTP Date into a number.\n *\n * @param {string} date\n * @private\n */\n\nfunction parseHttpDate (date) {\n  var timestamp = date && Date.parse(date)\n\n  return typeof timestamp === 'number'\n    ? timestamp\n    : NaN\n}\n\n/**\n * Parse a HTTP token list.\n *\n * @param {string} str\n * @private\n */\n\nfunction parseTokenList (str) {\n  var end = 0\n  var list = []\n  var start = 0\n\n  // gather tokens\n  for (var i = 0, len = str.length; i < len; i++) {\n    switch (str.charCodeAt(i)) {\n      case 0x20: /*   */\n        if (start === end) {\n          start = end = i + 1\n        }\n        break\n      case 0x2c: /* , */\n        if (start !== end) {\n          list.push(str.substring(start, end))\n        }\n        start = end = i + 1\n        break\n      default:\n        end = i + 1\n        break\n    }\n  }\n\n  // final token\n  if (start !== end) {\n    list.push(str.substring(start, end))\n  }\n\n  return list\n}\n\n/**\n * Set an object of headers on a response.\n *\n * @param {object} res\n * @param {object} headers\n * @private\n */\n\nfunction setHeaders (res, headers) {\n  var keys = Object.keys(headers)\n\n  for (var i = 0; i < keys.length; i++) {\n    var key = keys[i]\n    res.setHeader(key, headers[key])\n  }\n}\n","/**\n * Helpers.\n */\n\nvar s = 1000;\nvar m = s * 60;\nvar h = m * 60;\nvar d = h * 24;\nvar y = d * 365.25;\n\n/**\n * Parse or format the given `val`.\n *\n * Options:\n *\n *  - `long` verbose formatting [false]\n *\n * @param {String|Number} val\n * @param {Object} [options]\n * @throws {Error} throw an error if val is not a non-empty string or a number\n * @return {String|Number}\n * @api public\n */\n\nmodule.exports = function(val, options) {\n  options = options || {};\n  var type = typeof val;\n  if (type === 'string' && val.length > 0) {\n    return parse(val);\n  } else if (type === 'number' && isNaN(val) === false) {\n    return options.long ? fmtLong(val) : fmtShort(val);\n  }\n  throw new Error(\n    'val is not a non-empty string or a valid number. val=' +\n      JSON.stringify(val)\n  );\n};\n\n/**\n * Parse the given `str` and return milliseconds.\n *\n * @param {String} str\n * @return {Number}\n * @api private\n */\n\nfunction parse(str) {\n  str = String(str);\n  if (str.length > 100) {\n    return;\n  }\n  var match = /^((?:\\d+)?\\.?\\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|years?|yrs?|y)?$/i.exec(\n    str\n  );\n  if (!match) {\n    return;\n  }\n  var n = parseFloat(match[1]);\n  var type = (match[2] || 'ms').toLowerCase();\n  switch (type) {\n    case 'years':\n    case 'year':\n    case 'yrs':\n    case 'yr':\n    case 'y':\n      return n * y;\n    case 'days':\n    case 'day':\n    case 'd':\n      return n * d;\n    case 'hours':\n    case 'hour':\n    case 'hrs':\n    case 'hr':\n    case 'h':\n      return n * h;\n    case 'minutes':\n    case 'minute':\n    case 'mins':\n    case 'min':\n    case 'm':\n      return n * m;\n    case 'seconds':\n    case 'second':\n    case 'secs':\n    case 'sec':\n    case 's':\n      return n * s;\n    case 'milliseconds':\n    case 'millisecond':\n    case 'msecs':\n    case 'msec':\n    case 'ms':\n      return n;\n    default:\n      return undefined;\n  }\n}\n\n/**\n * Short format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtShort(ms) {\n  if (ms >= d) {\n    return Math.round(ms / d) + 'd';\n  }\n  if (ms >= h) {\n    return Math.round(ms / h) + 'h';\n  }\n  if (ms >= m) {\n    return Math.round(ms / m) + 'm';\n  }\n  if (ms >= s) {\n    return Math.round(ms / s) + 's';\n  }\n  return ms + 'ms';\n}\n\n/**\n * Long format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtLong(ms) {\n  return plural(ms, d, 'day') ||\n    plural(ms, h, 'hour') ||\n    plural(ms, m, 'minute') ||\n    plural(ms, s, 'second') ||\n    ms + ' ms';\n}\n\n/**\n * Pluralization helper.\n */\n\nfunction plural(ms, n, name) {\n  if (ms < n) {\n    return;\n  }\n  if (ms < n * 1.5) {\n    return Math.floor(ms / n) + ' ' + name;\n  }\n  return Math.ceil(ms / n) + ' ' + name + 's';\n}\n","/**\n * This is the web browser implementation of `debug()`.\n *\n * Expose `debug()` as the module.\n */\n\nexports = module.exports = require('./debug');\nexports.log = log;\nexports.formatArgs = formatArgs;\nexports.save = save;\nexports.load = load;\nexports.useColors = useColors;\nexports.storage = 'undefined' != typeof chrome\n               && 'undefined' != typeof chrome.storage\n                  ? chrome.storage.local\n                  : localstorage();\n\n/**\n * Colors.\n */\n\nexports.colors = [\n  'lightseagreen',\n  'forestgreen',\n  'goldenrod',\n  'dodgerblue',\n  'darkorchid',\n  'crimson'\n];\n\n/**\n * Currently only WebKit-based Web Inspectors, Firefox >= v31,\n * and the Firebug extension (any Firefox version) are known\n * to support \"%c\" CSS customizations.\n *\n * TODO: add a `localStorage` variable to explicitly enable/disable colors\n */\n\nfunction useColors() {\n  // NB: In an Electron preload script, document will be defined but not fully\n  // initialized. Since we know we're in Chrome, we'll just detect this case\n  // explicitly\n  if (typeof window !== 'undefined' && window.process && window.process.type === 'renderer') {\n    return true;\n  }\n\n  // is webkit? http://stackoverflow.com/a/16459606/376773\n  // document is undefined in react-native: https://github.com/facebook/react-native/pull/1632\n  return (typeof document !== 'undefined' && document.documentElement && document.documentElement.style && document.documentElement.style.WebkitAppearance) ||\n    // is firebug? http://stackoverflow.com/a/398120/376773\n    (typeof window !== 'undefined' && window.console && (window.console.firebug || (window.console.exception && window.console.table))) ||\n    // is firefox >= v31?\n    // https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages\n    (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/firefox\\/(\\d+)/) && parseInt(RegExp.$1, 10) >= 31) ||\n    // double check webkit in userAgent just in case we are in a worker\n    (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/applewebkit\\/(\\d+)/));\n}\n\n/**\n * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.\n */\n\nexports.formatters.j = function(v) {\n  try {\n    return JSON.stringify(v);\n  } catch (err) {\n    return '[UnexpectedJSONParseError]: ' + err.message;\n  }\n};\n\n\n/**\n * Colorize log arguments if enabled.\n *\n * @api public\n */\n\nfunction formatArgs(args) {\n  var useColors = this.useColors;\n\n  args[0] = (useColors ? '%c' : '')\n    + this.namespace\n    + (useColors ? ' %c' : ' ')\n    + args[0]\n    + (useColors ? '%c ' : ' ')\n    + '+' + exports.humanize(this.diff);\n\n  if (!useColors) return;\n\n  var c = 'color: ' + this.color;\n  args.splice(1, 0, c, 'color: inherit')\n\n  // the final \"%c\" is somewhat tricky, because there could be other\n  // arguments passed either before or after the %c, so we need to\n  // figure out the correct index to insert the CSS into\n  var index = 0;\n  var lastC = 0;\n  args[0].replace(/%[a-zA-Z%]/g, function(match) {\n    if ('%%' === match) return;\n    index++;\n    if ('%c' === match) {\n      // we only are interested in the *last* %c\n      // (the user may have provided their own)\n      lastC = index;\n    }\n  });\n\n  args.splice(lastC, 0, c);\n}\n\n/**\n * Invokes `console.log()` when available.\n * No-op when `console.log` is not a \"function\".\n *\n * @api public\n */\n\nfunction log() {\n  // this hackery is required for IE8/9, where\n  // the `console.log` function doesn't have 'apply'\n  return 'object' === typeof console\n    && console.log\n    && Function.prototype.apply.call(console.log, console, arguments);\n}\n\n/**\n * Save `namespaces`.\n *\n * @param {String} namespaces\n * @api private\n */\n\nfunction save(namespaces) {\n  try {\n    if (null == namespaces) {\n      exports.storage.removeItem('debug');\n    } else {\n      exports.storage.debug = namespaces;\n    }\n  } catch(e) {}\n}\n\n/**\n * Load `namespaces`.\n *\n * @return {String} returns the previously persisted debug modes\n * @api private\n */\n\nfunction load() {\n  var r;\n  try {\n    r = exports.storage.debug;\n  } catch(e) {}\n\n  // If debug isn't set in LS, and we're in Electron, try to load $DEBUG\n  if (!r && typeof process !== 'undefined' && 'env' in process) {\n    r = process.env.DEBUG;\n  }\n\n  return r;\n}\n\n/**\n * Enable namespaces listed in `localStorage.debug` initially.\n */\n\nexports.enable(load());\n\n/**\n * Localstorage attempts to return the localstorage.\n *\n * This is necessary because safari throws\n * when a user disables cookies/localstorage\n * and you attempt to access it.\n *\n * @return {LocalStorage}\n * @api private\n */\n\nfunction localstorage() {\n  try {\n    return window.localStorage;\n  } catch (e) {}\n}\n","\n/**\n * This is the common logic for both the Node.js and web browser\n * implementations of `debug()`.\n *\n * Expose `debug()` as the module.\n */\n\nexports = module.exports = createDebug.debug = createDebug['default'] = createDebug;\nexports.coerce = coerce;\nexports.disable = disable;\nexports.enable = enable;\nexports.enabled = enabled;\nexports.humanize = require('ms');\n\n/**\n * The currently active debug mode names, and names to skip.\n */\n\nexports.names = [];\nexports.skips = [];\n\n/**\n * Map of special \"%n\" handling functions, for the debug \"format\" argument.\n *\n * Valid key names are a single, lower or upper-case letter, i.e. \"n\" and \"N\".\n */\n\nexports.formatters = {};\n\n/**\n * Previous log timestamp.\n */\n\nvar prevTime;\n\n/**\n * Select a color.\n * @param {String} namespace\n * @return {Number}\n * @api private\n */\n\nfunction selectColor(namespace) {\n  var hash = 0, i;\n\n  for (i in namespace) {\n    hash  = ((hash << 5) - hash) + namespace.charCodeAt(i);\n    hash |= 0; // Convert to 32bit integer\n  }\n\n  return exports.colors[Math.abs(hash) % exports.colors.length];\n}\n\n/**\n * Create a debugger with the given `namespace`.\n *\n * @param {String} namespace\n * @return {Function}\n * @api public\n */\n\nfunction createDebug(namespace) {\n\n  function debug() {\n    // disabled?\n    if (!debug.enabled) return;\n\n    var self = debug;\n\n    // set `diff` timestamp\n    var curr = +new Date();\n    var ms = curr - (prevTime || curr);\n    self.diff = ms;\n    self.prev = prevTime;\n    self.curr = curr;\n    prevTime = curr;\n\n    // turn the `arguments` into a proper Array\n    var args = new Array(arguments.length);\n    for (var i = 0; i < args.length; i++) {\n      args[i] = arguments[i];\n    }\n\n    args[0] = exports.coerce(args[0]);\n\n    if ('string' !== typeof args[0]) {\n      // anything else let's inspect with %O\n      args.unshift('%O');\n    }\n\n    // apply any `formatters` transformations\n    var index = 0;\n    args[0] = args[0].replace(/%([a-zA-Z%])/g, function(match, format) {\n      // if we encounter an escaped % then don't increase the array index\n      if (match === '%%') return match;\n      index++;\n      var formatter = exports.formatters[format];\n      if ('function' === typeof formatter) {\n        var val = args[index];\n        match = formatter.call(self, val);\n\n        // now we need to remove `args[index]` since it's inlined in the `format`\n        args.splice(index, 1);\n        index--;\n      }\n      return match;\n    });\n\n    // apply env-specific formatting (colors, etc.)\n    exports.formatArgs.call(self, args);\n\n    var logFn = debug.log || exports.log || console.log.bind(console);\n    logFn.apply(self, args);\n  }\n\n  debug.namespace = namespace;\n  debug.enabled = exports.enabled(namespace);\n  debug.useColors = exports.useColors();\n  debug.color = selectColor(namespace);\n\n  // env-specific initialization logic for debug instances\n  if ('function' === typeof exports.init) {\n    exports.init(debug);\n  }\n\n  return debug;\n}\n\n/**\n * Enables a debug mode by namespaces. This can include modes\n * separated by a colon and wildcards.\n *\n * @param {String} namespaces\n * @api public\n */\n\nfunction enable(namespaces) {\n  exports.save(namespaces);\n\n  exports.names = [];\n  exports.skips = [];\n\n  var split = (typeof namespaces === 'string' ? namespaces : '').split(/[\\s,]+/);\n  var len = split.length;\n\n  for (var i = 0; i < len; i++) {\n    if (!split[i]) continue; // ignore empty strings\n    namespaces = split[i].replace(/\\*/g, '.*?');\n    if (namespaces[0] === '-') {\n      exports.skips.push(new RegExp('^' + namespaces.substr(1) + '$'));\n    } else {\n      exports.names.push(new RegExp('^' + namespaces + '$'));\n    }\n  }\n}\n\n/**\n * Disable debug output.\n *\n * @api public\n */\n\nfunction disable() {\n  exports.enable('');\n}\n\n/**\n * Returns true if the given mode name is enabled, false otherwise.\n *\n * @param {String} name\n * @return {Boolean}\n * @api public\n */\n\nfunction enabled(name) {\n  var i, len;\n  for (i = 0, len = exports.skips.length; i < len; i++) {\n    if (exports.skips[i].test(name)) {\n      return false;\n    }\n  }\n  for (i = 0, len = exports.names.length; i < len; i++) {\n    if (exports.names[i].test(name)) {\n      return true;\n    }\n  }\n  return false;\n}\n\n/**\n * Coerce `val`.\n *\n * @param {Mixed} val\n * @return {Mixed}\n * @api private\n */\n\nfunction coerce(val) {\n  if (val instanceof Error) return val.stack || val.message;\n  return val;\n}\n","/**\n * Detect Electron renderer process, which is node, but we should\n * treat as a browser.\n */\n\nif (typeof process !== 'undefined' && process.type === 'renderer') {\n  module.exports = require('./browser.js');\n} else {\n  module.exports = require('./node.js');\n}\n","/**\n * Module dependencies.\n */\n\nvar tty = require('tty');\nvar util = require('util');\n\n/**\n * This is the Node.js implementation of `debug()`.\n *\n * Expose `debug()` as the module.\n */\n\nexports = module.exports = require('./debug');\nexports.init = init;\nexports.log = log;\nexports.formatArgs = formatArgs;\nexports.save = save;\nexports.load = load;\nexports.useColors = useColors;\n\n/**\n * Colors.\n */\n\nexports.colors = [6, 2, 3, 4, 5, 1];\n\n/**\n * Build up the default `inspectOpts` object from the environment variables.\n *\n *   $ DEBUG_COLORS=no DEBUG_DEPTH=10 DEBUG_SHOW_HIDDEN=enabled node script.js\n */\n\nexports.inspectOpts = Object.keys(process.env).filter(function (key) {\n  return /^debug_/i.test(key);\n}).reduce(function (obj, key) {\n  // camel-case\n  var prop = key\n    .substring(6)\n    .toLowerCase()\n    .replace(/_([a-z])/g, function (_, k) { return k.toUpperCase() });\n\n  // coerce string value into JS value\n  var val = process.env[key];\n  if (/^(yes|on|true|enabled)$/i.test(val)) val = true;\n  else if (/^(no|off|false|disabled)$/i.test(val)) val = false;\n  else if (val === 'null') val = null;\n  else val = Number(val);\n\n  obj[prop] = val;\n  return obj;\n}, {});\n\n/**\n * The file descriptor to write the `debug()` calls to.\n * Set the `DEBUG_FD` env variable to override with another value. i.e.:\n *\n *   $ DEBUG_FD=3 node script.js 3>debug.log\n */\n\nvar fd = parseInt(process.env.DEBUG_FD, 10) || 2;\n\nif (1 !== fd && 2 !== fd) {\n  util.deprecate(function(){}, 'except for stderr(2) and stdout(1), any other usage of DEBUG_FD is deprecated. Override debug.log if you want to use a different log function (https://git.io/debug_fd)')()\n}\n\nvar stream = 1 === fd ? process.stdout :\n             2 === fd ? process.stderr :\n             createWritableStdioStream(fd);\n\n/**\n * Is stdout a TTY? Colored output is enabled when `true`.\n */\n\nfunction useColors() {\n  return 'colors' in exports.inspectOpts\n    ? Boolean(exports.inspectOpts.colors)\n    : tty.isatty(fd);\n}\n\n/**\n * Map %o to `util.inspect()`, all on a single line.\n */\n\nexports.formatters.o = function(v) {\n  this.inspectOpts.colors = this.useColors;\n  return util.inspect(v, this.inspectOpts)\n    .split('\\n').map(function(str) {\n      return str.trim()\n    }).join(' ');\n};\n\n/**\n * Map %o to `util.inspect()`, allowing multiple lines if needed.\n */\n\nexports.formatters.O = function(v) {\n  this.inspectOpts.colors = this.useColors;\n  return util.inspect(v, this.inspectOpts);\n};\n\n/**\n * Adds ANSI color escape codes if enabled.\n *\n * @api public\n */\n\nfunction formatArgs(args) {\n  var name = this.namespace;\n  var useColors = this.useColors;\n\n  if (useColors) {\n    var c = this.color;\n    var prefix = '  \\u001b[3' + c + ';1m' + name + ' ' + '\\u001b[0m';\n\n    args[0] = prefix + args[0].split('\\n').join('\\n' + prefix);\n    args.push('\\u001b[3' + c + 'm+' + exports.humanize(this.diff) + '\\u001b[0m');\n  } else {\n    args[0] = new Date().toUTCString()\n      + ' ' + name + ' ' + args[0];\n  }\n}\n\n/**\n * Invokes `util.format()` with the specified arguments and writes to `stream`.\n */\n\nfunction log() {\n  return stream.write(util.format.apply(util, arguments) + '\\n');\n}\n\n/**\n * Save `namespaces`.\n *\n * @param {String} namespaces\n * @api private\n */\n\nfunction save(namespaces) {\n  if (null == namespaces) {\n    // If you set a process.env field to null or undefined, it gets cast to the\n    // string 'null' or 'undefined'. Just delete instead.\n    delete process.env.DEBUG;\n  } else {\n    process.env.DEBUG = namespaces;\n  }\n}\n\n/**\n * Load `namespaces`.\n *\n * @return {String} returns the previously persisted debug modes\n * @api private\n */\n\nfunction load() {\n  return process.env.DEBUG;\n}\n\n/**\n * Copied from `node/src/node.js`.\n *\n * XXX: It's lame that node doesn't expose this API out-of-the-box. It also\n * relies on the undocumented `tty_wrap.guessHandleType()` which is also lame.\n */\n\nfunction createWritableStdioStream (fd) {\n  var stream;\n  var tty_wrap = process.binding('tty_wrap');\n\n  // Note stream._type is used for test-module-load-list.js\n\n  switch (tty_wrap.guessHandleType(fd)) {\n    case 'TTY':\n      stream = new tty.WriteStream(fd);\n      stream._type = 'tty';\n\n      // Hack to have stream not keep the event loop alive.\n      // See https://github.com/joyent/node/issues/1726\n      if (stream._handle && stream._handle.unref) {\n        stream._handle.unref();\n      }\n      break;\n\n    case 'FILE':\n      var fs = require('fs');\n      stream = new fs.SyncWriteStream(fd, { autoClose: false });\n      stream._type = 'fs';\n      break;\n\n    case 'PIPE':\n    case 'TCP':\n      var net = require('net');\n      stream = new net.Socket({\n        fd: fd,\n        readable: false,\n        writable: true\n      });\n\n      // FIXME Should probably have an option in net.Socket to create a\n      // stream from an existing fd which is writable only. But for now\n      // we'll just add this hack and set the `readable` member to false.\n      // Test: ./node test/fixtures/echo.js < /etc/passwd\n      stream.readable = false;\n      stream.read = null;\n      stream._type = 'pipe';\n\n      // FIXME Hack to have stream not keep the event loop alive.\n      // See https://github.com/joyent/node/issues/1726\n      if (stream._handle && stream._handle.unref) {\n        stream._handle.unref();\n      }\n      break;\n\n    default:\n      // Probably an error on in uv_guess_handle()\n      throw new Error('Implement me. Unknown stream file type!');\n  }\n\n  // For supporting legacy API we put the FD here.\n  stream.fd = fd;\n\n  stream._isStdio = true;\n\n  return stream;\n}\n\n/**\n * Init logic for `debug` instances.\n *\n * Create a new `inspectOpts` object in case `useColors` is set\n * differently for a particular `debug` instance.\n */\n\nfunction init (debug) {\n  debug.inspectOpts = {};\n\n  var keys = Object.keys(exports.inspectOpts);\n  for (var i = 0; i < keys.length; i++) {\n    debug.inspectOpts[keys[i]] = exports.inspectOpts[keys[i]];\n  }\n}\n\n/**\n * Enable namespaces listed in `process.env.DEBUG` initially.\n */\n\nexports.enable(load());\n","/**\n * Helpers.\n */\n\nvar s = 1000;\nvar m = s * 60;\nvar h = m * 60;\nvar d = h * 24;\nvar w = d * 7;\nvar y = d * 365.25;\n\n/**\n * Parse or format the given `val`.\n *\n * Options:\n *\n *  - `long` verbose formatting [false]\n *\n * @param {String|Number} val\n * @param {Object} [options]\n * @throws {Error} throw an error if val is not a non-empty string or a number\n * @return {String|Number}\n * @api public\n */\n\nmodule.exports = function (val, options) {\n  options = options || {};\n  var type = typeof val;\n  if (type === 'string' && val.length > 0) {\n    return parse(val);\n  } else if (type === 'number' && isFinite(val)) {\n    return options.long ? fmtLong(val) : fmtShort(val);\n  }\n  throw new Error(\n    'val is not a non-empty string or a valid number. val=' +\n      JSON.stringify(val)\n  );\n};\n\n/**\n * Parse the given `str` and return milliseconds.\n *\n * @param {String} str\n * @return {Number}\n * @api private\n */\n\nfunction parse(str) {\n  str = String(str);\n  if (str.length > 100) {\n    return;\n  }\n  var match = /^(-?(?:\\d+)?\\.?\\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|years?|yrs?|y)?$/i.exec(\n    str\n  );\n  if (!match) {\n    return;\n  }\n  var n = parseFloat(match[1]);\n  var type = (match[2] || 'ms').toLowerCase();\n  switch (type) {\n    case 'years':\n    case 'year':\n    case 'yrs':\n    case 'yr':\n    case 'y':\n      return n * y;\n    case 'weeks':\n    case 'week':\n    case 'w':\n      return n * w;\n    case 'days':\n    case 'day':\n    case 'd':\n      return n * d;\n    case 'hours':\n    case 'hour':\n    case 'hrs':\n    case 'hr':\n    case 'h':\n      return n * h;\n    case 'minutes':\n    case 'minute':\n    case 'mins':\n    case 'min':\n    case 'm':\n      return n * m;\n    case 'seconds':\n    case 'second':\n    case 'secs':\n    case 'sec':\n    case 's':\n      return n * s;\n    case 'milliseconds':\n    case 'millisecond':\n    case 'msecs':\n    case 'msec':\n    case 'ms':\n      return n;\n    default:\n      return undefined;\n  }\n}\n\n/**\n * Short format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtShort(ms) {\n  var msAbs = Math.abs(ms);\n  if (msAbs >= d) {\n    return Math.round(ms / d) + 'd';\n  }\n  if (msAbs >= h) {\n    return Math.round(ms / h) + 'h';\n  }\n  if (msAbs >= m) {\n    return Math.round(ms / m) + 'm';\n  }\n  if (msAbs >= s) {\n    return Math.round(ms / s) + 's';\n  }\n  return ms + 'ms';\n}\n\n/**\n * Long format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtLong(ms) {\n  var msAbs = Math.abs(ms);\n  if (msAbs >= d) {\n    return plural(ms, msAbs, d, 'day');\n  }\n  if (msAbs >= h) {\n    return plural(ms, msAbs, h, 'hour');\n  }\n  if (msAbs >= m) {\n    return plural(ms, msAbs, m, 'minute');\n  }\n  if (msAbs >= s) {\n    return plural(ms, msAbs, s, 'second');\n  }\n  return ms + ' ms';\n}\n\n/**\n * Pluralization helper.\n */\n\nfunction plural(ms, msAbs, n, name) {\n  var isPlural = msAbs >= n * 1.5;\n  return Math.round(ms / n) + ' ' + name + (isPlural ? 's' : '');\n}\n","/*!\n * serve-static\n * Copyright(c) 2010 Sencha Inc.\n * Copyright(c) 2011 TJ Holowaychuk\n * Copyright(c) 2014-2016 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * Module dependencies.\n * @private\n */\n\nvar encodeUrl = require('encodeurl')\nvar escapeHtml = require('escape-html')\nvar parseUrl = require('parseurl')\nvar resolve = require('path').resolve\nvar send = require('send')\nvar url = require('url')\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = serveStatic\nmodule.exports.mime = send.mime\n\n/**\n * @param {string} root\n * @param {object} [options]\n * @return {function}\n * @public\n */\n\nfunction serveStatic (root, options) {\n  if (!root) {\n    throw new TypeError('root path required')\n  }\n\n  if (typeof root !== 'string') {\n    throw new TypeError('root path must be a string')\n  }\n\n  // copy options object\n  var opts = Object.create(options || null)\n\n  // fall-though\n  var fallthrough = opts.fallthrough !== false\n\n  // default redirect\n  var redirect = opts.redirect !== false\n\n  // headers listener\n  var setHeaders = opts.setHeaders\n\n  if (setHeaders && typeof setHeaders !== 'function') {\n    throw new TypeError('option setHeaders must be function')\n  }\n\n  // setup options for send\n  opts.maxage = opts.maxage || opts.maxAge || 0\n  opts.root = resolve(root)\n\n  // construct directory listener\n  var onDirectory = redirect\n    ? createRedirectDirectoryListener()\n    : createNotFoundDirectoryListener()\n\n  return function serveStatic (req, res, next) {\n    if (req.method !== 'GET' && req.method !== 'HEAD') {\n      if (fallthrough) {\n        return next()\n      }\n\n      // method not allowed\n      res.statusCode = 405\n      res.setHeader('Allow', 'GET, HEAD')\n      res.setHeader('Content-Length', '0')\n      res.end()\n      return\n    }\n\n    var forwardError = !fallthrough\n    var originalUrl = parseUrl.original(req)\n    var path = parseUrl(req).pathname\n\n    // make sure redirect occurs at mount\n    if (path === '/' && originalUrl.pathname.substr(-1) !== '/') {\n      path = ''\n    }\n\n    // create send stream\n    var stream = send(req, path, opts)\n\n    // add directory handler\n    stream.on('directory', onDirectory)\n\n    // add headers listener\n    if (setHeaders) {\n      stream.on('headers', setHeaders)\n    }\n\n    // add file listener for fallthrough\n    if (fallthrough) {\n      stream.on('file', function onFile () {\n        // once file is determined, always forward error\n        forwardError = true\n      })\n    }\n\n    // forward errors\n    stream.on('error', function error (err) {\n      if (forwardError || !(err.statusCode < 500)) {\n        next(err)\n        return\n      }\n\n      next()\n    })\n\n    // pipe\n    stream.pipe(res)\n  }\n}\n\n/**\n * Collapse all leading slashes into a single slash\n * @private\n */\nfunction collapseLeadingSlashes (str) {\n  for (var i = 0; i < str.length; i++) {\n    if (str.charCodeAt(i) !== 0x2f /* / */) {\n      break\n    }\n  }\n\n  return i > 1\n    ? '/' + str.substr(i)\n    : str\n}\n\n/**\n * Create a minimal HTML document.\n *\n * @param {string} title\n * @param {string} body\n * @private\n */\n\nfunction createHtmlDocument (title, body) {\n  return '<!DOCTYPE html>\\n' +\n    '<html lang=\"en\">\\n' +\n    '<head>\\n' +\n    '<meta charset=\"utf-8\">\\n' +\n    '<title>' + title + '</title>\\n' +\n    '</head>\\n' +\n    '<body>\\n' +\n    '<pre>' + body + '</pre>\\n' +\n    '</body>\\n' +\n    '</html>\\n'\n}\n\n/**\n * Create a directory listener that just 404s.\n * @private\n */\n\nfunction createNotFoundDirectoryListener () {\n  return function notFound () {\n    this.error(404)\n  }\n}\n\n/**\n * Create a directory listener that performs a redirect.\n * @private\n */\n\nfunction createRedirectDirectoryListener () {\n  return function redirect (res) {\n    if (this.hasTrailingSlash()) {\n      this.error(404)\n      return\n    }\n\n    // get original URL\n    var originalUrl = parseUrl.original(this.req)\n\n    // append trailing slash\n    originalUrl.path = null\n    originalUrl.pathname = collapseLeadingSlashes(originalUrl.pathname + '/')\n\n    // reformat the URL\n    var loc = encodeUrl(url.format(originalUrl))\n    var doc = createHtmlDocument('Redirecting', 'Redirecting to <a href=\"' + escapeHtml(loc) + '\">' +\n      escapeHtml(loc) + '</a>')\n\n    // send redirect response\n    res.statusCode = 301\n    res.setHeader('Content-Type', 'text/html; charset=UTF-8')\n    res.setHeader('Content-Length', Buffer.byteLength(doc))\n    res.setHeader('Content-Security-Policy', \"default-src 'none'\")\n    res.setHeader('X-Content-Type-Options', 'nosniff')\n    res.setHeader('Location', loc)\n    res.end(doc)\n  }\n}\n","'use strict'\n/* eslint no-proto: 0 */\nmodule.exports = Object.setPrototypeOf || ({ __proto__: [] } instanceof Array ? setProtoOf : mixinProperties)\n\nfunction setProtoOf (obj, proto) {\n  obj.__proto__ = proto\n  return obj\n}\n\nfunction mixinProperties (obj, proto) {\n  for (var prop in proto) {\n    if (!Object.prototype.hasOwnProperty.call(obj, prop)) {\n      obj[prop] = proto[prop]\n    }\n  }\n  return obj\n}\n","'use strict';\n\nvar GetIntrinsic = require('get-intrinsic');\nvar callBound = require('call-bind/callBound');\nvar inspect = require('object-inspect');\n\nvar $TypeError = GetIntrinsic('%TypeError%');\nvar $WeakMap = GetIntrinsic('%WeakMap%', true);\nvar $Map = GetIntrinsic('%Map%', true);\n\nvar $weakMapGet = callBound('WeakMap.prototype.get', true);\nvar $weakMapSet = callBound('WeakMap.prototype.set', true);\nvar $weakMapHas = callBound('WeakMap.prototype.has', true);\nvar $mapGet = callBound('Map.prototype.get', true);\nvar $mapSet = callBound('Map.prototype.set', true);\nvar $mapHas = callBound('Map.prototype.has', true);\n\n/*\n * This function traverses the list returning the node corresponding to the\n * given key.\n *\n * That node is also moved to the head of the list, so that if it's accessed\n * again we don't need to traverse the whole list. By doing so, all the recently\n * used nodes can be accessed relatively quickly.\n */\nvar listGetNode = function (list, key) { // eslint-disable-line consistent-return\n\tfor (var prev = list, curr; (curr = prev.next) !== null; prev = curr) {\n\t\tif (curr.key === key) {\n\t\t\tprev.next = curr.next;\n\t\t\tcurr.next = list.next;\n\t\t\tlist.next = curr; // eslint-disable-line no-param-reassign\n\t\t\treturn curr;\n\t\t}\n\t}\n};\n\nvar listGet = function (objects, key) {\n\tvar node = listGetNode(objects, key);\n\treturn node && node.value;\n};\nvar listSet = function (objects, key, value) {\n\tvar node = listGetNode(objects, key);\n\tif (node) {\n\t\tnode.value = value;\n\t} else {\n\t\t// Prepend the new node to the beginning of the list\n\t\tobjects.next = { // eslint-disable-line no-param-reassign\n\t\t\tkey: key,\n\t\t\tnext: objects.next,\n\t\t\tvalue: value\n\t\t};\n\t}\n};\nvar listHas = function (objects, key) {\n\treturn !!listGetNode(objects, key);\n};\n\nmodule.exports = function getSideChannel() {\n\tvar $wm;\n\tvar $m;\n\tvar $o;\n\tvar channel = {\n\t\tassert: function (key) {\n\t\t\tif (!channel.has(key)) {\n\t\t\t\tthrow new $TypeError('Side channel does not contain ' + inspect(key));\n\t\t\t}\n\t\t},\n\t\tget: function (key) { // eslint-disable-line consistent-return\n\t\t\tif ($WeakMap && key && (typeof key === 'object' || typeof key === 'function')) {\n\t\t\t\tif ($wm) {\n\t\t\t\t\treturn $weakMapGet($wm, key);\n\t\t\t\t}\n\t\t\t} else if ($Map) {\n\t\t\t\tif ($m) {\n\t\t\t\t\treturn $mapGet($m, key);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif ($o) { // eslint-disable-line no-lonely-if\n\t\t\t\t\treturn listGet($o, key);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\thas: function (key) {\n\t\t\tif ($WeakMap && key && (typeof key === 'object' || typeof key === 'function')) {\n\t\t\t\tif ($wm) {\n\t\t\t\t\treturn $weakMapHas($wm, key);\n\t\t\t\t}\n\t\t\t} else if ($Map) {\n\t\t\t\tif ($m) {\n\t\t\t\t\treturn $mapHas($m, key);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif ($o) { // eslint-disable-line no-lonely-if\n\t\t\t\t\treturn listHas($o, key);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn false;\n\t\t},\n\t\tset: function (key, value) {\n\t\t\tif ($WeakMap && key && (typeof key === 'object' || typeof key === 'function')) {\n\t\t\t\tif (!$wm) {\n\t\t\t\t\t$wm = new $WeakMap();\n\t\t\t\t}\n\t\t\t\t$weakMapSet($wm, key, value);\n\t\t\t} else if ($Map) {\n\t\t\t\tif (!$m) {\n\t\t\t\t\t$m = new $Map();\n\t\t\t\t}\n\t\t\t\t$mapSet($m, key, value);\n\t\t\t} else {\n\t\t\t\tif (!$o) {\n\t\t\t\t\t/*\n\t\t\t\t\t * Initialize the linked list as an empty node, so that we don't have\n\t\t\t\t\t * to special-case handling of the first node: we can always refer to\n\t\t\t\t\t * it as (previous node).next, instead of something like (list).head\n\t\t\t\t\t */\n\t\t\t\t\t$o = { key: {}, next: null };\n\t\t\t\t}\n\t\t\t\tlistSet($o, key, value);\n\t\t\t}\n\t\t}\n\t};\n\treturn channel;\n};\n","/*!\n * statuses\n * Copyright(c) 2014 Jonathan Ong\n * Copyright(c) 2016 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * Module dependencies.\n * @private\n */\n\nvar codes = require('./codes.json')\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = status\n\n// status code to message map\nstatus.message = codes\n\n// status message (lower-case) to code map\nstatus.code = createMessageToStatusCodeMap(codes)\n\n// array of status codes\nstatus.codes = createStatusCodeList(codes)\n\n// status codes for redirects\nstatus.redirect = {\n  300: true,\n  301: true,\n  302: true,\n  303: true,\n  305: true,\n  307: true,\n  308: true\n}\n\n// status codes for empty bodies\nstatus.empty = {\n  204: true,\n  205: true,\n  304: true\n}\n\n// status codes for when you should retry the request\nstatus.retry = {\n  502: true,\n  503: true,\n  504: true\n}\n\n/**\n * Create a map of message to status code.\n * @private\n */\n\nfunction createMessageToStatusCodeMap (codes) {\n  var map = {}\n\n  Object.keys(codes).forEach(function forEachCode (code) {\n    var message = codes[code]\n    var status = Number(code)\n\n    // populate map\n    map[message.toLowerCase()] = status\n  })\n\n  return map\n}\n\n/**\n * Create a list of all status codes.\n * @private\n */\n\nfunction createStatusCodeList (codes) {\n  return Object.keys(codes).map(function mapCode (code) {\n    return Number(code)\n  })\n}\n\n/**\n * Get the status code for given message.\n * @private\n */\n\nfunction getStatusCode (message) {\n  var msg = message.toLowerCase()\n\n  if (!Object.prototype.hasOwnProperty.call(status.code, msg)) {\n    throw new Error('invalid status message: \"' + message + '\"')\n  }\n\n  return status.code[msg]\n}\n\n/**\n * Get the status message for given code.\n * @private\n */\n\nfunction getStatusMessage (code) {\n  if (!Object.prototype.hasOwnProperty.call(status.message, code)) {\n    throw new Error('invalid status code: ' + code)\n  }\n\n  return status.message[code]\n}\n\n/**\n * Get the status code.\n *\n * Given a number, this will throw if it is not a known status\n * code, otherwise the code will be returned. Given a string,\n * the string will be parsed for a number and return the code\n * if valid, otherwise will lookup the code assuming this is\n * the status message.\n *\n * @param {string|number} code\n * @returns {number}\n * @public\n */\n\nfunction status (code) {\n  if (typeof code === 'number') {\n    return getStatusMessage(code)\n  }\n\n  if (typeof code !== 'string') {\n    throw new TypeError('code must be a number or string')\n  }\n\n  // '403'\n  var n = parseInt(code, 10)\n  if (!isNaN(n)) {\n    return getStatusMessage(n)\n  }\n\n  return getStatusCode(code)\n}\n","/*!\n * toidentifier\n * Copyright(c) 2016 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = toIdentifier\n\n/**\n * Trasform the given string into a JavaScript identifier\n *\n * @param {string} str\n * @returns {string}\n * @public\n */\n\nfunction toIdentifier (str) {\n  return str\n    .split(' ')\n    .map(function (token) {\n      return token.slice(0, 1).toUpperCase() + token.slice(1)\n    })\n    .join('')\n    .replace(/[^ _0-9a-z]/gi, '')\n}\n","/*!\n * type-is\n * Copyright(c) 2014 Jonathan Ong\n * Copyright(c) 2014-2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * Module dependencies.\n * @private\n */\n\nvar typer = require('media-typer')\nvar mime = require('mime-types')\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = typeofrequest\nmodule.exports.is = typeis\nmodule.exports.hasBody = hasbody\nmodule.exports.normalize = normalize\nmodule.exports.match = mimeMatch\n\n/**\n * Compare a `value` content-type with `types`.\n * Each `type` can be an extension like `html`,\n * a special shortcut like `multipart` or `urlencoded`,\n * or a mime type.\n *\n * If no types match, `false` is returned.\n * Otherwise, the first `type` that matches is returned.\n *\n * @param {String} value\n * @param {Array} types\n * @public\n */\n\nfunction typeis (value, types_) {\n  var i\n  var types = types_\n\n  // remove parameters and normalize\n  var val = tryNormalizeType(value)\n\n  // no type or invalid\n  if (!val) {\n    return false\n  }\n\n  // support flattened arguments\n  if (types && !Array.isArray(types)) {\n    types = new Array(arguments.length - 1)\n    for (i = 0; i < types.length; i++) {\n      types[i] = arguments[i + 1]\n    }\n  }\n\n  // no types, return the content type\n  if (!types || !types.length) {\n    return val\n  }\n\n  var type\n  for (i = 0; i < types.length; i++) {\n    if (mimeMatch(normalize(type = types[i]), val)) {\n      return type[0] === '+' || type.indexOf('*') !== -1\n        ? val\n        : type\n    }\n  }\n\n  // no matches\n  return false\n}\n\n/**\n * Check if a request has a request body.\n * A request with a body __must__ either have `transfer-encoding`\n * or `content-length` headers set.\n * http://www.w3.org/Protocols/rfc2616/rfc2616-sec4.html#sec4.3\n *\n * @param {Object} request\n * @return {Boolean}\n * @public\n */\n\nfunction hasbody (req) {\n  return req.headers['transfer-encoding'] !== undefined ||\n    !isNaN(req.headers['content-length'])\n}\n\n/**\n * Check if the incoming request contains the \"Content-Type\"\n * header field, and it contains any of the give mime `type`s.\n * If there is no request body, `null` is returned.\n * If there is no content type, `false` is returned.\n * Otherwise, it returns the first `type` that matches.\n *\n * Examples:\n *\n *     // With Content-Type: text/html; charset=utf-8\n *     this.is('html'); // => 'html'\n *     this.is('text/html'); // => 'text/html'\n *     this.is('text/*', 'application/json'); // => 'text/html'\n *\n *     // When Content-Type is application/json\n *     this.is('json', 'urlencoded'); // => 'json'\n *     this.is('application/json'); // => 'application/json'\n *     this.is('html', 'application/*'); // => 'application/json'\n *\n *     this.is('html'); // => false\n *\n * @param {String|Array} types...\n * @return {String|false|null}\n * @public\n */\n\nfunction typeofrequest (req, types_) {\n  var types = types_\n\n  // no body\n  if (!hasbody(req)) {\n    return null\n  }\n\n  // support flattened arguments\n  if (arguments.length > 2) {\n    types = new Array(arguments.length - 1)\n    for (var i = 0; i < types.length; i++) {\n      types[i] = arguments[i + 1]\n    }\n  }\n\n  // request content type\n  var value = req.headers['content-type']\n\n  return typeis(value, types)\n}\n\n/**\n * Normalize a mime type.\n * If it's a shorthand, expand it to a valid mime type.\n *\n * In general, you probably want:\n *\n *   var type = is(req, ['urlencoded', 'json', 'multipart']);\n *\n * Then use the appropriate body parsers.\n * These three are the most common request body types\n * and are thus ensured to work.\n *\n * @param {String} type\n * @private\n */\n\nfunction normalize (type) {\n  if (typeof type !== 'string') {\n    // invalid type\n    return false\n  }\n\n  switch (type) {\n    case 'urlencoded':\n      return 'application/x-www-form-urlencoded'\n    case 'multipart':\n      return 'multipart/*'\n  }\n\n  if (type[0] === '+') {\n    // \"+json\" -> \"*/*+json\" expando\n    return '*/*' + type\n  }\n\n  return type.indexOf('/') === -1\n    ? mime.lookup(type)\n    : type\n}\n\n/**\n * Check if `expected` mime type\n * matches `actual` mime type with\n * wildcard and +suffix support.\n *\n * @param {String} expected\n * @param {String} actual\n * @return {Boolean}\n * @private\n */\n\nfunction mimeMatch (expected, actual) {\n  // invalid type\n  if (expected === false) {\n    return false\n  }\n\n  // split types\n  var actualParts = actual.split('/')\n  var expectedParts = expected.split('/')\n\n  // invalid format\n  if (actualParts.length !== 2 || expectedParts.length !== 2) {\n    return false\n  }\n\n  // validate type\n  if (expectedParts[0] !== '*' && expectedParts[0] !== actualParts[0]) {\n    return false\n  }\n\n  // validate suffix wildcard\n  if (expectedParts[1].substr(0, 2) === '*+') {\n    return expectedParts[1].length <= actualParts[1].length + 1 &&\n      expectedParts[1].substr(1) === actualParts[1].substr(1 - expectedParts[1].length)\n  }\n\n  // validate subtype\n  if (expectedParts[1] !== '*' && expectedParts[1] !== actualParts[1]) {\n    return false\n  }\n\n  return true\n}\n\n/**\n * Normalize a type and remove parameters.\n *\n * @param {string} value\n * @return {string}\n * @private\n */\n\nfunction normalizeType (value) {\n  // parse the type\n  var type = typer.parse(value)\n\n  // remove the parameters\n  type.parameters = undefined\n\n  // reformat it\n  return typer.format(type)\n}\n\n/**\n * Try to normalize a type and remove parameters.\n *\n * @param {string} value\n * @return {string}\n * @private\n */\n\nfunction tryNormalizeType (value) {\n  if (!value) {\n    return null\n  }\n\n  try {\n    return normalizeType(value)\n  } catch (err) {\n    return null\n  }\n}\n","/*!\n * unpipe\n * Copyright(c) 2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = unpipe\n\n/**\n * Determine if there are Node.js pipe-like data listeners.\n * @private\n */\n\nfunction hasPipeDataListeners(stream) {\n  var listeners = stream.listeners('data')\n\n  for (var i = 0; i < listeners.length; i++) {\n    if (listeners[i].name === 'ondata') {\n      return true\n    }\n  }\n\n  return false\n}\n\n/**\n * Unpipe a stream from all destinations.\n *\n * @param {object} stream\n * @public\n */\n\nfunction unpipe(stream) {\n  if (!stream) {\n    throw new TypeError('argument stream is required')\n  }\n\n  if (typeof stream.unpipe === 'function') {\n    // new-style\n    stream.unpipe()\n    return\n  }\n\n  // Node.js 0.8 hack\n  if (!hasPipeDataListeners(stream)) {\n    return\n  }\n\n  var listener\n  var listeners = stream.listeners('close')\n\n  for (var i = 0; i < listeners.length; i++) {\n    listener = listeners[i]\n\n    if (listener.name !== 'cleanup' && listener.name !== 'onclose') {\n      continue\n    }\n\n    // invoke the listener\n    listener.call(stream)\n  }\n}\n","'use strict';\n\n/**\n * Checks if a given buffer contains only correct UTF-8.\n * Ported from https://www.cl.cam.ac.uk/%7Emgk25/ucs/utf8_check.c by\n * Markus Kuhn.\n *\n * @param {Buffer} buf The buffer to check\n * @return {Boolean} `true` if `buf` contains only correct UTF-8, else `false`\n * @public\n */\nfunction isValidUTF8(buf) {\n  const len = buf.length;\n  let i = 0;\n\n  while (i < len) {\n    if ((buf[i] & 0x80) === 0x00) {  // 0xxxxxxx\n      i++;\n    } else if ((buf[i] & 0xe0) === 0xc0) {  // 110xxxxx 10xxxxxx\n      if (\n        i + 1 === len ||\n        (buf[i + 1] & 0xc0) !== 0x80 ||\n        (buf[i] & 0xfe) === 0xc0  // overlong\n      ) {\n        return false;\n      }\n\n      i += 2;\n    } else if ((buf[i] & 0xf0) === 0xe0) {  // 1110xxxx 10xxxxxx 10xxxxxx\n      if (\n        i + 2 >= len ||\n        (buf[i + 1] & 0xc0) !== 0x80 ||\n        (buf[i + 2] & 0xc0) !== 0x80 ||\n        buf[i] === 0xe0 && (buf[i + 1] & 0xe0) === 0x80 ||  // overlong\n        buf[i] === 0xed && (buf[i + 1] & 0xe0) === 0xa0  // surrogate (U+D800 - U+DFFF)\n      ) {\n        return false;\n      }\n\n      i += 3;\n    } else if ((buf[i] & 0xf8) === 0xf0) {  // 11110xxx 10xxxxxx 10xxxxxx 10xxxxxx\n      if (\n        i + 3 >= len ||\n        (buf[i + 1] & 0xc0) !== 0x80 ||\n        (buf[i + 2] & 0xc0) !== 0x80 ||\n        (buf[i + 3] & 0xc0) !== 0x80 ||\n        buf[i] === 0xf0 && (buf[i + 1] & 0xf0) === 0x80 ||  // overlong\n        buf[i] === 0xf4 && buf[i + 1] > 0x8f || buf[i] > 0xf4  // > U+10FFFF\n      ) {\n        return false;\n      }\n\n      i += 4;\n    } else {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nmodule.exports = isValidUTF8;\n","'use strict';\n\ntry {\n  module.exports = require('node-gyp-build')(__dirname);\n} catch (e) {\n  module.exports = require('./fallback');\n}\n","/**\n * Merge object b with object a.\n *\n *     var a = { foo: 'bar' }\n *       , b = { bar: 'baz' };\n *\n *     merge(a, b);\n *     // => { foo: 'bar', bar: 'baz' }\n *\n * @param {Object} a\n * @param {Object} b\n * @return {Object}\n * @api public\n */\n\nexports = module.exports = function(a, b){\n  if (a && b) {\n    for (var key in b) {\n      a[key] = b[key];\n    }\n  }\n  return a;\n};\n","/*!\n * vary\n * Copyright(c) 2014-2017 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * Module exports.\n */\n\nmodule.exports = vary\nmodule.exports.append = append\n\n/**\n * RegExp to match field-name in RFC 7230 sec 3.2\n *\n * field-name    = token\n * token         = 1*tchar\n * tchar         = \"!\" / \"#\" / \"$\" / \"%\" / \"&\" / \"'\" / \"*\"\n *               / \"+\" / \"-\" / \".\" / \"^\" / \"_\" / \"`\" / \"|\" / \"~\"\n *               / DIGIT / ALPHA\n *               ; any VCHAR, except delimiters\n */\n\nvar FIELD_NAME_REGEXP = /^[!#$%&'*+\\-.^_`|~0-9A-Za-z]+$/\n\n/**\n * Append a field to a vary header.\n *\n * @param {String} header\n * @param {String|Array} field\n * @return {String}\n * @public\n */\n\nfunction append (header, field) {\n  if (typeof header !== 'string') {\n    throw new TypeError('header argument is required')\n  }\n\n  if (!field) {\n    throw new TypeError('field argument is required')\n  }\n\n  // get fields array\n  var fields = !Array.isArray(field)\n    ? parse(String(field))\n    : field\n\n  // assert on invalid field names\n  for (var j = 0; j < fields.length; j++) {\n    if (!FIELD_NAME_REGEXP.test(fields[j])) {\n      throw new TypeError('field argument contains an invalid header name')\n    }\n  }\n\n  // existing, unspecified vary\n  if (header === '*') {\n    return header\n  }\n\n  // enumerate current values\n  var val = header\n  var vals = parse(header.toLowerCase())\n\n  // unspecified vary\n  if (fields.indexOf('*') !== -1 || vals.indexOf('*') !== -1) {\n    return '*'\n  }\n\n  for (var i = 0; i < fields.length; i++) {\n    var fld = fields[i].toLowerCase()\n\n    // append value (case-preserving)\n    if (vals.indexOf(fld) === -1) {\n      vals.push(fld)\n      val = val\n        ? val + ', ' + fields[i]\n        : fields[i]\n    }\n  }\n\n  return val\n}\n\n/**\n * Parse a vary header into an array.\n *\n * @param {String} header\n * @return {Array}\n * @private\n */\n\nfunction parse (header) {\n  var end = 0\n  var list = []\n  var start = 0\n\n  // gather tokens\n  for (var i = 0, len = header.length; i < len; i++) {\n    switch (header.charCodeAt(i)) {\n      case 0x20: /*   */\n        if (start === end) {\n          start = end = i + 1\n        }\n        break\n      case 0x2c: /* , */\n        list.push(header.substring(start, end))\n        start = end = i + 1\n        break\n      default:\n        end = i + 1\n        break\n    }\n  }\n\n  // final token\n  list.push(header.substring(start, end))\n\n  return list\n}\n\n/**\n * Mark that a request is varied on a header field.\n *\n * @param {Object} res\n * @param {String|Array} field\n * @public\n */\n\nfunction vary (res, field) {\n  if (!res || !res.getHeader || !res.setHeader) {\n    // quack quack\n    throw new TypeError('res argument is required')\n  }\n\n  // get existing header\n  var val = res.getHeader('Vary') || ''\n  var header = Array.isArray(val)\n    ? val.join(', ')\n    : String(val)\n\n  // set new header\n  if ((val = append(header, field))) {\n    res.setHeader('Vary', val)\n  }\n}\n","'use strict';\n\nconst WebSocket = require('./lib/websocket');\n\nWebSocket.createWebSocketStream = require('./lib/stream');\nWebSocket.Server = require('./lib/websocket-server');\nWebSocket.Receiver = require('./lib/receiver');\nWebSocket.Sender = require('./lib/sender');\n\nWebSocket.WebSocket = WebSocket;\nWebSocket.WebSocketServer = WebSocket.Server;\n\nmodule.exports = WebSocket;\n","'use strict';\n\nconst { EMPTY_BUFFER } = require('./constants');\n\n/**\n * Merges an array of buffers into a new buffer.\n *\n * @param {Buffer[]} list The array of buffers to concat\n * @param {Number} totalLength The total length of buffers in the list\n * @return {Buffer} The resulting buffer\n * @public\n */\nfunction concat(list, totalLength) {\n  if (list.length === 0) return EMPTY_BUFFER;\n  if (list.length === 1) return list[0];\n\n  const target = Buffer.allocUnsafe(totalLength);\n  let offset = 0;\n\n  for (let i = 0; i < list.length; i++) {\n    const buf = list[i];\n    target.set(buf, offset);\n    offset += buf.length;\n  }\n\n  if (offset < totalLength) return target.slice(0, offset);\n\n  return target;\n}\n\n/**\n * Masks a buffer using the given mask.\n *\n * @param {Buffer} source The buffer to mask\n * @param {Buffer} mask The mask to use\n * @param {Buffer} output The buffer where to store the result\n * @param {Number} offset The offset at which to start writing\n * @param {Number} length The number of bytes to mask.\n * @public\n */\nfunction _mask(source, mask, output, offset, length) {\n  for (let i = 0; i < length; i++) {\n    output[offset + i] = source[i] ^ mask[i & 3];\n  }\n}\n\n/**\n * Unmasks a buffer using the given mask.\n *\n * @param {Buffer} buffer The buffer to unmask\n * @param {Buffer} mask The mask to use\n * @public\n */\nfunction _unmask(buffer, mask) {\n  for (let i = 0; i < buffer.length; i++) {\n    buffer[i] ^= mask[i & 3];\n  }\n}\n\n/**\n * Converts a buffer to an `ArrayBuffer`.\n *\n * @param {Buffer} buf The buffer to convert\n * @return {ArrayBuffer} Converted buffer\n * @public\n */\nfunction toArrayBuffer(buf) {\n  if (buf.byteLength === buf.buffer.byteLength) {\n    return buf.buffer;\n  }\n\n  return buf.buffer.slice(buf.byteOffset, buf.byteOffset + buf.byteLength);\n}\n\n/**\n * Converts `data` to a `Buffer`.\n *\n * @param {*} data The data to convert\n * @return {Buffer} The buffer\n * @throws {TypeError}\n * @public\n */\nfunction toBuffer(data) {\n  toBuffer.readOnly = true;\n\n  if (Buffer.isBuffer(data)) return data;\n\n  let buf;\n\n  if (data instanceof ArrayBuffer) {\n    buf = Buffer.from(data);\n  } else if (ArrayBuffer.isView(data)) {\n    buf = Buffer.from(data.buffer, data.byteOffset, data.byteLength);\n  } else {\n    buf = Buffer.from(data);\n    toBuffer.readOnly = false;\n  }\n\n  return buf;\n}\n\nmodule.exports = {\n  concat,\n  mask: _mask,\n  toArrayBuffer,\n  toBuffer,\n  unmask: _unmask\n};\n\n/* istanbul ignore else  */\nif (!process.env.WS_NO_BUFFER_UTIL) {\n  try {\n    const bufferUtil = require('bufferutil');\n\n    module.exports.mask = function (source, mask, output, offset, length) {\n      if (length < 48) _mask(source, mask, output, offset, length);\n      else bufferUtil.mask(source, mask, output, offset, length);\n    };\n\n    module.exports.unmask = function (buffer, mask) {\n      if (buffer.length < 32) _unmask(buffer, mask);\n      else bufferUtil.unmask(buffer, mask);\n    };\n  } catch (e) {\n    // Continue regardless of the error.\n  }\n}\n","'use strict';\n\nmodule.exports = {\n  BINARY_TYPES: ['nodebuffer', 'arraybuffer', 'fragments'],\n  EMPTY_BUFFER: Buffer.alloc(0),\n  GUID: '258EAFA5-E914-47DA-95CA-C5AB0DC85B11',\n  kForOnEventAttribute: Symbol('kIsForOnEventAttribute'),\n  kListener: Symbol('kListener'),\n  kStatusCode: Symbol('status-code'),\n  kWebSocket: Symbol('websocket'),\n  NOOP: () => {}\n};\n","'use strict';\n\nconst { kForOnEventAttribute, kListener } = require('./constants');\n\nconst kCode = Symbol('kCode');\nconst kData = Symbol('kData');\nconst kError = Symbol('kError');\nconst kMessage = Symbol('kMessage');\nconst kReason = Symbol('kReason');\nconst kTarget = Symbol('kTarget');\nconst kType = Symbol('kType');\nconst kWasClean = Symbol('kWasClean');\n\n/**\n * Class representing an event.\n */\nclass Event {\n  /**\n   * Create a new `Event`.\n   *\n   * @param {String} type The name of the event\n   * @throws {TypeError} If the `type` argument is not specified\n   */\n  constructor(type) {\n    this[kTarget] = null;\n    this[kType] = type;\n  }\n\n  /**\n   * @type {*}\n   */\n  get target() {\n    return this[kTarget];\n  }\n\n  /**\n   * @type {String}\n   */\n  get type() {\n    return this[kType];\n  }\n}\n\nObject.defineProperty(Event.prototype, 'target', { enumerable: true });\nObject.defineProperty(Event.prototype, 'type', { enumerable: true });\n\n/**\n * Class representing a close event.\n *\n * @extends Event\n */\nclass CloseEvent extends Event {\n  /**\n   * Create a new `CloseEvent`.\n   *\n   * @param {String} type The name of the event\n   * @param {Object} [options] A dictionary object that allows for setting\n   *     attributes via object members of the same name\n   * @param {Number} [options.code=0] The status code explaining why the\n   *     connection was closed\n   * @param {String} [options.reason=''] A human-readable string explaining why\n   *     the connection was closed\n   * @param {Boolean} [options.wasClean=false] Indicates whether or not the\n   *     connection was cleanly closed\n   */\n  constructor(type, options = {}) {\n    super(type);\n\n    this[kCode] = options.code === undefined ? 0 : options.code;\n    this[kReason] = options.reason === undefined ? '' : options.reason;\n    this[kWasClean] = options.wasClean === undefined ? false : options.wasClean;\n  }\n\n  /**\n   * @type {Number}\n   */\n  get code() {\n    return this[kCode];\n  }\n\n  /**\n   * @type {String}\n   */\n  get reason() {\n    return this[kReason];\n  }\n\n  /**\n   * @type {Boolean}\n   */\n  get wasClean() {\n    return this[kWasClean];\n  }\n}\n\nObject.defineProperty(CloseEvent.prototype, 'code', { enumerable: true });\nObject.defineProperty(CloseEvent.prototype, 'reason', { enumerable: true });\nObject.defineProperty(CloseEvent.prototype, 'wasClean', { enumerable: true });\n\n/**\n * Class representing an error event.\n *\n * @extends Event\n */\nclass ErrorEvent extends Event {\n  /**\n   * Create a new `ErrorEvent`.\n   *\n   * @param {String} type The name of the event\n   * @param {Object} [options] A dictionary object that allows for setting\n   *     attributes via object members of the same name\n   * @param {*} [options.error=null] The error that generated this event\n   * @param {String} [options.message=''] The error message\n   */\n  constructor(type, options = {}) {\n    super(type);\n\n    this[kError] = options.error === undefined ? null : options.error;\n    this[kMessage] = options.message === undefined ? '' : options.message;\n  }\n\n  /**\n   * @type {*}\n   */\n  get error() {\n    return this[kError];\n  }\n\n  /**\n   * @type {String}\n   */\n  get message() {\n    return this[kMessage];\n  }\n}\n\nObject.defineProperty(ErrorEvent.prototype, 'error', { enumerable: true });\nObject.defineProperty(ErrorEvent.prototype, 'message', { enumerable: true });\n\n/**\n * Class representing a message event.\n *\n * @extends Event\n */\nclass MessageEvent extends Event {\n  /**\n   * Create a new `MessageEvent`.\n   *\n   * @param {String} type The name of the event\n   * @param {Object} [options] A dictionary object that allows for setting\n   *     attributes via object members of the same name\n   * @param {*} [options.data=null] The message content\n   */\n  constructor(type, options = {}) {\n    super(type);\n\n    this[kData] = options.data === undefined ? null : options.data;\n  }\n\n  /**\n   * @type {*}\n   */\n  get data() {\n    return this[kData];\n  }\n}\n\nObject.defineProperty(MessageEvent.prototype, 'data', { enumerable: true });\n\n/**\n * This provides methods for emulating the `EventTarget` interface. It's not\n * meant to be used directly.\n *\n * @mixin\n */\nconst EventTarget = {\n  /**\n   * Register an event listener.\n   *\n   * @param {String} type A string representing the event type to listen for\n   * @param {Function} listener The listener to add\n   * @param {Object} [options] An options object specifies characteristics about\n   *     the event listener\n   * @param {Boolean} [options.once=false] A `Boolean` indicating that the\n   *     listener should be invoked at most once after being added. If `true`,\n   *     the listener would be automatically removed when invoked.\n   * @public\n   */\n  addEventListener(type, listener, options = {}) {\n    let wrapper;\n\n    if (type === 'message') {\n      wrapper = function onMessage(data, isBinary) {\n        const event = new MessageEvent('message', {\n          data: isBinary ? data : data.toString()\n        });\n\n        event[kTarget] = this;\n        listener.call(this, event);\n      };\n    } else if (type === 'close') {\n      wrapper = function onClose(code, message) {\n        const event = new CloseEvent('close', {\n          code,\n          reason: message.toString(),\n          wasClean: this._closeFrameReceived && this._closeFrameSent\n        });\n\n        event[kTarget] = this;\n        listener.call(this, event);\n      };\n    } else if (type === 'error') {\n      wrapper = function onError(error) {\n        const event = new ErrorEvent('error', {\n          error,\n          message: error.message\n        });\n\n        event[kTarget] = this;\n        listener.call(this, event);\n      };\n    } else if (type === 'open') {\n      wrapper = function onOpen() {\n        const event = new Event('open');\n\n        event[kTarget] = this;\n        listener.call(this, event);\n      };\n    } else {\n      return;\n    }\n\n    wrapper[kForOnEventAttribute] = !!options[kForOnEventAttribute];\n    wrapper[kListener] = listener;\n\n    if (options.once) {\n      this.once(type, wrapper);\n    } else {\n      this.on(type, wrapper);\n    }\n  },\n\n  /**\n   * Remove an event listener.\n   *\n   * @param {String} type A string representing the event type to remove\n   * @param {Function} handler The listener to remove\n   * @public\n   */\n  removeEventListener(type, handler) {\n    for (const listener of this.listeners(type)) {\n      if (listener[kListener] === handler && !listener[kForOnEventAttribute]) {\n        this.removeListener(type, listener);\n        break;\n      }\n    }\n  }\n};\n\nmodule.exports = {\n  CloseEvent,\n  ErrorEvent,\n  Event,\n  EventTarget,\n  MessageEvent\n};\n","'use strict';\n\nconst { tokenChars } = require('./validation');\n\n/**\n * Adds an offer to the map of extension offers or a parameter to the map of\n * parameters.\n *\n * @param {Object} dest The map of extension offers or parameters\n * @param {String} name The extension or parameter name\n * @param {(Object|Boolean|String)} elem The extension parameters or the\n *     parameter value\n * @private\n */\nfunction push(dest, name, elem) {\n  if (dest[name] === undefined) dest[name] = [elem];\n  else dest[name].push(elem);\n}\n\n/**\n * Parses the `Sec-WebSocket-Extensions` header into an object.\n *\n * @param {String} header The field value of the header\n * @return {Object} The parsed object\n * @public\n */\nfunction parse(header) {\n  const offers = Object.create(null);\n  let params = Object.create(null);\n  let mustUnescape = false;\n  let isEscaping = false;\n  let inQuotes = false;\n  let extensionName;\n  let paramName;\n  let start = -1;\n  let code = -1;\n  let end = -1;\n  let i = 0;\n\n  for (; i < header.length; i++) {\n    code = header.charCodeAt(i);\n\n    if (extensionName === undefined) {\n      if (end === -1 && tokenChars[code] === 1) {\n        if (start === -1) start = i;\n      } else if (\n        i !== 0 &&\n        (code === 0x20 /* ' ' */ || code === 0x09) /* '\\t' */\n      ) {\n        if (end === -1 && start !== -1) end = i;\n      } else if (code === 0x3b /* ';' */ || code === 0x2c /* ',' */) {\n        if (start === -1) {\n          throw new SyntaxError(`Unexpected character at index ${i}`);\n        }\n\n        if (end === -1) end = i;\n        const name = header.slice(start, end);\n        if (code === 0x2c) {\n          push(offers, name, params);\n          params = Object.create(null);\n        } else {\n          extensionName = name;\n        }\n\n        start = end = -1;\n      } else {\n        throw new SyntaxError(`Unexpected character at index ${i}`);\n      }\n    } else if (paramName === undefined) {\n      if (end === -1 && tokenChars[code] === 1) {\n        if (start === -1) start = i;\n      } else if (code === 0x20 || code === 0x09) {\n        if (end === -1 && start !== -1) end = i;\n      } else if (code === 0x3b || code === 0x2c) {\n        if (start === -1) {\n          throw new SyntaxError(`Unexpected character at index ${i}`);\n        }\n\n        if (end === -1) end = i;\n        push(params, header.slice(start, end), true);\n        if (code === 0x2c) {\n          push(offers, extensionName, params);\n          params = Object.create(null);\n          extensionName = undefined;\n        }\n\n        start = end = -1;\n      } else if (code === 0x3d /* '=' */ && start !== -1 && end === -1) {\n        paramName = header.slice(start, i);\n        start = end = -1;\n      } else {\n        throw new SyntaxError(`Unexpected character at index ${i}`);\n      }\n    } else {\n      //\n      // The value of a quoted-string after unescaping must conform to the\n      // token ABNF, so only token characters are valid.\n      // Ref: https://tools.ietf.org/html/rfc6455#section-9.1\n      //\n      if (isEscaping) {\n        if (tokenChars[code] !== 1) {\n          throw new SyntaxError(`Unexpected character at index ${i}`);\n        }\n        if (start === -1) start = i;\n        else if (!mustUnescape) mustUnescape = true;\n        isEscaping = false;\n      } else if (inQuotes) {\n        if (tokenChars[code] === 1) {\n          if (start === -1) start = i;\n        } else if (code === 0x22 /* '\"' */ && start !== -1) {\n          inQuotes = false;\n          end = i;\n        } else if (code === 0x5c /* '\\' */) {\n          isEscaping = true;\n        } else {\n          throw new SyntaxError(`Unexpected character at index ${i}`);\n        }\n      } else if (code === 0x22 && header.charCodeAt(i - 1) === 0x3d) {\n        inQuotes = true;\n      } else if (end === -1 && tokenChars[code] === 1) {\n        if (start === -1) start = i;\n      } else if (start !== -1 && (code === 0x20 || code === 0x09)) {\n        if (end === -1) end = i;\n      } else if (code === 0x3b || code === 0x2c) {\n        if (start === -1) {\n          throw new SyntaxError(`Unexpected character at index ${i}`);\n        }\n\n        if (end === -1) end = i;\n        let value = header.slice(start, end);\n        if (mustUnescape) {\n          value = value.replace(/\\\\/g, '');\n          mustUnescape = false;\n        }\n        push(params, paramName, value);\n        if (code === 0x2c) {\n          push(offers, extensionName, params);\n          params = Object.create(null);\n          extensionName = undefined;\n        }\n\n        paramName = undefined;\n        start = end = -1;\n      } else {\n        throw new SyntaxError(`Unexpected character at index ${i}`);\n      }\n    }\n  }\n\n  if (start === -1 || inQuotes || code === 0x20 || code === 0x09) {\n    throw new SyntaxError('Unexpected end of input');\n  }\n\n  if (end === -1) end = i;\n  const token = header.slice(start, end);\n  if (extensionName === undefined) {\n    push(offers, token, params);\n  } else {\n    if (paramName === undefined) {\n      push(params, token, true);\n    } else if (mustUnescape) {\n      push(params, paramName, token.replace(/\\\\/g, ''));\n    } else {\n      push(params, paramName, token);\n    }\n    push(offers, extensionName, params);\n  }\n\n  return offers;\n}\n\n/**\n * Builds the `Sec-WebSocket-Extensions` header field value.\n *\n * @param {Object} extensions The map of extensions and parameters to format\n * @return {String} A string representing the given object\n * @public\n */\nfunction format(extensions) {\n  return Object.keys(extensions)\n    .map((extension) => {\n      let configurations = extensions[extension];\n      if (!Array.isArray(configurations)) configurations = [configurations];\n      return configurations\n        .map((params) => {\n          return [extension]\n            .concat(\n              Object.keys(params).map((k) => {\n                let values = params[k];\n                if (!Array.isArray(values)) values = [values];\n                return values\n                  .map((v) => (v === true ? k : `${k}=${v}`))\n                  .join('; ');\n              })\n            )\n            .join('; ');\n        })\n        .join(', ');\n    })\n    .join(', ');\n}\n\nmodule.exports = { format, parse };\n","'use strict';\n\nconst kDone = Symbol('kDone');\nconst kRun = Symbol('kRun');\n\n/**\n * A very simple job queue with adjustable concurrency. Adapted from\n * https://github.com/STRML/async-limiter\n */\nclass Limiter {\n  /**\n   * Creates a new `Limiter`.\n   *\n   * @param {Number} [concurrency=Infinity] The maximum number of jobs allowed\n   *     to run concurrently\n   */\n  constructor(concurrency) {\n    this[kDone] = () => {\n      this.pending--;\n      this[kRun]();\n    };\n    this.concurrency = concurrency || Infinity;\n    this.jobs = [];\n    this.pending = 0;\n  }\n\n  /**\n   * Adds a job to the queue.\n   *\n   * @param {Function} job The job to run\n   * @public\n   */\n  add(job) {\n    this.jobs.push(job);\n    this[kRun]();\n  }\n\n  /**\n   * Removes a job from the queue and runs it if possible.\n   *\n   * @private\n   */\n  [kRun]() {\n    if (this.pending === this.concurrency) return;\n\n    if (this.jobs.length) {\n      const job = this.jobs.shift();\n\n      this.pending++;\n      job(this[kDone]);\n    }\n  }\n}\n\nmodule.exports = Limiter;\n","'use strict';\n\nconst zlib = require('zlib');\n\nconst bufferUtil = require('./buffer-util');\nconst Limiter = require('./limiter');\nconst { kStatusCode } = require('./constants');\n\nconst TRAILER = Buffer.from([0x00, 0x00, 0xff, 0xff]);\nconst kPerMessageDeflate = Symbol('permessage-deflate');\nconst kTotalLength = Symbol('total-length');\nconst kCallback = Symbol('callback');\nconst kBuffers = Symbol('buffers');\nconst kError = Symbol('error');\n\n//\n// We limit zlib concurrency, which prevents severe memory fragmentation\n// as documented in https://github.com/nodejs/node/issues/8871#issuecomment-250915913\n// and https://github.com/websockets/ws/issues/1202\n//\n// Intentionally global; it's the global thread pool that's an issue.\n//\nlet zlibLimiter;\n\n/**\n * permessage-deflate implementation.\n */\nclass PerMessageDeflate {\n  /**\n   * Creates a PerMessageDeflate instance.\n   *\n   * @param {Object} [options] Configuration options\n   * @param {(Boolean|Number)} [options.clientMaxWindowBits] Advertise support\n   *     for, or request, a custom client window size\n   * @param {Boolean} [options.clientNoContextTakeover=false] Advertise/\n   *     acknowledge disabling of client context takeover\n   * @param {Number} [options.concurrencyLimit=10] The number of concurrent\n   *     calls to zlib\n   * @param {(Boolean|Number)} [options.serverMaxWindowBits] Request/confirm the\n   *     use of a custom server window size\n   * @param {Boolean} [options.serverNoContextTakeover=false] Request/accept\n   *     disabling of server context takeover\n   * @param {Number} [options.threshold=1024] Size (in bytes) below which\n   *     messages should not be compressed if context takeover is disabled\n   * @param {Object} [options.zlibDeflateOptions] Options to pass to zlib on\n   *     deflate\n   * @param {Object} [options.zlibInflateOptions] Options to pass to zlib on\n   *     inflate\n   * @param {Boolean} [isServer=false] Create the instance in either server or\n   *     client mode\n   * @param {Number} [maxPayload=0] The maximum allowed message length\n   */\n  constructor(options, isServer, maxPayload) {\n    this._maxPayload = maxPayload | 0;\n    this._options = options || {};\n    this._threshold =\n      this._options.threshold !== undefined ? this._options.threshold : 1024;\n    this._isServer = !!isServer;\n    this._deflate = null;\n    this._inflate = null;\n\n    this.params = null;\n\n    if (!zlibLimiter) {\n      const concurrency =\n        this._options.concurrencyLimit !== undefined\n          ? this._options.concurrencyLimit\n          : 10;\n      zlibLimiter = new Limiter(concurrency);\n    }\n  }\n\n  /**\n   * @type {String}\n   */\n  static get extensionName() {\n    return 'permessage-deflate';\n  }\n\n  /**\n   * Create an extension negotiation offer.\n   *\n   * @return {Object} Extension parameters\n   * @public\n   */\n  offer() {\n    const params = {};\n\n    if (this._options.serverNoContextTakeover) {\n      params.server_no_context_takeover = true;\n    }\n    if (this._options.clientNoContextTakeover) {\n      params.client_no_context_takeover = true;\n    }\n    if (this._options.serverMaxWindowBits) {\n      params.server_max_window_bits = this._options.serverMaxWindowBits;\n    }\n    if (this._options.clientMaxWindowBits) {\n      params.client_max_window_bits = this._options.clientMaxWindowBits;\n    } else if (this._options.clientMaxWindowBits == null) {\n      params.client_max_window_bits = true;\n    }\n\n    return params;\n  }\n\n  /**\n   * Accept an extension negotiation offer/response.\n   *\n   * @param {Array} configurations The extension negotiation offers/reponse\n   * @return {Object} Accepted configuration\n   * @public\n   */\n  accept(configurations) {\n    configurations = this.normalizeParams(configurations);\n\n    this.params = this._isServer\n      ? this.acceptAsServer(configurations)\n      : this.acceptAsClient(configurations);\n\n    return this.params;\n  }\n\n  /**\n   * Releases all resources used by the extension.\n   *\n   * @public\n   */\n  cleanup() {\n    if (this._inflate) {\n      this._inflate.close();\n      this._inflate = null;\n    }\n\n    if (this._deflate) {\n      const callback = this._deflate[kCallback];\n\n      this._deflate.close();\n      this._deflate = null;\n\n      if (callback) {\n        callback(\n          new Error(\n            'The deflate stream was closed while data was being processed'\n          )\n        );\n      }\n    }\n  }\n\n  /**\n   *  Accept an extension negotiation offer.\n   *\n   * @param {Array} offers The extension negotiation offers\n   * @return {Object} Accepted configuration\n   * @private\n   */\n  acceptAsServer(offers) {\n    const opts = this._options;\n    const accepted = offers.find((params) => {\n      if (\n        (opts.serverNoContextTakeover === false &&\n          params.server_no_context_takeover) ||\n        (params.server_max_window_bits &&\n          (opts.serverMaxWindowBits === false ||\n            (typeof opts.serverMaxWindowBits === 'number' &&\n              opts.serverMaxWindowBits > params.server_max_window_bits))) ||\n        (typeof opts.clientMaxWindowBits === 'number' &&\n          !params.client_max_window_bits)\n      ) {\n        return false;\n      }\n\n      return true;\n    });\n\n    if (!accepted) {\n      throw new Error('None of the extension offers can be accepted');\n    }\n\n    if (opts.serverNoContextTakeover) {\n      accepted.server_no_context_takeover = true;\n    }\n    if (opts.clientNoContextTakeover) {\n      accepted.client_no_context_takeover = true;\n    }\n    if (typeof opts.serverMaxWindowBits === 'number') {\n      accepted.server_max_window_bits = opts.serverMaxWindowBits;\n    }\n    if (typeof opts.clientMaxWindowBits === 'number') {\n      accepted.client_max_window_bits = opts.clientMaxWindowBits;\n    } else if (\n      accepted.client_max_window_bits === true ||\n      opts.clientMaxWindowBits === false\n    ) {\n      delete accepted.client_max_window_bits;\n    }\n\n    return accepted;\n  }\n\n  /**\n   * Accept the extension negotiation response.\n   *\n   * @param {Array} response The extension negotiation response\n   * @return {Object} Accepted configuration\n   * @private\n   */\n  acceptAsClient(response) {\n    const params = response[0];\n\n    if (\n      this._options.clientNoContextTakeover === false &&\n      params.client_no_context_takeover\n    ) {\n      throw new Error('Unexpected parameter \"client_no_context_takeover\"');\n    }\n\n    if (!params.client_max_window_bits) {\n      if (typeof this._options.clientMaxWindowBits === 'number') {\n        params.client_max_window_bits = this._options.clientMaxWindowBits;\n      }\n    } else if (\n      this._options.clientMaxWindowBits === false ||\n      (typeof this._options.clientMaxWindowBits === 'number' &&\n        params.client_max_window_bits > this._options.clientMaxWindowBits)\n    ) {\n      throw new Error(\n        'Unexpected or invalid parameter \"client_max_window_bits\"'\n      );\n    }\n\n    return params;\n  }\n\n  /**\n   * Normalize parameters.\n   *\n   * @param {Array} configurations The extension negotiation offers/reponse\n   * @return {Array} The offers/response with normalized parameters\n   * @private\n   */\n  normalizeParams(configurations) {\n    configurations.forEach((params) => {\n      Object.keys(params).forEach((key) => {\n        let value = params[key];\n\n        if (value.length > 1) {\n          throw new Error(`Parameter \"${key}\" must have only a single value`);\n        }\n\n        value = value[0];\n\n        if (key === 'client_max_window_bits') {\n          if (value !== true) {\n            const num = +value;\n            if (!Number.isInteger(num) || num < 8 || num > 15) {\n              throw new TypeError(\n                `Invalid value for parameter \"${key}\": ${value}`\n              );\n            }\n            value = num;\n          } else if (!this._isServer) {\n            throw new TypeError(\n              `Invalid value for parameter \"${key}\": ${value}`\n            );\n          }\n        } else if (key === 'server_max_window_bits') {\n          const num = +value;\n          if (!Number.isInteger(num) || num < 8 || num > 15) {\n            throw new TypeError(\n              `Invalid value for parameter \"${key}\": ${value}`\n            );\n          }\n          value = num;\n        } else if (\n          key === 'client_no_context_takeover' ||\n          key === 'server_no_context_takeover'\n        ) {\n          if (value !== true) {\n            throw new TypeError(\n              `Invalid value for parameter \"${key}\": ${value}`\n            );\n          }\n        } else {\n          throw new Error(`Unknown parameter \"${key}\"`);\n        }\n\n        params[key] = value;\n      });\n    });\n\n    return configurations;\n  }\n\n  /**\n   * Decompress data. Concurrency limited.\n   *\n   * @param {Buffer} data Compressed data\n   * @param {Boolean} fin Specifies whether or not this is the last fragment\n   * @param {Function} callback Callback\n   * @public\n   */\n  decompress(data, fin, callback) {\n    zlibLimiter.add((done) => {\n      this._decompress(data, fin, (err, result) => {\n        done();\n        callback(err, result);\n      });\n    });\n  }\n\n  /**\n   * Compress data. Concurrency limited.\n   *\n   * @param {(Buffer|String)} data Data to compress\n   * @param {Boolean} fin Specifies whether or not this is the last fragment\n   * @param {Function} callback Callback\n   * @public\n   */\n  compress(data, fin, callback) {\n    zlibLimiter.add((done) => {\n      this._compress(data, fin, (err, result) => {\n        done();\n        callback(err, result);\n      });\n    });\n  }\n\n  /**\n   * Decompress data.\n   *\n   * @param {Buffer} data Compressed data\n   * @param {Boolean} fin Specifies whether or not this is the last fragment\n   * @param {Function} callback Callback\n   * @private\n   */\n  _decompress(data, fin, callback) {\n    const endpoint = this._isServer ? 'client' : 'server';\n\n    if (!this._inflate) {\n      const key = `${endpoint}_max_window_bits`;\n      const windowBits =\n        typeof this.params[key] !== 'number'\n          ? zlib.Z_DEFAULT_WINDOWBITS\n          : this.params[key];\n\n      this._inflate = zlib.createInflateRaw({\n        ...this._options.zlibInflateOptions,\n        windowBits\n      });\n      this._inflate[kPerMessageDeflate] = this;\n      this._inflate[kTotalLength] = 0;\n      this._inflate[kBuffers] = [];\n      this._inflate.on('error', inflateOnError);\n      this._inflate.on('data', inflateOnData);\n    }\n\n    this._inflate[kCallback] = callback;\n\n    this._inflate.write(data);\n    if (fin) this._inflate.write(TRAILER);\n\n    this._inflate.flush(() => {\n      const err = this._inflate[kError];\n\n      if (err) {\n        this._inflate.close();\n        this._inflate = null;\n        callback(err);\n        return;\n      }\n\n      const data = bufferUtil.concat(\n        this._inflate[kBuffers],\n        this._inflate[kTotalLength]\n      );\n\n      if (this._inflate._readableState.endEmitted) {\n        this._inflate.close();\n        this._inflate = null;\n      } else {\n        this._inflate[kTotalLength] = 0;\n        this._inflate[kBuffers] = [];\n\n        if (fin && this.params[`${endpoint}_no_context_takeover`]) {\n          this._inflate.reset();\n        }\n      }\n\n      callback(null, data);\n    });\n  }\n\n  /**\n   * Compress data.\n   *\n   * @param {(Buffer|String)} data Data to compress\n   * @param {Boolean} fin Specifies whether or not this is the last fragment\n   * @param {Function} callback Callback\n   * @private\n   */\n  _compress(data, fin, callback) {\n    const endpoint = this._isServer ? 'server' : 'client';\n\n    if (!this._deflate) {\n      const key = `${endpoint}_max_window_bits`;\n      const windowBits =\n        typeof this.params[key] !== 'number'\n          ? zlib.Z_DEFAULT_WINDOWBITS\n          : this.params[key];\n\n      this._deflate = zlib.createDeflateRaw({\n        ...this._options.zlibDeflateOptions,\n        windowBits\n      });\n\n      this._deflate[kTotalLength] = 0;\n      this._deflate[kBuffers] = [];\n\n      this._deflate.on('data', deflateOnData);\n    }\n\n    this._deflate[kCallback] = callback;\n\n    this._deflate.write(data);\n    this._deflate.flush(zlib.Z_SYNC_FLUSH, () => {\n      if (!this._deflate) {\n        //\n        // The deflate stream was closed while data was being processed.\n        //\n        return;\n      }\n\n      let data = bufferUtil.concat(\n        this._deflate[kBuffers],\n        this._deflate[kTotalLength]\n      );\n\n      if (fin) data = data.slice(0, data.length - 4);\n\n      //\n      // Ensure that the callback will not be called again in\n      // `PerMessageDeflate#cleanup()`.\n      //\n      this._deflate[kCallback] = null;\n\n      this._deflate[kTotalLength] = 0;\n      this._deflate[kBuffers] = [];\n\n      if (fin && this.params[`${endpoint}_no_context_takeover`]) {\n        this._deflate.reset();\n      }\n\n      callback(null, data);\n    });\n  }\n}\n\nmodule.exports = PerMessageDeflate;\n\n/**\n * The listener of the `zlib.DeflateRaw` stream `'data'` event.\n *\n * @param {Buffer} chunk A chunk of data\n * @private\n */\nfunction deflateOnData(chunk) {\n  this[kBuffers].push(chunk);\n  this[kTotalLength] += chunk.length;\n}\n\n/**\n * The listener of the `zlib.InflateRaw` stream `'data'` event.\n *\n * @param {Buffer} chunk A chunk of data\n * @private\n */\nfunction inflateOnData(chunk) {\n  this[kTotalLength] += chunk.length;\n\n  if (\n    this[kPerMessageDeflate]._maxPayload < 1 ||\n    this[kTotalLength] <= this[kPerMessageDeflate]._maxPayload\n  ) {\n    this[kBuffers].push(chunk);\n    return;\n  }\n\n  this[kError] = new RangeError('Max payload size exceeded');\n  this[kError].code = 'WS_ERR_UNSUPPORTED_MESSAGE_LENGTH';\n  this[kError][kStatusCode] = 1009;\n  this.removeListener('data', inflateOnData);\n  this.reset();\n}\n\n/**\n * The listener of the `zlib.InflateRaw` stream `'error'` event.\n *\n * @param {Error} err The emitted error\n * @private\n */\nfunction inflateOnError(err) {\n  //\n  // There is no need to call `Zlib#close()` as the handle is automatically\n  // closed when an error is emitted.\n  //\n  this[kPerMessageDeflate]._inflate = null;\n  err[kStatusCode] = 1007;\n  this[kCallback](err);\n}\n","'use strict';\n\nconst { Writable } = require('stream');\n\nconst PerMessageDeflate = require('./permessage-deflate');\nconst {\n  BINARY_TYPES,\n  EMPTY_BUFFER,\n  kStatusCode,\n  kWebSocket\n} = require('./constants');\nconst { concat, toArrayBuffer, unmask } = require('./buffer-util');\nconst { isValidStatusCode, isValidUTF8 } = require('./validation');\n\nconst GET_INFO = 0;\nconst GET_PAYLOAD_LENGTH_16 = 1;\nconst GET_PAYLOAD_LENGTH_64 = 2;\nconst GET_MASK = 3;\nconst GET_DATA = 4;\nconst INFLATING = 5;\n\n/**\n * HyBi Receiver implementation.\n *\n * @extends Writable\n */\nclass Receiver extends Writable {\n  /**\n   * Creates a Receiver instance.\n   *\n   * @param {Object} [options] Options object\n   * @param {String} [options.binaryType=nodebuffer] The type for binary data\n   * @param {Object} [options.extensions] An object containing the negotiated\n   *     extensions\n   * @param {Boolean} [options.isServer=false] Specifies whether to operate in\n   *     client or server mode\n   * @param {Number} [options.maxPayload=0] The maximum allowed message length\n   * @param {Boolean} [options.skipUTF8Validation=false] Specifies whether or\n   *     not to skip UTF-8 validation for text and close messages\n   */\n  constructor(options = {}) {\n    super();\n\n    this._binaryType = options.binaryType || BINARY_TYPES[0];\n    this._extensions = options.extensions || {};\n    this._isServer = !!options.isServer;\n    this._maxPayload = options.maxPayload | 0;\n    this._skipUTF8Validation = !!options.skipUTF8Validation;\n    this[kWebSocket] = undefined;\n\n    this._bufferedBytes = 0;\n    this._buffers = [];\n\n    this._compressed = false;\n    this._payloadLength = 0;\n    this._mask = undefined;\n    this._fragmented = 0;\n    this._masked = false;\n    this._fin = false;\n    this._opcode = 0;\n\n    this._totalPayloadLength = 0;\n    this._messageLength = 0;\n    this._fragments = [];\n\n    this._state = GET_INFO;\n    this._loop = false;\n  }\n\n  /**\n   * Implements `Writable.prototype._write()`.\n   *\n   * @param {Buffer} chunk The chunk of data to write\n   * @param {String} encoding The character encoding of `chunk`\n   * @param {Function} cb Callback\n   * @private\n   */\n  _write(chunk, encoding, cb) {\n    if (this._opcode === 0x08 && this._state == GET_INFO) return cb();\n\n    this._bufferedBytes += chunk.length;\n    this._buffers.push(chunk);\n    this.startLoop(cb);\n  }\n\n  /**\n   * Consumes `n` bytes from the buffered data.\n   *\n   * @param {Number} n The number of bytes to consume\n   * @return {Buffer} The consumed bytes\n   * @private\n   */\n  consume(n) {\n    this._bufferedBytes -= n;\n\n    if (n === this._buffers[0].length) return this._buffers.shift();\n\n    if (n < this._buffers[0].length) {\n      const buf = this._buffers[0];\n      this._buffers[0] = buf.slice(n);\n      return buf.slice(0, n);\n    }\n\n    const dst = Buffer.allocUnsafe(n);\n\n    do {\n      const buf = this._buffers[0];\n      const offset = dst.length - n;\n\n      if (n >= buf.length) {\n        dst.set(this._buffers.shift(), offset);\n      } else {\n        dst.set(new Uint8Array(buf.buffer, buf.byteOffset, n), offset);\n        this._buffers[0] = buf.slice(n);\n      }\n\n      n -= buf.length;\n    } while (n > 0);\n\n    return dst;\n  }\n\n  /**\n   * Starts the parsing loop.\n   *\n   * @param {Function} cb Callback\n   * @private\n   */\n  startLoop(cb) {\n    let err;\n    this._loop = true;\n\n    do {\n      switch (this._state) {\n        case GET_INFO:\n          err = this.getInfo();\n          break;\n        case GET_PAYLOAD_LENGTH_16:\n          err = this.getPayloadLength16();\n          break;\n        case GET_PAYLOAD_LENGTH_64:\n          err = this.getPayloadLength64();\n          break;\n        case GET_MASK:\n          this.getMask();\n          break;\n        case GET_DATA:\n          err = this.getData(cb);\n          break;\n        default:\n          // `INFLATING`\n          this._loop = false;\n          return;\n      }\n    } while (this._loop);\n\n    cb(err);\n  }\n\n  /**\n   * Reads the first two bytes of a frame.\n   *\n   * @return {(RangeError|undefined)} A possible error\n   * @private\n   */\n  getInfo() {\n    if (this._bufferedBytes < 2) {\n      this._loop = false;\n      return;\n    }\n\n    const buf = this.consume(2);\n\n    if ((buf[0] & 0x30) !== 0x00) {\n      this._loop = false;\n      return error(\n        RangeError,\n        'RSV2 and RSV3 must be clear',\n        true,\n        1002,\n        'WS_ERR_UNEXPECTED_RSV_2_3'\n      );\n    }\n\n    const compressed = (buf[0] & 0x40) === 0x40;\n\n    if (compressed && !this._extensions[PerMessageDeflate.extensionName]) {\n      this._loop = false;\n      return error(\n        RangeError,\n        'RSV1 must be clear',\n        true,\n        1002,\n        'WS_ERR_UNEXPECTED_RSV_1'\n      );\n    }\n\n    this._fin = (buf[0] & 0x80) === 0x80;\n    this._opcode = buf[0] & 0x0f;\n    this._payloadLength = buf[1] & 0x7f;\n\n    if (this._opcode === 0x00) {\n      if (compressed) {\n        this._loop = false;\n        return error(\n          RangeError,\n          'RSV1 must be clear',\n          true,\n          1002,\n          'WS_ERR_UNEXPECTED_RSV_1'\n        );\n      }\n\n      if (!this._fragmented) {\n        this._loop = false;\n        return error(\n          RangeError,\n          'invalid opcode 0',\n          true,\n          1002,\n          'WS_ERR_INVALID_OPCODE'\n        );\n      }\n\n      this._opcode = this._fragmented;\n    } else if (this._opcode === 0x01 || this._opcode === 0x02) {\n      if (this._fragmented) {\n        this._loop = false;\n        return error(\n          RangeError,\n          `invalid opcode ${this._opcode}`,\n          true,\n          1002,\n          'WS_ERR_INVALID_OPCODE'\n        );\n      }\n\n      this._compressed = compressed;\n    } else if (this._opcode > 0x07 && this._opcode < 0x0b) {\n      if (!this._fin) {\n        this._loop = false;\n        return error(\n          RangeError,\n          'FIN must be set',\n          true,\n          1002,\n          'WS_ERR_EXPECTED_FIN'\n        );\n      }\n\n      if (compressed) {\n        this._loop = false;\n        return error(\n          RangeError,\n          'RSV1 must be clear',\n          true,\n          1002,\n          'WS_ERR_UNEXPECTED_RSV_1'\n        );\n      }\n\n      if (this._payloadLength > 0x7d) {\n        this._loop = false;\n        return error(\n          RangeError,\n          `invalid payload length ${this._payloadLength}`,\n          true,\n          1002,\n          'WS_ERR_INVALID_CONTROL_PAYLOAD_LENGTH'\n        );\n      }\n    } else {\n      this._loop = false;\n      return error(\n        RangeError,\n        `invalid opcode ${this._opcode}`,\n        true,\n        1002,\n        'WS_ERR_INVALID_OPCODE'\n      );\n    }\n\n    if (!this._fin && !this._fragmented) this._fragmented = this._opcode;\n    this._masked = (buf[1] & 0x80) === 0x80;\n\n    if (this._isServer) {\n      if (!this._masked) {\n        this._loop = false;\n        return error(\n          RangeError,\n          'MASK must be set',\n          true,\n          1002,\n          'WS_ERR_EXPECTED_MASK'\n        );\n      }\n    } else if (this._masked) {\n      this._loop = false;\n      return error(\n        RangeError,\n        'MASK must be clear',\n        true,\n        1002,\n        'WS_ERR_UNEXPECTED_MASK'\n      );\n    }\n\n    if (this._payloadLength === 126) this._state = GET_PAYLOAD_LENGTH_16;\n    else if (this._payloadLength === 127) this._state = GET_PAYLOAD_LENGTH_64;\n    else return this.haveLength();\n  }\n\n  /**\n   * Gets extended payload length (7+16).\n   *\n   * @return {(RangeError|undefined)} A possible error\n   * @private\n   */\n  getPayloadLength16() {\n    if (this._bufferedBytes < 2) {\n      this._loop = false;\n      return;\n    }\n\n    this._payloadLength = this.consume(2).readUInt16BE(0);\n    return this.haveLength();\n  }\n\n  /**\n   * Gets extended payload length (7+64).\n   *\n   * @return {(RangeError|undefined)} A possible error\n   * @private\n   */\n  getPayloadLength64() {\n    if (this._bufferedBytes < 8) {\n      this._loop = false;\n      return;\n    }\n\n    const buf = this.consume(8);\n    const num = buf.readUInt32BE(0);\n\n    //\n    // The maximum safe integer in JavaScript is 2^53 - 1. An error is returned\n    // if payload length is greater than this number.\n    //\n    if (num > Math.pow(2, 53 - 32) - 1) {\n      this._loop = false;\n      return error(\n        RangeError,\n        'Unsupported WebSocket frame: payload length > 2^53 - 1',\n        false,\n        1009,\n        'WS_ERR_UNSUPPORTED_DATA_PAYLOAD_LENGTH'\n      );\n    }\n\n    this._payloadLength = num * Math.pow(2, 32) + buf.readUInt32BE(4);\n    return this.haveLength();\n  }\n\n  /**\n   * Payload length has been read.\n   *\n   * @return {(RangeError|undefined)} A possible error\n   * @private\n   */\n  haveLength() {\n    if (this._payloadLength && this._opcode < 0x08) {\n      this._totalPayloadLength += this._payloadLength;\n      if (this._totalPayloadLength > this._maxPayload && this._maxPayload > 0) {\n        this._loop = false;\n        return error(\n          RangeError,\n          'Max payload size exceeded',\n          false,\n          1009,\n          'WS_ERR_UNSUPPORTED_MESSAGE_LENGTH'\n        );\n      }\n    }\n\n    if (this._masked) this._state = GET_MASK;\n    else this._state = GET_DATA;\n  }\n\n  /**\n   * Reads mask bytes.\n   *\n   * @private\n   */\n  getMask() {\n    if (this._bufferedBytes < 4) {\n      this._loop = false;\n      return;\n    }\n\n    this._mask = this.consume(4);\n    this._state = GET_DATA;\n  }\n\n  /**\n   * Reads data bytes.\n   *\n   * @param {Function} cb Callback\n   * @return {(Error|RangeError|undefined)} A possible error\n   * @private\n   */\n  getData(cb) {\n    let data = EMPTY_BUFFER;\n\n    if (this._payloadLength) {\n      if (this._bufferedBytes < this._payloadLength) {\n        this._loop = false;\n        return;\n      }\n\n      data = this.consume(this._payloadLength);\n\n      if (\n        this._masked &&\n        (this._mask[0] | this._mask[1] | this._mask[2] | this._mask[3]) !== 0\n      ) {\n        unmask(data, this._mask);\n      }\n    }\n\n    if (this._opcode > 0x07) return this.controlMessage(data);\n\n    if (this._compressed) {\n      this._state = INFLATING;\n      this.decompress(data, cb);\n      return;\n    }\n\n    if (data.length) {\n      //\n      // This message is not compressed so its length is the sum of the payload\n      // length of all fragments.\n      //\n      this._messageLength = this._totalPayloadLength;\n      this._fragments.push(data);\n    }\n\n    return this.dataMessage();\n  }\n\n  /**\n   * Decompresses data.\n   *\n   * @param {Buffer} data Compressed data\n   * @param {Function} cb Callback\n   * @private\n   */\n  decompress(data, cb) {\n    const perMessageDeflate = this._extensions[PerMessageDeflate.extensionName];\n\n    perMessageDeflate.decompress(data, this._fin, (err, buf) => {\n      if (err) return cb(err);\n\n      if (buf.length) {\n        this._messageLength += buf.length;\n        if (this._messageLength > this._maxPayload && this._maxPayload > 0) {\n          return cb(\n            error(\n              RangeError,\n              'Max payload size exceeded',\n              false,\n              1009,\n              'WS_ERR_UNSUPPORTED_MESSAGE_LENGTH'\n            )\n          );\n        }\n\n        this._fragments.push(buf);\n      }\n\n      const er = this.dataMessage();\n      if (er) return cb(er);\n\n      this.startLoop(cb);\n    });\n  }\n\n  /**\n   * Handles a data message.\n   *\n   * @return {(Error|undefined)} A possible error\n   * @private\n   */\n  dataMessage() {\n    if (this._fin) {\n      const messageLength = this._messageLength;\n      const fragments = this._fragments;\n\n      this._totalPayloadLength = 0;\n      this._messageLength = 0;\n      this._fragmented = 0;\n      this._fragments = [];\n\n      if (this._opcode === 2) {\n        let data;\n\n        if (this._binaryType === 'nodebuffer') {\n          data = concat(fragments, messageLength);\n        } else if (this._binaryType === 'arraybuffer') {\n          data = toArrayBuffer(concat(fragments, messageLength));\n        } else {\n          data = fragments;\n        }\n\n        this.emit('message', data, true);\n      } else {\n        const buf = concat(fragments, messageLength);\n\n        if (!this._skipUTF8Validation && !isValidUTF8(buf)) {\n          this._loop = false;\n          return error(\n            Error,\n            'invalid UTF-8 sequence',\n            true,\n            1007,\n            'WS_ERR_INVALID_UTF8'\n          );\n        }\n\n        this.emit('message', buf, false);\n      }\n    }\n\n    this._state = GET_INFO;\n  }\n\n  /**\n   * Handles a control message.\n   *\n   * @param {Buffer} data Data to handle\n   * @return {(Error|RangeError|undefined)} A possible error\n   * @private\n   */\n  controlMessage(data) {\n    if (this._opcode === 0x08) {\n      this._loop = false;\n\n      if (data.length === 0) {\n        this.emit('conclude', 1005, EMPTY_BUFFER);\n        this.end();\n      } else if (data.length === 1) {\n        return error(\n          RangeError,\n          'invalid payload length 1',\n          true,\n          1002,\n          'WS_ERR_INVALID_CONTROL_PAYLOAD_LENGTH'\n        );\n      } else {\n        const code = data.readUInt16BE(0);\n\n        if (!isValidStatusCode(code)) {\n          return error(\n            RangeError,\n            `invalid status code ${code}`,\n            true,\n            1002,\n            'WS_ERR_INVALID_CLOSE_CODE'\n          );\n        }\n\n        const buf = data.slice(2);\n\n        if (!this._skipUTF8Validation && !isValidUTF8(buf)) {\n          return error(\n            Error,\n            'invalid UTF-8 sequence',\n            true,\n            1007,\n            'WS_ERR_INVALID_UTF8'\n          );\n        }\n\n        this.emit('conclude', code, buf);\n        this.end();\n      }\n    } else if (this._opcode === 0x09) {\n      this.emit('ping', data);\n    } else {\n      this.emit('pong', data);\n    }\n\n    this._state = GET_INFO;\n  }\n}\n\nmodule.exports = Receiver;\n\n/**\n * Builds an error object.\n *\n * @param {function(new:Error|RangeError)} ErrorCtor The error constructor\n * @param {String} message The error message\n * @param {Boolean} prefix Specifies whether or not to add a default prefix to\n *     `message`\n * @param {Number} statusCode The status code\n * @param {String} errorCode The exposed error code\n * @return {(Error|RangeError)} The error\n * @private\n */\nfunction error(ErrorCtor, message, prefix, statusCode, errorCode) {\n  const err = new ErrorCtor(\n    prefix ? `Invalid WebSocket frame: ${message}` : message\n  );\n\n  Error.captureStackTrace(err, error);\n  err.code = errorCode;\n  err[kStatusCode] = statusCode;\n  return err;\n}\n","/* eslint no-unused-vars: [\"error\", { \"varsIgnorePattern\": \"^net|tls$\" }] */\n\n'use strict';\n\nconst net = require('net');\nconst tls = require('tls');\nconst { randomFillSync } = require('crypto');\n\nconst PerMessageDeflate = require('./permessage-deflate');\nconst { EMPTY_BUFFER } = require('./constants');\nconst { isValidStatusCode } = require('./validation');\nconst { mask: applyMask, toBuffer } = require('./buffer-util');\n\nconst kByteLength = Symbol('kByteLength');\nconst maskBuffer = Buffer.alloc(4);\n\n/**\n * HyBi Sender implementation.\n */\nclass Sender {\n  /**\n   * Creates a Sender instance.\n   *\n   * @param {(net.Socket|tls.Socket)} socket The connection socket\n   * @param {Object} [extensions] An object containing the negotiated extensions\n   * @param {Function} [generateMask] The function used to generate the masking\n   *     key\n   */\n  constructor(socket, extensions, generateMask) {\n    this._extensions = extensions || {};\n\n    if (generateMask) {\n      this._generateMask = generateMask;\n      this._maskBuffer = Buffer.alloc(4);\n    }\n\n    this._socket = socket;\n\n    this._firstFragment = true;\n    this._compress = false;\n\n    this._bufferedBytes = 0;\n    this._deflating = false;\n    this._queue = [];\n  }\n\n  /**\n   * Frames a piece of data according to the HyBi WebSocket protocol.\n   *\n   * @param {(Buffer|String)} data The data to frame\n   * @param {Object} options Options object\n   * @param {Boolean} [options.fin=false] Specifies whether or not to set the\n   *     FIN bit\n   * @param {Function} [options.generateMask] The function used to generate the\n   *     masking key\n   * @param {Boolean} [options.mask=false] Specifies whether or not to mask\n   *     `data`\n   * @param {Buffer} [options.maskBuffer] The buffer used to store the masking\n   *     key\n   * @param {Number} options.opcode The opcode\n   * @param {Boolean} [options.readOnly=false] Specifies whether `data` can be\n   *     modified\n   * @param {Boolean} [options.rsv1=false] Specifies whether or not to set the\n   *     RSV1 bit\n   * @return {(Buffer|String)[]} The framed data\n   * @public\n   */\n  static frame(data, options) {\n    let mask;\n    let merge = false;\n    let offset = 2;\n    let skipMasking = false;\n\n    if (options.mask) {\n      mask = options.maskBuffer || maskBuffer;\n\n      if (options.generateMask) {\n        options.generateMask(mask);\n      } else {\n        randomFillSync(mask, 0, 4);\n      }\n\n      skipMasking = (mask[0] | mask[1] | mask[2] | mask[3]) === 0;\n      offset = 6;\n    }\n\n    let dataLength;\n\n    if (typeof data === 'string') {\n      if (\n        (!options.mask || skipMasking) &&\n        options[kByteLength] !== undefined\n      ) {\n        dataLength = options[kByteLength];\n      } else {\n        data = Buffer.from(data);\n        dataLength = data.length;\n      }\n    } else {\n      dataLength = data.length;\n      merge = options.mask && options.readOnly && !skipMasking;\n    }\n\n    let payloadLength = dataLength;\n\n    if (dataLength >= 65536) {\n      offset += 8;\n      payloadLength = 127;\n    } else if (dataLength > 125) {\n      offset += 2;\n      payloadLength = 126;\n    }\n\n    const target = Buffer.allocUnsafe(merge ? dataLength + offset : offset);\n\n    target[0] = options.fin ? options.opcode | 0x80 : options.opcode;\n    if (options.rsv1) target[0] |= 0x40;\n\n    target[1] = payloadLength;\n\n    if (payloadLength === 126) {\n      target.writeUInt16BE(dataLength, 2);\n    } else if (payloadLength === 127) {\n      target[2] = target[3] = 0;\n      target.writeUIntBE(dataLength, 4, 6);\n    }\n\n    if (!options.mask) return [target, data];\n\n    target[1] |= 0x80;\n    target[offset - 4] = mask[0];\n    target[offset - 3] = mask[1];\n    target[offset - 2] = mask[2];\n    target[offset - 1] = mask[3];\n\n    if (skipMasking) return [target, data];\n\n    if (merge) {\n      applyMask(data, mask, target, offset, dataLength);\n      return [target];\n    }\n\n    applyMask(data, mask, data, 0, dataLength);\n    return [target, data];\n  }\n\n  /**\n   * Sends a close message to the other peer.\n   *\n   * @param {Number} [code] The status code component of the body\n   * @param {(String|Buffer)} [data] The message component of the body\n   * @param {Boolean} [mask=false] Specifies whether or not to mask the message\n   * @param {Function} [cb] Callback\n   * @public\n   */\n  close(code, data, mask, cb) {\n    let buf;\n\n    if (code === undefined) {\n      buf = EMPTY_BUFFER;\n    } else if (typeof code !== 'number' || !isValidStatusCode(code)) {\n      throw new TypeError('First argument must be a valid error code number');\n    } else if (data === undefined || !data.length) {\n      buf = Buffer.allocUnsafe(2);\n      buf.writeUInt16BE(code, 0);\n    } else {\n      const length = Buffer.byteLength(data);\n\n      if (length > 123) {\n        throw new RangeError('The message must not be greater than 123 bytes');\n      }\n\n      buf = Buffer.allocUnsafe(2 + length);\n      buf.writeUInt16BE(code, 0);\n\n      if (typeof data === 'string') {\n        buf.write(data, 2);\n      } else {\n        buf.set(data, 2);\n      }\n    }\n\n    const options = {\n      [kByteLength]: buf.length,\n      fin: true,\n      generateMask: this._generateMask,\n      mask,\n      maskBuffer: this._maskBuffer,\n      opcode: 0x08,\n      readOnly: false,\n      rsv1: false\n    };\n\n    if (this._deflating) {\n      this.enqueue([this.dispatch, buf, false, options, cb]);\n    } else {\n      this.sendFrame(Sender.frame(buf, options), cb);\n    }\n  }\n\n  /**\n   * Sends a ping message to the other peer.\n   *\n   * @param {*} data The message to send\n   * @param {Boolean} [mask=false] Specifies whether or not to mask `data`\n   * @param {Function} [cb] Callback\n   * @public\n   */\n  ping(data, mask, cb) {\n    let byteLength;\n    let readOnly;\n\n    if (typeof data === 'string') {\n      byteLength = Buffer.byteLength(data);\n      readOnly = false;\n    } else {\n      data = toBuffer(data);\n      byteLength = data.length;\n      readOnly = toBuffer.readOnly;\n    }\n\n    if (byteLength > 125) {\n      throw new RangeError('The data size must not be greater than 125 bytes');\n    }\n\n    const options = {\n      [kByteLength]: byteLength,\n      fin: true,\n      generateMask: this._generateMask,\n      mask,\n      maskBuffer: this._maskBuffer,\n      opcode: 0x09,\n      readOnly,\n      rsv1: false\n    };\n\n    if (this._deflating) {\n      this.enqueue([this.dispatch, data, false, options, cb]);\n    } else {\n      this.sendFrame(Sender.frame(data, options), cb);\n    }\n  }\n\n  /**\n   * Sends a pong message to the other peer.\n   *\n   * @param {*} data The message to send\n   * @param {Boolean} [mask=false] Specifies whether or not to mask `data`\n   * @param {Function} [cb] Callback\n   * @public\n   */\n  pong(data, mask, cb) {\n    let byteLength;\n    let readOnly;\n\n    if (typeof data === 'string') {\n      byteLength = Buffer.byteLength(data);\n      readOnly = false;\n    } else {\n      data = toBuffer(data);\n      byteLength = data.length;\n      readOnly = toBuffer.readOnly;\n    }\n\n    if (byteLength > 125) {\n      throw new RangeError('The data size must not be greater than 125 bytes');\n    }\n\n    const options = {\n      [kByteLength]: byteLength,\n      fin: true,\n      generateMask: this._generateMask,\n      mask,\n      maskBuffer: this._maskBuffer,\n      opcode: 0x0a,\n      readOnly,\n      rsv1: false\n    };\n\n    if (this._deflating) {\n      this.enqueue([this.dispatch, data, false, options, cb]);\n    } else {\n      this.sendFrame(Sender.frame(data, options), cb);\n    }\n  }\n\n  /**\n   * Sends a data message to the other peer.\n   *\n   * @param {*} data The message to send\n   * @param {Object} options Options object\n   * @param {Boolean} [options.binary=false] Specifies whether `data` is binary\n   *     or text\n   * @param {Boolean} [options.compress=false] Specifies whether or not to\n   *     compress `data`\n   * @param {Boolean} [options.fin=false] Specifies whether the fragment is the\n   *     last one\n   * @param {Boolean} [options.mask=false] Specifies whether or not to mask\n   *     `data`\n   * @param {Function} [cb] Callback\n   * @public\n   */\n  send(data, options, cb) {\n    const perMessageDeflate = this._extensions[PerMessageDeflate.extensionName];\n    let opcode = options.binary ? 2 : 1;\n    let rsv1 = options.compress;\n\n    let byteLength;\n    let readOnly;\n\n    if (typeof data === 'string') {\n      byteLength = Buffer.byteLength(data);\n      readOnly = false;\n    } else {\n      data = toBuffer(data);\n      byteLength = data.length;\n      readOnly = toBuffer.readOnly;\n    }\n\n    if (this._firstFragment) {\n      this._firstFragment = false;\n      if (\n        rsv1 &&\n        perMessageDeflate &&\n        perMessageDeflate.params[\n          perMessageDeflate._isServer\n            ? 'server_no_context_takeover'\n            : 'client_no_context_takeover'\n        ]\n      ) {\n        rsv1 = byteLength >= perMessageDeflate._threshold;\n      }\n      this._compress = rsv1;\n    } else {\n      rsv1 = false;\n      opcode = 0;\n    }\n\n    if (options.fin) this._firstFragment = true;\n\n    if (perMessageDeflate) {\n      const opts = {\n        [kByteLength]: byteLength,\n        fin: options.fin,\n        generateMask: this._generateMask,\n        mask: options.mask,\n        maskBuffer: this._maskBuffer,\n        opcode,\n        readOnly,\n        rsv1\n      };\n\n      if (this._deflating) {\n        this.enqueue([this.dispatch, data, this._compress, opts, cb]);\n      } else {\n        this.dispatch(data, this._compress, opts, cb);\n      }\n    } else {\n      this.sendFrame(\n        Sender.frame(data, {\n          [kByteLength]: byteLength,\n          fin: options.fin,\n          generateMask: this._generateMask,\n          mask: options.mask,\n          maskBuffer: this._maskBuffer,\n          opcode,\n          readOnly,\n          rsv1: false\n        }),\n        cb\n      );\n    }\n  }\n\n  /**\n   * Dispatches a message.\n   *\n   * @param {(Buffer|String)} data The message to send\n   * @param {Boolean} [compress=false] Specifies whether or not to compress\n   *     `data`\n   * @param {Object} options Options object\n   * @param {Boolean} [options.fin=false] Specifies whether or not to set the\n   *     FIN bit\n   * @param {Function} [options.generateMask] The function used to generate the\n   *     masking key\n   * @param {Boolean} [options.mask=false] Specifies whether or not to mask\n   *     `data`\n   * @param {Buffer} [options.maskBuffer] The buffer used to store the masking\n   *     key\n   * @param {Number} options.opcode The opcode\n   * @param {Boolean} [options.readOnly=false] Specifies whether `data` can be\n   *     modified\n   * @param {Boolean} [options.rsv1=false] Specifies whether or not to set the\n   *     RSV1 bit\n   * @param {Function} [cb] Callback\n   * @private\n   */\n  dispatch(data, compress, options, cb) {\n    if (!compress) {\n      this.sendFrame(Sender.frame(data, options), cb);\n      return;\n    }\n\n    const perMessageDeflate = this._extensions[PerMessageDeflate.extensionName];\n\n    this._bufferedBytes += options[kByteLength];\n    this._deflating = true;\n    perMessageDeflate.compress(data, options.fin, (_, buf) => {\n      if (this._socket.destroyed) {\n        const err = new Error(\n          'The socket was closed while data was being compressed'\n        );\n\n        if (typeof cb === 'function') cb(err);\n\n        for (let i = 0; i < this._queue.length; i++) {\n          const params = this._queue[i];\n          const callback = params[params.length - 1];\n\n          if (typeof callback === 'function') callback(err);\n        }\n\n        return;\n      }\n\n      this._bufferedBytes -= options[kByteLength];\n      this._deflating = false;\n      options.readOnly = false;\n      this.sendFrame(Sender.frame(buf, options), cb);\n      this.dequeue();\n    });\n  }\n\n  /**\n   * Executes queued send operations.\n   *\n   * @private\n   */\n  dequeue() {\n    while (!this._deflating && this._queue.length) {\n      const params = this._queue.shift();\n\n      this._bufferedBytes -= params[3][kByteLength];\n      Reflect.apply(params[0], this, params.slice(1));\n    }\n  }\n\n  /**\n   * Enqueues a send operation.\n   *\n   * @param {Array} params Send operation parameters.\n   * @private\n   */\n  enqueue(params) {\n    this._bufferedBytes += params[3][kByteLength];\n    this._queue.push(params);\n  }\n\n  /**\n   * Sends a frame.\n   *\n   * @param {Buffer[]} list The frame to send\n   * @param {Function} [cb] Callback\n   * @private\n   */\n  sendFrame(list, cb) {\n    if (list.length === 2) {\n      this._socket.cork();\n      this._socket.write(list[0]);\n      this._socket.write(list[1], cb);\n      this._socket.uncork();\n    } else {\n      this._socket.write(list[0], cb);\n    }\n  }\n}\n\nmodule.exports = Sender;\n","'use strict';\n\nconst { Duplex } = require('stream');\n\n/**\n * Emits the `'close'` event on a stream.\n *\n * @param {Duplex} stream The stream.\n * @private\n */\nfunction emitClose(stream) {\n  stream.emit('close');\n}\n\n/**\n * The listener of the `'end'` event.\n *\n * @private\n */\nfunction duplexOnEnd() {\n  if (!this.destroyed && this._writableState.finished) {\n    this.destroy();\n  }\n}\n\n/**\n * The listener of the `'error'` event.\n *\n * @param {Error} err The error\n * @private\n */\nfunction duplexOnError(err) {\n  this.removeListener('error', duplexOnError);\n  this.destroy();\n  if (this.listenerCount('error') === 0) {\n    // Do not suppress the throwing behavior.\n    this.emit('error', err);\n  }\n}\n\n/**\n * Wraps a `WebSocket` in a duplex stream.\n *\n * @param {WebSocket} ws The `WebSocket` to wrap\n * @param {Object} [options] The options for the `Duplex` constructor\n * @return {Duplex} The duplex stream\n * @public\n */\nfunction createWebSocketStream(ws, options) {\n  let terminateOnDestroy = true;\n\n  const duplex = new Duplex({\n    ...options,\n    autoDestroy: false,\n    emitClose: false,\n    objectMode: false,\n    writableObjectMode: false\n  });\n\n  ws.on('message', function message(msg, isBinary) {\n    const data =\n      !isBinary && duplex._readableState.objectMode ? msg.toString() : msg;\n\n    if (!duplex.push(data)) ws.pause();\n  });\n\n  ws.once('error', function error(err) {\n    if (duplex.destroyed) return;\n\n    // Prevent `ws.terminate()` from being called by `duplex._destroy()`.\n    //\n    // - If the `'error'` event is emitted before the `'open'` event, then\n    //   `ws.terminate()` is a noop as no socket is assigned.\n    // - Otherwise, the error is re-emitted by the listener of the `'error'`\n    //   event of the `Receiver` object. The listener already closes the\n    //   connection by calling `ws.close()`. This allows a close frame to be\n    //   sent to the other peer. If `ws.terminate()` is called right after this,\n    //   then the close frame might not be sent.\n    terminateOnDestroy = false;\n    duplex.destroy(err);\n  });\n\n  ws.once('close', function close() {\n    if (duplex.destroyed) return;\n\n    duplex.push(null);\n  });\n\n  duplex._destroy = function (err, callback) {\n    if (ws.readyState === ws.CLOSED) {\n      callback(err);\n      process.nextTick(emitClose, duplex);\n      return;\n    }\n\n    let called = false;\n\n    ws.once('error', function error(err) {\n      called = true;\n      callback(err);\n    });\n\n    ws.once('close', function close() {\n      if (!called) callback(err);\n      process.nextTick(emitClose, duplex);\n    });\n\n    if (terminateOnDestroy) ws.terminate();\n  };\n\n  duplex._final = function (callback) {\n    if (ws.readyState === ws.CONNECTING) {\n      ws.once('open', function open() {\n        duplex._final(callback);\n      });\n      return;\n    }\n\n    // If the value of the `_socket` property is `null` it means that `ws` is a\n    // client websocket and the handshake failed. In fact, when this happens, a\n    // socket is never assigned to the websocket. Wait for the `'error'` event\n    // that will be emitted by the websocket.\n    if (ws._socket === null) return;\n\n    if (ws._socket._writableState.finished) {\n      callback();\n      if (duplex._readableState.endEmitted) duplex.destroy();\n    } else {\n      ws._socket.once('finish', function finish() {\n        // `duplex` is not destroyed here because the `'end'` event will be\n        // emitted on `duplex` after this `'finish'` event. The EOF signaling\n        // `null` chunk is, in fact, pushed when the websocket emits `'close'`.\n        callback();\n      });\n      ws.close();\n    }\n  };\n\n  duplex._read = function () {\n    if (ws.isPaused) ws.resume();\n  };\n\n  duplex._write = function (chunk, encoding, callback) {\n    if (ws.readyState === ws.CONNECTING) {\n      ws.once('open', function open() {\n        duplex._write(chunk, encoding, callback);\n      });\n      return;\n    }\n\n    ws.send(chunk, callback);\n  };\n\n  duplex.on('end', duplexOnEnd);\n  duplex.on('error', duplexOnError);\n  return duplex;\n}\n\nmodule.exports = createWebSocketStream;\n","'use strict';\n\nconst { tokenChars } = require('./validation');\n\n/**\n * Parses the `Sec-WebSocket-Protocol` header into a set of subprotocol names.\n *\n * @param {String} header The field value of the header\n * @return {Set} The subprotocol names\n * @public\n */\nfunction parse(header) {\n  const protocols = new Set();\n  let start = -1;\n  let end = -1;\n  let i = 0;\n\n  for (i; i < header.length; i++) {\n    const code = header.charCodeAt(i);\n\n    if (end === -1 && tokenChars[code] === 1) {\n      if (start === -1) start = i;\n    } else if (\n      i !== 0 &&\n      (code === 0x20 /* ' ' */ || code === 0x09) /* '\\t' */\n    ) {\n      if (end === -1 && start !== -1) end = i;\n    } else if (code === 0x2c /* ',' */) {\n      if (start === -1) {\n        throw new SyntaxError(`Unexpected character at index ${i}`);\n      }\n\n      if (end === -1) end = i;\n\n      const protocol = header.slice(start, end);\n\n      if (protocols.has(protocol)) {\n        throw new SyntaxError(`The \"${protocol}\" subprotocol is duplicated`);\n      }\n\n      protocols.add(protocol);\n      start = end = -1;\n    } else {\n      throw new SyntaxError(`Unexpected character at index ${i}`);\n    }\n  }\n\n  if (start === -1 || end !== -1) {\n    throw new SyntaxError('Unexpected end of input');\n  }\n\n  const protocol = header.slice(start, i);\n\n  if (protocols.has(protocol)) {\n    throw new SyntaxError(`The \"${protocol}\" subprotocol is duplicated`);\n  }\n\n  protocols.add(protocol);\n  return protocols;\n}\n\nmodule.exports = { parse };\n","'use strict';\n\n//\n// Allowed token characters:\n//\n// '!', '#', '$', '%', '&', ''', '*', '+', '-',\n// '.', 0-9, A-Z, '^', '_', '`', a-z, '|', '~'\n//\n// tokenChars[32] === 0 // ' '\n// tokenChars[33] === 1 // '!'\n// tokenChars[34] === 0 // '\"'\n// ...\n//\n// prettier-ignore\nconst tokenChars = [\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, // 0 - 15\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, // 16 - 31\n  0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, // 32 - 47\n  1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, // 48 - 63\n  0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, // 64 - 79\n  1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, // 80 - 95\n  1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, // 96 - 111\n  1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0 // 112 - 127\n];\n\n/**\n * Checks if a status code is allowed in a close frame.\n *\n * @param {Number} code The status code\n * @return {Boolean} `true` if the status code is valid, else `false`\n * @public\n */\nfunction isValidStatusCode(code) {\n  return (\n    (code >= 1000 &&\n      code <= 1014 &&\n      code !== 1004 &&\n      code !== 1005 &&\n      code !== 1006) ||\n    (code >= 3000 && code <= 4999)\n  );\n}\n\n/**\n * Checks if a given buffer contains only correct UTF-8.\n * Ported from https://www.cl.cam.ac.uk/%7Emgk25/ucs/utf8_check.c by\n * Markus Kuhn.\n *\n * @param {Buffer} buf The buffer to check\n * @return {Boolean} `true` if `buf` contains only correct UTF-8, else `false`\n * @public\n */\nfunction _isValidUTF8(buf) {\n  const len = buf.length;\n  let i = 0;\n\n  while (i < len) {\n    if ((buf[i] & 0x80) === 0) {\n      // 0xxxxxxx\n      i++;\n    } else if ((buf[i] & 0xe0) === 0xc0) {\n      // 110xxxxx 10xxxxxx\n      if (\n        i + 1 === len ||\n        (buf[i + 1] & 0xc0) !== 0x80 ||\n        (buf[i] & 0xfe) === 0xc0 // Overlong\n      ) {\n        return false;\n      }\n\n      i += 2;\n    } else if ((buf[i] & 0xf0) === 0xe0) {\n      // 1110xxxx 10xxxxxx 10xxxxxx\n      if (\n        i + 2 >= len ||\n        (buf[i + 1] & 0xc0) !== 0x80 ||\n        (buf[i + 2] & 0xc0) !== 0x80 ||\n        (buf[i] === 0xe0 && (buf[i + 1] & 0xe0) === 0x80) || // Overlong\n        (buf[i] === 0xed && (buf[i + 1] & 0xe0) === 0xa0) // Surrogate (U+D800 - U+DFFF)\n      ) {\n        return false;\n      }\n\n      i += 3;\n    } else if ((buf[i] & 0xf8) === 0xf0) {\n      // 11110xxx 10xxxxxx 10xxxxxx 10xxxxxx\n      if (\n        i + 3 >= len ||\n        (buf[i + 1] & 0xc0) !== 0x80 ||\n        (buf[i + 2] & 0xc0) !== 0x80 ||\n        (buf[i + 3] & 0xc0) !== 0x80 ||\n        (buf[i] === 0xf0 && (buf[i + 1] & 0xf0) === 0x80) || // Overlong\n        (buf[i] === 0xf4 && buf[i + 1] > 0x8f) ||\n        buf[i] > 0xf4 // > U+10FFFF\n      ) {\n        return false;\n      }\n\n      i += 4;\n    } else {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nmodule.exports = {\n  isValidStatusCode,\n  isValidUTF8: _isValidUTF8,\n  tokenChars\n};\n\n/* istanbul ignore else  */\nif (!process.env.WS_NO_UTF_8_VALIDATE) {\n  try {\n    const isValidUTF8 = require('utf-8-validate');\n\n    module.exports.isValidUTF8 = function (buf) {\n      return buf.length < 150 ? _isValidUTF8(buf) : isValidUTF8(buf);\n    };\n  } catch (e) {\n    // Continue regardless of the error.\n  }\n}\n","/* eslint no-unused-vars: [\"error\", { \"varsIgnorePattern\": \"^net|tls|https$\" }] */\n\n'use strict';\n\nconst EventEmitter = require('events');\nconst http = require('http');\nconst https = require('https');\nconst net = require('net');\nconst tls = require('tls');\nconst { createHash } = require('crypto');\n\nconst extension = require('./extension');\nconst PerMessageDeflate = require('./permessage-deflate');\nconst subprotocol = require('./subprotocol');\nconst WebSocket = require('./websocket');\nconst { GUID, kWebSocket } = require('./constants');\n\nconst keyRegex = /^[+/0-9A-Za-z]{22}==$/;\n\nconst RUNNING = 0;\nconst CLOSING = 1;\nconst CLOSED = 2;\n\n/**\n * Class representing a WebSocket server.\n *\n * @extends EventEmitter\n */\nclass WebSocketServer extends EventEmitter {\n  /**\n   * Create a `WebSocketServer` instance.\n   *\n   * @param {Object} options Configuration options\n   * @param {Number} [options.backlog=511] The maximum length of the queue of\n   *     pending connections\n   * @param {Boolean} [options.clientTracking=true] Specifies whether or not to\n   *     track clients\n   * @param {Function} [options.handleProtocols] A hook to handle protocols\n   * @param {String} [options.host] The hostname where to bind the server\n   * @param {Number} [options.maxPayload=104857600] The maximum allowed message\n   *     size\n   * @param {Boolean} [options.noServer=false] Enable no server mode\n   * @param {String} [options.path] Accept only connections matching this path\n   * @param {(Boolean|Object)} [options.perMessageDeflate=false] Enable/disable\n   *     permessage-deflate\n   * @param {Number} [options.port] The port where to bind the server\n   * @param {(http.Server|https.Server)} [options.server] A pre-created HTTP/S\n   *     server to use\n   * @param {Boolean} [options.skipUTF8Validation=false] Specifies whether or\n   *     not to skip UTF-8 validation for text and close messages\n   * @param {Function} [options.verifyClient] A hook to reject connections\n   * @param {Function} [options.WebSocket=WebSocket] Specifies the `WebSocket`\n   *     class to use. It must be the `WebSocket` class or class that extends it\n   * @param {Function} [callback] A listener for the `listening` event\n   */\n  constructor(options, callback) {\n    super();\n\n    options = {\n      maxPayload: 100 * 1024 * 1024,\n      skipUTF8Validation: false,\n      perMessageDeflate: false,\n      handleProtocols: null,\n      clientTracking: true,\n      verifyClient: null,\n      noServer: false,\n      backlog: null, // use default (511 as implemented in net.js)\n      server: null,\n      host: null,\n      path: null,\n      port: null,\n      WebSocket,\n      ...options\n    };\n\n    if (\n      (options.port == null && !options.server && !options.noServer) ||\n      (options.port != null && (options.server || options.noServer)) ||\n      (options.server && options.noServer)\n    ) {\n      throw new TypeError(\n        'One and only one of the \"port\", \"server\", or \"noServer\" options ' +\n          'must be specified'\n      );\n    }\n\n    if (options.port != null) {\n      this._server = http.createServer((req, res) => {\n        const body = http.STATUS_CODES[426];\n\n        res.writeHead(426, {\n          'Content-Length': body.length,\n          'Content-Type': 'text/plain'\n        });\n        res.end(body);\n      });\n      this._server.listen(\n        options.port,\n        options.host,\n        options.backlog,\n        callback\n      );\n    } else if (options.server) {\n      this._server = options.server;\n    }\n\n    if (this._server) {\n      const emitConnection = this.emit.bind(this, 'connection');\n\n      this._removeListeners = addListeners(this._server, {\n        listening: this.emit.bind(this, 'listening'),\n        error: this.emit.bind(this, 'error'),\n        upgrade: (req, socket, head) => {\n          this.handleUpgrade(req, socket, head, emitConnection);\n        }\n      });\n    }\n\n    if (options.perMessageDeflate === true) options.perMessageDeflate = {};\n    if (options.clientTracking) {\n      this.clients = new Set();\n      this._shouldEmitClose = false;\n    }\n\n    this.options = options;\n    this._state = RUNNING;\n  }\n\n  /**\n   * Returns the bound address, the address family name, and port of the server\n   * as reported by the operating system if listening on an IP socket.\n   * If the server is listening on a pipe or UNIX domain socket, the name is\n   * returned as a string.\n   *\n   * @return {(Object|String|null)} The address of the server\n   * @public\n   */\n  address() {\n    if (this.options.noServer) {\n      throw new Error('The server is operating in \"noServer\" mode');\n    }\n\n    if (!this._server) return null;\n    return this._server.address();\n  }\n\n  /**\n   * Stop the server from accepting new connections and emit the `'close'` event\n   * when all existing connections are closed.\n   *\n   * @param {Function} [cb] A one-time listener for the `'close'` event\n   * @public\n   */\n  close(cb) {\n    if (this._state === CLOSED) {\n      if (cb) {\n        this.once('close', () => {\n          cb(new Error('The server is not running'));\n        });\n      }\n\n      process.nextTick(emitClose, this);\n      return;\n    }\n\n    if (cb) this.once('close', cb);\n\n    if (this._state === CLOSING) return;\n    this._state = CLOSING;\n\n    if (this.options.noServer || this.options.server) {\n      if (this._server) {\n        this._removeListeners();\n        this._removeListeners = this._server = null;\n      }\n\n      if (this.clients) {\n        if (!this.clients.size) {\n          process.nextTick(emitClose, this);\n        } else {\n          this._shouldEmitClose = true;\n        }\n      } else {\n        process.nextTick(emitClose, this);\n      }\n    } else {\n      const server = this._server;\n\n      this._removeListeners();\n      this._removeListeners = this._server = null;\n\n      //\n      // The HTTP/S server was created internally. Close it, and rely on its\n      // `'close'` event.\n      //\n      server.close(() => {\n        emitClose(this);\n      });\n    }\n  }\n\n  /**\n   * See if a given request should be handled by this server instance.\n   *\n   * @param {http.IncomingMessage} req Request object to inspect\n   * @return {Boolean} `true` if the request is valid, else `false`\n   * @public\n   */\n  shouldHandle(req) {\n    if (this.options.path) {\n      const index = req.url.indexOf('?');\n      const pathname = index !== -1 ? req.url.slice(0, index) : req.url;\n\n      if (pathname !== this.options.path) return false;\n    }\n\n    return true;\n  }\n\n  /**\n   * Handle a HTTP Upgrade request.\n   *\n   * @param {http.IncomingMessage} req The request object\n   * @param {(net.Socket|tls.Socket)} socket The network socket between the\n   *     server and client\n   * @param {Buffer} head The first packet of the upgraded stream\n   * @param {Function} cb Callback\n   * @public\n   */\n  handleUpgrade(req, socket, head, cb) {\n    socket.on('error', socketOnError);\n\n    const key = req.headers['sec-websocket-key'];\n    const version = +req.headers['sec-websocket-version'];\n\n    if (req.method !== 'GET') {\n      const message = 'Invalid HTTP method';\n      abortHandshakeOrEmitwsClientError(this, req, socket, 405, message);\n      return;\n    }\n\n    if (req.headers.upgrade.toLowerCase() !== 'websocket') {\n      const message = 'Invalid Upgrade header';\n      abortHandshakeOrEmitwsClientError(this, req, socket, 400, message);\n      return;\n    }\n\n    if (!key || !keyRegex.test(key)) {\n      const message = 'Missing or invalid Sec-WebSocket-Key header';\n      abortHandshakeOrEmitwsClientError(this, req, socket, 400, message);\n      return;\n    }\n\n    if (version !== 8 && version !== 13) {\n      const message = 'Missing or invalid Sec-WebSocket-Version header';\n      abortHandshakeOrEmitwsClientError(this, req, socket, 400, message);\n      return;\n    }\n\n    if (!this.shouldHandle(req)) {\n      abortHandshake(socket, 400);\n      return;\n    }\n\n    const secWebSocketProtocol = req.headers['sec-websocket-protocol'];\n    let protocols = new Set();\n\n    if (secWebSocketProtocol !== undefined) {\n      try {\n        protocols = subprotocol.parse(secWebSocketProtocol);\n      } catch (err) {\n        const message = 'Invalid Sec-WebSocket-Protocol header';\n        abortHandshakeOrEmitwsClientError(this, req, socket, 400, message);\n        return;\n      }\n    }\n\n    const secWebSocketExtensions = req.headers['sec-websocket-extensions'];\n    const extensions = {};\n\n    if (\n      this.options.perMessageDeflate &&\n      secWebSocketExtensions !== undefined\n    ) {\n      const perMessageDeflate = new PerMessageDeflate(\n        this.options.perMessageDeflate,\n        true,\n        this.options.maxPayload\n      );\n\n      try {\n        const offers = extension.parse(secWebSocketExtensions);\n\n        if (offers[PerMessageDeflate.extensionName]) {\n          perMessageDeflate.accept(offers[PerMessageDeflate.extensionName]);\n          extensions[PerMessageDeflate.extensionName] = perMessageDeflate;\n        }\n      } catch (err) {\n        const message =\n          'Invalid or unacceptable Sec-WebSocket-Extensions header';\n        abortHandshakeOrEmitwsClientError(this, req, socket, 400, message);\n        return;\n      }\n    }\n\n    //\n    // Optionally call external client verification handler.\n    //\n    if (this.options.verifyClient) {\n      const info = {\n        origin:\n          req.headers[`${version === 8 ? 'sec-websocket-origin' : 'origin'}`],\n        secure: !!(req.socket.authorized || req.socket.encrypted),\n        req\n      };\n\n      if (this.options.verifyClient.length === 2) {\n        this.options.verifyClient(info, (verified, code, message, headers) => {\n          if (!verified) {\n            return abortHandshake(socket, code || 401, message, headers);\n          }\n\n          this.completeUpgrade(\n            extensions,\n            key,\n            protocols,\n            req,\n            socket,\n            head,\n            cb\n          );\n        });\n        return;\n      }\n\n      if (!this.options.verifyClient(info)) return abortHandshake(socket, 401);\n    }\n\n    this.completeUpgrade(extensions, key, protocols, req, socket, head, cb);\n  }\n\n  /**\n   * Upgrade the connection to WebSocket.\n   *\n   * @param {Object} extensions The accepted extensions\n   * @param {String} key The value of the `Sec-WebSocket-Key` header\n   * @param {Set} protocols The subprotocols\n   * @param {http.IncomingMessage} req The request object\n   * @param {(net.Socket|tls.Socket)} socket The network socket between the\n   *     server and client\n   * @param {Buffer} head The first packet of the upgraded stream\n   * @param {Function} cb Callback\n   * @throws {Error} If called more than once with the same socket\n   * @private\n   */\n  completeUpgrade(extensions, key, protocols, req, socket, head, cb) {\n    //\n    // Destroy the socket if the client has already sent a FIN packet.\n    //\n    if (!socket.readable || !socket.writable) return socket.destroy();\n\n    if (socket[kWebSocket]) {\n      throw new Error(\n        'server.handleUpgrade() was called more than once with the same ' +\n          'socket, possibly due to a misconfiguration'\n      );\n    }\n\n    if (this._state > RUNNING) return abortHandshake(socket, 503);\n\n    const digest = createHash('sha1')\n      .update(key + GUID)\n      .digest('base64');\n\n    const headers = [\n      'HTTP/1.1 101 Switching Protocols',\n      'Upgrade: websocket',\n      'Connection: Upgrade',\n      `Sec-WebSocket-Accept: ${digest}`\n    ];\n\n    const ws = new this.options.WebSocket(null);\n\n    if (protocols.size) {\n      //\n      // Optionally call external protocol selection handler.\n      //\n      const protocol = this.options.handleProtocols\n        ? this.options.handleProtocols(protocols, req)\n        : protocols.values().next().value;\n\n      if (protocol) {\n        headers.push(`Sec-WebSocket-Protocol: ${protocol}`);\n        ws._protocol = protocol;\n      }\n    }\n\n    if (extensions[PerMessageDeflate.extensionName]) {\n      const params = extensions[PerMessageDeflate.extensionName].params;\n      const value = extension.format({\n        [PerMessageDeflate.extensionName]: [params]\n      });\n      headers.push(`Sec-WebSocket-Extensions: ${value}`);\n      ws._extensions = extensions;\n    }\n\n    //\n    // Allow external modification/inspection of handshake headers.\n    //\n    this.emit('headers', headers, req);\n\n    socket.write(headers.concat('\\r\\n').join('\\r\\n'));\n    socket.removeListener('error', socketOnError);\n\n    ws.setSocket(socket, head, {\n      maxPayload: this.options.maxPayload,\n      skipUTF8Validation: this.options.skipUTF8Validation\n    });\n\n    if (this.clients) {\n      this.clients.add(ws);\n      ws.on('close', () => {\n        this.clients.delete(ws);\n\n        if (this._shouldEmitClose && !this.clients.size) {\n          process.nextTick(emitClose, this);\n        }\n      });\n    }\n\n    cb(ws, req);\n  }\n}\n\nmodule.exports = WebSocketServer;\n\n/**\n * Add event listeners on an `EventEmitter` using a map of <event, listener>\n * pairs.\n *\n * @param {EventEmitter} server The event emitter\n * @param {Object.<String, Function>} map The listeners to add\n * @return {Function} A function that will remove the added listeners when\n *     called\n * @private\n */\nfunction addListeners(server, map) {\n  for (const event of Object.keys(map)) server.on(event, map[event]);\n\n  return function removeListeners() {\n    for (const event of Object.keys(map)) {\n      server.removeListener(event, map[event]);\n    }\n  };\n}\n\n/**\n * Emit a `'close'` event on an `EventEmitter`.\n *\n * @param {EventEmitter} server The event emitter\n * @private\n */\nfunction emitClose(server) {\n  server._state = CLOSED;\n  server.emit('close');\n}\n\n/**\n * Handle socket errors.\n *\n * @private\n */\nfunction socketOnError() {\n  this.destroy();\n}\n\n/**\n * Close the connection when preconditions are not fulfilled.\n *\n * @param {(net.Socket|tls.Socket)} socket The socket of the upgrade request\n * @param {Number} code The HTTP response status code\n * @param {String} [message] The HTTP response body\n * @param {Object} [headers] Additional HTTP response headers\n * @private\n */\nfunction abortHandshake(socket, code, message, headers) {\n  //\n  // The socket is writable unless the user destroyed or ended it before calling\n  // `server.handleUpgrade()` or in the `verifyClient` function, which is a user\n  // error. Handling this does not make much sense as the worst that can happen\n  // is that some of the data written by the user might be discarded due to the\n  // call to `socket.end()` below, which triggers an `'error'` event that in\n  // turn causes the socket to be destroyed.\n  //\n  message = message || http.STATUS_CODES[code];\n  headers = {\n    Connection: 'close',\n    'Content-Type': 'text/html',\n    'Content-Length': Buffer.byteLength(message),\n    ...headers\n  };\n\n  socket.once('finish', socket.destroy);\n\n  socket.end(\n    `HTTP/1.1 ${code} ${http.STATUS_CODES[code]}\\r\\n` +\n      Object.keys(headers)\n        .map((h) => `${h}: ${headers[h]}`)\n        .join('\\r\\n') +\n      '\\r\\n\\r\\n' +\n      message\n  );\n}\n\n/**\n * Emit a `'wsClientError'` event on a `WebSocketServer` if there is at least\n * one listener for it, otherwise call `abortHandshake()`.\n *\n * @param {WebSocketServer} server The WebSocket server\n * @param {http.IncomingMessage} req The request object\n * @param {(net.Socket|tls.Socket)} socket The socket of the upgrade request\n * @param {Number} code The HTTP response status code\n * @param {String} message The HTTP response body\n * @private\n */\nfunction abortHandshakeOrEmitwsClientError(server, req, socket, code, message) {\n  if (server.listenerCount('wsClientError')) {\n    const err = new Error(message);\n    Error.captureStackTrace(err, abortHandshakeOrEmitwsClientError);\n\n    server.emit('wsClientError', err, socket, req);\n  } else {\n    abortHandshake(socket, code, message);\n  }\n}\n","/* eslint no-unused-vars: [\"error\", { \"varsIgnorePattern\": \"^Readable$\" }] */\n\n'use strict';\n\nconst EventEmitter = require('events');\nconst https = require('https');\nconst http = require('http');\nconst net = require('net');\nconst tls = require('tls');\nconst { randomBytes, createHash } = require('crypto');\nconst { Readable } = require('stream');\nconst { URL } = require('url');\n\nconst PerMessageDeflate = require('./permessage-deflate');\nconst Receiver = require('./receiver');\nconst Sender = require('./sender');\nconst {\n  BINARY_TYPES,\n  EMPTY_BUFFER,\n  GUID,\n  kForOnEventAttribute,\n  kListener,\n  kStatusCode,\n  kWebSocket,\n  NOOP\n} = require('./constants');\nconst {\n  EventTarget: { addEventListener, removeEventListener }\n} = require('./event-target');\nconst { format, parse } = require('./extension');\nconst { toBuffer } = require('./buffer-util');\n\nconst closeTimeout = 30 * 1000;\nconst kAborted = Symbol('kAborted');\nconst protocolVersions = [8, 13];\nconst readyStates = ['CONNECTING', 'OPEN', 'CLOSING', 'CLOSED'];\nconst subprotocolRegex = /^[!#$%&'*+\\-.0-9A-Z^_`|a-z~]+$/;\n\n/**\n * Class representing a WebSocket.\n *\n * @extends EventEmitter\n */\nclass WebSocket extends EventEmitter {\n  /**\n   * Create a new `WebSocket`.\n   *\n   * @param {(String|URL)} address The URL to which to connect\n   * @param {(String|String[])} [protocols] The subprotocols\n   * @param {Object} [options] Connection options\n   */\n  constructor(address, protocols, options) {\n    super();\n\n    this._binaryType = BINARY_TYPES[0];\n    this._closeCode = 1006;\n    this._closeFrameReceived = false;\n    this._closeFrameSent = false;\n    this._closeMessage = EMPTY_BUFFER;\n    this._closeTimer = null;\n    this._extensions = {};\n    this._paused = false;\n    this._protocol = '';\n    this._readyState = WebSocket.CONNECTING;\n    this._receiver = null;\n    this._sender = null;\n    this._socket = null;\n\n    if (address !== null) {\n      this._bufferedAmount = 0;\n      this._isServer = false;\n      this._redirects = 0;\n\n      if (protocols === undefined) {\n        protocols = [];\n      } else if (!Array.isArray(protocols)) {\n        if (typeof protocols === 'object' && protocols !== null) {\n          options = protocols;\n          protocols = [];\n        } else {\n          protocols = [protocols];\n        }\n      }\n\n      initAsClient(this, address, protocols, options);\n    } else {\n      this._isServer = true;\n    }\n  }\n\n  /**\n   * This deviates from the WHATWG interface since ws doesn't support the\n   * required default \"blob\" type (instead we define a custom \"nodebuffer\"\n   * type).\n   *\n   * @type {String}\n   */\n  get binaryType() {\n    return this._binaryType;\n  }\n\n  set binaryType(type) {\n    if (!BINARY_TYPES.includes(type)) return;\n\n    this._binaryType = type;\n\n    //\n    // Allow to change `binaryType` on the fly.\n    //\n    if (this._receiver) this._receiver._binaryType = type;\n  }\n\n  /**\n   * @type {Number}\n   */\n  get bufferedAmount() {\n    if (!this._socket) return this._bufferedAmount;\n\n    return this._socket._writableState.length + this._sender._bufferedBytes;\n  }\n\n  /**\n   * @type {String}\n   */\n  get extensions() {\n    return Object.keys(this._extensions).join();\n  }\n\n  /**\n   * @type {Boolean}\n   */\n  get isPaused() {\n    return this._paused;\n  }\n\n  /**\n   * @type {Function}\n   */\n  /* istanbul ignore next */\n  get onclose() {\n    return null;\n  }\n\n  /**\n   * @type {Function}\n   */\n  /* istanbul ignore next */\n  get onerror() {\n    return null;\n  }\n\n  /**\n   * @type {Function}\n   */\n  /* istanbul ignore next */\n  get onopen() {\n    return null;\n  }\n\n  /**\n   * @type {Function}\n   */\n  /* istanbul ignore next */\n  get onmessage() {\n    return null;\n  }\n\n  /**\n   * @type {String}\n   */\n  get protocol() {\n    return this._protocol;\n  }\n\n  /**\n   * @type {Number}\n   */\n  get readyState() {\n    return this._readyState;\n  }\n\n  /**\n   * @type {String}\n   */\n  get url() {\n    return this._url;\n  }\n\n  /**\n   * Set up the socket and the internal resources.\n   *\n   * @param {(net.Socket|tls.Socket)} socket The network socket between the\n   *     server and client\n   * @param {Buffer} head The first packet of the upgraded stream\n   * @param {Object} options Options object\n   * @param {Function} [options.generateMask] The function used to generate the\n   *     masking key\n   * @param {Number} [options.maxPayload=0] The maximum allowed message size\n   * @param {Boolean} [options.skipUTF8Validation=false] Specifies whether or\n   *     not to skip UTF-8 validation for text and close messages\n   * @private\n   */\n  setSocket(socket, head, options) {\n    const receiver = new Receiver({\n      binaryType: this.binaryType,\n      extensions: this._extensions,\n      isServer: this._isServer,\n      maxPayload: options.maxPayload,\n      skipUTF8Validation: options.skipUTF8Validation\n    });\n\n    this._sender = new Sender(socket, this._extensions, options.generateMask);\n    this._receiver = receiver;\n    this._socket = socket;\n\n    receiver[kWebSocket] = this;\n    socket[kWebSocket] = this;\n\n    receiver.on('conclude', receiverOnConclude);\n    receiver.on('drain', receiverOnDrain);\n    receiver.on('error', receiverOnError);\n    receiver.on('message', receiverOnMessage);\n    receiver.on('ping', receiverOnPing);\n    receiver.on('pong', receiverOnPong);\n\n    socket.setTimeout(0);\n    socket.setNoDelay();\n\n    if (head.length > 0) socket.unshift(head);\n\n    socket.on('close', socketOnClose);\n    socket.on('data', socketOnData);\n    socket.on('end', socketOnEnd);\n    socket.on('error', socketOnError);\n\n    this._readyState = WebSocket.OPEN;\n    this.emit('open');\n  }\n\n  /**\n   * Emit the `'close'` event.\n   *\n   * @private\n   */\n  emitClose() {\n    if (!this._socket) {\n      this._readyState = WebSocket.CLOSED;\n      this.emit('close', this._closeCode, this._closeMessage);\n      return;\n    }\n\n    if (this._extensions[PerMessageDeflate.extensionName]) {\n      this._extensions[PerMessageDeflate.extensionName].cleanup();\n    }\n\n    this._receiver.removeAllListeners();\n    this._readyState = WebSocket.CLOSED;\n    this.emit('close', this._closeCode, this._closeMessage);\n  }\n\n  /**\n   * Start a closing handshake.\n   *\n   *          +----------+   +-----------+   +----------+\n   *     - - -|ws.close()|-->|close frame|-->|ws.close()|- - -\n   *    |     +----------+   +-----------+   +----------+     |\n   *          +----------+   +-----------+         |\n   * CLOSING  |ws.close()|<--|close frame|<--+-----+       CLOSING\n   *          +----------+   +-----------+   |\n   *    |           |                        |   +---+        |\n   *                +------------------------+-->|fin| - - - -\n   *    |         +---+                      |   +---+\n   *     - - - - -|fin|<---------------------+\n   *              +---+\n   *\n   * @param {Number} [code] Status code explaining why the connection is closing\n   * @param {(String|Buffer)} [data] The reason why the connection is\n   *     closing\n   * @public\n   */\n  close(code, data) {\n    if (this.readyState === WebSocket.CLOSED) return;\n    if (this.readyState === WebSocket.CONNECTING) {\n      const msg = 'WebSocket was closed before the connection was established';\n      return abortHandshake(this, this._req, msg);\n    }\n\n    if (this.readyState === WebSocket.CLOSING) {\n      if (\n        this._closeFrameSent &&\n        (this._closeFrameReceived || this._receiver._writableState.errorEmitted)\n      ) {\n        this._socket.end();\n      }\n\n      return;\n    }\n\n    this._readyState = WebSocket.CLOSING;\n    this._sender.close(code, data, !this._isServer, (err) => {\n      //\n      // This error is handled by the `'error'` listener on the socket. We only\n      // want to know if the close frame has been sent here.\n      //\n      if (err) return;\n\n      this._closeFrameSent = true;\n\n      if (\n        this._closeFrameReceived ||\n        this._receiver._writableState.errorEmitted\n      ) {\n        this._socket.end();\n      }\n    });\n\n    //\n    // Specify a timeout for the closing handshake to complete.\n    //\n    this._closeTimer = setTimeout(\n      this._socket.destroy.bind(this._socket),\n      closeTimeout\n    );\n  }\n\n  /**\n   * Pause the socket.\n   *\n   * @public\n   */\n  pause() {\n    if (\n      this.readyState === WebSocket.CONNECTING ||\n      this.readyState === WebSocket.CLOSED\n    ) {\n      return;\n    }\n\n    this._paused = true;\n    this._socket.pause();\n  }\n\n  /**\n   * Send a ping.\n   *\n   * @param {*} [data] The data to send\n   * @param {Boolean} [mask] Indicates whether or not to mask `data`\n   * @param {Function} [cb] Callback which is executed when the ping is sent\n   * @public\n   */\n  ping(data, mask, cb) {\n    if (this.readyState === WebSocket.CONNECTING) {\n      throw new Error('WebSocket is not open: readyState 0 (CONNECTING)');\n    }\n\n    if (typeof data === 'function') {\n      cb = data;\n      data = mask = undefined;\n    } else if (typeof mask === 'function') {\n      cb = mask;\n      mask = undefined;\n    }\n\n    if (typeof data === 'number') data = data.toString();\n\n    if (this.readyState !== WebSocket.OPEN) {\n      sendAfterClose(this, data, cb);\n      return;\n    }\n\n    if (mask === undefined) mask = !this._isServer;\n    this._sender.ping(data || EMPTY_BUFFER, mask, cb);\n  }\n\n  /**\n   * Send a pong.\n   *\n   * @param {*} [data] The data to send\n   * @param {Boolean} [mask] Indicates whether or not to mask `data`\n   * @param {Function} [cb] Callback which is executed when the pong is sent\n   * @public\n   */\n  pong(data, mask, cb) {\n    if (this.readyState === WebSocket.CONNECTING) {\n      throw new Error('WebSocket is not open: readyState 0 (CONNECTING)');\n    }\n\n    if (typeof data === 'function') {\n      cb = data;\n      data = mask = undefined;\n    } else if (typeof mask === 'function') {\n      cb = mask;\n      mask = undefined;\n    }\n\n    if (typeof data === 'number') data = data.toString();\n\n    if (this.readyState !== WebSocket.OPEN) {\n      sendAfterClose(this, data, cb);\n      return;\n    }\n\n    if (mask === undefined) mask = !this._isServer;\n    this._sender.pong(data || EMPTY_BUFFER, mask, cb);\n  }\n\n  /**\n   * Resume the socket.\n   *\n   * @public\n   */\n  resume() {\n    if (\n      this.readyState === WebSocket.CONNECTING ||\n      this.readyState === WebSocket.CLOSED\n    ) {\n      return;\n    }\n\n    this._paused = false;\n    if (!this._receiver._writableState.needDrain) this._socket.resume();\n  }\n\n  /**\n   * Send a data message.\n   *\n   * @param {*} data The message to send\n   * @param {Object} [options] Options object\n   * @param {Boolean} [options.binary] Specifies whether `data` is binary or\n   *     text\n   * @param {Boolean} [options.compress] Specifies whether or not to compress\n   *     `data`\n   * @param {Boolean} [options.fin=true] Specifies whether the fragment is the\n   *     last one\n   * @param {Boolean} [options.mask] Specifies whether or not to mask `data`\n   * @param {Function} [cb] Callback which is executed when data is written out\n   * @public\n   */\n  send(data, options, cb) {\n    if (this.readyState === WebSocket.CONNECTING) {\n      throw new Error('WebSocket is not open: readyState 0 (CONNECTING)');\n    }\n\n    if (typeof options === 'function') {\n      cb = options;\n      options = {};\n    }\n\n    if (typeof data === 'number') data = data.toString();\n\n    if (this.readyState !== WebSocket.OPEN) {\n      sendAfterClose(this, data, cb);\n      return;\n    }\n\n    const opts = {\n      binary: typeof data !== 'string',\n      mask: !this._isServer,\n      compress: true,\n      fin: true,\n      ...options\n    };\n\n    if (!this._extensions[PerMessageDeflate.extensionName]) {\n      opts.compress = false;\n    }\n\n    this._sender.send(data || EMPTY_BUFFER, opts, cb);\n  }\n\n  /**\n   * Forcibly close the connection.\n   *\n   * @public\n   */\n  terminate() {\n    if (this.readyState === WebSocket.CLOSED) return;\n    if (this.readyState === WebSocket.CONNECTING) {\n      const msg = 'WebSocket was closed before the connection was established';\n      return abortHandshake(this, this._req, msg);\n    }\n\n    if (this._socket) {\n      this._readyState = WebSocket.CLOSING;\n      this._socket.destroy();\n    }\n  }\n}\n\n/**\n * @constant {Number} CONNECTING\n * @memberof WebSocket\n */\nObject.defineProperty(WebSocket, 'CONNECTING', {\n  enumerable: true,\n  value: readyStates.indexOf('CONNECTING')\n});\n\n/**\n * @constant {Number} CONNECTING\n * @memberof WebSocket.prototype\n */\nObject.defineProperty(WebSocket.prototype, 'CONNECTING', {\n  enumerable: true,\n  value: readyStates.indexOf('CONNECTING')\n});\n\n/**\n * @constant {Number} OPEN\n * @memberof WebSocket\n */\nObject.defineProperty(WebSocket, 'OPEN', {\n  enumerable: true,\n  value: readyStates.indexOf('OPEN')\n});\n\n/**\n * @constant {Number} OPEN\n * @memberof WebSocket.prototype\n */\nObject.defineProperty(WebSocket.prototype, 'OPEN', {\n  enumerable: true,\n  value: readyStates.indexOf('OPEN')\n});\n\n/**\n * @constant {Number} CLOSING\n * @memberof WebSocket\n */\nObject.defineProperty(WebSocket, 'CLOSING', {\n  enumerable: true,\n  value: readyStates.indexOf('CLOSING')\n});\n\n/**\n * @constant {Number} CLOSING\n * @memberof WebSocket.prototype\n */\nObject.defineProperty(WebSocket.prototype, 'CLOSING', {\n  enumerable: true,\n  value: readyStates.indexOf('CLOSING')\n});\n\n/**\n * @constant {Number} CLOSED\n * @memberof WebSocket\n */\nObject.defineProperty(WebSocket, 'CLOSED', {\n  enumerable: true,\n  value: readyStates.indexOf('CLOSED')\n});\n\n/**\n * @constant {Number} CLOSED\n * @memberof WebSocket.prototype\n */\nObject.defineProperty(WebSocket.prototype, 'CLOSED', {\n  enumerable: true,\n  value: readyStates.indexOf('CLOSED')\n});\n\n[\n  'binaryType',\n  'bufferedAmount',\n  'extensions',\n  'isPaused',\n  'protocol',\n  'readyState',\n  'url'\n].forEach((property) => {\n  Object.defineProperty(WebSocket.prototype, property, { enumerable: true });\n});\n\n//\n// Add the `onopen`, `onerror`, `onclose`, and `onmessage` attributes.\n// See https://html.spec.whatwg.org/multipage/comms.html#the-websocket-interface\n//\n['open', 'error', 'close', 'message'].forEach((method) => {\n  Object.defineProperty(WebSocket.prototype, `on${method}`, {\n    enumerable: true,\n    get() {\n      for (const listener of this.listeners(method)) {\n        if (listener[kForOnEventAttribute]) return listener[kListener];\n      }\n\n      return null;\n    },\n    set(handler) {\n      for (const listener of this.listeners(method)) {\n        if (listener[kForOnEventAttribute]) {\n          this.removeListener(method, listener);\n          break;\n        }\n      }\n\n      if (typeof handler !== 'function') return;\n\n      this.addEventListener(method, handler, {\n        [kForOnEventAttribute]: true\n      });\n    }\n  });\n});\n\nWebSocket.prototype.addEventListener = addEventListener;\nWebSocket.prototype.removeEventListener = removeEventListener;\n\nmodule.exports = WebSocket;\n\n/**\n * Initialize a WebSocket client.\n *\n * @param {WebSocket} websocket The client to initialize\n * @param {(String|URL)} address The URL to which to connect\n * @param {Array} protocols The subprotocols\n * @param {Object} [options] Connection options\n * @param {Boolean} [options.followRedirects=false] Whether or not to follow\n *     redirects\n * @param {Function} [options.generateMask] The function used to generate the\n *     masking key\n * @param {Number} [options.handshakeTimeout] Timeout in milliseconds for the\n *     handshake request\n * @param {Number} [options.maxPayload=104857600] The maximum allowed message\n *     size\n * @param {Number} [options.maxRedirects=10] The maximum number of redirects\n *     allowed\n * @param {String} [options.origin] Value of the `Origin` or\n *     `Sec-WebSocket-Origin` header\n * @param {(Boolean|Object)} [options.perMessageDeflate=true] Enable/disable\n *     permessage-deflate\n * @param {Number} [options.protocolVersion=13] Value of the\n *     `Sec-WebSocket-Version` header\n * @param {Boolean} [options.skipUTF8Validation=false] Specifies whether or\n *     not to skip UTF-8 validation for text and close messages\n * @private\n */\nfunction initAsClient(websocket, address, protocols, options) {\n  const opts = {\n    protocolVersion: protocolVersions[1],\n    maxPayload: 100 * 1024 * 1024,\n    skipUTF8Validation: false,\n    perMessageDeflate: true,\n    followRedirects: false,\n    maxRedirects: 10,\n    ...options,\n    createConnection: undefined,\n    socketPath: undefined,\n    hostname: undefined,\n    protocol: undefined,\n    timeout: undefined,\n    method: 'GET',\n    host: undefined,\n    path: undefined,\n    port: undefined\n  };\n\n  if (!protocolVersions.includes(opts.protocolVersion)) {\n    throw new RangeError(\n      `Unsupported protocol version: ${opts.protocolVersion} ` +\n        `(supported versions: ${protocolVersions.join(', ')})`\n    );\n  }\n\n  let parsedUrl;\n\n  if (address instanceof URL) {\n    parsedUrl = address;\n    websocket._url = address.href;\n  } else {\n    try {\n      parsedUrl = new URL(address);\n    } catch (e) {\n      throw new SyntaxError(`Invalid URL: ${address}`);\n    }\n\n    websocket._url = address;\n  }\n\n  const isSecure = parsedUrl.protocol === 'wss:';\n  const isUnixSocket = parsedUrl.protocol === 'ws+unix:';\n  let invalidURLMessage;\n\n  if (parsedUrl.protocol !== 'ws:' && !isSecure && !isUnixSocket) {\n    invalidURLMessage =\n      'The URL\\'s protocol must be one of \"ws:\", \"wss:\", or \"ws+unix:\"';\n  } else if (isUnixSocket && !parsedUrl.pathname) {\n    invalidURLMessage = \"The URL's pathname is empty\";\n  } else if (parsedUrl.hash) {\n    invalidURLMessage = 'The URL contains a fragment identifier';\n  }\n\n  if (invalidURLMessage) {\n    const err = new SyntaxError(invalidURLMessage);\n\n    if (websocket._redirects === 0) {\n      throw err;\n    } else {\n      emitErrorAndClose(websocket, err);\n      return;\n    }\n  }\n\n  const defaultPort = isSecure ? 443 : 80;\n  const key = randomBytes(16).toString('base64');\n  const request = isSecure ? https.request : http.request;\n  const protocolSet = new Set();\n  let perMessageDeflate;\n\n  opts.createConnection = isSecure ? tlsConnect : netConnect;\n  opts.defaultPort = opts.defaultPort || defaultPort;\n  opts.port = parsedUrl.port || defaultPort;\n  opts.host = parsedUrl.hostname.startsWith('[')\n    ? parsedUrl.hostname.slice(1, -1)\n    : parsedUrl.hostname;\n  opts.headers = {\n    ...opts.headers,\n    'Sec-WebSocket-Version': opts.protocolVersion,\n    'Sec-WebSocket-Key': key,\n    Connection: 'Upgrade',\n    Upgrade: 'websocket'\n  };\n  opts.path = parsedUrl.pathname + parsedUrl.search;\n  opts.timeout = opts.handshakeTimeout;\n\n  if (opts.perMessageDeflate) {\n    perMessageDeflate = new PerMessageDeflate(\n      opts.perMessageDeflate !== true ? opts.perMessageDeflate : {},\n      false,\n      opts.maxPayload\n    );\n    opts.headers['Sec-WebSocket-Extensions'] = format({\n      [PerMessageDeflate.extensionName]: perMessageDeflate.offer()\n    });\n  }\n  if (protocols.length) {\n    for (const protocol of protocols) {\n      if (\n        typeof protocol !== 'string' ||\n        !subprotocolRegex.test(protocol) ||\n        protocolSet.has(protocol)\n      ) {\n        throw new SyntaxError(\n          'An invalid or duplicated subprotocol was specified'\n        );\n      }\n\n      protocolSet.add(protocol);\n    }\n\n    opts.headers['Sec-WebSocket-Protocol'] = protocols.join(',');\n  }\n  if (opts.origin) {\n    if (opts.protocolVersion < 13) {\n      opts.headers['Sec-WebSocket-Origin'] = opts.origin;\n    } else {\n      opts.headers.Origin = opts.origin;\n    }\n  }\n  if (parsedUrl.username || parsedUrl.password) {\n    opts.auth = `${parsedUrl.username}:${parsedUrl.password}`;\n  }\n\n  if (isUnixSocket) {\n    const parts = opts.path.split(':');\n\n    opts.socketPath = parts[0];\n    opts.path = parts[1];\n  }\n\n  let req;\n\n  if (opts.followRedirects) {\n    if (websocket._redirects === 0) {\n      websocket._originalUnixSocket = isUnixSocket;\n      websocket._originalSecure = isSecure;\n      websocket._originalHostOrSocketPath = isUnixSocket\n        ? opts.socketPath\n        : parsedUrl.host;\n\n      const headers = options && options.headers;\n\n      //\n      // Shallow copy the user provided options so that headers can be changed\n      // without mutating the original object.\n      //\n      options = { ...options, headers: {} };\n\n      if (headers) {\n        for (const [key, value] of Object.entries(headers)) {\n          options.headers[key.toLowerCase()] = value;\n        }\n      }\n    } else if (websocket.listenerCount('redirect') === 0) {\n      const isSameHost = isUnixSocket\n        ? websocket._originalUnixSocket\n          ? opts.socketPath === websocket._originalHostOrSocketPath\n          : false\n        : websocket._originalUnixSocket\n        ? false\n        : parsedUrl.host === websocket._originalHostOrSocketPath;\n\n      if (!isSameHost || (websocket._originalSecure && !isSecure)) {\n        //\n        // Match curl 7.77.0 behavior and drop the following headers. These\n        // headers are also dropped when following a redirect to a subdomain.\n        //\n        delete opts.headers.authorization;\n        delete opts.headers.cookie;\n\n        if (!isSameHost) delete opts.headers.host;\n\n        opts.auth = undefined;\n      }\n    }\n\n    //\n    // Match curl 7.77.0 behavior and make the first `Authorization` header win.\n    // If the `Authorization` header is set, then there is nothing to do as it\n    // will take precedence.\n    //\n    if (opts.auth && !options.headers.authorization) {\n      options.headers.authorization =\n        'Basic ' + Buffer.from(opts.auth).toString('base64');\n    }\n\n    req = websocket._req = request(opts);\n\n    if (websocket._redirects) {\n      //\n      // Unlike what is done for the `'upgrade'` event, no early exit is\n      // triggered here if the user calls `websocket.close()` or\n      // `websocket.terminate()` from a listener of the `'redirect'` event. This\n      // is because the user can also call `request.destroy()` with an error\n      // before calling `websocket.close()` or `websocket.terminate()` and this\n      // would result in an error being emitted on the `request` object with no\n      // `'error'` event listeners attached.\n      //\n      websocket.emit('redirect', websocket.url, req);\n    }\n  } else {\n    req = websocket._req = request(opts);\n  }\n\n  if (opts.timeout) {\n    req.on('timeout', () => {\n      abortHandshake(websocket, req, 'Opening handshake has timed out');\n    });\n  }\n\n  req.on('error', (err) => {\n    if (req === null || req[kAborted]) return;\n\n    req = websocket._req = null;\n    emitErrorAndClose(websocket, err);\n  });\n\n  req.on('response', (res) => {\n    const location = res.headers.location;\n    const statusCode = res.statusCode;\n\n    if (\n      location &&\n      opts.followRedirects &&\n      statusCode >= 300 &&\n      statusCode < 400\n    ) {\n      if (++websocket._redirects > opts.maxRedirects) {\n        abortHandshake(websocket, req, 'Maximum redirects exceeded');\n        return;\n      }\n\n      req.abort();\n\n      let addr;\n\n      try {\n        addr = new URL(location, address);\n      } catch (e) {\n        const err = new SyntaxError(`Invalid URL: ${location}`);\n        emitErrorAndClose(websocket, err);\n        return;\n      }\n\n      initAsClient(websocket, addr, protocols, options);\n    } else if (!websocket.emit('unexpected-response', req, res)) {\n      abortHandshake(\n        websocket,\n        req,\n        `Unexpected server response: ${res.statusCode}`\n      );\n    }\n  });\n\n  req.on('upgrade', (res, socket, head) => {\n    websocket.emit('upgrade', res);\n\n    //\n    // The user may have closed the connection from a listener of the\n    // `'upgrade'` event.\n    //\n    if (websocket.readyState !== WebSocket.CONNECTING) return;\n\n    req = websocket._req = null;\n\n    if (res.headers.upgrade.toLowerCase() !== 'websocket') {\n      abortHandshake(websocket, socket, 'Invalid Upgrade header');\n      return;\n    }\n\n    const digest = createHash('sha1')\n      .update(key + GUID)\n      .digest('base64');\n\n    if (res.headers['sec-websocket-accept'] !== digest) {\n      abortHandshake(websocket, socket, 'Invalid Sec-WebSocket-Accept header');\n      return;\n    }\n\n    const serverProt = res.headers['sec-websocket-protocol'];\n    let protError;\n\n    if (serverProt !== undefined) {\n      if (!protocolSet.size) {\n        protError = 'Server sent a subprotocol but none was requested';\n      } else if (!protocolSet.has(serverProt)) {\n        protError = 'Server sent an invalid subprotocol';\n      }\n    } else if (protocolSet.size) {\n      protError = 'Server sent no subprotocol';\n    }\n\n    if (protError) {\n      abortHandshake(websocket, socket, protError);\n      return;\n    }\n\n    if (serverProt) websocket._protocol = serverProt;\n\n    const secWebSocketExtensions = res.headers['sec-websocket-extensions'];\n\n    if (secWebSocketExtensions !== undefined) {\n      if (!perMessageDeflate) {\n        const message =\n          'Server sent a Sec-WebSocket-Extensions header but no extension ' +\n          'was requested';\n        abortHandshake(websocket, socket, message);\n        return;\n      }\n\n      let extensions;\n\n      try {\n        extensions = parse(secWebSocketExtensions);\n      } catch (err) {\n        const message = 'Invalid Sec-WebSocket-Extensions header';\n        abortHandshake(websocket, socket, message);\n        return;\n      }\n\n      const extensionNames = Object.keys(extensions);\n\n      if (\n        extensionNames.length !== 1 ||\n        extensionNames[0] !== PerMessageDeflate.extensionName\n      ) {\n        const message = 'Server indicated an extension that was not requested';\n        abortHandshake(websocket, socket, message);\n        return;\n      }\n\n      try {\n        perMessageDeflate.accept(extensions[PerMessageDeflate.extensionName]);\n      } catch (err) {\n        const message = 'Invalid Sec-WebSocket-Extensions header';\n        abortHandshake(websocket, socket, message);\n        return;\n      }\n\n      websocket._extensions[PerMessageDeflate.extensionName] =\n        perMessageDeflate;\n    }\n\n    websocket.setSocket(socket, head, {\n      generateMask: opts.generateMask,\n      maxPayload: opts.maxPayload,\n      skipUTF8Validation: opts.skipUTF8Validation\n    });\n  });\n\n  req.end();\n}\n\n/**\n * Emit the `'error'` and `'close'` events.\n *\n * @param {WebSocket} websocket The WebSocket instance\n * @param {Error} The error to emit\n * @private\n */\nfunction emitErrorAndClose(websocket, err) {\n  websocket._readyState = WebSocket.CLOSING;\n  websocket.emit('error', err);\n  websocket.emitClose();\n}\n\n/**\n * Create a `net.Socket` and initiate a connection.\n *\n * @param {Object} options Connection options\n * @return {net.Socket} The newly created socket used to start the connection\n * @private\n */\nfunction netConnect(options) {\n  options.path = options.socketPath;\n  return net.connect(options);\n}\n\n/**\n * Create a `tls.TLSSocket` and initiate a connection.\n *\n * @param {Object} options Connection options\n * @return {tls.TLSSocket} The newly created socket used to start the connection\n * @private\n */\nfunction tlsConnect(options) {\n  options.path = undefined;\n\n  if (!options.servername && options.servername !== '') {\n    options.servername = net.isIP(options.host) ? '' : options.host;\n  }\n\n  return tls.connect(options);\n}\n\n/**\n * Abort the handshake and emit an error.\n *\n * @param {WebSocket} websocket The WebSocket instance\n * @param {(http.ClientRequest|net.Socket|tls.Socket)} stream The request to\n *     abort or the socket to destroy\n * @param {String} message The error message\n * @private\n */\nfunction abortHandshake(websocket, stream, message) {\n  websocket._readyState = WebSocket.CLOSING;\n\n  const err = new Error(message);\n  Error.captureStackTrace(err, abortHandshake);\n\n  if (stream.setHeader) {\n    stream[kAborted] = true;\n    stream.abort();\n\n    if (stream.socket && !stream.socket.destroyed) {\n      //\n      // On Node.js >= 14.3.0 `request.abort()` does not destroy the socket if\n      // called after the request completed. See\n      // https://github.com/websockets/ws/issues/1869.\n      //\n      stream.socket.destroy();\n    }\n\n    process.nextTick(emitErrorAndClose, websocket, err);\n  } else {\n    stream.destroy(err);\n    stream.once('error', websocket.emit.bind(websocket, 'error'));\n    stream.once('close', websocket.emitClose.bind(websocket));\n  }\n}\n\n/**\n * Handle cases where the `ping()`, `pong()`, or `send()` methods are called\n * when the `readyState` attribute is `CLOSING` or `CLOSED`.\n *\n * @param {WebSocket} websocket The WebSocket instance\n * @param {*} [data] The data to send\n * @param {Function} [cb] Callback\n * @private\n */\nfunction sendAfterClose(websocket, data, cb) {\n  if (data) {\n    const length = toBuffer(data).length;\n\n    //\n    // The `_bufferedAmount` property is used only when the peer is a client and\n    // the opening handshake fails. Under these circumstances, in fact, the\n    // `setSocket()` method is not called, so the `_socket` and `_sender`\n    // properties are set to `null`.\n    //\n    if (websocket._socket) websocket._sender._bufferedBytes += length;\n    else websocket._bufferedAmount += length;\n  }\n\n  if (cb) {\n    const err = new Error(\n      `WebSocket is not open: readyState ${websocket.readyState} ` +\n        `(${readyStates[websocket.readyState]})`\n    );\n    cb(err);\n  }\n}\n\n/**\n * The listener of the `Receiver` `'conclude'` event.\n *\n * @param {Number} code The status code\n * @param {Buffer} reason The reason for closing\n * @private\n */\nfunction receiverOnConclude(code, reason) {\n  const websocket = this[kWebSocket];\n\n  websocket._closeFrameReceived = true;\n  websocket._closeMessage = reason;\n  websocket._closeCode = code;\n\n  if (websocket._socket[kWebSocket] === undefined) return;\n\n  websocket._socket.removeListener('data', socketOnData);\n  process.nextTick(resume, websocket._socket);\n\n  if (code === 1005) websocket.close();\n  else websocket.close(code, reason);\n}\n\n/**\n * The listener of the `Receiver` `'drain'` event.\n *\n * @private\n */\nfunction receiverOnDrain() {\n  const websocket = this[kWebSocket];\n\n  if (!websocket.isPaused) websocket._socket.resume();\n}\n\n/**\n * The listener of the `Receiver` `'error'` event.\n *\n * @param {(RangeError|Error)} err The emitted error\n * @private\n */\nfunction receiverOnError(err) {\n  const websocket = this[kWebSocket];\n\n  if (websocket._socket[kWebSocket] !== undefined) {\n    websocket._socket.removeListener('data', socketOnData);\n\n    //\n    // On Node.js < 14.0.0 the `'error'` event is emitted synchronously. See\n    // https://github.com/websockets/ws/issues/1940.\n    //\n    process.nextTick(resume, websocket._socket);\n\n    websocket.close(err[kStatusCode]);\n  }\n\n  websocket.emit('error', err);\n}\n\n/**\n * The listener of the `Receiver` `'finish'` event.\n *\n * @private\n */\nfunction receiverOnFinish() {\n  this[kWebSocket].emitClose();\n}\n\n/**\n * The listener of the `Receiver` `'message'` event.\n *\n * @param {Buffer|ArrayBuffer|Buffer[])} data The message\n * @param {Boolean} isBinary Specifies whether the message is binary or not\n * @private\n */\nfunction receiverOnMessage(data, isBinary) {\n  this[kWebSocket].emit('message', data, isBinary);\n}\n\n/**\n * The listener of the `Receiver` `'ping'` event.\n *\n * @param {Buffer} data The data included in the ping frame\n * @private\n */\nfunction receiverOnPing(data) {\n  const websocket = this[kWebSocket];\n\n  websocket.pong(data, !websocket._isServer, NOOP);\n  websocket.emit('ping', data);\n}\n\n/**\n * The listener of the `Receiver` `'pong'` event.\n *\n * @param {Buffer} data The data included in the pong frame\n * @private\n */\nfunction receiverOnPong(data) {\n  this[kWebSocket].emit('pong', data);\n}\n\n/**\n * Resume a readable stream\n *\n * @param {Readable} stream The readable stream\n * @private\n */\nfunction resume(stream) {\n  stream.resume();\n}\n\n/**\n * The listener of the `net.Socket` `'close'` event.\n *\n * @private\n */\nfunction socketOnClose() {\n  const websocket = this[kWebSocket];\n\n  this.removeListener('close', socketOnClose);\n  this.removeListener('data', socketOnData);\n  this.removeListener('end', socketOnEnd);\n\n  websocket._readyState = WebSocket.CLOSING;\n\n  let chunk;\n\n  //\n  // The close frame might not have been received or the `'end'` event emitted,\n  // for example, if the socket was destroyed due to an error. Ensure that the\n  // `receiver` stream is closed after writing any remaining buffered data to\n  // it. If the readable side of the socket is in flowing mode then there is no\n  // buffered data as everything has been already written and `readable.read()`\n  // will return `null`. If instead, the socket is paused, any possible buffered\n  // data will be read as a single chunk.\n  //\n  if (\n    !this._readableState.endEmitted &&\n    !websocket._closeFrameReceived &&\n    !websocket._receiver._writableState.errorEmitted &&\n    (chunk = websocket._socket.read()) !== null\n  ) {\n    websocket._receiver.write(chunk);\n  }\n\n  websocket._receiver.end();\n\n  this[kWebSocket] = undefined;\n\n  clearTimeout(websocket._closeTimer);\n\n  if (\n    websocket._receiver._writableState.finished ||\n    websocket._receiver._writableState.errorEmitted\n  ) {\n    websocket.emitClose();\n  } else {\n    websocket._receiver.on('error', receiverOnFinish);\n    websocket._receiver.on('finish', receiverOnFinish);\n  }\n}\n\n/**\n * The listener of the `net.Socket` `'data'` event.\n *\n * @param {Buffer} chunk A chunk of data\n * @private\n */\nfunction socketOnData(chunk) {\n  if (!this[kWebSocket]._receiver.write(chunk)) {\n    this.pause();\n  }\n}\n\n/**\n * The listener of the `net.Socket` `'end'` event.\n *\n * @private\n */\nfunction socketOnEnd() {\n  const websocket = this[kWebSocket];\n\n  websocket._readyState = WebSocket.CLOSING;\n  websocket._receiver.end();\n  this.end();\n}\n\n/**\n * The listener of the `net.Socket` `'error'` event.\n *\n * @private\n */\nfunction socketOnError() {\n  const websocket = this[kWebSocket];\n\n  this.removeListener('error', socketOnError);\n  this.on('error', NOOP);\n\n  if (websocket) {\n    websocket._readyState = WebSocket.CLOSING;\n    this.destroy();\n  }\n}\n","module.exports = require(\"async_hooks\");","module.exports = require(\"buffer\");","module.exports = require(\"crypto\");","module.exports = require(\"events\");","module.exports = require(\"fs\");","module.exports = require(\"http\");","module.exports = require(\"https\");","module.exports = require(\"net\");","module.exports = require(\"os\");","module.exports = require(\"path\");","module.exports = require(\"querystring\");","module.exports = require(\"stream\");","module.exports = require(\"string_decoder\");","module.exports = require(\"tls\");","module.exports = require(\"tty\");","module.exports = require(\"url\");","module.exports = require(\"util\");","module.exports = require(\"zlib\");","// @flow\n\nexport type Pos = {\n  start: number,\n};\n\n// These are used when `options.locations` is on, for the\n// `startLoc` and `endLoc` properties.\n\nexport class Position {\n  line: number;\n  column: number;\n  index: number;\n\n  constructor(line: number, col: number, index: number) {\n    this.line = line;\n    this.column = col;\n    this.index = index;\n  }\n}\n\nexport class SourceLocation {\n  start: Position;\n  end: Position;\n  filename: string;\n  identifierName: ?string;\n\n  constructor(start: Position, end?: Position) {\n    this.start = start;\n    // $FlowIgnore (may start as null, but initialized later)\n    this.end = end;\n  }\n}\n\n/**\n * creates a new position with a non-zero column offset from the given position.\n * This function should be only be used when we create AST node out of the token\n * boundaries, such as TemplateElement ends before tt.templateNonTail. This\n * function does not skip whitespaces.\n *\n * @export\n * @param {Position} position\n * @param {number} columnOffset\n * @returns {Position}\n */\nexport function createPositionWithColumnOffset(\n  position: Position,\n  columnOffset: number,\n) {\n  const { line, column, index } = position;\n  return new Position(line, column + columnOffset, index + columnOffset);\n}\n","// @flow\n\nexport const ParseErrorCodes = Object.freeze({\n  SyntaxError: \"BABEL_PARSER_SYNTAX_ERROR\",\n  SourceTypeModuleError: \"BABEL_PARSER_SOURCETYPE_MODULE_REQUIRED\",\n});\n\nexport type ParseErrorCode = $Values<typeof ParseErrorCodes>;\n\nexport type SyntaxPlugin =\n  | \"flow\"\n  | \"typescript\"\n  | \"jsx\"\n  | \"pipelineOperator\"\n  | \"placeholders\";\n\nexport type ToMessage<ErrorDetails> = (self: ErrorDetails) => string;\n\nexport type ParseErrorCredentials<ErrorDetails> = {\n  code: ParseErrorCode,\n  reasonCode: string,\n  syntaxPlugin?: SyntaxPlugin,\n\n  toMessage: ToMessage<ErrorDetails>,\n};\n\nconst reflect = (keys: string[], last = keys.length - 1) => ({\n  get() {\n    return keys.reduce((object, key) => object[key], this);\n  },\n  set(value) {\n    keys.reduce(\n      (item, key, i) => (i === last ? (item[key] = value) : item[key]),\n      this,\n    );\n  },\n});\n\nconst instantiate = <T>(\n  constructor: () => any,\n  properties: Object,\n  descriptors: Object,\n) =>\n  Object.keys(descriptors)\n    .map(key => [key, descriptors[key]])\n    .filter(([, descriptor]) => !!descriptor)\n    .map(([key, descriptor]) => [\n      key,\n      typeof descriptor === \"function\"\n        ? { value: descriptor, enumerable: false }\n        : typeof descriptor.reflect === \"string\"\n        ? { ...descriptor, ...reflect(descriptor.reflect.split(\".\")) }\n        : descriptor,\n    ])\n    .reduce(\n      (instance, [key, descriptor]) =>\n        Object.defineProperty(instance, key, {\n          configurable: true,\n          ...descriptor,\n        }),\n      Object.assign((new constructor(): T), properties),\n    );\n\nexport { instantiate };\n","const NodeDescriptions = {\n  ArrayPattern: \"array destructuring pattern\",\n  AssignmentExpression: \"assignment expression\",\n  AssignmentPattern: \"assignment expression\",\n  ArrowFunctionExpression: \"arrow function expression\",\n  ConditionalExpression: \"conditional expression\",\n  ForOfStatement: \"for-of statement\",\n  ForInStatement: \"for-in statement\",\n  ForStatement: \"for-loop\",\n  FormalParameters: \"function parameter list\",\n  Identifier: \"identifier\",\n  ObjectPattern: \"object destructuring pattern\",\n  ParenthesizedExpression: \"parenthesized expression\",\n  RestElement: \"rest element\",\n  UpdateExpression: {\n    true: \"prefix operation\",\n    false: \"postfix operation\",\n  },\n  VariableDeclarator: \"variable declaration\",\n  YieldExpression: \"yield expression\",\n};\n\ntype NodeTypesWithDescriptions = $Keys<\n  $Diff<typeof NodeDescriptions, { UpdateExpression: any }>,\n>;\ntype NodeWithDescription =\n  | { type: \"UpdateExpression\", prefix: boolean }\n  | { type: NodeTypesWithDescriptions };\n\n// eslint-disable-next-line no-confusing-arrow\nconst toNodeDescription = ({ type, prefix }: NodeWithDescription) =>\n  type === \"UpdateExpression\"\n    ? NodeDescriptions.UpdateExpression[String(prefix)]\n    : NodeDescriptions[type];\n\nexport default toNodeDescription;\n","// @flow\n\nimport { toParseErrorCredentials } from \"../parse-error\";\nimport toNodeDescription from \"./to-node-description\";\n\nexport const UnparenthesizedPipeBodyDescriptions = new Set<string>([\n  \"ArrowFunctionExpression\",\n  \"AssignmentExpression\",\n  \"ConditionalExpression\",\n  \"YieldExpression\",\n]);\n\nexport default (_: typeof toParseErrorCredentials) => ({\n  // This error is only used by the smart-mix proposal\n  PipeBodyIsTighter: _(\n    \"Unexpected yield after pipeline body; any yield expression acting as Hack-style pipe body must be parenthesized due to its loose operator precedence.\",\n  ),\n  PipeTopicRequiresHackPipes: _(\n    'Topic reference is used, but the pipelineOperator plugin was not passed a \"proposal\": \"hack\" or \"smart\" option.',\n  ),\n  PipeTopicUnbound: _(\n    \"Topic reference is unbound; it must be inside a pipe body.\",\n  ),\n  PipeTopicUnconfiguredToken: _<{| token: string |}>(\n    ({ token }) =>\n      `Invalid topic token ${token}. In order to use ${token} as a topic reference, the pipelineOperator plugin must be configured with { \"proposal\": \"hack\", \"topicToken\": \"${token}\" }.`,\n  ),\n  PipeTopicUnused: _(\n    \"Hack-style pipe body does not contain a topic reference; Hack-style pipes must use topic at least once.\",\n  ),\n  PipeUnparenthesizedBody: _<{| type: string |}>(\n    ({ type }) =>\n      `Hack-style pipe body cannot be an unparenthesized ${toNodeDescription({\n        type,\n      })}; please wrap it in parentheses.`,\n  ),\n\n  // Messages whose codes start with “Pipeline” or “PrimaryTopic”\n  // are retained for backwards compatibility\n  // with the deprecated smart-mix pipe operator proposal plugin.\n  // They are subject to removal in a future major version.\n  PipelineBodyNoArrow: _(\n    'Unexpected arrow \"=>\" after pipeline body; arrow function in pipeline body must be parenthesized.',\n  ),\n  PipelineBodySequenceExpression: _(\n    \"Pipeline body may not be a comma-separated sequence expression.\",\n  ),\n  PipelineHeadSequenceExpression: _(\n    \"Pipeline head should not be a comma-separated sequence expression.\",\n  ),\n  PipelineTopicUnused: _(\n    \"Pipeline is in topic style but does not use topic reference.\",\n  ),\n  PrimaryTopicNotAllowed: _(\n    \"Topic reference was used in a lexical context without topic binding.\",\n  ),\n  PrimaryTopicRequiresSmartPipeline: _(\n    'Topic reference is used, but the pipelineOperator plugin was not passed a \"proposal\": \"hack\" or \"smart\" option.',\n  ),\n});\n","// @flow\n\nimport { Position } from \"./util/location\";\nimport type { NodeBase } from \"./types\";\nimport {\n  instantiate,\n  type ParseErrorCode,\n  ParseErrorCodes,\n  type ParseErrorCredentials,\n} from \"./parse-error/credentials\";\n\n// Babel uses \"normal\" SyntaxErrors for it's errors, but adds some extra\n// functionality. This functionality is defined in the\n// `ParseErrorSpecification` interface below. We may choose to change to someday\n// give our errors their own full-blown class, but until then this allow us to\n// keep all the desirable properties of SyntaxErrors (like their name in stack\n// traces, etc.), and also allows us to punt on any publicly facing\n// class-hierarchy decisions until Babel 8.\ninterface ParseErrorSpecification<ErrorDetails> {\n  // Look, these *could* be readonly, but then Flow complains when we initially\n  // set them. We could do a whole dance and make a special interface that's not\n  // readonly for when we create the error, then cast it to the readonly\n  // interface for public use, but the previous implementation didn't have them\n  // as readonly, so let's just not worry about it for now.\n  code: ParseErrorCode;\n  reasonCode: string;\n  syntaxPlugin?: string;\n\n  missingPlugin?: string | string[];\n\n  loc: Position;\n  details: ErrorDetails;\n\n  // We should consider removing this as it now just contains the same\n  // information as `loc.index`.\n  // pos: number;\n}\n\nexport type ParseError<ErrorDetails> = SyntaxError &\n  ParseErrorSpecification<ErrorDetails>;\n\n// By `ParseErrorConstructor`, we mean something like the new-less style\n// `ErrorConstructor`[1], since `ParseError`'s are not themselves actually\n// separate classes from `SyntaxError`'s.\n//\n// 1. https://github.com/microsoft/TypeScript/blob/v4.5.5/lib/lib.es5.d.ts#L1027\nexport type ParseErrorConstructor<ErrorDetails> = ({\n  loc: Position,\n  details: ErrorDetails,\n}) => ParseError<ErrorDetails>;\n\nfunction toParseErrorConstructor<ErrorDetails: Object>({\n  toMessage,\n  ...properties\n}: ParseErrorCredentials<ErrorDetails>): ParseErrorConstructor<ErrorDetails> {\n  type ConstructorArgument = { loc: Position, details: ErrorDetails };\n  return function constructor({ loc, details }: ConstructorArgument) {\n    return instantiate<ParseError<ErrorDetails>>(\n      SyntaxError,\n      { ...properties, loc },\n      {\n        clone(overrides: { loc?: Position, details?: ErrorDetails } = {}) {\n          const loc = overrides.loc || {};\n          return constructor({\n            loc: new Position(\n              \"line\" in loc ? loc.line : this.loc.line,\n              \"column\" in loc ? loc.column : this.loc.column,\n              \"index\" in loc ? loc.index : this.loc.index,\n            ),\n            details: { ...this.details, ...overrides.details },\n          });\n        },\n        details: { value: details, enumerable: false },\n        message: {\n          get() {\n            return `${toMessage(this.details)} (${this.loc.line}:${\n              this.loc.column\n            })`;\n          },\n          set(value: string) {\n            Object.defineProperty(this, \"message\", { value });\n          },\n        },\n        pos: { reflect: \"loc.index\", enumerable: true },\n        missingPlugin: \"missingPlugin\" in details && {\n          reflect: \"details.missingPlugin\",\n          enumerable: true,\n        },\n      },\n    );\n  };\n}\n\n// This part is tricky. You'll probably notice from the name of this function\n// that it is supposed to return `ParseErrorCredentials`, but instead these.\n// declarations seem to instead imply that they return\n// `ParseErrorConstructor<ErrorDetails>` instead. This is because in Flow we\n// can't easily extract parameter types (either from functions, like with\n// Typescript's Parameters<f> utility type, or from generic types either). As\n// such, this function does double duty: packaging up the credentials during\n// its actual runtime operation, but pretending to return the\n// `ParseErrorConstructor<ErrorDetails>` that we won't actually have until later\n// to the type system, avoiding the need to do so with $ObjMap (which doesn't\n// work) in `ParseErrorEnum`. This hack won't be necessary when we switch to\n// Typescript.\ndeclare function toParseErrorCredentials<T: string>(\n  T,\n  ?{ code?: ParseErrorCode, reasonCode?: string } | boolean,\n): ParseErrorConstructor<{||}>;\n\n// ESLint seems to erroneously think that Flow's overloading syntax is an\n// accidental redeclaration of the function:\n// https://github.com/babel/eslint-plugin-babel/issues/162\n// eslint-disable-next-line no-redeclare\ndeclare function toParseErrorCredentials<ErrorDetails>(\n  (ErrorDetails) => string,\n  ?{ code?: ParseErrorCode, reasonCode?: string } | boolean,\n): ParseErrorConstructor<ErrorDetails>;\n\n// See comment about eslint and Flow overloading above.\n// eslint-disable-next-line no-redeclare\nexport function toParseErrorCredentials(toMessageOrMessage, credentials) {\n  return {\n    toMessage:\n      typeof toMessageOrMessage === \"string\"\n        ? () => toMessageOrMessage\n        : toMessageOrMessage,\n    ...credentials,\n  };\n}\n\n// This is the templated form.\ndeclare function ParseErrorEnum(string[]): typeof ParseErrorEnum;\n\n// See comment about eslint and Flow overloading above.\n// eslint-disable-next-line no-redeclare\ndeclare function ParseErrorEnum<T>(\n  toParseErrorCredentials: (typeof toParseErrorCredentials) => T,\n  syntaxPlugin?: string,\n): T;\n\n// You call `ParseErrorEnum` with a mapping from `ReasonCode`'s to either error\n// messages, or `toMessage` functions that define additional necessary `details`\n// needed by the `ParseError`:\n//\n// ParseErrorEnum`optionalSyntaxPlugin` (_ => ({\n//   ErrorWithStaticMessage: _(\"message\"),\n//   ErrorWithDynamicMessage: _<{ type: string }>(({ type }) => `${type}`),\n// });\n//\n// See comment about eslint and Flow overloading above.\n// eslint-disable-next-line no-redeclare\nexport function ParseErrorEnum(argument, syntaxPlugin) {\n  // If the first parameter is an array, that means we were called with a tagged\n  // template literal. Extract the syntaxPlugin from this, and call again in\n  // the \"normalized\" form.\n  if (Array.isArray(argument)) {\n    return toParseErrorCredentialsMap =>\n      ParseErrorEnum(toParseErrorCredentialsMap, argument[0]);\n  }\n\n  const partialCredentials = argument(toParseErrorCredentials);\n  const ParseErrorConstructors = {};\n\n  for (const reasonCode of Object.keys(partialCredentials)) {\n    ParseErrorConstructors[reasonCode] = toParseErrorConstructor({\n      code: ParseErrorCodes.SyntaxError,\n      reasonCode,\n      ...(syntaxPlugin ? { syntaxPlugin } : {}),\n      ...partialCredentials[reasonCode],\n    });\n  }\n\n  return ParseErrorConstructors;\n}\n\nexport type RaiseProperties<ErrorDetails> = {|\n  ...ErrorDetails,\n  at: Position | NodeBase,\n|};\n\nimport ModuleErrors from \"./parse-error/module-errors\";\nimport StandardErrors from \"./parse-error/standard-errors\";\nimport StrictModeErrors from \"./parse-error/strict-mode-errors\";\nimport PipelineOperatorErrors from \"./parse-error/pipeline-operator-errors\";\n\nexport const Errors = {\n  ...ParseErrorEnum(ModuleErrors),\n  ...ParseErrorEnum(StandardErrors),\n  ...ParseErrorEnum(StrictModeErrors),\n  ...ParseErrorEnum`pipelineOperator`(PipelineOperatorErrors),\n};\n\nexport type { LValAncestor } from \"./parse-error/standard-errors\";\n\nexport * from \"./parse-error/credentials\";\n","// @flow\n\nimport { ParseErrorCodes, toParseErrorCredentials } from \"../parse-error\";\n\nexport default (_: typeof toParseErrorCredentials) => ({\n  ImportMetaOutsideModule: _(\n    `import.meta may appear only with 'sourceType: \"module\"'`,\n    { code: ParseErrorCodes.SourceTypeModuleError },\n  ),\n  ImportOutsideModule: _(\n    `'import' and 'export' may appear only with 'sourceType: \"module\"'`,\n    { code: ParseErrorCodes.SourceTypeModuleError },\n  ),\n});\n","// @flow\n\nimport { toParseErrorCredentials } from \"../parse-error\";\nimport toNodeDescription from \"./to-node-description\";\n\nexport type LValAncestor =\n  | { type: \"UpdateExpression\", prefix: boolean }\n  | {\n      type:\n        | \"ArrayPattern\"\n        | \"AssignmentExpression\"\n        | \"CatchClause\"\n        | \"ForOfStatement\"\n        | \"FormalParameters\"\n        | \"ForInStatement\"\n        | \"ForStatement\"\n        | \"Identfier\"\n        | \"ObjectPattern\"\n        | \"RestElement\"\n        | \"VariableDeclarator\",\n    };\n\nexport default (_: typeof toParseErrorCredentials) => ({\n  AccessorIsGenerator: _<{| kind: \"get\" | \"set\" |}>(\n    ({ kind }) => `A ${kind}ter cannot be a generator.`,\n  ),\n\n  ArgumentsInClass: _(\n    \"'arguments' is only allowed in functions and class methods.\",\n  ),\n  AsyncFunctionInSingleStatementContext: _(\n    \"Async functions can only be declared at the top level or inside a block.\",\n  ),\n  AwaitBindingIdentifier: _(\n    \"Can not use 'await' as identifier inside an async function.\",\n  ),\n  AwaitBindingIdentifierInStaticBlock: _(\n    \"Can not use 'await' as identifier inside a static block.\",\n  ),\n  AwaitExpressionFormalParameter: _(\n    \"'await' is not allowed in async function parameters.\",\n  ),\n  AwaitNotInAsyncContext: _(\n    \"'await' is only allowed within async functions and at the top levels of modules.\",\n  ),\n  AwaitNotInAsyncFunction: _(\"'await' is only allowed within async functions.\"),\n  BadGetterArity: _(\"A 'get' accesor must not have any formal parameters.\"),\n  BadSetterArity: _(\"A 'set' accesor must have exactly one formal parameter.\"),\n  BadSetterRestParameter: _(\n    \"A 'set' accesor function argument must not be a rest parameter.\",\n  ),\n  ConstructorClassField: _(\"Classes may not have a field named 'constructor'.\"),\n  ConstructorClassPrivateField: _(\n    \"Classes may not have a private field named '#constructor'.\",\n  ),\n  ConstructorIsAccessor: _(\"Class constructor may not be an accessor.\"),\n  ConstructorIsAsync: _(\"Constructor can't be an async function.\"),\n  ConstructorIsGenerator: _(\"Constructor can't be a generator.\"),\n  DeclarationMissingInitializer: _<{| kind: \"const\" | \"destructuring\" |}>(\n    ({ kind }) => `Missing initializer in ${kind} declaration.`,\n  ),\n  DecoratorBeforeExport: _(\n    \"Decorators must be placed *before* the 'export' keyword. You can set the 'decoratorsBeforeExport' option to false to use the 'export @decorator class {}' syntax.\",\n  ),\n  DecoratorConstructor: _(\n    \"Decorators can't be used with a constructor. Did you mean '@dec class { ... }'?\",\n  ),\n  DecoratorExportClass: _(\n    \"Using the export keyword between a decorator and a class is not allowed. Please use `export @dec class` instead.\",\n  ),\n  DecoratorSemicolon: _(\"Decorators must not be followed by a semicolon.\"),\n  DecoratorStaticBlock: _(\"Decorators can't be used with a static block.\"),\n  DeletePrivateField: _(\"Deleting a private field is not allowed.\"),\n  DestructureNamedImport: _(\n    \"ES2015 named imports do not destructure. Use another statement for destructuring after the import.\",\n  ),\n  DuplicateConstructor: _(\"Duplicate constructor in the same class.\"),\n  DuplicateDefaultExport: _(\"Only one default export allowed per module.\"),\n  DuplicateExport: _<{| exportName: string |}>(\n    ({ exportName }) =>\n      `\\`${exportName}\\` has already been exported. Exported identifiers must be unique.`,\n  ),\n  DuplicateProto: _(\"Redefinition of __proto__ property.\"),\n  DuplicateRegExpFlags: _(\"Duplicate regular expression flag.\"),\n  ElementAfterRest: _(\"Rest element must be last element.\"),\n  EscapedCharNotAnIdentifier: _(\"Invalid Unicode escape.\"),\n  ExportBindingIsString: _<{| localName: string, exportName: string |}>(\n    ({ localName, exportName }) =>\n      `A string literal cannot be used as an exported binding without \\`from\\`.\\n- Did you mean \\`export { '${localName}' as '${exportName}' } from 'some-module'\\`?`,\n  ),\n  ExportDefaultFromAsIdentifier: _(\n    \"'from' is not allowed as an identifier after 'export default'.\",\n  ),\n\n  ForInOfLoopInitializer: _<{| type: \"ForInStatement\" | \"ForOfStatement\" |}>(\n    ({ type }) =>\n      `'${\n        type === \"ForInStatement\" ? \"for-in\" : \"for-of\"\n      }' loop variable declaration may not have an initializer.`,\n  ),\n\n  ForOfAsync: _(\"The left-hand side of a for-of loop may not be 'async'.\"),\n  ForOfLet: _(\"The left-hand side of a for-of loop may not start with 'let'.\"),\n  GeneratorInSingleStatementContext: _(\n    \"Generators can only be declared at the top level or inside a block.\",\n  ),\n\n  IllegalBreakContinue: _<{| type: \"BreakStatement\" | \"ContinueStatement\" |}>(\n    ({ type }) =>\n      `Unsyntactic ${type === \"BreakStatement\" ? \"break\" : \"continue\"}.`,\n  ),\n\n  IllegalLanguageModeDirective: _(\n    \"Illegal 'use strict' directive in function with non-simple parameter list.\",\n  ),\n  IllegalReturn: _(\"'return' outside of function.\"),\n  ImportBindingIsString: _<{| importName: string |}>(\n    ({ importName }) =>\n      `A string literal cannot be used as an imported binding.\\n- Did you mean \\`import { \"${importName}\" as foo }\\`?`,\n  ),\n  ImportCallArgumentTrailingComma: _(\n    \"Trailing comma is disallowed inside import(...) arguments.\",\n  ),\n  ImportCallArity: _<{| maxArgumentCount: 1 | 2 |}>(\n    ({ maxArgumentCount }) =>\n      `\\`import()\\` requires exactly ${\n        maxArgumentCount === 1 ? \"one argument\" : \"one or two arguments\"\n      }.`,\n  ),\n  ImportCallNotNewExpression: _(\"Cannot use new with import(...).\"),\n  ImportCallSpreadArgument: _(\"`...` is not allowed in `import()`.\"),\n  ImportJSONBindingNotDefault: _(\n    \"A JSON module can only be imported with `default`.\",\n  ),\n  IncompatibleRegExpUVFlags: _(\n    \"The 'u' and 'v' regular expression flags cannot be enabled at the same time.\",\n  ),\n  InvalidBigIntLiteral: _(\"Invalid BigIntLiteral.\"),\n  InvalidCodePoint: _(\"Code point out of bounds.\"),\n  InvalidCoverInitializedName: _(\"Invalid shorthand property initializer.\"),\n  InvalidDecimal: _(\"Invalid decimal.\"),\n  InvalidDigit: _<{| radix: number |}>(\n    ({ radix }) => `Expected number in radix ${radix}.`,\n  ),\n  InvalidEscapeSequence: _(\"Bad character escape sequence.\"),\n  InvalidEscapeSequenceTemplate: _(\"Invalid escape sequence in template.\"),\n  InvalidEscapedReservedWord: _<{| reservedWord: string |}>(\n    ({ reservedWord }) => `Escape sequence in keyword ${reservedWord}.`,\n  ),\n  InvalidIdentifier: _<{| identifierName: string |}>(\n    ({ identifierName }) => `Invalid identifier ${identifierName}.`,\n  ),\n  InvalidLhs: _<{| ancestor: LValAncestor |}>(\n    ({ ancestor }) =>\n      `Invalid left-hand side in ${toNodeDescription(ancestor)}.`,\n  ),\n  InvalidLhsBinding: _<{| ancestor: LValAncestor |}>(\n    ({ ancestor }) =>\n      `Binding invalid left-hand side in ${toNodeDescription(ancestor)}.`,\n  ),\n  InvalidNumber: _(\"Invalid number.\"),\n  InvalidOrMissingExponent: _(\n    \"Floating-point numbers require a valid exponent after the 'e'.\",\n  ),\n  InvalidOrUnexpectedToken: _<{| unexpected: string |}>(\n    ({ unexpected }) => `Unexpected character '${unexpected}'.`,\n  ),\n  InvalidParenthesizedAssignment: _(\n    \"Invalid parenthesized assignment pattern.\",\n  ),\n  InvalidPrivateFieldResolution: _<{| identifierName: string |}>(\n    ({ identifierName }) => `Private name #${identifierName} is not defined.`,\n  ),\n  InvalidPropertyBindingPattern: _(\"Binding member expression.\"),\n  InvalidRecordProperty: _(\n    \"Only properties and spread elements are allowed in record definitions.\",\n  ),\n  InvalidRestAssignmentPattern: _(\"Invalid rest operator's argument.\"),\n  LabelRedeclaration: _<{| labelName: string |}>(\n    ({ labelName }) => `Label '${labelName}' is already declared.`,\n  ),\n  LetInLexicalBinding: _(\n    \"'let' is not allowed to be used as a name in 'let' or 'const' declarations.\",\n  ),\n  LineTerminatorBeforeArrow: _(\"No line break is allowed before '=>'.\"),\n  MalformedRegExpFlags: _(\"Invalid regular expression flag.\"),\n  MissingClassName: _(\"A class name is required.\"),\n  MissingEqInAssignment: _(\n    \"Only '=' operator can be used for specifying default value.\",\n  ),\n  MissingSemicolon: _(\"Missing semicolon.\"),\n  MissingPlugin: _<{| missingPlugin: [string] |}>(\n    ({ missingPlugin }) =>\n      `This experimental syntax requires enabling the parser plugin: ${missingPlugin\n        .map(name => JSON.stringify(name))\n        .join(\", \")}.`,\n  ),\n  // FIXME: Would be nice to make this \"missingPlugins\" instead.\n  // Also), seems like we can drop the \"(s)\" from the message and just make it \"s\".\n  MissingOneOfPlugins: _<{| missingPlugin: string[] |}>(\n    ({ missingPlugin }) =>\n      `This experimental syntax requires enabling one of the following parser plugin(s): ${missingPlugin\n        .map(name => JSON.stringify(name))\n        .join(\", \")}.`,\n  ),\n  MissingUnicodeEscape: _(\"Expecting Unicode escape sequence \\\\uXXXX.\"),\n  MixingCoalesceWithLogical: _(\n    \"Nullish coalescing operator(??) requires parens when mixing with logical operators.\",\n  ),\n  ModuleAttributeDifferentFromType: _(\n    \"The only accepted module attribute is `type`.\",\n  ),\n  ModuleAttributeInvalidValue: _(\n    \"Only string literals are allowed as module attribute values.\",\n  ),\n  ModuleAttributesWithDuplicateKeys: _<{| key: string |}>(\n    ({ key }) => `Duplicate key \"${key}\" is not allowed in module attributes.`,\n  ),\n  ModuleExportNameHasLoneSurrogate: _<{| surrogateCharCode: number |}>(\n    ({ surrogateCharCode }) =>\n      `An export name cannot include a lone surrogate, found '\\\\u${surrogateCharCode.toString(\n        16,\n      )}'.`,\n  ),\n  ModuleExportUndefined: _<{| localName: string |}>(\n    ({ localName }) => `Export '${localName}' is not defined.`,\n  ),\n  MultipleDefaultsInSwitch: _(\"Multiple default clauses.\"),\n  NewlineAfterThrow: _(\"Illegal newline after throw.\"),\n  NoCatchOrFinally: _(\"Missing catch or finally clause.\"),\n  NumberIdentifier: _(\"Identifier directly after number.\"),\n  NumericSeparatorInEscapeSequence: _(\n    \"Numeric separators are not allowed inside unicode escape sequences or hex escape sequences.\",\n  ),\n  ObsoleteAwaitStar: _(\n    \"'await*' has been removed from the async functions proposal. Use Promise.all() instead.\",\n  ),\n  OptionalChainingNoNew: _(\n    \"Constructors in/after an Optional Chain are not allowed.\",\n  ),\n  OptionalChainingNoTemplate: _(\n    \"Tagged Template Literals are not allowed in optionalChain.\",\n  ),\n  OverrideOnConstructor: _(\n    \"'override' modifier cannot appear on a constructor declaration.\",\n  ),\n  ParamDupe: _(\"Argument name clash.\"),\n  PatternHasAccessor: _(\"Object pattern can't contain getter or setter.\"),\n  PatternHasMethod: _(\"Object pattern can't contain methods.\"),\n  PrivateInExpectedIn: _<{| identifierName: string |}>(\n    ({ identifierName }) =>\n      `Private names are only allowed in property accesses (\\`obj.#${identifierName}\\`) or in \\`in\\` expressions (\\`#${identifierName} in obj\\`).`,\n  ),\n  PrivateNameRedeclaration: _<{| identifierName: string |}>(\n    ({ identifierName }) => `Duplicate private name #${identifierName}.`,\n  ),\n  RecordExpressionBarIncorrectEndSyntaxType: _(\n    \"Record expressions ending with '|}' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'bar'.\",\n  ),\n  RecordExpressionBarIncorrectStartSyntaxType: _(\n    \"Record expressions starting with '{|' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'bar'.\",\n  ),\n  RecordExpressionHashIncorrectStartSyntaxType: _(\n    \"Record expressions starting with '#{' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'hash'.\",\n  ),\n  RecordNoProto: _(\"'__proto__' is not allowed in Record expressions.\"),\n  RestTrailingComma: _(\"Unexpected trailing comma after rest element.\"),\n  SloppyFunction: _(\n    \"In non-strict mode code, functions can only be declared at top level, inside a block, or as the body of an if statement.\",\n  ),\n  StaticPrototype: _(\"Classes may not have static property named prototype.\"),\n  SuperNotAllowed: _(\n    \"`super()` is only valid inside a class constructor of a subclass. Maybe a typo in the method name ('constructor') or not extending another class?\",\n  ),\n  SuperPrivateField: _(\"Private fields can't be accessed on super.\"),\n  TrailingDecorator: _(\"Decorators must be attached to a class element.\"),\n  TupleExpressionBarIncorrectEndSyntaxType: _(\n    \"Tuple expressions ending with '|]' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'bar'.\",\n  ),\n  TupleExpressionBarIncorrectStartSyntaxType: _(\n    \"Tuple expressions starting with '[|' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'bar'.\",\n  ),\n  TupleExpressionHashIncorrectStartSyntaxType: _(\n    \"Tuple expressions starting with '#[' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'hash'.\",\n  ),\n  UnexpectedArgumentPlaceholder: _(\"Unexpected argument placeholder.\"),\n  UnexpectedAwaitAfterPipelineBody: _(\n    'Unexpected \"await\" after pipeline body; await must have parentheses in minimal proposal.',\n  ),\n  UnexpectedDigitAfterHash: _(\"Unexpected digit after hash token.\"),\n  UnexpectedImportExport: _(\n    \"'import' and 'export' may only appear at the top level.\",\n  ),\n  UnexpectedKeyword: _<{| keyword: string |}>(\n    ({ keyword }) => `Unexpected keyword '${keyword}'.`,\n  ),\n  UnexpectedLeadingDecorator: _(\n    \"Leading decorators must be attached to a class declaration.\",\n  ),\n  UnexpectedLexicalDeclaration: _(\n    \"Lexical declaration cannot appear in a single-statement context.\",\n  ),\n  UnexpectedNewTarget: _(\n    \"`new.target` can only be used in functions or class properties.\",\n  ),\n  UnexpectedNumericSeparator: _(\n    \"A numeric separator is only allowed between two digits.\",\n  ),\n  UnexpectedPrivateField: _(\"Unexpected private name.\"),\n  UnexpectedReservedWord: _<{| reservedWord: string |}>(\n    ({ reservedWord }) => `Unexpected reserved word '${reservedWord}'.`,\n  ),\n  UnexpectedSuper: _(\"'super' is only allowed in object methods and classes.\"),\n  UnexpectedToken: _<{|\n    expected?: ?string,\n    unexpected?: ?string,\n  |}>(\n    ({ expected, unexpected }) =>\n      `Unexpected token${unexpected ? ` '${unexpected}'.` : \"\"}${\n        expected ? `, expected \"${expected}\"` : \"\"\n      }`,\n  ),\n  UnexpectedTokenUnaryExponentiation: _(\n    \"Illegal expression. Wrap left hand side or entire exponentiation in parentheses.\",\n  ),\n  UnsupportedBind: _(\"Binding should be performed on object property.\"),\n  UnsupportedDecoratorExport: _(\n    \"A decorated export must export a class declaration.\",\n  ),\n  UnsupportedDefaultExport: _(\n    \"Only expressions, functions or classes are allowed as the `default` export.\",\n  ),\n  UnsupportedImport: _(\n    \"`import` can only be used in `import()` or `import.meta`.\",\n  ),\n  UnsupportedMetaProperty: _<{|\n    target: string,\n    onlyValidPropertyName: string,\n  |}>(\n    ({ target, onlyValidPropertyName }) =>\n      `The only valid meta property for ${target} is ${target}.${onlyValidPropertyName}.`,\n  ),\n  UnsupportedParameterDecorator: _(\n    \"Decorators cannot be used to decorate parameters.\",\n  ),\n  UnsupportedPropertyDecorator: _(\n    \"Decorators cannot be used to decorate object literal properties.\",\n  ),\n  UnsupportedSuper: _(\n    \"'super' can only be used with function calls (i.e. super()) or in property accesses (i.e. super.prop or super[prop]).\",\n  ),\n  UnterminatedComment: _(\"Unterminated comment.\"),\n  UnterminatedRegExp: _(\"Unterminated regular expression.\"),\n  UnterminatedString: _(\"Unterminated string constant.\"),\n  UnterminatedTemplate: _(\"Unterminated template.\"),\n  VarRedeclaration: _<{| identifierName: string |}>(\n    ({ identifierName }) =>\n      `Identifier '${identifierName}' has already been declared.`,\n  ),\n  YieldBindingIdentifier: _(\n    \"Can not use 'yield' as identifier inside a generator.\",\n  ),\n  YieldInParameter: _(\"Yield expression is not allowed in formal parameters.\"),\n  ZeroDigitNumericSeparator: _(\n    \"Numeric separator can not be used after leading 0.\",\n  ),\n});\n","// @flow\n\nimport { toParseErrorCredentials } from \"../parse-error\";\n\nexport default (_: typeof toParseErrorCredentials) => ({\n  StrictDelete: _(\"Deleting local variable in strict mode.\"),\n\n  // `referenceName` is the StringValue[1] of an IdentifierReference[2], which\n  // is represented as just an `Identifier`[3] in the Babel AST.\n  // 1. https://tc39.es/ecma262/#sec-static-semantics-stringvalue\n  // 2. https://tc39.es/ecma262/#prod-IdentifierReference\n  // 3. https://github.com/babel/babel/blob/main/packages/babel-parser/ast/spec.md#identifier\n  StrictEvalArguments: _<{| referenceName: string |}>(\n    ({ referenceName }) => `Assigning to '${referenceName}' in strict mode.`,\n  ),\n  // `bindingName` is the StringValue[1] of a BindingIdentifier[2], which is\n  // represented as just an `Identifier`[3] in the Babel AST.\n  // 1. https://tc39.es/ecma262/#sec-static-semantics-stringvalue\n  // 2. https://tc39.es/ecma262/#prod-BindingIdentifier\n  // 3. https://github.com/babel/babel/blob/main/packages/babel-parser/ast/spec.md#identifier\n  StrictEvalArgumentsBinding: _<{| bindingName: string |}>(\n    ({ bindingName }) => `Binding '${bindingName}' in strict mode.`,\n  ),\n\n  StrictFunction: _(\n    \"In strict mode code, functions can only be declared at top level or inside a block.\",\n  ),\n  StrictNumericEscape: _(\n    \"The only valid numeric escape in strict mode is '\\\\0'.\",\n  ),\n  StrictOctalLiteral: _(\n    \"Legacy octal literals are not allowed in strict mode.\",\n  ),\n  StrictWith: _(\"'with' in strict mode.\"),\n});\n","// @flow\n\nimport { type TokenType } from \"../tokenizer/types\";\nimport type Parser from \"../parser\";\nimport type { ExpressionErrors } from \"../parser/util\";\nimport * as N from \"../types\";\nimport type { Node as NodeType, NodeBase, File } from \"../types\";\nimport type { Position } from \"../util/location\";\nimport { Errors } from \"../parse-error\";\n\nconst { defineProperty } = Object;\nconst toUnenumerable = (object, key) =>\n  defineProperty(object, key, { enumerable: false, value: object[key] });\n\nfunction toESTreeLocation(node: any) {\n  node.loc.start && toUnenumerable(node.loc.start, \"index\");\n  node.loc.end && toUnenumerable(node.loc.end, \"index\");\n\n  return node;\n}\n\nexport default (superClass: Class<Parser>): Class<Parser> =>\n  class extends superClass {\n    parse(): File {\n      const file = toESTreeLocation(super.parse());\n\n      if (this.options.tokens) {\n        file.tokens = file.tokens.map(toESTreeLocation);\n      }\n\n      return file;\n    }\n\n    parseRegExpLiteral({ pattern, flags }): N.Node {\n      let regex = null;\n      try {\n        regex = new RegExp(pattern, flags);\n      } catch (e) {\n        // In environments that don't support these flags value will\n        // be null as the regex can't be represented natively.\n      }\n      const node = this.estreeParseLiteral<N.EstreeRegExpLiteral>(regex);\n      node.regex = { pattern, flags };\n\n      return node;\n    }\n\n    parseBigIntLiteral(value: any): N.Node {\n      // https://github.com/estree/estree/blob/master/es2020.md#bigintliteral\n      let bigInt;\n      try {\n        // $FlowIgnore\n        bigInt = BigInt(value);\n      } catch {\n        bigInt = null;\n      }\n      const node = this.estreeParseLiteral<N.EstreeBigIntLiteral>(bigInt);\n      node.bigint = String(node.value || value);\n\n      return node;\n    }\n\n    parseDecimalLiteral(value: any): N.Node {\n      // https://github.com/estree/estree/blob/master/experimental/decimal.md\n      // todo: use BigDecimal when node supports it.\n      const decimal = null;\n      const node = this.estreeParseLiteral(decimal);\n      node.decimal = String(node.value || value);\n\n      return node;\n    }\n\n    estreeParseLiteral<T: N.Node>(value: any) {\n      return this.parseLiteral<T>(value, \"Literal\");\n    }\n\n    parseStringLiteral(value: any): N.Node {\n      return this.estreeParseLiteral(value);\n    }\n\n    parseNumericLiteral(value: any): any {\n      return this.estreeParseLiteral(value);\n    }\n\n    parseNullLiteral(): N.Node {\n      return this.estreeParseLiteral(null);\n    }\n\n    parseBooleanLiteral(value: boolean): N.BooleanLiteral {\n      return this.estreeParseLiteral(value);\n    }\n\n    directiveToStmt(directive: N.Directive): N.ExpressionStatement {\n      const directiveLiteral = directive.value;\n\n      const stmt = this.startNodeAt(directive.start, directive.loc.start);\n      const expression = this.startNodeAt(\n        directiveLiteral.start,\n        directiveLiteral.loc.start,\n      );\n\n      expression.value = directiveLiteral.extra.expressionValue;\n      expression.raw = directiveLiteral.extra.raw;\n\n      stmt.expression = this.finishNodeAt(\n        expression,\n        \"Literal\",\n        directiveLiteral.loc.end,\n      );\n      stmt.directive = directiveLiteral.extra.raw.slice(1, -1);\n\n      return this.finishNodeAt(stmt, \"ExpressionStatement\", directive.loc.end);\n    }\n\n    // ==================================\n    // Overrides\n    // ==================================\n\n    initFunction(\n      node: N.BodilessFunctionOrMethodBase,\n      isAsync: ?boolean,\n    ): void {\n      super.initFunction(node, isAsync);\n      node.expression = false;\n    }\n\n    checkDeclaration(node: N.Pattern | N.ObjectProperty): void {\n      if (node != null && this.isObjectProperty(node)) {\n        this.checkDeclaration(((node: any): N.EstreeProperty).value);\n      } else {\n        super.checkDeclaration(node);\n      }\n    }\n\n    getObjectOrClassMethodParams(method: N.ObjectMethod | N.ClassMethod) {\n      return ((method: any): N.EstreeProperty | N.EstreeMethodDefinition).value\n        .params;\n    }\n\n    isValidDirective(stmt: N.Statement): boolean {\n      return (\n        stmt.type === \"ExpressionStatement\" &&\n        stmt.expression.type === \"Literal\" &&\n        typeof stmt.expression.value === \"string\" &&\n        !stmt.expression.extra?.parenthesized\n      );\n    }\n\n    parseBlockBody(\n      node: N.BlockStatementLike,\n      ...args: [?boolean, boolean, TokenType, void | (boolean => void)]\n    ): void {\n      super.parseBlockBody(node, ...args);\n\n      const directiveStatements = node.directives.map(d =>\n        this.directiveToStmt(d),\n      );\n      node.body = directiveStatements.concat(node.body);\n      // $FlowIgnore - directives isn't optional in the type definition\n      delete node.directives;\n    }\n\n    pushClassMethod(\n      classBody: N.ClassBody,\n      method: N.ClassMethod,\n      isGenerator: boolean,\n      isAsync: boolean,\n      isConstructor: boolean,\n      allowsDirectSuper: boolean,\n    ): void {\n      this.parseMethod(\n        method,\n        isGenerator,\n        isAsync,\n        isConstructor,\n        allowsDirectSuper,\n        \"ClassMethod\",\n        true,\n      );\n      if (method.typeParameters) {\n        // $FlowIgnore\n        method.value.typeParameters = method.typeParameters;\n        delete method.typeParameters;\n      }\n      classBody.body.push(method);\n    }\n\n    parsePrivateName(): any {\n      const node = super.parsePrivateName();\n      if (!process.env.BABEL_8_BREAKING) {\n        if (!this.getPluginOption(\"estree\", \"classFeatures\")) {\n          return node;\n        }\n      }\n      return this.convertPrivateNameToPrivateIdentifier(node);\n    }\n\n    convertPrivateNameToPrivateIdentifier(\n      node: N.PrivateName,\n    ): N.EstreePrivateIdentifier {\n      const name = super.getPrivateNameSV(node);\n      node = (node: any);\n      delete node.id;\n      node.name = name;\n      node.type = \"PrivateIdentifier\";\n      return node;\n    }\n\n    isPrivateName(node: N.Node): boolean {\n      if (!process.env.BABEL_8_BREAKING) {\n        if (!this.getPluginOption(\"estree\", \"classFeatures\")) {\n          return super.isPrivateName(node);\n        }\n      }\n      return node.type === \"PrivateIdentifier\";\n    }\n\n    getPrivateNameSV(node: N.Node): string {\n      if (!process.env.BABEL_8_BREAKING) {\n        if (!this.getPluginOption(\"estree\", \"classFeatures\")) {\n          return super.getPrivateNameSV(node);\n        }\n      }\n      return node.name;\n    }\n\n    parseLiteral<T: N.Node>(value: any, type: $ElementType<T, \"type\">): T {\n      const node = super.parseLiteral<T>(value, type);\n      node.raw = node.extra.raw;\n      delete node.extra;\n\n      return node;\n    }\n\n    parseFunctionBody(\n      node: N.Function,\n      allowExpression: ?boolean,\n      isMethod?: boolean = false,\n    ): void {\n      super.parseFunctionBody(node, allowExpression, isMethod);\n      node.expression = node.body.type !== \"BlockStatement\";\n    }\n\n    parseMethod<T: N.MethodLike>(\n      node: T,\n      isGenerator: boolean,\n      isAsync: boolean,\n      isConstructor: boolean,\n      allowDirectSuper: boolean,\n      type: string,\n      inClassScope: boolean = false,\n    ): T {\n      let funcNode = this.startNode();\n      funcNode.kind = node.kind; // provide kind, so super method correctly sets state\n      funcNode = super.parseMethod(\n        funcNode,\n        isGenerator,\n        isAsync,\n        isConstructor,\n        allowDirectSuper,\n        type,\n        inClassScope,\n      );\n      funcNode.type = \"FunctionExpression\";\n      delete funcNode.kind;\n      // $FlowIgnore\n      node.value = funcNode;\n      if (type === \"ClassPrivateMethod\") {\n        // $FlowIgnore\n        node.computed = false;\n      }\n      type = \"MethodDefinition\";\n      return this.finishNode(node, type);\n    }\n\n    parseClassProperty(...args: [N.ClassProperty]): any {\n      const propertyNode = (super.parseClassProperty(...args): any);\n      if (!process.env.BABEL_8_BREAKING) {\n        if (!this.getPluginOption(\"estree\", \"classFeatures\")) {\n          return (propertyNode: N.EstreePropertyDefinition);\n        }\n      }\n      propertyNode.type = \"PropertyDefinition\";\n      return (propertyNode: N.EstreePropertyDefinition);\n    }\n\n    parseClassPrivateProperty(...args: [N.ClassPrivateProperty]): any {\n      const propertyNode = (super.parseClassPrivateProperty(...args): any);\n      if (!process.env.BABEL_8_BREAKING) {\n        if (!this.getPluginOption(\"estree\", \"classFeatures\")) {\n          return (propertyNode: N.EstreePropertyDefinition);\n        }\n      }\n      propertyNode.type = \"PropertyDefinition\";\n      propertyNode.computed = false;\n      return (propertyNode: N.EstreePropertyDefinition);\n    }\n\n    parseObjectMethod(\n      prop: N.ObjectMethod,\n      isGenerator: boolean,\n      isAsync: boolean,\n      isPattern: boolean,\n      isAccessor: boolean,\n    ): ?N.ObjectMethod {\n      const node: N.EstreeProperty = (super.parseObjectMethod(\n        prop,\n        isGenerator,\n        isAsync,\n        isPattern,\n        isAccessor,\n      ): any);\n\n      if (node) {\n        node.type = \"Property\";\n        if (((node: any): N.ClassMethod).kind === \"method\") node.kind = \"init\";\n        node.shorthand = false;\n      }\n\n      return (node: any);\n    }\n\n    parseObjectProperty(\n      prop: N.ObjectProperty,\n      startPos: ?number,\n      startLoc: ?Position,\n      isPattern: boolean,\n      refExpressionErrors: ?ExpressionErrors,\n    ): ?N.ObjectProperty {\n      const node: N.EstreeProperty = (super.parseObjectProperty(\n        prop,\n        startPos,\n        startLoc,\n        isPattern,\n        refExpressionErrors,\n      ): any);\n\n      if (node) {\n        node.kind = \"init\";\n        node.type = \"Property\";\n      }\n\n      return (node: any);\n    }\n\n    isValidLVal(type: string, ...rest) {\n      return type === \"Property\" ? \"value\" : super.isValidLVal(type, ...rest);\n    }\n\n    isAssignable(node: N.Node, isBinding?: boolean): boolean {\n      if (node != null && this.isObjectProperty(node)) {\n        return this.isAssignable(node.value, isBinding);\n      }\n      return super.isAssignable(node, isBinding);\n    }\n\n    toAssignable(node: N.Node, isLHS: boolean = false): void {\n      if (node != null && this.isObjectProperty(node)) {\n        const { key, value } = node;\n        if (this.isPrivateName(key)) {\n          this.classScope.usePrivateName(\n            this.getPrivateNameSV(key),\n            key.loc.start,\n          );\n        }\n        this.toAssignable(value, isLHS);\n      } else {\n        super.toAssignable(node, isLHS);\n      }\n    }\n\n    toAssignableObjectExpressionProp(prop: N.Node) {\n      if (prop.kind === \"get\" || prop.kind === \"set\") {\n        this.raise(Errors.PatternHasAccessor, { at: prop.key });\n      } else if (prop.method) {\n        this.raise(Errors.PatternHasMethod, { at: prop.key });\n      } else {\n        super.toAssignableObjectExpressionProp(...arguments);\n      }\n    }\n\n    finishCallExpression<T: N.CallExpression | N.OptionalCallExpression>(\n      node: T,\n      optional: boolean,\n    ): N.Expression {\n      super.finishCallExpression(node, optional);\n\n      if (node.callee.type === \"Import\") {\n        ((node: N.Node): N.EstreeImportExpression).type = \"ImportExpression\";\n        ((node: N.Node): N.EstreeImportExpression).source = node.arguments[0];\n        if (this.hasPlugin(\"importAssertions\")) {\n          ((node: N.Node): N.EstreeImportExpression).attributes =\n            node.arguments[1] ?? null;\n        }\n        // $FlowIgnore - arguments isn't optional in the type definition\n        delete node.arguments;\n        // $FlowIgnore - callee isn't optional in the type definition\n        delete node.callee;\n      }\n\n      return node;\n    }\n\n    toReferencedArguments(\n      node:\n        | N.CallExpression\n        | N.OptionalCallExpression\n        | N.EstreeImportExpression,\n      /* isParenthesizedExpr?: boolean, */\n    ) {\n      // ImportExpressions do not have an arguments array.\n      if (node.type === \"ImportExpression\") {\n        return;\n      }\n\n      super.toReferencedArguments(node);\n    }\n\n    parseExport(node: N.Node) {\n      super.parseExport(node);\n\n      switch (node.type) {\n        case \"ExportAllDeclaration\":\n          node.exported = null;\n          break;\n\n        case \"ExportNamedDeclaration\":\n          if (\n            node.specifiers.length === 1 &&\n            node.specifiers[0].type === \"ExportNamespaceSpecifier\"\n          ) {\n            node.type = \"ExportAllDeclaration\";\n            node.exported = node.specifiers[0].exported;\n            delete node.specifiers;\n          }\n\n          break;\n      }\n\n      return node;\n    }\n\n    parseSubscript(\n      base: N.Expression,\n      startPos: number,\n      startLoc: Position,\n      noCalls: ?boolean,\n      state: N.ParseSubscriptState,\n    ) {\n      const node = super.parseSubscript(\n        base,\n        startPos,\n        startLoc,\n        noCalls,\n        state,\n      );\n\n      if (state.optionalChainMember) {\n        // https://github.com/estree/estree/blob/master/es2020.md#chainexpression\n        if (\n          node.type === \"OptionalMemberExpression\" ||\n          node.type === \"OptionalCallExpression\"\n        ) {\n          node.type = node.type.substring(8); // strip Optional prefix\n        }\n        if (state.stop) {\n          const chain = this.startNodeAtNode(node);\n          chain.expression = node;\n          return this.finishNode(chain, \"ChainExpression\");\n        }\n      } else if (\n        node.type === \"MemberExpression\" ||\n        node.type === \"CallExpression\"\n      ) {\n        node.optional = false;\n      }\n\n      return node;\n    }\n\n    hasPropertyAsPrivateName(node: N.Node): boolean {\n      if (node.type === \"ChainExpression\") {\n        node = node.expression;\n      }\n      return super.hasPropertyAsPrivateName(node);\n    }\n\n    isOptionalChain(node: N.Node): boolean {\n      return node.type === \"ChainExpression\";\n    }\n\n    isObjectProperty(node: N.Node): boolean {\n      return node.type === \"Property\" && node.kind === \"init\" && !node.method;\n    }\n\n    isObjectMethod(node: N.Node): boolean {\n      return node.method || node.kind === \"get\" || node.kind === \"set\";\n    }\n\n    finishNodeAt<T: NodeType>(node: T, type: string, endLoc: Position): T {\n      return toESTreeLocation(super.finishNodeAt(node, type, endLoc));\n    }\n\n    resetStartLocation(node: N.Node, start: number, startLoc: Position) {\n      super.resetStartLocation(node, start, startLoc);\n      toESTreeLocation(node);\n    }\n\n    resetEndLocation(\n      node: NodeBase,\n      endLoc?: Position = this.state.lastTokEndLoc,\n    ): void {\n      super.resetEndLocation(node, endLoc);\n      toESTreeLocation(node);\n    }\n  };\n","// @flow\n\n// The token context is used in JSX plugin to track\n// jsx tag / jsx text / normal JavaScript expression\n\nexport class TokContext {\n  constructor(token: string, preserveSpace?: boolean) {\n    this.token = token;\n    this.preserveSpace = !!preserveSpace;\n  }\n\n  token: string;\n  preserveSpace: boolean;\n}\n\nconst types: {\n  [key: string]: TokContext,\n} = {\n  brace: new TokContext(\"{\"), // normal JavaScript expression\n  j_oTag: new TokContext(\"<tag\"), // JSX opening tag\n  j_cTag: new TokContext(\"</tag\"), // JSX closing tag\n  j_expr: new TokContext(\"<tag>...</tag>\", true), // JSX expressions\n};\n\nif (!process.env.BABEL_8_BREAKING) {\n  types.template = new TokContext(\"`\", true);\n}\n\nexport { types };\n","// @flow\nimport { types as tc, type TokContext } from \"./context\";\n// ## Token types\n\n// The assignment of fine-grained, information-carrying type objects\n// allows the tokenizer to store the information it has about a\n// token in a way that is very cheap for the parser to look up.\n\n// All token type variables start with an underscore, to make them\n// easy to recognize.\n\n// The `beforeExpr` property is used to disambiguate between 1) binary\n// expression (<) and JSX Tag start (<name>); 2) object literal and JSX\n// texts. It is set on the `updateContext` function in the JSX plugin.\n\n// The `startsExpr` property is used to determine whether an expression\n// may be the “argument” subexpression of a `yield` expression or\n// `yield` statement. It is set on all token types that may be at the\n// start of a subexpression.\n\n// `isLoop` marks a keyword as starting a loop, which is important\n// to know when parsing a label, in order to allow or disallow\n// continue jumps to that label.\n\nconst beforeExpr = true;\nconst startsExpr = true;\nconst isLoop = true;\nconst isAssign = true;\nconst prefix = true;\nconst postfix = true;\n\ntype TokenOptions = {\n  keyword?: string,\n  beforeExpr?: boolean,\n  startsExpr?: boolean,\n  rightAssociative?: boolean,\n  isLoop?: boolean,\n  isAssign?: boolean,\n  prefix?: boolean,\n  postfix?: boolean,\n  binop?: ?number,\n};\n\n// Internally the tokenizer stores token as a number\nexport opaque type TokenType = number;\n\n// The `ExportedTokenType` is exported via `tokTypes` and accessible\n// when `tokens: true` is enabled. Unlike internal token type, it provides\n// metadata of the tokens.\nexport class ExportedTokenType {\n  label: string;\n  keyword: ?string;\n  beforeExpr: boolean;\n  startsExpr: boolean;\n  rightAssociative: boolean;\n  isLoop: boolean;\n  isAssign: boolean;\n  prefix: boolean;\n  postfix: boolean;\n  binop: ?number;\n  // todo(Babel 8): remove updateContext from exposed token layout\n  declare updateContext: ?(context: Array<TokContext>) => void;\n\n  constructor(label: string, conf: TokenOptions = {}) {\n    this.label = label;\n    this.keyword = conf.keyword;\n    this.beforeExpr = !!conf.beforeExpr;\n    this.startsExpr = !!conf.startsExpr;\n    this.rightAssociative = !!conf.rightAssociative;\n    this.isLoop = !!conf.isLoop;\n    this.isAssign = !!conf.isAssign;\n    this.prefix = !!conf.prefix;\n    this.postfix = !!conf.postfix;\n    this.binop = conf.binop != null ? conf.binop : null;\n    if (!process.env.BABEL_8_BREAKING) {\n      this.updateContext = null;\n    }\n  }\n}\n\n// A map from keyword/keyword-like string value to the token type\nexport const keywords = new Map<string, TokenType>();\n\nfunction createKeyword(name: string, options: TokenOptions = {}): TokenType {\n  options.keyword = name;\n  const token = createToken(name, options);\n  keywords.set(name, token);\n  return token;\n}\n\nfunction createBinop(name: string, binop: number) {\n  return createToken(name, { beforeExpr, binop });\n}\n\nlet tokenTypeCounter = -1;\nexport const tokenTypes: ExportedTokenType[] = [];\nconst tokenLabels: string[] = [];\nconst tokenBinops: number[] = [];\nconst tokenBeforeExprs: boolean[] = [];\nconst tokenStartsExprs: boolean[] = [];\nconst tokenPrefixes: boolean[] = [];\n\nfunction createToken(name: string, options: TokenOptions = {}): TokenType {\n  ++tokenTypeCounter;\n  tokenLabels.push(name);\n  tokenBinops.push(options.binop ?? -1);\n  tokenBeforeExprs.push(options.beforeExpr ?? false);\n  tokenStartsExprs.push(options.startsExpr ?? false);\n  tokenPrefixes.push(options.prefix ?? false);\n  tokenTypes.push(new ExportedTokenType(name, options));\n\n  return tokenTypeCounter;\n}\n\nfunction createKeywordLike(\n  name: string,\n  options: TokenOptions = {},\n): TokenType {\n  ++tokenTypeCounter;\n  keywords.set(name, tokenTypeCounter);\n  tokenLabels.push(name);\n  tokenBinops.push(options.binop ?? -1);\n  tokenBeforeExprs.push(options.beforeExpr ?? false);\n  tokenStartsExprs.push(options.startsExpr ?? false);\n  tokenPrefixes.push(options.prefix ?? false);\n  // In the exported token type, we set the label as \"name\" for backward compatibility with Babel 7\n  tokenTypes.push(new ExportedTokenType(\"name\", options));\n\n  return tokenTypeCounter;\n}\n\n// For performance the token type helpers depend on the following declarations order.\n// When adding new token types, please also check if the token helpers need update.\n\nexport const tt: { [name: string]: TokenType } = {\n  // Punctuation token types.\n  bracketL: createToken(\"[\", { beforeExpr, startsExpr }),\n  bracketHashL: createToken(\"#[\", { beforeExpr, startsExpr }),\n  bracketBarL: createToken(\"[|\", { beforeExpr, startsExpr }),\n  bracketR: createToken(\"]\"),\n  bracketBarR: createToken(\"|]\"),\n  braceL: createToken(\"{\", { beforeExpr, startsExpr }),\n  braceBarL: createToken(\"{|\", { beforeExpr, startsExpr }),\n  braceHashL: createToken(\"#{\", { beforeExpr, startsExpr }),\n  braceR: createToken(\"}\"),\n  braceBarR: createToken(\"|}\"),\n  parenL: createToken(\"(\", { beforeExpr, startsExpr }),\n  parenR: createToken(\")\"),\n  comma: createToken(\",\", { beforeExpr }),\n  semi: createToken(\";\", { beforeExpr }),\n  colon: createToken(\":\", { beforeExpr }),\n  doubleColon: createToken(\"::\", { beforeExpr }),\n  dot: createToken(\".\"),\n  question: createToken(\"?\", { beforeExpr }),\n  questionDot: createToken(\"?.\"),\n  arrow: createToken(\"=>\", { beforeExpr }),\n  template: createToken(\"template\"),\n  ellipsis: createToken(\"...\", { beforeExpr }),\n  backQuote: createToken(\"`\", { startsExpr }),\n  dollarBraceL: createToken(\"${\", { beforeExpr, startsExpr }),\n  // start: isTemplate\n  templateTail: createToken(\"...`\", { startsExpr }),\n  templateNonTail: createToken(\"...${\", { beforeExpr, startsExpr }),\n  // end: isTemplate\n  at: createToken(\"@\"),\n  hash: createToken(\"#\", { startsExpr }),\n\n  // Special hashbang token.\n  interpreterDirective: createToken(\"#!...\"),\n\n  // Operators. These carry several kinds of properties to help the\n  // parser use them properly (the presence of these properties is\n  // what categorizes them as operators).\n  //\n  // `binop`, when present, specifies that this operator is a binary\n  // operator, and will refer to its precedence.\n  //\n  // `prefix` and `postfix` mark the operator as a prefix or postfix\n  // unary operator.\n  //\n  // `isAssign` marks all of `=`, `+=`, `-=` etcetera, which act as\n  // binary operators with a very low precedence, that should result\n  // in AssignmentExpression nodes.\n\n  // start: isAssign\n  eq: createToken(\"=\", { beforeExpr, isAssign }),\n  assign: createToken(\"_=\", { beforeExpr, isAssign }),\n  slashAssign: createToken(\"_=\", { beforeExpr, isAssign }),\n  // These are only needed to support % and ^ as a Hack-pipe topic token.\n  // When the proposal settles on a token, the others can be merged with\n  // tt.assign.\n  xorAssign: createToken(\"_=\", { beforeExpr, isAssign }),\n  moduloAssign: createToken(\"_=\", { beforeExpr, isAssign }),\n  // end: isAssign\n\n  incDec: createToken(\"++/--\", { prefix, postfix, startsExpr }),\n  bang: createToken(\"!\", { beforeExpr, prefix, startsExpr }),\n  tilde: createToken(\"~\", { beforeExpr, prefix, startsExpr }),\n\n  // More possible topic tokens.\n  // When the proposal settles on a token, at least one of these may be removed.\n  doubleCaret: createToken(\"^^\", { startsExpr }),\n  doubleAt: createToken(\"@@\", { startsExpr }),\n\n  // start: isBinop\n  pipeline: createBinop(\"|>\", 0),\n  nullishCoalescing: createBinop(\"??\", 1),\n  logicalOR: createBinop(\"||\", 1),\n  logicalAND: createBinop(\"&&\", 2),\n  bitwiseOR: createBinop(\"|\", 3),\n  bitwiseXOR: createBinop(\"^\", 4),\n  bitwiseAND: createBinop(\"&\", 5),\n  equality: createBinop(\"==/!=/===/!==\", 6),\n  lt: createBinop(\"</>/<=/>=\", 7),\n  gt: createBinop(\"</>/<=/>=\", 7),\n  relational: createBinop(\"</>/<=/>=\", 7),\n  bitShift: createBinop(\"<</>>/>>>\", 8),\n  bitShiftL: createBinop(\"<</>>/>>>\", 8),\n  bitShiftR: createBinop(\"<</>>/>>>\", 8),\n  plusMin: createToken(\"+/-\", { beforeExpr, binop: 9, prefix, startsExpr }),\n  // startsExpr: required by v8intrinsic plugin\n  modulo: createToken(\"%\", { binop: 10, startsExpr }),\n  // unset `beforeExpr` as it can be `function *`\n  star: createToken(\"*\", { binop: 10 }),\n  slash: createBinop(\"/\", 10),\n  exponent: createToken(\"**\", {\n    beforeExpr,\n    binop: 11,\n    rightAssociative: true,\n  }),\n\n  // Keywords\n  // Don't forget to update packages/babel-helper-validator-identifier/src/keyword.js\n  // when new keywords are added\n  // start: isLiteralPropertyName\n  // start: isKeyword\n  _in: createKeyword(\"in\", { beforeExpr, binop: 7 }),\n  _instanceof: createKeyword(\"instanceof\", { beforeExpr, binop: 7 }),\n  // end: isBinop\n  _break: createKeyword(\"break\"),\n  _case: createKeyword(\"case\", { beforeExpr }),\n  _catch: createKeyword(\"catch\"),\n  _continue: createKeyword(\"continue\"),\n  _debugger: createKeyword(\"debugger\"),\n  _default: createKeyword(\"default\", { beforeExpr }),\n  _else: createKeyword(\"else\", { beforeExpr }),\n  _finally: createKeyword(\"finally\"),\n  _function: createKeyword(\"function\", { startsExpr }),\n  _if: createKeyword(\"if\"),\n  _return: createKeyword(\"return\", { beforeExpr }),\n  _switch: createKeyword(\"switch\"),\n  _throw: createKeyword(\"throw\", { beforeExpr, prefix, startsExpr }),\n  _try: createKeyword(\"try\"),\n  _var: createKeyword(\"var\"),\n  _const: createKeyword(\"const\"),\n  _with: createKeyword(\"with\"),\n  _new: createKeyword(\"new\", { beforeExpr, startsExpr }),\n  _this: createKeyword(\"this\", { startsExpr }),\n  _super: createKeyword(\"super\", { startsExpr }),\n  _class: createKeyword(\"class\", { startsExpr }),\n  _extends: createKeyword(\"extends\", { beforeExpr }),\n  _export: createKeyword(\"export\"),\n  _import: createKeyword(\"import\", { startsExpr }),\n  _null: createKeyword(\"null\", { startsExpr }),\n  _true: createKeyword(\"true\", { startsExpr }),\n  _false: createKeyword(\"false\", { startsExpr }),\n  _typeof: createKeyword(\"typeof\", { beforeExpr, prefix, startsExpr }),\n  _void: createKeyword(\"void\", { beforeExpr, prefix, startsExpr }),\n  _delete: createKeyword(\"delete\", { beforeExpr, prefix, startsExpr }),\n  // start: isLoop\n  _do: createKeyword(\"do\", { isLoop, beforeExpr }),\n  _for: createKeyword(\"for\", { isLoop }),\n  _while: createKeyword(\"while\", { isLoop }),\n  // end: isLoop\n  // end: isKeyword\n\n  // Primary literals\n  // start: isIdentifier\n  _as: createKeywordLike(\"as\", { startsExpr }),\n  _assert: createKeywordLike(\"assert\", { startsExpr }),\n  _async: createKeywordLike(\"async\", { startsExpr }),\n  _await: createKeywordLike(\"await\", { startsExpr }),\n  _from: createKeywordLike(\"from\", { startsExpr }),\n  _get: createKeywordLike(\"get\", { startsExpr }),\n  _let: createKeywordLike(\"let\", { startsExpr }),\n  _meta: createKeywordLike(\"meta\", { startsExpr }),\n  _of: createKeywordLike(\"of\", { startsExpr }),\n  _sent: createKeywordLike(\"sent\", { startsExpr }),\n  _set: createKeywordLike(\"set\", { startsExpr }),\n  _static: createKeywordLike(\"static\", { startsExpr }),\n  _yield: createKeywordLike(\"yield\", { startsExpr }),\n\n  // Flow and TypeScript Keywordlike\n  _asserts: createKeywordLike(\"asserts\", { startsExpr }),\n  _checks: createKeywordLike(\"checks\", { startsExpr }),\n  _exports: createKeywordLike(\"exports\", { startsExpr }),\n  _global: createKeywordLike(\"global\", { startsExpr }),\n  _implements: createKeywordLike(\"implements\", { startsExpr }),\n  _intrinsic: createKeywordLike(\"intrinsic\", { startsExpr }),\n  _infer: createKeywordLike(\"infer\", { startsExpr }),\n  _is: createKeywordLike(\"is\", { startsExpr }),\n  _mixins: createKeywordLike(\"mixins\", { startsExpr }),\n  _proto: createKeywordLike(\"proto\", { startsExpr }),\n  _require: createKeywordLike(\"require\", { startsExpr }),\n  // start: isTSTypeOperator\n  _keyof: createKeywordLike(\"keyof\", { startsExpr }),\n  _readonly: createKeywordLike(\"readonly\", { startsExpr }),\n  _unique: createKeywordLike(\"unique\", { startsExpr }),\n  // end: isTSTypeOperator\n  // start: isTSDeclarationStart\n  _abstract: createKeywordLike(\"abstract\", { startsExpr }),\n  _declare: createKeywordLike(\"declare\", { startsExpr }),\n  _enum: createKeywordLike(\"enum\", { startsExpr }),\n  _module: createKeywordLike(\"module\", { startsExpr }),\n  _namespace: createKeywordLike(\"namespace\", { startsExpr }),\n  // start: isFlowInterfaceOrTypeOrOpaque\n  _interface: createKeywordLike(\"interface\", { startsExpr }),\n  _type: createKeywordLike(\"type\", { startsExpr }),\n  // end: isTSDeclarationStart\n  _opaque: createKeywordLike(\"opaque\", { startsExpr }),\n  // end: isFlowInterfaceOrTypeOrOpaque\n  name: createToken(\"name\", { startsExpr }),\n  // end: isIdentifier\n\n  string: createToken(\"string\", { startsExpr }),\n  num: createToken(\"num\", { startsExpr }),\n  bigint: createToken(\"bigint\", { startsExpr }),\n  decimal: createToken(\"decimal\", { startsExpr }),\n  // end: isLiteralPropertyName\n  regexp: createToken(\"regexp\", { startsExpr }),\n  privateName: createToken(\"#name\", { startsExpr }),\n  eof: createToken(\"eof\"),\n\n  // jsx plugin\n  jsxName: createToken(\"jsxName\"),\n  jsxText: createToken(\"jsxText\", { beforeExpr: true }),\n  jsxTagStart: createToken(\"jsxTagStart\", { startsExpr: true }),\n  jsxTagEnd: createToken(\"jsxTagEnd\"),\n\n  // placeholder plugin\n  placeholder: createToken(\"%%\", { startsExpr: true }),\n};\n\nexport function tokenIsIdentifier(token: TokenType): boolean {\n  return token >= tt._as && token <= tt.name;\n}\n\nexport function tokenKeywordOrIdentifierIsKeyword(token: TokenType): boolean {\n  // we can remove the token >= tt._in check when we\n  // know a token is either keyword or identifier\n  return token <= tt._while;\n}\n\nexport function tokenIsKeywordOrIdentifier(token: TokenType): boolean {\n  return token >= tt._in && token <= tt.name;\n}\n\nexport function tokenIsLiteralPropertyName(token: TokenType): boolean {\n  return token >= tt._in && token <= tt.decimal;\n}\n\nexport function tokenComesBeforeExpression(token: TokenType): boolean {\n  return tokenBeforeExprs[token];\n}\n\nexport function tokenCanStartExpression(token: TokenType): boolean {\n  return tokenStartsExprs[token];\n}\n\nexport function tokenIsAssignment(token: TokenType): boolean {\n  return token >= tt.eq && token <= tt.moduloAssign;\n}\n\nexport function tokenIsFlowInterfaceOrTypeOrOpaque(token: TokenType): boolean {\n  return token >= tt._interface && token <= tt._opaque;\n}\n\nexport function tokenIsLoop(token: TokenType): boolean {\n  return token >= tt._do && token <= tt._while;\n}\n\nexport function tokenIsKeyword(token: TokenType): boolean {\n  return token >= tt._in && token <= tt._while;\n}\n\nexport function tokenIsOperator(token: TokenType): boolean {\n  return token >= tt.pipeline && token <= tt._instanceof;\n}\n\nexport function tokenIsPostfix(token: TokenType): boolean {\n  return token === tt.incDec;\n}\n\nexport function tokenIsPrefix(token: TokenType): boolean {\n  return tokenPrefixes[token];\n}\n\nexport function tokenIsTSTypeOperator(token: TokenType): boolean {\n  return token >= tt._keyof && token <= tt._unique;\n}\n\nexport function tokenIsTSDeclarationStart(token: TokenType): boolean {\n  return token >= tt._abstract && token <= tt._type;\n}\n\nexport function tokenLabelName(token: TokenType): string {\n  return tokenLabels[token];\n}\n\nexport function tokenOperatorPrecedence(token: TokenType): number {\n  return tokenBinops[token];\n}\n\nexport function tokenIsBinaryOperator(token: TokenType): boolean {\n  return tokenBinops[token] !== -1;\n}\n\nexport function tokenIsRightAssociative(token: TokenType): boolean {\n  return token === tt.exponent;\n}\n\nexport function tokenIsTemplate(token: TokenType): boolean {\n  return token >= tt.templateTail && token <= tt.templateNonTail;\n}\n\nexport function getExportedToken(token: TokenType): ExportedTokenType {\n  return tokenTypes[token];\n}\n\nexport function isTokenType(obj: any): boolean {\n  return typeof obj === \"number\";\n}\n\nif (!process.env.BABEL_8_BREAKING) {\n  tokenTypes[tt.braceR].updateContext = context => {\n    context.pop();\n  };\n\n  tokenTypes[tt.braceL].updateContext =\n    tokenTypes[tt.braceHashL].updateContext =\n    tokenTypes[tt.dollarBraceL].updateContext =\n      context => {\n        context.push(tc.brace);\n      };\n\n  tokenTypes[tt.backQuote].updateContext = context => {\n    if (context[context.length - 1] === tc.template) {\n      context.pop();\n    } else {\n      context.push(tc.template);\n    }\n  };\n\n  tokenTypes[tt.jsxTagStart].updateContext = context => {\n    context.push(tc.j_expr, tc.j_oTag);\n  };\n}\n","import * as charCodes from \"charcodes\";\n\n// ## Character categories\n\n// Big ugly regular expressions that match characters in the\n// whitespace, identifier, and identifier-start categories. These\n// are only applied when a character is found to actually have a\n// code point between 0x80 and 0xffff.\n// Generated by `scripts/generate-identifier-regex.js`.\n\n/* prettier-ignore */\nlet nonASCIIidentifierStartChars = \"\\xaa\\xb5\\xba\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u02c1\\u02c6-\\u02d1\\u02e0-\\u02e4\\u02ec\\u02ee\\u0370-\\u0374\\u0376\\u0377\\u037a-\\u037d\\u037f\\u0386\\u0388-\\u038a\\u038c\\u038e-\\u03a1\\u03a3-\\u03f5\\u03f7-\\u0481\\u048a-\\u052f\\u0531-\\u0556\\u0559\\u0560-\\u0588\\u05d0-\\u05ea\\u05ef-\\u05f2\\u0620-\\u064a\\u066e\\u066f\\u0671-\\u06d3\\u06d5\\u06e5\\u06e6\\u06ee\\u06ef\\u06fa-\\u06fc\\u06ff\\u0710\\u0712-\\u072f\\u074d-\\u07a5\\u07b1\\u07ca-\\u07ea\\u07f4\\u07f5\\u07fa\\u0800-\\u0815\\u081a\\u0824\\u0828\\u0840-\\u0858\\u0860-\\u086a\\u0870-\\u0887\\u0889-\\u088e\\u08a0-\\u08c9\\u0904-\\u0939\\u093d\\u0950\\u0958-\\u0961\\u0971-\\u0980\\u0985-\\u098c\\u098f\\u0990\\u0993-\\u09a8\\u09aa-\\u09b0\\u09b2\\u09b6-\\u09b9\\u09bd\\u09ce\\u09dc\\u09dd\\u09df-\\u09e1\\u09f0\\u09f1\\u09fc\\u0a05-\\u0a0a\\u0a0f\\u0a10\\u0a13-\\u0a28\\u0a2a-\\u0a30\\u0a32\\u0a33\\u0a35\\u0a36\\u0a38\\u0a39\\u0a59-\\u0a5c\\u0a5e\\u0a72-\\u0a74\\u0a85-\\u0a8d\\u0a8f-\\u0a91\\u0a93-\\u0aa8\\u0aaa-\\u0ab0\\u0ab2\\u0ab3\\u0ab5-\\u0ab9\\u0abd\\u0ad0\\u0ae0\\u0ae1\\u0af9\\u0b05-\\u0b0c\\u0b0f\\u0b10\\u0b13-\\u0b28\\u0b2a-\\u0b30\\u0b32\\u0b33\\u0b35-\\u0b39\\u0b3d\\u0b5c\\u0b5d\\u0b5f-\\u0b61\\u0b71\\u0b83\\u0b85-\\u0b8a\\u0b8e-\\u0b90\\u0b92-\\u0b95\\u0b99\\u0b9a\\u0b9c\\u0b9e\\u0b9f\\u0ba3\\u0ba4\\u0ba8-\\u0baa\\u0bae-\\u0bb9\\u0bd0\\u0c05-\\u0c0c\\u0c0e-\\u0c10\\u0c12-\\u0c28\\u0c2a-\\u0c39\\u0c3d\\u0c58-\\u0c5a\\u0c5d\\u0c60\\u0c61\\u0c80\\u0c85-\\u0c8c\\u0c8e-\\u0c90\\u0c92-\\u0ca8\\u0caa-\\u0cb3\\u0cb5-\\u0cb9\\u0cbd\\u0cdd\\u0cde\\u0ce0\\u0ce1\\u0cf1\\u0cf2\\u0d04-\\u0d0c\\u0d0e-\\u0d10\\u0d12-\\u0d3a\\u0d3d\\u0d4e\\u0d54-\\u0d56\\u0d5f-\\u0d61\\u0d7a-\\u0d7f\\u0d85-\\u0d96\\u0d9a-\\u0db1\\u0db3-\\u0dbb\\u0dbd\\u0dc0-\\u0dc6\\u0e01-\\u0e30\\u0e32\\u0e33\\u0e40-\\u0e46\\u0e81\\u0e82\\u0e84\\u0e86-\\u0e8a\\u0e8c-\\u0ea3\\u0ea5\\u0ea7-\\u0eb0\\u0eb2\\u0eb3\\u0ebd\\u0ec0-\\u0ec4\\u0ec6\\u0edc-\\u0edf\\u0f00\\u0f40-\\u0f47\\u0f49-\\u0f6c\\u0f88-\\u0f8c\\u1000-\\u102a\\u103f\\u1050-\\u1055\\u105a-\\u105d\\u1061\\u1065\\u1066\\u106e-\\u1070\\u1075-\\u1081\\u108e\\u10a0-\\u10c5\\u10c7\\u10cd\\u10d0-\\u10fa\\u10fc-\\u1248\\u124a-\\u124d\\u1250-\\u1256\\u1258\\u125a-\\u125d\\u1260-\\u1288\\u128a-\\u128d\\u1290-\\u12b0\\u12b2-\\u12b5\\u12b8-\\u12be\\u12c0\\u12c2-\\u12c5\\u12c8-\\u12d6\\u12d8-\\u1310\\u1312-\\u1315\\u1318-\\u135a\\u1380-\\u138f\\u13a0-\\u13f5\\u13f8-\\u13fd\\u1401-\\u166c\\u166f-\\u167f\\u1681-\\u169a\\u16a0-\\u16ea\\u16ee-\\u16f8\\u1700-\\u1711\\u171f-\\u1731\\u1740-\\u1751\\u1760-\\u176c\\u176e-\\u1770\\u1780-\\u17b3\\u17d7\\u17dc\\u1820-\\u1878\\u1880-\\u18a8\\u18aa\\u18b0-\\u18f5\\u1900-\\u191e\\u1950-\\u196d\\u1970-\\u1974\\u1980-\\u19ab\\u19b0-\\u19c9\\u1a00-\\u1a16\\u1a20-\\u1a54\\u1aa7\\u1b05-\\u1b33\\u1b45-\\u1b4c\\u1b83-\\u1ba0\\u1bae\\u1baf\\u1bba-\\u1be5\\u1c00-\\u1c23\\u1c4d-\\u1c4f\\u1c5a-\\u1c7d\\u1c80-\\u1c88\\u1c90-\\u1cba\\u1cbd-\\u1cbf\\u1ce9-\\u1cec\\u1cee-\\u1cf3\\u1cf5\\u1cf6\\u1cfa\\u1d00-\\u1dbf\\u1e00-\\u1f15\\u1f18-\\u1f1d\\u1f20-\\u1f45\\u1f48-\\u1f4d\\u1f50-\\u1f57\\u1f59\\u1f5b\\u1f5d\\u1f5f-\\u1f7d\\u1f80-\\u1fb4\\u1fb6-\\u1fbc\\u1fbe\\u1fc2-\\u1fc4\\u1fc6-\\u1fcc\\u1fd0-\\u1fd3\\u1fd6-\\u1fdb\\u1fe0-\\u1fec\\u1ff2-\\u1ff4\\u1ff6-\\u1ffc\\u2071\\u207f\\u2090-\\u209c\\u2102\\u2107\\u210a-\\u2113\\u2115\\u2118-\\u211d\\u2124\\u2126\\u2128\\u212a-\\u2139\\u213c-\\u213f\\u2145-\\u2149\\u214e\\u2160-\\u2188\\u2c00-\\u2ce4\\u2ceb-\\u2cee\\u2cf2\\u2cf3\\u2d00-\\u2d25\\u2d27\\u2d2d\\u2d30-\\u2d67\\u2d6f\\u2d80-\\u2d96\\u2da0-\\u2da6\\u2da8-\\u2dae\\u2db0-\\u2db6\\u2db8-\\u2dbe\\u2dc0-\\u2dc6\\u2dc8-\\u2dce\\u2dd0-\\u2dd6\\u2dd8-\\u2dde\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303c\\u3041-\\u3096\\u309b-\\u309f\\u30a1-\\u30fa\\u30fc-\\u30ff\\u3105-\\u312f\\u3131-\\u318e\\u31a0-\\u31bf\\u31f0-\\u31ff\\u3400-\\u4dbf\\u4e00-\\ua48c\\ua4d0-\\ua4fd\\ua500-\\ua60c\\ua610-\\ua61f\\ua62a\\ua62b\\ua640-\\ua66e\\ua67f-\\ua69d\\ua6a0-\\ua6ef\\ua717-\\ua71f\\ua722-\\ua788\\ua78b-\\ua7ca\\ua7d0\\ua7d1\\ua7d3\\ua7d5-\\ua7d9\\ua7f2-\\ua801\\ua803-\\ua805\\ua807-\\ua80a\\ua80c-\\ua822\\ua840-\\ua873\\ua882-\\ua8b3\\ua8f2-\\ua8f7\\ua8fb\\ua8fd\\ua8fe\\ua90a-\\ua925\\ua930-\\ua946\\ua960-\\ua97c\\ua984-\\ua9b2\\ua9cf\\ua9e0-\\ua9e4\\ua9e6-\\ua9ef\\ua9fa-\\ua9fe\\uaa00-\\uaa28\\uaa40-\\uaa42\\uaa44-\\uaa4b\\uaa60-\\uaa76\\uaa7a\\uaa7e-\\uaaaf\\uaab1\\uaab5\\uaab6\\uaab9-\\uaabd\\uaac0\\uaac2\\uaadb-\\uaadd\\uaae0-\\uaaea\\uaaf2-\\uaaf4\\uab01-\\uab06\\uab09-\\uab0e\\uab11-\\uab16\\uab20-\\uab26\\uab28-\\uab2e\\uab30-\\uab5a\\uab5c-\\uab69\\uab70-\\uabe2\\uac00-\\ud7a3\\ud7b0-\\ud7c6\\ud7cb-\\ud7fb\\uf900-\\ufa6d\\ufa70-\\ufad9\\ufb00-\\ufb06\\ufb13-\\ufb17\\ufb1d\\ufb1f-\\ufb28\\ufb2a-\\ufb36\\ufb38-\\ufb3c\\ufb3e\\ufb40\\ufb41\\ufb43\\ufb44\\ufb46-\\ufbb1\\ufbd3-\\ufd3d\\ufd50-\\ufd8f\\ufd92-\\ufdc7\\ufdf0-\\ufdfb\\ufe70-\\ufe74\\ufe76-\\ufefc\\uff21-\\uff3a\\uff41-\\uff5a\\uff66-\\uffbe\\uffc2-\\uffc7\\uffca-\\uffcf\\uffd2-\\uffd7\\uffda-\\uffdc\";\n/* prettier-ignore */\nlet nonASCIIidentifierChars = \"\\u200c\\u200d\\xb7\\u0300-\\u036f\\u0387\\u0483-\\u0487\\u0591-\\u05bd\\u05bf\\u05c1\\u05c2\\u05c4\\u05c5\\u05c7\\u0610-\\u061a\\u064b-\\u0669\\u0670\\u06d6-\\u06dc\\u06df-\\u06e4\\u06e7\\u06e8\\u06ea-\\u06ed\\u06f0-\\u06f9\\u0711\\u0730-\\u074a\\u07a6-\\u07b0\\u07c0-\\u07c9\\u07eb-\\u07f3\\u07fd\\u0816-\\u0819\\u081b-\\u0823\\u0825-\\u0827\\u0829-\\u082d\\u0859-\\u085b\\u0898-\\u089f\\u08ca-\\u08e1\\u08e3-\\u0903\\u093a-\\u093c\\u093e-\\u094f\\u0951-\\u0957\\u0962\\u0963\\u0966-\\u096f\\u0981-\\u0983\\u09bc\\u09be-\\u09c4\\u09c7\\u09c8\\u09cb-\\u09cd\\u09d7\\u09e2\\u09e3\\u09e6-\\u09ef\\u09fe\\u0a01-\\u0a03\\u0a3c\\u0a3e-\\u0a42\\u0a47\\u0a48\\u0a4b-\\u0a4d\\u0a51\\u0a66-\\u0a71\\u0a75\\u0a81-\\u0a83\\u0abc\\u0abe-\\u0ac5\\u0ac7-\\u0ac9\\u0acb-\\u0acd\\u0ae2\\u0ae3\\u0ae6-\\u0aef\\u0afa-\\u0aff\\u0b01-\\u0b03\\u0b3c\\u0b3e-\\u0b44\\u0b47\\u0b48\\u0b4b-\\u0b4d\\u0b55-\\u0b57\\u0b62\\u0b63\\u0b66-\\u0b6f\\u0b82\\u0bbe-\\u0bc2\\u0bc6-\\u0bc8\\u0bca-\\u0bcd\\u0bd7\\u0be6-\\u0bef\\u0c00-\\u0c04\\u0c3c\\u0c3e-\\u0c44\\u0c46-\\u0c48\\u0c4a-\\u0c4d\\u0c55\\u0c56\\u0c62\\u0c63\\u0c66-\\u0c6f\\u0c81-\\u0c83\\u0cbc\\u0cbe-\\u0cc4\\u0cc6-\\u0cc8\\u0cca-\\u0ccd\\u0cd5\\u0cd6\\u0ce2\\u0ce3\\u0ce6-\\u0cef\\u0d00-\\u0d03\\u0d3b\\u0d3c\\u0d3e-\\u0d44\\u0d46-\\u0d48\\u0d4a-\\u0d4d\\u0d57\\u0d62\\u0d63\\u0d66-\\u0d6f\\u0d81-\\u0d83\\u0dca\\u0dcf-\\u0dd4\\u0dd6\\u0dd8-\\u0ddf\\u0de6-\\u0def\\u0df2\\u0df3\\u0e31\\u0e34-\\u0e3a\\u0e47-\\u0e4e\\u0e50-\\u0e59\\u0eb1\\u0eb4-\\u0ebc\\u0ec8-\\u0ecd\\u0ed0-\\u0ed9\\u0f18\\u0f19\\u0f20-\\u0f29\\u0f35\\u0f37\\u0f39\\u0f3e\\u0f3f\\u0f71-\\u0f84\\u0f86\\u0f87\\u0f8d-\\u0f97\\u0f99-\\u0fbc\\u0fc6\\u102b-\\u103e\\u1040-\\u1049\\u1056-\\u1059\\u105e-\\u1060\\u1062-\\u1064\\u1067-\\u106d\\u1071-\\u1074\\u1082-\\u108d\\u108f-\\u109d\\u135d-\\u135f\\u1369-\\u1371\\u1712-\\u1715\\u1732-\\u1734\\u1752\\u1753\\u1772\\u1773\\u17b4-\\u17d3\\u17dd\\u17e0-\\u17e9\\u180b-\\u180d\\u180f-\\u1819\\u18a9\\u1920-\\u192b\\u1930-\\u193b\\u1946-\\u194f\\u19d0-\\u19da\\u1a17-\\u1a1b\\u1a55-\\u1a5e\\u1a60-\\u1a7c\\u1a7f-\\u1a89\\u1a90-\\u1a99\\u1ab0-\\u1abd\\u1abf-\\u1ace\\u1b00-\\u1b04\\u1b34-\\u1b44\\u1b50-\\u1b59\\u1b6b-\\u1b73\\u1b80-\\u1b82\\u1ba1-\\u1bad\\u1bb0-\\u1bb9\\u1be6-\\u1bf3\\u1c24-\\u1c37\\u1c40-\\u1c49\\u1c50-\\u1c59\\u1cd0-\\u1cd2\\u1cd4-\\u1ce8\\u1ced\\u1cf4\\u1cf7-\\u1cf9\\u1dc0-\\u1dff\\u203f\\u2040\\u2054\\u20d0-\\u20dc\\u20e1\\u20e5-\\u20f0\\u2cef-\\u2cf1\\u2d7f\\u2de0-\\u2dff\\u302a-\\u302f\\u3099\\u309a\\ua620-\\ua629\\ua66f\\ua674-\\ua67d\\ua69e\\ua69f\\ua6f0\\ua6f1\\ua802\\ua806\\ua80b\\ua823-\\ua827\\ua82c\\ua880\\ua881\\ua8b4-\\ua8c5\\ua8d0-\\ua8d9\\ua8e0-\\ua8f1\\ua8ff-\\ua909\\ua926-\\ua92d\\ua947-\\ua953\\ua980-\\ua983\\ua9b3-\\ua9c0\\ua9d0-\\ua9d9\\ua9e5\\ua9f0-\\ua9f9\\uaa29-\\uaa36\\uaa43\\uaa4c\\uaa4d\\uaa50-\\uaa59\\uaa7b-\\uaa7d\\uaab0\\uaab2-\\uaab4\\uaab7\\uaab8\\uaabe\\uaabf\\uaac1\\uaaeb-\\uaaef\\uaaf5\\uaaf6\\uabe3-\\uabea\\uabec\\uabed\\uabf0-\\uabf9\\ufb1e\\ufe00-\\ufe0f\\ufe20-\\ufe2f\\ufe33\\ufe34\\ufe4d-\\ufe4f\\uff10-\\uff19\\uff3f\";\n\nconst nonASCIIidentifierStart = new RegExp(\n  \"[\" + nonASCIIidentifierStartChars + \"]\",\n);\nconst nonASCIIidentifier = new RegExp(\n  \"[\" + nonASCIIidentifierStartChars + nonASCIIidentifierChars + \"]\",\n);\n\nnonASCIIidentifierStartChars = nonASCIIidentifierChars = null;\n\n// These are a run-length and offset-encoded representation of the\n// >0xffff code points that are a valid part of identifiers. The\n// offset starts at 0x10000, and each pair of numbers represents an\n// offset to the next range, and then a size of the range. They were\n// generated by `scripts/generate-identifier-regex.js`.\n/* prettier-ignore */\nconst astralIdentifierStartCodes = [0,11,2,25,2,18,2,1,2,14,3,13,35,122,70,52,268,28,4,48,48,31,14,29,6,37,11,29,3,35,5,7,2,4,43,157,19,35,5,35,5,39,9,51,13,10,2,14,2,6,2,1,2,10,2,14,2,6,2,1,68,310,10,21,11,7,25,5,2,41,2,8,70,5,3,0,2,43,2,1,4,0,3,22,11,22,10,30,66,18,2,1,11,21,11,25,71,55,7,1,65,0,16,3,2,2,2,28,43,28,4,28,36,7,2,27,28,53,11,21,11,18,14,17,111,72,56,50,14,50,14,35,349,41,7,1,79,28,11,0,9,21,43,17,47,20,28,22,13,52,58,1,3,0,14,44,33,24,27,35,30,0,3,0,9,34,4,0,13,47,15,3,22,0,2,0,36,17,2,24,85,6,2,0,2,3,2,14,2,9,8,46,39,7,3,1,3,21,2,6,2,1,2,4,4,0,19,0,13,4,159,52,19,3,21,2,31,47,21,1,2,0,185,46,42,3,37,47,21,0,60,42,14,0,72,26,38,6,186,43,117,63,32,7,3,0,3,7,2,1,2,23,16,0,2,0,95,7,3,38,17,0,2,0,29,0,11,39,8,0,22,0,12,45,20,0,19,72,264,8,2,36,18,0,50,29,113,6,2,1,2,37,22,0,26,5,2,1,2,31,15,0,328,18,190,0,80,921,103,110,18,195,2637,96,16,1070,4050,582,8634,568,8,30,18,78,18,29,19,47,17,3,32,20,6,18,689,63,129,74,6,0,67,12,65,1,2,0,29,6135,9,1237,43,8,8936,3,2,6,2,1,2,290,46,2,18,3,9,395,2309,106,6,12,4,8,8,9,5991,84,2,70,2,1,3,0,3,1,3,3,2,11,2,0,2,6,2,64,2,3,3,7,2,6,2,27,2,3,2,4,2,0,4,6,2,339,3,24,2,24,2,30,2,24,2,30,2,24,2,30,2,24,2,30,2,24,2,7,1845,30,482,44,11,6,17,0,322,29,19,43,1269,6,2,3,2,1,2,14,2,196,60,67,8,0,1205,3,2,26,2,1,2,0,3,0,2,9,2,3,2,0,2,0,7,0,5,0,2,0,2,0,2,2,2,1,2,0,3,0,2,0,2,0,2,0,2,0,2,1,2,0,3,3,2,6,2,3,2,3,2,0,2,9,2,16,6,2,2,4,2,16,4421,42719,33,4152,8,221,3,5761,15,7472,3104,541,1507,4938];\n/* prettier-ignore */\nconst astralIdentifierCodes = [509,0,227,0,150,4,294,9,1368,2,2,1,6,3,41,2,5,0,166,1,574,3,9,9,370,1,154,10,50,3,123,2,54,14,32,10,3,1,11,3,46,10,8,0,46,9,7,2,37,13,2,9,6,1,45,0,13,2,49,13,9,3,2,11,83,11,7,0,161,11,6,9,7,3,56,1,2,6,3,1,3,2,10,0,11,1,3,6,4,4,193,17,10,9,5,0,82,19,13,9,214,6,3,8,28,1,83,16,16,9,82,12,9,9,84,14,5,9,243,14,166,9,71,5,2,1,3,3,2,0,2,1,13,9,120,6,3,6,4,0,29,9,41,6,2,3,9,0,10,10,47,15,406,7,2,7,17,9,57,21,2,13,123,5,4,0,2,1,2,6,2,0,9,9,49,4,2,1,2,4,9,9,330,3,19306,9,87,9,39,4,60,6,26,9,1014,0,2,54,8,3,82,0,12,1,19628,1,4706,45,3,22,543,4,4,5,9,7,3,6,31,3,149,2,1418,49,513,54,5,49,9,0,15,0,23,4,2,14,1361,6,2,16,3,6,2,1,2,4,262,6,10,9,357,0,62,13,1495,6,110,6,6,9,4759,9,787719,239];\n\n// This has a complexity linear to the value of the code. The\n// assumption is that looking up astral identifier characters is\n// rare.\nfunction isInAstralSet(code: number, set: readonly number[]): boolean {\n  let pos = 0x10000;\n  for (let i = 0, length = set.length; i < length; i += 2) {\n    pos += set[i];\n    if (pos > code) return false;\n\n    pos += set[i + 1];\n    if (pos >= code) return true;\n  }\n  return false;\n}\n\n// Test whether a given character code starts an identifier.\n\nexport function isIdentifierStart(code: number): boolean {\n  if (code < charCodes.uppercaseA) return code === charCodes.dollarSign;\n  if (code <= charCodes.uppercaseZ) return true;\n  if (code < charCodes.lowercaseA) return code === charCodes.underscore;\n  if (code <= charCodes.lowercaseZ) return true;\n  if (code <= 0xffff) {\n    return (\n      code >= 0xaa && nonASCIIidentifierStart.test(String.fromCharCode(code))\n    );\n  }\n  return isInAstralSet(code, astralIdentifierStartCodes);\n}\n\n// Test whether a given character is part of an identifier.\n\nexport function isIdentifierChar(code: number): boolean {\n  if (code < charCodes.digit0) return code === charCodes.dollarSign;\n  if (code < charCodes.colon) return true;\n  if (code < charCodes.uppercaseA) return false;\n  if (code <= charCodes.uppercaseZ) return true;\n  if (code < charCodes.lowercaseA) return code === charCodes.underscore;\n  if (code <= charCodes.lowercaseZ) return true;\n  if (code <= 0xffff) {\n    return code >= 0xaa && nonASCIIidentifier.test(String.fromCharCode(code));\n  }\n  return (\n    isInAstralSet(code, astralIdentifierStartCodes) ||\n    isInAstralSet(code, astralIdentifierCodes)\n  );\n}\n\n// Test whether a given string is a valid identifier name\n\nexport function isIdentifierName(name: string): boolean {\n  let isFirst = true;\n  for (let i = 0; i < name.length; i++) {\n    // The implementation is based on\n    // https://source.chromium.org/chromium/chromium/src/+/master:v8/src/builtins/builtins-string-gen.cc;l=1455;drc=221e331b49dfefadbc6fa40b0c68e6f97606d0b3;bpv=0;bpt=1\n    // We reimplement `codePointAt` because `codePointAt` is a V8 builtin which is not inlined by TurboFan (as of M91)\n    // since `name` is mostly ASCII, an inlined `charCodeAt` wins here\n    let cp = name.charCodeAt(i);\n    if ((cp & 0xfc00) === 0xd800 && i + 1 < name.length) {\n      const trail = name.charCodeAt(++i);\n      if ((trail & 0xfc00) === 0xdc00) {\n        cp = 0x10000 + ((cp & 0x3ff) << 10) + (trail & 0x3ff);\n      }\n    }\n    if (isFirst) {\n      isFirst = false;\n      if (!isIdentifierStart(cp)) {\n        return false;\n      }\n    } else if (!isIdentifierChar(cp)) {\n      return false;\n    }\n  }\n  return !isFirst;\n}\n","const reservedWords = {\n  keyword: [\n    \"break\",\n    \"case\",\n    \"catch\",\n    \"continue\",\n    \"debugger\",\n    \"default\",\n    \"do\",\n    \"else\",\n    \"finally\",\n    \"for\",\n    \"function\",\n    \"if\",\n    \"return\",\n    \"switch\",\n    \"throw\",\n    \"try\",\n    \"var\",\n    \"const\",\n    \"while\",\n    \"with\",\n    \"new\",\n    \"this\",\n    \"super\",\n    \"class\",\n    \"extends\",\n    \"export\",\n    \"import\",\n    \"null\",\n    \"true\",\n    \"false\",\n    \"in\",\n    \"instanceof\",\n    \"typeof\",\n    \"void\",\n    \"delete\",\n  ],\n  strict: [\n    \"implements\",\n    \"interface\",\n    \"let\",\n    \"package\",\n    \"private\",\n    \"protected\",\n    \"public\",\n    \"static\",\n    \"yield\",\n  ],\n  strictBind: [\"eval\", \"arguments\"],\n};\nconst keywords = new Set(reservedWords.keyword);\nconst reservedWordsStrictSet = new Set(reservedWords.strict);\nconst reservedWordsStrictBindSet = new Set(reservedWords.strictBind);\n\n/**\n * Checks if word is a reserved word in non-strict mode\n */\nexport function isReservedWord(word: string, inModule: boolean): boolean {\n  return (inModule && word === \"await\") || word === \"enum\";\n}\n\n/**\n * Checks if word is a reserved word in non-binding strict mode\n *\n * Includes non-strict reserved words\n */\nexport function isStrictReservedWord(word: string, inModule: boolean): boolean {\n  return isReservedWord(word, inModule) || reservedWordsStrictSet.has(word);\n}\n\n/**\n * Checks if word is a reserved word in binding strict mode, but it is allowed as\n * a normal identifier.\n */\nexport function isStrictBindOnlyReservedWord(word: string): boolean {\n  return reservedWordsStrictBindSet.has(word);\n}\n\n/**\n * Checks if word is a reserved word in binding strict mode\n *\n * Includes non-strict reserved words and non-binding strict reserved words\n */\nexport function isStrictBindReservedWord(\n  word: string,\n  inModule: boolean,\n): boolean {\n  return (\n    isStrictReservedWord(word, inModule) || isStrictBindOnlyReservedWord(word)\n  );\n}\n\nexport function isKeyword(word: string): boolean {\n  return keywords.has(word);\n}\n","/* eslint max-len: 0 */\n\n// @flow\n\nimport * as charCodes from \"charcodes\";\nimport { isIdentifierStart } from \"@babel/helper-validator-identifier\";\n\nexport {\n  isIdentifierStart,\n  isIdentifierChar,\n  isReservedWord,\n  isStrictBindOnlyReservedWord,\n  isStrictBindReservedWord,\n  isStrictReservedWord,\n  isKeyword,\n} from \"@babel/helper-validator-identifier\";\n\nexport const keywordRelationalOperator = /^in(stanceof)?$/;\n\n// Test whether a current state character code and next character code is @\n\nexport function isIteratorStart(\n  current: number,\n  next: number,\n  next2: number,\n): boolean {\n  return (\n    current === charCodes.atSign &&\n    next === charCodes.atSign &&\n    isIdentifierStart(next2)\n  );\n}\n\n// This is the comprehensive set of JavaScript reserved words\n// If a word is in this set, it could be a reserved word,\n// depending on sourceType/strictMode/binding info. In other words\n// if a word is not in this set, it is not a reserved word under\n// any circumstance.\nconst reservedWordLikeSet = new Set([\n  \"break\",\n  \"case\",\n  \"catch\",\n  \"continue\",\n  \"debugger\",\n  \"default\",\n  \"do\",\n  \"else\",\n  \"finally\",\n  \"for\",\n  \"function\",\n  \"if\",\n  \"return\",\n  \"switch\",\n  \"throw\",\n  \"try\",\n  \"var\",\n  \"const\",\n  \"while\",\n  \"with\",\n  \"new\",\n  \"this\",\n  \"super\",\n  \"class\",\n  \"extends\",\n  \"export\",\n  \"import\",\n  \"null\",\n  \"true\",\n  \"false\",\n  \"in\",\n  \"instanceof\",\n  \"typeof\",\n  \"void\",\n  \"delete\",\n  // strict\n  \"implements\",\n  \"interface\",\n  \"let\",\n  \"package\",\n  \"private\",\n  \"protected\",\n  \"public\",\n  \"static\",\n  \"yield\",\n  // strictBind\n  \"eval\",\n  \"arguments\",\n  // reservedWorkLike\n  \"enum\",\n  \"await\",\n]);\n\nexport function canBeReservedWord(word: string): boolean {\n  return reservedWordLikeSet.has(word);\n}\n","// @flow\n\n// Each scope gets a bitset that may contain these flags\n// prettier-ignore\nexport const SCOPE_OTHER        = 0b000000000,\n             SCOPE_PROGRAM      = 0b000000001,\n             SCOPE_FUNCTION     = 0b000000010,\n             SCOPE_ARROW        = 0b000000100,\n             SCOPE_SIMPLE_CATCH = 0b000001000,\n             SCOPE_SUPER        = 0b000010000,\n             SCOPE_DIRECT_SUPER = 0b000100000,\n             SCOPE_CLASS        = 0b001000000,\n             SCOPE_STATIC_BLOCK = 0b010000000,\n             SCOPE_TS_MODULE    = 0b100000000,\n             SCOPE_VAR = SCOPE_PROGRAM | SCOPE_FUNCTION | SCOPE_TS_MODULE;\n\nexport type ScopeFlags =\n  | typeof SCOPE_OTHER\n  | typeof SCOPE_PROGRAM\n  | typeof SCOPE_FUNCTION\n  | typeof SCOPE_VAR\n  | typeof SCOPE_ARROW\n  | typeof SCOPE_SIMPLE_CATCH\n  | typeof SCOPE_SUPER\n  | typeof SCOPE_DIRECT_SUPER\n  | typeof SCOPE_CLASS\n  | typeof SCOPE_STATIC_BLOCK;\n\n// These flags are meant to be _only_ used inside the Scope class (or subclasses).\n// prettier-ignore\nexport const BIND_KIND_VALUE            = 0b000000_0000_01,\n             BIND_KIND_TYPE             = 0b000000_0000_10,\n             // Used in checkLVal and declareName to determine the type of a binding\n             BIND_SCOPE_VAR             = 0b000000_0001_00, // Var-style binding\n             BIND_SCOPE_LEXICAL         = 0b000000_0010_00, // Let- or const-style binding\n             BIND_SCOPE_FUNCTION        = 0b000000_0100_00, // Function declaration\n             BIND_SCOPE_OUTSIDE         = 0b000000_1000_00, // Special case for function names as\n                                                   // bound inside the function\n             // Misc flags\n             BIND_FLAGS_NONE            = 0b000001_0000_00,\n             BIND_FLAGS_CLASS           = 0b000010_0000_00,\n             BIND_FLAGS_TS_ENUM         = 0b000100_0000_00,\n             BIND_FLAGS_TS_CONST_ENUM   = 0b001000_0000_00,\n             BIND_FLAGS_TS_EXPORT_ONLY  = 0b010000_0000_00,\n             BIND_FLAGS_FLOW_DECLARE_FN = 0b100000_0000_00;\n\n// These flags are meant to be _only_ used by Scope consumers\n// prettier-ignore\n/*                              =    is value?    |    is type?    |      scope          |    misc flags    */\nexport const BIND_CLASS         = BIND_KIND_VALUE | BIND_KIND_TYPE | BIND_SCOPE_LEXICAL  | BIND_FLAGS_CLASS  ,\n             BIND_LEXICAL       = BIND_KIND_VALUE | 0              | BIND_SCOPE_LEXICAL  | 0                 ,\n             BIND_VAR           = BIND_KIND_VALUE | 0              | BIND_SCOPE_VAR      | 0                 ,\n             BIND_FUNCTION      = BIND_KIND_VALUE | 0              | BIND_SCOPE_FUNCTION | 0                 ,\n             BIND_TS_INTERFACE  = 0               | BIND_KIND_TYPE | 0                   | BIND_FLAGS_CLASS  ,\n             BIND_TS_TYPE       = 0               | BIND_KIND_TYPE | 0                   | 0                 ,\n             BIND_TS_ENUM       = BIND_KIND_VALUE | BIND_KIND_TYPE | BIND_SCOPE_LEXICAL  | BIND_FLAGS_TS_ENUM,\n             BIND_TS_AMBIENT    = 0               | 0              | 0            | BIND_FLAGS_TS_EXPORT_ONLY,\n             // These bindings don't introduce anything in the scope. They are used for assignments and\n             // function expressions IDs.\n             BIND_NONE          = 0               | 0              | 0                   | BIND_FLAGS_NONE   ,\n             BIND_OUTSIDE       = BIND_KIND_VALUE | 0              | 0                   | BIND_FLAGS_NONE   ,\n\n             BIND_TS_CONST_ENUM = BIND_TS_ENUM | BIND_FLAGS_TS_CONST_ENUM,\n             BIND_TS_NAMESPACE  = 0               | 0              | 0            | BIND_FLAGS_TS_EXPORT_ONLY,\n\n             BIND_FLOW_DECLARE_FN = BIND_FLAGS_FLOW_DECLARE_FN;\n\nexport type BindingTypes =\n  | typeof BIND_NONE\n  | typeof BIND_OUTSIDE\n  | typeof BIND_VAR\n  | typeof BIND_LEXICAL\n  | typeof BIND_CLASS\n  | typeof BIND_FUNCTION\n  | typeof BIND_TS_INTERFACE\n  | typeof BIND_TS_TYPE\n  | typeof BIND_TS_ENUM\n  | typeof BIND_TS_AMBIENT\n  | typeof BIND_TS_NAMESPACE;\n\n// prettier-ignore\nexport const CLASS_ELEMENT_FLAG_STATIC = 0b1_00,\n             CLASS_ELEMENT_KIND_GETTER = 0b0_10,\n             CLASS_ELEMENT_KIND_SETTER = 0b0_01,\n             CLASS_ELEMENT_KIND_ACCESSOR = CLASS_ELEMENT_KIND_GETTER | CLASS_ELEMENT_KIND_SETTER;\n\n// prettier-ignore\nexport const CLASS_ELEMENT_STATIC_GETTER   = CLASS_ELEMENT_KIND_GETTER | CLASS_ELEMENT_FLAG_STATIC,\n             CLASS_ELEMENT_STATIC_SETTER   = CLASS_ELEMENT_KIND_SETTER | CLASS_ELEMENT_FLAG_STATIC,\n             CLASS_ELEMENT_INSTANCE_GETTER = CLASS_ELEMENT_KIND_GETTER,\n             CLASS_ELEMENT_INSTANCE_SETTER = CLASS_ELEMENT_KIND_SETTER,\n             CLASS_ELEMENT_OTHER           = 0;\n\nexport type ClassElementTypes =\n  | typeof CLASS_ELEMENT_STATIC_GETTER\n  | typeof CLASS_ELEMENT_STATIC_SETTER\n  | typeof CLASS_ELEMENT_INSTANCE_GETTER\n  | typeof CLASS_ELEMENT_INSTANCE_SETTER\n  | typeof CLASS_ELEMENT_OTHER;\n","// @flow\n\n/*:: declare var invariant; */\n\nimport BaseParser from \"./base\";\nimport type { Comment, Node } from \"../types\";\nimport * as charCodes from \"charcodes\";\n\n/**\n * A whitespace token containing comments\n * @typedef CommentWhitespace\n * @type {object}\n * @property {number} start - the start of the whitespace token.\n * @property {number} end - the end of the whitespace token.\n * @property {Array<Comment>} comments - the containing comments\n * @property {Node | null} leadingNode - the immediately preceding AST node of the whitespace token\n * @property {Node | null} trailingNode - the immediately following AST node of the whitespace token\n * @property {Node | null} containingNode - the innermost AST node containing the whitespace\n *                                         with minimal size (|end - start|)\n */\nexport type CommentWhitespace = {\n  start: number,\n  end: number,\n  comments: Array<Comment>,\n  leadingNode: Node | null,\n  trailingNode: Node | null,\n  containingNode: Node | null,\n};\n\n/**\n * Merge comments with node's trailingComments or assign comments to be\n * trailingComments. New comments will be placed before old comments\n * because the commentStack is enumerated reversely.\n *\n * @param {Node} node\n * @param {Array<Comment>} comments\n */\nfunction setTrailingComments(node: Node, comments: Array<Comment>) {\n  if (node.trailingComments === undefined) {\n    node.trailingComments = comments;\n  } else {\n    node.trailingComments.unshift(...comments);\n  }\n}\n\n/**\n * Merge comments with node's leadingComments or assign comments to be\n * leadingComments. New comments will be placed before old comments\n * because the commentStack is enumerated reversely.\n *\n * @param {Node} node\n * @param {Array<Comment>} comments\n */\nfunction setLeadingComments(node: Node, comments: Array<Comment>) {\n  if (node.leadingComments === undefined) {\n    node.leadingComments = comments;\n  } else {\n    node.leadingComments.unshift(...comments);\n  }\n}\n\n/**\n * Merge comments with node's innerComments or assign comments to be\n * innerComments. New comments will be placed before old comments\n * because the commentStack is enumerated reversely.\n *\n * @param {Node} node\n * @param {Array<Comment>} comments\n */\nexport function setInnerComments(node: Node, comments: Array<Comment>) {\n  if (node.innerComments === undefined) {\n    node.innerComments = comments;\n  } else {\n    node.innerComments.unshift(...comments);\n  }\n}\n\n/**\n * Given node and elements array, if elements has non-null element,\n * merge comments to its trailingComments, otherwise merge comments\n * to node's innerComments\n *\n * @param {Node} node\n * @param {Array<Node>} elements\n * @param {Array<Comment>} comments\n */\nfunction adjustInnerComments(\n  node: Node,\n  elements: Array<Node>,\n  commentWS: CommentWhitespace,\n) {\n  let lastElement = null;\n  let i = elements.length;\n  while (lastElement === null && i > 0) {\n    lastElement = elements[--i];\n  }\n  if (lastElement === null || lastElement.start > commentWS.start) {\n    setInnerComments(node, commentWS.comments);\n  } else {\n    setTrailingComments(lastElement, commentWS.comments);\n  }\n}\n\n/** @class CommentsParser */\nexport default class CommentsParser extends BaseParser {\n  addComment(comment: Comment): void {\n    if (this.filename) comment.loc.filename = this.filename;\n    this.state.comments.push(comment);\n  }\n\n  /**\n   * Given a newly created AST node _n_, attach _n_ to a comment whitespace _w_ if applicable\n   * {@see {@link CommentWhitespace}}\n   *\n   * @param {Node} node\n   * @returns {void}\n   * @memberof CommentsParser\n   */\n  processComment(node: Node): void {\n    const { commentStack } = this.state;\n    const commentStackLength = commentStack.length;\n    if (commentStackLength === 0) return;\n    let i = commentStackLength - 1;\n    const lastCommentWS = commentStack[i];\n\n    if (lastCommentWS.start === node.end) {\n      lastCommentWS.leadingNode = node;\n      i--;\n    }\n\n    const { start: nodeStart } = node;\n    // invariant: for all 0 <= j <= i, let c = commentStack[j], c must satisfy c.end < node.end\n    for (; i >= 0; i--) {\n      const commentWS = commentStack[i];\n      const commentEnd = commentWS.end;\n      if (commentEnd > nodeStart) {\n        // by definition of commentWhiteSpace, this implies commentWS.start > nodeStart\n        // so node can be a containingNode candidate. At this time we can finalize the comment\n        // whitespace, because\n        // 1) its leadingNode or trailingNode, if exists, will not change\n        // 2) its containingNode have been assigned and will not change because it is the\n        //    innermost minimal-sized AST node\n        commentWS.containingNode = node;\n        this.finalizeComment(commentWS);\n        commentStack.splice(i, 1);\n      } else {\n        if (commentEnd === nodeStart) {\n          commentWS.trailingNode = node;\n        }\n        // stop the loop when commentEnd <= nodeStart\n        break;\n      }\n    }\n  }\n\n  /**\n   * Assign the comments of comment whitespaces to related AST nodes.\n   * Also adjust innerComments following trailing comma.\n   *\n   * @memberof CommentsParser\n   */\n  finalizeComment(commentWS: CommentWhitespace) {\n    const { comments } = commentWS;\n    if (commentWS.leadingNode !== null || commentWS.trailingNode !== null) {\n      if (commentWS.leadingNode !== null) {\n        setTrailingComments(commentWS.leadingNode, comments);\n      }\n      if (commentWS.trailingNode !== null) {\n        setLeadingComments(commentWS.trailingNode, comments);\n      }\n    } else {\n      /*:: invariant(commentWS.containingNode !== null) */\n      const { containingNode: node, start: commentStart } = commentWS;\n      if (this.input.charCodeAt(commentStart - 1) === charCodes.comma) {\n        // If a commentWhitespace follows a comma and the containingNode allows\n        // list structures with trailing comma, merge it to the trailingComment\n        // of the last non-null list element\n        switch (node.type) {\n          case \"ObjectExpression\":\n          case \"ObjectPattern\":\n          case \"RecordExpression\":\n            adjustInnerComments(node, node.properties, commentWS);\n            break;\n          case \"CallExpression\":\n          case \"OptionalCallExpression\":\n            adjustInnerComments(node, node.arguments, commentWS);\n            break;\n          case \"FunctionDeclaration\":\n          case \"FunctionExpression\":\n          case \"ArrowFunctionExpression\":\n          case \"ObjectMethod\":\n          case \"ClassMethod\":\n          case \"ClassPrivateMethod\":\n            adjustInnerComments(node, node.params, commentWS);\n            break;\n          case \"ArrayExpression\":\n          case \"ArrayPattern\":\n          case \"TupleExpression\":\n            adjustInnerComments(node, node.elements, commentWS);\n            break;\n          case \"ExportNamedDeclaration\":\n          case \"ImportDeclaration\":\n            adjustInnerComments(node, node.specifiers, commentWS);\n            break;\n          default: {\n            setInnerComments(node, comments);\n          }\n        }\n      } else {\n        setInnerComments(node, comments);\n      }\n    }\n  }\n\n  /**\n   * Drains remaining commentStack and applies finalizeComment\n   * to each comment whitespace. Used only in parseExpression\n   * where the top level AST node is _not_ Program\n   * {@see {@link CommentsParser#finalizeComment}}\n   *\n   * @memberof CommentsParser\n   */\n  finalizeRemainingComments() {\n    const { commentStack } = this.state;\n    for (let i = commentStack.length - 1; i >= 0; i--) {\n      this.finalizeComment(commentStack[i]);\n    }\n    this.state.commentStack = [];\n  }\n\n  /**\n   * Reset previous node trailing comments. Used in object / class\n   * property parsing. We parse `async`, `static`, `set` and `get`\n   * as an identifier but may reinterpret it into an async/static/accessor\n   * method later. In this case the identifier is not part of the AST and we\n   * should sync the knowledge to commentStacks\n   *\n   * For example, when parsing */\n  // async /* 1 */ function f() {}\n  /*\n   * the comment whitespace \"* 1 *\" has leading node Identifier(async). When\n   * we see the function token, we create a Function node and mark \"* 1 *\" as\n   * inner comments. So \"* 1 *\" should be detached from the Identifier node.\n   *\n   * @param {N.Node} node the last finished AST node _before_ current token\n   * @returns\n   * @memberof CommentsParser\n   */\n  resetPreviousNodeTrailingComments(node: Node) {\n    const { commentStack } = this.state;\n    const { length } = commentStack;\n    if (length === 0) return;\n    const commentWS = commentStack[length - 1];\n    if (commentWS.leadingNode === node) {\n      commentWS.leadingNode = null;\n    }\n  }\n\n  /**\n   * Attach a node to the comment whitespaces right before/after\n   * the given range.\n   *\n   * This is used to properly attach comments around parenthesized\n   * expressions as leading/trailing comments of the inner expression.\n   *\n   * @param {Node} node\n   * @param {number} start\n   * @param {number} end\n   */\n  takeSurroundingComments(node: Node, start: number, end: number) {\n    const { commentStack } = this.state;\n    const commentStackLength = commentStack.length;\n    if (commentStackLength === 0) return;\n    let i = commentStackLength - 1;\n\n    for (; i >= 0; i--) {\n      const commentWS = commentStack[i];\n      const commentEnd = commentWS.end;\n      const commentStart = commentWS.start;\n\n      if (commentStart === end) {\n        commentWS.leadingNode = node;\n      } else if (commentEnd === start) {\n        commentWS.trailingNode = node;\n      } else if (commentEnd < start) {\n        break;\n      }\n    }\n  }\n}\n","// @flow\n\nimport * as charCodes from \"charcodes\";\n\n// Matches a whole line break (where CRLF is considered a single\n// line break). Used to count lines.\nexport const lineBreak = /\\r\\n?|[\\n\\u2028\\u2029]/;\nexport const lineBreakG = new RegExp(lineBreak.source, \"g\");\n\n// https://tc39.github.io/ecma262/#sec-line-terminators\nexport function isNewLine(code: number): boolean {\n  switch (code) {\n    case charCodes.lineFeed:\n    case charCodes.carriageReturn:\n    case charCodes.lineSeparator:\n    case charCodes.paragraphSeparator:\n      return true;\n\n    default:\n      return false;\n  }\n}\n\nexport const skipWhiteSpace = /(?:\\s|\\/\\/.*|\\/\\*[^]*?\\*\\/)*/g;\n\nexport const skipWhiteSpaceInLine =\n  /(?:[^\\S\\n\\r\\u2028\\u2029]|\\/\\/.*|\\/\\*.*?\\*\\/)*/y;\n\n// Skip whitespace and single-line comments, including /* no newline here */.\n// After this RegExp matches, its lastIndex points to a line terminator, or\n// the start of multi-line comment (which is effectively a line terminator),\n// or the end of string.\nexport const skipWhiteSpaceToLineBreak = new RegExp(\n  // Unfortunately JS doesn't support Perl's atomic /(?>pattern)/ or\n  // possessive quantifiers, so we use a trick to prevent backtracking\n  // when the look-ahead for line terminator fails.\n  \"(?=(\" +\n    // Capture the whitespace and comments that should be skipped inside\n    // a look-ahead assertion, and then re-match the group as a unit.\n    skipWhiteSpaceInLine.source +\n    \"))\\\\1\" +\n    // Look-ahead for either line terminator, start of multi-line comment,\n    // or end of string.\n    /(?=[\\n\\r\\u2028\\u2029]|\\/\\*(?!.*?\\*\\/)|$)/.source,\n  \"y\", // sticky\n);\n\n// https://tc39.github.io/ecma262/#sec-white-space\nexport function isWhitespace(code: number): boolean {\n  switch (code) {\n    case 0x0009: // CHARACTER TABULATION\n    case 0x000b: // LINE TABULATION\n    case 0x000c: // FORM FEED\n    case charCodes.space:\n    case charCodes.nonBreakingSpace:\n    case charCodes.oghamSpaceMark:\n    case 0x2000: // EN QUAD\n    case 0x2001: // EM QUAD\n    case 0x2002: // EN SPACE\n    case 0x2003: // EM SPACE\n    case 0x2004: // THREE-PER-EM SPACE\n    case 0x2005: // FOUR-PER-EM SPACE\n    case 0x2006: // SIX-PER-EM SPACE\n    case 0x2007: // FIGURE SPACE\n    case 0x2008: // PUNCTUATION SPACE\n    case 0x2009: // THIN SPACE\n    case 0x200a: // HAIR SPACE\n    case 0x202f: // NARROW NO-BREAK SPACE\n    case 0x205f: // MEDIUM MATHEMATICAL SPACE\n    case 0x3000: // IDEOGRAPHIC SPACE\n    case 0xfeff: // ZERO WIDTH NO-BREAK SPACE\n      return true;\n\n    default:\n      return false;\n  }\n}\n","// @flow\n\nimport type { Options } from \"../options\";\nimport * as N from \"../types\";\nimport type { CommentWhitespace } from \"../parser/comments\";\nimport { Position } from \"../util/location\";\n\nimport { types as ct, type TokContext } from \"./context\";\nimport { tt, type TokenType } from \"./types\";\nimport { Errors, type ParseError } from \"../parse-error\";\n\nexport type DeferredStrictError =\n  | typeof Errors.StrictNumericEscape\n  | typeof Errors.StrictOctalLiteral;\n\ntype TopicContextState = {\n  // When a topic binding has been currently established,\n  // then this is 1. Otherwise, it is 0. This is forwards compatible\n  // with a future plugin for multiple lexical topics.\n  maxNumOfResolvableTopics: number,\n\n  // When a topic binding has been currently established, and if that binding\n  // has been used as a topic reference `#`, then this is 0. Otherwise, it is\n  // `null`. This is forwards compatible with a future plugin for multiple\n  // lexical topics.\n  maxTopicIndex: null | 0,\n};\n\nexport default class State {\n  strict: boolean;\n  curLine: number;\n  lineStart: number;\n\n  // And, if locations are used, the {line, column} object\n  // corresponding to those offsets\n  startLoc: Position;\n  endLoc: Position;\n\n  init({ strictMode, sourceType, startLine, startColumn }: Options): void {\n    this.strict =\n      strictMode === false\n        ? false\n        : strictMode === true\n        ? true\n        : sourceType === \"module\";\n\n    this.curLine = startLine;\n    this.lineStart = -startColumn;\n    this.startLoc = this.endLoc = new Position(startLine, startColumn, 0);\n  }\n\n  errors: ParseError<any>[] = [];\n\n  // Used to signify the start of a potential arrow function\n  potentialArrowAt: number = -1;\n\n  // Used to signify the start of an expression which looks like a\n  // typed arrow function, but it isn't\n  // e.g. a ? (b) : c => d\n  //          ^\n  noArrowAt: number[] = [];\n\n  // Used to signify the start of an expression whose params, if it looks like\n  // an arrow function, shouldn't be converted to assignable nodes.\n  // This is used to defer the validation of typed arrow functions inside\n  // conditional expressions.\n  // e.g. a ? (b) : c => d\n  //          ^\n  noArrowParamsConversionAt: number[] = [];\n\n  // Flags to track\n  maybeInArrowParameters: boolean = false;\n  inType: boolean = false;\n  noAnonFunctionType: boolean = false;\n  hasFlowComment: boolean = false;\n  isAmbientContext: boolean = false;\n  inAbstractClass: boolean = false;\n  inDisallowConditionalTypesContext: boolean = false;\n\n  // For the Hack-style pipelines plugin\n  topicContext: TopicContextState = {\n    maxNumOfResolvableTopics: 0,\n    maxTopicIndex: null,\n  };\n\n  // For the F#-style pipelines plugin\n  soloAwait: boolean = false;\n  inFSharpPipelineDirectBody: boolean = false;\n\n  // Labels in scope.\n  labels: Array<{\n    kind: ?(\"loop\" | \"switch\"),\n    name?: ?string,\n    statementStart?: number,\n  }> = [];\n\n  // Leading decorators. Last element of the stack represents the decorators in current context.\n  // Supports nesting of decorators, e.g. @foo(@bar class inner {}) class outer {}\n  // where @foo belongs to the outer class and @bar to the inner\n  decoratorStack: Array<Array<N.Decorator>> = [[]];\n\n  // Comment store for Program.comments\n  comments: Array<N.Comment> = [];\n\n  // Comment attachment store\n  commentStack: Array<CommentWhitespace> = [];\n\n  // The current position of the tokenizer in the input.\n  pos: number = 0;\n\n  // Properties of the current token:\n  // Its type\n  type: TokenType = tt.eof;\n\n  // For tokens that include more information than their type, the value\n  value: any = null;\n\n  // Its start and end offset\n  start: number = 0;\n  end: number = 0;\n\n  // Position information for the previous token\n  // $FlowIgnore this is initialized when generating the second token.\n  lastTokEndLoc: Position = null;\n  // $FlowIgnore this is initialized when generating the second token.\n  lastTokStartLoc: Position = null;\n  lastTokStart: number = 0;\n\n  // The context stack is used to track whether the apostrophe \"`\" starts\n  // or ends a string template\n  context: Array<TokContext> = [ct.brace];\n  // Used to track whether a JSX element is allowed to form\n  canStartJSXElement: boolean = true;\n\n  // Used to signal to callers of `readWord1` whether the word\n  // contained any escape sequences. This is needed because words with\n  // escape sequences must not be interpreted as keywords.\n  containsEsc: boolean = false;\n\n  // This property is used to track the following errors\n  // - StrictNumericEscape\n  // - StrictOctalLiteral\n  //\n  // in a literal that occurs prior to/immediately after a \"use strict\" directive.\n\n  // todo(JLHwung): set strictErrors to null and avoid recording string errors\n  // after a non-directive is parsed\n  strictErrors: Map<number, [DeferredStrictError, Position]> = new Map();\n\n  // Tokens length in token store\n  tokensLength: number = 0;\n\n  curPosition(): Position {\n    return new Position(this.curLine, this.pos - this.lineStart, this.pos);\n  }\n\n  clone(skipArrays?: boolean): State {\n    const state = new State();\n    const keys = Object.keys(this);\n    for (let i = 0, length = keys.length; i < length; i++) {\n      const key = keys[i];\n      // $FlowIgnore\n      let val = this[key];\n\n      if (!skipArrays && Array.isArray(val)) {\n        val = val.slice();\n      }\n\n      // $FlowIgnore\n      state[key] = val;\n    }\n\n    return state;\n  }\n}\n\nexport type LookaheadState = {\n  pos: number,\n  value: any,\n  type: TokenType,\n  start: number,\n  end: number,\n  /* Used only in readToken_mult_modulo */\n  inType: boolean,\n};\n","// @flow\n\n/*:: declare var invariant; */\n\nimport type { Options } from \"../options\";\nimport {\n  Position,\n  SourceLocation,\n  createPositionWithColumnOffset,\n} from \"../util/location\";\nimport CommentsParser from \"../parser/comments\";\nimport * as N from \"../types\";\nimport * as charCodes from \"charcodes\";\nimport { isIdentifierStart, isIdentifierChar } from \"../util/identifier\";\nimport {\n  tokenIsKeyword,\n  tokenLabelName,\n  tt,\n  keywords as keywordTypes,\n  type TokenType,\n} from \"./types\";\nimport { type TokContext } from \"./context\";\nimport {\n  Errors,\n  type ParseError,\n  type ParseErrorConstructor,\n  type RaiseProperties,\n} from \"../parse-error\";\nimport {\n  lineBreakG,\n  isNewLine,\n  isWhitespace,\n  skipWhiteSpace,\n} from \"../util/whitespace\";\nimport State from \"./state\";\nimport type { LookaheadState, DeferredStrictError } from \"./state\";\n\nconst VALID_REGEX_FLAGS = new Set([\n  charCodes.lowercaseG,\n  charCodes.lowercaseM,\n  charCodes.lowercaseS,\n  charCodes.lowercaseI,\n  charCodes.lowercaseY,\n  charCodes.lowercaseU,\n  charCodes.lowercaseD,\n  // This is only valid when using the regexpUnicodeSets plugin\n  charCodes.lowercaseV,\n]);\n\n// The following character codes are forbidden from being\n// an immediate sibling of NumericLiteralSeparator _\n\nconst forbiddenNumericSeparatorSiblings = {\n  decBinOct: new Set([\n    charCodes.dot,\n    charCodes.uppercaseB,\n    charCodes.uppercaseE,\n    charCodes.uppercaseO,\n    charCodes.underscore, // multiple separators are not allowed\n    charCodes.lowercaseB,\n    charCodes.lowercaseE,\n    charCodes.lowercaseO,\n  ]),\n  hex: new Set([\n    charCodes.dot,\n    charCodes.uppercaseX,\n    charCodes.underscore, // multiple separators are not allowed\n    charCodes.lowercaseX,\n  ]),\n};\n\nconst isAllowedNumericSeparatorSibling = {\n  // 0 - 1\n  bin: ch => ch === charCodes.digit0 || ch === charCodes.digit1,\n\n  // 0 - 7\n  oct: ch => ch >= charCodes.digit0 && ch <= charCodes.digit7,\n\n  // 0 - 9\n  dec: ch => ch >= charCodes.digit0 && ch <= charCodes.digit9,\n\n  // 0 - 9, A - F, a - f,\n  hex: ch =>\n    (ch >= charCodes.digit0 && ch <= charCodes.digit9) ||\n    (ch >= charCodes.uppercaseA && ch <= charCodes.uppercaseF) ||\n    (ch >= charCodes.lowercaseA && ch <= charCodes.lowercaseF),\n};\n\n// Object type used to represent tokens. Note that normally, tokens\n// simply exist as properties on the parser object. This is only\n// used for the onToken callback and the external tokenizer.\n\nexport class Token {\n  constructor(state: State) {\n    this.type = state.type;\n    this.value = state.value;\n    this.start = state.start;\n    this.end = state.end;\n    this.loc = new SourceLocation(state.startLoc, state.endLoc);\n  }\n\n  declare type: TokenType;\n  declare value: any;\n  declare start: number;\n  declare end: number;\n  declare loc: SourceLocation;\n}\n\n// ## Tokenizer\n\nexport default class Tokenizer extends CommentsParser {\n  isLookahead: boolean;\n\n  // Token store.\n  tokens: Array<Token | N.Comment> = [];\n\n  constructor(options: Options, input: string) {\n    super();\n    this.state = new State();\n    this.state.init(options);\n    this.input = input;\n    this.length = input.length;\n    this.isLookahead = false;\n  }\n\n  pushToken(token: Token | N.Comment) {\n    // Pop out invalid tokens trapped by try-catch parsing.\n    // Those parsing branches are mainly created by typescript and flow plugins.\n    this.tokens.length = this.state.tokensLength;\n    this.tokens.push(token);\n    ++this.state.tokensLength;\n  }\n\n  // Move to the next token\n\n  next(): void {\n    this.checkKeywordEscapes();\n    if (this.options.tokens) {\n      this.pushToken(new Token(this.state));\n    }\n\n    this.state.lastTokStart = this.state.start;\n    this.state.lastTokEndLoc = this.state.endLoc;\n    this.state.lastTokStartLoc = this.state.startLoc;\n    this.nextToken();\n  }\n\n  // TODO\n\n  eat(type: TokenType): boolean {\n    if (this.match(type)) {\n      this.next();\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  /**\n   * Whether current token matches given type\n   *\n   * @param {TokenType} type\n   * @returns {boolean}\n   * @memberof Tokenizer\n   */\n  match(type: TokenType): boolean {\n    return this.state.type === type;\n  }\n\n  /**\n   * Create a LookaheadState from current parser state\n   *\n   * @param {State} state\n   * @returns {LookaheadState}\n   * @memberof Tokenizer\n   */\n  createLookaheadState(state: State): LookaheadState {\n    return {\n      pos: state.pos,\n      value: null,\n      type: state.type,\n      start: state.start,\n      end: state.end,\n      context: [this.curContext()],\n      inType: state.inType,\n      startLoc: state.startLoc,\n      lastTokEndLoc: state.lastTokEndLoc,\n      curLine: state.curLine,\n      lineStart: state.lineStart,\n      curPosition: state.curPosition,\n    };\n  }\n\n  /**\n   * lookahead peeks the next token, skipping changes to token context and\n   * comment stack. For performance it returns a limited LookaheadState\n   * instead of full parser state.\n   *\n   * The { column, line } Loc info is not included in lookahead since such usage\n   * is rare. Although it may return other location properties e.g. `curLine` and\n   * `lineStart`, these properties are not listed in the LookaheadState interface\n   * and thus the returned value is _NOT_ reliable.\n   *\n   * The tokenizer should make best efforts to avoid using any parser state\n   * other than those defined in LookaheadState\n   *\n   * @returns {LookaheadState}\n   * @memberof Tokenizer\n   */\n  lookahead(): LookaheadState {\n    const old = this.state;\n    // For performance we use a simplified tokenizer state structure\n    // $FlowIgnore\n    this.state = this.createLookaheadState(old);\n\n    this.isLookahead = true;\n    this.nextToken();\n    this.isLookahead = false;\n\n    const curr = this.state;\n    this.state = old;\n    return curr;\n  }\n\n  nextTokenStart(): number {\n    return this.nextTokenStartSince(this.state.pos);\n  }\n\n  nextTokenStartSince(pos: number): number {\n    skipWhiteSpace.lastIndex = pos;\n    return skipWhiteSpace.test(this.input) ? skipWhiteSpace.lastIndex : pos;\n  }\n\n  lookaheadCharCode(): number {\n    return this.input.charCodeAt(this.nextTokenStart());\n  }\n\n  codePointAtPos(pos: number): number {\n    // The implementation is based on\n    // https://source.chromium.org/chromium/chromium/src/+/master:v8/src/builtins/builtins-string-gen.cc;l=1455;drc=221e331b49dfefadbc6fa40b0c68e6f97606d0b3;bpv=0;bpt=1\n    // We reimplement `codePointAt` because `codePointAt` is a V8 builtin which is not inlined by TurboFan (as of M91)\n    // since `input` is mostly ASCII, an inlined `charCodeAt` wins here\n    let cp = this.input.charCodeAt(pos);\n    if ((cp & 0xfc00) === 0xd800 && ++pos < this.input.length) {\n      const trail = this.input.charCodeAt(pos);\n      if ((trail & 0xfc00) === 0xdc00) {\n        cp = 0x10000 + ((cp & 0x3ff) << 10) + (trail & 0x3ff);\n      }\n    }\n    return cp;\n  }\n\n  // Toggle strict mode. Re-reads the next number or string to please\n  // pedantic tests (`\"use strict\"; 010;` should fail).\n\n  setStrict(strict: boolean): void {\n    this.state.strict = strict;\n    if (strict) {\n      // Throw an error for any string decimal escape found before/immediately\n      // after a \"use strict\" directive. Strict mode will be set at parse\n      // time for any literals that occur after the next node of the strict\n      // directive.\n      this.state.strictErrors.forEach(([toParseError, at]) =>\n        this.raise(toParseError, { at }),\n      );\n      this.state.strictErrors.clear();\n    }\n  }\n\n  curContext(): TokContext {\n    return this.state.context[this.state.context.length - 1];\n  }\n\n  // Read a single token, updating the parser object's token-related\n  // properties.\n\n  nextToken(): void {\n    this.skipSpace();\n    this.state.start = this.state.pos;\n    if (!this.isLookahead) this.state.startLoc = this.state.curPosition();\n    if (this.state.pos >= this.length) {\n      this.finishToken(tt.eof);\n      return;\n    }\n\n    this.getTokenFromCode(this.codePointAtPos(this.state.pos));\n  }\n\n  skipBlockComment(): N.CommentBlock | void {\n    let startLoc;\n    if (!this.isLookahead) startLoc = this.state.curPosition();\n    const start = this.state.pos;\n    const end = this.input.indexOf(\"*/\", start + 2);\n    if (end === -1) {\n      // We have to call this again here because startLoc may not be set...\n      // This seems to be for performance reasons:\n      // https://github.com/babel/babel/commit/acf2a10899f696a8aaf34df78bf9725b5ea7f2da\n      throw this.raise(Errors.UnterminatedComment, {\n        at: this.state.curPosition(),\n      });\n    }\n\n    this.state.pos = end + 2;\n    lineBreakG.lastIndex = start + 2;\n    while (lineBreakG.test(this.input) && lineBreakG.lastIndex <= end) {\n      ++this.state.curLine;\n      this.state.lineStart = lineBreakG.lastIndex;\n    }\n\n    // If we are doing a lookahead right now we need to advance the position (above code)\n    // but we do not want to push the comment to the state.\n    if (this.isLookahead) return;\n    /*:: invariant(startLoc) */\n\n    const comment = {\n      type: \"CommentBlock\",\n      value: this.input.slice(start + 2, end),\n      start,\n      end: end + 2,\n      loc: new SourceLocation(startLoc, this.state.curPosition()),\n    };\n    if (this.options.tokens) this.pushToken(comment);\n    return comment;\n  }\n\n  skipLineComment(startSkip: number): N.CommentLine | void {\n    const start = this.state.pos;\n    let startLoc;\n    if (!this.isLookahead) startLoc = this.state.curPosition();\n    let ch = this.input.charCodeAt((this.state.pos += startSkip));\n    if (this.state.pos < this.length) {\n      while (!isNewLine(ch) && ++this.state.pos < this.length) {\n        ch = this.input.charCodeAt(this.state.pos);\n      }\n    }\n\n    // If we are doing a lookahead right now we need to advance the position (above code)\n    // but we do not want to push the comment to the state.\n    if (this.isLookahead) return;\n    /*:: invariant(startLoc) */\n\n    const end = this.state.pos;\n    const value = this.input.slice(start + startSkip, end);\n\n    const comment = {\n      type: \"CommentLine\",\n      value,\n      start,\n      end,\n      loc: new SourceLocation(startLoc, this.state.curPosition()),\n    };\n    if (this.options.tokens) this.pushToken(comment);\n    return comment;\n  }\n\n  // Called at the start of the parse and after every token. Skips\n  // whitespace and comments, and.\n\n  skipSpace(): void {\n    const spaceStart = this.state.pos;\n    const comments = [];\n    loop: while (this.state.pos < this.length) {\n      const ch = this.input.charCodeAt(this.state.pos);\n      switch (ch) {\n        case charCodes.space:\n        case charCodes.nonBreakingSpace:\n        case charCodes.tab:\n          ++this.state.pos;\n          break;\n        case charCodes.carriageReturn:\n          if (\n            this.input.charCodeAt(this.state.pos + 1) === charCodes.lineFeed\n          ) {\n            ++this.state.pos;\n          }\n        // fall through\n        case charCodes.lineFeed:\n        case charCodes.lineSeparator:\n        case charCodes.paragraphSeparator:\n          ++this.state.pos;\n          ++this.state.curLine;\n          this.state.lineStart = this.state.pos;\n          break;\n\n        case charCodes.slash:\n          switch (this.input.charCodeAt(this.state.pos + 1)) {\n            case charCodes.asterisk: {\n              const comment = this.skipBlockComment();\n              if (comment !== undefined) {\n                this.addComment(comment);\n                if (this.options.attachComment) comments.push(comment);\n              }\n              break;\n            }\n\n            case charCodes.slash: {\n              const comment = this.skipLineComment(2);\n              if (comment !== undefined) {\n                this.addComment(comment);\n                if (this.options.attachComment) comments.push(comment);\n              }\n              break;\n            }\n\n            default:\n              break loop;\n          }\n          break;\n\n        default:\n          if (isWhitespace(ch)) {\n            ++this.state.pos;\n          } else if (ch === charCodes.dash && !this.inModule) {\n            const pos = this.state.pos;\n            if (\n              this.input.charCodeAt(pos + 1) === charCodes.dash &&\n              this.input.charCodeAt(pos + 2) === charCodes.greaterThan &&\n              (spaceStart === 0 || this.state.lineStart > spaceStart)\n            ) {\n              // A `-->` line comment\n              const comment = this.skipLineComment(3);\n              if (comment !== undefined) {\n                this.addComment(comment);\n                if (this.options.attachComment) comments.push(comment);\n              }\n            } else {\n              break loop;\n            }\n          } else if (ch === charCodes.lessThan && !this.inModule) {\n            const pos = this.state.pos;\n            if (\n              this.input.charCodeAt(pos + 1) === charCodes.exclamationMark &&\n              this.input.charCodeAt(pos + 2) === charCodes.dash &&\n              this.input.charCodeAt(pos + 3) === charCodes.dash\n            ) {\n              // `<!--`, an XML-style comment that should be interpreted as a line comment\n              const comment = this.skipLineComment(4);\n              if (comment !== undefined) {\n                this.addComment(comment);\n                if (this.options.attachComment) comments.push(comment);\n              }\n            } else {\n              break loop;\n            }\n          } else {\n            break loop;\n          }\n      }\n    }\n\n    if (comments.length > 0) {\n      const end = this.state.pos;\n      const CommentWhitespace = {\n        start: spaceStart,\n        end,\n        comments,\n        leadingNode: null,\n        trailingNode: null,\n        containingNode: null,\n      };\n      this.state.commentStack.push(CommentWhitespace);\n    }\n  }\n\n  // Called at the end of every token. Sets `end`, `val`, and\n  // maintains `context` and `canStartJSXElement`, and skips the space after\n  // the token, so that the next one's `start` will point at the\n  // right position.\n\n  finishToken(type: TokenType, val: any): void {\n    this.state.end = this.state.pos;\n    this.state.endLoc = this.state.curPosition();\n    const prevType = this.state.type;\n    this.state.type = type;\n    this.state.value = val;\n\n    if (!this.isLookahead) {\n      this.updateContext(prevType);\n    }\n  }\n\n  replaceToken(type: TokenType): void {\n    this.state.type = type;\n    // the prevType of updateContext is required\n    // only when the new type is tt.slash/tt.jsxTagEnd\n    // $FlowIgnore\n    this.updateContext();\n  }\n\n  // ### Token reading\n\n  // This is the function that is called to fetch the next token. It\n  // is somewhat obscure, because it works in character codes rather\n  // than characters, and because operator parsing has been inlined\n  // into it.\n  //\n  // All in the name of speed.\n\n  // number sign is \"#\"\n  readToken_numberSign(): void {\n    if (this.state.pos === 0 && this.readToken_interpreter()) {\n      return;\n    }\n\n    const nextPos = this.state.pos + 1;\n    const next = this.codePointAtPos(nextPos);\n    if (next >= charCodes.digit0 && next <= charCodes.digit9) {\n      throw this.raise(Errors.UnexpectedDigitAfterHash, {\n        at: this.state.curPosition(),\n      });\n    }\n\n    if (\n      next === charCodes.leftCurlyBrace ||\n      (next === charCodes.leftSquareBracket && this.hasPlugin(\"recordAndTuple\"))\n    ) {\n      // When we see `#{`, it is likely to be a hash record.\n      // However we don't yell at `#[` since users may intend to use \"computed private fields\",\n      // which is not allowed in the spec. Throwing expecting recordAndTuple is\n      // misleading\n      this.expectPlugin(\"recordAndTuple\");\n      if (this.getPluginOption(\"recordAndTuple\", \"syntaxType\") !== \"hash\") {\n        throw this.raise(\n          next === charCodes.leftCurlyBrace\n            ? Errors.RecordExpressionHashIncorrectStartSyntaxType\n            : Errors.TupleExpressionHashIncorrectStartSyntaxType,\n          { at: this.state.curPosition() },\n        );\n      }\n\n      this.state.pos += 2;\n      if (next === charCodes.leftCurlyBrace) {\n        // #{\n        this.finishToken(tt.braceHashL);\n      } else {\n        // #[\n        this.finishToken(tt.bracketHashL);\n      }\n    } else if (isIdentifierStart(next)) {\n      ++this.state.pos;\n      this.finishToken(tt.privateName, this.readWord1(next));\n    } else if (next === charCodes.backslash) {\n      ++this.state.pos;\n      this.finishToken(tt.privateName, this.readWord1());\n    } else {\n      this.finishOp(tt.hash, 1);\n    }\n  }\n\n  readToken_dot(): void {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n    if (next >= charCodes.digit0 && next <= charCodes.digit9) {\n      this.readNumber(true);\n      return;\n    }\n\n    if (\n      next === charCodes.dot &&\n      this.input.charCodeAt(this.state.pos + 2) === charCodes.dot\n    ) {\n      this.state.pos += 3;\n      this.finishToken(tt.ellipsis);\n    } else {\n      ++this.state.pos;\n      this.finishToken(tt.dot);\n    }\n  }\n\n  readToken_slash(): void {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n    if (next === charCodes.equalsTo) {\n      this.finishOp(tt.slashAssign, 2);\n    } else {\n      this.finishOp(tt.slash, 1);\n    }\n  }\n\n  readToken_interpreter(): boolean {\n    if (this.state.pos !== 0 || this.length < 2) return false;\n\n    let ch = this.input.charCodeAt(this.state.pos + 1);\n    if (ch !== charCodes.exclamationMark) return false;\n\n    const start = this.state.pos;\n    this.state.pos += 1;\n\n    while (!isNewLine(ch) && ++this.state.pos < this.length) {\n      ch = this.input.charCodeAt(this.state.pos);\n    }\n\n    const value = this.input.slice(start + 2, this.state.pos);\n\n    this.finishToken(tt.interpreterDirective, value);\n\n    return true;\n  }\n\n  readToken_mult_modulo(code: number): void {\n    // '%' or '*'\n    let type = code === charCodes.asterisk ? tt.star : tt.modulo;\n    let width = 1;\n    let next = this.input.charCodeAt(this.state.pos + 1);\n\n    // Exponentiation operator '**'\n    if (code === charCodes.asterisk && next === charCodes.asterisk) {\n      width++;\n      next = this.input.charCodeAt(this.state.pos + 2);\n      type = tt.exponent;\n    }\n\n    // '%=' or '*='\n    if (next === charCodes.equalsTo && !this.state.inType) {\n      width++;\n      // `tt.moduloAssign` is only needed to support % as a Hack-pipe topic token.\n      // If the proposal ends up choosing a different token,\n      // it can be merged with tt.assign.\n      type = code === charCodes.percentSign ? tt.moduloAssign : tt.assign;\n    }\n\n    this.finishOp(type, width);\n  }\n\n  readToken_pipe_amp(code: number): void {\n    // '||' '&&' '||=' '&&='\n    const next = this.input.charCodeAt(this.state.pos + 1);\n\n    if (next === code) {\n      if (this.input.charCodeAt(this.state.pos + 2) === charCodes.equalsTo) {\n        this.finishOp(tt.assign, 3);\n      } else {\n        this.finishOp(\n          code === charCodes.verticalBar ? tt.logicalOR : tt.logicalAND,\n          2,\n        );\n      }\n      return;\n    }\n\n    if (code === charCodes.verticalBar) {\n      // '|>'\n      if (next === charCodes.greaterThan) {\n        this.finishOp(tt.pipeline, 2);\n        return;\n      }\n      // '|}'\n      if (\n        this.hasPlugin(\"recordAndTuple\") &&\n        next === charCodes.rightCurlyBrace\n      ) {\n        if (this.getPluginOption(\"recordAndTuple\", \"syntaxType\") !== \"bar\") {\n          throw this.raise(Errors.RecordExpressionBarIncorrectEndSyntaxType, {\n            at: this.state.curPosition(),\n          });\n        }\n        this.state.pos += 2;\n        this.finishToken(tt.braceBarR);\n        return;\n      }\n\n      // '|]'\n      if (\n        this.hasPlugin(\"recordAndTuple\") &&\n        next === charCodes.rightSquareBracket\n      ) {\n        if (this.getPluginOption(\"recordAndTuple\", \"syntaxType\") !== \"bar\") {\n          throw this.raise(Errors.TupleExpressionBarIncorrectEndSyntaxType, {\n            at: this.state.curPosition(),\n          });\n        }\n        this.state.pos += 2;\n        this.finishToken(tt.bracketBarR);\n        return;\n      }\n    }\n\n    if (next === charCodes.equalsTo) {\n      this.finishOp(tt.assign, 2);\n      return;\n    }\n\n    this.finishOp(\n      code === charCodes.verticalBar ? tt.bitwiseOR : tt.bitwiseAND,\n      1,\n    );\n  }\n\n  readToken_caret(): void {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n\n    // '^='\n    if (next === charCodes.equalsTo && !this.state.inType) {\n      // `tt.xorAssign` is only needed to support ^ as a Hack-pipe topic token.\n      // If the proposal ends up choosing a different token,\n      // it can be merged with tt.assign.\n      this.finishOp(tt.xorAssign, 2);\n    }\n    // '^^'\n    else if (\n      next === charCodes.caret &&\n      // If the ^^ token is not enabled, we don't throw but parse two single ^s\n      // because it could be a ^ hack token followed by a ^ binary operator.\n      this.hasPlugin([\n        \"pipelineOperator\",\n        { proposal: \"hack\", topicToken: \"^^\" },\n      ])\n    ) {\n      this.finishOp(tt.doubleCaret, 2);\n\n      // `^^^` is forbidden and must be separated by a space.\n      const lookaheadCh = this.input.codePointAt(this.state.pos);\n      if (lookaheadCh === charCodes.caret) {\n        throw this.unexpected();\n      }\n    }\n    // '^'\n    else {\n      this.finishOp(tt.bitwiseXOR, 1);\n    }\n  }\n\n  readToken_atSign(): void {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n\n    // '@@'\n    if (\n      next === charCodes.atSign &&\n      this.hasPlugin([\n        \"pipelineOperator\",\n        { proposal: \"hack\", topicToken: \"@@\" },\n      ])\n    ) {\n      this.finishOp(tt.doubleAt, 2);\n    }\n    // '@'\n    else {\n      this.finishOp(tt.at, 1);\n    }\n  }\n\n  readToken_plus_min(code: number): void {\n    // '+-'\n    const next = this.input.charCodeAt(this.state.pos + 1);\n\n    if (next === code) {\n      this.finishOp(tt.incDec, 2);\n      return;\n    }\n\n    if (next === charCodes.equalsTo) {\n      this.finishOp(tt.assign, 2);\n    } else {\n      this.finishOp(tt.plusMin, 1);\n    }\n  }\n\n  readToken_lt(): void {\n    // '<'\n    const { pos } = this.state;\n    const next = this.input.charCodeAt(pos + 1);\n\n    if (next === charCodes.lessThan) {\n      if (this.input.charCodeAt(pos + 2) === charCodes.equalsTo) {\n        this.finishOp(tt.assign, 3);\n        return;\n      }\n      this.finishOp(tt.bitShiftL, 2);\n      return;\n    }\n\n    if (next === charCodes.equalsTo) {\n      // <=\n      this.finishOp(tt.relational, 2);\n      return;\n    }\n\n    this.finishOp(tt.lt, 1);\n  }\n\n  readToken_gt(): void {\n    // '>'\n    const { pos } = this.state;\n    const next = this.input.charCodeAt(pos + 1);\n\n    if (next === charCodes.greaterThan) {\n      const size =\n        this.input.charCodeAt(pos + 2) === charCodes.greaterThan ? 3 : 2;\n      if (this.input.charCodeAt(pos + size) === charCodes.equalsTo) {\n        this.finishOp(tt.assign, size + 1);\n        return;\n      }\n      this.finishOp(tt.bitShiftR, size);\n      return;\n    }\n\n    if (next === charCodes.equalsTo) {\n      // <= | >=\n      this.finishOp(tt.relational, 2);\n      return;\n    }\n\n    this.finishOp(tt.gt, 1);\n  }\n\n  readToken_eq_excl(code: number): void {\n    // '=!'\n    const next = this.input.charCodeAt(this.state.pos + 1);\n    if (next === charCodes.equalsTo) {\n      this.finishOp(\n        tt.equality,\n        this.input.charCodeAt(this.state.pos + 2) === charCodes.equalsTo\n          ? 3\n          : 2,\n      );\n      return;\n    }\n    if (code === charCodes.equalsTo && next === charCodes.greaterThan) {\n      // '=>'\n      this.state.pos += 2;\n      this.finishToken(tt.arrow);\n      return;\n    }\n    this.finishOp(code === charCodes.equalsTo ? tt.eq : tt.bang, 1);\n  }\n\n  readToken_question(): void {\n    // '?'\n    const next = this.input.charCodeAt(this.state.pos + 1);\n    const next2 = this.input.charCodeAt(this.state.pos + 2);\n    if (next === charCodes.questionMark) {\n      if (next2 === charCodes.equalsTo) {\n        // '??='\n        this.finishOp(tt.assign, 3);\n      } else {\n        // '??'\n        this.finishOp(tt.nullishCoalescing, 2);\n      }\n    } else if (\n      next === charCodes.dot &&\n      !(next2 >= charCodes.digit0 && next2 <= charCodes.digit9)\n    ) {\n      // '.' not followed by a number\n      this.state.pos += 2;\n      this.finishToken(tt.questionDot);\n    } else {\n      ++this.state.pos;\n      this.finishToken(tt.question);\n    }\n  }\n\n  getTokenFromCode(code: number): void {\n    switch (code) {\n      // The interpretation of a dot depends on whether it is followed\n      // by a digit or another two dots.\n\n      case charCodes.dot:\n        this.readToken_dot();\n        return;\n\n      // Punctuation tokens.\n      case charCodes.leftParenthesis:\n        ++this.state.pos;\n        this.finishToken(tt.parenL);\n        return;\n      case charCodes.rightParenthesis:\n        ++this.state.pos;\n        this.finishToken(tt.parenR);\n        return;\n      case charCodes.semicolon:\n        ++this.state.pos;\n        this.finishToken(tt.semi);\n        return;\n      case charCodes.comma:\n        ++this.state.pos;\n        this.finishToken(tt.comma);\n        return;\n      case charCodes.leftSquareBracket:\n        if (\n          this.hasPlugin(\"recordAndTuple\") &&\n          this.input.charCodeAt(this.state.pos + 1) === charCodes.verticalBar\n        ) {\n          if (this.getPluginOption(\"recordAndTuple\", \"syntaxType\") !== \"bar\") {\n            throw this.raise(\n              Errors.TupleExpressionBarIncorrectStartSyntaxType,\n              { at: this.state.curPosition() },\n            );\n          }\n\n          // [|\n          this.state.pos += 2;\n          this.finishToken(tt.bracketBarL);\n        } else {\n          ++this.state.pos;\n          this.finishToken(tt.bracketL);\n        }\n        return;\n      case charCodes.rightSquareBracket:\n        ++this.state.pos;\n        this.finishToken(tt.bracketR);\n        return;\n      case charCodes.leftCurlyBrace:\n        if (\n          this.hasPlugin(\"recordAndTuple\") &&\n          this.input.charCodeAt(this.state.pos + 1) === charCodes.verticalBar\n        ) {\n          if (this.getPluginOption(\"recordAndTuple\", \"syntaxType\") !== \"bar\") {\n            throw this.raise(\n              Errors.RecordExpressionBarIncorrectStartSyntaxType,\n              { at: this.state.curPosition() },\n            );\n          }\n\n          // {|\n          this.state.pos += 2;\n          this.finishToken(tt.braceBarL);\n        } else {\n          ++this.state.pos;\n          this.finishToken(tt.braceL);\n        }\n        return;\n      case charCodes.rightCurlyBrace:\n        ++this.state.pos;\n        this.finishToken(tt.braceR);\n        return;\n\n      case charCodes.colon:\n        if (\n          this.hasPlugin(\"functionBind\") &&\n          this.input.charCodeAt(this.state.pos + 1) === charCodes.colon\n        ) {\n          this.finishOp(tt.doubleColon, 2);\n        } else {\n          ++this.state.pos;\n          this.finishToken(tt.colon);\n        }\n        return;\n\n      case charCodes.questionMark:\n        this.readToken_question();\n        return;\n\n      case charCodes.graveAccent:\n        this.readTemplateToken();\n        return;\n\n      case charCodes.digit0: {\n        const next = this.input.charCodeAt(this.state.pos + 1);\n        // '0x', '0X' - hex number\n        if (next === charCodes.lowercaseX || next === charCodes.uppercaseX) {\n          this.readRadixNumber(16);\n          return;\n        }\n        // '0o', '0O' - octal number\n        if (next === charCodes.lowercaseO || next === charCodes.uppercaseO) {\n          this.readRadixNumber(8);\n          return;\n        }\n        // '0b', '0B' - binary number\n        if (next === charCodes.lowercaseB || next === charCodes.uppercaseB) {\n          this.readRadixNumber(2);\n          return;\n        }\n      }\n      // Anything else beginning with a digit is an integer, octal\n      // number, or float. (fall through)\n      case charCodes.digit1:\n      case charCodes.digit2:\n      case charCodes.digit3:\n      case charCodes.digit4:\n      case charCodes.digit5:\n      case charCodes.digit6:\n      case charCodes.digit7:\n      case charCodes.digit8:\n      case charCodes.digit9:\n        this.readNumber(false);\n        return;\n\n      // Quotes produce strings.\n      case charCodes.quotationMark:\n      case charCodes.apostrophe:\n        this.readString(code);\n        return;\n\n      // Operators are parsed inline in tiny state machines. '=' (charCodes.equalsTo) is\n      // often referred to. `finishOp` simply skips the amount of\n      // characters it is given as second argument, and returns a token\n      // of the type given by its first argument.\n\n      case charCodes.slash:\n        this.readToken_slash();\n        return;\n\n      case charCodes.percentSign:\n      case charCodes.asterisk:\n        this.readToken_mult_modulo(code);\n        return;\n\n      case charCodes.verticalBar:\n      case charCodes.ampersand:\n        this.readToken_pipe_amp(code);\n        return;\n\n      case charCodes.caret:\n        this.readToken_caret();\n        return;\n\n      case charCodes.plusSign:\n      case charCodes.dash:\n        this.readToken_plus_min(code);\n        return;\n\n      case charCodes.lessThan:\n        this.readToken_lt();\n        return;\n\n      case charCodes.greaterThan:\n        this.readToken_gt();\n        return;\n\n      case charCodes.equalsTo:\n      case charCodes.exclamationMark:\n        this.readToken_eq_excl(code);\n        return;\n\n      case charCodes.tilde:\n        this.finishOp(tt.tilde, 1);\n        return;\n\n      case charCodes.atSign:\n        this.readToken_atSign();\n        return;\n\n      case charCodes.numberSign:\n        this.readToken_numberSign();\n        return;\n\n      case charCodes.backslash:\n        this.readWord();\n        return;\n\n      default:\n        if (isIdentifierStart(code)) {\n          this.readWord(code);\n          return;\n        }\n    }\n\n    throw this.raise(Errors.InvalidOrUnexpectedToken, {\n      at: this.state.curPosition(),\n      unexpected: String.fromCodePoint(code),\n    });\n  }\n\n  finishOp(type: TokenType, size: number): void {\n    const str = this.input.slice(this.state.pos, this.state.pos + size);\n    this.state.pos += size;\n    this.finishToken(type, str);\n  }\n\n  readRegexp(): void {\n    const startLoc = this.state.startLoc;\n    const start = this.state.start + 1;\n    let escaped, inClass;\n    let { pos } = this.state;\n    for (; ; ++pos) {\n      if (pos >= this.length) {\n        // FIXME: explain\n        throw this.raise(Errors.UnterminatedRegExp, {\n          at: createPositionWithColumnOffset(startLoc, 1),\n        });\n      }\n      const ch = this.input.charCodeAt(pos);\n      if (isNewLine(ch)) {\n        throw this.raise(Errors.UnterminatedRegExp, {\n          at: createPositionWithColumnOffset(startLoc, 1),\n        });\n      }\n      if (escaped) {\n        escaped = false;\n      } else {\n        if (ch === charCodes.leftSquareBracket) {\n          inClass = true;\n        } else if (ch === charCodes.rightSquareBracket && inClass) {\n          inClass = false;\n        } else if (ch === charCodes.slash && !inClass) {\n          break;\n        }\n        escaped = ch === charCodes.backslash;\n      }\n    }\n    const content = this.input.slice(start, pos);\n    ++pos;\n\n    let mods = \"\";\n\n    const nextPos = () =>\n      // (pos + 1) + 1 - start\n      createPositionWithColumnOffset(startLoc, pos + 2 - start);\n\n    while (pos < this.length) {\n      const cp = this.codePointAtPos(pos);\n      // It doesn't matter if cp > 0xffff, the loop will either throw or break because we check on cp\n      const char = String.fromCharCode(cp);\n\n      if (VALID_REGEX_FLAGS.has(cp)) {\n        if (cp === charCodes.lowercaseV) {\n          this.expectPlugin(\"regexpUnicodeSets\", nextPos());\n\n          if (mods.includes(\"u\")) {\n            this.raise(Errors.IncompatibleRegExpUVFlags, { at: nextPos() });\n          }\n        } else if (cp === charCodes.lowercaseU) {\n          if (mods.includes(\"v\")) {\n            this.raise(Errors.IncompatibleRegExpUVFlags, { at: nextPos() });\n          }\n        }\n        if (mods.includes(char)) {\n          this.raise(Errors.DuplicateRegExpFlags, { at: nextPos() });\n        }\n      } else if (isIdentifierChar(cp) || cp === charCodes.backslash) {\n        this.raise(Errors.MalformedRegExpFlags, { at: nextPos() });\n      } else {\n        break;\n      }\n\n      ++pos;\n      mods += char;\n    }\n    this.state.pos = pos;\n\n    this.finishToken(tt.regexp, {\n      pattern: content,\n      flags: mods,\n    });\n  }\n\n  // Read an integer in the given radix. Return null if zero digits\n  // were read, the integer value otherwise. When `len` is given, this\n  // will return `null` unless the integer has exactly `len` digits.\n  // When `forceLen` is `true`, it means that we already know that in case\n  // of a malformed number we have to skip `len` characters anyway, instead\n  // of bailing out early. For example, in \"\\u{123Z}\" we want to read up to }\n  // anyway, while in \"\\u00Z\" we will stop at Z instead of consuming four\n  // characters (and thus the closing quote).\n\n  readInt(\n    radix: number,\n    len?: number,\n    forceLen?: boolean,\n    allowNumSeparator: boolean | \"bail\" = true,\n  ): number | null {\n    const start = this.state.pos;\n    const forbiddenSiblings =\n      radix === 16\n        ? forbiddenNumericSeparatorSiblings.hex\n        : forbiddenNumericSeparatorSiblings.decBinOct;\n    const isAllowedSibling =\n      radix === 16\n        ? isAllowedNumericSeparatorSibling.hex\n        : radix === 10\n        ? isAllowedNumericSeparatorSibling.dec\n        : radix === 8\n        ? isAllowedNumericSeparatorSibling.oct\n        : isAllowedNumericSeparatorSibling.bin;\n\n    let invalid = false;\n    let total = 0;\n\n    for (let i = 0, e = len == null ? Infinity : len; i < e; ++i) {\n      const code = this.input.charCodeAt(this.state.pos);\n      let val;\n\n      if (code === charCodes.underscore && allowNumSeparator !== \"bail\") {\n        const prev = this.input.charCodeAt(this.state.pos - 1);\n        const next = this.input.charCodeAt(this.state.pos + 1);\n\n        if (!allowNumSeparator) {\n          this.raise(Errors.NumericSeparatorInEscapeSequence, {\n            at: this.state.curPosition(),\n          });\n        } else if (\n          Number.isNaN(next) ||\n          !isAllowedSibling(next) ||\n          forbiddenSiblings.has(prev) ||\n          forbiddenSiblings.has(next)\n        ) {\n          this.raise(Errors.UnexpectedNumericSeparator, {\n            at: this.state.curPosition(),\n          });\n        }\n\n        // Ignore this _ character\n        ++this.state.pos;\n        continue;\n      }\n\n      if (code >= charCodes.lowercaseA) {\n        val = code - charCodes.lowercaseA + charCodes.lineFeed;\n      } else if (code >= charCodes.uppercaseA) {\n        val = code - charCodes.uppercaseA + charCodes.lineFeed;\n      } else if (charCodes.isDigit(code)) {\n        val = code - charCodes.digit0; // 0-9\n      } else {\n        val = Infinity;\n      }\n      if (val >= radix) {\n        // If we are in \"errorRecovery\" mode and we found a digit which is too big,\n        // don't break the loop.\n\n        if (this.options.errorRecovery && val <= 9) {\n          val = 0;\n          this.raise(Errors.InvalidDigit, {\n            at: this.state.curPosition(),\n            radix,\n          });\n        } else if (forceLen) {\n          val = 0;\n          invalid = true;\n        } else {\n          break;\n        }\n      }\n      ++this.state.pos;\n      total = total * radix + val;\n    }\n    if (\n      this.state.pos === start ||\n      (len != null && this.state.pos - start !== len) ||\n      invalid\n    ) {\n      return null;\n    }\n\n    return total;\n  }\n\n  readRadixNumber(radix: number): void {\n    const startLoc = this.state.curPosition();\n    let isBigInt = false;\n\n    this.state.pos += 2; // 0x\n    const val = this.readInt(radix);\n    if (val == null) {\n      this.raise(Errors.InvalidDigit, {\n        // Numeric literals can't have newlines, so this is safe to do.\n        at: createPositionWithColumnOffset(startLoc, 2),\n        radix,\n      });\n    }\n    const next = this.input.charCodeAt(this.state.pos);\n\n    if (next === charCodes.lowercaseN) {\n      ++this.state.pos;\n      isBigInt = true;\n    } else if (next === charCodes.lowercaseM) {\n      throw this.raise(Errors.InvalidDecimal, { at: startLoc });\n    }\n\n    if (isIdentifierStart(this.codePointAtPos(this.state.pos))) {\n      throw this.raise(Errors.NumberIdentifier, {\n        at: this.state.curPosition(),\n      });\n    }\n\n    if (isBigInt) {\n      const str = this.input\n        .slice(startLoc.index, this.state.pos)\n        .replace(/[_n]/g, \"\");\n      this.finishToken(tt.bigint, str);\n      return;\n    }\n\n    this.finishToken(tt.num, val);\n  }\n\n  // Read an integer, octal integer, or floating-point number.\n\n  readNumber(startsWithDot: boolean): void {\n    const start = this.state.pos;\n    const startLoc = this.state.curPosition();\n    let isFloat = false;\n    let isBigInt = false;\n    let isDecimal = false;\n    let hasExponent = false;\n    let isOctal = false;\n\n    if (!startsWithDot && this.readInt(10) === null) {\n      this.raise(Errors.InvalidNumber, { at: this.state.curPosition() });\n    }\n    const hasLeadingZero =\n      this.state.pos - start >= 2 &&\n      this.input.charCodeAt(start) === charCodes.digit0;\n\n    if (hasLeadingZero) {\n      const integer = this.input.slice(start, this.state.pos);\n      this.recordStrictModeErrors(Errors.StrictOctalLiteral, { at: startLoc });\n      if (!this.state.strict) {\n        // disallow numeric separators in non octal decimals and legacy octal likes\n        const underscorePos = integer.indexOf(\"_\");\n        if (underscorePos > 0) {\n          // Numeric literals can't have newlines, so this is safe to do.\n          this.raise(Errors.ZeroDigitNumericSeparator, {\n            at: createPositionWithColumnOffset(startLoc, underscorePos),\n          });\n        }\n      }\n      isOctal = hasLeadingZero && !/[89]/.test(integer);\n    }\n\n    let next = this.input.charCodeAt(this.state.pos);\n    if (next === charCodes.dot && !isOctal) {\n      ++this.state.pos;\n      this.readInt(10);\n      isFloat = true;\n      next = this.input.charCodeAt(this.state.pos);\n    }\n\n    if (\n      (next === charCodes.uppercaseE || next === charCodes.lowercaseE) &&\n      !isOctal\n    ) {\n      next = this.input.charCodeAt(++this.state.pos);\n      if (next === charCodes.plusSign || next === charCodes.dash) {\n        ++this.state.pos;\n      }\n      if (this.readInt(10) === null) {\n        this.raise(Errors.InvalidOrMissingExponent, { at: startLoc });\n      }\n      isFloat = true;\n      hasExponent = true;\n      next = this.input.charCodeAt(this.state.pos);\n    }\n\n    if (next === charCodes.lowercaseN) {\n      // disallow floats, legacy octal syntax and non octal decimals\n      // new style octal (\"0o\") is handled in this.readRadixNumber\n      if (isFloat || hasLeadingZero) {\n        this.raise(Errors.InvalidBigIntLiteral, { at: startLoc });\n      }\n      ++this.state.pos;\n      isBigInt = true;\n    }\n\n    if (next === charCodes.lowercaseM) {\n      this.expectPlugin(\"decimal\", this.state.curPosition());\n      if (hasExponent || hasLeadingZero) {\n        this.raise(Errors.InvalidDecimal, { at: startLoc });\n      }\n      ++this.state.pos;\n      isDecimal = true;\n    }\n\n    if (isIdentifierStart(this.codePointAtPos(this.state.pos))) {\n      throw this.raise(Errors.NumberIdentifier, {\n        at: this.state.curPosition(),\n      });\n    }\n\n    // remove \"_\" for numeric literal separator, and trailing `m` or `n`\n    const str = this.input.slice(start, this.state.pos).replace(/[_mn]/g, \"\");\n\n    if (isBigInt) {\n      this.finishToken(tt.bigint, str);\n      return;\n    }\n\n    if (isDecimal) {\n      this.finishToken(tt.decimal, str);\n      return;\n    }\n\n    const val = isOctal ? parseInt(str, 8) : parseFloat(str);\n    this.finishToken(tt.num, val);\n  }\n\n  // Read a string value, interpreting backslash-escapes.\n\n  readCodePoint(throwOnInvalid: boolean): number | null {\n    const ch = this.input.charCodeAt(this.state.pos);\n    let code;\n\n    if (ch === charCodes.leftCurlyBrace) {\n      ++this.state.pos;\n      code = this.readHexChar(\n        this.input.indexOf(\"}\", this.state.pos) - this.state.pos,\n        true,\n        throwOnInvalid,\n      );\n      ++this.state.pos;\n      if (code !== null && code > 0x10ffff) {\n        if (throwOnInvalid) {\n          this.raise(Errors.InvalidCodePoint, { at: this.state.curPosition() });\n        } else {\n          return null;\n        }\n      }\n    } else {\n      code = this.readHexChar(4, false, throwOnInvalid);\n    }\n    return code;\n  }\n\n  readString(quote: number): void {\n    let out = \"\",\n      chunkStart = ++this.state.pos;\n    for (;;) {\n      if (this.state.pos >= this.length) {\n        throw this.raise(Errors.UnterminatedString, {\n          at: this.state.startLoc,\n        });\n      }\n      const ch = this.input.charCodeAt(this.state.pos);\n      if (ch === quote) break;\n      if (ch === charCodes.backslash) {\n        out += this.input.slice(chunkStart, this.state.pos);\n        // $FlowFixMe\n        out += this.readEscapedChar(false);\n        chunkStart = this.state.pos;\n      } else if (\n        ch === charCodes.lineSeparator ||\n        ch === charCodes.paragraphSeparator\n      ) {\n        ++this.state.pos;\n        ++this.state.curLine;\n        this.state.lineStart = this.state.pos;\n      } else if (isNewLine(ch)) {\n        throw this.raise(Errors.UnterminatedString, {\n          at: this.state.startLoc,\n        });\n      } else {\n        ++this.state.pos;\n      }\n    }\n    out += this.input.slice(chunkStart, this.state.pos++);\n    this.finishToken(tt.string, out);\n  }\n\n  // Reads template continuation `}...`\n  readTemplateContinuation(): void {\n    if (!this.match(tt.braceR)) {\n      this.unexpected(null, tt.braceR);\n    }\n    // rewind pos to `}`\n    this.state.pos--;\n    this.readTemplateToken();\n  }\n\n  // Reads template string tokens.\n  readTemplateToken(): void {\n    let out = \"\",\n      chunkStart = this.state.pos,\n      containsInvalid = false;\n    ++this.state.pos; // eat '`' or `}`\n    for (;;) {\n      if (this.state.pos >= this.length) {\n        // FIXME: explain\n        throw this.raise(Errors.UnterminatedTemplate, {\n          at: createPositionWithColumnOffset(this.state.startLoc, 1),\n        });\n      }\n      const ch = this.input.charCodeAt(this.state.pos);\n      if (ch === charCodes.graveAccent) {\n        ++this.state.pos; // eat '`'\n        out += this.input.slice(chunkStart, this.state.pos);\n        this.finishToken(tt.templateTail, containsInvalid ? null : out);\n        return;\n      }\n      if (\n        ch === charCodes.dollarSign &&\n        this.input.charCodeAt(this.state.pos + 1) === charCodes.leftCurlyBrace\n      ) {\n        this.state.pos += 2; // eat '${'\n        out += this.input.slice(chunkStart, this.state.pos);\n        this.finishToken(tt.templateNonTail, containsInvalid ? null : out);\n        return;\n      }\n      if (ch === charCodes.backslash) {\n        out += this.input.slice(chunkStart, this.state.pos);\n        const escaped = this.readEscapedChar(true);\n        if (escaped === null) {\n          containsInvalid = true;\n        } else {\n          out += escaped;\n        }\n        chunkStart = this.state.pos;\n      } else if (isNewLine(ch)) {\n        out += this.input.slice(chunkStart, this.state.pos);\n        ++this.state.pos;\n        switch (ch) {\n          case charCodes.carriageReturn:\n            if (this.input.charCodeAt(this.state.pos) === charCodes.lineFeed) {\n              ++this.state.pos;\n            }\n          // fall through\n          case charCodes.lineFeed:\n            out += \"\\n\";\n            break;\n          default:\n            out += String.fromCharCode(ch);\n            break;\n        }\n        ++this.state.curLine;\n        this.state.lineStart = this.state.pos;\n        chunkStart = this.state.pos;\n      } else {\n        ++this.state.pos;\n      }\n    }\n  }\n\n  recordStrictModeErrors(\n    toParseError: DeferredStrictError,\n    { at }: { at: Position },\n  ) {\n    const index = at.index;\n\n    if (this.state.strict && !this.state.strictErrors.has(index)) {\n      this.raise(toParseError, { at });\n    } else {\n      this.state.strictErrors.set(index, [toParseError, at]);\n    }\n  }\n\n  // Used to read escaped characters\n  readEscapedChar(inTemplate: boolean): string | null {\n    const throwOnInvalid = !inTemplate;\n    const ch = this.input.charCodeAt(++this.state.pos);\n    ++this.state.pos;\n    switch (ch) {\n      case charCodes.lowercaseN:\n        return \"\\n\";\n      case charCodes.lowercaseR:\n        return \"\\r\";\n      case charCodes.lowercaseX: {\n        const code = this.readHexChar(2, false, throwOnInvalid);\n        return code === null ? null : String.fromCharCode(code);\n      }\n      case charCodes.lowercaseU: {\n        const code = this.readCodePoint(throwOnInvalid);\n        return code === null ? null : String.fromCodePoint(code);\n      }\n      case charCodes.lowercaseT:\n        return \"\\t\";\n      case charCodes.lowercaseB:\n        return \"\\b\";\n      case charCodes.lowercaseV:\n        return \"\\u000b\";\n      case charCodes.lowercaseF:\n        return \"\\f\";\n      case charCodes.carriageReturn:\n        if (this.input.charCodeAt(this.state.pos) === charCodes.lineFeed) {\n          ++this.state.pos;\n        }\n      // fall through\n      case charCodes.lineFeed:\n        this.state.lineStart = this.state.pos;\n        ++this.state.curLine;\n      // fall through\n      case charCodes.lineSeparator:\n      case charCodes.paragraphSeparator:\n        return \"\";\n      case charCodes.digit8:\n      case charCodes.digit9:\n        if (inTemplate) {\n          return null;\n        } else {\n          this.recordStrictModeErrors(Errors.StrictNumericEscape, {\n            // We immediately follow a \"\\\\\", and we're an 8 or a 9, so we must\n            // be on the same line.\n            at: createPositionWithColumnOffset(this.state.curPosition(), -1),\n          });\n        }\n      // fall through\n      default:\n        if (ch >= charCodes.digit0 && ch <= charCodes.digit7) {\n          // We immediately follow a \"\\\\\", and we're something between 0 and 7,\n          // so we must be on the same line.\n          const codePos = createPositionWithColumnOffset(\n            this.state.curPosition(),\n            -1,\n          );\n          const match = this.input\n            .slice(this.state.pos - 1, this.state.pos + 2)\n            .match(/^[0-7]+/);\n\n          // This is never null, because of the if condition above.\n          /*:: invariant(match !== null) */\n          let octalStr = match[0];\n\n          let octal = parseInt(octalStr, 8);\n          if (octal > 255) {\n            octalStr = octalStr.slice(0, -1);\n            octal = parseInt(octalStr, 8);\n          }\n          this.state.pos += octalStr.length - 1;\n          const next = this.input.charCodeAt(this.state.pos);\n          if (\n            octalStr !== \"0\" ||\n            next === charCodes.digit8 ||\n            next === charCodes.digit9\n          ) {\n            if (inTemplate) {\n              return null;\n            } else {\n              this.recordStrictModeErrors(Errors.StrictNumericEscape, {\n                at: codePos,\n              });\n            }\n          }\n\n          return String.fromCharCode(octal);\n        }\n\n        return String.fromCharCode(ch);\n    }\n  }\n\n  // Used to read character escape sequences ('\\x', '\\u').\n\n  readHexChar(\n    len: number,\n    forceLen: boolean,\n    throwOnInvalid: boolean,\n  ): number | null {\n    const codeLoc = this.state.curPosition();\n    const n = this.readInt(16, len, forceLen, false);\n    if (n === null) {\n      if (throwOnInvalid) {\n        this.raise(Errors.InvalidEscapeSequence, { at: codeLoc });\n      } else {\n        this.state.pos = codeLoc.index - 1;\n      }\n    }\n    return n;\n  }\n\n  // Read an identifier, and return it as a string. Sets `this.state.containsEsc`\n  // to whether the word contained a '\\u' escape.\n  //\n  // Incrementally adds only escaped chars, adding other chunks as-is\n  // as a micro-optimization.\n  //\n  // When `firstCode` is given, it assumes it is always an identifier start and\n  // will skip reading start position again\n\n  readWord1(firstCode: number | void): string {\n    this.state.containsEsc = false;\n    let word = \"\";\n    const start = this.state.pos;\n    let chunkStart = this.state.pos;\n    if (firstCode !== undefined) {\n      this.state.pos += firstCode <= 0xffff ? 1 : 2;\n    }\n\n    while (this.state.pos < this.length) {\n      const ch = this.codePointAtPos(this.state.pos);\n      if (isIdentifierChar(ch)) {\n        this.state.pos += ch <= 0xffff ? 1 : 2;\n      } else if (ch === charCodes.backslash) {\n        this.state.containsEsc = true;\n\n        word += this.input.slice(chunkStart, this.state.pos);\n        const escStart = this.state.curPosition();\n        const identifierCheck =\n          this.state.pos === start ? isIdentifierStart : isIdentifierChar;\n\n        if (this.input.charCodeAt(++this.state.pos) !== charCodes.lowercaseU) {\n          this.raise(Errors.MissingUnicodeEscape, {\n            at: this.state.curPosition(),\n          });\n          chunkStart = this.state.pos - 1;\n          continue;\n        }\n\n        ++this.state.pos;\n        const esc = this.readCodePoint(true);\n        if (esc !== null) {\n          if (!identifierCheck(esc)) {\n            this.raise(Errors.EscapedCharNotAnIdentifier, { at: escStart });\n          }\n\n          word += String.fromCodePoint(esc);\n        }\n        chunkStart = this.state.pos;\n      } else {\n        break;\n      }\n    }\n    return word + this.input.slice(chunkStart, this.state.pos);\n  }\n\n  // Read an identifier or keyword token. Will check for reserved\n  // words when necessary.\n\n  readWord(firstCode: number | void): void {\n    const word = this.readWord1(firstCode);\n    const type = keywordTypes.get(word);\n    if (type !== undefined) {\n      // We don't use word as state.value here because word is a dynamic string\n      // while token label is a shared constant string\n      this.finishToken(type, tokenLabelName(type));\n    } else {\n      this.finishToken(tt.name, word);\n    }\n  }\n\n  checkKeywordEscapes(): void {\n    const { type } = this.state;\n    if (tokenIsKeyword(type) && this.state.containsEsc) {\n      this.raise(Errors.InvalidEscapedReservedWord, {\n        at: this.state.startLoc,\n        reservedWord: tokenLabelName(type),\n      });\n    }\n  }\n\n  /**\n   * Raise a `ParseError` given the appropriate properties. If passed a\n   * `Position` for the `at` property, raises the `ParseError` at that location.\n   * Otherwise, if passed a `Node`, raises the `ParseError` at the start\n   * location of that `Node`.\n   *\n   * If `errorRecovery` is `true`, the error is pushed to the errors array and\n   * returned. If `errorRecovery` is `false`, the error is instead thrown.\n   *\n   * @param {Class<ParseError<ErrorDetails>>>} ParseErrorClass\n   * @param {RaiseProperties<ErrorDetails>} raiseProperties\n   * @returns {(ParseError<ErrorDetails> | empty)}\n   * @memberof Tokenizer\n   */\n  raise<ErrorDetails>(\n    toParseError: ParseErrorConstructor<ErrorDetails>,\n    raiseProperties: RaiseProperties<ErrorDetails>,\n  ): ParseError<ErrorDetails> {\n    const { at, ...details } = raiseProperties;\n    const loc = at instanceof Position ? at : at.loc.start;\n    const error = toParseError({ loc, details });\n\n    if (!this.options.errorRecovery) throw error;\n    if (!this.isLookahead) this.state.errors.push(error);\n\n    return error;\n  }\n\n  /**\n   * If `errorRecovery` is `false`, this method behaves identically to `raise`.\n   * If `errorRecovery` is `true`, this method will first see if there is\n   * already an error stored at the same `Position`, and replaces it with the\n   * one generated here.\n   *\n   * @param {Class<ParseError<ErrorDetails>>>} ParseErrorClass\n   * @param {RaiseProperties<ErrorDetails>} raiseProperties\n   * @returns {(ParseError<ErrorDetails> | empty)}\n   * @memberof Tokenizer\n   */\n  raiseOverwrite<ErrorDetails>(\n    toParseError: ParseErrorConstructor<ErrorDetails>,\n    raiseProperties: RaiseProperties<ErrorDetails>,\n  ): ParseError<ErrorDetails> | empty {\n    const { at, ...details } = raiseProperties;\n    const loc = at instanceof Position ? at : at.loc.start;\n    const pos = loc.index;\n    const errors = this.state.errors;\n\n    for (let i = errors.length - 1; i >= 0; i--) {\n      const error = errors[i];\n      if (error.loc.index === pos) {\n        return (errors[i] = toParseError({ loc, details }));\n      }\n      if (error.loc.index < pos) break;\n    }\n\n    return this.raise(toParseError, raiseProperties);\n  }\n\n  // updateContext is used by the jsx plugin\n  // eslint-disable-next-line no-unused-vars\n  updateContext(prevType: TokenType): void {}\n\n  // Raise an unexpected token error. Can take the expected token type.\n  unexpected(loc?: Position | null, type?: TokenType): void {\n    throw this.raise(Errors.UnexpectedToken, {\n      expected: type ? tokenLabelName(type) : null,\n      at: loc != null ? loc : this.state.startLoc,\n    });\n  }\n\n  expectPlugin(pluginName: string, loc?: Position): true {\n    if (this.hasPlugin(pluginName)) {\n      return true;\n    }\n\n    throw this.raise(Errors.MissingPlugin, {\n      at: loc != null ? loc : this.state.startLoc,\n      missingPlugin: [pluginName],\n    });\n  }\n\n  expectOnePlugin(pluginNames: string[]): void {\n    if (!pluginNames.some(name => this.hasPlugin(name))) {\n      throw this.raise(Errors.MissingOneOfPlugins, {\n        at: this.state.startLoc,\n        missingPlugin: pluginNames,\n      });\n    }\n  }\n}\n","// @flow\nimport {\n  SCOPE_ARROW,\n  SCOPE_DIRECT_SUPER,\n  SCOPE_FUNCTION,\n  SCOPE_SIMPLE_CATCH,\n  SCOPE_SUPER,\n  SCOPE_PROGRAM,\n  SCOPE_VAR,\n  SCOPE_CLASS,\n  SCOPE_STATIC_BLOCK,\n  BIND_SCOPE_FUNCTION,\n  BIND_SCOPE_VAR,\n  BIND_SCOPE_LEXICAL,\n  BIND_KIND_VALUE,\n  type ScopeFlags,\n  type BindingTypes,\n} from \"./scopeflags\";\nimport { Position } from \"./location\";\nimport * as N from \"../types\";\nimport { Errors } from \"../parse-error\";\nimport Tokenizer from \"../tokenizer\";\n\n// Start an AST node, attaching a start offset.\nexport class Scope {\n  declare flags: ScopeFlags;\n  // A set of var-declared names in the current lexical scope\n  var: Set<string> = new Set();\n  // A set of lexically-declared names in the current lexical scope\n  lexical: Set<string> = new Set();\n  // A set of lexically-declared FunctionDeclaration names in the current lexical scope\n  functions: Set<string> = new Set();\n\n  constructor(flags: ScopeFlags) {\n    this.flags = flags;\n  }\n}\n\n// The functions in this module keep track of declared variables in the\n// current scope in order to detect duplicate variable names.\nexport default class ScopeHandler<IScope: Scope = Scope> {\n  parser: Tokenizer;\n  scopeStack: Array<IScope> = [];\n  inModule: boolean;\n  undefinedExports: Map<string, Position> = new Map();\n\n  constructor(parser: Tokenizer, inModule: boolean) {\n    this.parser = parser;\n    this.inModule = inModule;\n  }\n\n  get inFunction() {\n    return (this.currentVarScopeFlags() & SCOPE_FUNCTION) > 0;\n  }\n  get allowSuper() {\n    return (this.currentThisScopeFlags() & SCOPE_SUPER) > 0;\n  }\n  get allowDirectSuper() {\n    return (this.currentThisScopeFlags() & SCOPE_DIRECT_SUPER) > 0;\n  }\n  get inClass() {\n    return (this.currentThisScopeFlags() & SCOPE_CLASS) > 0;\n  }\n  get inClassAndNotInNonArrowFunction() {\n    const flags = this.currentThisScopeFlags();\n    return (flags & SCOPE_CLASS) > 0 && (flags & SCOPE_FUNCTION) === 0;\n  }\n  get inStaticBlock() {\n    for (let i = this.scopeStack.length - 1; ; i--) {\n      const { flags } = this.scopeStack[i];\n      if (flags & SCOPE_STATIC_BLOCK) {\n        return true;\n      }\n      if (flags & (SCOPE_VAR | SCOPE_CLASS)) {\n        // function body, module body, class property initializers\n        return false;\n      }\n    }\n  }\n  get inNonArrowFunction() {\n    return (this.currentThisScopeFlags() & SCOPE_FUNCTION) > 0;\n  }\n  get treatFunctionsAsVar() {\n    return this.treatFunctionsAsVarInScope(this.currentScope());\n  }\n\n  createScope(flags: ScopeFlags): Scope {\n    return new Scope(flags);\n  }\n  // This method will be overwritten by subclasses\n  /*:: +createScope: (flags: ScopeFlags) => IScope; */\n\n  enter(flags: ScopeFlags) {\n    this.scopeStack.push(this.createScope(flags));\n  }\n\n  exit() {\n    this.scopeStack.pop();\n  }\n\n  // The spec says:\n  // > At the top level of a function, or script, function declarations are\n  // > treated like var declarations rather than like lexical declarations.\n  treatFunctionsAsVarInScope(scope: IScope): boolean {\n    return !!(\n      scope.flags & (SCOPE_FUNCTION | SCOPE_STATIC_BLOCK) ||\n      (!this.parser.inModule && scope.flags & SCOPE_PROGRAM)\n    );\n  }\n\n  declareName(name: string, bindingType: BindingTypes, loc: Position) {\n    let scope = this.currentScope();\n    if (bindingType & BIND_SCOPE_LEXICAL || bindingType & BIND_SCOPE_FUNCTION) {\n      this.checkRedeclarationInScope(scope, name, bindingType, loc);\n\n      if (bindingType & BIND_SCOPE_FUNCTION) {\n        scope.functions.add(name);\n      } else {\n        scope.lexical.add(name);\n      }\n\n      if (bindingType & BIND_SCOPE_LEXICAL) {\n        this.maybeExportDefined(scope, name);\n      }\n    } else if (bindingType & BIND_SCOPE_VAR) {\n      for (let i = this.scopeStack.length - 1; i >= 0; --i) {\n        scope = this.scopeStack[i];\n        this.checkRedeclarationInScope(scope, name, bindingType, loc);\n        scope.var.add(name);\n        this.maybeExportDefined(scope, name);\n\n        if (scope.flags & SCOPE_VAR) break;\n      }\n    }\n    if (this.parser.inModule && scope.flags & SCOPE_PROGRAM) {\n      this.undefinedExports.delete(name);\n    }\n  }\n\n  maybeExportDefined(scope: IScope, name: string) {\n    if (this.parser.inModule && scope.flags & SCOPE_PROGRAM) {\n      this.undefinedExports.delete(name);\n    }\n  }\n\n  checkRedeclarationInScope(\n    scope: IScope,\n    name: string,\n    bindingType: BindingTypes,\n    loc: Position,\n  ) {\n    if (this.isRedeclaredInScope(scope, name, bindingType)) {\n      this.parser.raise(Errors.VarRedeclaration, {\n        at: loc,\n        identifierName: name,\n      });\n    }\n  }\n\n  isRedeclaredInScope(\n    scope: IScope,\n    name: string,\n    bindingType: BindingTypes,\n  ): boolean {\n    if (!(bindingType & BIND_KIND_VALUE)) return false;\n\n    if (bindingType & BIND_SCOPE_LEXICAL) {\n      return (\n        scope.lexical.has(name) ||\n        scope.functions.has(name) ||\n        scope.var.has(name)\n      );\n    }\n\n    if (bindingType & BIND_SCOPE_FUNCTION) {\n      return (\n        scope.lexical.has(name) ||\n        (!this.treatFunctionsAsVarInScope(scope) && scope.var.has(name))\n      );\n    }\n\n    return (\n      (scope.lexical.has(name) &&\n        !(\n          scope.flags & SCOPE_SIMPLE_CATCH &&\n          scope.lexical.values().next().value === name\n        )) ||\n      (!this.treatFunctionsAsVarInScope(scope) && scope.functions.has(name))\n    );\n  }\n\n  checkLocalExport(id: N.Identifier) {\n    const { name } = id;\n    const topLevelScope = this.scopeStack[0];\n    if (\n      !topLevelScope.lexical.has(name) &&\n      !topLevelScope.var.has(name) &&\n      // In strict mode, scope.functions will always be empty.\n      // Modules are strict by default, but the `scriptMode` option\n      // can overwrite this behavior.\n      !topLevelScope.functions.has(name)\n    ) {\n      this.undefinedExports.set(name, id.loc.start);\n    }\n  }\n\n  currentScope(): IScope {\n    return this.scopeStack[this.scopeStack.length - 1];\n  }\n\n  // $FlowIgnore\n  currentVarScopeFlags(): ScopeFlags {\n    for (let i = this.scopeStack.length - 1; ; i--) {\n      const { flags } = this.scopeStack[i];\n      if (flags & SCOPE_VAR) {\n        return flags;\n      }\n    }\n  }\n\n  // Could be useful for `arguments`, `this`, `new.target`, `super()`, `super.property`, and `super[property]`.\n  // $FlowIgnore\n  currentThisScopeFlags(): ScopeFlags {\n    for (let i = this.scopeStack.length - 1; ; i--) {\n      const { flags } = this.scopeStack[i];\n      if (flags & (SCOPE_VAR | SCOPE_CLASS) && !(flags & SCOPE_ARROW)) {\n        return flags;\n      }\n    }\n  }\n}\n","// @flow\n\nimport { Position } from \"../../util/location\";\nimport ScopeHandler, { Scope } from \"../../util/scope\";\nimport {\n  BIND_FLAGS_FLOW_DECLARE_FN,\n  type ScopeFlags,\n  type BindingTypes,\n} from \"../../util/scopeflags\";\nimport * as N from \"../../types\";\n\n// Reference implementation: https://github.com/facebook/flow/blob/23aeb2a2ef6eb4241ce178fde5d8f17c5f747fb5/src/typing/env.ml#L536-L584\nclass FlowScope extends Scope {\n  // declare function foo(): type;\n  declareFunctions: Set<string> = new Set();\n}\n\nexport default class FlowScopeHandler extends ScopeHandler<FlowScope> {\n  createScope(flags: ScopeFlags): FlowScope {\n    return new FlowScope(flags);\n  }\n\n  declareName(name: string, bindingType: BindingTypes, loc: Position) {\n    const scope = this.currentScope();\n    if (bindingType & BIND_FLAGS_FLOW_DECLARE_FN) {\n      this.checkRedeclarationInScope(scope, name, bindingType, loc);\n      this.maybeExportDefined(scope, name);\n      scope.declareFunctions.add(name);\n      return;\n    }\n\n    super.declareName(...arguments);\n  }\n\n  isRedeclaredInScope(\n    scope: FlowScope,\n    name: string,\n    bindingType: BindingTypes,\n  ): boolean {\n    if (super.isRedeclaredInScope(...arguments)) return true;\n\n    if (bindingType & BIND_FLAGS_FLOW_DECLARE_FN) {\n      return (\n        !scope.declareFunctions.has(name) &&\n        (scope.lexical.has(name) || scope.functions.has(name))\n      );\n    }\n\n    return false;\n  }\n\n  checkLocalExport(id: N.Identifier) {\n    if (!this.scopeStack[0].declareFunctions.has(id.name)) {\n      super.checkLocalExport(id);\n    }\n  }\n}\n","// @flow\n\nimport {\n  CLASS_ELEMENT_KIND_ACCESSOR,\n  CLASS_ELEMENT_FLAG_STATIC,\n  type ClassElementTypes,\n} from \"./scopeflags\";\nimport { Position } from \"./location\";\nimport { Errors } from \"../parse-error\";\nimport Tokenizer from \"../tokenizer\";\n\nexport class ClassScope {\n  // A list of private named declared in the current class\n  privateNames: Set<string> = new Set();\n\n  // A list of private getters of setters without their counterpart\n  loneAccessors: Map<string, ClassElementTypes> = new Map();\n\n  // A list of private names used before being defined, mapping to\n  // their position.\n  undefinedPrivateNames: Map<string, Position> = new Map();\n}\n\nexport default class ClassScopeHandler {\n  parser: Tokenizer;\n  stack: Array<ClassScope> = [];\n  undefinedPrivateNames: Map<string, Position> = new Map();\n\n  constructor(parser: Tokenizer) {\n    this.parser = parser;\n  }\n\n  current(): ClassScope {\n    return this.stack[this.stack.length - 1];\n  }\n\n  enter() {\n    this.stack.push(new ClassScope());\n  }\n\n  exit() {\n    const oldClassScope = this.stack.pop();\n\n    // Migrate the usage of not yet defined private names to the outer\n    // class scope, or raise an error if we reached the top-level scope.\n\n    const current = this.current();\n\n    // Array.from is needed because this is compiled to an array-like for loop\n    for (const [name, loc] of Array.from(oldClassScope.undefinedPrivateNames)) {\n      if (current) {\n        if (!current.undefinedPrivateNames.has(name)) {\n          current.undefinedPrivateNames.set(name, loc);\n        }\n      } else {\n        this.parser.raise(Errors.InvalidPrivateFieldResolution, {\n          at: loc,\n          identifierName: name,\n        });\n      }\n    }\n  }\n\n  declarePrivateName(\n    name: string,\n    elementType: ClassElementTypes,\n    loc: Position,\n  ) {\n    const { privateNames, loneAccessors, undefinedPrivateNames } =\n      this.current();\n    let redefined = privateNames.has(name);\n\n    if (elementType & CLASS_ELEMENT_KIND_ACCESSOR) {\n      const accessor = redefined && loneAccessors.get(name);\n      if (accessor) {\n        const oldStatic = accessor & CLASS_ELEMENT_FLAG_STATIC;\n        const newStatic = elementType & CLASS_ELEMENT_FLAG_STATIC;\n\n        const oldKind = accessor & CLASS_ELEMENT_KIND_ACCESSOR;\n        const newKind = elementType & CLASS_ELEMENT_KIND_ACCESSOR;\n\n        // The private name can be duplicated only if it is used by\n        // two accessors with different kind (get and set), and if\n        // they have the same placement (static or not).\n        redefined = oldKind === newKind || oldStatic !== newStatic;\n\n        if (!redefined) loneAccessors.delete(name);\n      } else if (!redefined) {\n        loneAccessors.set(name, elementType);\n      }\n    }\n\n    if (redefined) {\n      this.parser.raise(Errors.PrivateNameRedeclaration, {\n        at: loc,\n        identifierName: name,\n      });\n    }\n\n    privateNames.add(name);\n    undefinedPrivateNames.delete(name);\n  }\n\n  usePrivateName(name: string, loc: Position) {\n    let classScope;\n    for (classScope of this.stack) {\n      if (classScope.privateNames.has(name)) return;\n    }\n\n    if (classScope) {\n      classScope.undefinedPrivateNames.set(name, loc);\n    } else {\n      // top-level\n      this.parser.raise(Errors.InvalidPrivateFieldResolution, {\n        at: loc,\n        identifierName: name,\n      });\n    }\n  }\n}\n","// @flow\n\nimport { Errors, type ParseErrorConstructor } from \"../parse-error\";\nimport { Position } from \"./location\";\nimport type { Node } from \"../types\";\nimport Tokenizer from \"../tokenizer\";\n\n/*:: declare var invariant; */\n/**\n * @module util/expression-scope\n\nExpressionScope is used to track declaration errors in these ambiguous patterns:\n\n- CoverParenthesizedExpressionAndArrowParameterList\n  e.g. we don't know if `({ x })` is an parenthesized expression or an\n  arrow function parameters until we see an `=>` after `)`.\n\n- CoverCallExpressionAndAsyncArrowHead\n   e.g. we don't know if `async({ x })` is a call expression or an async arrow\n   function parameters until we see an `=>` after `)`\n\nThe following declaration errors (@see parser-errors/standard) will be recorded in\nsome expression scopes and thrown later when we know what the ambiguous pattern is\n\n- AwaitBindingIdentifier\n- AwaitExpressionFormalParameter\n- YieldInParameter\n- InvalidParenthesizedAssignment when parenthesized is an identifier\n\nThere are four different expression scope\n- Expression\n  A general scope that represents program / function body / static block. No errors\n  will be recorded nor thrown in this scope.\n\n- MaybeArrowParameterDeclaration\n  A scope that represents ambiguous arrow head e.g. `(x)`. Errors will be recorded\n  alongside parent scopes and thrown when `ExpressionScopeHandler#validateAsPattern`\n  is called.\n\n- MaybeAsyncArrowParameterDeclaration\n  A scope that represents ambiguous async arrow head e.g. `async(x)`. Errors will\n  be recorded alongside parent scopes and thrown when\n  `ExpressionScopeHandler#validateAsPattern` is called.\n\n- ParameterDeclaration\n  A scope that represents unambiguous function parameters `function(x)`. Errors\n  recorded in this scope will be thrown immediately. No errors will be recorded in\n  this scope.\n\n// @see {@link https://docs.google.com/document/d/1FAvEp9EUK-G8kHfDIEo_385Hs2SUBCYbJ5H-NnLvq8M|V8 Expression Scope design docs}\n */\n\nconst kExpression = 0,\n  kMaybeArrowParameterDeclaration = 1,\n  kMaybeAsyncArrowParameterDeclaration = 2,\n  kParameterDeclaration = 3;\n\ntype ExpressionScopeType = 0 | 1 | 2 | 3;\n\nclass ExpressionScope {\n  type: ExpressionScopeType;\n\n  constructor(type: ExpressionScopeType = kExpression) {\n    this.type = type;\n  }\n\n  canBeArrowParameterDeclaration() {\n    return (\n      this.type === kMaybeAsyncArrowParameterDeclaration ||\n      this.type === kMaybeArrowParameterDeclaration\n    );\n  }\n\n  isCertainlyParameterDeclaration() {\n    return this.type === kParameterDeclaration;\n  }\n}\n\ntype ArrowHeadParsingParameterInitializerError =\n  | typeof Errors.AwaitExpressionFormalParameter\n  | typeof Errors.YieldInParameter;\n\ntype ArrowHeadParsingDeclarationError =\n  | ArrowHeadParsingParameterInitializerError\n  | typeof Errors.InvalidParenthesizedAssignment\n  | typeof Errors.AwaitBindingIdentifier;\n\nclass ArrowHeadParsingScope extends ExpressionScope {\n  declarationErrors: Map<number, [ParseErrorConstructor<{||}>, Position]> =\n    new Map();\n  constructor(type: 1 | 2) {\n    super(type);\n  }\n  recordDeclarationError(\n    ParsingErrorClass: ParseErrorConstructor<{||}>,\n    { at }: { at: Position },\n  ) {\n    const index = at.index;\n\n    this.declarationErrors.set(index, [ParsingErrorClass, at]);\n  }\n  clearDeclarationError(index: number) {\n    this.declarationErrors.delete(index);\n  }\n  iterateErrors(\n    iterator: ([ArrowHeadParsingDeclarationError, Position]) => void,\n  ) {\n    this.declarationErrors.forEach(iterator);\n  }\n}\n\nexport default class ExpressionScopeHandler {\n  parser: Tokenizer;\n  stack: Array<ExpressionScope> = [new ExpressionScope()];\n\n  constructor(parser: Tokenizer) {\n    this.parser = parser;\n  }\n  enter(scope: ExpressionScope) {\n    this.stack.push(scope);\n  }\n\n  exit() {\n    this.stack.pop();\n  }\n\n  /**\n   * Record likely parameter initializer errors\n   *\n   * When current scope is a ParameterDeclaration, the error will be thrown immediately,\n   * otherwise it will be recorded to any ancestry MaybeArrowParameterDeclaration and\n   * MaybeAsyncArrowParameterDeclaration scope until an Expression scope is seen.\n   * @param {number} pos Error position\n   * @param {ErrorTemplate} template Error template\n   * @memberof ExpressionScopeHandler\n   */\n  recordParameterInitializerError(\n    toParseError: ArrowHeadParsingParameterInitializerError,\n    { at: node }: { at: Node },\n  ): void {\n    const origin = { at: node.loc.start };\n    const { stack } = this;\n    let i = stack.length - 1;\n    let scope: ExpressionScope = stack[i];\n    while (!scope.isCertainlyParameterDeclaration()) {\n      if (scope.canBeArrowParameterDeclaration()) {\n        /*:: invariant(scope instanceof ArrowHeadParsingScope) */\n        scope.recordDeclarationError(toParseError, origin);\n      } else {\n        /*:: invariant(scope.type == kExpression) */\n        // Type-Expression is the boundary where initializer error can populate to\n        return;\n      }\n      scope = stack[--i];\n    }\n    this.parser.raise(toParseError, origin);\n  }\n\n  /**\n   * Record errors that must be thrown if the current pattern ends up being an arrow\n   * function parameter. This is used to record parenthesized identifiers, and to record\n   * \"a as T\" and \"<T> a\" type assertions when parsing typescript.\n   *\n   * A parenthesized identifier (or type assertion) in LHS can be ambiguous because the assignment\n   * can be transformed to an assignable later, but not vice versa:\n   * For example, in `([(a) = []] = []) => {}`, we think `(a) = []` is an LHS in `[(a) = []]`,\n   * an LHS within `[(a) = []] = []`. However the LHS chain is then transformed by toAssignable,\n   * and we should throw assignment `(a)`, which is only valid in LHS. Hence we record the\n   * location of parenthesized `(a)` to current scope if it is one of MaybeArrowParameterDeclaration\n   * and MaybeAsyncArrowParameterDeclaration\n   *\n   * Unlike `recordParameterInitializerError`, we don't record to ancestry scope because we\n   * validate arrow head parsing scope before exit, and then the LHS will be unambiguous:\n   * For example, in `( x = ( [(a) = []] = [] ) ) => {}`, we should not record `(a)` in `( x = ... ) =>`\n   * arrow scope because when we finish parsing `( [(a) = []] = [] )`, it is an unambiguous assignment\n   * expression and can not be cast to pattern\n   * @param {ParseErrorConstructor<{||}>} error\n   * @param {Node} payload.at\n   * @returns {void}\n   * @memberof ExpressionScopeHandler\n   */\n  recordArrowParemeterBindingError(\n    error: ParseErrorConstructor<{||}>,\n    { at: node }: { at: Node },\n  ): void {\n    const { stack } = this;\n    const scope: ExpressionScope = stack[stack.length - 1];\n    const origin = { at: node.loc.start };\n    if (scope.isCertainlyParameterDeclaration()) {\n      this.parser.raise(error, origin);\n    } else if (scope.canBeArrowParameterDeclaration()) {\n      /*:: invariant(scope instanceof ArrowHeadParsingScope) */\n      scope.recordDeclarationError(error, origin);\n    } else {\n      return;\n    }\n  }\n\n  /**\n   * Record likely async arrow parameter errors\n   *\n   * Errors will be recorded to any ancestry MaybeAsyncArrowParameterDeclaration\n   * scope until an Expression scope is seen.\n   * @param {number} pos\n   * @param {ErrorTemplate} template\n   * @memberof ExpressionScopeHandler\n   */\n  recordAsyncArrowParametersError({ at }: { at: Position }): void {\n    const { stack } = this;\n    let i = stack.length - 1;\n    let scope: ExpressionScope = stack[i];\n    while (scope.canBeArrowParameterDeclaration()) {\n      if (scope.type === kMaybeAsyncArrowParameterDeclaration) {\n        /*:: invariant(scope instanceof ArrowHeadParsingScope) */\n        scope.recordDeclarationError(Errors.AwaitBindingIdentifier, { at });\n      }\n      scope = stack[--i];\n    }\n  }\n\n  validateAsPattern(): void {\n    const { stack } = this;\n    const currentScope = stack[stack.length - 1];\n    if (!currentScope.canBeArrowParameterDeclaration()) return;\n    /*:: invariant(currentScope instanceof ArrowHeadParsingScope) */\n    currentScope.iterateErrors(([toParseError, loc]) => {\n      this.parser.raise(toParseError, { at: loc });\n      // iterate from parent scope\n      let i = stack.length - 2;\n      let scope = stack[i];\n      while (scope.canBeArrowParameterDeclaration()) {\n        /*:: invariant(scope instanceof ArrowHeadParsingScope) */\n        scope.clearDeclarationError(loc.index);\n        scope = stack[--i];\n      }\n    });\n  }\n}\n\nexport function newParameterDeclarationScope() {\n  return new ExpressionScope(kParameterDeclaration);\n}\n\nexport function newArrowHeadScope() {\n  return new ArrowHeadParsingScope(kMaybeArrowParameterDeclaration);\n}\n\nexport function newAsyncArrowScope() {\n  return new ArrowHeadParsingScope(kMaybeAsyncArrowParameterDeclaration);\n}\n\nexport function newExpressionScope() {\n  return new ExpressionScope();\n}\n","// @flow\nexport const PARAM = 0b0000, // Initial Parameter flags\n  PARAM_YIELD = 0b0001, // track [Yield] production parameter\n  PARAM_AWAIT = 0b0010, // track [Await] production parameter\n  PARAM_RETURN = 0b0100, // track [Return] production parameter\n  PARAM_IN = 0b1000; // track [In] production parameter\n\n// ProductionParameterHandler is a stack fashioned production parameter tracker\n// https://tc39.es/ecma262/#sec-grammar-notation\n// The tracked parameters are defined above.\n//\n// Whenever [+Await]/[+Yield] appears in the right-hand sides of a production,\n// we must enter a new tracking stack. For example when parsing\n//\n// AsyncFunctionDeclaration [Yield, Await]:\n//   async [no LineTerminator here] function BindingIdentifier[?Yield, ?Await]\n//     ( FormalParameters[~Yield, +Await] ) { AsyncFunctionBody }\n//\n// we must follow such process:\n//\n// 1. parse async keyword\n// 2. parse function keyword\n// 3. parse bindingIdentifier <= inherit current parameters: [?Await]\n// 4. enter new stack with (PARAM_AWAIT)\n// 5. parse formal parameters <= must have [Await] parameter [+Await]\n// 6. parse function body\n// 7. exit current stack\n\nexport type ParamKind =\n  | typeof PARAM\n  | typeof PARAM_AWAIT\n  | typeof PARAM_IN\n  | typeof PARAM_RETURN\n  | typeof PARAM_YIELD;\n\nexport default class ProductionParameterHandler {\n  stacks: Array<ParamKind> = [];\n  enter(flags: ParamKind) {\n    this.stacks.push(flags);\n  }\n\n  exit() {\n    this.stacks.pop();\n  }\n\n  currentFlags(): ParamKind {\n    return this.stacks[this.stacks.length - 1];\n  }\n\n  get hasAwait(): boolean {\n    return (this.currentFlags() & PARAM_AWAIT) > 0;\n  }\n\n  get hasYield(): boolean {\n    return (this.currentFlags() & PARAM_YIELD) > 0;\n  }\n\n  get hasReturn(): boolean {\n    return (this.currentFlags() & PARAM_RETURN) > 0;\n  }\n\n  get hasIn(): boolean {\n    return (this.currentFlags() & PARAM_IN) > 0;\n  }\n}\n\nexport function functionFlags(\n  isAsync: boolean,\n  isGenerator: boolean,\n): ParamKind {\n  return (isAsync ? PARAM_AWAIT : 0) | (isGenerator ? PARAM_YIELD : 0);\n}\n","// @flow\n\nimport { type Position } from \"../util/location\";\nimport {\n  tokenIsLiteralPropertyName,\n  tt,\n  type TokenType,\n} from \"../tokenizer/types\";\nimport Tokenizer from \"../tokenizer\";\nimport State from \"../tokenizer/state\";\nimport type { Node } from \"../types\";\nimport { lineBreak, skipWhiteSpaceToLineBreak } from \"../util/whitespace\";\nimport { isIdentifierChar } from \"../util/identifier\";\nimport ClassScopeHandler from \"../util/class-scope\";\nimport ExpressionScopeHandler from \"../util/expression-scope\";\nimport { SCOPE_PROGRAM } from \"../util/scopeflags\";\nimport ProductionParameterHandler, {\n  PARAM_AWAIT,\n  PARAM,\n} from \"../util/production-parameter\";\nimport {\n  Errors,\n  type ParseError,\n  type ParseErrorConstructor,\n} from \"../parse-error\";\n/*::\nimport type ScopeHandler from \"../util/scope\";\n*/\n\ntype TryParse<Node, Error, Thrown, Aborted, FailState> = {\n  node: Node,\n  error: Error,\n  thrown: Thrown,\n  aborted: Aborted,\n  failState: FailState,\n};\n\n// ## Parser utilities\n\nexport default class UtilParser extends Tokenizer {\n  // Forward-declaration: defined in parser/index.js\n  /*::\n  +getScopeHandler: () => Class<ScopeHandler<*>>;\n  */\n\n  // TODO\n\n  addExtra(\n    node: Node,\n    key: string,\n    value: any,\n    enumerable: boolean = true,\n  ): void {\n    if (!node) return;\n\n    const extra = (node.extra = node.extra || {});\n    if (enumerable) {\n      extra[key] = value;\n    } else {\n      Object.defineProperty(extra, key, { enumerable, value });\n    }\n  }\n\n  // Tests whether parsed token is a contextual keyword.\n\n  isContextual(token: TokenType): boolean {\n    return this.state.type === token && !this.state.containsEsc;\n  }\n\n  isUnparsedContextual(nameStart: number, name: string): boolean {\n    const nameEnd = nameStart + name.length;\n    if (this.input.slice(nameStart, nameEnd) === name) {\n      const nextCh = this.input.charCodeAt(nameEnd);\n      return !(\n        isIdentifierChar(nextCh) ||\n        // check if `nextCh is between 0xd800 - 0xdbff,\n        // if `nextCh` is NaN, `NaN & 0xfc00` is 0, the function\n        // returns true\n        (nextCh & 0xfc00) === 0xd800\n      );\n    }\n    return false;\n  }\n\n  isLookaheadContextual(name: string): boolean {\n    const next = this.nextTokenStart();\n    return this.isUnparsedContextual(next, name);\n  }\n\n  // Consumes contextual keyword if possible.\n\n  eatContextual(token: TokenType): boolean {\n    if (this.isContextual(token)) {\n      this.next();\n      return true;\n    }\n    return false;\n  }\n\n  // Asserts that following token is given contextual keyword.\n\n  expectContextual(\n    token: TokenType,\n    toParseError?: ParseErrorConstructor<any>,\n  ): void {\n    if (!this.eatContextual(token)) {\n      if (toParseError != null) {\n        throw this.raise(toParseError, { at: this.state.startLoc });\n      }\n      throw this.unexpected(null, token);\n    }\n  }\n\n  // Test whether a semicolon can be inserted at the current position.\n\n  canInsertSemicolon(): boolean {\n    return (\n      this.match(tt.eof) ||\n      this.match(tt.braceR) ||\n      this.hasPrecedingLineBreak()\n    );\n  }\n\n  hasPrecedingLineBreak(): boolean {\n    return lineBreak.test(\n      this.input.slice(this.state.lastTokEndLoc.index, this.state.start),\n    );\n  }\n\n  hasFollowingLineBreak(): boolean {\n    skipWhiteSpaceToLineBreak.lastIndex = this.state.end;\n    return skipWhiteSpaceToLineBreak.test(this.input);\n  }\n\n  // TODO\n\n  isLineTerminator(): boolean {\n    return this.eat(tt.semi) || this.canInsertSemicolon();\n  }\n\n  // Consume a semicolon, or, failing that, see if we are allowed to\n  // pretend that there is a semicolon at this position.\n\n  semicolon(allowAsi: boolean = true): void {\n    if (allowAsi ? this.isLineTerminator() : this.eat(tt.semi)) return;\n    this.raise(Errors.MissingSemicolon, { at: this.state.lastTokEndLoc });\n  }\n\n  // Expect a token of a given type. If found, consume it, otherwise,\n  // raise an unexpected token error at given pos.\n\n  expect(type: TokenType, loc?: ?Position): void {\n    this.eat(type) || this.unexpected(loc, type);\n  }\n\n  // tryParse will clone parser state.\n  // It is expensive and should be used with cautions\n  tryParse<T: Node | $ReadOnlyArray<Node>>(\n    fn: (abort: (node?: T) => empty) => T,\n    oldState: State = this.state.clone(),\n  ):\n    | TryParse<T, null, false, false, null>\n    | TryParse<T | null, ParseError<any>, boolean, false, State>\n    | TryParse<T | null, null, false, true, State> {\n    const abortSignal: { node: T | null } = { node: null };\n    try {\n      const node = fn((node = null) => {\n        abortSignal.node = node;\n        throw abortSignal;\n      });\n      if (this.state.errors.length > oldState.errors.length) {\n        const failState = this.state;\n        this.state = oldState;\n        // tokensLength should be preserved during error recovery mode\n        // since the parser does not halt and will instead parse the\n        // remaining tokens\n        this.state.tokensLength = failState.tokensLength;\n        return {\n          node,\n          error: (failState.errors[oldState.errors.length]: ParseError<any>),\n          thrown: false,\n          aborted: false,\n          failState,\n        };\n      }\n\n      return {\n        node,\n        error: null,\n        thrown: false,\n        aborted: false,\n        failState: null,\n      };\n    } catch (error) {\n      const failState = this.state;\n      this.state = oldState;\n      if (error instanceof SyntaxError) {\n        return { node: null, error, thrown: true, aborted: false, failState };\n      }\n      if (error === abortSignal) {\n        return {\n          node: abortSignal.node,\n          error: null,\n          thrown: false,\n          aborted: true,\n          failState,\n        };\n      }\n\n      throw error;\n    }\n  }\n\n  checkExpressionErrors(\n    refExpressionErrors: ?ExpressionErrors,\n    andThrow: boolean,\n  ) {\n    if (!refExpressionErrors) return false;\n    const {\n      shorthandAssignLoc,\n      doubleProtoLoc,\n      privateKeyLoc,\n      optionalParametersLoc,\n    } = refExpressionErrors;\n\n    const hasErrors =\n      !!shorthandAssignLoc ||\n      !!doubleProtoLoc ||\n      !!optionalParametersLoc ||\n      !!privateKeyLoc;\n\n    if (!andThrow) {\n      return hasErrors;\n    }\n\n    if (shorthandAssignLoc != null) {\n      this.raise(Errors.InvalidCoverInitializedName, {\n        at: shorthandAssignLoc,\n      });\n    }\n\n    if (doubleProtoLoc != null) {\n      this.raise(Errors.DuplicateProto, { at: doubleProtoLoc });\n    }\n\n    if (privateKeyLoc != null) {\n      this.raise(Errors.UnexpectedPrivateField, { at: privateKeyLoc });\n    }\n\n    if (optionalParametersLoc != null) {\n      this.unexpected(optionalParametersLoc);\n    }\n  }\n\n  /**\n   * Test if current token is a literal property name\n   * https://tc39.es/ecma262/#prod-LiteralPropertyName\n   * LiteralPropertyName:\n   *   IdentifierName\n   *   StringLiteral\n   *   NumericLiteral\n   *   BigIntLiteral\n   */\n  isLiteralPropertyName(): boolean {\n    return tokenIsLiteralPropertyName(this.state.type);\n  }\n\n  /*\n   * Test if given node is a PrivateName\n   * will be overridden in ESTree plugin\n   */\n  isPrivateName(node: Node): boolean {\n    return node.type === \"PrivateName\";\n  }\n\n  /*\n   * Return the string value of a given private name\n   * WITHOUT `#`\n   * @see {@link https://tc39.es/ecma262/#sec-static-semantics-stringvalue}\n   */\n  getPrivateNameSV(node: Node): string {\n    return node.id.name;\n  }\n\n  /*\n   * Return whether the given node is a member/optional chain that\n   * contains a private name as its property\n   * It is overridden in ESTree plugin\n   */\n  hasPropertyAsPrivateName(node: Node): boolean {\n    return (\n      (node.type === \"MemberExpression\" ||\n        node.type === \"OptionalMemberExpression\") &&\n      this.isPrivateName(node.property)\n    );\n  }\n\n  isOptionalChain(node: Node): boolean {\n    return (\n      node.type === \"OptionalMemberExpression\" ||\n      node.type === \"OptionalCallExpression\"\n    );\n  }\n\n  isObjectProperty(node: Node): boolean {\n    return node.type === \"ObjectProperty\";\n  }\n\n  isObjectMethod(node: Node): boolean {\n    return node.type === \"ObjectMethod\";\n  }\n\n  initializeScopes(\n    inModule: boolean = this.options.sourceType === \"module\",\n  ): () => void {\n    // Initialize state\n    const oldLabels = this.state.labels;\n    this.state.labels = [];\n\n    const oldExportedIdentifiers = this.exportedIdentifiers;\n    this.exportedIdentifiers = new Set();\n\n    // initialize scopes\n    const oldInModule = this.inModule;\n    this.inModule = inModule;\n\n    const oldScope = this.scope;\n    const ScopeHandler = this.getScopeHandler();\n    this.scope = new ScopeHandler(this, inModule);\n\n    const oldProdParam = this.prodParam;\n    this.prodParam = new ProductionParameterHandler();\n\n    const oldClassScope = this.classScope;\n    this.classScope = new ClassScopeHandler(this);\n\n    const oldExpressionScope = this.expressionScope;\n    this.expressionScope = new ExpressionScopeHandler(this);\n\n    return () => {\n      // Revert state\n      this.state.labels = oldLabels;\n      this.exportedIdentifiers = oldExportedIdentifiers;\n\n      // Revert scopes\n      this.inModule = oldInModule;\n      this.scope = oldScope;\n      this.prodParam = oldProdParam;\n      this.classScope = oldClassScope;\n      this.expressionScope = oldExpressionScope;\n    };\n  }\n\n  enterInitialScopes() {\n    let paramFlags = PARAM;\n    if (this.inModule) {\n      paramFlags |= PARAM_AWAIT;\n    }\n    this.scope.enter(SCOPE_PROGRAM);\n    this.prodParam.enter(paramFlags);\n  }\n\n  checkDestructuringPrivate(refExpressionErrors: ExpressionErrors) {\n    const { privateKeyLoc } = refExpressionErrors;\n    if (privateKeyLoc !== null) {\n      this.expectPlugin(\"destructuringPrivate\", privateKeyLoc);\n    }\n  }\n}\n\n/**\n * The ExpressionErrors is a context struct used to track ambiguous patterns\n * When we are sure the parsed pattern is a RHS, which means it is not a pattern,\n * we will throw on this position on invalid assign syntax, otherwise it will be reset to -1\n *\n * Types of ExpressionErrors:\n *\n * - **shorthandAssignLoc**: track initializer `=` position\n * - **doubleProtoLoc**: track the duplicate `__proto__` key position\n * - **privateKey**: track private key `#p` position\n * - **optionalParametersLoc**: track the optional paramter (`?`).\n * It's only used by typescript and flow plugins\n */\nexport class ExpressionErrors {\n  shorthandAssignLoc: ?Position = null;\n  doubleProtoLoc: ?Position = null;\n  privateKeyLoc: ?Position = null;\n  optionalParametersLoc: ?Position = null;\n}\n","// @flow\n\nimport type Parser from \"./index\";\nimport UtilParser from \"./util\";\nimport { SourceLocation, type Position } from \"../util/location\";\nimport type { Comment, Node as NodeType, NodeBase } from \"../types\";\n\n// Start an AST node, attaching a start offset.\n\nclass Node implements NodeBase {\n  constructor(parser: Parser, pos: number, loc: Position) {\n    this.start = pos;\n    this.end = 0;\n    this.loc = new SourceLocation(loc);\n    if (parser?.options.ranges) this.range = [pos, 0];\n    if (parser?.filename) this.loc.filename = parser.filename;\n  }\n\n  type: string = \"\";\n  declare start: number;\n  declare end: number;\n  declare loc: SourceLocation;\n  declare range: [number, number];\n  declare leadingComments: Array<Comment>;\n  declare trailingComments: Array<Comment>;\n  declare innerComments: Array<Comment>;\n  declare extra: { [key: string]: any };\n}\nconst NodePrototype = Node.prototype;\n\nif (!process.env.BABEL_8_BREAKING) {\n  // $FlowIgnore\n  NodePrototype.__clone = function (): Node {\n    // $FlowIgnore\n    const newNode: any = new Node();\n    const keys = Object.keys(this);\n    for (let i = 0, length = keys.length; i < length; i++) {\n      const key = keys[i];\n      // Do not clone comments that are already attached to the node\n      if (\n        key !== \"leadingComments\" &&\n        key !== \"trailingComments\" &&\n        key !== \"innerComments\"\n      ) {\n        newNode[key] = this[key];\n      }\n    }\n\n    return newNode;\n  };\n}\n\nfunction clonePlaceholder(node: any): any {\n  return cloneIdentifier(node);\n}\n\nexport function cloneIdentifier(node: any): any {\n  // We don't need to clone `typeAnnotations` and `optional`: because\n  // cloneIdentifier is only used in object shorthand and named import/export.\n  // Neither of them allow type annotations after the identifier or optional identifier\n  const { type, start, end, loc, range, extra, name } = node;\n  const cloned = Object.create(NodePrototype);\n  cloned.type = type;\n  cloned.start = start;\n  cloned.end = end;\n  cloned.loc = loc;\n  cloned.range = range;\n  cloned.extra = extra;\n  cloned.name = name;\n  if (type === \"Placeholder\") {\n    cloned.expectedNode = node.expectedNode;\n  }\n  return cloned;\n}\n\nexport function cloneStringLiteral(node: any): any {\n  const { type, start, end, loc, range, extra } = node;\n  if (type === \"Placeholder\") {\n    return clonePlaceholder(node);\n  }\n  const cloned = Object.create(NodePrototype);\n  cloned.type = type;\n  cloned.start = start;\n  cloned.end = end;\n  cloned.loc = loc;\n  cloned.range = range;\n  if (node.raw !== undefined) {\n    // estree set node.raw instead of node.extra\n    cloned.raw = node.raw;\n  } else {\n    cloned.extra = extra;\n  }\n  cloned.value = node.value;\n  return cloned;\n}\n\nexport class NodeUtils extends UtilParser {\n  startNode<T: NodeType>(): T {\n    // $FlowIgnore\n    return new Node(this, this.state.start, this.state.startLoc);\n  }\n\n  startNodeAt<T: NodeType>(pos: number, loc: Position): T {\n    // $FlowIgnore\n    return new Node(this, pos, loc);\n  }\n\n  /** Start a new node with a previous node's location. */\n  startNodeAtNode<T: NodeType>(type: NodeType): T {\n    return this.startNodeAt(type.start, type.loc.start);\n  }\n\n  // Finish an AST node, adding `type` and `end` properties.\n\n  finishNode<T: NodeType>(node: T, type: string): T {\n    return this.finishNodeAt(node, type, this.state.lastTokEndLoc);\n  }\n\n  // Finish node at given position\n\n  finishNodeAt<T: NodeType>(node: T, type: string, endLoc: Position): T {\n    if (process.env.NODE_ENV !== \"production\" && node.end > 0) {\n      throw new Error(\n        \"Do not call finishNode*() twice on the same node.\" +\n          \" Instead use resetEndLocation() or change type directly.\",\n      );\n    }\n    node.type = type;\n    node.end = endLoc.index;\n    node.loc.end = endLoc;\n    if (this.options.ranges) node.range[1] = endLoc.index;\n    if (this.options.attachComment) this.processComment(node);\n    return node;\n  }\n\n  resetStartLocation(node: NodeBase, start: number, startLoc: Position): void {\n    node.start = start;\n    node.loc.start = startLoc;\n    if (this.options.ranges) node.range[0] = start;\n  }\n\n  resetEndLocation(\n    node: NodeBase,\n    endLoc?: Position = this.state.lastTokEndLoc,\n  ): void {\n    node.end = endLoc.index;\n    node.loc.end = endLoc;\n    if (this.options.ranges) node.range[1] = endLoc.index;\n  }\n\n  /**\n   * Reset the start location of node to the start location of locationNode\n   */\n  resetStartLocationFromNode(node: NodeBase, locationNode: NodeBase): void {\n    this.resetStartLocation(node, locationNode.start, locationNode.loc.start);\n  }\n}\n","// @flow\n\n/*:: declare var invariant; */\n\nimport type Parser from \"../../parser\";\nimport {\n  tokenIsIdentifier,\n  tokenIsKeyword,\n  tokenIsKeywordOrIdentifier,\n  tokenIsLiteralPropertyName,\n  tokenLabelName,\n  tt,\n  type TokenType,\n  tokenIsFlowInterfaceOrTypeOrOpaque,\n} from \"../../tokenizer/types\";\nimport * as N from \"../../types\";\nimport { Position } from \"../../util/location\";\nimport { types as tc } from \"../../tokenizer/context\";\nimport * as charCodes from \"charcodes\";\nimport { isIteratorStart } from \"../../util/identifier\";\nimport FlowScopeHandler from \"./scope\";\nimport {\n  BIND_LEXICAL,\n  BIND_VAR,\n  BIND_FUNCTION,\n  BIND_FLOW_DECLARE_FN,\n  SCOPE_ARROW,\n  SCOPE_FUNCTION,\n  SCOPE_OTHER,\n} from \"../../util/scopeflags\";\nimport type { ExpressionErrors } from \"../../parser/util\";\nimport { Errors, ParseErrorEnum } from \"../../parse-error\";\nimport { cloneIdentifier } from \"../../parser/node\";\n\nconst reservedTypes = new Set([\n  \"_\",\n  \"any\",\n  \"bool\",\n  \"boolean\",\n  \"empty\",\n  \"extends\",\n  \"false\",\n  \"interface\",\n  \"mixed\",\n  \"null\",\n  \"number\",\n  \"static\",\n  \"string\",\n  \"true\",\n  \"typeof\",\n  \"void\",\n]);\n\n/* eslint sort-keys: \"error\" */\n// The Errors key follows https://github.com/facebook/flow/blob/master/src/parser/parse_error.ml unless it does not exist\nconst FlowErrors = ParseErrorEnum`flow`(_ => ({\n  AmbiguousConditionalArrow: _(\n    \"Ambiguous expression: wrap the arrow functions in parentheses to disambiguate.\",\n  ),\n  AmbiguousDeclareModuleKind: _(\n    \"Found both `declare module.exports` and `declare export` in the same module. Modules can only have 1 since they are either an ES module or they are a CommonJS module.\",\n  ),\n  // TODO: When we get proper string enums in typescript make this ReservedType.\n  // Not really worth it to do the whole $Values dance with reservedTypes set.\n  AssignReservedType: _<{| reservedType: string |}>(\n    ({ reservedType }) => `Cannot overwrite reserved type ${reservedType}.`,\n  ),\n  DeclareClassElement: _(\n    \"The `declare` modifier can only appear on class fields.\",\n  ),\n  DeclareClassFieldInitializer: _(\n    \"Initializers are not allowed in fields with the `declare` modifier.\",\n  ),\n  DuplicateDeclareModuleExports: _(\n    \"Duplicate `declare module.exports` statement.\",\n  ),\n  EnumBooleanMemberNotInitialized: _<{|\n    memberName: string,\n    enumName: string,\n  |}>(\n    ({ memberName, enumName }) =>\n      `Boolean enum members need to be initialized. Use either \\`${memberName} = true,\\` or \\`${memberName} = false,\\` in enum \\`${enumName}\\`.`,\n  ),\n  EnumDuplicateMemberName: _<{| memberName: string, enumName: string |}>(\n    ({ memberName, enumName }) =>\n      `Enum member names need to be unique, but the name \\`${memberName}\\` has already been used before in enum \\`${enumName}\\`.`,\n  ),\n  EnumInconsistentMemberValues: _<{| enumName: string |}>(\n    ({ enumName }) =>\n      `Enum \\`${enumName}\\` has inconsistent member initializers. Either use no initializers, or consistently use literals (either booleans, numbers, or strings) for all member initializers.`,\n  ),\n  EnumInvalidExplicitType: _<{| invalidEnumType: string, enumName: string |}>(\n    ({ invalidEnumType, enumName }) =>\n      `Enum type \\`${invalidEnumType}\\` is not valid. Use one of \\`boolean\\`, \\`number\\`, \\`string\\`, or \\`symbol\\` in enum \\`${enumName}\\`.`,\n  ),\n  EnumInvalidExplicitTypeUnknownSupplied: _<{| enumName: string |}>(\n    ({ enumName }) =>\n      `Supplied enum type is not valid. Use one of \\`boolean\\`, \\`number\\`, \\`string\\`, or \\`symbol\\` in enum \\`${enumName}\\`.`,\n  ),\n\n  // TODO: When moving to typescript, we should either have each of the\n  // following errors only accept the specific strings they want:\n  //\n  // ...PrimaryType: explicitType: \"string\" | \"number\" | \"boolean\"\n  // ...SymbolType: explicitType: \"symbol\"\n  // ...UnknownType: explicitType: null\n  //\n  // Or, alternatively, merge these three errors together into one\n  // `EnumInvalidMemberInitializer` error that can accept `EnumExplicitType`\n  // without alteration, and then just have its message change based on the\n  // explicitType.\n  EnumInvalidMemberInitializerPrimaryType: _<{|\n    enumName: string,\n    memberName: string,\n    explicitType: EnumExplicitType,\n  |}>(\n    ({ enumName, memberName, explicitType }) =>\n      // $FlowIgnore (coercing null which never actually happens)\n      `Enum \\`${enumName}\\` has type \\`${explicitType}\\`, so the initializer of \\`${memberName}\\` needs to be a ${explicitType} literal.`,\n  ),\n  EnumInvalidMemberInitializerSymbolType: _<{|\n    enumName: string,\n    memberName: string,\n    explicitType: EnumExplicitType,\n  |}>(\n    ({ enumName, memberName }) =>\n      `Symbol enum members cannot be initialized. Use \\`${memberName},\\` in enum \\`${enumName}\\`.`,\n  ),\n  EnumInvalidMemberInitializerUnknownType: _<{|\n    enumName: string,\n    memberName: string,\n    explicitType: EnumExplicitType,\n  |}>(\n    ({ enumName, memberName }) =>\n      `The enum member initializer for \\`${memberName}\\` needs to be a literal (either a boolean, number, or string) in enum \\`${enumName}\\`.`,\n  ),\n  EnumInvalidMemberName: _<{|\n    enumName: string,\n    memberName: string,\n    suggestion: string,\n  |}>(\n    ({ enumName, memberName, suggestion }) =>\n      `Enum member names cannot start with lowercase 'a' through 'z'. Instead of using \\`${memberName}\\`, consider using \\`${suggestion}\\`, in enum \\`${enumName}\\`.`,\n  ),\n  EnumNumberMemberNotInitialized: _<{|\n    enumName: string,\n    memberName: string,\n  |}>(\n    ({ enumName, memberName }) =>\n      `Number enum members need to be initialized, e.g. \\`${memberName} = 1\\` in enum \\`${enumName}\\`.`,\n  ),\n  EnumStringMemberInconsistentlyInitailized: _<{| enumName: string |}>(\n    ({ enumName }) =>\n      `String enum members need to consistently either all use initializers, or use no initializers, in enum \\`${enumName}\\`.`,\n  ),\n  GetterMayNotHaveThisParam: _(\"A getter cannot have a `this` parameter.\"),\n  ImportTypeShorthandOnlyInPureImport: _(\n    \"The `type` and `typeof` keywords on named imports can only be used on regular `import` statements. It cannot be used with `import type` or `import typeof` statements.\",\n  ),\n  InexactInsideExact: _(\n    \"Explicit inexact syntax cannot appear inside an explicit exact object type.\",\n  ),\n  InexactInsideNonObject: _(\n    \"Explicit inexact syntax cannot appear in class or interface definitions.\",\n  ),\n  InexactVariance: _(\"Explicit inexact syntax cannot have variance.\"),\n  InvalidNonTypeImportInDeclareModule: _(\n    \"Imports within a `declare module` body must always be `import type` or `import typeof`.\",\n  ),\n  MissingTypeParamDefault: _(\n    \"Type parameter declaration needs a default, since a preceding type parameter declaration has a default.\",\n  ),\n  NestedDeclareModule: _(\n    \"`declare module` cannot be used inside another `declare module`.\",\n  ),\n  NestedFlowComment: _(\n    \"Cannot have a flow comment inside another flow comment.\",\n  ),\n  PatternIsOptional: _(\n    \"A binding pattern parameter cannot be optional in an implementation signature.\",\n    // For consistency in TypeScript and Flow error codes\n    !process.env.BABEL_8_BREAKING\n      ? { reasonCode: \"OptionalBindingPattern\" }\n      : {},\n  ),\n  SetterMayNotHaveThisParam: _(\"A setter cannot have a `this` parameter.\"),\n  SpreadVariance: _(\"Spread properties cannot have variance.\"),\n  ThisParamAnnotationRequired: _(\n    \"A type annotation is required for the `this` parameter.\",\n  ),\n  ThisParamBannedInConstructor: _(\n    \"Constructors cannot have a `this` parameter; constructors don't bind `this` like other functions.\",\n  ),\n  ThisParamMayNotBeOptional: _(\"The `this` parameter cannot be optional.\"),\n  ThisParamMustBeFirst: _(\n    \"The `this` parameter must be the first function parameter.\",\n  ),\n  ThisParamNoDefault: _(\"The `this` parameter may not have a default value.\"),\n  TypeBeforeInitializer: _(\n    \"Type annotations must come before default assignments, e.g. instead of `age = 25: number` use `age: number = 25`.\",\n  ),\n  TypeCastInPattern: _(\n    \"The type cast expression is expected to be wrapped with parenthesis.\",\n  ),\n  UnexpectedExplicitInexactInObject: _(\n    \"Explicit inexact syntax must appear at the end of an inexact object.\",\n  ),\n  UnexpectedReservedType: _<{| reservedType: string |}>(\n    ({ reservedType }) => `Unexpected reserved type ${reservedType}.`,\n  ),\n  UnexpectedReservedUnderscore: _(\n    \"`_` is only allowed as a type argument to call or new.\",\n  ),\n  UnexpectedSpaceBetweenModuloChecks: _(\n    \"Spaces between `%` and `checks` are not allowed here.\",\n  ),\n  UnexpectedSpreadType: _(\n    \"Spread operator cannot appear in class or interface definitions.\",\n  ),\n  UnexpectedSubtractionOperand: _(\n    'Unexpected token, expected \"number\" or \"bigint\".',\n  ),\n  UnexpectedTokenAfterTypeParameter: _(\n    \"Expected an arrow function after this type parameter declaration.\",\n  ),\n  UnexpectedTypeParameterBeforeAsyncArrowFunction: _(\n    \"Type parameters must come after the async keyword, e.g. instead of `<T> async () => {}`, use `async <T>() => {}`.\",\n  ),\n  UnsupportedDeclareExportKind: _<{|\n    unsupportedExportKind: string,\n    suggestion: string,\n  |}>(\n    ({ unsupportedExportKind, suggestion }) =>\n      `\\`declare export ${unsupportedExportKind}\\` is not supported. Use \\`${suggestion}\\` instead.`,\n  ),\n  UnsupportedStatementInDeclareModule: _(\n    \"Only declares and type imports are allowed inside declare module.\",\n  ),\n  UnterminatedFlowComment: _(\"Unterminated flow-comment.\"),\n}));\n/* eslint-disable sort-keys */\n\nfunction isEsModuleType(bodyElement: N.Node): boolean {\n  return (\n    bodyElement.type === \"DeclareExportAllDeclaration\" ||\n    (bodyElement.type === \"DeclareExportDeclaration\" &&\n      (!bodyElement.declaration ||\n        (bodyElement.declaration.type !== \"TypeAlias\" &&\n          bodyElement.declaration.type !== \"InterfaceDeclaration\")))\n  );\n}\n\nfunction hasTypeImportKind(node: N.Node): boolean {\n  return node.importKind === \"type\" || node.importKind === \"typeof\";\n}\n\nfunction isMaybeDefaultImport(type: TokenType): boolean {\n  return tokenIsKeywordOrIdentifier(type) && type !== tt._from;\n}\n\nconst exportSuggestions = {\n  const: \"declare export var\",\n  let: \"declare export var\",\n  type: \"export type\",\n  interface: \"export interface\",\n};\n\n// Like Array#filter, but returns a tuple [ acceptedElements, discardedElements ]\nfunction partition<T>(\n  list: T[],\n  test: (T, number, T[]) => ?boolean,\n): [T[], T[]] {\n  const list1 = [];\n  const list2 = [];\n  for (let i = 0; i < list.length; i++) {\n    (test(list[i], i, list) ? list1 : list2).push(list[i]);\n  }\n  return [list1, list2];\n}\n\nconst FLOW_PRAGMA_REGEX = /\\*?\\s*@((?:no)?flow)\\b/;\n\n// Flow enums types\ntype EnumExplicitType = null | \"boolean\" | \"number\" | \"string\" | \"symbol\";\ntype EnumContext = {|\n  enumName: string,\n  explicitType: EnumExplicitType,\n  memberName: string,\n|};\ntype EnumMemberInit =\n  | {| type: \"number\", loc: Position, value: N.Node |}\n  | {| type: \"string\", loc: Position, value: N.Node |}\n  | {| type: \"boolean\", loc: Position, value: N.Node |}\n  | {| type: \"invalid\", loc: Position |}\n  | {| type: \"none\", loc: Position |};\n\nexport default (superClass: Class<Parser>): Class<Parser> =>\n  class extends superClass {\n    // The value of the @flow/@noflow pragma. Initially undefined, transitions\n    // to \"@flow\" or \"@noflow\" if we see a pragma. Transitions to null if we are\n    // past the initial comment.\n    flowPragma: void | null | \"flow\" | \"noflow\" = undefined;\n\n    getScopeHandler(): Class<FlowScopeHandler> {\n      return FlowScopeHandler;\n    }\n\n    shouldParseTypes(): boolean {\n      return this.getPluginOption(\"flow\", \"all\") || this.flowPragma === \"flow\";\n    }\n\n    shouldParseEnums(): boolean {\n      return !!this.getPluginOption(\"flow\", \"enums\");\n    }\n\n    finishToken(type: TokenType, val: any): void {\n      if (\n        type !== tt.string &&\n        type !== tt.semi &&\n        type !== tt.interpreterDirective\n      ) {\n        if (this.flowPragma === undefined) {\n          this.flowPragma = null;\n        }\n      }\n      return super.finishToken(type, val);\n    }\n\n    addComment(comment: N.Comment): void {\n      if (this.flowPragma === undefined) {\n        // Try to parse a flow pragma.\n        const matches = FLOW_PRAGMA_REGEX.exec(comment.value);\n        if (!matches) {\n          // do nothing\n        } else if (matches[1] === \"flow\") {\n          this.flowPragma = \"flow\";\n        } else if (matches[1] === \"noflow\") {\n          this.flowPragma = \"noflow\";\n        } else {\n          throw new Error(\"Unexpected flow pragma\");\n        }\n      }\n      return super.addComment(comment);\n    }\n\n    flowParseTypeInitialiser(tok?: TokenType): N.FlowType {\n      const oldInType = this.state.inType;\n      this.state.inType = true;\n      this.expect(tok || tt.colon);\n\n      const type = this.flowParseType();\n      this.state.inType = oldInType;\n      return type;\n    }\n\n    flowParsePredicate(): N.FlowPredicate {\n      const node = this.startNode();\n      const moduloLoc = this.state.startLoc;\n      this.next(); // eat `%`\n      this.expectContextual(tt._checks);\n      // Force '%' and 'checks' to be adjacent\n      if (this.state.lastTokStart > moduloLoc.index + 1) {\n        this.raise(FlowErrors.UnexpectedSpaceBetweenModuloChecks, {\n          at: moduloLoc,\n        });\n      }\n      if (this.eat(tt.parenL)) {\n        node.value = this.parseExpression();\n        this.expect(tt.parenR);\n        return this.finishNode(node, \"DeclaredPredicate\");\n      } else {\n        return this.finishNode(node, \"InferredPredicate\");\n      }\n    }\n\n    flowParseTypeAndPredicateInitialiser(): [?N.FlowType, ?N.FlowPredicate] {\n      const oldInType = this.state.inType;\n      this.state.inType = true;\n      this.expect(tt.colon);\n      let type = null;\n      let predicate = null;\n      if (this.match(tt.modulo)) {\n        this.state.inType = oldInType;\n        predicate = this.flowParsePredicate();\n      } else {\n        type = this.flowParseType();\n        this.state.inType = oldInType;\n        if (this.match(tt.modulo)) {\n          predicate = this.flowParsePredicate();\n        }\n      }\n      return [type, predicate];\n    }\n\n    flowParseDeclareClass(node: N.FlowDeclareClass): N.FlowDeclareClass {\n      this.next();\n      this.flowParseInterfaceish(node, /*isClass*/ true);\n      return this.finishNode(node, \"DeclareClass\");\n    }\n\n    flowParseDeclareFunction(\n      node: N.FlowDeclareFunction,\n    ): N.FlowDeclareFunction {\n      this.next();\n\n      const id = (node.id = this.parseIdentifier());\n\n      const typeNode = this.startNode();\n      const typeContainer = this.startNode();\n\n      if (this.match(tt.lt)) {\n        typeNode.typeParameters = this.flowParseTypeParameterDeclaration();\n      } else {\n        typeNode.typeParameters = null;\n      }\n\n      this.expect(tt.parenL);\n      const tmp = this.flowParseFunctionTypeParams();\n      typeNode.params = tmp.params;\n      typeNode.rest = tmp.rest;\n      typeNode.this = tmp._this;\n      this.expect(tt.parenR);\n\n      [\n        // $FlowFixMe (destructuring not supported yet)\n        typeNode.returnType,\n        // $FlowFixMe (destructuring not supported yet)\n        node.predicate,\n      ] = this.flowParseTypeAndPredicateInitialiser();\n\n      typeContainer.typeAnnotation = this.finishNode(\n        typeNode,\n        \"FunctionTypeAnnotation\",\n      );\n\n      id.typeAnnotation = this.finishNode(typeContainer, \"TypeAnnotation\");\n\n      this.resetEndLocation(id);\n      this.semicolon();\n\n      this.scope.declareName(\n        node.id.name,\n        BIND_FLOW_DECLARE_FN,\n        node.id.loc.start,\n      );\n\n      return this.finishNode(node, \"DeclareFunction\");\n    }\n\n    flowParseDeclare(\n      node: N.FlowDeclare,\n      insideModule?: boolean,\n    ): N.FlowDeclare {\n      if (this.match(tt._class)) {\n        return this.flowParseDeclareClass(node);\n      } else if (this.match(tt._function)) {\n        return this.flowParseDeclareFunction(node);\n      } else if (this.match(tt._var)) {\n        return this.flowParseDeclareVariable(node);\n      } else if (this.eatContextual(tt._module)) {\n        if (this.match(tt.dot)) {\n          return this.flowParseDeclareModuleExports(node);\n        } else {\n          if (insideModule) {\n            this.raise(FlowErrors.NestedDeclareModule, {\n              at: this.state.lastTokStartLoc,\n            });\n          }\n          return this.flowParseDeclareModule(node);\n        }\n      } else if (this.isContextual(tt._type)) {\n        return this.flowParseDeclareTypeAlias(node);\n      } else if (this.isContextual(tt._opaque)) {\n        return this.flowParseDeclareOpaqueType(node);\n      } else if (this.isContextual(tt._interface)) {\n        return this.flowParseDeclareInterface(node);\n      } else if (this.match(tt._export)) {\n        return this.flowParseDeclareExportDeclaration(node, insideModule);\n      } else {\n        throw this.unexpected();\n      }\n    }\n\n    flowParseDeclareVariable(\n      node: N.FlowDeclareVariable,\n    ): N.FlowDeclareVariable {\n      this.next();\n      node.id = this.flowParseTypeAnnotatableIdentifier(\n        /*allowPrimitiveOverride*/ true,\n      );\n      this.scope.declareName(node.id.name, BIND_VAR, node.id.loc.start);\n      this.semicolon();\n      return this.finishNode(node, \"DeclareVariable\");\n    }\n\n    flowParseDeclareModule(node: N.FlowDeclareModule): N.FlowDeclareModule {\n      this.scope.enter(SCOPE_OTHER);\n\n      if (this.match(tt.string)) {\n        node.id = this.parseExprAtom();\n      } else {\n        node.id = this.parseIdentifier();\n      }\n\n      const bodyNode = (node.body = this.startNode());\n      const body = (bodyNode.body = []);\n      this.expect(tt.braceL);\n      while (!this.match(tt.braceR)) {\n        let bodyNode = this.startNode();\n\n        if (this.match(tt._import)) {\n          this.next();\n          if (!this.isContextual(tt._type) && !this.match(tt._typeof)) {\n            this.raise(FlowErrors.InvalidNonTypeImportInDeclareModule, {\n              at: this.state.lastTokStartLoc,\n            });\n          }\n          this.parseImport(bodyNode);\n        } else {\n          this.expectContextual(\n            tt._declare,\n            FlowErrors.UnsupportedStatementInDeclareModule,\n          );\n\n          bodyNode = this.flowParseDeclare(bodyNode, true);\n        }\n\n        body.push(bodyNode);\n      }\n\n      this.scope.exit();\n\n      this.expect(tt.braceR);\n\n      this.finishNode(bodyNode, \"BlockStatement\");\n\n      let kind = null;\n      let hasModuleExport = false;\n      body.forEach(bodyElement => {\n        if (isEsModuleType(bodyElement)) {\n          if (kind === \"CommonJS\") {\n            this.raise(FlowErrors.AmbiguousDeclareModuleKind, {\n              at: bodyElement,\n            });\n          }\n          kind = \"ES\";\n        } else if (bodyElement.type === \"DeclareModuleExports\") {\n          if (hasModuleExport) {\n            this.raise(FlowErrors.DuplicateDeclareModuleExports, {\n              at: bodyElement,\n            });\n          }\n          if (kind === \"ES\") {\n            this.raise(FlowErrors.AmbiguousDeclareModuleKind, {\n              at: bodyElement,\n            });\n          }\n          kind = \"CommonJS\";\n          hasModuleExport = true;\n        }\n      });\n\n      node.kind = kind || \"CommonJS\";\n      return this.finishNode(node, \"DeclareModule\");\n    }\n\n    flowParseDeclareExportDeclaration(\n      node: N.FlowDeclareExportDeclaration,\n      insideModule: ?boolean,\n    ): N.FlowDeclareExportDeclaration {\n      this.expect(tt._export);\n\n      if (this.eat(tt._default)) {\n        if (this.match(tt._function) || this.match(tt._class)) {\n          // declare export default class ...\n          // declare export default function ...\n          node.declaration = this.flowParseDeclare(this.startNode());\n        } else {\n          // declare export default [type];\n          node.declaration = this.flowParseType();\n          this.semicolon();\n        }\n        node.default = true;\n\n        return this.finishNode(node, \"DeclareExportDeclaration\");\n      } else {\n        if (\n          this.match(tt._const) ||\n          this.isLet() ||\n          ((this.isContextual(tt._type) || this.isContextual(tt._interface)) &&\n            !insideModule)\n        ) {\n          const label = this.state.value;\n          throw this.raise(FlowErrors.UnsupportedDeclareExportKind, {\n            at: this.state.startLoc,\n            unsupportedExportKind: label,\n            suggestion: exportSuggestions[label],\n          });\n        }\n\n        if (\n          this.match(tt._var) || // declare export var ...\n          this.match(tt._function) || // declare export function ...\n          this.match(tt._class) || // declare export class ...\n          this.isContextual(tt._opaque) // declare export opaque ..\n        ) {\n          node.declaration = this.flowParseDeclare(this.startNode());\n          node.default = false;\n\n          return this.finishNode(node, \"DeclareExportDeclaration\");\n        } else if (\n          this.match(tt.star) || // declare export * from ''\n          this.match(tt.braceL) || // declare export {} ...\n          this.isContextual(tt._interface) || // declare export interface ...\n          this.isContextual(tt._type) || // declare export type ...\n          this.isContextual(tt._opaque) // declare export opaque type ...\n        ) {\n          node = this.parseExport(node);\n          if (node.type === \"ExportNamedDeclaration\") {\n            // flow does not support the ExportNamedDeclaration\n            // $FlowIgnore\n            node.type = \"ExportDeclaration\";\n            // $FlowFixMe\n            node.default = false;\n            delete node.exportKind;\n          }\n\n          // $FlowIgnore\n          node.type = \"Declare\" + node.type;\n\n          return node;\n        }\n      }\n\n      throw this.unexpected();\n    }\n\n    flowParseDeclareModuleExports(\n      node: N.FlowDeclareModuleExports,\n    ): N.FlowDeclareModuleExports {\n      this.next();\n      this.expectContextual(tt._exports);\n      node.typeAnnotation = this.flowParseTypeAnnotation();\n      this.semicolon();\n\n      return this.finishNode(node, \"DeclareModuleExports\");\n    }\n\n    flowParseDeclareTypeAlias(\n      node: N.FlowDeclareTypeAlias,\n    ): N.FlowDeclareTypeAlias {\n      this.next();\n      this.flowParseTypeAlias(node);\n      // Don't do finishNode as we don't want to process comments twice\n      node.type = \"DeclareTypeAlias\";\n      return node;\n    }\n\n    flowParseDeclareOpaqueType(\n      node: N.FlowDeclareOpaqueType,\n    ): N.FlowDeclareOpaqueType {\n      this.next();\n      this.flowParseOpaqueType(node, true);\n      // Don't do finishNode as we don't want to process comments twice\n      node.type = \"DeclareOpaqueType\";\n      return node;\n    }\n\n    flowParseDeclareInterface(\n      node: N.FlowDeclareInterface,\n    ): N.FlowDeclareInterface {\n      this.next();\n      this.flowParseInterfaceish(node);\n      return this.finishNode(node, \"DeclareInterface\");\n    }\n\n    // Interfaces\n\n    flowParseInterfaceish(\n      node: N.FlowDeclare,\n      isClass?: boolean = false,\n    ): void {\n      node.id = this.flowParseRestrictedIdentifier(\n        /* liberal */ !isClass,\n        /* declaration */ true,\n      );\n\n      this.scope.declareName(\n        node.id.name,\n        isClass ? BIND_FUNCTION : BIND_LEXICAL,\n        node.id.loc.start,\n      );\n\n      if (this.match(tt.lt)) {\n        node.typeParameters = this.flowParseTypeParameterDeclaration();\n      } else {\n        node.typeParameters = null;\n      }\n\n      node.extends = [];\n      node.implements = [];\n      node.mixins = [];\n\n      if (this.eat(tt._extends)) {\n        do {\n          node.extends.push(this.flowParseInterfaceExtends());\n        } while (!isClass && this.eat(tt.comma));\n      }\n\n      if (this.isContextual(tt._mixins)) {\n        this.next();\n        do {\n          node.mixins.push(this.flowParseInterfaceExtends());\n        } while (this.eat(tt.comma));\n      }\n\n      if (this.isContextual(tt._implements)) {\n        this.next();\n        do {\n          node.implements.push(this.flowParseInterfaceExtends());\n        } while (this.eat(tt.comma));\n      }\n\n      node.body = this.flowParseObjectType({\n        allowStatic: isClass,\n        allowExact: false,\n        allowSpread: false,\n        allowProto: isClass,\n        allowInexact: false,\n      });\n    }\n\n    flowParseInterfaceExtends(): N.FlowInterfaceExtends {\n      const node = this.startNode();\n\n      node.id = this.flowParseQualifiedTypeIdentifier();\n      if (this.match(tt.lt)) {\n        node.typeParameters = this.flowParseTypeParameterInstantiation();\n      } else {\n        node.typeParameters = null;\n      }\n\n      return this.finishNode(node, \"InterfaceExtends\");\n    }\n\n    flowParseInterface(node: N.FlowInterface): N.FlowInterface {\n      this.flowParseInterfaceish(node);\n      return this.finishNode(node, \"InterfaceDeclaration\");\n    }\n\n    checkNotUnderscore(word: string) {\n      if (word === \"_\") {\n        this.raise(FlowErrors.UnexpectedReservedUnderscore, {\n          at: this.state.startLoc,\n        });\n      }\n    }\n\n    checkReservedType(word: string, startLoc: Position, declaration?: boolean) {\n      if (!reservedTypes.has(word)) return;\n\n      this.raise(\n        declaration\n          ? FlowErrors.AssignReservedType\n          : FlowErrors.UnexpectedReservedType,\n        {\n          at: startLoc,\n          reservedType: word,\n        },\n      );\n    }\n\n    flowParseRestrictedIdentifier(\n      liberal?: boolean,\n      declaration?: boolean,\n    ): N.Identifier {\n      this.checkReservedType(\n        this.state.value,\n        this.state.startLoc,\n        declaration,\n      );\n      return this.parseIdentifier(liberal);\n    }\n\n    // Type aliases\n\n    flowParseTypeAlias(node: N.FlowTypeAlias): N.FlowTypeAlias {\n      node.id = this.flowParseRestrictedIdentifier(\n        /* liberal */ false,\n        /* declaration */ true,\n      );\n      this.scope.declareName(node.id.name, BIND_LEXICAL, node.id.loc.start);\n\n      if (this.match(tt.lt)) {\n        node.typeParameters = this.flowParseTypeParameterDeclaration();\n      } else {\n        node.typeParameters = null;\n      }\n\n      node.right = this.flowParseTypeInitialiser(tt.eq);\n      this.semicolon();\n\n      return this.finishNode(node, \"TypeAlias\");\n    }\n\n    flowParseOpaqueType(\n      node: N.FlowOpaqueType,\n      declare: boolean,\n    ): N.FlowOpaqueType {\n      this.expectContextual(tt._type);\n      node.id = this.flowParseRestrictedIdentifier(\n        /* liberal */ true,\n        /* declaration */ true,\n      );\n      this.scope.declareName(node.id.name, BIND_LEXICAL, node.id.loc.start);\n\n      if (this.match(tt.lt)) {\n        node.typeParameters = this.flowParseTypeParameterDeclaration();\n      } else {\n        node.typeParameters = null;\n      }\n\n      // Parse the supertype\n      node.supertype = null;\n      if (this.match(tt.colon)) {\n        node.supertype = this.flowParseTypeInitialiser(tt.colon);\n      }\n\n      node.impltype = null;\n      if (!declare) {\n        node.impltype = this.flowParseTypeInitialiser(tt.eq);\n      }\n      this.semicolon();\n\n      return this.finishNode(node, \"OpaqueType\");\n    }\n\n    // Type annotations\n\n    flowParseTypeParameter(requireDefault?: boolean = false): N.TypeParameter {\n      const nodeStartLoc = this.state.startLoc;\n\n      const node = this.startNode();\n\n      const variance = this.flowParseVariance();\n\n      const ident = this.flowParseTypeAnnotatableIdentifier();\n      node.name = ident.name;\n      node.variance = variance;\n      node.bound = ident.typeAnnotation;\n\n      if (this.match(tt.eq)) {\n        this.eat(tt.eq);\n        node.default = this.flowParseType();\n      } else {\n        if (requireDefault) {\n          this.raise(FlowErrors.MissingTypeParamDefault, { at: nodeStartLoc });\n        }\n      }\n\n      return this.finishNode(node, \"TypeParameter\");\n    }\n\n    flowParseTypeParameterDeclaration(): N.TypeParameterDeclaration {\n      const oldInType = this.state.inType;\n      const node = this.startNode();\n      node.params = [];\n\n      this.state.inType = true;\n\n      // istanbul ignore else: this condition is already checked at all call sites\n      if (this.match(tt.lt) || this.match(tt.jsxTagStart)) {\n        this.next();\n      } else {\n        this.unexpected();\n      }\n\n      let defaultRequired = false;\n\n      do {\n        const typeParameter = this.flowParseTypeParameter(defaultRequired);\n\n        node.params.push(typeParameter);\n\n        if (typeParameter.default) {\n          defaultRequired = true;\n        }\n\n        if (!this.match(tt.gt)) {\n          this.expect(tt.comma);\n        }\n      } while (!this.match(tt.gt));\n      this.expect(tt.gt);\n\n      this.state.inType = oldInType;\n\n      return this.finishNode(node, \"TypeParameterDeclaration\");\n    }\n\n    flowParseTypeParameterInstantiation(): N.TypeParameterInstantiation {\n      const node = this.startNode();\n      const oldInType = this.state.inType;\n      node.params = [];\n\n      this.state.inType = true;\n\n      this.expect(tt.lt);\n      const oldNoAnonFunctionType = this.state.noAnonFunctionType;\n      this.state.noAnonFunctionType = false;\n      while (!this.match(tt.gt)) {\n        node.params.push(this.flowParseType());\n        if (!this.match(tt.gt)) {\n          this.expect(tt.comma);\n        }\n      }\n      this.state.noAnonFunctionType = oldNoAnonFunctionType;\n      this.expect(tt.gt);\n\n      this.state.inType = oldInType;\n\n      return this.finishNode(node, \"TypeParameterInstantiation\");\n    }\n\n    flowParseTypeParameterInstantiationCallOrNew(): N.TypeParameterInstantiation {\n      const node = this.startNode();\n      const oldInType = this.state.inType;\n      node.params = [];\n\n      this.state.inType = true;\n\n      this.expect(tt.lt);\n      while (!this.match(tt.gt)) {\n        node.params.push(this.flowParseTypeOrImplicitInstantiation());\n        if (!this.match(tt.gt)) {\n          this.expect(tt.comma);\n        }\n      }\n      this.expect(tt.gt);\n\n      this.state.inType = oldInType;\n\n      return this.finishNode(node, \"TypeParameterInstantiation\");\n    }\n\n    flowParseInterfaceType(): N.FlowInterfaceType {\n      const node = this.startNode();\n      this.expectContextual(tt._interface);\n\n      node.extends = [];\n      if (this.eat(tt._extends)) {\n        do {\n          node.extends.push(this.flowParseInterfaceExtends());\n        } while (this.eat(tt.comma));\n      }\n\n      node.body = this.flowParseObjectType({\n        allowStatic: false,\n        allowExact: false,\n        allowSpread: false,\n        allowProto: false,\n        allowInexact: false,\n      });\n\n      return this.finishNode(node, \"InterfaceTypeAnnotation\");\n    }\n\n    flowParseObjectPropertyKey(): N.Expression {\n      return this.match(tt.num) || this.match(tt.string)\n        ? this.parseExprAtom()\n        : this.parseIdentifier(true);\n    }\n\n    flowParseObjectTypeIndexer(\n      node: N.FlowObjectTypeIndexer,\n      isStatic: boolean,\n      variance: ?N.FlowVariance,\n    ): N.FlowObjectTypeIndexer {\n      node.static = isStatic;\n\n      // Note: bracketL has already been consumed\n      if (this.lookahead().type === tt.colon) {\n        node.id = this.flowParseObjectPropertyKey();\n        node.key = this.flowParseTypeInitialiser();\n      } else {\n        node.id = null;\n        node.key = this.flowParseType();\n      }\n      this.expect(tt.bracketR);\n      node.value = this.flowParseTypeInitialiser();\n      node.variance = variance;\n\n      return this.finishNode(node, \"ObjectTypeIndexer\");\n    }\n\n    flowParseObjectTypeInternalSlot(\n      node: N.FlowObjectTypeInternalSlot,\n      isStatic: boolean,\n    ): N.FlowObjectTypeInternalSlot {\n      node.static = isStatic;\n      // Note: both bracketL have already been consumed\n      node.id = this.flowParseObjectPropertyKey();\n      this.expect(tt.bracketR);\n      this.expect(tt.bracketR);\n      if (this.match(tt.lt) || this.match(tt.parenL)) {\n        node.method = true;\n        node.optional = false;\n        node.value = this.flowParseObjectTypeMethodish(\n          this.startNodeAt(node.start, node.loc.start),\n        );\n      } else {\n        node.method = false;\n        if (this.eat(tt.question)) {\n          node.optional = true;\n        }\n        node.value = this.flowParseTypeInitialiser();\n      }\n      return this.finishNode(node, \"ObjectTypeInternalSlot\");\n    }\n\n    flowParseObjectTypeMethodish(\n      node: N.FlowFunctionTypeAnnotation,\n    ): N.FlowFunctionTypeAnnotation {\n      node.params = [];\n      node.rest = null;\n      node.typeParameters = null;\n      node.this = null;\n\n      if (this.match(tt.lt)) {\n        node.typeParameters = this.flowParseTypeParameterDeclaration();\n      }\n\n      this.expect(tt.parenL);\n      if (this.match(tt._this)) {\n        node.this = this.flowParseFunctionTypeParam(/* first */ true);\n        // match Flow parser behavior\n        node.this.name = null;\n        if (!this.match(tt.parenR)) {\n          this.expect(tt.comma);\n        }\n      }\n      while (!this.match(tt.parenR) && !this.match(tt.ellipsis)) {\n        node.params.push(this.flowParseFunctionTypeParam(false));\n        if (!this.match(tt.parenR)) {\n          this.expect(tt.comma);\n        }\n      }\n\n      if (this.eat(tt.ellipsis)) {\n        node.rest = this.flowParseFunctionTypeParam(false);\n      }\n      this.expect(tt.parenR);\n      node.returnType = this.flowParseTypeInitialiser();\n\n      return this.finishNode(node, \"FunctionTypeAnnotation\");\n    }\n\n    flowParseObjectTypeCallProperty(\n      node: N.FlowObjectTypeCallProperty,\n      isStatic: boolean,\n    ): N.FlowObjectTypeCallProperty {\n      const valueNode = this.startNode();\n      node.static = isStatic;\n      node.value = this.flowParseObjectTypeMethodish(valueNode);\n      return this.finishNode(node, \"ObjectTypeCallProperty\");\n    }\n\n    flowParseObjectType({\n      allowStatic,\n      allowExact,\n      allowSpread,\n      allowProto,\n      allowInexact,\n    }: {\n      allowStatic: boolean,\n      allowExact: boolean,\n      allowSpread: boolean,\n      allowProto: boolean,\n      allowInexact: boolean,\n    }): N.FlowObjectTypeAnnotation {\n      const oldInType = this.state.inType;\n      this.state.inType = true;\n\n      const nodeStart = this.startNode();\n\n      nodeStart.callProperties = [];\n      nodeStart.properties = [];\n      nodeStart.indexers = [];\n      nodeStart.internalSlots = [];\n\n      let endDelim;\n      let exact;\n      let inexact = false;\n      if (allowExact && this.match(tt.braceBarL)) {\n        this.expect(tt.braceBarL);\n        endDelim = tt.braceBarR;\n        exact = true;\n      } else {\n        this.expect(tt.braceL);\n        endDelim = tt.braceR;\n        exact = false;\n      }\n\n      nodeStart.exact = exact;\n\n      while (!this.match(endDelim)) {\n        let isStatic = false;\n        let protoStartLoc: ?Position = null;\n        let inexactStartLoc: ?Position = null;\n        const node = this.startNode();\n\n        if (allowProto && this.isContextual(tt._proto)) {\n          const lookahead = this.lookahead();\n\n          if (lookahead.type !== tt.colon && lookahead.type !== tt.question) {\n            this.next();\n            protoStartLoc = this.state.startLoc;\n            allowStatic = false;\n          }\n        }\n\n        if (allowStatic && this.isContextual(tt._static)) {\n          const lookahead = this.lookahead();\n\n          // static is a valid identifier name\n          if (lookahead.type !== tt.colon && lookahead.type !== tt.question) {\n            this.next();\n            isStatic = true;\n          }\n        }\n\n        const variance = this.flowParseVariance();\n\n        if (this.eat(tt.bracketL)) {\n          if (protoStartLoc != null) {\n            this.unexpected(protoStartLoc);\n          }\n          if (this.eat(tt.bracketL)) {\n            if (variance) {\n              this.unexpected(variance.loc.start);\n            }\n            nodeStart.internalSlots.push(\n              this.flowParseObjectTypeInternalSlot(node, isStatic),\n            );\n          } else {\n            nodeStart.indexers.push(\n              this.flowParseObjectTypeIndexer(node, isStatic, variance),\n            );\n          }\n        } else if (this.match(tt.parenL) || this.match(tt.lt)) {\n          if (protoStartLoc != null) {\n            this.unexpected(protoStartLoc);\n          }\n          if (variance) {\n            this.unexpected(variance.loc.start);\n          }\n          nodeStart.callProperties.push(\n            this.flowParseObjectTypeCallProperty(node, isStatic),\n          );\n        } else {\n          let kind = \"init\";\n\n          if (this.isContextual(tt._get) || this.isContextual(tt._set)) {\n            const lookahead = this.lookahead();\n            if (tokenIsLiteralPropertyName(lookahead.type)) {\n              kind = this.state.value;\n              this.next();\n            }\n          }\n\n          const propOrInexact = this.flowParseObjectTypeProperty(\n            node,\n            isStatic,\n            protoStartLoc,\n            variance,\n            kind,\n            allowSpread,\n            allowInexact ?? !exact,\n          );\n\n          if (propOrInexact === null) {\n            inexact = true;\n            inexactStartLoc = this.state.lastTokStartLoc;\n          } else {\n            nodeStart.properties.push(propOrInexact);\n          }\n        }\n\n        this.flowObjectTypeSemicolon();\n\n        if (\n          inexactStartLoc &&\n          !this.match(tt.braceR) &&\n          !this.match(tt.braceBarR)\n        ) {\n          this.raise(FlowErrors.UnexpectedExplicitInexactInObject, {\n            at: inexactStartLoc,\n          });\n        }\n      }\n\n      this.expect(endDelim);\n\n      /* The inexact flag should only be added on ObjectTypeAnnotations that\n       * are not the body of an interface, declare interface, or declare class.\n       * Since spreads are only allowed in object types, checking that is\n       * sufficient here.\n       */\n      if (allowSpread) {\n        nodeStart.inexact = inexact;\n      }\n\n      const out = this.finishNode(nodeStart, \"ObjectTypeAnnotation\");\n\n      this.state.inType = oldInType;\n\n      return out;\n    }\n\n    flowParseObjectTypeProperty(\n      node: N.FlowObjectTypeProperty | N.FlowObjectTypeSpreadProperty,\n      isStatic: boolean,\n      protoStartLoc: ?Position,\n      variance: ?N.FlowVariance,\n      kind: string,\n      allowSpread: boolean,\n      allowInexact: boolean,\n    ): (N.FlowObjectTypeProperty | N.FlowObjectTypeSpreadProperty) | null {\n      if (this.eat(tt.ellipsis)) {\n        const isInexactToken =\n          this.match(tt.comma) ||\n          this.match(tt.semi) ||\n          this.match(tt.braceR) ||\n          this.match(tt.braceBarR);\n\n        if (isInexactToken) {\n          if (!allowSpread) {\n            this.raise(FlowErrors.InexactInsideNonObject, {\n              at: this.state.lastTokStartLoc,\n            });\n          } else if (!allowInexact) {\n            this.raise(FlowErrors.InexactInsideExact, {\n              at: this.state.lastTokStartLoc,\n            });\n          }\n          if (variance) {\n            this.raise(FlowErrors.InexactVariance, { at: variance });\n          }\n\n          return null;\n        }\n\n        if (!allowSpread) {\n          this.raise(FlowErrors.UnexpectedSpreadType, {\n            at: this.state.lastTokStartLoc,\n          });\n        }\n        if (protoStartLoc != null) {\n          this.unexpected(protoStartLoc);\n        }\n        if (variance) {\n          this.raise(FlowErrors.SpreadVariance, { at: variance });\n        }\n\n        node.argument = this.flowParseType();\n        return this.finishNode(node, \"ObjectTypeSpreadProperty\");\n      } else {\n        node.key = this.flowParseObjectPropertyKey();\n        node.static = isStatic;\n        node.proto = protoStartLoc != null;\n        node.kind = kind;\n\n        let optional = false;\n        if (this.match(tt.lt) || this.match(tt.parenL)) {\n          // This is a method property\n          node.method = true;\n\n          if (protoStartLoc != null) {\n            this.unexpected(protoStartLoc);\n          }\n          if (variance) {\n            this.unexpected(variance.loc.start);\n          }\n\n          node.value = this.flowParseObjectTypeMethodish(\n            this.startNodeAt(node.start, node.loc.start),\n          );\n          if (kind === \"get\" || kind === \"set\") {\n            this.flowCheckGetterSetterParams(node);\n          }\n          /** Declared classes/interfaces do not allow spread */\n          if (\n            !allowSpread &&\n            node.key.name === \"constructor\" &&\n            node.value.this\n          ) {\n            this.raise(FlowErrors.ThisParamBannedInConstructor, {\n              at: node.value.this,\n            });\n          }\n        } else {\n          if (kind !== \"init\") this.unexpected();\n\n          node.method = false;\n\n          if (this.eat(tt.question)) {\n            optional = true;\n          }\n          node.value = this.flowParseTypeInitialiser();\n          node.variance = variance;\n        }\n\n        node.optional = optional;\n\n        return this.finishNode(node, \"ObjectTypeProperty\");\n      }\n    }\n\n    // This is similar to checkGetterSetterParams, but as\n    // @babel/parser uses non estree properties we cannot reuse it here\n    flowCheckGetterSetterParams(\n      property: N.FlowObjectTypeProperty | N.FlowObjectTypeSpreadProperty,\n    ): void {\n      const paramCount = property.kind === \"get\" ? 0 : 1;\n      const length =\n        property.value.params.length + (property.value.rest ? 1 : 0);\n\n      if (property.value.this) {\n        this.raise(\n          property.kind === \"get\"\n            ? FlowErrors.GetterMayNotHaveThisParam\n            : FlowErrors.SetterMayNotHaveThisParam,\n          { at: property.value.this },\n        );\n      }\n\n      if (length !== paramCount) {\n        this.raise(\n          property.kind === \"get\"\n            ? Errors.BadGetterArity\n            : Errors.BadSetterArity,\n          { at: property },\n        );\n      }\n\n      if (property.kind === \"set\" && property.value.rest) {\n        this.raise(Errors.BadSetterRestParameter, { at: property });\n      }\n    }\n\n    flowObjectTypeSemicolon(): void {\n      if (\n        !this.eat(tt.semi) &&\n        !this.eat(tt.comma) &&\n        !this.match(tt.braceR) &&\n        !this.match(tt.braceBarR)\n      ) {\n        this.unexpected();\n      }\n    }\n\n    flowParseQualifiedTypeIdentifier(\n      startPos?: number,\n      startLoc?: Position,\n      id?: N.Identifier,\n    ): N.FlowQualifiedTypeIdentifier {\n      startPos = startPos || this.state.start;\n      startLoc = startLoc || this.state.startLoc;\n      let node = id || this.flowParseRestrictedIdentifier(true);\n\n      while (this.eat(tt.dot)) {\n        const node2 = this.startNodeAt(startPos, startLoc);\n        node2.qualification = node;\n        node2.id = this.flowParseRestrictedIdentifier(true);\n        node = this.finishNode(node2, \"QualifiedTypeIdentifier\");\n      }\n\n      return node;\n    }\n\n    flowParseGenericType(\n      startPos: number,\n      startLoc: Position,\n      id: N.Identifier,\n    ): N.FlowGenericTypeAnnotation {\n      const node = this.startNodeAt(startPos, startLoc);\n\n      node.typeParameters = null;\n      node.id = this.flowParseQualifiedTypeIdentifier(startPos, startLoc, id);\n\n      if (this.match(tt.lt)) {\n        node.typeParameters = this.flowParseTypeParameterInstantiation();\n      }\n\n      return this.finishNode(node, \"GenericTypeAnnotation\");\n    }\n\n    flowParseTypeofType(): N.FlowTypeofTypeAnnotation {\n      const node = this.startNode();\n      this.expect(tt._typeof);\n      node.argument = this.flowParsePrimaryType();\n      return this.finishNode(node, \"TypeofTypeAnnotation\");\n    }\n\n    flowParseTupleType(): N.FlowTupleTypeAnnotation {\n      const node = this.startNode();\n      node.types = [];\n      this.expect(tt.bracketL);\n      // We allow trailing commas\n      while (this.state.pos < this.length && !this.match(tt.bracketR)) {\n        node.types.push(this.flowParseType());\n        if (this.match(tt.bracketR)) break;\n        this.expect(tt.comma);\n      }\n      this.expect(tt.bracketR);\n      return this.finishNode(node, \"TupleTypeAnnotation\");\n    }\n\n    flowParseFunctionTypeParam(first: boolean): N.FlowFunctionTypeParam {\n      let name = null;\n      let optional = false;\n      let typeAnnotation = null;\n      const node = this.startNode();\n      const lh = this.lookahead();\n      const isThis = this.state.type === tt._this;\n\n      if (lh.type === tt.colon || lh.type === tt.question) {\n        if (isThis && !first) {\n          this.raise(FlowErrors.ThisParamMustBeFirst, { at: node });\n        }\n        name = this.parseIdentifier(isThis);\n        if (this.eat(tt.question)) {\n          optional = true;\n          if (isThis) {\n            this.raise(FlowErrors.ThisParamMayNotBeOptional, { at: node });\n          }\n        }\n        typeAnnotation = this.flowParseTypeInitialiser();\n      } else {\n        typeAnnotation = this.flowParseType();\n      }\n      node.name = name;\n      node.optional = optional;\n      node.typeAnnotation = typeAnnotation;\n      return this.finishNode(node, \"FunctionTypeParam\");\n    }\n\n    reinterpretTypeAsFunctionTypeParam(\n      type: N.FlowType,\n    ): N.FlowFunctionTypeParam {\n      const node = this.startNodeAt(type.start, type.loc.start);\n      node.name = null;\n      node.optional = false;\n      node.typeAnnotation = type;\n      return this.finishNode(node, \"FunctionTypeParam\");\n    }\n\n    flowParseFunctionTypeParams(params: N.FlowFunctionTypeParam[] = []): {\n      params: N.FlowFunctionTypeParam[],\n      rest: ?N.FlowFunctionTypeParam,\n      _this: ?N.FlowFunctionTypeParam,\n    } {\n      let rest: ?N.FlowFunctionTypeParam = null;\n      let _this: ?N.FlowFunctionTypeParam = null;\n      if (this.match(tt._this)) {\n        _this = this.flowParseFunctionTypeParam(/* first */ true);\n        // match Flow parser behavior\n        _this.name = null;\n        if (!this.match(tt.parenR)) {\n          this.expect(tt.comma);\n        }\n      }\n      while (!this.match(tt.parenR) && !this.match(tt.ellipsis)) {\n        params.push(this.flowParseFunctionTypeParam(false));\n        if (!this.match(tt.parenR)) {\n          this.expect(tt.comma);\n        }\n      }\n      if (this.eat(tt.ellipsis)) {\n        rest = this.flowParseFunctionTypeParam(false);\n      }\n      return { params, rest, _this };\n    }\n\n    flowIdentToTypeAnnotation(\n      startPos: number,\n      startLoc: Position,\n      node: N.FlowTypeAnnotation,\n      id: N.Identifier,\n    ): N.FlowTypeAnnotation {\n      switch (id.name) {\n        case \"any\":\n          return this.finishNode(node, \"AnyTypeAnnotation\");\n\n        case \"bool\":\n        case \"boolean\":\n          return this.finishNode(node, \"BooleanTypeAnnotation\");\n\n        case \"mixed\":\n          return this.finishNode(node, \"MixedTypeAnnotation\");\n\n        case \"empty\":\n          return this.finishNode(node, \"EmptyTypeAnnotation\");\n\n        case \"number\":\n          return this.finishNode(node, \"NumberTypeAnnotation\");\n\n        case \"string\":\n          return this.finishNode(node, \"StringTypeAnnotation\");\n\n        case \"symbol\":\n          return this.finishNode(node, \"SymbolTypeAnnotation\");\n\n        default:\n          this.checkNotUnderscore(id.name);\n          return this.flowParseGenericType(startPos, startLoc, id);\n      }\n    }\n\n    // The parsing of types roughly parallels the parsing of expressions, and\n    // primary types are kind of like primary expressions...they're the\n    // primitives with which other types are constructed.\n    flowParsePrimaryType(): N.FlowTypeAnnotation {\n      const startPos = this.state.start;\n      const startLoc = this.state.startLoc;\n      const node = this.startNode();\n      let tmp;\n      let type;\n      let isGroupedType = false;\n      const oldNoAnonFunctionType = this.state.noAnonFunctionType;\n\n      switch (this.state.type) {\n        case tt.braceL:\n          return this.flowParseObjectType({\n            allowStatic: false,\n            allowExact: false,\n            allowSpread: true,\n            allowProto: false,\n            allowInexact: true,\n          });\n\n        case tt.braceBarL:\n          return this.flowParseObjectType({\n            allowStatic: false,\n            allowExact: true,\n            allowSpread: true,\n            allowProto: false,\n            allowInexact: false,\n          });\n\n        case tt.bracketL:\n          this.state.noAnonFunctionType = false;\n          type = this.flowParseTupleType();\n          this.state.noAnonFunctionType = oldNoAnonFunctionType;\n          return type;\n\n        case tt.lt:\n          node.typeParameters = this.flowParseTypeParameterDeclaration();\n          this.expect(tt.parenL);\n          tmp = this.flowParseFunctionTypeParams();\n          node.params = tmp.params;\n          node.rest = tmp.rest;\n          node.this = tmp._this;\n          this.expect(tt.parenR);\n\n          this.expect(tt.arrow);\n\n          node.returnType = this.flowParseType();\n\n          return this.finishNode(node, \"FunctionTypeAnnotation\");\n\n        case tt.parenL:\n          this.next();\n\n          // Check to see if this is actually a grouped type\n          if (!this.match(tt.parenR) && !this.match(tt.ellipsis)) {\n            if (tokenIsIdentifier(this.state.type) || this.match(tt._this)) {\n              const token = this.lookahead().type;\n              isGroupedType = token !== tt.question && token !== tt.colon;\n            } else {\n              isGroupedType = true;\n            }\n          }\n\n          if (isGroupedType) {\n            this.state.noAnonFunctionType = false;\n            type = this.flowParseType();\n            this.state.noAnonFunctionType = oldNoAnonFunctionType;\n\n            // A `,` or a `) =>` means this is an anonymous function type\n            if (\n              this.state.noAnonFunctionType ||\n              !(\n                this.match(tt.comma) ||\n                (this.match(tt.parenR) && this.lookahead().type === tt.arrow)\n              )\n            ) {\n              this.expect(tt.parenR);\n              return type;\n            } else {\n              // Eat a comma if there is one\n              this.eat(tt.comma);\n            }\n          }\n\n          if (type) {\n            tmp = this.flowParseFunctionTypeParams([\n              this.reinterpretTypeAsFunctionTypeParam(type),\n            ]);\n          } else {\n            tmp = this.flowParseFunctionTypeParams();\n          }\n\n          node.params = tmp.params;\n          node.rest = tmp.rest;\n          node.this = tmp._this;\n\n          this.expect(tt.parenR);\n\n          this.expect(tt.arrow);\n\n          node.returnType = this.flowParseType();\n\n          node.typeParameters = null;\n\n          return this.finishNode(node, \"FunctionTypeAnnotation\");\n\n        case tt.string:\n          return this.parseLiteral<N.StringLiteralTypeAnnotation>(\n            this.state.value,\n            \"StringLiteralTypeAnnotation\",\n          );\n\n        case tt._true:\n        case tt._false:\n          node.value = this.match(tt._true);\n          this.next();\n          return this.finishNode<N.BooleanLiteralTypeAnnotation>(\n            node,\n            \"BooleanLiteralTypeAnnotation\",\n          );\n\n        case tt.plusMin:\n          if (this.state.value === \"-\") {\n            this.next();\n            if (this.match(tt.num)) {\n              return this.parseLiteralAtNode<N.NumberLiteralTypeAnnotation>(\n                -this.state.value,\n                \"NumberLiteralTypeAnnotation\",\n                node,\n              );\n            }\n\n            if (this.match(tt.bigint)) {\n              return this.parseLiteralAtNode<N.BigIntLiteralTypeAnnotation>(\n                -this.state.value,\n                \"BigIntLiteralTypeAnnotation\",\n                node,\n              );\n            }\n\n            throw this.raise(FlowErrors.UnexpectedSubtractionOperand, {\n              at: this.state.startLoc,\n            });\n          }\n\n          throw this.unexpected();\n        case tt.num:\n          return this.parseLiteral(\n            this.state.value,\n            \"NumberLiteralTypeAnnotation\",\n          );\n\n        case tt.bigint:\n          return this.parseLiteral(\n            this.state.value,\n            \"BigIntLiteralTypeAnnotation\",\n          );\n\n        case tt._void:\n          this.next();\n          return this.finishNode(node, \"VoidTypeAnnotation\");\n\n        case tt._null:\n          this.next();\n          return this.finishNode(node, \"NullLiteralTypeAnnotation\");\n\n        case tt._this:\n          this.next();\n          return this.finishNode(node, \"ThisTypeAnnotation\");\n\n        case tt.star:\n          this.next();\n          return this.finishNode(node, \"ExistsTypeAnnotation\");\n\n        case tt._typeof:\n          return this.flowParseTypeofType();\n\n        default:\n          if (tokenIsKeyword(this.state.type)) {\n            const label = tokenLabelName(this.state.type);\n            this.next();\n            return super.createIdentifier(node, label);\n          } else if (tokenIsIdentifier(this.state.type)) {\n            if (this.isContextual(tt._interface)) {\n              return this.flowParseInterfaceType();\n            }\n\n            return this.flowIdentToTypeAnnotation(\n              startPos,\n              startLoc,\n              node,\n              this.parseIdentifier(),\n            );\n          }\n      }\n\n      throw this.unexpected();\n    }\n\n    flowParsePostfixType(): N.FlowTypeAnnotation {\n      const startPos = this.state.start;\n      const startLoc = this.state.startLoc;\n      let type = this.flowParsePrimaryType();\n      let seenOptionalIndexedAccess = false;\n      while (\n        (this.match(tt.bracketL) || this.match(tt.questionDot)) &&\n        !this.canInsertSemicolon()\n      ) {\n        const node = this.startNodeAt(startPos, startLoc);\n        const optional = this.eat(tt.questionDot);\n        seenOptionalIndexedAccess = seenOptionalIndexedAccess || optional;\n        this.expect(tt.bracketL);\n        if (!optional && this.match(tt.bracketR)) {\n          node.elementType = type;\n          this.next(); // eat `]`\n          type = this.finishNode(node, \"ArrayTypeAnnotation\");\n        } else {\n          node.objectType = type;\n          node.indexType = this.flowParseType();\n          this.expect(tt.bracketR);\n          if (seenOptionalIndexedAccess) {\n            node.optional = optional;\n            type = this.finishNode<N.FlowOptionalIndexedAccessType>(\n              node,\n              \"OptionalIndexedAccessType\",\n            );\n          } else {\n            type = this.finishNode<N.FlowIndexedAccessType>(\n              node,\n              \"IndexedAccessType\",\n            );\n          }\n        }\n      }\n      return type;\n    }\n\n    flowParsePrefixType(): N.FlowTypeAnnotation {\n      const node = this.startNode();\n      if (this.eat(tt.question)) {\n        node.typeAnnotation = this.flowParsePrefixType();\n        return this.finishNode(node, \"NullableTypeAnnotation\");\n      } else {\n        return this.flowParsePostfixType();\n      }\n    }\n\n    flowParseAnonFunctionWithoutParens(): N.FlowTypeAnnotation {\n      const param = this.flowParsePrefixType();\n      if (!this.state.noAnonFunctionType && this.eat(tt.arrow)) {\n        // TODO: This should be a type error. Passing in a SourceLocation, and it expects a Position.\n        const node = this.startNodeAt(param.start, param.loc.start);\n        node.params = [this.reinterpretTypeAsFunctionTypeParam(param)];\n        node.rest = null;\n        node.this = null;\n        node.returnType = this.flowParseType();\n        node.typeParameters = null;\n        return this.finishNode(node, \"FunctionTypeAnnotation\");\n      }\n      return param;\n    }\n\n    flowParseIntersectionType(): N.FlowTypeAnnotation {\n      const node = this.startNode();\n      this.eat(tt.bitwiseAND);\n      const type = this.flowParseAnonFunctionWithoutParens();\n      node.types = [type];\n      while (this.eat(tt.bitwiseAND)) {\n        node.types.push(this.flowParseAnonFunctionWithoutParens());\n      }\n      return node.types.length === 1\n        ? type\n        : this.finishNode(node, \"IntersectionTypeAnnotation\");\n    }\n\n    flowParseUnionType(): N.FlowTypeAnnotation {\n      const node = this.startNode();\n      this.eat(tt.bitwiseOR);\n      const type = this.flowParseIntersectionType();\n      node.types = [type];\n      while (this.eat(tt.bitwiseOR)) {\n        node.types.push(this.flowParseIntersectionType());\n      }\n      return node.types.length === 1\n        ? type\n        : this.finishNode(node, \"UnionTypeAnnotation\");\n    }\n\n    flowParseType(): N.FlowTypeAnnotation {\n      const oldInType = this.state.inType;\n      this.state.inType = true;\n      const type = this.flowParseUnionType();\n      this.state.inType = oldInType;\n      return type;\n    }\n\n    flowParseTypeOrImplicitInstantiation(): N.FlowTypeAnnotation {\n      if (this.state.type === tt.name && this.state.value === \"_\") {\n        const startPos = this.state.start;\n        const startLoc = this.state.startLoc;\n        const node = this.parseIdentifier();\n        return this.flowParseGenericType(startPos, startLoc, node);\n      } else {\n        return this.flowParseType();\n      }\n    }\n\n    flowParseTypeAnnotation(): N.FlowTypeAnnotation {\n      const node = this.startNode();\n      node.typeAnnotation = this.flowParseTypeInitialiser();\n      return this.finishNode(node, \"TypeAnnotation\");\n    }\n\n    flowParseTypeAnnotatableIdentifier(\n      allowPrimitiveOverride?: boolean,\n    ): N.Identifier {\n      const ident = allowPrimitiveOverride\n        ? this.parseIdentifier()\n        : this.flowParseRestrictedIdentifier();\n      if (this.match(tt.colon)) {\n        ident.typeAnnotation = this.flowParseTypeAnnotation();\n        this.resetEndLocation(ident);\n      }\n      return ident;\n    }\n\n    typeCastToParameter(node: N.Node): N.Node {\n      node.expression.typeAnnotation = node.typeAnnotation;\n\n      this.resetEndLocation(node.expression, node.typeAnnotation.loc.end);\n\n      return node.expression;\n    }\n\n    flowParseVariance(): ?N.FlowVariance {\n      let variance = null;\n      if (this.match(tt.plusMin)) {\n        variance = this.startNode();\n        if (this.state.value === \"+\") {\n          variance.kind = \"plus\";\n        } else {\n          variance.kind = \"minus\";\n        }\n        this.next();\n        this.finishNode(variance, \"Variance\");\n      }\n      return variance;\n    }\n\n    // ==================================\n    // Overrides\n    // ==================================\n\n    parseFunctionBody(\n      node: N.Function,\n      allowExpressionBody: ?boolean,\n      isMethod?: boolean = false,\n    ): void {\n      if (allowExpressionBody) {\n        return this.forwardNoArrowParamsConversionAt(node, () =>\n          super.parseFunctionBody(node, true, isMethod),\n        );\n      }\n\n      return super.parseFunctionBody(node, false, isMethod);\n    }\n\n    parseFunctionBodyAndFinish(\n      node: N.BodilessFunctionOrMethodBase,\n      type: string,\n      isMethod?: boolean = false,\n    ): void {\n      if (this.match(tt.colon)) {\n        const typeNode = this.startNode();\n\n        [\n          // $FlowFixMe (destructuring not supported yet)\n          typeNode.typeAnnotation,\n          // $FlowFixMe (destructuring not supported yet)\n          node.predicate,\n        ] = this.flowParseTypeAndPredicateInitialiser();\n\n        node.returnType = typeNode.typeAnnotation\n          ? this.finishNode(typeNode, \"TypeAnnotation\")\n          : null;\n      }\n\n      super.parseFunctionBodyAndFinish(node, type, isMethod);\n    }\n\n    // interfaces and enums\n    parseStatement(context: ?string, topLevel?: boolean): N.Statement {\n      // strict mode handling of `interface` since it's a reserved word\n      if (this.state.strict && this.isContextual(tt._interface)) {\n        const lookahead = this.lookahead();\n        if (tokenIsKeywordOrIdentifier(lookahead.type)) {\n          const node = this.startNode();\n          this.next();\n          return this.flowParseInterface(node);\n        }\n      } else if (this.shouldParseEnums() && this.isContextual(tt._enum)) {\n        const node = this.startNode();\n        this.next();\n        return this.flowParseEnumDeclaration(node);\n      }\n      const stmt = super.parseStatement(context, topLevel);\n      // We will parse a flow pragma in any comment before the first statement.\n      if (this.flowPragma === undefined && !this.isValidDirective(stmt)) {\n        this.flowPragma = null;\n      }\n      return stmt;\n    }\n\n    // declares, interfaces and type aliases\n    parseExpressionStatement(\n      node: N.ExpressionStatement,\n      expr: N.Expression,\n    ): N.ExpressionStatement {\n      if (expr.type === \"Identifier\") {\n        if (expr.name === \"declare\") {\n          if (\n            this.match(tt._class) ||\n            tokenIsIdentifier(this.state.type) ||\n            this.match(tt._function) ||\n            this.match(tt._var) ||\n            this.match(tt._export)\n          ) {\n            return this.flowParseDeclare(node);\n          }\n        } else if (tokenIsIdentifier(this.state.type)) {\n          if (expr.name === \"interface\") {\n            return this.flowParseInterface(node);\n          } else if (expr.name === \"type\") {\n            return this.flowParseTypeAlias(node);\n          } else if (expr.name === \"opaque\") {\n            return this.flowParseOpaqueType(node, false);\n          }\n        }\n      }\n\n      return super.parseExpressionStatement(node, expr);\n    }\n\n    // export type\n    shouldParseExportDeclaration(): boolean {\n      const { type } = this.state;\n      if (\n        tokenIsFlowInterfaceOrTypeOrOpaque(type) ||\n        (this.shouldParseEnums() && type === tt._enum)\n      ) {\n        return !this.state.containsEsc;\n      }\n      return super.shouldParseExportDeclaration();\n    }\n\n    isExportDefaultSpecifier(): boolean {\n      const { type } = this.state;\n      if (\n        tokenIsFlowInterfaceOrTypeOrOpaque(type) ||\n        (this.shouldParseEnums() && type === tt._enum)\n      ) {\n        return this.state.containsEsc;\n      }\n\n      return super.isExportDefaultSpecifier();\n    }\n\n    parseExportDefaultExpression(): N.Expression | N.Declaration {\n      if (this.shouldParseEnums() && this.isContextual(tt._enum)) {\n        const node = this.startNode();\n        this.next();\n        return this.flowParseEnumDeclaration(node);\n      }\n      return super.parseExportDefaultExpression();\n    }\n\n    parseConditional(\n      expr: N.Expression,\n      startPos: number,\n      startLoc: Position,\n      refExpressionErrors?: ?ExpressionErrors,\n    ): N.Expression {\n      if (!this.match(tt.question)) return expr;\n\n      if (this.state.maybeInArrowParameters) {\n        const nextCh = this.lookaheadCharCode();\n        // These tokens cannot start an expression, so if one of them follows\n        // ? then we are probably in an arrow function parameters list and we\n        // don't parse the conditional expression.\n        if (\n          nextCh === charCodes.comma || // (a?, b) => c\n          nextCh === charCodes.equalsTo || // (a? = b) => c\n          nextCh === charCodes.colon || // (a?: b) => c\n          nextCh === charCodes.rightParenthesis // (a?) => c\n        ) {\n          /*:: invariant(refExpressionErrors != null) */\n          this.setOptionalParametersError(refExpressionErrors);\n          return expr;\n        }\n      }\n\n      this.expect(tt.question);\n      const state = this.state.clone();\n      const originalNoArrowAt = this.state.noArrowAt;\n      const node = this.startNodeAt(startPos, startLoc);\n      let { consequent, failed } = this.tryParseConditionalConsequent();\n      let [valid, invalid] = this.getArrowLikeExpressions(consequent);\n\n      if (failed || invalid.length > 0) {\n        const noArrowAt = [...originalNoArrowAt];\n\n        if (invalid.length > 0) {\n          this.state = state;\n          this.state.noArrowAt = noArrowAt;\n\n          for (let i = 0; i < invalid.length; i++) {\n            noArrowAt.push(invalid[i].start);\n          }\n\n          ({ consequent, failed } = this.tryParseConditionalConsequent());\n          [valid, invalid] = this.getArrowLikeExpressions(consequent);\n        }\n\n        if (failed && valid.length > 1) {\n          // if there are two or more possible correct ways of parsing, throw an\n          // error.\n          // e.g.   Source: a ? (b): c => (d): e => f\n          //      Result 1: a ? b : (c => ((d): e => f))\n          //      Result 2: a ? ((b): c => d) : (e => f)\n          this.raise(FlowErrors.AmbiguousConditionalArrow, {\n            at: state.startLoc,\n          });\n        }\n\n        if (failed && valid.length === 1) {\n          this.state = state;\n          noArrowAt.push(valid[0].start);\n          this.state.noArrowAt = noArrowAt;\n          ({ consequent, failed } = this.tryParseConditionalConsequent());\n        }\n      }\n\n      this.getArrowLikeExpressions(consequent, true);\n\n      this.state.noArrowAt = originalNoArrowAt;\n      this.expect(tt.colon);\n\n      node.test = expr;\n      node.consequent = consequent;\n      node.alternate = this.forwardNoArrowParamsConversionAt(node, () =>\n        this.parseMaybeAssign(undefined, undefined),\n      );\n\n      return this.finishNode(node, \"ConditionalExpression\");\n    }\n\n    tryParseConditionalConsequent(): {\n      consequent: N.Expression,\n      failed: boolean,\n    } {\n      this.state.noArrowParamsConversionAt.push(this.state.start);\n\n      const consequent = this.parseMaybeAssignAllowIn();\n      const failed = !this.match(tt.colon);\n\n      this.state.noArrowParamsConversionAt.pop();\n\n      return { consequent, failed };\n    }\n\n    // Given an expression, walks through out its arrow functions whose body is\n    // an expression and through out conditional expressions. It returns every\n    // function which has been parsed with a return type but could have been\n    // parenthesized expressions.\n    // These functions are separated into two arrays: one containing the ones\n    // whose parameters can be converted to assignable lists, one containing the\n    // others.\n    getArrowLikeExpressions(\n      node: N.Expression,\n      disallowInvalid?: boolean,\n    ): [N.ArrowFunctionExpression[], N.ArrowFunctionExpression[]] {\n      const stack = [node];\n      const arrows: N.ArrowFunctionExpression[] = [];\n\n      while (stack.length !== 0) {\n        const node = stack.pop();\n        if (node.type === \"ArrowFunctionExpression\") {\n          if (node.typeParameters || !node.returnType) {\n            // This is an arrow expression without ambiguity, so check its parameters\n            this.finishArrowValidation(node);\n          } else {\n            arrows.push(node);\n          }\n          stack.push(node.body);\n        } else if (node.type === \"ConditionalExpression\") {\n          stack.push(node.consequent);\n          stack.push(node.alternate);\n        }\n      }\n\n      if (disallowInvalid) {\n        arrows.forEach(node => this.finishArrowValidation(node));\n        return [arrows, []];\n      }\n\n      return partition(arrows, node =>\n        node.params.every(param => this.isAssignable(param, true)),\n      );\n    }\n\n    finishArrowValidation(node: N.ArrowFunctionExpression) {\n      this.toAssignableList(\n        // node.params is Expression[] instead of $ReadOnlyArray<Pattern> because it\n        // has not been converted yet.\n        ((node.params: any): N.Expression[]),\n        node.extra?.trailingCommaLoc,\n        /* isLHS */ false,\n      );\n      // Enter scope, as checkParams defines bindings\n      this.scope.enter(SCOPE_FUNCTION | SCOPE_ARROW);\n      // Use super's method to force the parameters to be checked\n      super.checkParams(node, false, true);\n      this.scope.exit();\n    }\n\n    forwardNoArrowParamsConversionAt<T>(node: N.Node, parse: () => T): T {\n      let result: T;\n      if (this.state.noArrowParamsConversionAt.indexOf(node.start) !== -1) {\n        this.state.noArrowParamsConversionAt.push(this.state.start);\n        result = parse();\n        this.state.noArrowParamsConversionAt.pop();\n      } else {\n        result = parse();\n      }\n\n      return result;\n    }\n\n    parseParenItem(\n      node: N.Expression,\n      startPos: number,\n      startLoc: Position,\n    ): N.Expression {\n      node = super.parseParenItem(node, startPos, startLoc);\n      if (this.eat(tt.question)) {\n        node.optional = true;\n        // Include questionmark in location of node\n        // Don't use this.finishNode() as otherwise we might process comments twice and\n        // include already consumed parens\n        this.resetEndLocation(node);\n      }\n\n      if (this.match(tt.colon)) {\n        const typeCastNode = this.startNodeAt(startPos, startLoc);\n        typeCastNode.expression = node;\n        typeCastNode.typeAnnotation = this.flowParseTypeAnnotation();\n\n        return this.finishNode(typeCastNode, \"TypeCastExpression\");\n      }\n\n      return node;\n    }\n\n    assertModuleNodeAllowed(node: N.Node) {\n      if (\n        (node.type === \"ImportDeclaration\" &&\n          (node.importKind === \"type\" || node.importKind === \"typeof\")) ||\n        (node.type === \"ExportNamedDeclaration\" &&\n          node.exportKind === \"type\") ||\n        (node.type === \"ExportAllDeclaration\" && node.exportKind === \"type\")\n      ) {\n        // Allow Flowtype imports and exports in all conditions because\n        // Flow itself does not care about 'sourceType'.\n        return;\n      }\n\n      super.assertModuleNodeAllowed(node);\n    }\n\n    parseExport(node: N.Node): N.AnyExport {\n      const decl = super.parseExport(node);\n      if (\n        decl.type === \"ExportNamedDeclaration\" ||\n        decl.type === \"ExportAllDeclaration\"\n      ) {\n        decl.exportKind = decl.exportKind || \"value\";\n      }\n      return decl;\n    }\n\n    parseExportDeclaration(node: N.ExportNamedDeclaration): ?N.Declaration {\n      if (this.isContextual(tt._type)) {\n        node.exportKind = \"type\";\n\n        const declarationNode = this.startNode();\n        this.next();\n\n        if (this.match(tt.braceL)) {\n          // export type { foo, bar };\n          node.specifiers = this.parseExportSpecifiers(\n            /* isInTypeExport */ true,\n          );\n          this.parseExportFrom(node);\n          return null;\n        } else {\n          // export type Foo = Bar;\n          return this.flowParseTypeAlias(declarationNode);\n        }\n      } else if (this.isContextual(tt._opaque)) {\n        node.exportKind = \"type\";\n\n        const declarationNode = this.startNode();\n        this.next();\n        // export opaque type Foo = Bar;\n        return this.flowParseOpaqueType(declarationNode, false);\n      } else if (this.isContextual(tt._interface)) {\n        node.exportKind = \"type\";\n        const declarationNode = this.startNode();\n        this.next();\n        return this.flowParseInterface(declarationNode);\n      } else if (this.shouldParseEnums() && this.isContextual(tt._enum)) {\n        node.exportKind = \"value\";\n        const declarationNode = this.startNode();\n        this.next();\n        return this.flowParseEnumDeclaration(declarationNode);\n      } else {\n        return super.parseExportDeclaration(node);\n      }\n    }\n\n    eatExportStar(node: N.Node): boolean {\n      if (super.eatExportStar(...arguments)) return true;\n\n      if (this.isContextual(tt._type) && this.lookahead().type === tt.star) {\n        node.exportKind = \"type\";\n        this.next();\n        this.next();\n        return true;\n      }\n\n      return false;\n    }\n\n    maybeParseExportNamespaceSpecifier(node: N.Node): boolean {\n      const { startLoc } = this.state;\n      const hasNamespace = super.maybeParseExportNamespaceSpecifier(node);\n      if (hasNamespace && node.exportKind === \"type\") {\n        this.unexpected(startLoc);\n      }\n      return hasNamespace;\n    }\n\n    parseClassId(node: N.Class, isStatement: boolean, optionalId: ?boolean) {\n      super.parseClassId(node, isStatement, optionalId);\n      if (this.match(tt.lt)) {\n        node.typeParameters = this.flowParseTypeParameterDeclaration();\n      }\n    }\n\n    parseClassMember(\n      classBody: N.ClassBody,\n      member: any,\n      state: N.ParseClassMemberState,\n    ): void {\n      const { startLoc } = this.state;\n      if (this.isContextual(tt._declare)) {\n        if (this.parseClassMemberFromModifier(classBody, member)) {\n          // 'declare' is a class element name\n          return;\n        }\n\n        member.declare = true;\n      }\n\n      super.parseClassMember(classBody, member, state);\n\n      if (member.declare) {\n        if (\n          member.type !== \"ClassProperty\" &&\n          member.type !== \"ClassPrivateProperty\" &&\n          member.type !== \"PropertyDefinition\" // Used by estree plugin\n        ) {\n          this.raise(FlowErrors.DeclareClassElement, { at: startLoc });\n        } else if (member.value) {\n          this.raise(FlowErrors.DeclareClassFieldInitializer, {\n            at: member.value,\n          });\n        }\n      }\n    }\n\n    isIterator(word: string): boolean {\n      return word === \"iterator\" || word === \"asyncIterator\";\n    }\n\n    readIterator(): void {\n      const word = super.readWord1();\n      const fullWord = \"@@\" + word;\n\n      // Allow @@iterator and @@asyncIterator as a identifier only inside type\n      if (!this.isIterator(word) || !this.state.inType) {\n        this.raise(Errors.InvalidIdentifier, {\n          at: this.state.curPosition(),\n          identifierName: fullWord,\n        });\n      }\n\n      this.finishToken(tt.name, fullWord);\n    }\n\n    // ensure that inside flow types, we bypass the jsx parser plugin\n    getTokenFromCode(code: number): void {\n      const next = this.input.charCodeAt(this.state.pos + 1);\n      if (code === charCodes.leftCurlyBrace && next === charCodes.verticalBar) {\n        return this.finishOp(tt.braceBarL, 2);\n      } else if (\n        this.state.inType &&\n        (code === charCodes.greaterThan || code === charCodes.lessThan)\n      ) {\n        return this.finishOp(code === charCodes.greaterThan ? tt.gt : tt.lt, 1);\n      } else if (this.state.inType && code === charCodes.questionMark) {\n        if (next === charCodes.dot) {\n          return this.finishOp(tt.questionDot, 2);\n        }\n        // allow double nullable types in Flow: ??string\n        return this.finishOp(tt.question, 1);\n      } else if (\n        isIteratorStart(code, next, this.input.charCodeAt(this.state.pos + 2))\n      ) {\n        this.state.pos += 2; // eat \"@@\"\n        return this.readIterator();\n      } else {\n        return super.getTokenFromCode(code);\n      }\n    }\n\n    isAssignable(node: N.Node, isBinding?: boolean): boolean {\n      if (node.type === \"TypeCastExpression\") {\n        return this.isAssignable(node.expression, isBinding);\n      } else {\n        return super.isAssignable(node, isBinding);\n      }\n    }\n\n    toAssignable(node: N.Node, isLHS: boolean = false): void {\n      if (\n        !isLHS &&\n        node.type === \"AssignmentExpression\" &&\n        node.left.type === \"TypeCastExpression\"\n      ) {\n        node.left = this.typeCastToParameter(node.left);\n      }\n      super.toAssignable(...arguments);\n    }\n\n    // turn type casts that we found in function parameter head into type annotated params\n    toAssignableList(\n      exprList: N.Expression[],\n      trailingCommaLoc?: ?Position,\n      isLHS: boolean,\n    ): void {\n      for (let i = 0; i < exprList.length; i++) {\n        const expr = exprList[i];\n        if (expr?.type === \"TypeCastExpression\") {\n          exprList[i] = this.typeCastToParameter(expr);\n        }\n      }\n      super.toAssignableList(exprList, trailingCommaLoc, isLHS);\n    }\n\n    // this is a list of nodes, from something like a call expression, we need to filter the\n    // type casts that we've found that are illegal in this context\n    toReferencedList(\n      exprList: $ReadOnlyArray<?N.Expression>,\n      isParenthesizedExpr?: boolean,\n    ): $ReadOnlyArray<?N.Expression> {\n      for (let i = 0; i < exprList.length; i++) {\n        const expr = exprList[i];\n        if (\n          expr &&\n          expr.type === \"TypeCastExpression\" &&\n          !expr.extra?.parenthesized &&\n          (exprList.length > 1 || !isParenthesizedExpr)\n        ) {\n          this.raise(FlowErrors.TypeCastInPattern, {\n            at: expr.typeAnnotation,\n          });\n        }\n      }\n\n      return exprList;\n    }\n\n    parseArrayLike(\n      close: TokenType,\n      canBePattern: boolean,\n      isTuple: boolean,\n      refExpressionErrors: ?ExpressionErrors,\n    ): N.ArrayExpression | N.TupleExpression {\n      const node = super.parseArrayLike(\n        close,\n        canBePattern,\n        isTuple,\n        refExpressionErrors,\n      );\n\n      // This could be an array pattern:\n      //   ([a: string, b: string]) => {}\n      // In this case, we don't have to call toReferencedList. We will\n      // call it, if needed, when we are sure that it is a parenthesized\n      // expression by calling toReferencedListDeep.\n      if (canBePattern && !this.state.maybeInArrowParameters) {\n        this.toReferencedList(node.elements);\n      }\n\n      return node;\n    }\n\n    isValidLVal(type: string, ...rest) {\n      return type === \"TypeCastExpression\" || super.isValidLVal(type, ...rest);\n    }\n\n    // parse class property type annotations\n    parseClassProperty(node: N.ClassProperty): N.ClassProperty {\n      if (this.match(tt.colon)) {\n        node.typeAnnotation = this.flowParseTypeAnnotation();\n      }\n      return super.parseClassProperty(node);\n    }\n\n    parseClassPrivateProperty(\n      node: N.ClassPrivateProperty,\n    ): N.ClassPrivateProperty {\n      if (this.match(tt.colon)) {\n        node.typeAnnotation = this.flowParseTypeAnnotation();\n      }\n      return super.parseClassPrivateProperty(node);\n    }\n\n    // determine whether or not we're currently in the position where a class method would appear\n    isClassMethod(): boolean {\n      return this.match(tt.lt) || super.isClassMethod();\n    }\n\n    // determine whether or not we're currently in the position where a class property would appear\n    isClassProperty(): boolean {\n      return this.match(tt.colon) || super.isClassProperty();\n    }\n\n    isNonstaticConstructor(method: N.ClassMethod | N.ClassProperty): boolean {\n      return !this.match(tt.colon) && super.isNonstaticConstructor(method);\n    }\n\n    // parse type parameters for class methods\n    pushClassMethod(\n      classBody: N.ClassBody,\n      method: N.ClassMethod,\n      isGenerator: boolean,\n      isAsync: boolean,\n      isConstructor: boolean,\n      allowsDirectSuper: boolean,\n    ): void {\n      if ((method: $FlowFixMe).variance) {\n        this.unexpected((method: $FlowFixMe).variance.loc.start);\n      }\n      delete (method: $FlowFixMe).variance;\n      if (this.match(tt.lt)) {\n        method.typeParameters = this.flowParseTypeParameterDeclaration();\n      }\n\n      super.pushClassMethod(\n        classBody,\n        method,\n        isGenerator,\n        isAsync,\n        isConstructor,\n        allowsDirectSuper,\n      );\n\n      if (method.params && isConstructor) {\n        const params = method.params;\n        if (params.length > 0 && this.isThisParam(params[0])) {\n          this.raise(FlowErrors.ThisParamBannedInConstructor, { at: method });\n        }\n        // estree support\n      } else if (\n        // $FlowFixMe flow does not know about the face that estree can replace ClassMethod with MethodDefinition\n        method.type === \"MethodDefinition\" &&\n        isConstructor &&\n        method.value.params\n      ) {\n        const params = method.value.params;\n        if (params.length > 0 && this.isThisParam(params[0])) {\n          this.raise(FlowErrors.ThisParamBannedInConstructor, { at: method });\n        }\n      }\n    }\n\n    pushClassPrivateMethod(\n      classBody: N.ClassBody,\n      method: N.ClassPrivateMethod,\n      isGenerator: boolean,\n      isAsync: boolean,\n    ): void {\n      if ((method: $FlowFixMe).variance) {\n        this.unexpected((method: $FlowFixMe).variance.loc.start);\n      }\n      delete (method: $FlowFixMe).variance;\n      if (this.match(tt.lt)) {\n        method.typeParameters = this.flowParseTypeParameterDeclaration();\n      }\n\n      super.pushClassPrivateMethod(classBody, method, isGenerator, isAsync);\n    }\n\n    // parse a the super class type parameters and implements\n    parseClassSuper(node: N.Class): void {\n      super.parseClassSuper(node);\n      if (node.superClass && this.match(tt.lt)) {\n        node.superTypeParameters = this.flowParseTypeParameterInstantiation();\n      }\n      if (this.isContextual(tt._implements)) {\n        this.next();\n        const implemented: N.FlowClassImplements[] = (node.implements = []);\n        do {\n          const node = this.startNode();\n          node.id = this.flowParseRestrictedIdentifier(/*liberal*/ true);\n          if (this.match(tt.lt)) {\n            node.typeParameters = this.flowParseTypeParameterInstantiation();\n          } else {\n            node.typeParameters = null;\n          }\n          implemented.push(this.finishNode(node, \"ClassImplements\"));\n        } while (this.eat(tt.comma));\n      }\n    }\n\n    checkGetterSetterParams(method: N.ObjectMethod | N.ClassMethod): void {\n      super.checkGetterSetterParams(method);\n      const params = this.getObjectOrClassMethodParams(method);\n      if (params.length > 0) {\n        const param = params[0];\n        if (this.isThisParam(param) && method.kind === \"get\") {\n          this.raise(FlowErrors.GetterMayNotHaveThisParam, { at: param });\n        } else if (this.isThisParam(param)) {\n          this.raise(FlowErrors.SetterMayNotHaveThisParam, { at: param });\n        }\n      }\n    }\n\n    parsePropertyNamePrefixOperator(\n      node: N.ObjectOrClassMember | N.ClassMember,\n    ): void {\n      node.variance = this.flowParseVariance();\n    }\n\n    // parse type parameters for object method shorthand\n    parseObjPropValue(\n      prop: N.ObjectMember,\n      startPos: ?number,\n      startLoc: ?Position,\n      isGenerator: boolean,\n      isAsync: boolean,\n      isPattern: boolean,\n      isAccessor: boolean,\n      refExpressionErrors: ?ExpressionErrors,\n    ): void {\n      if ((prop: $FlowFixMe).variance) {\n        this.unexpected((prop: $FlowFixMe).variance.loc.start);\n      }\n      delete (prop: $FlowFixMe).variance;\n\n      let typeParameters;\n\n      // method shorthand\n      if (this.match(tt.lt) && !isAccessor) {\n        typeParameters = this.flowParseTypeParameterDeclaration();\n        if (!this.match(tt.parenL)) this.unexpected();\n      }\n\n      super.parseObjPropValue(\n        prop,\n        startPos,\n        startLoc,\n        isGenerator,\n        isAsync,\n        isPattern,\n        isAccessor,\n        refExpressionErrors,\n      );\n\n      // add typeParameters if we found them\n      if (typeParameters) {\n        (prop.value || prop).typeParameters = typeParameters;\n      }\n    }\n\n    parseAssignableListItemTypes(param: N.Pattern): N.Pattern {\n      if (this.eat(tt.question)) {\n        if (param.type !== \"Identifier\") {\n          this.raise(FlowErrors.PatternIsOptional, { at: param });\n        }\n        if (this.isThisParam(param)) {\n          this.raise(FlowErrors.ThisParamMayNotBeOptional, { at: param });\n        }\n\n        ((param: any): N.Identifier).optional = true;\n      }\n      if (this.match(tt.colon)) {\n        param.typeAnnotation = this.flowParseTypeAnnotation();\n      } else if (this.isThisParam(param)) {\n        this.raise(FlowErrors.ThisParamAnnotationRequired, { at: param });\n      }\n\n      if (this.match(tt.eq) && this.isThisParam(param)) {\n        this.raise(FlowErrors.ThisParamNoDefault, { at: param });\n      }\n\n      this.resetEndLocation(param);\n      return param;\n    }\n\n    parseMaybeDefault(\n      startPos?: ?number,\n      startLoc?: ?Position,\n      left?: ?N.Pattern,\n    ): N.Pattern {\n      const node = super.parseMaybeDefault(startPos, startLoc, left);\n\n      if (\n        node.type === \"AssignmentPattern\" &&\n        node.typeAnnotation &&\n        node.right.start < node.typeAnnotation.start\n      ) {\n        this.raise(FlowErrors.TypeBeforeInitializer, {\n          at: node.typeAnnotation,\n        });\n      }\n\n      return node;\n    }\n\n    shouldParseDefaultImport(node: N.ImportDeclaration): boolean {\n      if (!hasTypeImportKind(node)) {\n        return super.shouldParseDefaultImport(node);\n      }\n\n      return isMaybeDefaultImport(this.state.type);\n    }\n\n    parseImportSpecifierLocal(\n      node: N.ImportDeclaration,\n      specifier: N.Node,\n      type: string,\n    ): void {\n      specifier.local = hasTypeImportKind(node)\n        ? this.flowParseRestrictedIdentifier(\n            /* liberal */ true,\n            /* declaration */ true,\n          )\n        : this.parseIdentifier();\n\n      node.specifiers.push(this.finishImportSpecifier(specifier, type));\n    }\n\n    // parse typeof and type imports\n    maybeParseDefaultImportSpecifier(node: N.ImportDeclaration): boolean {\n      node.importKind = \"value\";\n\n      let kind = null;\n      if (this.match(tt._typeof)) {\n        kind = \"typeof\";\n      } else if (this.isContextual(tt._type)) {\n        kind = \"type\";\n      }\n      if (kind) {\n        const lh = this.lookahead();\n        const { type } = lh;\n\n        // import type * is not allowed\n        if (kind === \"type\" && type === tt.star) {\n          // FIXME: lh.start?\n          this.unexpected(null, lh.type);\n        }\n\n        if (\n          isMaybeDefaultImport(type) ||\n          type === tt.braceL ||\n          type === tt.star\n        ) {\n          this.next();\n          node.importKind = kind;\n        }\n      }\n\n      return super.maybeParseDefaultImportSpecifier(node);\n    }\n\n    // parse import-type/typeof shorthand\n    parseImportSpecifier(\n      specifier: any,\n      importedIsString: boolean,\n      isInTypeOnlyImport: boolean,\n      // eslint-disable-next-line no-unused-vars\n      isMaybeTypeOnly: boolean,\n    ): N.ImportSpecifier {\n      const firstIdent = specifier.imported;\n\n      let specifierTypeKind = null;\n      if (firstIdent.type === \"Identifier\") {\n        if (firstIdent.name === \"type\") {\n          specifierTypeKind = \"type\";\n        } else if (firstIdent.name === \"typeof\") {\n          specifierTypeKind = \"typeof\";\n        }\n      }\n\n      let isBinding = false;\n      if (this.isContextual(tt._as) && !this.isLookaheadContextual(\"as\")) {\n        const as_ident = this.parseIdentifier(true);\n        if (\n          specifierTypeKind !== null &&\n          !tokenIsKeywordOrIdentifier(this.state.type)\n        ) {\n          // `import {type as ,` or `import {type as }`\n          specifier.imported = as_ident;\n          specifier.importKind = specifierTypeKind;\n          specifier.local = cloneIdentifier(as_ident);\n        } else {\n          // `import {type as foo`\n          specifier.imported = firstIdent;\n          specifier.importKind = null;\n          specifier.local = this.parseIdentifier();\n        }\n      } else {\n        if (\n          specifierTypeKind !== null &&\n          tokenIsKeywordOrIdentifier(this.state.type)\n        ) {\n          // `import {type foo`\n          specifier.imported = this.parseIdentifier(true);\n          specifier.importKind = specifierTypeKind;\n        } else {\n          if (importedIsString) {\n            /*:: invariant(firstIdent instanceof N.StringLiteral) */\n            throw this.raise(Errors.ImportBindingIsString, {\n              at: specifier,\n              importName: firstIdent.value,\n            });\n          }\n          /*:: invariant(firstIdent instanceof N.Node) */\n          specifier.imported = firstIdent;\n          specifier.importKind = null;\n        }\n\n        if (this.eatContextual(tt._as)) {\n          specifier.local = this.parseIdentifier();\n        } else {\n          isBinding = true;\n          specifier.local = cloneIdentifier(specifier.imported);\n        }\n      }\n\n      const specifierIsTypeImport = hasTypeImportKind(specifier);\n\n      if (isInTypeOnlyImport && specifierIsTypeImport) {\n        this.raise(FlowErrors.ImportTypeShorthandOnlyInPureImport, {\n          at: specifier,\n        });\n      }\n\n      if (isInTypeOnlyImport || specifierIsTypeImport) {\n        this.checkReservedType(\n          specifier.local.name,\n          specifier.local.loc.start,\n          /* declaration */ true,\n        );\n      }\n\n      if (isBinding && !isInTypeOnlyImport && !specifierIsTypeImport) {\n        this.checkReservedWord(\n          specifier.local.name,\n          specifier.loc.start,\n          true,\n          true,\n        );\n      }\n\n      return this.finishImportSpecifier(specifier, \"ImportSpecifier\");\n    }\n\n    parseBindingAtom(): N.Pattern {\n      switch (this.state.type) {\n        case tt._this:\n          // \"this\" may be the name of a parameter, so allow it.\n          return this.parseIdentifier(/* liberal */ true);\n        default:\n          return super.parseBindingAtom();\n      }\n    }\n\n    // parse function type parameters - function foo<T>() {}\n    parseFunctionParams(node: N.Function, allowModifiers?: boolean): void {\n      // $FlowFixMe\n      const kind = node.kind;\n      if (kind !== \"get\" && kind !== \"set\" && this.match(tt.lt)) {\n        node.typeParameters = this.flowParseTypeParameterDeclaration();\n      }\n      super.parseFunctionParams(node, allowModifiers);\n    }\n\n    // parse flow type annotations on variable declarator heads - let foo: string = bar\n    parseVarId(\n      decl: N.VariableDeclarator,\n      kind: \"var\" | \"let\" | \"const\",\n    ): void {\n      super.parseVarId(decl, kind);\n      if (this.match(tt.colon)) {\n        decl.id.typeAnnotation = this.flowParseTypeAnnotation();\n        this.resetEndLocation(decl.id); // set end position to end of type\n      }\n    }\n\n    // parse the return type of an async arrow function - let foo = (async (): number => {});\n    parseAsyncArrowFromCallExpression(\n      node: N.ArrowFunctionExpression,\n      call: N.CallExpression,\n    ): N.ArrowFunctionExpression {\n      if (this.match(tt.colon)) {\n        const oldNoAnonFunctionType = this.state.noAnonFunctionType;\n        this.state.noAnonFunctionType = true;\n        node.returnType = this.flowParseTypeAnnotation();\n        this.state.noAnonFunctionType = oldNoAnonFunctionType;\n      }\n\n      return super.parseAsyncArrowFromCallExpression(node, call);\n    }\n\n    // todo description\n    shouldParseAsyncArrow(): boolean {\n      return this.match(tt.colon) || super.shouldParseAsyncArrow();\n    }\n\n    // We need to support type parameter declarations for arrow functions. This\n    // is tricky. There are three situations we need to handle\n    //\n    // 1. This is either JSX or an arrow function. We'll try JSX first. If that\n    //    fails, we'll try an arrow function. If that fails, we'll throw the JSX\n    //    error.\n    // 2. This is an arrow function. We'll parse the type parameter declaration,\n    //    parse the rest, make sure the rest is an arrow function, and go from\n    //    there\n    // 3. This is neither. Just call the super method\n    parseMaybeAssign(\n      refExpressionErrors?: ?ExpressionErrors,\n      afterLeftParse?: Function,\n    ): N.Expression {\n      let state = null;\n\n      let jsx;\n\n      if (\n        this.hasPlugin(\"jsx\") &&\n        (this.match(tt.jsxTagStart) || this.match(tt.lt))\n      ) {\n        state = this.state.clone();\n\n        jsx = this.tryParse(\n          () => super.parseMaybeAssign(refExpressionErrors, afterLeftParse),\n          state,\n        );\n\n        /*:: invariant(!jsx.aborted) */\n        /*:: invariant(jsx.node != null) */\n        if (!jsx.error) return jsx.node;\n\n        // Remove `tc.j_expr` and `tc.j_oTag` from context added\n        // by parsing `jsxTagStart` to stop the JSX plugin from\n        // messing with the tokens\n        const { context } = this.state;\n        const currentContext = context[context.length - 1];\n        if (currentContext === tc.j_oTag || currentContext === tc.j_expr) {\n          context.pop();\n        }\n      }\n\n      if (jsx?.error || this.match(tt.lt)) {\n        state = state || this.state.clone();\n\n        let typeParameters;\n\n        const arrow = this.tryParse(abort => {\n          typeParameters = this.flowParseTypeParameterDeclaration();\n\n          const arrowExpression = this.forwardNoArrowParamsConversionAt(\n            typeParameters,\n            () => {\n              const result = super.parseMaybeAssign(\n                refExpressionErrors,\n                afterLeftParse,\n              );\n\n              this.resetStartLocationFromNode(result, typeParameters);\n\n              return result;\n            },\n          );\n\n          // <T>(() => {});\n          // <T>(() => {}: any);\n          if (arrowExpression.extra?.parenthesized) abort();\n\n          // The above can return a TypeCastExpression when the arrow\n          // expression is not wrapped in parens. See also `this.parseParenItem`.\n          // (<T>() => {}: any);\n          const expr = this.maybeUnwrapTypeCastExpression(arrowExpression);\n\n          if (expr.type !== \"ArrowFunctionExpression\") abort();\n\n          expr.typeParameters = typeParameters;\n          this.resetStartLocationFromNode(expr, typeParameters);\n\n          return arrowExpression;\n        }, state);\n\n        let arrowExpression: ?(\n          | N.ArrowFunctionExpression\n          | N.TypeCastExpression\n        ) = null;\n\n        if (\n          arrow.node &&\n          this.maybeUnwrapTypeCastExpression(arrow.node).type ===\n            \"ArrowFunctionExpression\"\n        ) {\n          if (!arrow.error && !arrow.aborted) {\n            // <T> async () => {}\n            if (arrow.node.async) {\n              /*:: invariant(typeParameters) */\n              this.raise(\n                FlowErrors.UnexpectedTypeParameterBeforeAsyncArrowFunction,\n                { at: typeParameters },\n              );\n            }\n\n            return arrow.node;\n          }\n\n          arrowExpression = arrow.node;\n        }\n\n        // If we are here, both JSX and Flow parsing attempts failed.\n        // Give the precedence to the JSX error, except if JSX had an\n        // unrecoverable error while Flow didn't.\n        // If the error is recoverable, we can only re-report it if there is\n        // a node we can return.\n\n        if (jsx?.node) {\n          /*:: invariant(jsx.failState) */\n          this.state = jsx.failState;\n          return jsx.node;\n        }\n\n        if (arrowExpression) {\n          /*:: invariant(arrow.failState) */\n          this.state = arrow.failState;\n          return arrowExpression;\n        }\n\n        if (jsx?.thrown) throw jsx.error;\n        if (arrow.thrown) throw arrow.error;\n\n        /*:: invariant(typeParameters) */\n        throw this.raise(FlowErrors.UnexpectedTokenAfterTypeParameter, {\n          at: typeParameters,\n        });\n      }\n\n      return super.parseMaybeAssign(refExpressionErrors, afterLeftParse);\n    }\n\n    // handle return types for arrow functions\n    parseArrow(node: N.ArrowFunctionExpression): ?N.ArrowFunctionExpression {\n      if (this.match(tt.colon)) {\n        const result = this.tryParse(() => {\n          const oldNoAnonFunctionType = this.state.noAnonFunctionType;\n          this.state.noAnonFunctionType = true;\n\n          const typeNode = this.startNode();\n\n          [\n            // $FlowFixMe (destructuring not supported yet)\n            typeNode.typeAnnotation,\n            // $FlowFixMe (destructuring not supported yet)\n            node.predicate,\n          ] = this.flowParseTypeAndPredicateInitialiser();\n\n          this.state.noAnonFunctionType = oldNoAnonFunctionType;\n\n          if (this.canInsertSemicolon()) this.unexpected();\n          if (!this.match(tt.arrow)) this.unexpected();\n\n          return typeNode;\n        });\n\n        if (result.thrown) return null;\n        /*:: invariant(result.node) */\n\n        if (result.error) this.state = result.failState;\n\n        // assign after it is clear it is an arrow\n        node.returnType = result.node.typeAnnotation\n          ? this.finishNode(result.node, \"TypeAnnotation\")\n          : null;\n      }\n\n      return super.parseArrow(node);\n    }\n\n    shouldParseArrow(params: Array<N.Node>): boolean {\n      return this.match(tt.colon) || super.shouldParseArrow(params);\n    }\n\n    setArrowFunctionParameters(\n      node: N.ArrowFunctionExpression,\n      params: N.Expression[],\n    ): void {\n      if (this.state.noArrowParamsConversionAt.indexOf(node.start) !== -1) {\n        node.params = params;\n      } else {\n        super.setArrowFunctionParameters(node, params);\n      }\n    }\n\n    checkParams(\n      node: N.Function,\n      allowDuplicates: boolean,\n      isArrowFunction: ?boolean,\n    ): void {\n      if (\n        isArrowFunction &&\n        this.state.noArrowParamsConversionAt.indexOf(node.start) !== -1\n      ) {\n        return;\n      }\n\n      // ensure the `this` param is first, if it exists\n      for (let i = 0; i < node.params.length; i++) {\n        if (this.isThisParam(node.params[i]) && i > 0) {\n          this.raise(FlowErrors.ThisParamMustBeFirst, { at: node.params[i] });\n        }\n      }\n\n      return super.checkParams(...arguments);\n    }\n\n    parseParenAndDistinguishExpression(canBeArrow: boolean): N.Expression {\n      return super.parseParenAndDistinguishExpression(\n        canBeArrow && this.state.noArrowAt.indexOf(this.state.start) === -1,\n      );\n    }\n\n    parseSubscripts(\n      base: N.Expression,\n      startPos: number,\n      startLoc: Position,\n      noCalls?: ?boolean,\n    ): N.Expression {\n      if (\n        base.type === \"Identifier\" &&\n        base.name === \"async\" &&\n        this.state.noArrowAt.indexOf(startPos) !== -1\n      ) {\n        this.next();\n\n        const node = this.startNodeAt(startPos, startLoc);\n        node.callee = base;\n        node.arguments = this.parseCallExpressionArguments(tt.parenR, false);\n        base = this.finishNode(node, \"CallExpression\");\n      } else if (\n        base.type === \"Identifier\" &&\n        base.name === \"async\" &&\n        this.match(tt.lt)\n      ) {\n        const state = this.state.clone();\n        const arrow = this.tryParse(\n          abort =>\n            this.parseAsyncArrowWithTypeParameters(startPos, startLoc) ||\n            abort(),\n          state,\n        );\n\n        /*:: invariant(arrow.node != null) */\n        if (!arrow.error && !arrow.aborted) return arrow.node;\n\n        const result = this.tryParse(\n          () => super.parseSubscripts(base, startPos, startLoc, noCalls),\n          state,\n        );\n\n        if (result.node && !result.error) return result.node;\n\n        if (arrow.node) {\n          this.state = arrow.failState;\n          return arrow.node;\n        }\n\n        if (result.node) {\n          this.state = result.failState;\n          return result.node;\n        }\n\n        throw arrow.error || result.error;\n      }\n\n      return super.parseSubscripts(base, startPos, startLoc, noCalls);\n    }\n\n    parseSubscript(\n      base: N.Expression,\n      startPos: number,\n      startLoc: Position,\n      noCalls: ?boolean,\n      subscriptState: N.ParseSubscriptState,\n    ): N.Expression {\n      if (this.match(tt.questionDot) && this.isLookaheadToken_lt()) {\n        subscriptState.optionalChainMember = true;\n        if (noCalls) {\n          subscriptState.stop = true;\n          return base;\n        }\n        this.next();\n        const node: N.OptionalCallExpression = this.startNodeAt(\n          startPos,\n          startLoc,\n        );\n        node.callee = base;\n        node.typeArguments = this.flowParseTypeParameterInstantiation();\n        this.expect(tt.parenL);\n        // $FlowFixMe\n        node.arguments = this.parseCallExpressionArguments(tt.parenR, false);\n        node.optional = true;\n        return this.finishCallExpression(node, /* optional */ true);\n      } else if (!noCalls && this.shouldParseTypes() && this.match(tt.lt)) {\n        const node = this.startNodeAt(startPos, startLoc);\n        node.callee = base;\n\n        const result = this.tryParse(() => {\n          node.typeArguments =\n            this.flowParseTypeParameterInstantiationCallOrNew();\n          this.expect(tt.parenL);\n          node.arguments = this.parseCallExpressionArguments(tt.parenR, false);\n          if (subscriptState.optionalChainMember) node.optional = false;\n          return this.finishCallExpression(\n            node,\n            subscriptState.optionalChainMember,\n          );\n        });\n\n        if (result.node) {\n          if (result.error) this.state = result.failState;\n          return result.node;\n        }\n      }\n\n      return super.parseSubscript(\n        base,\n        startPos,\n        startLoc,\n        noCalls,\n        subscriptState,\n      );\n    }\n\n    parseNewCallee(node: N.NewExpression): void {\n      super.parseNewCallee(node);\n\n      let targs = null;\n      if (this.shouldParseTypes() && this.match(tt.lt)) {\n        targs = this.tryParse(() =>\n          this.flowParseTypeParameterInstantiationCallOrNew(),\n        ).node;\n      }\n      node.typeArguments = targs;\n    }\n\n    parseAsyncArrowWithTypeParameters(\n      startPos: number,\n      startLoc: Position,\n    ): ?N.ArrowFunctionExpression {\n      const node = this.startNodeAt(startPos, startLoc);\n      this.parseFunctionParams(node);\n      if (!this.parseArrow(node)) return;\n      return this.parseArrowExpression(\n        node,\n        /* params */ undefined,\n        /* isAsync */ true,\n      );\n    }\n\n    readToken_mult_modulo(code: number): void {\n      const next = this.input.charCodeAt(this.state.pos + 1);\n      if (\n        code === charCodes.asterisk &&\n        next === charCodes.slash &&\n        this.state.hasFlowComment\n      ) {\n        this.state.hasFlowComment = false;\n        this.state.pos += 2;\n        this.nextToken();\n        return;\n      }\n\n      super.readToken_mult_modulo(code);\n    }\n\n    readToken_pipe_amp(code: number): void {\n      const next = this.input.charCodeAt(this.state.pos + 1);\n      if (\n        code === charCodes.verticalBar &&\n        next === charCodes.rightCurlyBrace\n      ) {\n        // '|}'\n        this.finishOp(tt.braceBarR, 2);\n        return;\n      }\n\n      super.readToken_pipe_amp(code);\n    }\n\n    parseTopLevel(file: N.File, program: N.Program): N.File {\n      const fileNode = super.parseTopLevel(file, program);\n      if (this.state.hasFlowComment) {\n        this.raise(FlowErrors.UnterminatedFlowComment, {\n          at: this.state.curPosition(),\n        });\n      }\n      return fileNode;\n    }\n\n    skipBlockComment(): N.CommentBlock | void {\n      if (this.hasPlugin(\"flowComments\") && this.skipFlowComment()) {\n        if (this.state.hasFlowComment) {\n          throw this.raise(FlowErrors.NestedFlowComment, {\n            at: this.state.startLoc,\n          });\n        }\n        this.hasFlowCommentCompletion();\n        this.state.pos += this.skipFlowComment();\n        this.state.hasFlowComment = true;\n        return;\n      }\n\n      if (this.state.hasFlowComment) {\n        const end = this.input.indexOf(\"*-/\", this.state.pos + 2);\n        if (end === -1) {\n          throw this.raise(Errors.UnterminatedComment, {\n            at: this.state.curPosition(),\n          });\n        }\n        this.state.pos = end + 2 + 3;\n        return;\n      }\n\n      return super.skipBlockComment();\n    }\n\n    skipFlowComment(): number | boolean {\n      const { pos } = this.state;\n      let shiftToFirstNonWhiteSpace = 2;\n      while (\n        [charCodes.space, charCodes.tab].includes(\n          this.input.charCodeAt(pos + shiftToFirstNonWhiteSpace),\n        )\n      ) {\n        shiftToFirstNonWhiteSpace++;\n      }\n\n      const ch2 = this.input.charCodeAt(shiftToFirstNonWhiteSpace + pos);\n      const ch3 = this.input.charCodeAt(shiftToFirstNonWhiteSpace + pos + 1);\n\n      if (ch2 === charCodes.colon && ch3 === charCodes.colon) {\n        return shiftToFirstNonWhiteSpace + 2; // check for /*::\n      }\n      if (\n        this.input.slice(\n          shiftToFirstNonWhiteSpace + pos,\n          shiftToFirstNonWhiteSpace + pos + 12,\n        ) === \"flow-include\"\n      ) {\n        return shiftToFirstNonWhiteSpace + 12; // check for /*flow-include\n      }\n      if (ch2 === charCodes.colon && ch3 !== charCodes.colon) {\n        return shiftToFirstNonWhiteSpace; // check for /*:, advance up to :\n      }\n      return false;\n    }\n\n    hasFlowCommentCompletion(): void {\n      const end = this.input.indexOf(\"*/\", this.state.pos);\n      if (end === -1) {\n        throw this.raise(Errors.UnterminatedComment, {\n          at: this.state.curPosition(),\n        });\n      }\n    }\n\n    // Flow enum parsing\n\n    flowEnumErrorBooleanMemberNotInitialized(\n      loc: Position,\n      { enumName, memberName }: { enumName: string, memberName: string },\n    ): void {\n      this.raise(FlowErrors.EnumBooleanMemberNotInitialized, {\n        at: loc,\n        memberName,\n        enumName,\n      });\n    }\n\n    flowEnumErrorInvalidMemberInitializer(\n      loc: Position,\n      enumContext: EnumContext,\n    ) {\n      return this.raise(\n        !enumContext.explicitType\n          ? FlowErrors.EnumInvalidMemberInitializerUnknownType\n          : enumContext.explicitType === \"symbol\"\n          ? FlowErrors.EnumInvalidMemberInitializerSymbolType\n          : FlowErrors.EnumInvalidMemberInitializerPrimaryType,\n        {\n          at: loc,\n          ...enumContext,\n        },\n      );\n    }\n\n    flowEnumErrorNumberMemberNotInitialized(\n      loc: Position,\n      { enumName, memberName }: { enumName: string, memberName: string },\n    ): void {\n      this.raise(FlowErrors.EnumNumberMemberNotInitialized, {\n        at: loc,\n        enumName,\n        memberName,\n      });\n    }\n\n    flowEnumErrorStringMemberInconsistentlyInitailized(\n      node: N.Node,\n      { enumName }: { enumName: string },\n    ): void {\n      this.raise(FlowErrors.EnumStringMemberInconsistentlyInitailized, {\n        at: node,\n        enumName,\n      });\n    }\n\n    flowEnumMemberInit(): EnumMemberInit {\n      const startLoc = this.state.startLoc;\n      const endOfInit = () => this.match(tt.comma) || this.match(tt.braceR);\n      switch (this.state.type) {\n        case tt.num: {\n          const literal = this.parseNumericLiteral(this.state.value);\n          if (endOfInit()) {\n            return { type: \"number\", loc: literal.loc.start, value: literal };\n          }\n          return { type: \"invalid\", loc: startLoc };\n        }\n        case tt.string: {\n          const literal = this.parseStringLiteral(this.state.value);\n          if (endOfInit()) {\n            return { type: \"string\", loc: literal.loc.start, value: literal };\n          }\n          return { type: \"invalid\", loc: startLoc };\n        }\n        case tt._true:\n        case tt._false: {\n          const literal = this.parseBooleanLiteral(this.match(tt._true));\n          if (endOfInit()) {\n            return {\n              type: \"boolean\",\n              loc: literal.loc.start,\n              value: literal,\n            };\n          }\n          return { type: \"invalid\", loc: startLoc };\n        }\n        default:\n          return { type: \"invalid\", loc: startLoc };\n      }\n    }\n\n    flowEnumMemberRaw(): { id: N.Node, init: EnumMemberInit } {\n      const loc = this.state.startLoc;\n      const id = this.parseIdentifier(true);\n      const init = this.eat(tt.eq)\n        ? this.flowEnumMemberInit()\n        : { type: \"none\", loc };\n      return { id, init };\n    }\n\n    flowEnumCheckExplicitTypeMismatch(\n      loc: Position,\n      context: EnumContext,\n      expectedType: EnumExplicitType,\n    ): void {\n      const { explicitType } = context;\n      if (explicitType === null) {\n        return;\n      }\n      if (explicitType !== expectedType) {\n        this.flowEnumErrorInvalidMemberInitializer(loc, context);\n      }\n    }\n\n    flowEnumMembers({\n      enumName,\n      explicitType,\n    }: {\n      enumName: string,\n      explicitType: EnumExplicitType,\n    }): {|\n      members: {|\n        booleanMembers: Array<N.Node>,\n        numberMembers: Array<N.Node>,\n        stringMembers: Array<N.Node>,\n        defaultedMembers: Array<N.Node>,\n      |},\n      hasUnknownMembers: boolean,\n    |} {\n      const seenNames = new Set();\n      const members = {\n        booleanMembers: [],\n        numberMembers: [],\n        stringMembers: [],\n        defaultedMembers: [],\n      };\n      let hasUnknownMembers = false;\n      while (!this.match(tt.braceR)) {\n        if (this.eat(tt.ellipsis)) {\n          hasUnknownMembers = true;\n          break;\n        }\n        const memberNode = this.startNode();\n        const { id, init } = this.flowEnumMemberRaw();\n        const memberName = id.name;\n        if (memberName === \"\") {\n          continue;\n        }\n        if (/^[a-z]/.test(memberName)) {\n          this.raise(FlowErrors.EnumInvalidMemberName, {\n            at: id,\n            memberName,\n            suggestion: memberName[0].toUpperCase() + memberName.slice(1),\n            enumName,\n          });\n        }\n        if (seenNames.has(memberName)) {\n          this.raise(FlowErrors.EnumDuplicateMemberName, {\n            at: id,\n            memberName,\n            enumName,\n          });\n        }\n        seenNames.add(memberName);\n        const context = { enumName, explicitType, memberName };\n        memberNode.id = id;\n        switch (init.type) {\n          case \"boolean\": {\n            this.flowEnumCheckExplicitTypeMismatch(\n              init.loc,\n              context,\n              \"boolean\",\n            );\n            memberNode.init = init.value;\n            members.booleanMembers.push(\n              this.finishNode(memberNode, \"EnumBooleanMember\"),\n            );\n            break;\n          }\n          case \"number\": {\n            this.flowEnumCheckExplicitTypeMismatch(init.loc, context, \"number\");\n            memberNode.init = init.value;\n            members.numberMembers.push(\n              this.finishNode(memberNode, \"EnumNumberMember\"),\n            );\n            break;\n          }\n          case \"string\": {\n            this.flowEnumCheckExplicitTypeMismatch(init.loc, context, \"string\");\n            memberNode.init = init.value;\n            members.stringMembers.push(\n              this.finishNode(memberNode, \"EnumStringMember\"),\n            );\n            break;\n          }\n          case \"invalid\": {\n            throw this.flowEnumErrorInvalidMemberInitializer(init.loc, context);\n          }\n          case \"none\": {\n            switch (explicitType) {\n              case \"boolean\":\n                this.flowEnumErrorBooleanMemberNotInitialized(\n                  init.loc,\n                  context,\n                );\n                break;\n              case \"number\":\n                this.flowEnumErrorNumberMemberNotInitialized(init.loc, context);\n                break;\n              default:\n                members.defaultedMembers.push(\n                  this.finishNode(memberNode, \"EnumDefaultedMember\"),\n                );\n            }\n          }\n        }\n\n        if (!this.match(tt.braceR)) {\n          this.expect(tt.comma);\n        }\n      }\n      return { members, hasUnknownMembers };\n    }\n\n    flowEnumStringMembers(\n      initializedMembers: Array<N.Node>,\n      defaultedMembers: Array<N.Node>,\n      { enumName }: { enumName: string },\n    ): Array<N.Node> {\n      if (initializedMembers.length === 0) {\n        return defaultedMembers;\n      } else if (defaultedMembers.length === 0) {\n        return initializedMembers;\n      } else if (defaultedMembers.length > initializedMembers.length) {\n        for (const member of initializedMembers) {\n          this.flowEnumErrorStringMemberInconsistentlyInitailized(member, {\n            enumName,\n          });\n        }\n        return defaultedMembers;\n      } else {\n        for (const member of defaultedMembers) {\n          this.flowEnumErrorStringMemberInconsistentlyInitailized(member, {\n            enumName,\n          });\n        }\n        return initializedMembers;\n      }\n    }\n\n    flowEnumParseExplicitType({\n      enumName,\n    }: {\n      enumName: string,\n    }): EnumExplicitType {\n      if (!this.eatContextual(tt._of)) return null;\n\n      if (!tokenIsIdentifier(this.state.type)) {\n        throw this.raise(FlowErrors.EnumInvalidExplicitTypeUnknownSupplied, {\n          at: this.state.startLoc,\n          enumName,\n        });\n      }\n\n      const { value } = this.state;\n      this.next();\n\n      if (\n        value !== \"boolean\" &&\n        value !== \"number\" &&\n        value !== \"string\" &&\n        value !== \"symbol\"\n      ) {\n        this.raise(FlowErrors.EnumInvalidExplicitType, {\n          at: this.state.startLoc,\n          enumName,\n          invalidEnumType: value,\n        });\n      }\n\n      return value;\n    }\n\n    flowEnumBody(node: N.Node, id: N.Node): N.Node {\n      const enumName = id.name;\n      const nameLoc = id.loc.start;\n      const explicitType = this.flowEnumParseExplicitType({ enumName });\n      this.expect(tt.braceL);\n      const { members, hasUnknownMembers } = this.flowEnumMembers({\n        enumName,\n        explicitType,\n      });\n      node.hasUnknownMembers = hasUnknownMembers;\n\n      switch (explicitType) {\n        case \"boolean\":\n          node.explicitType = true;\n          node.members = members.booleanMembers;\n          this.expect(tt.braceR);\n          return this.finishNode(node, \"EnumBooleanBody\");\n        case \"number\":\n          node.explicitType = true;\n          node.members = members.numberMembers;\n          this.expect(tt.braceR);\n          return this.finishNode(node, \"EnumNumberBody\");\n        case \"string\":\n          node.explicitType = true;\n          node.members = this.flowEnumStringMembers(\n            members.stringMembers,\n            members.defaultedMembers,\n            { enumName },\n          );\n          this.expect(tt.braceR);\n          return this.finishNode(node, \"EnumStringBody\");\n        case \"symbol\":\n          node.members = members.defaultedMembers;\n          this.expect(tt.braceR);\n          return this.finishNode(node, \"EnumSymbolBody\");\n        default: {\n          // `explicitType` is `null`\n          const empty = () => {\n            node.members = [];\n            this.expect(tt.braceR);\n            return this.finishNode(node, \"EnumStringBody\");\n          };\n          node.explicitType = false;\n\n          const boolsLen = members.booleanMembers.length;\n          const numsLen = members.numberMembers.length;\n          const strsLen = members.stringMembers.length;\n          const defaultedLen = members.defaultedMembers.length;\n\n          if (!boolsLen && !numsLen && !strsLen && !defaultedLen) {\n            return empty();\n          } else if (!boolsLen && !numsLen) {\n            node.members = this.flowEnumStringMembers(\n              members.stringMembers,\n              members.defaultedMembers,\n              { enumName },\n            );\n            this.expect(tt.braceR);\n            return this.finishNode(node, \"EnumStringBody\");\n          } else if (!numsLen && !strsLen && boolsLen >= defaultedLen) {\n            for (const member of members.defaultedMembers) {\n              this.flowEnumErrorBooleanMemberNotInitialized(member.loc.start, {\n                enumName,\n                memberName: member.id.name,\n              });\n            }\n            node.members = members.booleanMembers;\n            this.expect(tt.braceR);\n            return this.finishNode(node, \"EnumBooleanBody\");\n          } else if (!boolsLen && !strsLen && numsLen >= defaultedLen) {\n            for (const member of members.defaultedMembers) {\n              this.flowEnumErrorNumberMemberNotInitialized(member.loc.start, {\n                enumName,\n                memberName: member.id.name,\n              });\n            }\n            node.members = members.numberMembers;\n            this.expect(tt.braceR);\n            return this.finishNode(node, \"EnumNumberBody\");\n          } else {\n            this.raise(FlowErrors.EnumInconsistentMemberValues, {\n              at: nameLoc,\n              enumName,\n            });\n            return empty();\n          }\n        }\n      }\n    }\n\n    flowParseEnumDeclaration(node: N.Node): N.Node {\n      const id = this.parseIdentifier();\n      node.id = id;\n      node.body = this.flowEnumBody(this.startNode(), id);\n      return this.finishNode(node, \"EnumDeclaration\");\n    }\n\n    // check if the next token is a tt.lt\n    isLookaheadToken_lt(): boolean {\n      const next = this.nextTokenStart();\n      if (this.input.charCodeAt(next) === charCodes.lessThan) {\n        const afterNext = this.input.charCodeAt(next + 1);\n        return (\n          afterNext !== charCodes.lessThan && afterNext !== charCodes.equalsTo\n        );\n      }\n      return false;\n    }\n\n    maybeUnwrapTypeCastExpression(node: N.Node) {\n      return node.type === \"TypeCastExpression\" ? node.expression : node;\n    }\n  };\n","// @flow\n\nconst entities: { [name: string]: string, __proto__: null } = {\n  __proto__: null,\n  quot: \"\\u0022\",\n  amp: \"&\",\n  apos: \"\\u0027\",\n  lt: \"<\",\n  gt: \">\",\n  nbsp: \"\\u00A0\",\n  iexcl: \"\\u00A1\",\n  cent: \"\\u00A2\",\n  pound: \"\\u00A3\",\n  curren: \"\\u00A4\",\n  yen: \"\\u00A5\",\n  brvbar: \"\\u00A6\",\n  sect: \"\\u00A7\",\n  uml: \"\\u00A8\",\n  copy: \"\\u00A9\",\n  ordf: \"\\u00AA\",\n  laquo: \"\\u00AB\",\n  not: \"\\u00AC\",\n  shy: \"\\u00AD\",\n  reg: \"\\u00AE\",\n  macr: \"\\u00AF\",\n  deg: \"\\u00B0\",\n  plusmn: \"\\u00B1\",\n  sup2: \"\\u00B2\",\n  sup3: \"\\u00B3\",\n  acute: \"\\u00B4\",\n  micro: \"\\u00B5\",\n  para: \"\\u00B6\",\n  middot: \"\\u00B7\",\n  cedil: \"\\u00B8\",\n  sup1: \"\\u00B9\",\n  ordm: \"\\u00BA\",\n  raquo: \"\\u00BB\",\n  frac14: \"\\u00BC\",\n  frac12: \"\\u00BD\",\n  frac34: \"\\u00BE\",\n  iquest: \"\\u00BF\",\n  Agrave: \"\\u00C0\",\n  Aacute: \"\\u00C1\",\n  Acirc: \"\\u00C2\",\n  Atilde: \"\\u00C3\",\n  Auml: \"\\u00C4\",\n  Aring: \"\\u00C5\",\n  AElig: \"\\u00C6\",\n  Ccedil: \"\\u00C7\",\n  Egrave: \"\\u00C8\",\n  Eacute: \"\\u00C9\",\n  Ecirc: \"\\u00CA\",\n  Euml: \"\\u00CB\",\n  Igrave: \"\\u00CC\",\n  Iacute: \"\\u00CD\",\n  Icirc: \"\\u00CE\",\n  Iuml: \"\\u00CF\",\n  ETH: \"\\u00D0\",\n  Ntilde: \"\\u00D1\",\n  Ograve: \"\\u00D2\",\n  Oacute: \"\\u00D3\",\n  Ocirc: \"\\u00D4\",\n  Otilde: \"\\u00D5\",\n  Ouml: \"\\u00D6\",\n  times: \"\\u00D7\",\n  Oslash: \"\\u00D8\",\n  Ugrave: \"\\u00D9\",\n  Uacute: \"\\u00DA\",\n  Ucirc: \"\\u00DB\",\n  Uuml: \"\\u00DC\",\n  Yacute: \"\\u00DD\",\n  THORN: \"\\u00DE\",\n  szlig: \"\\u00DF\",\n  agrave: \"\\u00E0\",\n  aacute: \"\\u00E1\",\n  acirc: \"\\u00E2\",\n  atilde: \"\\u00E3\",\n  auml: \"\\u00E4\",\n  aring: \"\\u00E5\",\n  aelig: \"\\u00E6\",\n  ccedil: \"\\u00E7\",\n  egrave: \"\\u00E8\",\n  eacute: \"\\u00E9\",\n  ecirc: \"\\u00EA\",\n  euml: \"\\u00EB\",\n  igrave: \"\\u00EC\",\n  iacute: \"\\u00ED\",\n  icirc: \"\\u00EE\",\n  iuml: \"\\u00EF\",\n  eth: \"\\u00F0\",\n  ntilde: \"\\u00F1\",\n  ograve: \"\\u00F2\",\n  oacute: \"\\u00F3\",\n  ocirc: \"\\u00F4\",\n  otilde: \"\\u00F5\",\n  ouml: \"\\u00F6\",\n  divide: \"\\u00F7\",\n  oslash: \"\\u00F8\",\n  ugrave: \"\\u00F9\",\n  uacute: \"\\u00FA\",\n  ucirc: \"\\u00FB\",\n  uuml: \"\\u00FC\",\n  yacute: \"\\u00FD\",\n  thorn: \"\\u00FE\",\n  yuml: \"\\u00FF\",\n  OElig: \"\\u0152\",\n  oelig: \"\\u0153\",\n  Scaron: \"\\u0160\",\n  scaron: \"\\u0161\",\n  Yuml: \"\\u0178\",\n  fnof: \"\\u0192\",\n  circ: \"\\u02C6\",\n  tilde: \"\\u02DC\",\n  Alpha: \"\\u0391\",\n  Beta: \"\\u0392\",\n  Gamma: \"\\u0393\",\n  Delta: \"\\u0394\",\n  Epsilon: \"\\u0395\",\n  Zeta: \"\\u0396\",\n  Eta: \"\\u0397\",\n  Theta: \"\\u0398\",\n  Iota: \"\\u0399\",\n  Kappa: \"\\u039A\",\n  Lambda: \"\\u039B\",\n  Mu: \"\\u039C\",\n  Nu: \"\\u039D\",\n  Xi: \"\\u039E\",\n  Omicron: \"\\u039F\",\n  Pi: \"\\u03A0\",\n  Rho: \"\\u03A1\",\n  Sigma: \"\\u03A3\",\n  Tau: \"\\u03A4\",\n  Upsilon: \"\\u03A5\",\n  Phi: \"\\u03A6\",\n  Chi: \"\\u03A7\",\n  Psi: \"\\u03A8\",\n  Omega: \"\\u03A9\",\n  alpha: \"\\u03B1\",\n  beta: \"\\u03B2\",\n  gamma: \"\\u03B3\",\n  delta: \"\\u03B4\",\n  epsilon: \"\\u03B5\",\n  zeta: \"\\u03B6\",\n  eta: \"\\u03B7\",\n  theta: \"\\u03B8\",\n  iota: \"\\u03B9\",\n  kappa: \"\\u03BA\",\n  lambda: \"\\u03BB\",\n  mu: \"\\u03BC\",\n  nu: \"\\u03BD\",\n  xi: \"\\u03BE\",\n  omicron: \"\\u03BF\",\n  pi: \"\\u03C0\",\n  rho: \"\\u03C1\",\n  sigmaf: \"\\u03C2\",\n  sigma: \"\\u03C3\",\n  tau: \"\\u03C4\",\n  upsilon: \"\\u03C5\",\n  phi: \"\\u03C6\",\n  chi: \"\\u03C7\",\n  psi: \"\\u03C8\",\n  omega: \"\\u03C9\",\n  thetasym: \"\\u03D1\",\n  upsih: \"\\u03D2\",\n  piv: \"\\u03D6\",\n  ensp: \"\\u2002\",\n  emsp: \"\\u2003\",\n  thinsp: \"\\u2009\",\n  zwnj: \"\\u200C\",\n  zwj: \"\\u200D\",\n  lrm: \"\\u200E\",\n  rlm: \"\\u200F\",\n  ndash: \"\\u2013\",\n  mdash: \"\\u2014\",\n  lsquo: \"\\u2018\",\n  rsquo: \"\\u2019\",\n  sbquo: \"\\u201A\",\n  ldquo: \"\\u201C\",\n  rdquo: \"\\u201D\",\n  bdquo: \"\\u201E\",\n  dagger: \"\\u2020\",\n  Dagger: \"\\u2021\",\n  bull: \"\\u2022\",\n  hellip: \"\\u2026\",\n  permil: \"\\u2030\",\n  prime: \"\\u2032\",\n  Prime: \"\\u2033\",\n  lsaquo: \"\\u2039\",\n  rsaquo: \"\\u203A\",\n  oline: \"\\u203E\",\n  frasl: \"\\u2044\",\n  euro: \"\\u20AC\",\n  image: \"\\u2111\",\n  weierp: \"\\u2118\",\n  real: \"\\u211C\",\n  trade: \"\\u2122\",\n  alefsym: \"\\u2135\",\n  larr: \"\\u2190\",\n  uarr: \"\\u2191\",\n  rarr: \"\\u2192\",\n  darr: \"\\u2193\",\n  harr: \"\\u2194\",\n  crarr: \"\\u21B5\",\n  lArr: \"\\u21D0\",\n  uArr: \"\\u21D1\",\n  rArr: \"\\u21D2\",\n  dArr: \"\\u21D3\",\n  hArr: \"\\u21D4\",\n  forall: \"\\u2200\",\n  part: \"\\u2202\",\n  exist: \"\\u2203\",\n  empty: \"\\u2205\",\n  nabla: \"\\u2207\",\n  isin: \"\\u2208\",\n  notin: \"\\u2209\",\n  ni: \"\\u220B\",\n  prod: \"\\u220F\",\n  sum: \"\\u2211\",\n  minus: \"\\u2212\",\n  lowast: \"\\u2217\",\n  radic: \"\\u221A\",\n  prop: \"\\u221D\",\n  infin: \"\\u221E\",\n  ang: \"\\u2220\",\n  and: \"\\u2227\",\n  or: \"\\u2228\",\n  cap: \"\\u2229\",\n  cup: \"\\u222A\",\n  int: \"\\u222B\",\n  there4: \"\\u2234\",\n  sim: \"\\u223C\",\n  cong: \"\\u2245\",\n  asymp: \"\\u2248\",\n  ne: \"\\u2260\",\n  equiv: \"\\u2261\",\n  le: \"\\u2264\",\n  ge: \"\\u2265\",\n  sub: \"\\u2282\",\n  sup: \"\\u2283\",\n  nsub: \"\\u2284\",\n  sube: \"\\u2286\",\n  supe: \"\\u2287\",\n  oplus: \"\\u2295\",\n  otimes: \"\\u2297\",\n  perp: \"\\u22A5\",\n  sdot: \"\\u22C5\",\n  lceil: \"\\u2308\",\n  rceil: \"\\u2309\",\n  lfloor: \"\\u230A\",\n  rfloor: \"\\u230B\",\n  lang: \"\\u2329\",\n  rang: \"\\u232A\",\n  loz: \"\\u25CA\",\n  spades: \"\\u2660\",\n  clubs: \"\\u2663\",\n  hearts: \"\\u2665\",\n  diams: \"\\u2666\",\n};\nexport default entities;\n","// @flow\n\nimport * as charCodes from \"charcodes\";\n\nimport XHTMLEntities from \"./xhtml\";\nimport type Parser from \"../../parser\";\nimport type { ExpressionErrors } from \"../../parser/util\";\nimport {\n  tokenComesBeforeExpression,\n  tokenIsKeyword,\n  tokenLabelName,\n  type TokenType,\n  tt,\n} from \"../../tokenizer/types\";\nimport { TokContext, types as tc } from \"../../tokenizer/context\";\nimport * as N from \"../../types\";\nimport { isIdentifierChar, isIdentifierStart } from \"../../util/identifier\";\nimport type { Position } from \"../../util/location\";\nimport { isNewLine } from \"../../util/whitespace\";\nimport { Errors, ParseErrorEnum } from \"../../parse-error\";\n\n/* eslint sort-keys: \"error\" */\nconst JsxErrors = ParseErrorEnum`jsx`(_ => ({\n  AttributeIsEmpty: _(\n    \"JSX attributes must only be assigned a non-empty expression.\",\n  ),\n  MissingClosingTagElement: _<{| openingTagName: string |}>(\n    ({ openingTagName }) =>\n      `Expected corresponding JSX closing tag for <${openingTagName}>.`,\n  ),\n  MissingClosingTagFragment: _(\n    \"Expected corresponding JSX closing tag for <>.\",\n  ),\n  UnexpectedSequenceExpression: _(\n    \"Sequence expressions cannot be directly nested inside JSX. Did you mean to wrap it in parentheses (...)?\",\n  ),\n  // FIXME: Unify with Errors.UnexpectedToken\n  UnexpectedToken: _<{| unexpected: string, HTMLEntity: string |}>(\n    ({ unexpected, HTMLEntity }) =>\n      `Unexpected token \\`${unexpected}\\`. Did you mean \\`${HTMLEntity}\\` or \\`{'${unexpected}'}\\`?`,\n  ),\n  UnsupportedJsxValue: _(\n    \"JSX value should be either an expression or a quoted JSX text.\",\n  ),\n  UnterminatedJsxContent: _(\"Unterminated JSX contents.\"),\n  UnwrappedAdjacentJSXElements: _(\n    \"Adjacent JSX elements must be wrapped in an enclosing tag. Did you want a JSX fragment <>...</>?\",\n  ),\n}));\n\n/* eslint-disable sort-keys */\n\nfunction isFragment(object: ?N.JSXElement): boolean {\n  return object\n    ? object.type === \"JSXOpeningFragment\" ||\n        object.type === \"JSXClosingFragment\"\n    : false;\n}\n\n// Transforms JSX element name to string.\n\nfunction getQualifiedJSXName(\n  object: N.JSXIdentifier | N.JSXNamespacedName | N.JSXMemberExpression,\n): string {\n  if (object.type === \"JSXIdentifier\") {\n    return object.name;\n  }\n\n  if (object.type === \"JSXNamespacedName\") {\n    return object.namespace.name + \":\" + object.name.name;\n  }\n\n  if (object.type === \"JSXMemberExpression\") {\n    return (\n      getQualifiedJSXName(object.object) +\n      \".\" +\n      getQualifiedJSXName(object.property)\n    );\n  }\n\n  // istanbul ignore next\n  throw new Error(\"Node had unexpected type: \" + object.type);\n}\n\nexport default (superClass: Class<Parser>): Class<Parser> =>\n  class extends superClass {\n    // Reads inline JSX contents token.\n\n    jsxReadToken(): void {\n      let out = \"\";\n      let chunkStart = this.state.pos;\n      for (;;) {\n        if (this.state.pos >= this.length) {\n          throw this.raise(JsxErrors.UnterminatedJsxContent, {\n            at: this.state.startLoc,\n          });\n        }\n\n        const ch = this.input.charCodeAt(this.state.pos);\n\n        switch (ch) {\n          case charCodes.lessThan:\n          case charCodes.leftCurlyBrace:\n            if (this.state.pos === this.state.start) {\n              if (ch === charCodes.lessThan && this.state.canStartJSXElement) {\n                ++this.state.pos;\n                return this.finishToken(tt.jsxTagStart);\n              }\n              return super.getTokenFromCode(ch);\n            }\n            out += this.input.slice(chunkStart, this.state.pos);\n            return this.finishToken(tt.jsxText, out);\n\n          case charCodes.ampersand:\n            out += this.input.slice(chunkStart, this.state.pos);\n            out += this.jsxReadEntity();\n            chunkStart = this.state.pos;\n            break;\n\n          case charCodes.greaterThan:\n          case charCodes.rightCurlyBrace:\n            if (process.env.BABEL_8_BREAKING) {\n              this.raise(JsxErrors.UnexpectedToken, {\n                at: this.state.curPosition(),\n                unexpected: this.input[this.state.pos],\n                HTMLEntity:\n                  ch === charCodes.rightCurlyBrace ? \"&rbrace;\" : \"&gt;\",\n              });\n            }\n          /* falls through */\n\n          default:\n            if (isNewLine(ch)) {\n              out += this.input.slice(chunkStart, this.state.pos);\n              out += this.jsxReadNewLine(true);\n              chunkStart = this.state.pos;\n            } else {\n              ++this.state.pos;\n            }\n        }\n      }\n    }\n\n    jsxReadNewLine(normalizeCRLF: boolean): string {\n      const ch = this.input.charCodeAt(this.state.pos);\n      let out;\n      ++this.state.pos;\n      if (\n        ch === charCodes.carriageReturn &&\n        this.input.charCodeAt(this.state.pos) === charCodes.lineFeed\n      ) {\n        ++this.state.pos;\n        out = normalizeCRLF ? \"\\n\" : \"\\r\\n\";\n      } else {\n        out = String.fromCharCode(ch);\n      }\n      ++this.state.curLine;\n      this.state.lineStart = this.state.pos;\n\n      return out;\n    }\n\n    jsxReadString(quote: number): void {\n      let out = \"\";\n      let chunkStart = ++this.state.pos;\n      for (;;) {\n        if (this.state.pos >= this.length) {\n          throw this.raise(Errors.UnterminatedString, {\n            at: this.state.startLoc,\n          });\n        }\n\n        const ch = this.input.charCodeAt(this.state.pos);\n        if (ch === quote) break;\n        if (ch === charCodes.ampersand) {\n          out += this.input.slice(chunkStart, this.state.pos);\n          out += this.jsxReadEntity();\n          chunkStart = this.state.pos;\n        } else if (isNewLine(ch)) {\n          out += this.input.slice(chunkStart, this.state.pos);\n          out += this.jsxReadNewLine(false);\n          chunkStart = this.state.pos;\n        } else {\n          ++this.state.pos;\n        }\n      }\n      out += this.input.slice(chunkStart, this.state.pos++);\n      return this.finishToken(tt.string, out);\n    }\n\n    jsxReadEntity(): string {\n      const startPos = ++this.state.pos;\n      if (this.codePointAtPos(this.state.pos) === charCodes.numberSign) {\n        ++this.state.pos;\n\n        let radix = 10;\n        if (this.codePointAtPos(this.state.pos) === charCodes.lowercaseX) {\n          radix = 16;\n          ++this.state.pos;\n        }\n\n        const codePoint = this.readInt(\n          radix,\n          /* len */ undefined,\n          /* forceLen */ false,\n          /* allowNumSeparator */ \"bail\",\n        );\n        if (\n          codePoint !== null &&\n          this.codePointAtPos(this.state.pos) === charCodes.semicolon\n        ) {\n          ++this.state.pos;\n          return String.fromCodePoint(codePoint);\n        }\n      } else {\n        let count = 0;\n        let semi = false;\n        while (\n          count++ < 10 &&\n          this.state.pos < this.length &&\n          !(semi = this.codePointAtPos(this.state.pos) == charCodes.semicolon)\n        ) {\n          ++this.state.pos;\n        }\n\n        if (semi) {\n          const desc = this.input.slice(startPos, this.state.pos);\n          const entity = XHTMLEntities[desc];\n          ++this.state.pos;\n\n          if (entity) {\n            return entity;\n          }\n        }\n      }\n\n      // Not a valid entity\n      this.state.pos = startPos;\n      return \"&\";\n    }\n\n    // Read a JSX identifier (valid tag or attribute name).\n    //\n    // Optimized version since JSX identifiers can\"t contain\n    // escape characters and so can be read as single slice.\n    // Also assumes that first character was already checked\n    // by isIdentifierStart in readToken.\n\n    jsxReadWord(): void {\n      let ch;\n      const start = this.state.pos;\n      do {\n        ch = this.input.charCodeAt(++this.state.pos);\n      } while (isIdentifierChar(ch) || ch === charCodes.dash);\n      return this.finishToken(\n        tt.jsxName,\n        this.input.slice(start, this.state.pos),\n      );\n    }\n\n    // Parse next token as JSX identifier\n\n    jsxParseIdentifier(): N.JSXIdentifier {\n      const node = this.startNode();\n      if (this.match(tt.jsxName)) {\n        node.name = this.state.value;\n      } else if (tokenIsKeyword(this.state.type)) {\n        node.name = tokenLabelName(this.state.type);\n      } else {\n        this.unexpected();\n      }\n      this.next();\n      return this.finishNode(node, \"JSXIdentifier\");\n    }\n\n    // Parse namespaced identifier.\n\n    jsxParseNamespacedName(): N.JSXNamespacedName {\n      const startPos = this.state.start;\n      const startLoc = this.state.startLoc;\n      const name = this.jsxParseIdentifier();\n      if (!this.eat(tt.colon)) return name;\n\n      const node = this.startNodeAt(startPos, startLoc);\n      node.namespace = name;\n      node.name = this.jsxParseIdentifier();\n      return this.finishNode(node, \"JSXNamespacedName\");\n    }\n\n    // Parses element name in any form - namespaced, member\n    // or single identifier.\n\n    jsxParseElementName():\n      | N.JSXIdentifier\n      | N.JSXNamespacedName\n      | N.JSXMemberExpression {\n      const startPos = this.state.start;\n      const startLoc = this.state.startLoc;\n      let node = this.jsxParseNamespacedName();\n      if (node.type === \"JSXNamespacedName\") {\n        return node;\n      }\n      while (this.eat(tt.dot)) {\n        const newNode = this.startNodeAt(startPos, startLoc);\n        newNode.object = node;\n        newNode.property = this.jsxParseIdentifier();\n        node = this.finishNode(newNode, \"JSXMemberExpression\");\n      }\n      return node;\n    }\n\n    // Parses any type of JSX attribute value.\n\n    jsxParseAttributeValue(): N.Expression {\n      let node;\n      switch (this.state.type) {\n        case tt.braceL:\n          node = this.startNode();\n          this.setContext(tc.brace);\n          this.next();\n          node = this.jsxParseExpressionContainer(node, tc.j_oTag);\n          if (node.expression.type === \"JSXEmptyExpression\") {\n            this.raise(JsxErrors.AttributeIsEmpty, { at: node });\n          }\n          return node;\n\n        case tt.jsxTagStart:\n        case tt.string:\n          return this.parseExprAtom();\n\n        default:\n          throw this.raise(JsxErrors.UnsupportedJsxValue, {\n            at: this.state.startLoc,\n          });\n      }\n    }\n\n    // JSXEmptyExpression is unique type since it doesn't actually parse anything,\n    // and so it should start at the end of last read token (left brace) and finish\n    // at the beginning of the next one (right brace).\n\n    jsxParseEmptyExpression(): N.JSXEmptyExpression {\n      const node = this.startNodeAt(\n        this.state.lastTokEndLoc.index,\n        this.state.lastTokEndLoc,\n      );\n      return this.finishNodeAt(node, \"JSXEmptyExpression\", this.state.startLoc);\n    }\n\n    // Parse JSX spread child\n\n    jsxParseSpreadChild(node: N.JSXSpreadChild): N.JSXSpreadChild {\n      this.next(); // ellipsis\n      node.expression = this.parseExpression();\n      this.setContext(tc.j_oTag);\n      this.state.canStartJSXElement = true;\n      this.expect(tt.braceR);\n\n      return this.finishNode(node, \"JSXSpreadChild\");\n    }\n\n    // Parses JSX expression enclosed into curly brackets.\n\n    jsxParseExpressionContainer(\n      node: N.JSXExpressionContainer,\n      previousContext: TokContext,\n    ): N.JSXExpressionContainer {\n      if (this.match(tt.braceR)) {\n        node.expression = this.jsxParseEmptyExpression();\n      } else {\n        const expression = this.parseExpression();\n\n        if (process.env.BABEL_8_BREAKING) {\n          if (\n            expression.type === \"SequenceExpression\" &&\n            !expression.extra?.parenthesized\n          ) {\n            this.raise(JsxErrors.UnexpectedSequenceExpression, {\n              at: expression.expressions[1],\n            });\n          }\n        }\n\n        node.expression = expression;\n      }\n      this.setContext(previousContext);\n      this.state.canStartJSXElement = true;\n      this.expect(tt.braceR);\n\n      return this.finishNode(node, \"JSXExpressionContainer\");\n    }\n\n    // Parses following JSX attribute name-value pair.\n\n    jsxParseAttribute(): N.JSXAttribute {\n      const node = this.startNode();\n      if (this.match(tt.braceL)) {\n        this.setContext(tc.brace);\n        this.next();\n        this.expect(tt.ellipsis);\n        node.argument = this.parseMaybeAssignAllowIn();\n        this.setContext(tc.j_oTag);\n        this.state.canStartJSXElement = true;\n        this.expect(tt.braceR);\n        return this.finishNode(node, \"JSXSpreadAttribute\");\n      }\n      node.name = this.jsxParseNamespacedName();\n      node.value = this.eat(tt.eq) ? this.jsxParseAttributeValue() : null;\n      return this.finishNode(node, \"JSXAttribute\");\n    }\n\n    // Parses JSX opening tag starting after \"<\".\n\n    jsxParseOpeningElementAt(\n      startPos: number,\n      startLoc: Position,\n    ): N.JSXOpeningElement {\n      const node = this.startNodeAt(startPos, startLoc);\n      if (this.eat(tt.jsxTagEnd)) {\n        return this.finishNode(node, \"JSXOpeningFragment\");\n      }\n      node.name = this.jsxParseElementName();\n      return this.jsxParseOpeningElementAfterName(node);\n    }\n\n    jsxParseOpeningElementAfterName(\n      node: N.JSXOpeningElement,\n    ): N.JSXOpeningElement {\n      const attributes: N.JSXAttribute[] = [];\n      while (!this.match(tt.slash) && !this.match(tt.jsxTagEnd)) {\n        attributes.push(this.jsxParseAttribute());\n      }\n      node.attributes = attributes;\n      node.selfClosing = this.eat(tt.slash);\n      this.expect(tt.jsxTagEnd);\n      return this.finishNode(node, \"JSXOpeningElement\");\n    }\n\n    // Parses JSX closing tag starting after \"</\".\n\n    jsxParseClosingElementAt(\n      startPos: number,\n      startLoc: Position,\n    ): N.JSXClosingElement {\n      const node = this.startNodeAt(startPos, startLoc);\n      if (this.eat(tt.jsxTagEnd)) {\n        return this.finishNode(node, \"JSXClosingFragment\");\n      }\n      node.name = this.jsxParseElementName();\n      this.expect(tt.jsxTagEnd);\n      return this.finishNode(node, \"JSXClosingElement\");\n    }\n\n    // Parses entire JSX element, including it\"s opening tag\n    // (starting after \"<\"), attributes, contents and closing tag.\n\n    jsxParseElementAt(startPos: number, startLoc: Position): N.JSXElement {\n      const node = this.startNodeAt(startPos, startLoc);\n      const children = [];\n      const openingElement = this.jsxParseOpeningElementAt(startPos, startLoc);\n      let closingElement = null;\n\n      if (!openingElement.selfClosing) {\n        contents: for (;;) {\n          switch (this.state.type) {\n            case tt.jsxTagStart:\n              startPos = this.state.start;\n              startLoc = this.state.startLoc;\n              this.next();\n              if (this.eat(tt.slash)) {\n                closingElement = this.jsxParseClosingElementAt(\n                  startPos,\n                  startLoc,\n                );\n                break contents;\n              }\n              children.push(this.jsxParseElementAt(startPos, startLoc));\n              break;\n\n            case tt.jsxText:\n              children.push(this.parseExprAtom());\n              break;\n\n            case tt.braceL: {\n              const node = this.startNode();\n              this.setContext(tc.brace);\n              this.next();\n              if (this.match(tt.ellipsis)) {\n                children.push(this.jsxParseSpreadChild(node));\n              } else {\n                children.push(\n                  this.jsxParseExpressionContainer(node, tc.j_expr),\n                );\n              }\n\n              break;\n            }\n            // istanbul ignore next - should never happen\n            default:\n              throw this.unexpected();\n          }\n        }\n\n        if (\n          isFragment(openingElement) &&\n          !isFragment(closingElement) &&\n          closingElement !== null\n        ) {\n          this.raise(JsxErrors.MissingClosingTagFragment, {\n            at: closingElement,\n          });\n        } else if (!isFragment(openingElement) && isFragment(closingElement)) {\n          this.raise(JsxErrors.MissingClosingTagElement, {\n            // $FlowIgnore\n            at: closingElement,\n            openingTagName: getQualifiedJSXName(openingElement.name),\n          });\n        } else if (!isFragment(openingElement) && !isFragment(closingElement)) {\n          if (\n            // $FlowIgnore\n            getQualifiedJSXName(closingElement.name) !==\n            getQualifiedJSXName(openingElement.name)\n          ) {\n            this.raise(JsxErrors.MissingClosingTagElement, {\n              // $FlowIgnore\n              at: closingElement,\n              openingTagName: getQualifiedJSXName(openingElement.name),\n            });\n          }\n        }\n      }\n\n      if (isFragment(openingElement)) {\n        node.openingFragment = openingElement;\n        node.closingFragment = closingElement;\n      } else {\n        node.openingElement = openingElement;\n        node.closingElement = closingElement;\n      }\n      node.children = children;\n      if (this.match(tt.lt)) {\n        throw this.raise(JsxErrors.UnwrappedAdjacentJSXElements, {\n          at: this.state.startLoc,\n        });\n      }\n\n      return isFragment(openingElement)\n        ? this.finishNode(node, \"JSXFragment\")\n        : this.finishNode(node, \"JSXElement\");\n    }\n\n    // Parses entire JSX element from current position.\n\n    jsxParseElement(): N.JSXElement {\n      const startPos = this.state.start;\n      const startLoc = this.state.startLoc;\n      this.next();\n      return this.jsxParseElementAt(startPos, startLoc);\n    }\n\n    setContext(newContext: TokContext) {\n      const { context } = this.state;\n      context[context.length - 1] = newContext;\n    }\n\n    // ==================================\n    // Overrides\n    // ==================================\n\n    parseExprAtom(refExpressionErrors: ?ExpressionErrors): N.Expression {\n      if (this.match(tt.jsxText)) {\n        return this.parseLiteral(this.state.value, \"JSXText\");\n      } else if (this.match(tt.jsxTagStart)) {\n        return this.jsxParseElement();\n      } else if (\n        this.match(tt.lt) &&\n        this.input.charCodeAt(this.state.pos) !== charCodes.exclamationMark\n      ) {\n        // In case we encounter an lt token here it will always be the start of\n        // jsx as the lt sign is not allowed in places that expect an expression\n        this.replaceToken(tt.jsxTagStart);\n        return this.jsxParseElement();\n      } else {\n        return super.parseExprAtom(refExpressionErrors);\n      }\n    }\n\n    skipSpace() {\n      const curContext = this.curContext();\n      if (!curContext.preserveSpace) super.skipSpace();\n    }\n\n    getTokenFromCode(code: number): void {\n      const context = this.curContext();\n\n      if (context === tc.j_expr) {\n        return this.jsxReadToken();\n      }\n\n      if (context === tc.j_oTag || context === tc.j_cTag) {\n        if (isIdentifierStart(code)) {\n          return this.jsxReadWord();\n        }\n\n        if (code === charCodes.greaterThan) {\n          ++this.state.pos;\n          return this.finishToken(tt.jsxTagEnd);\n        }\n\n        if (\n          (code === charCodes.quotationMark || code === charCodes.apostrophe) &&\n          context === tc.j_oTag\n        ) {\n          return this.jsxReadString(code);\n        }\n      }\n\n      if (\n        code === charCodes.lessThan &&\n        this.state.canStartJSXElement &&\n        this.input.charCodeAt(this.state.pos + 1) !== charCodes.exclamationMark\n      ) {\n        ++this.state.pos;\n        return this.finishToken(tt.jsxTagStart);\n      }\n\n      return super.getTokenFromCode(code);\n    }\n\n    updateContext(prevType: TokenType): void {\n      const { context, type } = this.state;\n      if (type === tt.slash && prevType === tt.jsxTagStart) {\n        // do not consider JSX expr -> JSX open tag -> ... anymore\n        // reconsider as closing tag context\n        context.splice(-2, 2, tc.j_cTag);\n        this.state.canStartJSXElement = false;\n      } else if (type === tt.jsxTagStart) {\n        // start opening tag context\n        context.push(tc.j_oTag);\n      } else if (type === tt.jsxTagEnd) {\n        const out = context[context.length - 1];\n        if ((out === tc.j_oTag && prevType === tt.slash) || out === tc.j_cTag) {\n          context.pop();\n          this.state.canStartJSXElement =\n            context[context.length - 1] === tc.j_expr;\n        } else {\n          this.setContext(tc.j_expr);\n          this.state.canStartJSXElement = true;\n        }\n      } else {\n        this.state.canStartJSXElement = tokenComesBeforeExpression(type);\n      }\n    }\n  };\n","// @flow\n\nimport { Position } from \"../../util/location\";\nimport ScopeHandler, { Scope } from \"../../util/scope\";\nimport {\n  BIND_KIND_TYPE,\n  BIND_FLAGS_TS_ENUM,\n  BIND_FLAGS_TS_CONST_ENUM,\n  BIND_FLAGS_TS_EXPORT_ONLY,\n  BIND_KIND_VALUE,\n  BIND_FLAGS_CLASS,\n  type ScopeFlags,\n  type BindingTypes,\n} from \"../../util/scopeflags\";\nimport * as N from \"../../types\";\n\nclass TypeScriptScope extends Scope {\n  types: Set<string> = new Set();\n\n  // enums (which are also in .types)\n  enums: Set<string> = new Set();\n\n  // const enums (which are also in .enums and .types)\n  constEnums: Set<string> = new Set();\n\n  // classes (which are also in .lexical) and interface (which are also in .types)\n  classes: Set<string> = new Set();\n\n  // namespaces and ambient functions (or classes) are too difficult to track,\n  // especially without type analysis.\n  // We need to track them anyway, to avoid \"X is not defined\" errors\n  // when exporting them.\n  exportOnlyBindings: Set<string> = new Set();\n}\n\n// See https://github.com/babel/babel/pull/9766#discussion_r268920730 for an\n// explanation of how typescript handles scope.\n\nexport default class TypeScriptScopeHandler extends ScopeHandler<TypeScriptScope> {\n  createScope(flags: ScopeFlags): TypeScriptScope {\n    return new TypeScriptScope(flags);\n  }\n\n  declareName(name: string, bindingType: BindingTypes, loc: Position) {\n    const scope = this.currentScope();\n    if (bindingType & BIND_FLAGS_TS_EXPORT_ONLY) {\n      this.maybeExportDefined(scope, name);\n      scope.exportOnlyBindings.add(name);\n      return;\n    }\n\n    super.declareName(...arguments);\n\n    if (bindingType & BIND_KIND_TYPE) {\n      if (!(bindingType & BIND_KIND_VALUE)) {\n        // \"Value\" bindings have already been registered by the superclass.\n        this.checkRedeclarationInScope(scope, name, bindingType, loc);\n        this.maybeExportDefined(scope, name);\n      }\n      scope.types.add(name);\n    }\n    if (bindingType & BIND_FLAGS_TS_ENUM) scope.enums.add(name);\n    if (bindingType & BIND_FLAGS_TS_CONST_ENUM) scope.constEnums.add(name);\n    if (bindingType & BIND_FLAGS_CLASS) scope.classes.add(name);\n  }\n\n  isRedeclaredInScope(\n    scope: TypeScriptScope,\n    name: string,\n    bindingType: BindingTypes,\n  ): boolean {\n    if (scope.enums.has(name)) {\n      if (bindingType & BIND_FLAGS_TS_ENUM) {\n        // Enums can be merged with other enums if they are both\n        //  const or both non-const.\n        const isConst = !!(bindingType & BIND_FLAGS_TS_CONST_ENUM);\n        const wasConst = scope.constEnums.has(name);\n        return isConst !== wasConst;\n      }\n      return true;\n    }\n    if (bindingType & BIND_FLAGS_CLASS && scope.classes.has(name)) {\n      if (scope.lexical.has(name)) {\n        // Classes can be merged with interfaces\n        return !!(bindingType & BIND_KIND_VALUE);\n      } else {\n        // Interface can be merged with other classes or interfaces\n        return false;\n      }\n    }\n    if (bindingType & BIND_KIND_TYPE && scope.types.has(name)) {\n      return true;\n    }\n\n    return super.isRedeclaredInScope(...arguments);\n  }\n\n  checkLocalExport(id: N.Identifier) {\n    const topLevelScope = this.scopeStack[0];\n    const { name } = id;\n    if (\n      !topLevelScope.types.has(name) &&\n      !topLevelScope.exportOnlyBindings.has(name)\n    ) {\n      super.checkLocalExport(id);\n    }\n  }\n}\n","// @flow\n\n/*:: declare var invariant; */\n\nimport type State from \"../../tokenizer/state\";\nimport {\n  tokenIsIdentifier,\n  tokenIsTSDeclarationStart,\n  tokenIsTSTypeOperator,\n  tokenOperatorPrecedence,\n  tokenIsKeywordOrIdentifier,\n  tt,\n  type TokenType,\n  tokenIsTemplate,\n  tokenCanStartExpression,\n} from \"../../tokenizer/types\";\nimport { types as tc } from \"../../tokenizer/context\";\nimport * as N from \"../../types\";\nimport { Position, createPositionWithColumnOffset } from \"../../util/location\";\nimport type Parser from \"../../parser\";\nimport {\n  type BindingTypes,\n  SCOPE_TS_MODULE,\n  SCOPE_OTHER,\n  BIND_TS_ENUM,\n  BIND_TS_CONST_ENUM,\n  BIND_TS_TYPE,\n  BIND_TS_INTERFACE,\n  BIND_TS_AMBIENT,\n  BIND_TS_NAMESPACE,\n  BIND_CLASS,\n  BIND_LEXICAL,\n  BIND_NONE,\n} from \"../../util/scopeflags\";\nimport TypeScriptScopeHandler from \"./scope\";\nimport * as charCodes from \"charcodes\";\nimport type { ExpressionErrors } from \"../../parser/util\";\nimport { PARAM } from \"../../util/production-parameter\";\nimport { Errors, ParseErrorEnum } from \"../../parse-error\";\nimport { cloneIdentifier } from \"../../parser/node\";\n\nconst getOwn = (object, key) =>\n  Object.hasOwnProperty.call(object, key) && object[key];\n\ntype TsModifier =\n  | \"readonly\"\n  | \"abstract\"\n  | \"declare\"\n  | \"static\"\n  | \"override\"\n  | N.Accessibility\n  | N.VarianceAnnotations;\n\nfunction nonNull<T>(x: ?T): T {\n  if (x == null) {\n    // $FlowIgnore\n    throw new Error(`Unexpected ${x} value.`);\n  }\n  return x;\n}\n\nfunction assert(x: boolean): void {\n  if (!x) {\n    throw new Error(\"Assert fail\");\n  }\n}\n\ntype ParsingContext =\n  | \"EnumMembers\"\n  | \"HeritageClauseElement\"\n  | \"TupleElementTypes\"\n  | \"TypeMembers\"\n  | \"TypeParametersOrArguments\";\n\n/* eslint sort-keys: \"error\" */\nconst TSErrors = ParseErrorEnum`typescript`(_ => ({\n  AbstractMethodHasImplementation: _<{| methodName: string |}>(\n    ({ methodName }) =>\n      `Method '${methodName}' cannot have an implementation because it is marked abstract.`,\n  ),\n  AbstractPropertyHasInitializer: _<{| propertyName: string |}>(\n    ({ propertyName }) =>\n      `Property '${propertyName}' cannot have an initializer because it is marked abstract.`,\n  ),\n  AccesorCannotDeclareThisParameter: _(\n    \"'get' and 'set' accessors cannot declare 'this' parameters.\",\n  ),\n  AccesorCannotHaveTypeParameters: _(\n    \"An accessor cannot have type parameters.\",\n  ),\n  CannotFindName: _<{| name: string |}>(\n    ({ name }) => `Cannot find name '${name}'.`,\n  ),\n  ClassMethodHasDeclare: _(\"Class methods cannot have the 'declare' modifier.\"),\n  ClassMethodHasReadonly: _(\n    \"Class methods cannot have the 'readonly' modifier.\",\n  ),\n  ConstInitiailizerMustBeStringOrNumericLiteralOrLiteralEnumReference: _(\n    \"A 'const' initializer in an ambient context must be a string or numeric literal or literal enum reference.\",\n  ),\n  ConstructorHasTypeParameters: _(\n    \"Type parameters cannot appear on a constructor declaration.\",\n  ),\n  DeclareAccessor: _<{| kind: \"get\" | \"set\" |}>(\n    ({ kind }) => `'declare' is not allowed in ${kind}ters.`,\n  ),\n  DeclareClassFieldHasInitializer: _(\n    \"Initializers are not allowed in ambient contexts.\",\n  ),\n  DeclareFunctionHasImplementation: _(\n    \"An implementation cannot be declared in ambient contexts.\",\n  ),\n  DuplicateAccessibilityModifier: _<{| modifier: N.Accessibility |}>(\n    // `Accessibility modifier already seen: ${modifier}` would be more helpful.\n    // eslint-disable-next-line no-unused-vars\n    ({ modifier }) => `Accessibility modifier already seen.`,\n  ),\n  DuplicateModifier: _<{| modifier: TsModifier |}>(\n    ({ modifier }) => `Duplicate modifier: '${modifier}'.`,\n  ),\n  // `token` matches the terminology used by typescript:\n  // https://github.com/microsoft/TypeScript/blob/main/src/compiler/types.ts#L2915\n  EmptyHeritageClauseType: _<{| token: \"extends\" | \"implements\" |}>(\n    ({ token }) => `'${token}' list cannot be empty.`,\n  ),\n  EmptyTypeArguments: _(\"Type argument list cannot be empty.\"),\n  EmptyTypeParameters: _(\"Type parameter list cannot be empty.\"),\n  ExpectedAmbientAfterExportDeclare: _(\n    \"'export declare' must be followed by an ambient declaration.\",\n  ),\n  ImportAliasHasImportType: _(\"An import alias can not use 'import type'.\"),\n  IncompatibleModifiers: _<{| modifiers: [TsModifier, TsModifier] |}>(\n    ({ modifiers }) =>\n      `'${modifiers[0]}' modifier cannot be used with '${modifiers[1]}' modifier.`,\n  ),\n  IndexSignatureHasAbstract: _(\n    \"Index signatures cannot have the 'abstract' modifier.\",\n  ),\n  IndexSignatureHasAccessibility: _<{| modifier: N.Accessibility |}>(\n    ({ modifier }) =>\n      `Index signatures cannot have an accessibility modifier ('${modifier}').`,\n  ),\n  IndexSignatureHasDeclare: _(\n    \"Index signatures cannot have the 'declare' modifier.\",\n  ),\n  IndexSignatureHasOverride: _(\n    \"'override' modifier cannot appear on an index signature.\",\n  ),\n  IndexSignatureHasStatic: _(\n    \"Index signatures cannot have the 'static' modifier.\",\n  ),\n  InitializerNotAllowedInAmbientContext: _(\n    \"Initializers are not allowed in ambient contexts.\",\n  ),\n  InvalidModifierOnTypeMember: _<{| modifier: TsModifier |}>(\n    ({ modifier }) => `'${modifier}' modifier cannot appear on a type member.`,\n  ),\n  InvalidModifierOnTypeParameter: _<{| modifier: TsModifier |}>(\n    ({ modifier }) =>\n      `'${modifier}' modifier cannot appear on a type parameter.`,\n  ),\n  InvalidModifierOnTypeParameterPositions: _<{| modifier: TsModifier |}>(\n    ({ modifier }) =>\n      `'${modifier}' modifier can only appear on a type parameter of a class, interface or type alias.`,\n  ),\n  InvalidModifiersOrder: _<{| orderedModifiers: [TsModifier, TsModifier] |}>(\n    ({ orderedModifiers }) =>\n      `'${orderedModifiers[0]}' modifier must precede '${orderedModifiers[1]}' modifier.`,\n  ),\n  InvalidPropertyAccessAfterInstantiationExpression: _(\n    \"Invalid property access after an instantiation expression. \" +\n      \"You can either wrap the instantiation expression in parentheses, or delete the type arguments.\",\n  ),\n  InvalidTupleMemberLabel: _(\n    \"Tuple members must be labeled with a simple identifier.\",\n  ),\n  MissingInterfaceName: _(\n    \"'interface' declarations must be followed by an identifier.\",\n  ),\n  MixedLabeledAndUnlabeledElements: _(\n    \"Tuple members must all have names or all not have names.\",\n  ),\n  NonAbstractClassHasAbstractMethod: _(\n    \"Abstract methods can only appear within an abstract class.\",\n  ),\n  NonClassMethodPropertyHasAbstractModifer: _(\n    \"'abstract' modifier can only appear on a class, method, or property declaration.\",\n  ),\n  OptionalTypeBeforeRequired: _(\n    \"A required element cannot follow an optional element.\",\n  ),\n  OverrideNotInSubClass: _(\n    \"This member cannot have an 'override' modifier because its containing class does not extend another class.\",\n  ),\n  PatternIsOptional: _(\n    \"A binding pattern parameter cannot be optional in an implementation signature.\",\n  ),\n  PrivateElementHasAbstract: _(\n    \"Private elements cannot have the 'abstract' modifier.\",\n  ),\n  PrivateElementHasAccessibility: _<{| modifier: N.Accessibility |}>(\n    ({ modifier }) =>\n      `Private elements cannot have an accessibility modifier ('${modifier}').`,\n  ),\n  ReadonlyForMethodSignature: _(\n    \"'readonly' modifier can only appear on a property declaration or index signature.\",\n  ),\n  ReservedArrowTypeParam: _(\n    \"This syntax is reserved in files with the .mts or .cts extension. Add a trailing comma, as in `<T,>() => ...`.\",\n  ),\n  ReservedTypeAssertion: _(\n    \"This syntax is reserved in files with the .mts or .cts extension. Use an `as` expression instead.\",\n  ),\n  SetAccesorCannotHaveOptionalParameter: _(\n    \"A 'set' accessor cannot have an optional parameter.\",\n  ),\n  SetAccesorCannotHaveRestParameter: _(\n    \"A 'set' accessor cannot have rest parameter.\",\n  ),\n  SetAccesorCannotHaveReturnType: _(\n    \"A 'set' accessor cannot have a return type annotation.\",\n  ),\n  SingleTypeParameterWithoutTrailingComma: _<{| typeParameterName: string |}>(\n    ({ typeParameterName }) =>\n      `Single type parameter ${typeParameterName} should have a trailing comma. Example usage: <${typeParameterName},>.`,\n  ),\n  StaticBlockCannotHaveModifier: _(\n    \"Static class blocks cannot have any modifier.\",\n  ),\n  TypeAnnotationAfterAssign: _(\n    \"Type annotations must come before default assignments, e.g. instead of `age = 25: number` use `age: number = 25`.\",\n  ),\n  TypeImportCannotSpecifyDefaultAndNamed: _(\n    \"A type-only import can specify a default import or named bindings, but not both.\",\n  ),\n  TypeModifierIsUsedInTypeExports: _(\n    \"The 'type' modifier cannot be used on a named export when 'export type' is used on its export statement.\",\n  ),\n  TypeModifierIsUsedInTypeImports: _(\n    \"The 'type' modifier cannot be used on a named import when 'import type' is used on its import statement.\",\n  ),\n  UnexpectedParameterModifier: _(\n    \"A parameter property is only allowed in a constructor implementation.\",\n  ),\n  UnexpectedReadonly: _(\n    \"'readonly' type modifier is only permitted on array and tuple literal types.\",\n  ),\n  UnexpectedTypeAnnotation: _(\"Did not expect a type annotation here.\"),\n  UnexpectedTypeCastInParameter: _(\n    \"Unexpected type cast in parameter position.\",\n  ),\n  UnsupportedImportTypeArgument: _(\n    \"Argument in a type import must be a string literal.\",\n  ),\n  UnsupportedParameterPropertyKind: _(\n    \"A parameter property may not be declared using a binding pattern.\",\n  ),\n  UnsupportedSignatureParameterKind: _<{| type: string |}>(\n    ({ type }) =>\n      `Name in a signature must be an Identifier, ObjectPattern or ArrayPattern, instead got ${type}.`,\n  ),\n}));\n\n/* eslint-disable sort-keys */\n\n// Doesn't handle \"void\" or \"null\" because those are keywords, not identifiers.\n// It also doesn't handle \"intrinsic\", since usually it's not a keyword.\nfunction keywordTypeFromName(\n  value: string,\n): N.TsKeywordTypeType | typeof undefined {\n  switch (value) {\n    case \"any\":\n      return \"TSAnyKeyword\";\n    case \"boolean\":\n      return \"TSBooleanKeyword\";\n    case \"bigint\":\n      return \"TSBigIntKeyword\";\n    case \"never\":\n      return \"TSNeverKeyword\";\n    case \"number\":\n      return \"TSNumberKeyword\";\n    case \"object\":\n      return \"TSObjectKeyword\";\n    case \"string\":\n      return \"TSStringKeyword\";\n    case \"symbol\":\n      return \"TSSymbolKeyword\";\n    case \"undefined\":\n      return \"TSUndefinedKeyword\";\n    case \"unknown\":\n      return \"TSUnknownKeyword\";\n    default:\n      return undefined;\n  }\n}\n\nfunction tsIsAccessModifier(modifier: string): boolean %checks {\n  return (\n    modifier === \"private\" || modifier === \"public\" || modifier === \"protected\"\n  );\n}\n\nfunction tsIsVarianceAnnotations(modifier: string): boolean %checks {\n  return modifier === \"in\" || modifier === \"out\";\n}\n\nexport default (superClass: Class<Parser>): Class<Parser> =>\n  class extends superClass {\n    getScopeHandler(): Class<TypeScriptScopeHandler> {\n      return TypeScriptScopeHandler;\n    }\n\n    tsIsIdentifier(): boolean {\n      // TODO: actually a bit more complex in TypeScript, but shouldn't matter.\n      // See https://github.com/Microsoft/TypeScript/issues/15008\n      return tokenIsIdentifier(this.state.type);\n    }\n\n    tsTokenCanFollowModifier() {\n      return (\n        (this.match(tt.bracketL) ||\n          this.match(tt.braceL) ||\n          this.match(tt.star) ||\n          this.match(tt.ellipsis) ||\n          this.match(tt.privateName) ||\n          this.isLiteralPropertyName()) &&\n        !this.hasPrecedingLineBreak()\n      );\n    }\n\n    tsNextTokenCanFollowModifier() {\n      // Note: TypeScript's implementation is much more complicated because\n      // more things are considered modifiers there.\n      // This implementation only handles modifiers not handled by @babel/parser itself. And \"static\".\n      // TODO: Would be nice to avoid lookahead. Want a hasLineBreakUpNext() method...\n      this.next();\n      return this.tsTokenCanFollowModifier();\n    }\n\n    /** Parses a modifier matching one the given modifier names. */\n    tsParseModifier<T: TsModifier>(\n      allowedModifiers: T[],\n      stopOnStartOfClassStaticBlock?: boolean,\n    ): ?T {\n      if (!tokenIsIdentifier(this.state.type) && this.state.type !== tt._in) {\n        return undefined;\n      }\n\n      const modifier = this.state.value;\n      if (allowedModifiers.indexOf(modifier) !== -1) {\n        if (stopOnStartOfClassStaticBlock && this.tsIsStartOfStaticBlocks()) {\n          return undefined;\n        }\n        if (this.tsTryParse(this.tsNextTokenCanFollowModifier.bind(this))) {\n          return modifier;\n        }\n      }\n      return undefined;\n    }\n\n    /** Parses a list of modifiers, in any order.\n     *  If you need a specific order, you must call this function multiple times:\n     *    this.tsParseModifiers({ modified: node, allowedModifiers: [\"public\"] });\n     *    this.tsParseModifiers({ modified: node, allowedModifiers: [\"abstract\", \"readonly\"] });\n     */\n    tsParseModifiers({\n      modified,\n      allowedModifiers,\n      disallowedModifiers,\n      stopOnStartOfClassStaticBlock,\n      errorTemplate = TSErrors.InvalidModifierOnTypeMember,\n    }: {\n      modified: {\n        [key: TsModifier]: ?true,\n        accessibility?: N.Accessibility,\n      },\n      allowedModifiers: TsModifier[],\n      disallowedModifiers?: TsModifier[],\n      stopOnStartOfClassStaticBlock?: boolean,\n      // FIXME: make sure errorTemplate can receive `modifier`\n      errorTemplate?: any,\n    }): void {\n      const enforceOrder = (loc, modifier, before, after) => {\n        if (modifier === before && modified[after]) {\n          this.raise(TSErrors.InvalidModifiersOrder, {\n            at: loc,\n            orderedModifiers: [before, after],\n          });\n        }\n      };\n      const incompatible = (loc, modifier, mod1, mod2) => {\n        if (\n          (modified[mod1] && modifier === mod2) ||\n          (modified[mod2] && modifier === mod1)\n        ) {\n          this.raise(TSErrors.IncompatibleModifiers, {\n            at: loc,\n            modifiers: [mod1, mod2],\n          });\n        }\n      };\n\n      for (;;) {\n        const { startLoc } = this.state;\n        const modifier: ?TsModifier = this.tsParseModifier(\n          allowedModifiers.concat(disallowedModifiers ?? []),\n          stopOnStartOfClassStaticBlock,\n        );\n\n        if (!modifier) break;\n\n        if (tsIsAccessModifier(modifier)) {\n          if (modified.accessibility) {\n            this.raise(TSErrors.DuplicateAccessibilityModifier, {\n              at: startLoc,\n              modifier,\n            });\n          } else {\n            enforceOrder(startLoc, modifier, modifier, \"override\");\n            enforceOrder(startLoc, modifier, modifier, \"static\");\n            enforceOrder(startLoc, modifier, modifier, \"readonly\");\n\n            modified.accessibility = modifier;\n          }\n        } else if (tsIsVarianceAnnotations(modifier)) {\n          if (modified[modifier]) {\n            this.raise(TSErrors.DuplicateModifier, { at: startLoc, modifier });\n          }\n          modified[modifier] = true;\n\n          enforceOrder(startLoc, modifier, \"in\", \"out\");\n        } else {\n          if (Object.hasOwnProperty.call(modified, modifier)) {\n            this.raise(TSErrors.DuplicateModifier, { at: startLoc, modifier });\n          } else {\n            enforceOrder(startLoc, modifier, \"static\", \"readonly\");\n            enforceOrder(startLoc, modifier, \"static\", \"override\");\n            enforceOrder(startLoc, modifier, \"override\", \"readonly\");\n            enforceOrder(startLoc, modifier, \"abstract\", \"override\");\n\n            incompatible(startLoc, modifier, \"declare\", \"override\");\n            incompatible(startLoc, modifier, \"static\", \"abstract\");\n          }\n          modified[modifier] = true;\n        }\n\n        if (disallowedModifiers?.includes(modifier)) {\n          this.raise(errorTemplate, {\n            at: startLoc,\n            modifier,\n          });\n        }\n      }\n    }\n\n    tsIsListTerminator(kind: ParsingContext): boolean {\n      switch (kind) {\n        case \"EnumMembers\":\n        case \"TypeMembers\":\n          return this.match(tt.braceR);\n        case \"HeritageClauseElement\":\n          return this.match(tt.braceL);\n        case \"TupleElementTypes\":\n          return this.match(tt.bracketR);\n        case \"TypeParametersOrArguments\":\n          return this.match(tt.gt);\n      }\n\n      throw new Error(\"Unreachable\");\n    }\n\n    tsParseList<T: N.Node>(kind: ParsingContext, parseElement: () => T): T[] {\n      const result: T[] = [];\n      while (!this.tsIsListTerminator(kind)) {\n        // Skipping \"parseListElement\" from the TS source since that's just for error handling.\n        result.push(parseElement());\n      }\n      return result;\n    }\n\n    tsParseDelimitedList<T: N.Node>(\n      kind: ParsingContext,\n      parseElement: () => T,\n      refTrailingCommaPos?: { value: number },\n    ): T[] {\n      return nonNull(\n        this.tsParseDelimitedListWorker(\n          kind,\n          parseElement,\n          /* expectSuccess */ true,\n          refTrailingCommaPos,\n        ),\n      );\n    }\n\n    /**\n     * If !expectSuccess, returns undefined instead of failing to parse.\n     * If expectSuccess, parseElement should always return a defined value.\n     */\n    tsParseDelimitedListWorker<T: N.Node>(\n      kind: ParsingContext,\n      parseElement: () => ?T,\n      expectSuccess: boolean,\n      refTrailingCommaPos?: { value: number },\n    ): ?(T[]) {\n      const result = [];\n      let trailingCommaPos = -1;\n\n      for (;;) {\n        if (this.tsIsListTerminator(kind)) {\n          break;\n        }\n        trailingCommaPos = -1;\n\n        const element = parseElement();\n        if (element == null) {\n          return undefined;\n        }\n        result.push(element);\n\n        if (this.eat(tt.comma)) {\n          trailingCommaPos = this.state.lastTokStart;\n          continue;\n        }\n\n        if (this.tsIsListTerminator(kind)) {\n          break;\n        }\n\n        if (expectSuccess) {\n          // This will fail with an error about a missing comma\n          this.expect(tt.comma);\n        }\n        return undefined;\n      }\n\n      if (refTrailingCommaPos) {\n        refTrailingCommaPos.value = trailingCommaPos;\n      }\n\n      return result;\n    }\n\n    tsParseBracketedList<T: N.Node>(\n      kind: ParsingContext,\n      parseElement: () => T,\n      bracket: boolean,\n      skipFirstToken: boolean,\n      refTrailingCommaPos?: { value: number },\n    ): T[] {\n      if (!skipFirstToken) {\n        if (bracket) {\n          this.expect(tt.bracketL);\n        } else {\n          this.expect(tt.lt);\n        }\n      }\n\n      const result = this.tsParseDelimitedList(\n        kind,\n        parseElement,\n        refTrailingCommaPos,\n      );\n\n      if (bracket) {\n        this.expect(tt.bracketR);\n      } else {\n        this.expect(tt.gt);\n      }\n\n      return result;\n    }\n\n    tsParseImportType(): N.TsImportType {\n      const node: N.TsImportType = this.startNode();\n      this.expect(tt._import);\n      this.expect(tt.parenL);\n      if (!this.match(tt.string)) {\n        this.raise(TSErrors.UnsupportedImportTypeArgument, {\n          at: this.state.startLoc,\n        });\n      }\n\n      // For compatibility to estree we cannot call parseLiteral directly here\n      node.argument = this.parseExprAtom();\n      this.expect(tt.parenR);\n\n      if (this.eat(tt.dot)) {\n        // In this instance, the entity name will actually itself be a\n        // qualifier, so allow it to be a reserved word as well.\n        node.qualifier = this.tsParseEntityName();\n      }\n      if (this.match(tt.lt)) {\n        node.typeParameters = this.tsParseTypeArguments();\n      }\n      return this.finishNode(node, \"TSImportType\");\n    }\n\n    tsParseEntityName(allowReservedWords: boolean = true): N.TsEntityName {\n      let entity: N.TsEntityName = this.parseIdentifier(allowReservedWords);\n      while (this.eat(tt.dot)) {\n        const node: N.TsQualifiedName = this.startNodeAtNode(entity);\n        node.left = entity;\n        node.right = this.parseIdentifier(allowReservedWords);\n        entity = this.finishNode(node, \"TSQualifiedName\");\n      }\n      return entity;\n    }\n\n    tsParseTypeReference(): N.TsTypeReference {\n      const node: N.TsTypeReference = this.startNode();\n      node.typeName = this.tsParseEntityName();\n      if (!this.hasPrecedingLineBreak() && this.match(tt.lt)) {\n        node.typeParameters = this.tsParseTypeArguments();\n      }\n      return this.finishNode(node, \"TSTypeReference\");\n    }\n\n    tsParseThisTypePredicate(lhs: N.TsThisType): N.TsTypePredicate {\n      this.next();\n      const node: N.TsTypePredicate = this.startNodeAtNode(lhs);\n      node.parameterName = lhs;\n      node.typeAnnotation = this.tsParseTypeAnnotation(/* eatColon */ false);\n      node.asserts = false;\n      return this.finishNode(node, \"TSTypePredicate\");\n    }\n\n    tsParseThisTypeNode(): N.TsThisType {\n      const node: N.TsThisType = this.startNode();\n      this.next();\n      return this.finishNode(node, \"TSThisType\");\n    }\n\n    tsParseTypeQuery(): N.TsTypeQuery {\n      const node: N.TsTypeQuery = this.startNode();\n      this.expect(tt._typeof);\n      if (this.match(tt._import)) {\n        node.exprName = this.tsParseImportType();\n      } else {\n        node.exprName = this.tsParseEntityName();\n      }\n      if (!this.hasPrecedingLineBreak() && this.match(tt.lt)) {\n        node.typeParameters = this.tsParseTypeArguments();\n      }\n      return this.finishNode(node, \"TSTypeQuery\");\n    }\n\n    tsParseInOutModifiers(node: N.TsTypeParameter) {\n      this.tsParseModifiers({\n        modified: node,\n        allowedModifiers: [\"in\", \"out\"],\n        disallowedModifiers: [\n          \"public\",\n          \"private\",\n          \"protected\",\n          \"readonly\",\n          \"declare\",\n          \"abstract\",\n          \"override\",\n        ],\n        errorTemplate: TSErrors.InvalidModifierOnTypeParameter,\n      });\n    }\n\n    // for better error recover\n    tsParseNoneModifiers(node: N.TsTypeParameter) {\n      this.tsParseModifiers({\n        modified: node,\n        allowedModifiers: [],\n        disallowedModifiers: [\"in\", \"out\"],\n        errorTemplate: TSErrors.InvalidModifierOnTypeParameterPositions,\n      });\n    }\n\n    tsParseTypeParameter(\n      parseModifiers: (\n        node: N.TsTypeParameter,\n      ) => void = this.tsParseNoneModifiers.bind(this),\n    ): N.TsTypeParameter {\n      const node: N.TsTypeParameter = this.startNode();\n\n      parseModifiers(node);\n\n      node.name = this.tsParseTypeParameterName();\n      node.constraint = this.tsEatThenParseType(tt._extends);\n      node.default = this.tsEatThenParseType(tt.eq);\n      return this.finishNode(node, \"TSTypeParameter\");\n    }\n\n    tsTryParseTypeParameters(\n      parseModifiers: ?(node: N.TsTypeParameter) => void,\n    ): ?N.TsTypeParameterDeclaration {\n      if (this.match(tt.lt)) {\n        return this.tsParseTypeParameters(parseModifiers);\n      }\n    }\n\n    tsParseTypeParameters(parseModifiers: ?(node: N.TsTypeParameter) => void) {\n      const node: N.TsTypeParameterDeclaration = this.startNode();\n\n      if (this.match(tt.lt) || this.match(tt.jsxTagStart)) {\n        this.next();\n      } else {\n        this.unexpected();\n      }\n\n      const refTrailingCommaPos = { value: -1 };\n\n      node.params = this.tsParseBracketedList(\n        \"TypeParametersOrArguments\",\n        this.tsParseTypeParameter.bind(this, parseModifiers),\n        /* bracket */ false,\n        /* skipFirstToken */ true,\n        refTrailingCommaPos,\n      );\n      if (node.params.length === 0) {\n        this.raise(TSErrors.EmptyTypeParameters, { at: node });\n      }\n      if (refTrailingCommaPos.value !== -1) {\n        this.addExtra(node, \"trailingComma\", refTrailingCommaPos.value);\n      }\n      return this.finishNode(node, \"TSTypeParameterDeclaration\");\n    }\n\n    tsTryNextParseConstantContext(): ?N.TsTypeReference {\n      if (this.lookahead().type !== tt._const) return null;\n\n      this.next();\n      const typeReference = this.tsParseTypeReference();\n\n      // If the type reference has type parameters, then you are using it as a\n      // type and not as a const signifier. We'll *never* be able to find this\n      // name, since const isn't allowed as a type name. So in this instance we\n      // get to pretend we're the type checker.\n      if (typeReference.typeParameters) {\n        this.raise(TSErrors.CannotFindName, {\n          at: typeReference.typeName,\n          name: \"const\",\n        });\n      }\n\n      return typeReference;\n    }\n\n    // Note: In TypeScript implementation we must provide `yieldContext` and `awaitContext`,\n    // but here it's always false, because this is only used for types.\n    tsFillSignature(\n      returnToken: TokenType,\n      signature: N.TsSignatureDeclaration,\n    ): void {\n      // Arrow fns *must* have return token (`=>`). Normal functions can omit it.\n      const returnTokenRequired = returnToken === tt.arrow;\n\n      // https://github.com/babel/babel/issues/9231\n      const paramsKey = process.env.BABEL_8_BREAKING ? \"params\" : \"parameters\";\n      const returnTypeKey = process.env.BABEL_8_BREAKING\n        ? \"returnType\"\n        : \"typeAnnotation\";\n\n      signature.typeParameters = this.tsTryParseTypeParameters();\n      this.expect(tt.parenL);\n      signature[paramsKey] = this.tsParseBindingListForSignature();\n      if (returnTokenRequired) {\n        signature[returnTypeKey] =\n          this.tsParseTypeOrTypePredicateAnnotation(returnToken);\n      } else if (this.match(returnToken)) {\n        signature[returnTypeKey] =\n          this.tsParseTypeOrTypePredicateAnnotation(returnToken);\n      }\n    }\n\n    tsParseBindingListForSignature(): $ReadOnlyArray<\n      N.Identifier | N.RestElement | N.ObjectPattern | N.ArrayPattern,\n    > {\n      return this.parseBindingList(tt.parenR, charCodes.rightParenthesis).map(\n        pattern => {\n          if (\n            pattern.type !== \"Identifier\" &&\n            pattern.type !== \"RestElement\" &&\n            pattern.type !== \"ObjectPattern\" &&\n            pattern.type !== \"ArrayPattern\"\n          ) {\n            this.raise(TSErrors.UnsupportedSignatureParameterKind, {\n              at: pattern,\n              type: pattern.type,\n            });\n          }\n          return (pattern: any);\n        },\n      );\n    }\n\n    tsParseTypeMemberSemicolon(): void {\n      if (!this.eat(tt.comma) && !this.isLineTerminator()) {\n        this.expect(tt.semi);\n      }\n    }\n\n    tsParseSignatureMember(\n      kind: \"TSCallSignatureDeclaration\" | \"TSConstructSignatureDeclaration\",\n      node: N.TsCallSignatureDeclaration | N.TsConstructSignatureDeclaration,\n    ): N.TsCallSignatureDeclaration | N.TsConstructSignatureDeclaration {\n      this.tsFillSignature(tt.colon, node);\n      this.tsParseTypeMemberSemicolon();\n      return this.finishNode(node, kind);\n    }\n\n    tsIsUnambiguouslyIndexSignature() {\n      this.next(); // Skip '{'\n      if (tokenIsIdentifier(this.state.type)) {\n        this.next();\n        return this.match(tt.colon);\n      }\n      return false;\n    }\n\n    tsTryParseIndexSignature(node: N.Node): ?N.TsIndexSignature {\n      if (\n        !(\n          this.match(tt.bracketL) &&\n          this.tsLookAhead(this.tsIsUnambiguouslyIndexSignature.bind(this))\n        )\n      ) {\n        return undefined;\n      }\n\n      this.expect(tt.bracketL);\n      const id = this.parseIdentifier();\n      id.typeAnnotation = this.tsParseTypeAnnotation();\n      this.resetEndLocation(id); // set end position to end of type\n\n      this.expect(tt.bracketR);\n      node.parameters = [id];\n\n      const type = this.tsTryParseTypeAnnotation();\n      if (type) node.typeAnnotation = type;\n      this.tsParseTypeMemberSemicolon();\n      return this.finishNode(node, \"TSIndexSignature\");\n    }\n\n    tsParsePropertyOrMethodSignature(\n      node: N.TsPropertySignature | N.TsMethodSignature,\n      readonly: boolean,\n    ): N.TsPropertySignature | N.TsMethodSignature {\n      if (this.eat(tt.question)) node.optional = true;\n      const nodeAny: any = node;\n\n      if (this.match(tt.parenL) || this.match(tt.lt)) {\n        if (readonly) {\n          this.raise(TSErrors.ReadonlyForMethodSignature, { at: node });\n        }\n        const method: N.TsMethodSignature = nodeAny;\n        if (method.kind && this.match(tt.lt)) {\n          this.raise(TSErrors.AccesorCannotHaveTypeParameters, {\n            at: this.state.curPosition(),\n          });\n        }\n        this.tsFillSignature(tt.colon, method);\n        this.tsParseTypeMemberSemicolon();\n        const paramsKey = process.env.BABEL_8_BREAKING\n          ? \"params\"\n          : \"parameters\";\n        const returnTypeKey = process.env.BABEL_8_BREAKING\n          ? \"returnType\"\n          : \"typeAnnotation\";\n        if (method.kind === \"get\") {\n          if (method[paramsKey].length > 0) {\n            this.raise(Errors.BadGetterArity, { at: this.state.curPosition() });\n            if (this.isThisParam(method[paramsKey][0])) {\n              this.raise(TSErrors.AccesorCannotDeclareThisParameter, {\n                at: this.state.curPosition(),\n              });\n            }\n          }\n        } else if (method.kind === \"set\") {\n          if (method[paramsKey].length !== 1) {\n            this.raise(Errors.BadSetterArity, { at: this.state.curPosition() });\n          } else {\n            const firstParameter = method[paramsKey][0];\n            if (this.isThisParam(firstParameter)) {\n              this.raise(TSErrors.AccesorCannotDeclareThisParameter, {\n                at: this.state.curPosition(),\n              });\n            }\n            if (\n              firstParameter.type === \"Identifier\" &&\n              firstParameter.optional\n            ) {\n              this.raise(TSErrors.SetAccesorCannotHaveOptionalParameter, {\n                at: this.state.curPosition(),\n              });\n            }\n            if (firstParameter.type === \"RestElement\") {\n              this.raise(TSErrors.SetAccesorCannotHaveRestParameter, {\n                at: this.state.curPosition(),\n              });\n            }\n          }\n          if (method[returnTypeKey]) {\n            this.raise(TSErrors.SetAccesorCannotHaveReturnType, {\n              at: method[returnTypeKey],\n            });\n          }\n        } else {\n          method.kind = \"method\";\n        }\n        return this.finishNode(method, \"TSMethodSignature\");\n      } else {\n        const property: N.TsPropertySignature = nodeAny;\n        if (readonly) property.readonly = true;\n        const type = this.tsTryParseTypeAnnotation();\n        if (type) property.typeAnnotation = type;\n        this.tsParseTypeMemberSemicolon();\n        return this.finishNode(property, \"TSPropertySignature\");\n      }\n    }\n\n    tsParseTypeMember(): N.TsTypeElement {\n      const node: any = this.startNode();\n\n      if (this.match(tt.parenL) || this.match(tt.lt)) {\n        return this.tsParseSignatureMember(\"TSCallSignatureDeclaration\", node);\n      }\n\n      if (this.match(tt._new)) {\n        const id: N.Identifier = this.startNode();\n        this.next();\n        if (this.match(tt.parenL) || this.match(tt.lt)) {\n          return this.tsParseSignatureMember(\n            \"TSConstructSignatureDeclaration\",\n            node,\n          );\n        } else {\n          node.key = this.createIdentifier(id, \"new\");\n          return this.tsParsePropertyOrMethodSignature(node, false);\n        }\n      }\n\n      this.tsParseModifiers({\n        modified: node,\n        allowedModifiers: [\"readonly\"],\n        disallowedModifiers: [\n          \"declare\",\n          \"abstract\",\n          \"private\",\n          \"protected\",\n          \"public\",\n          \"static\",\n          \"override\",\n        ],\n      });\n\n      const idx = this.tsTryParseIndexSignature(node);\n      if (idx) {\n        return idx;\n      }\n\n      this.parsePropertyName(node);\n      if (\n        !node.computed &&\n        node.key.type === \"Identifier\" &&\n        (node.key.name === \"get\" || node.key.name === \"set\") &&\n        this.tsTokenCanFollowModifier()\n      ) {\n        node.kind = node.key.name;\n        this.parsePropertyName(node);\n      }\n      return this.tsParsePropertyOrMethodSignature(node, !!node.readonly);\n    }\n\n    tsParseTypeLiteral(): N.TsTypeLiteral {\n      const node: N.TsTypeLiteral = this.startNode();\n      node.members = this.tsParseObjectTypeMembers();\n      return this.finishNode(node, \"TSTypeLiteral\");\n    }\n\n    tsParseObjectTypeMembers(): $ReadOnlyArray<N.TsTypeElement> {\n      this.expect(tt.braceL);\n      const members = this.tsParseList(\n        \"TypeMembers\",\n        this.tsParseTypeMember.bind(this),\n      );\n      this.expect(tt.braceR);\n      return members;\n    }\n\n    tsIsStartOfMappedType(): boolean {\n      this.next();\n      if (this.eat(tt.plusMin)) {\n        return this.isContextual(tt._readonly);\n      }\n      if (this.isContextual(tt._readonly)) {\n        this.next();\n      }\n      if (!this.match(tt.bracketL)) {\n        return false;\n      }\n      this.next();\n      if (!this.tsIsIdentifier()) {\n        return false;\n      }\n      this.next();\n      return this.match(tt._in);\n    }\n\n    tsParseMappedTypeParameter(): N.TsTypeParameter {\n      const node: N.TsTypeParameter = this.startNode();\n      node.name = this.tsParseTypeParameterName();\n      node.constraint = this.tsExpectThenParseType(tt._in);\n      return this.finishNode(node, \"TSTypeParameter\");\n    }\n\n    tsParseMappedType(): N.TsMappedType {\n      const node: N.TsMappedType = this.startNode();\n\n      this.expect(tt.braceL);\n\n      if (this.match(tt.plusMin)) {\n        node.readonly = this.state.value;\n        this.next();\n        this.expectContextual(tt._readonly);\n      } else if (this.eatContextual(tt._readonly)) {\n        node.readonly = true;\n      }\n\n      this.expect(tt.bracketL);\n      node.typeParameter = this.tsParseMappedTypeParameter();\n      node.nameType = this.eatContextual(tt._as) ? this.tsParseType() : null;\n\n      this.expect(tt.bracketR);\n\n      if (this.match(tt.plusMin)) {\n        node.optional = this.state.value;\n        this.next();\n        this.expect(tt.question);\n      } else if (this.eat(tt.question)) {\n        node.optional = true;\n      }\n\n      node.typeAnnotation = this.tsTryParseType();\n      this.semicolon();\n      this.expect(tt.braceR);\n\n      return this.finishNode(node, \"TSMappedType\");\n    }\n\n    tsParseTupleType(): N.TsTupleType {\n      const node: N.TsTupleType = this.startNode();\n      node.elementTypes = this.tsParseBracketedList(\n        \"TupleElementTypes\",\n        this.tsParseTupleElementType.bind(this),\n        /* bracket */ true,\n        /* skipFirstToken */ false,\n      );\n\n      // Validate the elementTypes to ensure that no mandatory elements\n      // follow optional elements\n      let seenOptionalElement = false;\n      let labeledElements = null;\n      node.elementTypes.forEach(elementNode => {\n        let { type } = elementNode;\n\n        if (\n          seenOptionalElement &&\n          type !== \"TSRestType\" &&\n          type !== \"TSOptionalType\" &&\n          !(type === \"TSNamedTupleMember\" && elementNode.optional)\n        ) {\n          this.raise(TSErrors.OptionalTypeBeforeRequired, {\n            at: elementNode,\n          });\n        }\n\n        // Flow doesn't support ||=\n        seenOptionalElement =\n          seenOptionalElement ||\n          (type === \"TSNamedTupleMember\" && elementNode.optional) ||\n          type === \"TSOptionalType\";\n\n        // When checking labels, check the argument of the spread operator\n        if (type === \"TSRestType\") {\n          elementNode = elementNode.typeAnnotation;\n          type = elementNode.type;\n        }\n\n        const isLabeled = type === \"TSNamedTupleMember\";\n        // Flow doesn't support ??=\n        labeledElements = labeledElements ?? isLabeled;\n        if (labeledElements !== isLabeled) {\n          this.raise(TSErrors.MixedLabeledAndUnlabeledElements, {\n            at: elementNode,\n          });\n        }\n      });\n\n      return this.finishNode(node, \"TSTupleType\");\n    }\n\n    tsParseTupleElementType(): N.TsType | N.TsNamedTupleMember {\n      // parses `...TsType[]`\n\n      const { start: startPos, startLoc } = this.state;\n\n      const rest = this.eat(tt.ellipsis);\n      let type = this.tsParseType();\n      const optional = this.eat(tt.question);\n      const labeled = this.eat(tt.colon);\n\n      if (labeled) {\n        const labeledNode: N.TsNamedTupleMember = this.startNodeAtNode(type);\n        labeledNode.optional = optional;\n\n        if (\n          type.type === \"TSTypeReference\" &&\n          !type.typeParameters &&\n          type.typeName.type === \"Identifier\"\n        ) {\n          labeledNode.label = (type.typeName: N.Identifier);\n        } else {\n          this.raise(TSErrors.InvalidTupleMemberLabel, { at: type });\n          // This produces an invalid AST, but at least we don't drop\n          // nodes representing the invalid source.\n          // $FlowIgnore\n          labeledNode.label = type;\n        }\n\n        labeledNode.elementType = this.tsParseType();\n        type = this.finishNode(labeledNode, \"TSNamedTupleMember\");\n      } else if (optional) {\n        const optionalTypeNode: N.TsOptionalType = this.startNodeAtNode(type);\n        optionalTypeNode.typeAnnotation = type;\n        type = this.finishNode(optionalTypeNode, \"TSOptionalType\");\n      }\n\n      if (rest) {\n        const restNode: N.TsRestType = this.startNodeAt(startPos, startLoc);\n        restNode.typeAnnotation = type;\n        type = this.finishNode(restNode, \"TSRestType\");\n      }\n\n      return type;\n    }\n\n    tsParseParenthesizedType(): N.TsParenthesizedType {\n      const node = this.startNode();\n      this.expect(tt.parenL);\n      node.typeAnnotation = this.tsParseType();\n      this.expect(tt.parenR);\n      return this.finishNode(node, \"TSParenthesizedType\");\n    }\n\n    tsParseFunctionOrConstructorType(\n      type: \"TSFunctionType\" | \"TSConstructorType\",\n      abstract?: boolean,\n    ): N.TsFunctionOrConstructorType {\n      const node: N.TsFunctionOrConstructorType = this.startNode();\n      if (type === \"TSConstructorType\") {\n        // $FlowIgnore\n        node.abstract = !!abstract;\n        if (abstract) this.next();\n        this.next(); // eat `new`\n      }\n      this.tsInAllowConditionalTypesContext(() =>\n        this.tsFillSignature(tt.arrow, node),\n      );\n      return this.finishNode(node, type);\n    }\n\n    tsParseLiteralTypeNode(): N.TsLiteralType {\n      const node: N.TsLiteralType = this.startNode();\n      node.literal = (() => {\n        switch (this.state.type) {\n          case tt.num:\n          case tt.bigint:\n          case tt.string:\n          case tt._true:\n          case tt._false:\n            // For compatibility to estree we cannot call parseLiteral directly here\n            return this.parseExprAtom();\n          default:\n            throw this.unexpected();\n        }\n      })();\n      return this.finishNode(node, \"TSLiteralType\");\n    }\n\n    tsParseTemplateLiteralType(): N.TsType {\n      const node: N.TsLiteralType = this.startNode();\n      node.literal = this.parseTemplate(false);\n      return this.finishNode(node, \"TSLiteralType\");\n    }\n\n    parseTemplateSubstitution(): N.TsType {\n      if (this.state.inType) return this.tsParseType();\n      return super.parseTemplateSubstitution();\n    }\n\n    tsParseThisTypeOrThisTypePredicate(): N.TsThisType | N.TsTypePredicate {\n      const thisKeyword = this.tsParseThisTypeNode();\n      if (this.isContextual(tt._is) && !this.hasPrecedingLineBreak()) {\n        return this.tsParseThisTypePredicate(thisKeyword);\n      } else {\n        return thisKeyword;\n      }\n    }\n\n    tsParseNonArrayType(): N.TsType {\n      switch (this.state.type) {\n        case tt.string:\n        case tt.num:\n        case tt.bigint:\n        case tt._true:\n        case tt._false:\n          return this.tsParseLiteralTypeNode();\n        case tt.plusMin:\n          if (this.state.value === \"-\") {\n            const node: N.TsLiteralType = this.startNode();\n            const nextToken = this.lookahead();\n            if (nextToken.type !== tt.num && nextToken.type !== tt.bigint) {\n              throw this.unexpected();\n            }\n            node.literal = this.parseMaybeUnary();\n            return this.finishNode(node, \"TSLiteralType\");\n          }\n          break;\n        case tt._this:\n          return this.tsParseThisTypeOrThisTypePredicate();\n        case tt._typeof:\n          return this.tsParseTypeQuery();\n        case tt._import:\n          return this.tsParseImportType();\n        case tt.braceL:\n          return this.tsLookAhead(this.tsIsStartOfMappedType.bind(this))\n            ? this.tsParseMappedType()\n            : this.tsParseTypeLiteral();\n        case tt.bracketL:\n          return this.tsParseTupleType();\n        case tt.parenL:\n          if (process.env.BABEL_8_BREAKING) {\n            if (!this.options.createParenthesizedExpressions) {\n              const startPos = this.state.start;\n              this.next();\n              const type = this.tsParseType();\n              this.expect(tt.parenR);\n              this.addExtra(type, \"parenthesized\", true);\n              this.addExtra(type, \"parenStart\", startPos);\n              return type;\n            }\n          }\n\n          return this.tsParseParenthesizedType();\n        case tt.templateNonTail:\n        case tt.templateTail:\n          return this.tsParseTemplateLiteralType();\n        default: {\n          const { type } = this.state;\n          if (\n            tokenIsIdentifier(type) ||\n            type === tt._void ||\n            type === tt._null\n          ) {\n            const nodeType =\n              type === tt._void\n                ? \"TSVoidKeyword\"\n                : type === tt._null\n                ? \"TSNullKeyword\"\n                : keywordTypeFromName(this.state.value);\n            if (\n              nodeType !== undefined &&\n              this.lookaheadCharCode() !== charCodes.dot\n            ) {\n              const node: N.TsKeywordType = this.startNode();\n              this.next();\n              return this.finishNode(node, nodeType);\n            }\n            return this.tsParseTypeReference();\n          }\n        }\n      }\n\n      throw this.unexpected();\n    }\n\n    tsParseArrayTypeOrHigher(): N.TsType {\n      let type = this.tsParseNonArrayType();\n      while (!this.hasPrecedingLineBreak() && this.eat(tt.bracketL)) {\n        if (this.match(tt.bracketR)) {\n          const node: N.TsArrayType = this.startNodeAtNode(type);\n          node.elementType = type;\n          this.expect(tt.bracketR);\n          type = this.finishNode(node, \"TSArrayType\");\n        } else {\n          const node: N.TsIndexedAccessType = this.startNodeAtNode(type);\n          node.objectType = type;\n          node.indexType = this.tsParseType();\n          this.expect(tt.bracketR);\n          type = this.finishNode(node, \"TSIndexedAccessType\");\n        }\n      }\n      return type;\n    }\n\n    tsParseTypeOperator(): N.TsTypeOperator {\n      const node: N.TsTypeOperator = this.startNode();\n      const operator = this.state.value;\n      this.next(); // eat operator\n      node.operator = operator;\n      node.typeAnnotation = this.tsParseTypeOperatorOrHigher();\n\n      if (operator === \"readonly\") {\n        this.tsCheckTypeAnnotationForReadOnly(node);\n      }\n\n      return this.finishNode(node, \"TSTypeOperator\");\n    }\n\n    tsCheckTypeAnnotationForReadOnly(node: N.Node) {\n      switch (node.typeAnnotation.type) {\n        case \"TSTupleType\":\n        case \"TSArrayType\":\n          return;\n        default:\n          this.raise(TSErrors.UnexpectedReadonly, { at: node });\n      }\n    }\n\n    tsParseInferType(): N.TsInferType {\n      const node = this.startNode();\n      this.expectContextual(tt._infer);\n      const typeParameter = this.startNode();\n      typeParameter.name = this.tsParseTypeParameterName();\n      typeParameter.constraint = this.tsTryParse(() =>\n        this.tsParseConstraintForInferType(),\n      );\n      node.typeParameter = this.finishNode(typeParameter, \"TSTypeParameter\");\n      return this.finishNode(node, \"TSInferType\");\n    }\n\n    tsParseConstraintForInferType() {\n      if (this.eat(tt._extends)) {\n        const constraint = this.tsInDisallowConditionalTypesContext(() =>\n          this.tsParseType(),\n        );\n        if (\n          this.state.inDisallowConditionalTypesContext ||\n          !this.match(tt.question)\n        ) {\n          return constraint;\n        }\n      }\n    }\n\n    tsParseTypeOperatorOrHigher(): N.TsType {\n      const isTypeOperator =\n        tokenIsTSTypeOperator(this.state.type) && !this.state.containsEsc;\n      return isTypeOperator\n        ? this.tsParseTypeOperator()\n        : this.isContextual(tt._infer)\n        ? this.tsParseInferType()\n        : this.tsInAllowConditionalTypesContext(() =>\n            this.tsParseArrayTypeOrHigher(),\n          );\n    }\n\n    tsParseUnionOrIntersectionType(\n      kind: \"TSUnionType\" | \"TSIntersectionType\",\n      parseConstituentType: () => N.TsType,\n      operator: TokenType,\n    ): N.TsType {\n      const node: N.TsUnionType | N.TsIntersectionType = this.startNode();\n      const hasLeadingOperator = this.eat(operator);\n      const types = [];\n      do {\n        types.push(parseConstituentType());\n      } while (this.eat(operator));\n      if (types.length === 1 && !hasLeadingOperator) {\n        return types[0];\n      }\n      node.types = types;\n      return this.finishNode(node, kind);\n    }\n\n    tsParseIntersectionTypeOrHigher(): N.TsType {\n      return this.tsParseUnionOrIntersectionType(\n        \"TSIntersectionType\",\n        this.tsParseTypeOperatorOrHigher.bind(this),\n        tt.bitwiseAND,\n      );\n    }\n\n    tsParseUnionTypeOrHigher() {\n      return this.tsParseUnionOrIntersectionType(\n        \"TSUnionType\",\n        this.tsParseIntersectionTypeOrHigher.bind(this),\n        tt.bitwiseOR,\n      );\n    }\n\n    tsIsStartOfFunctionType() {\n      if (this.match(tt.lt)) {\n        return true;\n      }\n      return (\n        this.match(tt.parenL) &&\n        this.tsLookAhead(this.tsIsUnambiguouslyStartOfFunctionType.bind(this))\n      );\n    }\n\n    tsSkipParameterStart(): boolean {\n      if (tokenIsIdentifier(this.state.type) || this.match(tt._this)) {\n        this.next();\n        return true;\n      }\n\n      if (this.match(tt.braceL)) {\n        // Return true if we can parse an object pattern without errors\n        const { errors } = this.state;\n        const previousErrorCount = errors.length;\n        try {\n          this.parseObjectLike(tt.braceR, true);\n          return errors.length === previousErrorCount;\n        } catch {\n          return false;\n        }\n      }\n\n      if (this.match(tt.bracketL)) {\n        this.next();\n        // Return true if we can parse an array pattern without errors\n        const { errors } = this.state;\n        const previousErrorCount = errors.length;\n        try {\n          this.parseBindingList(\n            tt.bracketR,\n            charCodes.rightSquareBracket,\n            true,\n          );\n          return errors.length === previousErrorCount;\n        } catch {\n          return false;\n        }\n      }\n\n      return false;\n    }\n\n    tsIsUnambiguouslyStartOfFunctionType(): boolean {\n      this.next();\n      if (this.match(tt.parenR) || this.match(tt.ellipsis)) {\n        // ( )\n        // ( ...\n        return true;\n      }\n      if (this.tsSkipParameterStart()) {\n        if (\n          this.match(tt.colon) ||\n          this.match(tt.comma) ||\n          this.match(tt.question) ||\n          this.match(tt.eq)\n        ) {\n          // ( xxx :\n          // ( xxx ,\n          // ( xxx ?\n          // ( xxx =\n          return true;\n        }\n        if (this.match(tt.parenR)) {\n          this.next();\n          if (this.match(tt.arrow)) {\n            // ( xxx ) =>\n            return true;\n          }\n        }\n      }\n      return false;\n    }\n\n    tsParseTypeOrTypePredicateAnnotation(\n      returnToken: TokenType,\n    ): N.TsTypeAnnotation {\n      return this.tsInType(() => {\n        const t: N.TsTypeAnnotation = this.startNode();\n        this.expect(returnToken);\n\n        const node = this.startNode<N.TsTypePredicate>();\n\n        const asserts = !!this.tsTryParse(\n          this.tsParseTypePredicateAsserts.bind(this),\n        );\n\n        if (asserts && this.match(tt._this)) {\n          // When asserts is false, thisKeyword is handled by tsParseNonArrayType\n          // : asserts this is type\n          let thisTypePredicate = this.tsParseThisTypeOrThisTypePredicate();\n          // if it turns out to be a `TSThisType`, wrap it with `TSTypePredicate`\n          // : asserts this\n          if (thisTypePredicate.type === \"TSThisType\") {\n            node.parameterName = (thisTypePredicate: N.TsThisType);\n            node.asserts = true;\n            (node: N.TsTypePredicate).typeAnnotation = null;\n            thisTypePredicate = this.finishNode(node, \"TSTypePredicate\");\n          } else {\n            this.resetStartLocationFromNode(thisTypePredicate, node);\n            (thisTypePredicate: N.TsTypePredicate).asserts = true;\n          }\n          t.typeAnnotation = thisTypePredicate;\n          return this.finishNode(t, \"TSTypeAnnotation\");\n        }\n\n        const typePredicateVariable =\n          this.tsIsIdentifier() &&\n          this.tsTryParse(this.tsParseTypePredicatePrefix.bind(this));\n\n        if (!typePredicateVariable) {\n          if (!asserts) {\n            // : type\n            return this.tsParseTypeAnnotation(/* eatColon */ false, t);\n          }\n\n          // : asserts foo\n          node.parameterName = this.parseIdentifier();\n          node.asserts = asserts;\n          (node: N.TsTypePredicate).typeAnnotation = null;\n          t.typeAnnotation = this.finishNode(node, \"TSTypePredicate\");\n          return this.finishNode(t, \"TSTypeAnnotation\");\n        }\n\n        // : asserts foo is type\n        const type = this.tsParseTypeAnnotation(/* eatColon */ false);\n        node.parameterName = typePredicateVariable;\n        node.typeAnnotation = type;\n        node.asserts = asserts;\n        t.typeAnnotation = this.finishNode(node, \"TSTypePredicate\");\n        return this.finishNode(t, \"TSTypeAnnotation\");\n      });\n    }\n\n    tsTryParseTypeOrTypePredicateAnnotation(): ?N.TsTypeAnnotation {\n      return this.match(tt.colon)\n        ? this.tsParseTypeOrTypePredicateAnnotation(tt.colon)\n        : undefined;\n    }\n\n    tsTryParseTypeAnnotation(): ?N.TsTypeAnnotation {\n      return this.match(tt.colon) ? this.tsParseTypeAnnotation() : undefined;\n    }\n\n    tsTryParseType(): ?N.TsType {\n      return this.tsEatThenParseType(tt.colon);\n    }\n\n    tsParseTypePredicatePrefix(): ?N.Identifier {\n      const id = this.parseIdentifier();\n      if (this.isContextual(tt._is) && !this.hasPrecedingLineBreak()) {\n        this.next();\n        return id;\n      }\n    }\n\n    tsParseTypePredicateAsserts(): boolean {\n      if (this.state.type !== tt._asserts) {\n        return false;\n      }\n      const containsEsc = this.state.containsEsc;\n      this.next();\n      if (!tokenIsIdentifier(this.state.type) && !this.match(tt._this)) {\n        return false;\n      }\n\n      if (containsEsc) {\n        this.raise(Errors.InvalidEscapedReservedWord, {\n          at: this.state.lastTokStartLoc,\n          reservedWord: \"asserts\",\n        });\n      }\n\n      return true;\n    }\n\n    tsParseTypeAnnotation(\n      eatColon = true,\n      t: N.TsTypeAnnotation = this.startNode(),\n    ): N.TsTypeAnnotation {\n      this.tsInType(() => {\n        if (eatColon) this.expect(tt.colon);\n        t.typeAnnotation = this.tsParseType();\n      });\n      return this.finishNode(t, \"TSTypeAnnotation\");\n    }\n\n    /** Be sure to be in a type context before calling this, using `tsInType`. */\n    tsParseType(): N.TsType {\n      // Need to set `state.inType` so that we don't parse JSX in a type context.\n      assert(this.state.inType);\n      const type = this.tsParseNonConditionalType();\n\n      if (\n        this.state.inDisallowConditionalTypesContext ||\n        this.hasPrecedingLineBreak() ||\n        !this.eat(tt._extends)\n      ) {\n        return type;\n      }\n      const node: N.TsConditionalType = this.startNodeAtNode(type);\n      node.checkType = type;\n\n      node.extendsType = this.tsInDisallowConditionalTypesContext(() =>\n        this.tsParseNonConditionalType(),\n      );\n\n      this.expect(tt.question);\n      node.trueType = this.tsInAllowConditionalTypesContext(() =>\n        this.tsParseType(),\n      );\n\n      this.expect(tt.colon);\n      node.falseType = this.tsInAllowConditionalTypesContext(() =>\n        this.tsParseType(),\n      );\n\n      return this.finishNode(node, \"TSConditionalType\");\n    }\n\n    isAbstractConstructorSignature(): boolean {\n      return (\n        this.isContextual(tt._abstract) && this.lookahead().type === tt._new\n      );\n    }\n\n    tsParseNonConditionalType(): N.TsType {\n      if (this.tsIsStartOfFunctionType()) {\n        return this.tsParseFunctionOrConstructorType(\"TSFunctionType\");\n      }\n      if (this.match(tt._new)) {\n        // As in `new () => Date`\n        return this.tsParseFunctionOrConstructorType(\"TSConstructorType\");\n      } else if (this.isAbstractConstructorSignature()) {\n        // As in `abstract new () => Date`\n        return this.tsParseFunctionOrConstructorType(\n          \"TSConstructorType\",\n          /* abstract */ true,\n        );\n      }\n      return this.tsParseUnionTypeOrHigher();\n    }\n\n    tsParseTypeAssertion(): N.TsTypeAssertion {\n      if (this.getPluginOption(\"typescript\", \"disallowAmbiguousJSXLike\")) {\n        this.raise(TSErrors.ReservedTypeAssertion, { at: this.state.startLoc });\n      }\n\n      const node: N.TsTypeAssertion = this.startNode();\n      const _const = this.tsTryNextParseConstantContext();\n      node.typeAnnotation = _const || this.tsNextThenParseType();\n      this.expect(tt.gt);\n      node.expression = this.parseMaybeUnary();\n      return this.finishNode(node, \"TSTypeAssertion\");\n    }\n\n    tsParseHeritageClause(\n      token: \"extends\" | \"implements\",\n    ): $ReadOnlyArray<N.TsExpressionWithTypeArguments> {\n      const originalStartLoc = this.state.startLoc;\n\n      const delimitedList = this.tsParseDelimitedList(\n        \"HeritageClauseElement\",\n        () => {\n          const node: N.TsExpressionWithTypeArguments = this.startNode();\n          node.expression = this.tsParseEntityName();\n          if (this.match(tt.lt)) {\n            node.typeParameters = this.tsParseTypeArguments();\n          }\n\n          return this.finishNode(node, \"TSExpressionWithTypeArguments\");\n        },\n      );\n\n      if (!delimitedList.length) {\n        this.raise(TSErrors.EmptyHeritageClauseType, {\n          at: originalStartLoc,\n          token,\n        });\n      }\n\n      return delimitedList;\n    }\n\n    tsParseInterfaceDeclaration(\n      node: N.TsInterfaceDeclaration,\n      properties: { declare?: true } = {},\n    ): ?N.TsInterfaceDeclaration {\n      if (this.hasFollowingLineBreak()) return null;\n      this.expectContextual(tt._interface);\n      if (properties.declare) node.declare = true;\n      if (tokenIsIdentifier(this.state.type)) {\n        node.id = this.parseIdentifier();\n        this.checkIdentifier(node.id, BIND_TS_INTERFACE);\n      } else {\n        node.id = null;\n        this.raise(TSErrors.MissingInterfaceName, { at: this.state.startLoc });\n      }\n\n      node.typeParameters = this.tsTryParseTypeParameters(\n        this.tsParseInOutModifiers.bind(this),\n      );\n      if (this.eat(tt._extends)) {\n        node.extends = this.tsParseHeritageClause(\"extends\");\n      }\n      const body: N.TSInterfaceBody = this.startNode();\n      body.body = this.tsInType(this.tsParseObjectTypeMembers.bind(this));\n      node.body = this.finishNode(body, \"TSInterfaceBody\");\n      return this.finishNode(node, \"TSInterfaceDeclaration\");\n    }\n\n    tsParseTypeAliasDeclaration(\n      node: N.TsTypeAliasDeclaration,\n    ): N.TsTypeAliasDeclaration {\n      node.id = this.parseIdentifier();\n      this.checkIdentifier(node.id, BIND_TS_TYPE);\n\n      node.typeAnnotation = this.tsInType(() => {\n        node.typeParameters = this.tsTryParseTypeParameters(\n          this.tsParseInOutModifiers.bind(this),\n        );\n\n        this.expect(tt.eq);\n\n        if (\n          this.isContextual(tt._intrinsic) &&\n          this.lookahead().type !== tt.dot\n        ) {\n          const node: N.TsKeywordType = this.startNode();\n          this.next();\n          return this.finishNode(node, \"TSIntrinsicKeyword\");\n        }\n\n        return this.tsParseType();\n      });\n\n      this.semicolon();\n      return this.finishNode(node, \"TSTypeAliasDeclaration\");\n    }\n\n    tsInNoContext<T>(cb: () => T): T {\n      const oldContext = this.state.context;\n      this.state.context = [oldContext[0]];\n      try {\n        return cb();\n      } finally {\n        this.state.context = oldContext;\n      }\n    }\n\n    /**\n     * Runs `cb` in a type context.\n     * This should be called one token *before* the first type token,\n     * so that the call to `next()` is run in type context.\n     */\n    tsInType<T>(cb: () => T): T {\n      const oldInType = this.state.inType;\n      this.state.inType = true;\n      try {\n        return cb();\n      } finally {\n        this.state.inType = oldInType;\n      }\n    }\n\n    tsInDisallowConditionalTypesContext<T>(cb: () => T): T {\n      const oldInDisallowConditionalTypesContext =\n        this.state.inDisallowConditionalTypesContext;\n      this.state.inDisallowConditionalTypesContext = true;\n      try {\n        return cb();\n      } finally {\n        this.state.inDisallowConditionalTypesContext =\n          oldInDisallowConditionalTypesContext;\n      }\n    }\n\n    tsInAllowConditionalTypesContext<T>(cb: () => T): T {\n      const oldInDisallowConditionalTypesContext =\n        this.state.inDisallowConditionalTypesContext;\n      this.state.inDisallowConditionalTypesContext = false;\n      try {\n        return cb();\n      } finally {\n        this.state.inDisallowConditionalTypesContext =\n          oldInDisallowConditionalTypesContext;\n      }\n    }\n\n    tsEatThenParseType(token: TokenType): N.TsType | typeof undefined {\n      return !this.match(token) ? undefined : this.tsNextThenParseType();\n    }\n\n    tsExpectThenParseType(token: TokenType): N.TsType {\n      return this.tsDoThenParseType(() => this.expect(token));\n    }\n\n    tsNextThenParseType(): N.TsType {\n      return this.tsDoThenParseType(() => this.next());\n    }\n\n    tsDoThenParseType(cb: () => void): N.TsType {\n      return this.tsInType(() => {\n        cb();\n        return this.tsParseType();\n      });\n    }\n\n    tsParseEnumMember(): N.TsEnumMember {\n      const node: N.TsEnumMember = this.startNode();\n      // Computed property names are grammar errors in an enum, so accept just string literal or identifier.\n      node.id = this.match(tt.string)\n        ? this.parseExprAtom()\n        : this.parseIdentifier(/* liberal */ true);\n      if (this.eat(tt.eq)) {\n        node.initializer = this.parseMaybeAssignAllowIn();\n      }\n      return this.finishNode(node, \"TSEnumMember\");\n    }\n\n    tsParseEnumDeclaration(\n      node: N.TsEnumDeclaration,\n      properties: { const?: true, declare?: true } = {},\n    ): N.TsEnumDeclaration {\n      if (properties.const) node.const = true;\n      if (properties.declare) node.declare = true;\n      this.expectContextual(tt._enum);\n      node.id = this.parseIdentifier();\n      this.checkIdentifier(\n        node.id,\n        node.const ? BIND_TS_CONST_ENUM : BIND_TS_ENUM,\n      );\n\n      this.expect(tt.braceL);\n      node.members = this.tsParseDelimitedList(\n        \"EnumMembers\",\n        this.tsParseEnumMember.bind(this),\n      );\n      this.expect(tt.braceR);\n      return this.finishNode(node, \"TSEnumDeclaration\");\n    }\n\n    tsParseModuleBlock(): N.TsModuleBlock {\n      const node: N.TsModuleBlock = this.startNode();\n      this.scope.enter(SCOPE_OTHER);\n\n      this.expect(tt.braceL);\n      // Inside of a module block is considered \"top-level\", meaning it can have imports and exports.\n      this.parseBlockOrModuleBlockBody(\n        (node.body = []),\n        /* directives */ undefined,\n        /* topLevel */ true,\n        /* end */ tt.braceR,\n      );\n      this.scope.exit();\n      return this.finishNode(node, \"TSModuleBlock\");\n    }\n\n    tsParseModuleOrNamespaceDeclaration(\n      node: N.TsModuleDeclaration,\n      nested?: boolean = false,\n    ): N.TsModuleDeclaration {\n      node.id = this.parseIdentifier();\n\n      if (!nested) {\n        this.checkIdentifier(node.id, BIND_TS_NAMESPACE);\n      }\n\n      if (this.eat(tt.dot)) {\n        const inner = this.startNode();\n        this.tsParseModuleOrNamespaceDeclaration(inner, true);\n        node.body = inner;\n      } else {\n        this.scope.enter(SCOPE_TS_MODULE);\n        this.prodParam.enter(PARAM);\n        node.body = this.tsParseModuleBlock();\n        this.prodParam.exit();\n        this.scope.exit();\n      }\n      return this.finishNode(node, \"TSModuleDeclaration\");\n    }\n\n    tsParseAmbientExternalModuleDeclaration(\n      node: N.TsModuleDeclaration,\n    ): N.TsModuleDeclaration {\n      if (this.isContextual(tt._global)) {\n        node.global = true;\n        node.id = this.parseIdentifier();\n      } else if (this.match(tt.string)) {\n        node.id = this.parseExprAtom();\n      } else {\n        this.unexpected();\n      }\n      if (this.match(tt.braceL)) {\n        this.scope.enter(SCOPE_TS_MODULE);\n        this.prodParam.enter(PARAM);\n        node.body = this.tsParseModuleBlock();\n        this.prodParam.exit();\n        this.scope.exit();\n      } else {\n        this.semicolon();\n      }\n\n      return this.finishNode(node, \"TSModuleDeclaration\");\n    }\n\n    tsParseImportEqualsDeclaration(\n      node: N.TsImportEqualsDeclaration,\n      isExport?: boolean,\n    ): N.TsImportEqualsDeclaration {\n      node.isExport = isExport || false;\n      node.id = this.parseIdentifier();\n      this.checkIdentifier(node.id, BIND_LEXICAL);\n      this.expect(tt.eq);\n      const moduleReference = this.tsParseModuleReference();\n      if (\n        node.importKind === \"type\" &&\n        moduleReference.type !== \"TSExternalModuleReference\"\n      ) {\n        this.raise(TSErrors.ImportAliasHasImportType, {\n          at: moduleReference,\n        });\n      }\n      node.moduleReference = moduleReference;\n      this.semicolon();\n      return this.finishNode(node, \"TSImportEqualsDeclaration\");\n    }\n\n    tsIsExternalModuleReference(): boolean {\n      return (\n        this.isContextual(tt._require) &&\n        this.lookaheadCharCode() === charCodes.leftParenthesis\n      );\n    }\n\n    tsParseModuleReference(): N.TsModuleReference {\n      return this.tsIsExternalModuleReference()\n        ? this.tsParseExternalModuleReference()\n        : this.tsParseEntityName(/* allowReservedWords */ false);\n    }\n\n    tsParseExternalModuleReference(): N.TsExternalModuleReference {\n      const node: N.TsExternalModuleReference = this.startNode();\n      this.expectContextual(tt._require);\n      this.expect(tt.parenL);\n      if (!this.match(tt.string)) {\n        throw this.unexpected();\n      }\n      // For compatibility to estree we cannot call parseLiteral directly here\n      node.expression = this.parseExprAtom();\n      this.expect(tt.parenR);\n      return this.finishNode(node, \"TSExternalModuleReference\");\n    }\n\n    // Utilities\n\n    tsLookAhead<T>(f: () => T): T {\n      const state = this.state.clone();\n      const res = f();\n      this.state = state;\n      return res;\n    }\n\n    tsTryParseAndCatch<T: ?N.NodeBase>(f: () => T): ?T {\n      const result = this.tryParse(abort => f() || abort());\n\n      if (result.aborted || !result.node) return undefined;\n      if (result.error) this.state = result.failState;\n      return result.node;\n    }\n\n    tsTryParse<T>(f: () => ?T): ?T {\n      const state = this.state.clone();\n      const result = f();\n      if (result !== undefined && result !== false) {\n        return result;\n      } else {\n        this.state = state;\n        return undefined;\n      }\n    }\n\n    tsTryParseDeclare(nany: any): ?N.Declaration {\n      if (this.isLineTerminator()) {\n        return;\n      }\n      let starttype = this.state.type;\n      let kind;\n\n      if (this.isContextual(tt._let)) {\n        starttype = tt._var;\n        kind = \"let\";\n      }\n\n      return this.tsInAmbientContext(() => {\n        if (starttype === tt._function) {\n          nany.declare = true;\n          return this.parseFunctionStatement(\n            nany,\n            /* async */ false,\n            /* declarationPosition */ true,\n          );\n        }\n\n        if (starttype === tt._class) {\n          // While this is also set by tsParseExpressionStatement, we need to set it\n          // before parsing the class declaration to know how to register it in the scope.\n          nany.declare = true;\n          return this.parseClass(\n            nany,\n            /* isStatement */ true,\n            /* optionalId */ false,\n          );\n        }\n\n        if (starttype === tt._enum) {\n          return this.tsParseEnumDeclaration(nany, { declare: true });\n        }\n\n        if (starttype === tt._global) {\n          return this.tsParseAmbientExternalModuleDeclaration(nany);\n        }\n\n        if (starttype === tt._const || starttype === tt._var) {\n          if (!this.match(tt._const) || !this.isLookaheadContextual(\"enum\")) {\n            nany.declare = true;\n            return this.parseVarStatement(nany, kind || this.state.value, true);\n          }\n\n          // `const enum = 0;` not allowed because \"enum\" is a strict mode reserved word.\n          this.expect(tt._const);\n          return this.tsParseEnumDeclaration(nany, {\n            const: true,\n            declare: true,\n          });\n        }\n\n        if (starttype === tt._interface) {\n          const result = this.tsParseInterfaceDeclaration(nany, {\n            declare: true,\n          });\n          if (result) return result;\n        }\n\n        if (tokenIsIdentifier(starttype)) {\n          return this.tsParseDeclaration(\n            nany,\n            this.state.value,\n            /* next */ true,\n          );\n        }\n      });\n    }\n\n    // Note: this won't be called unless the keyword is allowed in `shouldParseExportDeclaration`.\n    tsTryParseExportDeclaration(): ?N.Declaration {\n      return this.tsParseDeclaration(\n        this.startNode(),\n        this.state.value,\n        /* next */ true,\n      );\n    }\n\n    tsParseExpressionStatement(node: any, expr: N.Identifier): ?N.Declaration {\n      switch (expr.name) {\n        case \"declare\": {\n          const declaration = this.tsTryParseDeclare(node);\n          if (declaration) {\n            declaration.declare = true;\n            return declaration;\n          }\n          break;\n        }\n        case \"global\":\n          // `global { }` (with no `declare`) may appear inside an ambient module declaration.\n          // Would like to use tsParseAmbientExternalModuleDeclaration here, but already ran past \"global\".\n          if (this.match(tt.braceL)) {\n            this.scope.enter(SCOPE_TS_MODULE);\n            this.prodParam.enter(PARAM);\n            const mod: N.TsModuleDeclaration = node;\n            mod.global = true;\n            mod.id = expr;\n            mod.body = this.tsParseModuleBlock();\n            this.scope.exit();\n            this.prodParam.exit();\n            return this.finishNode(mod, \"TSModuleDeclaration\");\n          }\n          break;\n\n        default:\n          return this.tsParseDeclaration(node, expr.name, /* next */ false);\n      }\n    }\n\n    // Common to tsTryParseDeclare, tsTryParseExportDeclaration, and tsParseExpressionStatement.\n    tsParseDeclaration(\n      node: any,\n      value: string,\n      next: boolean,\n    ): ?N.Declaration {\n      // no declaration apart from enum can be followed by a line break.\n      switch (value) {\n        case \"abstract\":\n          if (\n            this.tsCheckLineTerminator(next) &&\n            (this.match(tt._class) || tokenIsIdentifier(this.state.type))\n          ) {\n            return this.tsParseAbstractDeclaration(node);\n          }\n          break;\n\n        case \"module\":\n          if (this.tsCheckLineTerminator(next)) {\n            if (this.match(tt.string)) {\n              return this.tsParseAmbientExternalModuleDeclaration(node);\n            } else if (tokenIsIdentifier(this.state.type)) {\n              return this.tsParseModuleOrNamespaceDeclaration(node);\n            }\n          }\n          break;\n\n        case \"namespace\":\n          if (\n            this.tsCheckLineTerminator(next) &&\n            tokenIsIdentifier(this.state.type)\n          ) {\n            return this.tsParseModuleOrNamespaceDeclaration(node);\n          }\n          break;\n\n        case \"type\":\n          if (\n            this.tsCheckLineTerminator(next) &&\n            tokenIsIdentifier(this.state.type)\n          ) {\n            return this.tsParseTypeAliasDeclaration(node);\n          }\n          break;\n      }\n    }\n\n    tsCheckLineTerminator(next: boolean) {\n      if (next) {\n        if (this.hasFollowingLineBreak()) return false;\n        this.next();\n        return true;\n      }\n      return !this.isLineTerminator();\n    }\n\n    tsTryParseGenericAsyncArrowFunction(\n      startPos: number,\n      startLoc: Position,\n    ): ?N.ArrowFunctionExpression {\n      if (!this.match(tt.lt)) {\n        return undefined;\n      }\n\n      const oldMaybeInArrowParameters = this.state.maybeInArrowParameters;\n      this.state.maybeInArrowParameters = true;\n\n      const res: ?N.ArrowFunctionExpression = this.tsTryParseAndCatch(() => {\n        const node: N.ArrowFunctionExpression = this.startNodeAt(\n          startPos,\n          startLoc,\n        );\n        node.typeParameters = this.tsParseTypeParameters();\n        // Don't use overloaded parseFunctionParams which would look for \"<\" again.\n        super.parseFunctionParams(node);\n        node.returnType = this.tsTryParseTypeOrTypePredicateAnnotation();\n        this.expect(tt.arrow);\n        return node;\n      });\n\n      this.state.maybeInArrowParameters = oldMaybeInArrowParameters;\n\n      if (!res) {\n        return undefined;\n      }\n\n      return this.parseArrowExpression(\n        res,\n        /* params are already set */ null,\n        /* async */ true,\n      );\n    }\n\n    // Used when parsing type arguments from ES productions, where the first token\n    // has been created without state.inType. Thus we need to rescan the lt token.\n    tsParseTypeArgumentsInExpression(): N.TsTypeParameterInstantiation | void {\n      if (this.reScan_lt() !== tt.lt) {\n        return undefined;\n      }\n      return this.tsParseTypeArguments();\n    }\n\n    tsParseTypeArguments(): N.TsTypeParameterInstantiation {\n      const node = this.startNode();\n      node.params = this.tsInType(() =>\n        // Temporarily remove a JSX parsing context, which makes us scan different tokens.\n        this.tsInNoContext(() => {\n          this.expect(tt.lt);\n          return this.tsParseDelimitedList(\n            \"TypeParametersOrArguments\",\n            this.tsParseType.bind(this),\n          );\n        }),\n      );\n      if (node.params.length === 0) {\n        this.raise(TSErrors.EmptyTypeArguments, { at: node });\n      }\n      this.expect(tt.gt);\n      return this.finishNode(node, \"TSTypeParameterInstantiation\");\n    }\n\n    tsIsDeclarationStart(): boolean {\n      return tokenIsTSDeclarationStart(this.state.type);\n    }\n\n    // ======================================================\n    // OVERRIDES\n    // ======================================================\n\n    isExportDefaultSpecifier(): boolean {\n      if (this.tsIsDeclarationStart()) return false;\n      return super.isExportDefaultSpecifier();\n    }\n\n    parseAssignableListItem(\n      allowModifiers: ?boolean,\n      decorators: N.Decorator[],\n    ): N.Pattern | N.TSParameterProperty {\n      // Store original location/position to include modifiers in range\n      const startPos = this.state.start;\n      const startLoc = this.state.startLoc;\n\n      let accessibility: ?N.Accessibility;\n      let readonly = false;\n      let override = false;\n      if (allowModifiers !== undefined) {\n        const modified = {};\n        this.tsParseModifiers({\n          modified,\n          allowedModifiers: [\n            \"public\",\n            \"private\",\n            \"protected\",\n            \"override\",\n            \"readonly\",\n          ],\n        });\n        accessibility = modified.accessibility;\n        override = modified.override;\n        readonly = modified.readonly;\n        if (\n          allowModifiers === false &&\n          (accessibility || readonly || override)\n        ) {\n          this.raise(TSErrors.UnexpectedParameterModifier, { at: startLoc });\n        }\n      }\n\n      const left = this.parseMaybeDefault();\n      this.parseAssignableListItemTypes(left);\n      const elt = this.parseMaybeDefault(left.start, left.loc.start, left);\n      if (accessibility || readonly || override) {\n        const pp: N.TSParameterProperty = this.startNodeAt(startPos, startLoc);\n        if (decorators.length) {\n          pp.decorators = decorators;\n        }\n        if (accessibility) pp.accessibility = accessibility;\n        if (readonly) pp.readonly = readonly;\n        if (override) pp.override = override;\n        if (elt.type !== \"Identifier\" && elt.type !== \"AssignmentPattern\") {\n          this.raise(TSErrors.UnsupportedParameterPropertyKind, { at: pp });\n        }\n        pp.parameter = ((elt: any): N.Identifier | N.AssignmentPattern);\n        return this.finishNode(pp, \"TSParameterProperty\");\n      }\n\n      if (decorators.length) {\n        left.decorators = decorators;\n      }\n\n      return elt;\n    }\n\n    isSimpleParameter(node) {\n      return (\n        (node.type === \"TSParameterProperty\" &&\n          super.isSimpleParameter(node.parameter)) ||\n        super.isSimpleParameter(node)\n      );\n    }\n\n    parseFunctionBodyAndFinish(\n      node: N.BodilessFunctionOrMethodBase,\n      type: string,\n      isMethod?: boolean = false,\n    ): void {\n      if (this.match(tt.colon)) {\n        node.returnType = this.tsParseTypeOrTypePredicateAnnotation(tt.colon);\n      }\n\n      const bodilessType =\n        type === \"FunctionDeclaration\"\n          ? \"TSDeclareFunction\"\n          : type === \"ClassMethod\" || type === \"ClassPrivateMethod\"\n          ? \"TSDeclareMethod\"\n          : undefined;\n      if (bodilessType && !this.match(tt.braceL) && this.isLineTerminator()) {\n        this.finishNode(node, bodilessType);\n        return;\n      }\n      if (bodilessType === \"TSDeclareFunction\" && this.state.isAmbientContext) {\n        this.raise(TSErrors.DeclareFunctionHasImplementation, { at: node });\n        if (\n          // $FlowIgnore\n          node.declare\n        ) {\n          super.parseFunctionBodyAndFinish(node, bodilessType, isMethod);\n          return;\n        }\n      }\n\n      super.parseFunctionBodyAndFinish(node, type, isMethod);\n    }\n\n    registerFunctionStatementId(node: N.Function): void {\n      if (!node.body && node.id) {\n        // Function ids are validated after parsing their body.\n        // For bodyless function, we need to do it here.\n        this.checkIdentifier(node.id, BIND_TS_AMBIENT);\n      } else {\n        super.registerFunctionStatementId(...arguments);\n      }\n    }\n\n    tsCheckForInvalidTypeCasts(items: $ReadOnlyArray<?N.Expression>) {\n      items.forEach(node => {\n        if (node?.type === \"TSTypeCastExpression\") {\n          this.raise(TSErrors.UnexpectedTypeAnnotation, {\n            at: node.typeAnnotation,\n          });\n        }\n      });\n    }\n\n    toReferencedList(\n      exprList: $ReadOnlyArray<?N.Expression>,\n      isInParens?: boolean, // eslint-disable-line no-unused-vars\n    ): $ReadOnlyArray<?N.Expression> {\n      // Handles invalid scenarios like: `f(a:b)`, `(a:b);`, and `(a:b,c:d)`.\n      //\n      // Note that `f<T>(a:b)` goes through a different path and is handled\n      // in `parseSubscript` directly.\n      this.tsCheckForInvalidTypeCasts(exprList);\n      return exprList;\n    }\n\n    parseArrayLike(...args): N.ArrayExpression | N.TupleExpression {\n      const node = super.parseArrayLike(...args);\n\n      if (node.type === \"ArrayExpression\") {\n        this.tsCheckForInvalidTypeCasts(node.elements);\n      }\n\n      return node;\n    }\n\n    parseSubscript(\n      base: N.Expression,\n      startPos: number,\n      startLoc: Position,\n      noCalls: ?boolean,\n      state: N.ParseSubscriptState,\n    ): N.Expression {\n      if (!this.hasPrecedingLineBreak() && this.match(tt.bang)) {\n        // When ! is consumed as a postfix operator (non-null assertion),\n        // disallow JSX tag forming after. e.g. When parsing `p! < n.p!`\n        // `<n.p` can not be a start of JSX tag\n        this.state.canStartJSXElement = false;\n        this.next();\n\n        const nonNullExpression: N.TsNonNullExpression = this.startNodeAt(\n          startPos,\n          startLoc,\n        );\n        nonNullExpression.expression = base;\n        return this.finishNode(nonNullExpression, \"TSNonNullExpression\");\n      }\n\n      let isOptionalCall = false;\n      if (\n        this.match(tt.questionDot) &&\n        this.lookaheadCharCode() === charCodes.lessThan\n      ) {\n        if (noCalls) {\n          state.stop = true;\n          return base;\n        }\n        state.optionalChainMember = isOptionalCall = true;\n        this.next();\n      }\n\n      // handles 'f<<T>'\n      if (this.match(tt.lt) || this.match(tt.bitShiftL)) {\n        let missingParenErrorLoc;\n        // tsTryParseAndCatch is expensive, so avoid if not necessary.\n        // There are number of things we are going to \"maybe\" parse, like type arguments on\n        // tagged template expressions. If any of them fail, walk it back and continue.\n        const result = this.tsTryParseAndCatch(() => {\n          if (!noCalls && this.atPossibleAsyncArrow(base)) {\n            // Almost certainly this is a generic async function `async <T>() => ...\n            // But it might be a call with a type argument `async<T>();`\n            const asyncArrowFn = this.tsTryParseGenericAsyncArrowFunction(\n              startPos,\n              startLoc,\n            );\n            if (asyncArrowFn) {\n              return asyncArrowFn;\n            }\n          }\n\n          const typeArguments = this.tsParseTypeArgumentsInExpression();\n          if (!typeArguments) return;\n\n          if (isOptionalCall && !this.match(tt.parenL)) {\n            missingParenErrorLoc = this.state.curPosition();\n            return;\n          }\n\n          if (tokenIsTemplate(this.state.type)) {\n            const result = this.parseTaggedTemplateExpression(\n              base,\n              startPos,\n              startLoc,\n              state,\n            );\n            result.typeParameters = typeArguments;\n            return result;\n          }\n\n          if (!noCalls && this.eat(tt.parenL)) {\n            const node: N.CallExpression = this.startNodeAt(startPos, startLoc);\n            node.callee = base;\n            // possibleAsync always false here, because we would have handled it above.\n            // $FlowIgnore (won't be any undefined arguments)\n            node.arguments = this.parseCallExpressionArguments(\n              tt.parenR,\n              /* possibleAsync */ false,\n            );\n\n            // Handles invalid case: `f<T>(a:b)`\n            this.tsCheckForInvalidTypeCasts(node.arguments);\n\n            node.typeParameters = typeArguments;\n            if (state.optionalChainMember) {\n              // $FlowIgnore\n              node.optional = isOptionalCall;\n            }\n\n            return this.finishCallExpression(node, state.optionalChainMember);\n          }\n\n          const tokenType = this.state.type;\n          if (\n            // a<b>>c is not (a<b>)>c, but a<(b>>c)\n            tokenType === tt.gt ||\n            // a<b>c is (a<b)>c\n            (tokenType !== tt.parenL &&\n              tokenCanStartExpression(tokenType) &&\n              !this.hasPrecedingLineBreak())\n          ) {\n            // Bail out.\n            return;\n          }\n\n          const node: N.TsInstantiationExpression = this.startNodeAt(\n            startPos,\n            startLoc,\n          );\n          node.expression = base;\n          node.typeParameters = typeArguments;\n          return this.finishNode(node, \"TSInstantiationExpression\");\n        });\n\n        if (missingParenErrorLoc) {\n          this.unexpected(missingParenErrorLoc, tt.parenL);\n        }\n\n        if (result) {\n          if (\n            result.type === \"TSInstantiationExpression\" &&\n            (this.match(tt.dot) ||\n              (this.match(tt.questionDot) &&\n                this.lookaheadCharCode() !== charCodes.leftParenthesis))\n          ) {\n            this.raise(\n              TSErrors.InvalidPropertyAccessAfterInstantiationExpression,\n              { at: this.state.startLoc },\n            );\n          }\n          return result;\n        }\n      }\n\n      return super.parseSubscript(base, startPos, startLoc, noCalls, state);\n    }\n\n    parseNewCallee(node: N.NewExpression): void {\n      super.parseNewCallee(node);\n\n      const { callee } = node;\n      if (\n        callee.type === \"TSInstantiationExpression\" &&\n        !callee.extra?.parenthesized\n      ) {\n        node.typeParameters = callee.typeParameters;\n        node.callee = callee.expression;\n      }\n    }\n\n    parseExprOp(\n      left: N.Expression,\n      leftStartPos: number,\n      leftStartLoc: Position,\n      minPrec: number,\n    ) {\n      if (\n        tokenOperatorPrecedence(tt._in) > minPrec &&\n        !this.hasPrecedingLineBreak() &&\n        this.isContextual(tt._as)\n      ) {\n        const node: N.TsAsExpression = this.startNodeAt(\n          leftStartPos,\n          leftStartLoc,\n        );\n        node.expression = left;\n        const _const = this.tsTryNextParseConstantContext();\n        if (_const) {\n          node.typeAnnotation = _const;\n        } else {\n          node.typeAnnotation = this.tsNextThenParseType();\n        }\n        this.finishNode(node, \"TSAsExpression\");\n        // rescan `<`, `>` because they were scanned when this.state.inType was true\n        this.reScan_lt_gt();\n        return this.parseExprOp(node, leftStartPos, leftStartLoc, minPrec);\n      }\n\n      return super.parseExprOp(left, leftStartPos, leftStartLoc, minPrec);\n    }\n\n    checkReservedWord(\n      word: string,\n      startLoc: Position,\n      checkKeywords: boolean,\n      isBinding: boolean,\n    ): void {\n      // Strict mode words may be allowed as in `declare namespace N { const static: number; }`.\n      // And we have a type checker anyway, so don't bother having the parser do it.\n      if (!this.state.isAmbientContext) {\n        super.checkReservedWord(word, startLoc, checkKeywords, isBinding);\n      }\n    }\n\n    /*\n    Don't bother doing this check in TypeScript code because:\n    1. We may have a nested export statement with the same name:\n      export const x = 0;\n      export namespace N {\n        export const x = 1;\n      }\n    2. We have a type checker to warn us about this sort of thing.\n    */\n    checkDuplicateExports() {}\n\n    parseImport(node: N.Node): N.AnyImport {\n      node.importKind = \"value\";\n      if (\n        tokenIsIdentifier(this.state.type) ||\n        this.match(tt.star) ||\n        this.match(tt.braceL)\n      ) {\n        let ahead = this.lookahead();\n\n        if (\n          this.isContextual(tt._type) &&\n          // import type, { a } from \"b\";\n          ahead.type !== tt.comma &&\n          // import type from \"a\";\n          ahead.type !== tt._from &&\n          // import type = require(\"a\");\n          ahead.type !== tt.eq\n        ) {\n          node.importKind = \"type\";\n          this.next();\n          ahead = this.lookahead();\n        }\n\n        if (tokenIsIdentifier(this.state.type) && ahead.type === tt.eq) {\n          return this.tsParseImportEqualsDeclaration(node);\n        }\n      }\n\n      const importNode = super.parseImport(node);\n      /*:: invariant(importNode.type !== \"TSImportEqualsDeclaration\") */\n\n      // `import type` can only be used on imports with named imports or with a\n      // default import - but not both\n      if (\n        importNode.importKind === \"type\" &&\n        importNode.specifiers.length > 1 &&\n        importNode.specifiers[0].type === \"ImportDefaultSpecifier\"\n      ) {\n        this.raise(TSErrors.TypeImportCannotSpecifyDefaultAndNamed, {\n          at: importNode,\n        });\n      }\n\n      return importNode;\n    }\n\n    parseExport(node: N.Node): N.AnyExport {\n      if (this.match(tt._import)) {\n        // `export import A = B;`\n        this.next(); // eat `tt._import`\n        if (\n          this.isContextual(tt._type) &&\n          this.lookaheadCharCode() !== charCodes.equalsTo\n        ) {\n          node.importKind = \"type\";\n          this.next(); // eat \"type\"\n        } else {\n          node.importKind = \"value\";\n        }\n        return this.tsParseImportEqualsDeclaration(node, /* isExport */ true);\n      } else if (this.eat(tt.eq)) {\n        // `export = x;`\n        const assign: N.TsExportAssignment = node;\n        assign.expression = this.parseExpression();\n        this.semicolon();\n        return this.finishNode(assign, \"TSExportAssignment\");\n      } else if (this.eatContextual(tt._as)) {\n        // `export as namespace A;`\n        const decl: N.TsNamespaceExportDeclaration = node;\n        // See `parseNamespaceExportDeclaration` in TypeScript's own parser\n        this.expectContextual(tt._namespace);\n        decl.id = this.parseIdentifier();\n        this.semicolon();\n        return this.finishNode(decl, \"TSNamespaceExportDeclaration\");\n      } else {\n        if (\n          this.isContextual(tt._type) &&\n          this.lookahead().type === tt.braceL\n        ) {\n          this.next();\n          node.exportKind = \"type\";\n        } else {\n          node.exportKind = \"value\";\n        }\n\n        return super.parseExport(node);\n      }\n    }\n\n    isAbstractClass(): boolean {\n      return (\n        this.isContextual(tt._abstract) && this.lookahead().type === tt._class\n      );\n    }\n\n    parseExportDefaultExpression(): N.Expression | N.Declaration {\n      if (this.isAbstractClass()) {\n        const cls = this.startNode();\n        this.next(); // Skip \"abstract\"\n        cls.abstract = true;\n        this.parseClass(cls, true, true);\n        return cls;\n      }\n\n      // export default interface allowed in:\n      // https://github.com/Microsoft/TypeScript/pull/16040\n      if (this.match(tt._interface)) {\n        const result = this.tsParseInterfaceDeclaration(this.startNode());\n        if (result) return result;\n      }\n\n      return super.parseExportDefaultExpression();\n    }\n\n    parseVarStatement(\n      node: N.VariableDeclaration,\n      kind: \"var\" | \"let\" | \"const\",\n      allowMissingInitializer: boolean = false,\n    ) {\n      const { isAmbientContext } = this.state;\n      const declaration = super.parseVarStatement(\n        node,\n        kind,\n        allowMissingInitializer || isAmbientContext,\n      );\n\n      if (!isAmbientContext) return declaration;\n\n      for (const { id, init } of declaration.declarations) {\n        // Empty initializer is the easy case that we want.\n        if (!init) continue;\n\n        // var and let aren't ever allowed initializers.\n        //\n        // If a const declaration has no type annotation and is initiailized to\n        // a string literal, numeric literal, or enum reference, then it is\n        // allowed. In an ideal world, we'd check whether init was *actually* an\n        // enum reference, but we allow anything that \"could be\" a literal enum\n        // in `isPossiblyLiteralEnum` since we don't have all the information\n        // that the typescript compiler has.\n        if (kind !== \"const\" || !!id.typeAnnotation) {\n          this.raise(TSErrors.InitializerNotAllowedInAmbientContext, {\n            at: init,\n          });\n        } else if (\n          init.type !== \"StringLiteral\" &&\n          init.type !== \"BooleanLiteral\" &&\n          init.type !== \"NumericLiteral\" &&\n          init.type !== \"BigIntLiteral\" &&\n          (init.type !== \"TemplateLiteral\" || init.expressions.length > 0) &&\n          !isPossiblyLiteralEnum(init)\n        ) {\n          this.raise(\n            TSErrors.ConstInitiailizerMustBeStringOrNumericLiteralOrLiteralEnumReference,\n            { at: init },\n          );\n        }\n      }\n\n      return declaration;\n    }\n\n    parseStatementContent(context: ?string, topLevel: ?boolean): N.Statement {\n      if (this.match(tt._const) && this.isLookaheadContextual(\"enum\")) {\n        const node: N.TsEnumDeclaration = this.startNode();\n        this.expect(tt._const); // eat 'const'\n        return this.tsParseEnumDeclaration(node, { const: true });\n      }\n\n      if (this.isContextual(tt._enum)) {\n        return this.tsParseEnumDeclaration(this.startNode());\n      }\n\n      if (this.isContextual(tt._interface)) {\n        const result = this.tsParseInterfaceDeclaration(this.startNode());\n        if (result) return result;\n      }\n\n      return super.parseStatementContent(context, topLevel);\n    }\n\n    parseAccessModifier(): ?N.Accessibility {\n      return this.tsParseModifier([\"public\", \"protected\", \"private\"]);\n    }\n\n    tsHasSomeModifiers(member: any, modifiers: TsModifier[]): boolean {\n      return modifiers.some(modifier => {\n        if (tsIsAccessModifier(modifier)) {\n          return member.accessibility === modifier;\n        }\n        return !!member[modifier];\n      });\n    }\n\n    tsIsStartOfStaticBlocks() {\n      return (\n        this.isContextual(tt._static) &&\n        this.lookaheadCharCode() === charCodes.leftCurlyBrace\n      );\n    }\n\n    parseClassMember(\n      classBody: N.ClassBody,\n      member: any,\n      state: N.ParseClassMemberState,\n    ): void {\n      const modifiers = [\n        \"declare\",\n        \"private\",\n        \"public\",\n        \"protected\",\n        \"override\",\n        \"abstract\",\n        \"readonly\",\n        \"static\",\n      ];\n      this.tsParseModifiers({\n        modified: member,\n        allowedModifiers: modifiers,\n        disallowedModifiers: [\"in\", \"out\"],\n        stopOnStartOfClassStaticBlock: true,\n        errorTemplate: TSErrors.InvalidModifierOnTypeParameterPositions,\n      });\n\n      const callParseClassMemberWithIsStatic = () => {\n        if (this.tsIsStartOfStaticBlocks()) {\n          this.next(); // eat \"static\"\n          this.next(); // eat \"{\"\n          if (this.tsHasSomeModifiers(member, modifiers)) {\n            this.raise(TSErrors.StaticBlockCannotHaveModifier, {\n              at: this.state.curPosition(),\n            });\n          }\n          this.parseClassStaticBlock(classBody, ((member: any): N.StaticBlock));\n        } else {\n          this.parseClassMemberWithIsStatic(\n            classBody,\n            member,\n            state,\n            !!member.static,\n          );\n        }\n      };\n      if (member.declare) {\n        this.tsInAmbientContext(callParseClassMemberWithIsStatic);\n      } else {\n        callParseClassMemberWithIsStatic();\n      }\n    }\n\n    parseClassMemberWithIsStatic(\n      classBody: N.ClassBody,\n      member: N.ClassMember | N.TsIndexSignature,\n      state: N.ParseClassMemberState,\n      isStatic: boolean,\n    ): void {\n      const idx = this.tsTryParseIndexSignature(member);\n      if (idx) {\n        classBody.body.push(idx);\n\n        if ((member: any).abstract) {\n          this.raise(TSErrors.IndexSignatureHasAbstract, { at: member });\n        }\n        if ((member: any).accessibility) {\n          this.raise(TSErrors.IndexSignatureHasAccessibility, {\n            at: member,\n            modifier: (member: any).accessibility,\n          });\n        }\n        if ((member: any).declare) {\n          this.raise(TSErrors.IndexSignatureHasDeclare, { at: member });\n        }\n        if ((member: any).override) {\n          this.raise(TSErrors.IndexSignatureHasOverride, { at: member });\n        }\n\n        return;\n      }\n\n      if (!this.state.inAbstractClass && (member: any).abstract) {\n        this.raise(TSErrors.NonAbstractClassHasAbstractMethod, {\n          at: member,\n        });\n      }\n\n      if ((member: any).override) {\n        if (!state.hadSuperClass) {\n          this.raise(TSErrors.OverrideNotInSubClass, { at: member });\n        }\n      }\n\n      /*:: invariant(member.type !== \"TSIndexSignature\") */\n\n      super.parseClassMemberWithIsStatic(classBody, member, state, isStatic);\n    }\n\n    parsePostMemberNameModifiers(\n      methodOrProp: N.ClassMethod | N.ClassProperty | N.ClassPrivateProperty,\n    ): void {\n      const optional = this.eat(tt.question);\n      if (optional) methodOrProp.optional = true;\n\n      if ((methodOrProp: any).readonly && this.match(tt.parenL)) {\n        this.raise(TSErrors.ClassMethodHasReadonly, { at: methodOrProp });\n      }\n\n      if ((methodOrProp: any).declare && this.match(tt.parenL)) {\n        this.raise(TSErrors.ClassMethodHasDeclare, { at: methodOrProp });\n      }\n    }\n\n    // Note: The reason we do this in `parseExpressionStatement` and not `parseStatement`\n    // is that e.g. `type()` is valid JS, so we must try parsing that first.\n    // If it's really a type, we will parse `type` as the statement, and can correct it here\n    // by parsing the rest.\n    parseExpressionStatement(\n      node: N.ExpressionStatement,\n      expr: N.Expression,\n    ): N.Statement {\n      const decl =\n        expr.type === \"Identifier\"\n          ? this.tsParseExpressionStatement(node, expr)\n          : undefined;\n      return decl || super.parseExpressionStatement(node, expr);\n    }\n\n    // export type\n    // Should be true for anything parsed by `tsTryParseExportDeclaration`.\n    shouldParseExportDeclaration(): boolean {\n      if (this.tsIsDeclarationStart()) return true;\n      return super.shouldParseExportDeclaration();\n    }\n\n    // An apparent conditional expression could actually be an optional parameter in an arrow function.\n    parseConditional(\n      expr: N.Expression,\n      startPos: number,\n      startLoc: Position,\n      refExpressionErrors?: ?ExpressionErrors,\n    ): N.Expression {\n      // only do the expensive clone if there is a question mark\n      // and if we come from inside parens\n      if (!this.state.maybeInArrowParameters || !this.match(tt.question)) {\n        return super.parseConditional(\n          expr,\n          startPos,\n          startLoc,\n          refExpressionErrors,\n        );\n      }\n\n      const result = this.tryParse(() =>\n        super.parseConditional(expr, startPos, startLoc),\n      );\n\n      if (!result.node) {\n        if (result.error) {\n          /*:: invariant(refExpressionErrors != null) */\n          super.setOptionalParametersError(refExpressionErrors, result.error);\n        }\n\n        return expr;\n      }\n      if (result.error) this.state = result.failState;\n      return result.node;\n    }\n\n    // Note: These \"type casts\" are *not* valid TS expressions.\n    // But we parse them here and change them when completing the arrow function.\n    parseParenItem(\n      node: N.Expression,\n      startPos: number,\n      startLoc: Position,\n    ): N.Expression {\n      node = super.parseParenItem(node, startPos, startLoc);\n      if (this.eat(tt.question)) {\n        node.optional = true;\n        // Include questionmark in location of node\n        // Don't use this.finishNode() as otherwise we might process comments twice and\n        // include already consumed parens\n        this.resetEndLocation(node);\n      }\n\n      if (this.match(tt.colon)) {\n        const typeCastNode: N.TsTypeCastExpression = this.startNodeAt(\n          startPos,\n          startLoc,\n        );\n        typeCastNode.expression = node;\n        typeCastNode.typeAnnotation = this.tsParseTypeAnnotation();\n\n        return this.finishNode(typeCastNode, \"TSTypeCastExpression\");\n      }\n\n      return node;\n    }\n\n    parseExportDeclaration(node: N.ExportNamedDeclaration): ?N.Declaration {\n      if (!this.state.isAmbientContext && this.isContextual(tt._declare)) {\n        return this.tsInAmbientContext(() => this.parseExportDeclaration(node));\n      }\n\n      // Store original location/position\n      const startPos = this.state.start;\n      const startLoc = this.state.startLoc;\n\n      const isDeclare = this.eatContextual(tt._declare);\n\n      if (\n        isDeclare &&\n        (this.isContextual(tt._declare) || !this.shouldParseExportDeclaration())\n      ) {\n        throw this.raise(TSErrors.ExpectedAmbientAfterExportDeclare, {\n          at: this.state.startLoc,\n        });\n      }\n\n      const isIdentifier = tokenIsIdentifier(this.state.type);\n      const declaration: ?N.Declaration =\n        (isIdentifier && this.tsTryParseExportDeclaration()) ||\n        super.parseExportDeclaration(node);\n\n      if (!declaration) return null;\n\n      if (\n        declaration.type === \"TSInterfaceDeclaration\" ||\n        declaration.type === \"TSTypeAliasDeclaration\" ||\n        isDeclare\n      ) {\n        node.exportKind = \"type\";\n      }\n\n      if (isDeclare) {\n        // Reset location to include `declare` in range\n        this.resetStartLocation(declaration, startPos, startLoc);\n\n        declaration.declare = true;\n      }\n\n      return declaration;\n    }\n\n    parseClassId(\n      node: N.Class,\n      isStatement: boolean,\n      optionalId: ?boolean,\n    ): void {\n      if ((!isStatement || optionalId) && this.isContextual(tt._implements)) {\n        return;\n      }\n\n      super.parseClassId(\n        node,\n        isStatement,\n        optionalId,\n        (node: any).declare ? BIND_TS_AMBIENT : BIND_CLASS,\n      );\n      const typeParameters = this.tsTryParseTypeParameters(\n        this.tsParseInOutModifiers.bind(this),\n      );\n      if (typeParameters) node.typeParameters = typeParameters;\n    }\n\n    parseClassPropertyAnnotation(\n      node: N.ClassProperty | N.ClassPrivateProperty,\n    ): void {\n      if (!node.optional && this.eat(tt.bang)) {\n        node.definite = true;\n      }\n\n      const type = this.tsTryParseTypeAnnotation();\n      if (type) node.typeAnnotation = type;\n    }\n\n    parseClassProperty(node: N.ClassProperty): N.ClassProperty {\n      this.parseClassPropertyAnnotation(node);\n\n      if (this.state.isAmbientContext && this.match(tt.eq)) {\n        this.raise(TSErrors.DeclareClassFieldHasInitializer, {\n          at: this.state.startLoc,\n        });\n      }\n      if (node.abstract && this.match(tt.eq)) {\n        const { key } = node;\n        this.raise(TSErrors.AbstractPropertyHasInitializer, {\n          at: this.state.startLoc,\n          propertyName:\n            key.type === \"Identifier\" && !node.computed\n              ? key.name\n              : `[${this.input.slice(key.start, key.end)}]`,\n        });\n      }\n\n      return super.parseClassProperty(node);\n    }\n\n    parseClassPrivateProperty(\n      node: N.ClassPrivateProperty,\n    ): N.ClassPrivateProperty {\n      // $FlowIgnore\n      if (node.abstract) {\n        this.raise(TSErrors.PrivateElementHasAbstract, { at: node });\n      }\n\n      // $FlowIgnore\n      if (node.accessibility) {\n        this.raise(TSErrors.PrivateElementHasAccessibility, {\n          at: node,\n          modifier: node.accessibility,\n        });\n      }\n\n      this.parseClassPropertyAnnotation(node);\n      return super.parseClassPrivateProperty(node);\n    }\n\n    pushClassMethod(\n      classBody: N.ClassBody,\n      method: N.ClassMethod,\n      isGenerator: boolean,\n      isAsync: boolean,\n      isConstructor: boolean,\n      allowsDirectSuper: boolean,\n    ): void {\n      const typeParameters = this.tsTryParseTypeParameters();\n      if (typeParameters && isConstructor) {\n        this.raise(TSErrors.ConstructorHasTypeParameters, {\n          at: typeParameters,\n        });\n      }\n\n      // $FlowIgnore\n      const { declare = false, kind } = method;\n\n      if (declare && (kind === \"get\" || kind === \"set\")) {\n        this.raise(TSErrors.DeclareAccessor, { at: method, kind });\n      }\n      if (typeParameters) method.typeParameters = typeParameters;\n      super.pushClassMethod(\n        classBody,\n        method,\n        isGenerator,\n        isAsync,\n        isConstructor,\n        allowsDirectSuper,\n      );\n    }\n\n    pushClassPrivateMethod(\n      classBody: N.ClassBody,\n      method: N.ClassPrivateMethod,\n      isGenerator: boolean,\n      isAsync: boolean,\n    ): void {\n      const typeParameters = this.tsTryParseTypeParameters();\n      if (typeParameters) method.typeParameters = typeParameters;\n      super.pushClassPrivateMethod(classBody, method, isGenerator, isAsync);\n    }\n\n    declareClassPrivateMethodInScope(\n      node: N.ClassPrivateMethod | N.EstreeMethodDefinition | N.TSDeclareMethod,\n      kind: number,\n    ) {\n      if (node.type === \"TSDeclareMethod\") return;\n      // This happens when using the \"estree\" plugin.\n      if (node.type === \"MethodDefinition\" && !node.value.body) return;\n\n      super.declareClassPrivateMethodInScope(node, kind);\n    }\n\n    parseClassSuper(node: N.Class): void {\n      super.parseClassSuper(node);\n      // handle `extends f<<T>\n      if (node.superClass && (this.match(tt.lt) || this.match(tt.bitShiftL))) {\n        node.superTypeParameters = this.tsParseTypeArgumentsInExpression();\n      }\n      if (this.eatContextual(tt._implements)) {\n        node.implements = this.tsParseHeritageClause(\"implements\");\n      }\n    }\n\n    parseObjPropValue(prop: N.ObjectMember, ...args): void {\n      const typeParameters = this.tsTryParseTypeParameters();\n      if (typeParameters) prop.typeParameters = typeParameters;\n\n      super.parseObjPropValue(prop, ...args);\n    }\n\n    parseFunctionParams(node: N.Function, allowModifiers?: boolean): void {\n      const typeParameters = this.tsTryParseTypeParameters();\n      if (typeParameters) node.typeParameters = typeParameters;\n      super.parseFunctionParams(node, allowModifiers);\n    }\n\n    // `let x: number;`\n    parseVarId(\n      decl: N.VariableDeclarator,\n      kind: \"var\" | \"let\" | \"const\",\n    ): void {\n      super.parseVarId(decl, kind);\n      if (\n        decl.id.type === \"Identifier\" &&\n        !this.hasPrecedingLineBreak() &&\n        this.eat(tt.bang)\n      ) {\n        decl.definite = true;\n      }\n\n      const type = this.tsTryParseTypeAnnotation();\n      if (type) {\n        decl.id.typeAnnotation = type;\n        this.resetEndLocation(decl.id); // set end position to end of type\n      }\n    }\n\n    // parse the return type of an async arrow function - let foo = (async (): number => {});\n    parseAsyncArrowFromCallExpression(\n      node: N.ArrowFunctionExpression,\n      call: N.CallExpression,\n    ): N.ArrowFunctionExpression {\n      if (this.match(tt.colon)) {\n        node.returnType = this.tsParseTypeAnnotation();\n      }\n      return super.parseAsyncArrowFromCallExpression(node, call);\n    }\n\n    parseMaybeAssign(...args): N.Expression {\n      // Note: When the JSX plugin is on, type assertions (`<T> x`) aren't valid syntax.\n\n      let state: ?State;\n      let jsx;\n      let typeCast;\n\n      if (\n        this.hasPlugin(\"jsx\") &&\n        (this.match(tt.jsxTagStart) || this.match(tt.lt))\n      ) {\n        // Prefer to parse JSX if possible. But may be an arrow fn.\n        state = this.state.clone();\n\n        jsx = this.tryParse(() => super.parseMaybeAssign(...args), state);\n\n        /*:: invariant(!jsx.aborted) */\n        /*:: invariant(jsx.node != null) */\n        if (!jsx.error) return jsx.node;\n\n        // Remove `tc.j_expr` or `tc.j_oTag` from context added\n        // by parsing `jsxTagStart` to stop the JSX plugin from\n        // messing with the tokens\n        const { context } = this.state;\n        const currentContext = context[context.length - 1];\n        if (currentContext === tc.j_oTag || currentContext === tc.j_expr) {\n          context.pop();\n        }\n      }\n\n      if (!jsx?.error && !this.match(tt.lt)) {\n        return super.parseMaybeAssign(...args);\n      }\n\n      // Either way, we're looking at a '<': tt.jsxTagStart or relational.\n\n      // If the state was cloned in the JSX parsing branch above but there\n      // have been any error in the tryParse call, this.state is set to state\n      // so we still need to clone it.\n      if (!state || state === this.state) state = this.state.clone();\n\n      let typeParameters: ?N.TsTypeParameterDeclaration;\n      const arrow = this.tryParse(abort => {\n        // This is similar to TypeScript's `tryParseParenthesizedArrowFunctionExpression`.\n        typeParameters = this.tsParseTypeParameters();\n        const expr = super.parseMaybeAssign(...args);\n\n        if (\n          expr.type !== \"ArrowFunctionExpression\" ||\n          expr.extra?.parenthesized\n        ) {\n          abort();\n        }\n\n        // Correct TypeScript code should have at least 1 type parameter, but don't crash on bad code.\n        if (typeParameters?.params.length !== 0) {\n          this.resetStartLocationFromNode(expr, typeParameters);\n        }\n        expr.typeParameters = typeParameters;\n\n        if (process.env.BABEL_8_BREAKING) {\n          if (\n            this.hasPlugin(\"jsx\") &&\n            expr.typeParameters.params.length === 1 &&\n            !expr.typeParameters.extra?.trailingComma\n          ) {\n            // report error if single type parameter used without trailing comma.\n            const parameter = expr.typeParameters.params[0];\n            if (!parameter.constraint) {\n              // A single type parameter must either have constraints\n              // or a trailing comma, otherwise it's ambiguous with JSX.\n              this.raise(TSErrors.SingleTypeParameterWithoutTrailingComma, {\n                at: createPositionWithColumnOffset(parameter.loc.end, 1),\n                typeParameterName: parameter.name.name,\n              });\n            }\n          }\n        }\n\n        return expr;\n      }, state);\n\n      /*:: invariant(arrow.node != null) */\n      if (!arrow.error && !arrow.aborted) {\n        // This error is reported outside of the this.tryParse call so that\n        // in case of <T>(x) => 2, we don't consider <T>(x) as a type assertion\n        // because of this error.\n        if (typeParameters) this.reportReservedArrowTypeParam(typeParameters);\n        return arrow.node;\n      }\n\n      if (!jsx) {\n        // Try parsing a type cast instead of an arrow function.\n        // This will never happen outside of JSX.\n        // (Because in JSX the '<' should be a jsxTagStart and not a relational.\n        assert(!this.hasPlugin(\"jsx\"));\n\n        // This will start with a type assertion (via parseMaybeUnary).\n        // But don't directly call `this.tsParseTypeAssertion` because we want to handle any binary after it.\n        typeCast = this.tryParse(() => super.parseMaybeAssign(...args), state);\n        /*:: invariant(!typeCast.aborted) */\n        /*:: invariant(typeCast.node != null) */\n        if (!typeCast.error) return typeCast.node;\n      }\n\n      if (jsx?.node) {\n        /*:: invariant(jsx.failState) */\n        this.state = jsx.failState;\n        return jsx.node;\n      }\n\n      if (arrow.node) {\n        /*:: invariant(arrow.failState) */\n        this.state = arrow.failState;\n        if (typeParameters) this.reportReservedArrowTypeParam(typeParameters);\n        return arrow.node;\n      }\n\n      if (typeCast?.node) {\n        /*:: invariant(typeCast.failState) */\n        this.state = typeCast.failState;\n        return typeCast.node;\n      }\n\n      if (jsx?.thrown) throw jsx.error;\n      if (arrow.thrown) throw arrow.error;\n      if (typeCast?.thrown) throw typeCast.error;\n\n      throw jsx?.error || arrow.error || typeCast?.error;\n    }\n\n    reportReservedArrowTypeParam(node: any) {\n      if (\n        node.params.length === 1 &&\n        !node.extra?.trailingComma &&\n        this.getPluginOption(\"typescript\", \"disallowAmbiguousJSXLike\")\n      ) {\n        this.raise(TSErrors.ReservedArrowTypeParam, { at: node });\n      }\n    }\n\n    // Handle type assertions\n    parseMaybeUnary(refExpressionErrors?: ?ExpressionErrors): N.Expression {\n      if (!this.hasPlugin(\"jsx\") && this.match(tt.lt)) {\n        return this.tsParseTypeAssertion();\n      } else {\n        return super.parseMaybeUnary(refExpressionErrors);\n      }\n    }\n\n    parseArrow(node: N.ArrowFunctionExpression): ?N.ArrowFunctionExpression {\n      if (this.match(tt.colon)) {\n        // This is different from how the TS parser does it.\n        // TS uses lookahead. The Babel Parser parses it as a parenthesized expression and converts.\n\n        const result = this.tryParse(abort => {\n          const returnType = this.tsParseTypeOrTypePredicateAnnotation(\n            tt.colon,\n          );\n          if (this.canInsertSemicolon() || !this.match(tt.arrow)) abort();\n          return returnType;\n        });\n\n        if (result.aborted) return;\n\n        if (!result.thrown) {\n          if (result.error) this.state = result.failState;\n          node.returnType = result.node;\n        }\n      }\n\n      return super.parseArrow(node);\n    }\n\n    // Allow type annotations inside of a parameter list.\n    parseAssignableListItemTypes(param: N.Pattern) {\n      if (this.eat(tt.question)) {\n        if (\n          param.type !== \"Identifier\" &&\n          !this.state.isAmbientContext &&\n          !this.state.inType\n        ) {\n          this.raise(TSErrors.PatternIsOptional, { at: param });\n        }\n\n        ((param: any): N.Identifier).optional = true;\n      }\n      const type = this.tsTryParseTypeAnnotation();\n      if (type) param.typeAnnotation = type;\n      this.resetEndLocation(param);\n\n      return param;\n    }\n\n    isAssignable(node: N.Node, isBinding?: boolean): boolean {\n      switch (node.type) {\n        case \"TSTypeCastExpression\":\n          return this.isAssignable(node.expression, isBinding);\n        case \"TSParameterProperty\":\n          return true;\n        default:\n          return super.isAssignable(node, isBinding);\n      }\n    }\n\n    toAssignable(node: N.Node, isLHS: boolean = false): void {\n      switch (node.type) {\n        case \"ParenthesizedExpression\":\n          this.toAssignableParenthesizedExpression(node, isLHS);\n          break;\n        case \"TSAsExpression\":\n        case \"TSNonNullExpression\":\n        case \"TSTypeAssertion\":\n          if (isLHS) {\n            this.expressionScope.recordArrowParemeterBindingError(\n              TSErrors.UnexpectedTypeCastInParameter,\n              { at: node },\n            );\n          } else {\n            this.raise(TSErrors.UnexpectedTypeCastInParameter, { at: node });\n          }\n          this.toAssignable(node.expression, isLHS);\n          break;\n        case \"AssignmentExpression\":\n          if (!isLHS && node.left.type === \"TSTypeCastExpression\") {\n            node.left = this.typeCastToParameter(node.left);\n          }\n        /* fall through */\n        default:\n          super.toAssignable(node, isLHS);\n      }\n    }\n\n    toAssignableParenthesizedExpression(node: N.Node, isLHS: boolean): void {\n      switch (node.expression.type) {\n        case \"TSAsExpression\":\n        case \"TSNonNullExpression\":\n        case \"TSTypeAssertion\":\n        case \"ParenthesizedExpression\":\n          this.toAssignable(node.expression, isLHS);\n          break;\n        default:\n          super.toAssignable(node, isLHS);\n      }\n    }\n\n    checkToRestConversion(node: N.Node, allowPattern: boolean): void {\n      switch (node.type) {\n        case \"TSAsExpression\":\n        case \"TSTypeAssertion\":\n        case \"TSNonNullExpression\":\n          this.checkToRestConversion(node.expression, false);\n          break;\n        default:\n          super.checkToRestConversion(node, allowPattern);\n      }\n    }\n\n    isValidLVal(\n      type: string,\n      isUnparenthesizedInAssign: boolean,\n      binding: BindingTypes,\n    ) {\n      return (\n        getOwn(\n          {\n            // Allow \"typecasts\" to appear on the left of assignment expressions,\n            // because it may be in an arrow function.\n            // e.g. `const f = (foo: number = 0) => foo;`\n            TSTypeCastExpression: true,\n            TSParameterProperty: \"parameter\",\n            TSNonNullExpression: \"expression\",\n            TSAsExpression: (binding !== BIND_NONE ||\n              !isUnparenthesizedInAssign) && [\"expression\", true],\n            TSTypeAssertion: (binding !== BIND_NONE ||\n              !isUnparenthesizedInAssign) && [\"expression\", true],\n          },\n          type,\n        ) || super.isValidLVal(type, isUnparenthesizedInAssign, binding)\n      );\n    }\n\n    parseBindingAtom(): N.Pattern {\n      switch (this.state.type) {\n        case tt._this:\n          // \"this\" may be the name of a parameter, so allow it.\n          return this.parseIdentifier(/* liberal */ true);\n        default:\n          return super.parseBindingAtom();\n      }\n    }\n\n    parseMaybeDecoratorArguments(expr: N.Expression): N.Expression {\n      // handles `@f<<T>`\n      if (this.match(tt.lt) || this.match(tt.bitShiftL)) {\n        const typeArguments = this.tsParseTypeArgumentsInExpression();\n\n        if (this.match(tt.parenL)) {\n          const call = super.parseMaybeDecoratorArguments(expr);\n          call.typeParameters = typeArguments;\n          return call;\n        }\n\n        this.unexpected(null, tt.parenL);\n      }\n\n      return super.parseMaybeDecoratorArguments(expr);\n    }\n\n    checkCommaAfterRest(close): boolean {\n      if (\n        this.state.isAmbientContext &&\n        this.match(tt.comma) &&\n        this.lookaheadCharCode() === close\n      ) {\n        this.next();\n        return false;\n      } else {\n        return super.checkCommaAfterRest(close);\n      }\n    }\n\n    // === === === === === === === === === === === === === === === ===\n    // Note: All below methods are duplicates of something in flow.js.\n    // Not sure what the best way to combine these is.\n    // === === === === === === === === === === === === === === === ===\n\n    isClassMethod(): boolean {\n      return this.match(tt.lt) || super.isClassMethod();\n    }\n\n    isClassProperty(): boolean {\n      return (\n        this.match(tt.bang) || this.match(tt.colon) || super.isClassProperty()\n      );\n    }\n\n    parseMaybeDefault(...args): N.Pattern {\n      const node = super.parseMaybeDefault(...args);\n\n      if (\n        node.type === \"AssignmentPattern\" &&\n        node.typeAnnotation &&\n        node.right.start < node.typeAnnotation.start\n      ) {\n        this.raise(TSErrors.TypeAnnotationAfterAssign, {\n          at: node.typeAnnotation,\n        });\n      }\n\n      return node;\n    }\n\n    // ensure that inside types, we bypass the jsx parser plugin\n    getTokenFromCode(code: number): void {\n      if (this.state.inType) {\n        if (code === charCodes.greaterThan) {\n          return this.finishOp(tt.gt, 1);\n        }\n        if (code === charCodes.lessThan) {\n          return this.finishOp(tt.lt, 1);\n        }\n      }\n      return super.getTokenFromCode(code);\n    }\n\n    // used after we have finished parsing types\n    reScan_lt_gt() {\n      const { type } = this.state;\n      if (type === tt.lt) {\n        this.state.pos -= 1;\n        this.readToken_lt();\n      } else if (type === tt.gt) {\n        this.state.pos -= 1;\n        this.readToken_gt();\n      }\n    }\n\n    reScan_lt() {\n      const { type } = this.state;\n      if (type === tt.bitShiftL) {\n        this.state.pos -= 2;\n        this.finishOp(tt.lt, 1);\n        return tt.lt;\n      }\n      return type;\n    }\n\n    toAssignableList(exprList: N.Expression[]): void {\n      for (let i = 0; i < exprList.length; i++) {\n        const expr = exprList[i];\n        if (expr?.type === \"TSTypeCastExpression\") {\n          exprList[i] = this.typeCastToParameter(expr);\n        }\n      }\n      super.toAssignableList(...arguments);\n    }\n\n    typeCastToParameter(node: N.TsTypeCastExpression): N.Node {\n      node.expression.typeAnnotation = node.typeAnnotation;\n\n      this.resetEndLocation(node.expression, node.typeAnnotation.loc.end);\n\n      return node.expression;\n    }\n\n    shouldParseArrow(params: Array<N.Node>) {\n      if (this.match(tt.colon)) {\n        return params.every(expr => this.isAssignable(expr, true));\n      }\n      return super.shouldParseArrow(params);\n    }\n\n    shouldParseAsyncArrow(): boolean {\n      return this.match(tt.colon) || super.shouldParseAsyncArrow();\n    }\n\n    canHaveLeadingDecorator() {\n      // Avoid unnecessary lookahead in checking for abstract class unless needed!\n      return super.canHaveLeadingDecorator() || this.isAbstractClass();\n    }\n\n    jsxParseOpeningElementAfterName(\n      node: N.JSXOpeningElement,\n    ): N.JSXOpeningElement {\n      // handles `<Component<<T>`\n      if (this.match(tt.lt) || this.match(tt.bitShiftL)) {\n        const typeArguments = this.tsTryParseAndCatch(() =>\n          this.tsParseTypeArgumentsInExpression(),\n        );\n        if (typeArguments) node.typeParameters = typeArguments;\n      }\n      return super.jsxParseOpeningElementAfterName(node);\n    }\n\n    getGetterSetterExpectedParamCount(\n      method: N.ObjectMethod | N.ClassMethod,\n    ): number {\n      const baseCount = super.getGetterSetterExpectedParamCount(method);\n      const params = this.getObjectOrClassMethodParams(method);\n      const firstParam = params[0];\n      const hasContextParam = firstParam && this.isThisParam(firstParam);\n\n      return hasContextParam ? baseCount + 1 : baseCount;\n    }\n\n    parseCatchClauseParam(): N.Pattern {\n      const param = super.parseCatchClauseParam();\n      const type = this.tsTryParseTypeAnnotation();\n\n      if (type) {\n        param.typeAnnotation = type;\n        this.resetEndLocation(param);\n      }\n\n      return param;\n    }\n\n    tsInAmbientContext<T>(cb: () => T): T {\n      const oldIsAmbientContext = this.state.isAmbientContext;\n      this.state.isAmbientContext = true;\n      try {\n        return cb();\n      } finally {\n        this.state.isAmbientContext = oldIsAmbientContext;\n      }\n    }\n\n    parseClass<T: N.Class>(node: T, ...args: any[]): T {\n      const oldInAbstractClass = this.state.inAbstractClass;\n      this.state.inAbstractClass = !!(node: any).abstract;\n      try {\n        return super.parseClass(node, ...args);\n      } finally {\n        this.state.inAbstractClass = oldInAbstractClass;\n      }\n    }\n\n    tsParseAbstractDeclaration(\n      node: any,\n    ): N.ClassDeclaration | ?N.TsInterfaceDeclaration {\n      if (this.match(tt._class)) {\n        node.abstract = true;\n        return this.parseClass<N.ClassDeclaration>(\n          (node: N.ClassDeclaration),\n          /* isStatement */ true,\n          /* optionalId */ false,\n        );\n      } else if (this.isContextual(tt._interface)) {\n        // for invalid abstract interface\n\n        // To avoid\n        //   abstract interface\n        //   Foo {}\n        if (!this.hasFollowingLineBreak()) {\n          node.abstract = true;\n          this.raise(TSErrors.NonClassMethodPropertyHasAbstractModifer, {\n            at: node,\n          });\n          return this.tsParseInterfaceDeclaration(\n            (node: N.TsInterfaceDeclaration),\n          );\n        }\n      } else {\n        this.unexpected(null, tt._class);\n      }\n    }\n\n    parseMethod(...args: any[]) {\n      const method = super.parseMethod(...args);\n      if (method.abstract) {\n        const hasBody = this.hasPlugin(\"estree\")\n          ? !!method.value.body\n          : !!method.body;\n        if (hasBody) {\n          const { key } = method;\n          this.raise(TSErrors.AbstractMethodHasImplementation, {\n            at: method,\n            methodName:\n              key.type === \"Identifier\" && !method.computed\n                ? key.name\n                : `[${this.input.slice(key.start, key.end)}]`,\n          });\n        }\n      }\n      return method;\n    }\n\n    tsParseTypeParameterName(): N.Identifier | string {\n      const typeName: N.Identifier = this.parseIdentifier();\n      return process.env.BABEL_8_BREAKING ? typeName : typeName.name;\n    }\n\n    shouldParseAsAmbientContext(): boolean {\n      return !!this.getPluginOption(\"typescript\", \"dts\");\n    }\n\n    parse() {\n      if (this.shouldParseAsAmbientContext()) {\n        this.state.isAmbientContext = true;\n      }\n      return super.parse();\n    }\n\n    getExpression() {\n      if (this.shouldParseAsAmbientContext()) {\n        this.state.isAmbientContext = true;\n      }\n      return super.getExpression();\n    }\n\n    parseExportSpecifier(\n      node: any,\n      isString: boolean,\n      isInTypeExport: boolean,\n      isMaybeTypeOnly: boolean,\n    ) {\n      if (!isString && isMaybeTypeOnly) {\n        this.parseTypeOnlyImportExportSpecifier(\n          node,\n          /* isImport */ false,\n          isInTypeExport,\n        );\n        return this.finishNode<N.ExportSpecifier>(node, \"ExportSpecifier\");\n      }\n      node.exportKind = \"value\";\n      return super.parseExportSpecifier(\n        node,\n        isString,\n        isInTypeExport,\n        isMaybeTypeOnly,\n      );\n    }\n\n    parseImportSpecifier(\n      specifier: any,\n      importedIsString: boolean,\n      isInTypeOnlyImport: boolean,\n      isMaybeTypeOnly: boolean,\n    ): N.ImportSpecifier {\n      if (!importedIsString && isMaybeTypeOnly) {\n        this.parseTypeOnlyImportExportSpecifier(\n          specifier,\n          /* isImport */ true,\n          isInTypeOnlyImport,\n        );\n        return this.finishNode<N.ImportSpecifier>(specifier, \"ImportSpecifier\");\n      }\n      specifier.importKind = \"value\";\n      return super.parseImportSpecifier(\n        specifier,\n        importedIsString,\n        isInTypeOnlyImport,\n        isMaybeTypeOnly,\n      );\n    }\n\n    parseTypeOnlyImportExportSpecifier(\n      node: any,\n      isImport: boolean,\n      isInTypeOnlyImportExport: boolean,\n    ): void {\n      const leftOfAsKey = isImport ? \"imported\" : \"local\";\n      const rightOfAsKey = isImport ? \"local\" : \"exported\";\n\n      let leftOfAs = node[leftOfAsKey];\n      let rightOfAs;\n\n      let hasTypeSpecifier = false;\n      let canParseAsKeyword = true;\n\n      const loc = leftOfAs.loc.start;\n\n      // https://github.com/microsoft/TypeScript/blob/fc4f9d83d5939047aa6bb2a43965c6e9bbfbc35b/src/compiler/parser.ts#L7411-L7456\n      // import { type } from \"mod\";          - hasTypeSpecifier: false, leftOfAs: type\n      // import { type as } from \"mod\";       - hasTypeSpecifier: true,  leftOfAs: as\n      // import { type as as } from \"mod\";    - hasTypeSpecifier: false, leftOfAs: type, rightOfAs: as\n      // import { type as as as } from \"mod\"; - hasTypeSpecifier: true,  leftOfAs: as,   rightOfAs: as\n      if (this.isContextual(tt._as)) {\n        // { type as ...? }\n        const firstAs = this.parseIdentifier();\n        if (this.isContextual(tt._as)) {\n          // { type as as ...? }\n          const secondAs = this.parseIdentifier();\n          if (tokenIsKeywordOrIdentifier(this.state.type)) {\n            // { type as as something }\n            hasTypeSpecifier = true;\n            leftOfAs = firstAs;\n            rightOfAs = isImport\n              ? this.parseIdentifier()\n              : this.parseModuleExportName();\n            canParseAsKeyword = false;\n          } else {\n            // { type as as }\n            rightOfAs = secondAs;\n            canParseAsKeyword = false;\n          }\n        } else if (tokenIsKeywordOrIdentifier(this.state.type)) {\n          // { type as something }\n          canParseAsKeyword = false;\n          rightOfAs = isImport\n            ? this.parseIdentifier()\n            : this.parseModuleExportName();\n        } else {\n          // { type as }\n          hasTypeSpecifier = true;\n          leftOfAs = firstAs;\n        }\n      } else if (tokenIsKeywordOrIdentifier(this.state.type)) {\n        // { type something ...? }\n        hasTypeSpecifier = true;\n        if (isImport) {\n          leftOfAs = this.parseIdentifier(true);\n          if (!this.isContextual(tt._as)) {\n            this.checkReservedWord(\n              leftOfAs.name,\n              leftOfAs.loc.start,\n              true,\n              true,\n            );\n          }\n        } else {\n          leftOfAs = this.parseModuleExportName();\n        }\n      }\n      if (hasTypeSpecifier && isInTypeOnlyImportExport) {\n        this.raise(\n          isImport\n            ? TSErrors.TypeModifierIsUsedInTypeImports\n            : TSErrors.TypeModifierIsUsedInTypeExports,\n          { at: loc },\n        );\n      }\n\n      node[leftOfAsKey] = leftOfAs;\n      node[rightOfAsKey] = rightOfAs;\n\n      const kindKey = isImport ? \"importKind\" : \"exportKind\";\n      node[kindKey] = hasTypeSpecifier ? \"type\" : \"value\";\n\n      if (canParseAsKeyword && this.eatContextual(tt._as)) {\n        node[rightOfAsKey] = isImport\n          ? this.parseIdentifier()\n          : this.parseModuleExportName();\n      }\n      if (!node[rightOfAsKey]) {\n        node[rightOfAsKey] = cloneIdentifier(node[leftOfAsKey]);\n      }\n      if (isImport) {\n        this.checkIdentifier(node[rightOfAsKey], BIND_LEXICAL);\n      }\n    }\n  };\n\nfunction isPossiblyLiteralEnum(expression: N.Expression): boolean {\n  if (expression.type !== \"MemberExpression\") return false;\n\n  const { computed, property } = expression;\n\n  if (\n    computed &&\n    property.type !== \"StringLiteral\" &&\n    (property.type !== \"TemplateLiteral\" || property.expressions.length > 0)\n  ) {\n    return false;\n  }\n\n  return isUncomputedMemberExpressionChain(expression.object);\n}\n\nfunction isUncomputedMemberExpressionChain(expression: N.Expression): boolean {\n  if (expression.type === \"Identifier\") return true;\n  if (expression.type !== \"MemberExpression\") return false;\n  if (expression.computed) return false;\n\n  return isUncomputedMemberExpressionChain(expression.object);\n}\n","// @flow\n\nimport * as charCodes from \"charcodes\";\n\nimport { tokenLabelName, tt } from \"../tokenizer/types\";\nimport type Parser from \"../parser\";\nimport * as N from \"../types\";\nimport { ParseErrorEnum } from \"../parse-error\";\n\nexport type PlaceholderTypes =\n  | \"Identifier\"\n  | \"StringLiteral\"\n  | \"Expression\"\n  | \"Statement\"\n  | \"Declaration\"\n  | \"BlockStatement\"\n  | \"ClassBody\"\n  | \"Pattern\";\n\n// $PropertyType doesn't support enums. Use a fake \"switch\" (GetPlaceholderNode)\n//type MaybePlaceholder<T: PlaceholderTypes> = $PropertyType<N, T> | N.Placeholder<T>;\n\ntype _Switch<Value, Cases, Index> = $Call<\n  (\n    $ElementType<$ElementType<Cases, Index>, 0>,\n  ) => $ElementType<$ElementType<Cases, Index>, 1>,\n  Value,\n>;\ntype $Switch<Value, Cases> = _Switch<Value, Cases, *>;\n\ntype NodeOf<T: PlaceholderTypes> = $Switch<\n  T,\n  [\n    [\"Identifier\", N.Identifier],\n    [\"StringLiteral\", N.StringLiteral],\n    [\"Expression\", N.Expression],\n    [\"Statement\", N.Statement],\n    [\"Declaration\", N.Declaration],\n    [\"BlockStatement\", N.BlockStatement],\n    [\"ClassBody\", N.ClassBody],\n    [\"Pattern\", N.Pattern],\n  ],\n>;\n\n// Placeholder<T> breaks everything, because its type is incompatible with\n// the substituted nodes.\ntype MaybePlaceholder<T: PlaceholderTypes> = NodeOf<T>; // | Placeholder<T>\n\n/* eslint sort-keys: \"error\" */\nconst PlaceholderErrors = ParseErrorEnum`placeholders`(_ => ({\n  ClassNameIsRequired: _(\"A class name is required.\"),\n  UnexpectedSpace: _(\"Unexpected space in placeholder.\"),\n}));\n/* eslint-disable sort-keys */\n\nexport default (superClass: Class<Parser>): Class<Parser> =>\n  class extends superClass {\n    parsePlaceholder<T: PlaceholderTypes>(\n      expectedNode: T,\n    ): /*?N.Placeholder<T>*/ ?MaybePlaceholder<T> {\n      if (this.match(tt.placeholder)) {\n        const node = this.startNode();\n        this.next();\n        this.assertNoSpace();\n\n        // We can't use this.parseIdentifier because\n        // we don't want nested placeholders.\n        node.name = super.parseIdentifier(/* liberal */ true);\n\n        this.assertNoSpace();\n        this.expect(tt.placeholder);\n        return this.finishPlaceholder(node, expectedNode);\n      }\n    }\n\n    finishPlaceholder<T: PlaceholderTypes>(\n      node: N.Node,\n      expectedNode: T,\n    ): /*N.Placeholder<T>*/ MaybePlaceholder<T> {\n      const isFinished = !!(node.expectedNode && node.type === \"Placeholder\");\n      node.expectedNode = expectedNode;\n\n      return isFinished ? node : this.finishNode(node, \"Placeholder\");\n    }\n\n    /* ============================================================ *\n     * tokenizer/index.js                                           *\n     * ============================================================ */\n\n    getTokenFromCode(code: number) {\n      if (\n        code === charCodes.percentSign &&\n        this.input.charCodeAt(this.state.pos + 1) === charCodes.percentSign\n      ) {\n        return this.finishOp(tt.placeholder, 2);\n      }\n\n      return super.getTokenFromCode(...arguments);\n    }\n\n    /* ============================================================ *\n     * parser/expression.js                                         *\n     * ============================================================ */\n\n    parseExprAtom(): MaybePlaceholder<\"Expression\"> {\n      return (\n        this.parsePlaceholder(\"Expression\") || super.parseExprAtom(...arguments)\n      );\n    }\n\n    parseIdentifier(): MaybePlaceholder<\"Identifier\"> {\n      // NOTE: This function only handles identifiers outside of\n      // expressions and binding patterns, since they are already\n      // handled by the parseExprAtom and parseBindingAtom functions.\n      // This is needed, for example, to parse \"class %%NAME%% {}\".\n      return (\n        this.parsePlaceholder(\"Identifier\") ||\n        super.parseIdentifier(...arguments)\n      );\n    }\n\n    checkReservedWord(word: string): void {\n      // Sometimes we call #checkReservedWord(node.name), expecting\n      // that node is an Identifier. If it is a Placeholder, name\n      // will be undefined.\n      if (word !== undefined) super.checkReservedWord(...arguments);\n    }\n\n    /* ============================================================ *\n     * parser/lval.js                                               *\n     * ============================================================ */\n\n    parseBindingAtom(): MaybePlaceholder<\"Pattern\"> {\n      return (\n        this.parsePlaceholder(\"Pattern\") || super.parseBindingAtom(...arguments)\n      );\n    }\n\n    isValidLVal(type: string, ...rest) {\n      return type === \"Placeholder\" || super.isValidLVal(type, ...rest);\n    }\n\n    toAssignable(node: N.Node): void {\n      if (\n        node &&\n        node.type === \"Placeholder\" &&\n        node.expectedNode === \"Expression\"\n      ) {\n        node.expectedNode = \"Pattern\";\n      } else {\n        super.toAssignable(...arguments);\n      }\n    }\n\n    /* ============================================================ *\n     * parser/statement.js                                          *\n     * ============================================================ */\n\n    isLet(context: ?string): boolean {\n      if (super.isLet(context)) {\n        return true;\n      }\n\n      // Replicate the original checks that lead to looking ahead for an\n      // identifier.\n      if (!this.isContextual(tt._let)) {\n        return false;\n      }\n      if (context) return false;\n\n      // Accept \"let %%\" as the start of \"let %%placeholder%%\", as though the\n      // placeholder were an identifier.\n      const nextToken = this.lookahead();\n      if (nextToken.type === tt.placeholder) {\n        return true;\n      }\n\n      return false;\n    }\n\n    verifyBreakContinue(node: N.BreakStatement | N.ContinueStatement) {\n      if (node.label && node.label.type === \"Placeholder\") return;\n      super.verifyBreakContinue(...arguments);\n    }\n\n    parseExpressionStatement(\n      node: MaybePlaceholder<\"Statement\">,\n      expr: N.Expression,\n    ): MaybePlaceholder<\"Statement\"> {\n      if (\n        expr.type !== \"Placeholder\" ||\n        (expr.extra && expr.extra.parenthesized)\n      ) {\n        return super.parseExpressionStatement(...arguments);\n      }\n\n      if (this.match(tt.colon)) {\n        const stmt: N.LabeledStatement = node;\n        stmt.label = this.finishPlaceholder(expr, \"Identifier\");\n        this.next();\n        stmt.body = this.parseStatement(\"label\");\n        return this.finishNode(stmt, \"LabeledStatement\");\n      }\n\n      this.semicolon();\n\n      node.name = expr.name;\n      return this.finishPlaceholder(node, \"Statement\");\n    }\n\n    parseBlock(): MaybePlaceholder<\"BlockStatement\"> {\n      return (\n        this.parsePlaceholder(\"BlockStatement\") ||\n        super.parseBlock(...arguments)\n      );\n    }\n\n    parseFunctionId(): ?MaybePlaceholder<\"Identifier\"> {\n      return (\n        this.parsePlaceholder(\"Identifier\") ||\n        super.parseFunctionId(...arguments)\n      );\n    }\n\n    parseClass<T: N.Class>(\n      node: T,\n      isStatement: /* T === ClassDeclaration */ boolean,\n      optionalId?: boolean,\n    ): T {\n      const type = isStatement ? \"ClassDeclaration\" : \"ClassExpression\";\n\n      this.next();\n      this.takeDecorators(node);\n      const oldStrict = this.state.strict;\n\n      const placeholder = this.parsePlaceholder(\"Identifier\");\n      if (placeholder) {\n        if (\n          this.match(tt._extends) ||\n          this.match(tt.placeholder) ||\n          this.match(tt.braceL)\n        ) {\n          node.id = placeholder;\n        } else if (optionalId || !isStatement) {\n          node.id = null;\n          node.body = this.finishPlaceholder(placeholder, \"ClassBody\");\n          return this.finishNode(node, type);\n        } else {\n          throw this.raise(PlaceholderErrors.ClassNameIsRequired, {\n            at: this.state.startLoc,\n          });\n        }\n      } else {\n        this.parseClassId(node, isStatement, optionalId);\n      }\n\n      this.parseClassSuper(node);\n      node.body =\n        this.parsePlaceholder(\"ClassBody\") ||\n        this.parseClassBody(!!node.superClass, oldStrict);\n      return this.finishNode(node, type);\n    }\n\n    parseExport(node: N.Node): N.Node {\n      const placeholder = this.parsePlaceholder(\"Identifier\");\n      if (!placeholder) return super.parseExport(...arguments);\n\n      if (!this.isContextual(tt._from) && !this.match(tt.comma)) {\n        // export %%DECL%%;\n        node.specifiers = [];\n        node.source = null;\n        node.declaration = this.finishPlaceholder(placeholder, \"Declaration\");\n        return this.finishNode(node, \"ExportNamedDeclaration\");\n      }\n\n      // export %%NAME%% from \"foo\";\n      this.expectPlugin(\"exportDefaultFrom\");\n      const specifier = this.startNode();\n      specifier.exported = placeholder;\n      node.specifiers = [this.finishNode(specifier, \"ExportDefaultSpecifier\")];\n\n      return super.parseExport(node);\n    }\n\n    isExportDefaultSpecifier(): boolean {\n      if (this.match(tt._default)) {\n        const next = this.nextTokenStart();\n        if (this.isUnparsedContextual(next, \"from\")) {\n          if (\n            this.input.startsWith(\n              tokenLabelName(tt.placeholder),\n              this.nextTokenStartSince(next + 4),\n            )\n          ) {\n            return true;\n          }\n        }\n      }\n      return super.isExportDefaultSpecifier();\n    }\n\n    maybeParseExportDefaultSpecifier(node: N.Node): boolean {\n      if (node.specifiers && node.specifiers.length > 0) {\n        // \"export %%NAME%%\" has already been parsed by #parseExport.\n        return true;\n      }\n      return super.maybeParseExportDefaultSpecifier(...arguments);\n    }\n\n    checkExport(node: N.ExportNamedDeclaration): void {\n      const { specifiers } = node;\n      if (specifiers?.length) {\n        node.specifiers = specifiers.filter(\n          node => node.exported.type === \"Placeholder\",\n        );\n      }\n      super.checkExport(node);\n      node.specifiers = specifiers;\n    }\n\n    parseImport(\n      node: N.Node,\n    ): N.ImportDeclaration | N.TsImportEqualsDeclaration {\n      const placeholder = this.parsePlaceholder(\"Identifier\");\n      if (!placeholder) return super.parseImport(...arguments);\n\n      node.specifiers = [];\n\n      if (!this.isContextual(tt._from) && !this.match(tt.comma)) {\n        // import %%STRING%%;\n        node.source = this.finishPlaceholder(placeholder, \"StringLiteral\");\n        this.semicolon();\n        return this.finishNode(node, \"ImportDeclaration\");\n      }\n\n      // import %%DEFAULT%% ...\n      const specifier = this.startNodeAtNode(placeholder);\n      specifier.local = placeholder;\n      this.finishNode(specifier, \"ImportDefaultSpecifier\");\n      node.specifiers.push(specifier);\n\n      if (this.eat(tt.comma)) {\n        // import %%DEFAULT%%, * as ...\n        const hasStarImport = this.maybeParseStarImportSpecifier(node);\n\n        // import %%DEFAULT%%, { ...\n        if (!hasStarImport) this.parseNamedImportSpecifiers(node);\n      }\n\n      this.expectContextual(tt._from);\n      node.source = this.parseImportSource();\n      this.semicolon();\n      return this.finishNode(node, \"ImportDeclaration\");\n    }\n\n    parseImportSource(): MaybePlaceholder<\"StringLiteral\"> {\n      // import ... from %%STRING%%;\n\n      return (\n        this.parsePlaceholder(\"StringLiteral\") ||\n        super.parseImportSource(...arguments)\n      );\n    }\n\n    // Throws if the current token and the prev one are separated by a space.\n    assertNoSpace(): void {\n      if (this.state.start > this.state.lastTokEndLoc.index) {\n        this.raise(PlaceholderErrors.UnexpectedSpace, {\n          at: this.state.lastTokEndLoc,\n        });\n      }\n    }\n  };\n","// @flow\n\nimport type Parser from \"./parser\";\nimport type { PluginConfig } from \"./parser/base\";\n\nexport type Plugin = PluginConfig;\n\nexport type PluginList = $ReadOnlyArray<PluginConfig>;\n\nexport type MixinPlugin = (superClass: Class<Parser>) => Class<Parser>;\n\n// This function’s second parameter accepts either a string (plugin name) or an\n// array pair (plugin name and options object). If an options object is given,\n// then each value is non-recursively checked for identity with the actual\n// option value of each plugin in the first argument (which is an array of\n// plugin names or array pairs).\nexport function hasPlugin(\n  plugins: PluginList,\n  expectedConfig: PluginConfig,\n): boolean {\n  // The expectedOptions object is by default an empty object if the given\n  // expectedConfig argument does not give an options object (i.e., if it is a\n  // string).\n  const [expectedName, expectedOptions] =\n    typeof expectedConfig === \"string\" ? [expectedConfig, {}] : expectedConfig;\n\n  const expectedKeys = Object.keys(expectedOptions);\n\n  const expectedOptionsIsEmpty = expectedKeys.length === 0;\n\n  return plugins.some(p => {\n    if (typeof p === \"string\") {\n      return expectedOptionsIsEmpty && p === expectedName;\n    } else {\n      const [pluginName, pluginOptions] = p;\n      if (pluginName !== expectedName) {\n        return false;\n      }\n      for (const key of expectedKeys) {\n        if (pluginOptions[key] !== expectedOptions[key]) {\n          return false;\n        }\n      }\n      return true;\n    }\n  });\n}\n\nexport function getPluginOption(\n  plugins: PluginList,\n  name: string,\n  option: string,\n) {\n  const plugin = plugins.find(plugin => {\n    if (Array.isArray(plugin)) {\n      return plugin[0] === name;\n    } else {\n      return plugin === name;\n    }\n  });\n\n  if (plugin && Array.isArray(plugin)) {\n    return plugin[1][option];\n  }\n\n  return null;\n}\n\nconst PIPELINE_PROPOSALS = [\"minimal\", \"fsharp\", \"hack\", \"smart\"];\nconst TOPIC_TOKENS = [\"^^\", \"@@\", \"^\", \"%\", \"#\"];\nconst RECORD_AND_TUPLE_SYNTAX_TYPES = [\"hash\", \"bar\"];\n\nexport function validatePlugins(plugins: PluginList) {\n  if (hasPlugin(plugins, \"decorators\")) {\n    if (hasPlugin(plugins, \"decorators-legacy\")) {\n      throw new Error(\n        \"Cannot use the decorators and decorators-legacy plugin together\",\n      );\n    }\n\n    const decoratorsBeforeExport = getPluginOption(\n      plugins,\n      \"decorators\",\n      \"decoratorsBeforeExport\",\n    );\n    if (decoratorsBeforeExport == null) {\n      throw new Error(\n        \"The 'decorators' plugin requires a 'decoratorsBeforeExport' option,\" +\n          \" whose value must be a boolean. If you are migrating from\" +\n          \" Babylon/Babel 6 or want to use the old decorators proposal, you\" +\n          \" should use the 'decorators-legacy' plugin instead of 'decorators'.\",\n      );\n    } else if (typeof decoratorsBeforeExport !== \"boolean\") {\n      throw new Error(\"'decoratorsBeforeExport' must be a boolean.\");\n    }\n  }\n\n  if (hasPlugin(plugins, \"flow\") && hasPlugin(plugins, \"typescript\")) {\n    throw new Error(\"Cannot combine flow and typescript plugins.\");\n  }\n\n  if (hasPlugin(plugins, \"placeholders\") && hasPlugin(plugins, \"v8intrinsic\")) {\n    throw new Error(\"Cannot combine placeholders and v8intrinsic plugins.\");\n  }\n\n  if (hasPlugin(plugins, \"pipelineOperator\")) {\n    const proposal = getPluginOption(plugins, \"pipelineOperator\", \"proposal\");\n\n    if (!PIPELINE_PROPOSALS.includes(proposal)) {\n      const proposalList = PIPELINE_PROPOSALS.map(p => `\"${p}\"`).join(\", \");\n      throw new Error(\n        `\"pipelineOperator\" requires \"proposal\" option whose value must be one of: ${proposalList}.`,\n      );\n    }\n\n    const tupleSyntaxIsHash = hasPlugin(plugins, [\n      \"recordAndTuple\",\n      { syntaxType: \"hash\" },\n    ]);\n\n    if (proposal === \"hack\") {\n      if (hasPlugin(plugins, \"placeholders\")) {\n        throw new Error(\n          \"Cannot combine placeholders plugin and Hack-style pipes.\",\n        );\n      }\n\n      if (hasPlugin(plugins, \"v8intrinsic\")) {\n        throw new Error(\n          \"Cannot combine v8intrinsic plugin and Hack-style pipes.\",\n        );\n      }\n\n      const topicToken = getPluginOption(\n        plugins,\n        \"pipelineOperator\",\n        \"topicToken\",\n      );\n\n      if (!TOPIC_TOKENS.includes(topicToken)) {\n        const tokenList = TOPIC_TOKENS.map(t => `\"${t}\"`).join(\", \");\n\n        throw new Error(\n          `\"pipelineOperator\" in \"proposal\": \"hack\" mode also requires a \"topicToken\" option whose value must be one of: ${tokenList}.`,\n        );\n      }\n\n      if (topicToken === \"#\" && tupleSyntaxIsHash) {\n        throw new Error(\n          'Plugin conflict between `[\"pipelineOperator\", { proposal: \"hack\", topicToken: \"#\" }]` and `[\"recordAndtuple\", { syntaxType: \"hash\"}]`.',\n        );\n      }\n    } else if (proposal === \"smart\" && tupleSyntaxIsHash) {\n      throw new Error(\n        'Plugin conflict between `[\"pipelineOperator\", { proposal: \"smart\" }]` and `[\"recordAndtuple\", { syntaxType: \"hash\"}]`.',\n      );\n    }\n  }\n\n  if (hasPlugin(plugins, \"moduleAttributes\")) {\n    if (process.env.BABEL_8_BREAKING) {\n      throw new Error(\n        \"`moduleAttributes` has been removed in Babel 8, please use `importAssertions` parser plugin, or `@babel/plugin-syntax-import-assertions`.\",\n      );\n    } else {\n      if (hasPlugin(plugins, \"importAssertions\")) {\n        throw new Error(\n          \"Cannot combine importAssertions and moduleAttributes plugins.\",\n        );\n      }\n      const moduleAttributesVersionPluginOption = getPluginOption(\n        plugins,\n        \"moduleAttributes\",\n        \"version\",\n      );\n      if (moduleAttributesVersionPluginOption !== \"may-2020\") {\n        throw new Error(\n          \"The 'moduleAttributes' plugin requires a 'version' option,\" +\n            \" representing the last proposal update. Currently, the\" +\n            \" only supported value is 'may-2020'.\",\n        );\n      }\n    }\n  }\n\n  if (\n    hasPlugin(plugins, \"recordAndTuple\") &&\n    !RECORD_AND_TUPLE_SYNTAX_TYPES.includes(\n      getPluginOption(plugins, \"recordAndTuple\", \"syntaxType\"),\n    )\n  ) {\n    throw new Error(\n      \"'recordAndTuple' requires 'syntaxType' option whose value should be one of: \" +\n        RECORD_AND_TUPLE_SYNTAX_TYPES.map(p => `'${p}'`).join(\", \"),\n    );\n  }\n\n  if (\n    hasPlugin(plugins, \"asyncDoExpressions\") &&\n    !hasPlugin(plugins, \"doExpressions\")\n  ) {\n    const error = new Error(\n      \"'asyncDoExpressions' requires 'doExpressions', please add 'doExpressions' to parser plugins.\",\n    );\n    // $FlowIgnore\n    error.missingPlugins = \"doExpressions\"; // so @babel/core can provide better error message\n    throw error;\n  }\n}\n\n// These plugins are defined using a mixin which extends the parser class.\n\nimport estree from \"./plugins/estree\";\nimport flow from \"./plugins/flow\";\nimport jsx from \"./plugins/jsx\";\nimport typescript from \"./plugins/typescript\";\nimport placeholders from \"./plugins/placeholders\";\nimport v8intrinsic from \"./plugins/v8intrinsic\";\n\n// NOTE: order is important. estree must come first; placeholders must come last.\nexport const mixinPlugins: { [name: string]: MixinPlugin } = {\n  estree,\n  jsx,\n  flow,\n  typescript,\n  v8intrinsic,\n  placeholders,\n};\n\nexport const mixinPluginNames: $ReadOnlyArray<string> =\n  Object.keys(mixinPlugins);\n","import type Parser from \"../parser\";\nimport { tokenIsIdentifier, tt } from \"../tokenizer/types\";\nimport * as N from \"../types\";\n\nexport default (superClass: Class<Parser>): Class<Parser> =>\n  class extends superClass {\n    parseV8Intrinsic(): N.Expression {\n      if (this.match(tt.modulo)) {\n        const v8IntrinsicStartLoc = this.state.startLoc;\n        // let the `loc` of Identifier starts from `%`\n        const node = this.startNode();\n        this.next(); // eat '%'\n        if (tokenIsIdentifier(this.state.type)) {\n          const name = this.parseIdentifierName(this.state.start);\n          const identifier = this.createIdentifier(node, name);\n          identifier.type = \"V8IntrinsicIdentifier\";\n          if (this.match(tt.parenL)) {\n            return identifier;\n          }\n        }\n        this.unexpected(v8IntrinsicStartLoc);\n      }\n    }\n\n    /* ============================================================ *\n     * parser/expression.js                                         *\n     * ============================================================ */\n\n    parseExprAtom(): N.Expression {\n      return this.parseV8Intrinsic() || super.parseExprAtom(...arguments);\n    }\n  };\n","// @flow\n\nimport type { PluginList } from \"./plugin-utils\";\n\n// A second optional argument can be given to further configure\n// the parser process. These options are recognized:\n\nexport type SourceType = \"script\" | \"module\" | \"unambiguous\";\n\nexport type Options = {\n  sourceType: SourceType,\n  sourceFilename?: string,\n  startColumn: number,\n  startLine: number,\n  allowAwaitOutsideFunction: boolean,\n  allowReturnOutsideFunction: boolean,\n  allowImportExportEverywhere: boolean,\n  allowSuperOutsideMethod: boolean,\n  allowUndeclaredExports: boolean,\n  plugins: PluginList,\n  strictMode: ?boolean,\n  ranges: boolean,\n  tokens: boolean,\n  createParenthesizedExpressions: boolean,\n  errorRecovery: boolean,\n  attachComment: boolean,\n};\n\nexport const defaultOptions: Options = {\n  // Source type (\"script\" or \"module\") for different semantics\n  sourceType: \"script\",\n  // Source filename.\n  sourceFilename: undefined,\n  // Column (0-based) from which to start counting source. Useful for\n  // integration with other tools.\n  startColumn: 0,\n  // Line (1-based) from which to start counting source. Useful for\n  // integration with other tools.\n  startLine: 1,\n  // When enabled, await at the top level is not considered an\n  // error.\n  allowAwaitOutsideFunction: false,\n  // When enabled, a return at the top level is not considered an\n  // error.\n  allowReturnOutsideFunction: false,\n  // When enabled, import/export statements are not constrained to\n  // appearing at the top of the program.\n  allowImportExportEverywhere: false,\n  // TODO\n  allowSuperOutsideMethod: false,\n  // When enabled, export statements can reference undeclared variables.\n  allowUndeclaredExports: false,\n  // An array of plugins to enable\n  plugins: [],\n  // TODO\n  strictMode: null,\n  // Nodes have their start and end characters offsets recorded in\n  // `start` and `end` properties (directly on the node, rather than\n  // the `loc` object, which holds line/column data. To also add a\n  // [semi-standardized][range] `range` property holding a `[start,\n  // end]` array with the same numbers, set the `ranges` option to\n  // `true`.\n  //\n  // [range]: https://bugzilla.mozilla.org/show_bug.cgi?id=745678\n  ranges: false,\n  // Adds all parsed tokens to a `tokens` property on the `File` node\n  tokens: false,\n  // Whether to create ParenthesizedExpression AST nodes (if false\n  // the parser sets extra.parenthesized on the expression nodes instead).\n  createParenthesizedExpressions: false,\n  // When enabled, errors are attached to the AST instead of being directly thrown.\n  // Some errors will still throw, because @babel/parser can't always recover.\n  errorRecovery: false,\n  // When enabled, comments will be attached to adjacent AST nodes as one of\n  // `leadingComments`, `trailingComments` and `innerComments`. The comment attachment\n  // is vital to preserve comments after transform. If you don't print AST back,\n  // consider set this option to `false` for performance\n  attachComment: true,\n};\n\n// Interpret and default an options object\n\nexport function getOptions(opts: ?Options): Options {\n  const options: any = {};\n  for (const key of Object.keys(defaultOptions)) {\n    options[key] = opts && opts[key] != null ? opts[key] : defaultOptions[key];\n  }\n  return options;\n}\n","// @flow\n\n/*:: declare var invariant; */\nimport * as charCodes from \"charcodes\";\nimport { tt, type TokenType } from \"../tokenizer/types\";\nimport type {\n  TSParameterProperty,\n  Decorator,\n  Expression,\n  Identifier,\n  Node,\n  Pattern,\n  RestElement,\n  SpreadElement,\n  /*:: ObjectOrClassMember, */\n  /*:: ClassMember, */\n  ObjectMember,\n  /*:: TsNamedTypeElementBase, */\n  /*:: PrivateName, */\n  /*:: ObjectExpression, */\n  /*:: ObjectPattern, */\n} from \"../types\";\nimport type { Pos, Position } from \"../util/location\";\nimport {\n  isStrictBindOnlyReservedWord,\n  isStrictBindReservedWord,\n} from \"../util/identifier\";\nimport { NodeUtils } from \"./node\";\nimport {\n  type BindingTypes,\n  BIND_NONE,\n  BIND_SCOPE_LEXICAL,\n} from \"../util/scopeflags\";\nimport { ExpressionErrors } from \"./util\";\nimport { Errors, type LValAncestor } from \"../parse-error\";\n\nconst getOwn = (object, key) =>\n  Object.hasOwnProperty.call(object, key) && object[key];\n\nconst unwrapParenthesizedExpression = (node: Node): Node => {\n  return node.type === \"ParenthesizedExpression\"\n    ? unwrapParenthesizedExpression(node.expression)\n    : node;\n};\n\nexport default class LValParser extends NodeUtils {\n  // Forward-declaration: defined in expression.js\n  /*::\n  +parseIdentifier: (liberal?: boolean) => Identifier;\n  +parseMaybeAssignAllowIn: (\n    refExpressionErrors?: ?ExpressionErrors,\n    afterLeftParse?: Function,\n    refNeedsArrowPos?: ?Pos,\n  ) => Expression;\n  +parseObjectLike: <T: ObjectPattern | ObjectExpression>(\n    close: TokenType,\n    isPattern: boolean,\n    isRecord?: ?boolean,\n    refExpressionErrors?: ?ExpressionErrors,\n  ) => T;\n  +parseObjPropValue: (\n    prop: any,\n    startPos: ?number,\n    startLoc: ?Position,\n    isGenerator: boolean,\n    isAsync: boolean,\n    isPattern: boolean,\n    isAccessor: boolean,\n    refExpressionErrors?: ?ExpressionErrors,\n  ) => void;\n  +parsePropertyName: (\n    prop: ObjectOrClassMember | ClassMember | TsNamedTypeElementBase,\n  ) => Expression | Identifier;\n  +parsePrivateName: () => PrivateName\n  */\n  // Forward-declaration: defined in statement.js\n  /*::\n  +parseDecorator: () => Decorator;\n  */\n\n  /**\n   * Convert existing expression atom to assignable pattern\n   * if possible. Also checks invalid destructuring targets:\n\n   - Parenthesized Destructuring patterns\n   - RestElement is not the last element\n   - Missing `=` in assignment pattern\n\n   NOTE: There is a corresponding \"isAssignable\" method.\n   When this one is updated, please check if also that one needs to be updated.\n\n   * @param {Node} node The expression atom\n   * @param {boolean} [isLHS=false] Whether we are parsing a LeftHandSideExpression.\n   *                                If isLHS is `true`, the following cases are allowed: `[(a)] = [0]`, `[(a.b)] = [0]`\n   *                                If isLHS is `false`, we are in an arrow function parameters list.\n   * @memberof LValParser\n   */\n  toAssignable(node: Node, isLHS: boolean = false): void {\n    let parenthesized = undefined;\n    if (node.type === \"ParenthesizedExpression\" || node.extra?.parenthesized) {\n      parenthesized = unwrapParenthesizedExpression(node);\n      if (isLHS) {\n        // an LHS can be reinterpreted to a binding pattern but not vice versa.\n        // therefore a parenthesized identifier is ambiguous until we are sure it is an assignment expression\n        // i.e. `([(a) = []] = []) => {}`\n        // see also `recordArrowParemeterBindingError` signature in packages/babel-parser/src/util/expression-scope.js\n        if (parenthesized.type === \"Identifier\") {\n          this.expressionScope.recordArrowParemeterBindingError(\n            Errors.InvalidParenthesizedAssignment,\n            { at: node },\n          );\n        } else if (parenthesized.type !== \"MemberExpression\") {\n          // A parenthesized member expression can be in LHS but not in pattern.\n          // If the LHS is later interpreted as a pattern, `checkLVal` will throw for member expression binding\n          // i.e. `([(a.b) = []] = []) => {}`\n          this.raise(Errors.InvalidParenthesizedAssignment, { at: node });\n        }\n      } else {\n        this.raise(Errors.InvalidParenthesizedAssignment, { at: node });\n      }\n    }\n\n    switch (node.type) {\n      case \"Identifier\":\n      case \"ObjectPattern\":\n      case \"ArrayPattern\":\n      case \"AssignmentPattern\":\n      case \"RestElement\":\n        break;\n\n      case \"ObjectExpression\":\n        node.type = \"ObjectPattern\";\n        for (\n          let i = 0, length = node.properties.length, last = length - 1;\n          i < length;\n          i++\n        ) {\n          const prop = node.properties[i];\n          const isLast = i === last;\n          this.toAssignableObjectExpressionProp(prop, isLast, isLHS);\n\n          if (\n            isLast &&\n            prop.type === \"RestElement\" &&\n            node.extra?.trailingCommaLoc\n          ) {\n            this.raise(Errors.RestTrailingComma, {\n              at: node.extra.trailingCommaLoc,\n            });\n          }\n        }\n        break;\n\n      case \"ObjectProperty\": {\n        const { key, value } = node;\n        if (this.isPrivateName(key)) {\n          this.classScope.usePrivateName(\n            this.getPrivateNameSV(key),\n            key.loc.start,\n          );\n        }\n        this.toAssignable(value, isLHS);\n        break;\n      }\n\n      case \"SpreadElement\": {\n        throw new Error(\n          \"Internal @babel/parser error (this is a bug, please report it).\" +\n            \" SpreadElement should be converted by .toAssignable's caller.\",\n        );\n      }\n\n      case \"ArrayExpression\":\n        node.type = \"ArrayPattern\";\n        this.toAssignableList(\n          node.elements,\n          node.extra?.trailingCommaLoc,\n          isLHS,\n        );\n        break;\n\n      case \"AssignmentExpression\":\n        if (node.operator !== \"=\") {\n          this.raise(Errors.MissingEqInAssignment, { at: node.left.loc.end });\n        }\n\n        node.type = \"AssignmentPattern\";\n        delete node.operator;\n        this.toAssignable(node.left, isLHS);\n        break;\n\n      case \"ParenthesizedExpression\":\n        /*::invariant (parenthesized !== undefined) */\n        this.toAssignable(parenthesized, isLHS);\n        break;\n\n      default:\n      // We don't know how to deal with this node. It will\n      // be reported by a later call to checkLVal\n    }\n  }\n\n  toAssignableObjectExpressionProp(\n    prop: Node,\n    isLast: boolean,\n    isLHS: boolean,\n  ) {\n    if (prop.type === \"ObjectMethod\") {\n      this.raise(\n        prop.kind === \"get\" || prop.kind === \"set\"\n          ? Errors.PatternHasAccessor\n          : Errors.PatternHasMethod,\n        { at: prop.key },\n      );\n    } else if (prop.type === \"SpreadElement\") {\n      prop.type = \"RestElement\";\n      const arg = prop.argument;\n      this.checkToRestConversion(arg, /* allowPattern */ false);\n      this.toAssignable(arg, isLHS);\n\n      if (!isLast) {\n        this.raise(Errors.RestTrailingComma, { at: prop });\n      }\n    } else {\n      this.toAssignable(prop, isLHS);\n    }\n  }\n\n  // Convert list of expression atoms to binding list.\n\n  toAssignableList(\n    exprList: Expression[],\n    trailingCommaLoc?: ?Position,\n    isLHS: boolean,\n  ): void {\n    const end = exprList.length - 1;\n\n    for (let i = 0; i <= end; i++) {\n      const elt = exprList[i];\n      if (!elt) continue;\n\n      if (elt.type === \"SpreadElement\") {\n        elt.type = \"RestElement\";\n        const arg = elt.argument;\n        this.checkToRestConversion(arg, /* allowPattern */ true);\n        this.toAssignable(arg, isLHS);\n      } else {\n        this.toAssignable(elt, isLHS);\n      }\n\n      if (elt.type === \"RestElement\") {\n        if (i < end) {\n          this.raise(Errors.RestTrailingComma, { at: elt });\n        } else if (trailingCommaLoc) {\n          this.raise(Errors.RestTrailingComma, { at: trailingCommaLoc });\n        }\n      }\n    }\n  }\n\n  isAssignable(node: Node, isBinding?: boolean): boolean {\n    switch (node.type) {\n      case \"Identifier\":\n      case \"ObjectPattern\":\n      case \"ArrayPattern\":\n      case \"AssignmentPattern\":\n      case \"RestElement\":\n        return true;\n\n      case \"ObjectExpression\": {\n        const last = node.properties.length - 1;\n        return node.properties.every((prop, i) => {\n          return (\n            prop.type !== \"ObjectMethod\" &&\n            (i === last || prop.type !== \"SpreadElement\") &&\n            this.isAssignable(prop)\n          );\n        });\n      }\n\n      case \"ObjectProperty\":\n        return this.isAssignable(node.value);\n\n      case \"SpreadElement\":\n        return this.isAssignable(node.argument);\n\n      case \"ArrayExpression\":\n        return node.elements.every(\n          element => element === null || this.isAssignable(element),\n        );\n\n      case \"AssignmentExpression\":\n        return node.operator === \"=\";\n\n      case \"ParenthesizedExpression\":\n        return this.isAssignable(node.expression);\n\n      case \"MemberExpression\":\n      case \"OptionalMemberExpression\":\n        return !isBinding;\n\n      default:\n        return false;\n    }\n  }\n\n  // Convert list of expression atoms to a list of\n\n  toReferencedList(\n    exprList: $ReadOnlyArray<?Expression>,\n    isParenthesizedExpr?: boolean, // eslint-disable-line no-unused-vars\n  ): $ReadOnlyArray<?Expression> {\n    return exprList;\n  }\n\n  toReferencedListDeep(\n    exprList: $ReadOnlyArray<?Expression>,\n    isParenthesizedExpr?: boolean,\n  ): void {\n    this.toReferencedList(exprList, isParenthesizedExpr);\n\n    for (const expr of exprList) {\n      if (expr?.type === \"ArrayExpression\") {\n        this.toReferencedListDeep(expr.elements);\n      }\n    }\n  }\n\n  // Parses spread element.\n\n  parseSpread(\n    refExpressionErrors: ?ExpressionErrors,\n    refNeedsArrowPos?: ?Pos,\n  ): SpreadElement {\n    const node = this.startNode();\n    this.next();\n    node.argument = this.parseMaybeAssignAllowIn(\n      refExpressionErrors,\n      undefined,\n      refNeedsArrowPos,\n    );\n    return this.finishNode(node, \"SpreadElement\");\n  }\n\n  // https://tc39.es/ecma262/#prod-BindingRestProperty\n  // https://tc39.es/ecma262/#prod-BindingRestElement\n  parseRestBinding(): RestElement {\n    const node = this.startNode();\n    this.next(); // eat `...`\n    node.argument = this.parseBindingAtom();\n    return this.finishNode(node, \"RestElement\");\n  }\n\n  // Parses lvalue (assignable) atom.\n  parseBindingAtom(): Pattern {\n    // https://tc39.es/ecma262/#prod-BindingPattern\n    switch (this.state.type) {\n      case tt.bracketL: {\n        const node = this.startNode();\n        this.next();\n        node.elements = this.parseBindingList(\n          tt.bracketR,\n          charCodes.rightSquareBracket,\n          true,\n        );\n        return this.finishNode(node, \"ArrayPattern\");\n      }\n\n      case tt.braceL:\n        return this.parseObjectLike(tt.braceR, true);\n    }\n\n    // https://tc39.es/ecma262/#prod-BindingIdentifier\n    return this.parseIdentifier();\n  }\n\n  // https://tc39.es/ecma262/#prod-BindingElementList\n  parseBindingList(\n    close: TokenType,\n    closeCharCode: $Values<typeof charCodes>,\n    allowEmpty?: boolean,\n    allowModifiers?: boolean,\n  ): $ReadOnlyArray<Pattern | TSParameterProperty> {\n    const elts: Array<Pattern | TSParameterProperty> = [];\n    let first = true;\n    while (!this.eat(close)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(tt.comma);\n      }\n      if (allowEmpty && this.match(tt.comma)) {\n        // $FlowFixMe This method returns `$ReadOnlyArray<?Pattern>` if `allowEmpty` is set.\n        elts.push(null);\n      } else if (this.eat(close)) {\n        break;\n      } else if (this.match(tt.ellipsis)) {\n        elts.push(this.parseAssignableListItemTypes(this.parseRestBinding()));\n        if (!this.checkCommaAfterRest(closeCharCode)) {\n          this.expect(close);\n          break;\n        }\n      } else {\n        const decorators = [];\n        if (this.match(tt.at) && this.hasPlugin(\"decorators\")) {\n          this.raise(Errors.UnsupportedParameterDecorator, {\n            at: this.state.startLoc,\n          });\n        }\n        // invariant: hasPlugin(\"decorators-legacy\")\n        while (this.match(tt.at)) {\n          decorators.push(this.parseDecorator());\n        }\n        elts.push(this.parseAssignableListItem(allowModifiers, decorators));\n      }\n    }\n    return elts;\n  }\n\n  // https://tc39.es/ecma262/#prod-BindingRestProperty\n  parseBindingRestProperty(prop: RestElement): RestElement {\n    this.next(); // eat '...'\n    // Don't use parseRestBinding() as we only allow Identifier here.\n    prop.argument = this.parseIdentifier();\n    this.checkCommaAfterRest(charCodes.rightCurlyBrace);\n    return this.finishNode(prop, \"RestElement\");\n  }\n\n  // https://tc39.es/ecma262/#prod-BindingProperty\n  parseBindingProperty(): ObjectMember | RestElement {\n    const prop = this.startNode();\n    const { type, start: startPos, startLoc } = this.state;\n    if (type === tt.ellipsis) {\n      return this.parseBindingRestProperty(prop);\n    } else if (type === tt.privateName) {\n      this.expectPlugin(\"destructuringPrivate\", startLoc);\n      this.classScope.usePrivateName(this.state.value, startLoc);\n      prop.key = this.parsePrivateName();\n    } else {\n      this.parsePropertyName(prop);\n    }\n    prop.method = false;\n    this.parseObjPropValue(\n      prop,\n      startPos,\n      startLoc,\n      false /* isGenerator */,\n      false /* isAsync */,\n      true /* isPattern */,\n      false /* isAccessor */,\n    );\n\n    return prop;\n  }\n\n  parseAssignableListItem(\n    allowModifiers: ?boolean,\n    decorators: Decorator[],\n  ): Pattern | TSParameterProperty {\n    const left = this.parseMaybeDefault();\n    this.parseAssignableListItemTypes(left);\n    const elt = this.parseMaybeDefault(left.start, left.loc.start, left);\n    if (decorators.length) {\n      left.decorators = decorators;\n    }\n    return elt;\n  }\n\n  // Used by flow/typescript plugin to add type annotations to binding elements\n  parseAssignableListItemTypes(param: Pattern): Pattern {\n    return param;\n  }\n\n  // Parses assignment pattern around given atom if possible.\n  // https://tc39.es/ecma262/#prod-BindingElement\n  parseMaybeDefault(\n    startPos?: ?number,\n    startLoc?: ?Position,\n    left?: ?Pattern,\n  ): Pattern {\n    startLoc = startLoc ?? this.state.startLoc;\n    startPos = startPos ?? this.state.start;\n    // $FlowIgnore\n    left = left ?? this.parseBindingAtom();\n    if (!this.eat(tt.eq)) return left;\n\n    const node = this.startNodeAt(startPos, startLoc);\n    node.left = left;\n    node.right = this.parseMaybeAssignAllowIn();\n    return this.finishNode(node, \"AssignmentPattern\");\n  }\n  /**\n   * Return information use in determining whether a Node of a given type is an LVal,\n   * possibly given certain additional context information.\n   *\n   * Subclasser notes: This method has kind of a lot of mixed, but related,\n   * responsibilities. If we can definitively determine with the information\n   * provided that this either *is* or *isn't* a valid `LVal`, then the return\n   * value is easy: just return `true` or `false`. However, if it is a valid\n   * LVal *ancestor*, and thus it's descendents must be subsquently visited to\n   * continue the \"investigation\", then this method should return the relevant\n   * child key as a `string`. In some special cases, you additionally want to\n   * convey that this node should be treated as if it were parenthesized. In\n   * that case, a tuple of [key: string, parenthesized: boolean] is returned.\n   * The `string`-only return option is actually just a shorthand for:\n   * `[key: string, parenthesized: false]`.\n   *\n   * @param {NodeType} type A Node `type` string\n   * @param {boolean} isUnparenthesizedInAssign\n   *        Whether the node in question is unparenthesized and its parent\n   *        is either an assignment pattern or an assignment expression.\n   * @param {BindingTypes} binding\n   *        The binding operation that is being considered for this potential\n   *        LVal.\n   * @returns { boolean | string | [string, boolean] }\n   *          `true` or `false` if we can immediately determine whether the node\n   *          type in question can be treated as an `LVal`.\n   *          A `string` key to traverse if we must check this child.\n   *          A `[string, boolean]` tuple if we need to check this child and\n   *          treat is as parenthesized.\n   */\n  isValidLVal(\n    type: string,\n    // eslint-disable-next-line no-unused-vars\n    isUnparenthesizedInAssign: boolean,\n    // eslint-disable-next-line no-unused-vars\n    binding: BindingTypes,\n  ) {\n    return getOwn(\n      {\n        AssignmentPattern: \"left\",\n        RestElement: \"argument\",\n        ObjectProperty: \"value\",\n        ParenthesizedExpression: \"expression\",\n        ArrayPattern: \"elements\",\n        ObjectPattern: \"properties\",\n      },\n      type,\n    );\n  }\n\n  /**\n   * Verify that a target expression is an lval (something that can be assigned to).\n   *\n   * @param {Expression} expression The expression in question to check.\n   * @param {Object} options A set of options described below.\n   * @param {LValAncestor} options.in\n   *        The relevant ancestor to provide context information for the error\n   *        if the check fails.\n   * @param {BindingTypes} [options.binding=BIND_NONE]\n   *        The desired binding type. If the given expression is an identifier\n   *        and `binding` is not `BIND_NONE`, `checkLVal` will register binding\n   *        to the parser scope See also `src/util/scopeflags.js`\n   * @param {Set<string>|false} [options.checkClashes=false]\n   *        An optional string set to check if an identifier name is included.\n   *        `checkLVal` will add checked identifier name to `checkClashes` It is\n   *        used in tracking duplicates in function parameter lists. If it is\n   *        false, `checkLVal` will skip duplicate checks\n   * @param {boolean} [options.allowingSloppyLetBinding]\n   *        Whether an identifier named \"let\" should be allowed in sloppy mode.\n   *        Defaults to `true` unless lexical scope its being used. This property\n   *        is only relevant if the parser's state is in sloppy mode.\n   * @param {boolean} [options.strictModeChanged=false]\n   *        Whether an identifier has been parsed in a sloppy context but should\n   *        be reinterpreted as strict-mode. e.g. `(arguments) => { \"use strict \"}`\n   * @param {boolean} [options.hasParenthesizedAncestor=false]\n   *        This is only used internally during recursive calls, and you should\n   *        not have to set it yourself.\n   * @memberof LValParser\n   */\n\n  checkLVal(\n    expression: Expression | ObjectMember | RestElement,\n    {\n      in: ancestor,\n      binding = BIND_NONE,\n      checkClashes = false,\n      strictModeChanged = false,\n      allowingSloppyLetBinding = !(binding & BIND_SCOPE_LEXICAL),\n      hasParenthesizedAncestor = false,\n    }: {\n      in: LValAncestor,\n      binding?: BindingTypes,\n      checkClashes?: Set<string> | false,\n      strictModeChanged?: boolean,\n      allowingSloppyLetBinding?: boolean,\n      hasParenthesizedAncestor?: boolean,\n    },\n  ): void {\n    const type = expression.type;\n\n    // If we find here an ObjectMethod, it's because this was originally\n    // an ObjectExpression which has then been converted.\n    // toAssignable already reported this error with a nicer message.\n    if (this.isObjectMethod(expression)) return;\n\n    if (type === \"MemberExpression\") {\n      if (binding !== BIND_NONE) {\n        this.raise(Errors.InvalidPropertyBindingPattern, { at: expression });\n      }\n      return;\n    }\n\n    if (expression.type === \"Identifier\") {\n      this.checkIdentifier(\n        expression,\n        binding,\n        strictModeChanged,\n        allowingSloppyLetBinding,\n      );\n\n      const { name } = expression;\n\n      if (checkClashes) {\n        if (checkClashes.has(name)) {\n          this.raise(Errors.ParamDupe, { at: expression });\n        } else {\n          checkClashes.add(name);\n        }\n      }\n\n      return;\n    }\n\n    const validity = this.isValidLVal(\n      expression.type,\n      !(hasParenthesizedAncestor || expression.extra?.parenthesized) &&\n        ancestor.type === \"AssignmentExpression\",\n      binding,\n    );\n\n    if (validity === true) return;\n\n    if (validity === false) {\n      const ParseErrorClass =\n        binding === BIND_NONE ? Errors.InvalidLhs : Errors.InvalidLhsBinding;\n\n      this.raise(ParseErrorClass, {\n        at: expression,\n        ancestor:\n          ancestor.type === \"UpdateExpression\"\n            ? { type: \"UpdateExpression\", prefix: ancestor.prefix }\n            : { type: ancestor.type },\n      });\n      return;\n    }\n\n    const [key, isParenthesizedExpression] = Array.isArray(validity)\n      ? validity\n      : [validity, type === \"ParenthesizedExpression\"];\n    const nextAncestor =\n      expression.type === \"ArrayPattern\" ||\n      expression.type === \"ObjectPattern\" ||\n      expression.type === \"ParenthesizedExpression\"\n        ? expression\n        : ancestor;\n\n    // Flow has difficulty tracking `key` and `expression`, but only if we use\n    // null-proto objects. If we use normal objects, everything works fine.\n    // $FlowIgnore\n    for (const child of [].concat(expression[key])) {\n      if (child) {\n        this.checkLVal(child, {\n          in: nextAncestor,\n          binding,\n          checkClashes,\n          allowingSloppyLetBinding,\n          strictModeChanged,\n          hasParenthesizedAncestor: isParenthesizedExpression,\n        });\n      }\n    }\n  }\n\n  checkIdentifier(\n    at: Identifier,\n    bindingType: BindingTypes,\n    strictModeChanged: boolean = false,\n    allowLetBinding: boolean = !(bindingType & BIND_SCOPE_LEXICAL),\n  ) {\n    if (\n      this.state.strict &&\n      (strictModeChanged\n        ? isStrictBindReservedWord(at.name, this.inModule)\n        : isStrictBindOnlyReservedWord(at.name))\n    ) {\n      if (bindingType === BIND_NONE) {\n        this.raise(Errors.StrictEvalArguments, { at, referenceName: at.name });\n      } else {\n        this.raise(Errors.StrictEvalArgumentsBinding, {\n          at,\n          bindingName: at.name,\n        });\n      }\n    }\n\n    if (!allowLetBinding && at.name === \"let\") {\n      this.raise(Errors.LetInLexicalBinding, { at });\n    }\n\n    if (!(bindingType & BIND_NONE)) {\n      this.declareNameFromIdentifier(at, bindingType);\n    }\n  }\n\n  declareNameFromIdentifier(identifier: Identifier, binding: BindingTypes) {\n    this.scope.declareName(identifier.name, binding, identifier.loc.start);\n  }\n\n  checkToRestConversion(node: Node, allowPattern: boolean): void {\n    switch (node.type) {\n      case \"ParenthesizedExpression\":\n        this.checkToRestConversion(node.expression, allowPattern);\n        break;\n      case \"Identifier\":\n      case \"MemberExpression\":\n        break;\n      case \"ArrayExpression\":\n      case \"ObjectExpression\":\n        if (allowPattern) break;\n      /* falls through */\n      default:\n        this.raise(Errors.InvalidRestAssignmentPattern, { at: node });\n    }\n  }\n\n  checkCommaAfterRest(close: $Values<typeof charCodes>): boolean {\n    if (!this.match(tt.comma)) {\n      return false;\n    }\n\n    this.raise(\n      this.lookaheadCharCode() === close\n        ? Errors.RestTrailingComma\n        : Errors.ElementAfterRest,\n      { at: this.state.startLoc },\n    );\n\n    return true;\n  }\n}\n","// @flow\n\nimport * as N from \"../types\";\nimport {\n  tokenIsIdentifier,\n  tokenIsLoop,\n  tokenIsTemplate,\n  tt,\n  type TokenType,\n  getExportedToken,\n} from \"../tokenizer/types\";\nimport ExpressionParser from \"./expression\";\nimport { Errors } from \"../parse-error\";\nimport { isIdentifierChar, isIdentifierStart } from \"../util/identifier\";\nimport { lineBreak } from \"../util/whitespace\";\nimport * as charCodes from \"charcodes\";\nimport {\n  BIND_CLASS,\n  BIND_LEXICAL,\n  BIND_VAR,\n  BIND_FUNCTION,\n  SCOPE_CLASS,\n  SCOPE_FUNCTION,\n  SCOPE_OTHER,\n  SCOPE_SIMPLE_CATCH,\n  SCOPE_STATIC_BLOCK,\n  SCOPE_SUPER,\n  CLASS_ELEMENT_OTHER,\n  CLASS_ELEMENT_INSTANCE_GETTER,\n  CLASS_ELEMENT_INSTANCE_SETTER,\n  CLASS_ELEMENT_STATIC_GETTER,\n  CLASS_ELEMENT_STATIC_SETTER,\n  type BindingTypes,\n} from \"../util/scopeflags\";\nimport { ExpressionErrors } from \"./util\";\nimport { PARAM, functionFlags } from \"../util/production-parameter\";\nimport {\n  newExpressionScope,\n  newParameterDeclarationScope,\n} from \"../util/expression-scope\";\nimport type { SourceType } from \"../options\";\nimport { Token } from \"../tokenizer\";\nimport { Position, createPositionWithColumnOffset } from \"../util/location\";\nimport { cloneStringLiteral, cloneIdentifier } from \"./node\";\n\nconst loopLabel = { kind: \"loop\" },\n  switchLabel = { kind: \"switch\" };\n\nconst FUNC_NO_FLAGS = 0b000,\n  FUNC_STATEMENT = 0b001,\n  FUNC_HANGING_STATEMENT = 0b010,\n  FUNC_NULLABLE_ID = 0b100;\n\nconst loneSurrogate = /[\\uD800-\\uDFFF]/u;\n\nconst keywordRelationalOperator = /in(?:stanceof)?/y;\n\n/**\n * Convert tokens for backward Babel 7 compat.\n * tt.privateName => tt.hash + tt.name\n * tt.templateTail => tt.backquote/tt.braceR + tt.template + tt.backquote\n * tt.templateNonTail => tt.backquote/tt.braceR + tt.template + tt.dollarBraceL\n * For performance reasons this routine mutates `tokens`, it is okay\n * here since we execute `parseTopLevel` once for every file.\n * @param {*} tokens\n * @returns\n */\nfunction babel7CompatTokens(tokens, input) {\n  for (let i = 0; i < tokens.length; i++) {\n    const token = tokens[i];\n    const { type } = token;\n    if (typeof type === \"number\") {\n      if (!process.env.BABEL_8_BREAKING) {\n        if (type === tt.privateName) {\n          const { loc, start, value, end } = token;\n          const hashEndPos = start + 1;\n          const hashEndLoc = createPositionWithColumnOffset(loc.start, 1);\n          tokens.splice(\n            i,\n            1,\n            // $FlowIgnore: hacky way to create token\n            new Token({\n              type: getExportedToken(tt.hash),\n              value: \"#\",\n              start: start,\n              end: hashEndPos,\n              startLoc: loc.start,\n              endLoc: hashEndLoc,\n            }),\n            // $FlowIgnore: hacky way to create token\n            new Token({\n              type: getExportedToken(tt.name),\n              value: value,\n              start: hashEndPos,\n              end: end,\n              startLoc: hashEndLoc,\n              endLoc: loc.end,\n            }),\n          );\n          i++;\n          continue;\n        }\n\n        if (tokenIsTemplate(type)) {\n          const { loc, start, value, end } = token;\n          const backquoteEnd = start + 1;\n          const backquoteEndLoc = createPositionWithColumnOffset(loc.start, 1);\n          let startToken;\n          if (input.charCodeAt(start) === charCodes.graveAccent) {\n            // $FlowIgnore: hacky way to create token\n            startToken = new Token({\n              type: getExportedToken(tt.backQuote),\n              value: \"`\",\n              start: start,\n              end: backquoteEnd,\n              startLoc: loc.start,\n              endLoc: backquoteEndLoc,\n            });\n          } else {\n            // $FlowIgnore: hacky way to create token\n            startToken = new Token({\n              type: getExportedToken(tt.braceR),\n              value: \"}\",\n              start: start,\n              end: backquoteEnd,\n              startLoc: loc.start,\n              endLoc: backquoteEndLoc,\n            });\n          }\n          let templateValue,\n            templateElementEnd,\n            templateElementEndLoc,\n            endToken;\n          if (type === tt.templateTail) {\n            // ends with '`'\n            templateElementEnd = end - 1;\n            templateElementEndLoc = createPositionWithColumnOffset(loc.end, -1);\n            templateValue = value === null ? null : value.slice(1, -1);\n            // $FlowIgnore: hacky way to create token\n            endToken = new Token({\n              type: getExportedToken(tt.backQuote),\n              value: \"`\",\n              start: templateElementEnd,\n              end: end,\n              startLoc: templateElementEndLoc,\n              endLoc: loc.end,\n            });\n          } else {\n            // ends with `${`\n            templateElementEnd = end - 2;\n            templateElementEndLoc = createPositionWithColumnOffset(loc.end, -2);\n            templateValue = value === null ? null : value.slice(1, -2);\n            // $FlowIgnore: hacky way to create token\n            endToken = new Token({\n              type: getExportedToken(tt.dollarBraceL),\n              value: \"${\",\n              start: templateElementEnd,\n              end: end,\n              startLoc: templateElementEndLoc,\n              endLoc: loc.end,\n            });\n          }\n          tokens.splice(\n            i,\n            1,\n            startToken,\n            // $FlowIgnore: hacky way to create token\n            new Token({\n              type: getExportedToken(tt.template),\n              value: templateValue,\n              start: backquoteEnd,\n              end: templateElementEnd,\n              startLoc: backquoteEndLoc,\n              endLoc: templateElementEndLoc,\n            }),\n            endToken,\n          );\n          i += 2;\n          continue;\n        }\n      }\n      // $FlowIgnore: we manipulate `token` for performance reasons\n      token.type = getExportedToken(type);\n    }\n  }\n  return tokens;\n}\nexport default class StatementParser extends ExpressionParser {\n  // ### Statement parsing\n\n  // Parse a program. Initializes the parser, reads any number of\n  // statements, and wraps them in a Program node.  Optionally takes a\n  // `program` argument.  If present, the statements will be appended\n  // to its body instead of creating a new node.\n\n  parseTopLevel(file: N.File, program: N.Program): N.File {\n    file.program = this.parseProgram(program);\n    file.comments = this.state.comments;\n\n    if (this.options.tokens) {\n      file.tokens = babel7CompatTokens(this.tokens, this.input);\n    }\n\n    return this.finishNode(file, \"File\");\n  }\n\n  parseProgram(\n    program: N.Program,\n    end: TokenType = tt.eof,\n    sourceType: SourceType = this.options.sourceType,\n  ): N.Program {\n    program.sourceType = sourceType;\n    program.interpreter = this.parseInterpreterDirective();\n    this.parseBlockBody(program, true, true, end);\n    if (\n      this.inModule &&\n      !this.options.allowUndeclaredExports &&\n      this.scope.undefinedExports.size > 0\n    ) {\n      for (const [localName, at] of Array.from(this.scope.undefinedExports)) {\n        this.raise(Errors.ModuleExportUndefined, { at, localName });\n      }\n    }\n    return this.finishNode<N.Program>(program, \"Program\");\n  }\n\n  // TODO\n\n  /**\n   * cast a Statement to a Directive. This method mutates input statement.\n   *\n   * @param {N.Statement} stmt\n   * @returns {N.Directive}\n   * @memberof StatementParser\n   */\n  stmtToDirective(stmt: N.Statement): N.Directive {\n    const directive = (stmt: any);\n    directive.type = \"Directive\";\n    directive.value = directive.expression;\n    delete directive.expression;\n\n    const directiveLiteral = directive.value;\n    const expressionValue = directiveLiteral.value;\n    const raw = this.input.slice(directiveLiteral.start, directiveLiteral.end);\n    const val = (directiveLiteral.value = raw.slice(1, -1)); // remove quotes\n\n    this.addExtra(directiveLiteral, \"raw\", raw);\n    this.addExtra(directiveLiteral, \"rawValue\", val);\n    this.addExtra(directiveLiteral, \"expressionValue\", expressionValue);\n\n    directiveLiteral.type = \"DirectiveLiteral\";\n\n    return directive;\n  }\n\n  parseInterpreterDirective(): N.InterpreterDirective | null {\n    if (!this.match(tt.interpreterDirective)) {\n      return null;\n    }\n\n    const node = this.startNode();\n    node.value = this.state.value;\n    this.next();\n    return this.finishNode(node, \"InterpreterDirective\");\n  }\n\n  isLet(context: ?string): boolean {\n    if (!this.isContextual(tt._let)) {\n      return false;\n    }\n    return this.isLetKeyword(context);\n  }\n\n  /**\n   * Assuming we have seen a contextual `let`, check if it starts a variable declaration\n   so that `left` should be interpreted as a `let` keyword.\n   *\n   * @param {?string} context When `context` is non nullish, it will return early and _skip_ checking\n                              if the next token after `let` is `{` or a keyword relational operator\n   * @returns {boolean}\n   * @memberof StatementParser\n   */\n  isLetKeyword(context: ?string): boolean {\n    const next = this.nextTokenStart();\n    const nextCh = this.codePointAtPos(next);\n    // For ambiguous cases, determine if a LexicalDeclaration (or only a\n    // Statement) is allowed here. If context is not empty then only a Statement\n    // is allowed. However, `let [` is an explicit negative lookahead for\n    // ExpressionStatement, so special-case it first.\n    // Also, `let \\` is never valid as an expression so this must be a keyword.\n    if (\n      nextCh === charCodes.backslash ||\n      nextCh === charCodes.leftSquareBracket\n    ) {\n      return true;\n    }\n    if (context) return false;\n\n    if (nextCh === charCodes.leftCurlyBrace) return true;\n\n    if (isIdentifierStart(nextCh)) {\n      keywordRelationalOperator.lastIndex = next;\n      if (keywordRelationalOperator.test(this.input)) {\n        // We have seen `in` or `instanceof` so far, now check if the identfier\n        // ends here\n        const endCh = this.codePointAtPos(keywordRelationalOperator.lastIndex);\n        if (!isIdentifierChar(endCh) && endCh !== charCodes.backslash) {\n          return false;\n        }\n      }\n      return true;\n    }\n    return false;\n  }\n\n  // Parse a single statement.\n  //\n  // If expecting a statement and finding a slash operator, parse a\n  // regular expression literal. This is to handle cases like\n  // `if (foo) /blah/.exec(foo)`, where looking at the previous token\n  // does not help.\n  // https://tc39.es/ecma262/#prod-Statement\n  // ImportDeclaration and ExportDeclaration are also handled here so we can throw recoverable errors\n  // when they are not at the top level\n  parseStatement(context: ?string, topLevel?: boolean): N.Statement {\n    if (this.match(tt.at)) {\n      this.parseDecorators(true);\n    }\n    return this.parseStatementContent(context, topLevel);\n  }\n\n  parseStatementContent(context: ?string, topLevel: ?boolean): N.Statement {\n    let starttype = this.state.type;\n    const node = this.startNode();\n    let kind;\n\n    if (this.isLet(context)) {\n      starttype = tt._var;\n      kind = \"let\";\n    }\n\n    // Most types of statements are recognized by the keyword they\n    // start with. Many are trivial to parse, some require a bit of\n    // complexity.\n\n    switch (starttype) {\n      case tt._break:\n        return this.parseBreakContinueStatement(node, /* isBreak */ true);\n      case tt._continue:\n        return this.parseBreakContinueStatement(node, /* isBreak */ false);\n      case tt._debugger:\n        return this.parseDebuggerStatement(node);\n      case tt._do:\n        return this.parseDoStatement(node);\n      case tt._for:\n        return this.parseForStatement(node);\n      case tt._function:\n        if (this.lookaheadCharCode() === charCodes.dot) break;\n        if (context) {\n          if (this.state.strict) {\n            this.raise(Errors.StrictFunction, { at: this.state.startLoc });\n          } else if (context !== \"if\" && context !== \"label\") {\n            this.raise(Errors.SloppyFunction, { at: this.state.startLoc });\n          }\n        }\n        return this.parseFunctionStatement(node, false, !context);\n\n      case tt._class:\n        if (context) this.unexpected();\n        return this.parseClass(node, true);\n\n      case tt._if:\n        return this.parseIfStatement(node);\n      case tt._return:\n        return this.parseReturnStatement(node);\n      case tt._switch:\n        return this.parseSwitchStatement(node);\n      case tt._throw:\n        return this.parseThrowStatement(node);\n      case tt._try:\n        return this.parseTryStatement(node);\n\n      case tt._const:\n      case tt._var:\n        kind = kind || this.state.value;\n        if (context && kind !== \"var\") {\n          this.raise(Errors.UnexpectedLexicalDeclaration, {\n            at: this.state.startLoc,\n          });\n        }\n        return this.parseVarStatement(node, kind);\n\n      case tt._while:\n        return this.parseWhileStatement(node);\n      case tt._with:\n        return this.parseWithStatement(node);\n      case tt.braceL:\n        return this.parseBlock();\n      case tt.semi:\n        return this.parseEmptyStatement(node);\n      case tt._import: {\n        const nextTokenCharCode = this.lookaheadCharCode();\n        if (\n          nextTokenCharCode === charCodes.leftParenthesis || // import()\n          nextTokenCharCode === charCodes.dot // import.meta\n        ) {\n          break;\n        }\n      }\n      // fall through\n      case tt._export: {\n        if (!this.options.allowImportExportEverywhere && !topLevel) {\n          this.raise(Errors.UnexpectedImportExport, {\n            at: this.state.startLoc,\n          });\n        }\n\n        this.next(); // eat `import`/`export`\n\n        let result;\n        if (starttype === tt._import) {\n          result = this.parseImport(node);\n\n          if (\n            result.type === \"ImportDeclaration\" &&\n            (!result.importKind || result.importKind === \"value\")\n          ) {\n            this.sawUnambiguousESM = true;\n          }\n        } else {\n          result = this.parseExport(node);\n\n          if (\n            (result.type === \"ExportNamedDeclaration\" &&\n              (!result.exportKind || result.exportKind === \"value\")) ||\n            (result.type === \"ExportAllDeclaration\" &&\n              (!result.exportKind || result.exportKind === \"value\")) ||\n            result.type === \"ExportDefaultDeclaration\"\n          ) {\n            this.sawUnambiguousESM = true;\n          }\n        }\n\n        this.assertModuleNodeAllowed(node);\n\n        return result;\n      }\n\n      default: {\n        if (this.isAsyncFunction()) {\n          if (context) {\n            this.raise(Errors.AsyncFunctionInSingleStatementContext, {\n              at: this.state.startLoc,\n            });\n          }\n          this.next();\n          return this.parseFunctionStatement(node, true, !context);\n        }\n      }\n    }\n\n    // If the statement does not start with a statement keyword or a\n    // brace, it's an ExpressionStatement or LabeledStatement. We\n    // simply start parsing an expression, and afterwards, if the\n    // next token is a colon and the expression was a simple\n    // Identifier node, we switch to interpreting it as a label.\n    const maybeName = this.state.value;\n    const expr = this.parseExpression();\n\n    if (\n      tokenIsIdentifier(starttype) &&\n      expr.type === \"Identifier\" &&\n      this.eat(tt.colon)\n    ) {\n      return this.parseLabeledStatement(node, maybeName, expr, context);\n    } else {\n      return this.parseExpressionStatement(node, expr);\n    }\n  }\n\n  assertModuleNodeAllowed(node: N.Node): void {\n    if (!this.options.allowImportExportEverywhere && !this.inModule) {\n      this.raise(Errors.ImportOutsideModule, { at: node });\n    }\n  }\n\n  takeDecorators(node: N.HasDecorators): void {\n    const decorators =\n      this.state.decoratorStack[this.state.decoratorStack.length - 1];\n    if (decorators.length) {\n      node.decorators = decorators;\n      this.resetStartLocationFromNode(node, decorators[0]);\n      this.state.decoratorStack[this.state.decoratorStack.length - 1] = [];\n    }\n  }\n\n  canHaveLeadingDecorator(): boolean {\n    return this.match(tt._class);\n  }\n\n  parseDecorators(allowExport?: boolean): void {\n    const currentContextDecorators =\n      this.state.decoratorStack[this.state.decoratorStack.length - 1];\n    while (this.match(tt.at)) {\n      const decorator = this.parseDecorator();\n      currentContextDecorators.push(decorator);\n    }\n\n    if (this.match(tt._export)) {\n      if (!allowExport) {\n        this.unexpected();\n      }\n\n      if (\n        this.hasPlugin(\"decorators\") &&\n        !this.getPluginOption(\"decorators\", \"decoratorsBeforeExport\")\n      ) {\n        this.raise(Errors.DecoratorExportClass, { at: this.state.startLoc });\n      }\n    } else if (!this.canHaveLeadingDecorator()) {\n      throw this.raise(Errors.UnexpectedLeadingDecorator, {\n        at: this.state.startLoc,\n      });\n    }\n  }\n\n  parseDecorator(): N.Decorator {\n    this.expectOnePlugin([\"decorators\", \"decorators-legacy\"]);\n\n    const node = this.startNode();\n    this.next();\n\n    if (this.hasPlugin(\"decorators\")) {\n      // Every time a decorator class expression is evaluated, a new empty array is pushed onto the stack\n      // So that the decorators of any nested class expressions will be dealt with separately\n      this.state.decoratorStack.push([]);\n\n      const startPos = this.state.start;\n      const startLoc = this.state.startLoc;\n      let expr: N.Expression;\n\n      if (this.match(tt.parenL)) {\n        const startPos = this.state.start;\n        const startLoc = this.state.startLoc;\n        this.next(); // eat '('\n        expr = this.parseExpression();\n        this.expect(tt.parenR);\n        expr = this.wrapParenthesis(startPos, startLoc, expr);\n      } else {\n        expr = this.parseIdentifier(false);\n\n        while (this.eat(tt.dot)) {\n          const node = this.startNodeAt(startPos, startLoc);\n          node.object = expr;\n          node.property = this.parseIdentifier(true);\n          node.computed = false;\n          expr = this.finishNode(node, \"MemberExpression\");\n        }\n      }\n\n      node.expression = this.parseMaybeDecoratorArguments(expr);\n      this.state.decoratorStack.pop();\n    } else {\n      node.expression = this.parseExprSubscripts();\n    }\n    return this.finishNode(node, \"Decorator\");\n  }\n\n  parseMaybeDecoratorArguments(expr: N.Expression): N.Expression {\n    if (this.eat(tt.parenL)) {\n      const node = this.startNodeAtNode(expr);\n      node.callee = expr;\n      node.arguments = this.parseCallExpressionArguments(tt.parenR, false);\n      this.toReferencedList(node.arguments);\n      return this.finishNode(node, \"CallExpression\");\n    }\n\n    return expr;\n  }\n\n  parseBreakContinueStatement(\n    node: N.BreakStatement | N.ContinueStatement,\n    isBreak: boolean,\n  ): N.BreakStatement | N.ContinueStatement {\n    this.next();\n\n    if (this.isLineTerminator()) {\n      node.label = null;\n    } else {\n      node.label = this.parseIdentifier();\n      this.semicolon();\n    }\n\n    this.verifyBreakContinue(node, isBreak);\n\n    return this.finishNode(\n      node,\n      isBreak ? \"BreakStatement\" : \"ContinueStatement\",\n    );\n  }\n\n  verifyBreakContinue(\n    node: N.BreakStatement | N.ContinueStatement,\n    isBreak: boolean,\n  ) {\n    let i;\n    for (i = 0; i < this.state.labels.length; ++i) {\n      const lab = this.state.labels[i];\n      if (node.label == null || lab.name === node.label.name) {\n        if (lab.kind != null && (isBreak || lab.kind === \"loop\")) break;\n        if (node.label && isBreak) break;\n      }\n    }\n    if (i === this.state.labels.length) {\n      const type = isBreak ? \"BreakStatement\" : \"ContinueStatement\";\n      this.raise(Errors.IllegalBreakContinue, { at: node, type });\n    }\n  }\n\n  parseDebuggerStatement(node: N.DebuggerStatement): N.DebuggerStatement {\n    this.next();\n    this.semicolon();\n    return this.finishNode(node, \"DebuggerStatement\");\n  }\n\n  parseHeaderExpression(): N.Expression {\n    this.expect(tt.parenL);\n    const val = this.parseExpression();\n    this.expect(tt.parenR);\n    return val;\n  }\n\n  parseDoStatement(node: N.DoWhileStatement): N.DoWhileStatement {\n    this.next();\n    this.state.labels.push(loopLabel);\n\n    // Parse the loop body's body.\n    node.body =\n      // For the smartPipelines plugin: Disable topic references from outer\n      // contexts within the loop body. They are permitted in test expressions,\n      // outside of the loop body.\n      this.withSmartMixTopicForbiddingContext(() =>\n        // Parse the loop body's body.\n        this.parseStatement(\"do\"),\n      );\n\n    this.state.labels.pop();\n\n    this.expect(tt._while);\n    node.test = this.parseHeaderExpression();\n    this.eat(tt.semi);\n    return this.finishNode(node, \"DoWhileStatement\");\n  }\n\n  // Disambiguating between a `for` and a `for`/`in` or `for`/`of`\n  // loop is non-trivial. Basically, we have to parse the init `var`\n  // statement or expression, disallowing the `in` operator (see\n  // the second parameter to `parseExpression`), and then check\n  // whether the next token is `in` or `of`. When there is no init\n  // part (semicolon immediately after the opening parenthesis), it\n  // is a regular `for` loop.\n\n  parseForStatement(node: N.Node): N.ForLike {\n    this.next();\n    this.state.labels.push(loopLabel);\n\n    let awaitAt = null;\n\n    if (this.isAwaitAllowed() && this.eatContextual(tt._await)) {\n      awaitAt = this.state.lastTokStartLoc;\n    }\n    this.scope.enter(SCOPE_OTHER);\n    this.expect(tt.parenL);\n\n    if (this.match(tt.semi)) {\n      if (awaitAt !== null) {\n        this.unexpected(awaitAt);\n      }\n      return this.parseFor(node, null);\n    }\n\n    const startsWithLet = this.isContextual(tt._let);\n    const isLet = startsWithLet && this.isLetKeyword();\n    if (this.match(tt._var) || this.match(tt._const) || isLet) {\n      const init = this.startNode();\n      const kind = isLet ? \"let\" : this.state.value;\n      this.next();\n      this.parseVar(init, true, kind);\n      this.finishNode(init, \"VariableDeclaration\");\n\n      if (\n        (this.match(tt._in) || this.isContextual(tt._of)) &&\n        init.declarations.length === 1\n      ) {\n        return this.parseForIn(node, init, awaitAt);\n      }\n      if (awaitAt !== null) {\n        this.unexpected(awaitAt);\n      }\n      return this.parseFor(node, init);\n    }\n\n    // Check whether the first token is possibly a contextual keyword, so that\n    // we can forbid `for (async of` if this turns out to be a for-of loop.\n    const startsWithAsync = this.isContextual(tt._async);\n\n    const refExpressionErrors = new ExpressionErrors();\n    const init = this.parseExpression(true, refExpressionErrors);\n    const isForOf = this.isContextual(tt._of);\n    if (isForOf) {\n      // Check for leading tokens that are forbidden in for-of loops:\n      if (startsWithLet) {\n        this.raise(Errors.ForOfLet, { at: init });\n      }\n\n      if (\n        // `for await (async of []);` is allowed.\n        awaitAt === null &&\n        startsWithAsync &&\n        init.type === \"Identifier\"\n      ) {\n        // This catches the case where the `async` in `for (async of` was\n        // parsed as an identifier. If it was parsed as the start of an async\n        // arrow function (e.g. `for (async of => {} of []);`), the LVal check\n        // further down will raise a more appropriate error.\n        this.raise(Errors.ForOfAsync, { at: init });\n      }\n    }\n    if (isForOf || this.match(tt._in)) {\n      this.checkDestructuringPrivate(refExpressionErrors);\n      this.toAssignable(init, /* isLHS */ true);\n      const type = isForOf ? \"ForOfStatement\" : \"ForInStatement\";\n      this.checkLVal(init, { in: { type } });\n      return this.parseForIn(node, init, awaitAt);\n    } else {\n      this.checkExpressionErrors(refExpressionErrors, true);\n    }\n    if (awaitAt !== null) {\n      this.unexpected(awaitAt);\n    }\n    return this.parseFor(node, init);\n  }\n\n  parseFunctionStatement(\n    node: N.FunctionDeclaration,\n    isAsync?: boolean,\n    declarationPosition?: boolean,\n  ): N.FunctionDeclaration {\n    this.next();\n    return this.parseFunction(\n      node,\n      FUNC_STATEMENT | (declarationPosition ? 0 : FUNC_HANGING_STATEMENT),\n      isAsync,\n    );\n  }\n\n  parseIfStatement(node: N.IfStatement): N.IfStatement {\n    this.next();\n    node.test = this.parseHeaderExpression();\n    node.consequent = this.parseStatement(\"if\");\n    node.alternate = this.eat(tt._else) ? this.parseStatement(\"if\") : null;\n    return this.finishNode(node, \"IfStatement\");\n  }\n\n  parseReturnStatement(node: N.ReturnStatement): N.ReturnStatement {\n    if (!this.prodParam.hasReturn && !this.options.allowReturnOutsideFunction) {\n      this.raise(Errors.IllegalReturn, { at: this.state.startLoc });\n    }\n\n    this.next();\n\n    // In `return` (and `break`/`continue`), the keywords with\n    // optional arguments, we eagerly look for a semicolon or the\n    // possibility to insert one.\n\n    if (this.isLineTerminator()) {\n      node.argument = null;\n    } else {\n      node.argument = this.parseExpression();\n      this.semicolon();\n    }\n\n    return this.finishNode(node, \"ReturnStatement\");\n  }\n\n  parseSwitchStatement(node: N.SwitchStatement): N.SwitchStatement {\n    this.next();\n    node.discriminant = this.parseHeaderExpression();\n    const cases = (node.cases = []);\n    this.expect(tt.braceL);\n    this.state.labels.push(switchLabel);\n    this.scope.enter(SCOPE_OTHER);\n\n    // Statements under must be grouped (by label) in SwitchCase\n    // nodes. `cur` is used to keep the node that we are currently\n    // adding statements to.\n\n    let cur;\n    for (let sawDefault; !this.match(tt.braceR); ) {\n      if (this.match(tt._case) || this.match(tt._default)) {\n        const isCase = this.match(tt._case);\n        if (cur) this.finishNode(cur, \"SwitchCase\");\n        cases.push((cur = this.startNode()));\n        cur.consequent = [];\n        this.next();\n        if (isCase) {\n          cur.test = this.parseExpression();\n        } else {\n          if (sawDefault) {\n            this.raise(Errors.MultipleDefaultsInSwitch, {\n              at: this.state.lastTokStartLoc,\n            });\n          }\n          sawDefault = true;\n          cur.test = null;\n        }\n        this.expect(tt.colon);\n      } else {\n        if (cur) {\n          cur.consequent.push(this.parseStatement(null));\n        } else {\n          this.unexpected();\n        }\n      }\n    }\n    this.scope.exit();\n    if (cur) this.finishNode(cur, \"SwitchCase\");\n    this.next(); // Closing brace\n    this.state.labels.pop();\n    return this.finishNode(node, \"SwitchStatement\");\n  }\n\n  parseThrowStatement(node: N.ThrowStatement): N.ThrowStatement {\n    this.next();\n    if (this.hasPrecedingLineBreak()) {\n      this.raise(Errors.NewlineAfterThrow, { at: this.state.lastTokEndLoc });\n    }\n    node.argument = this.parseExpression();\n    this.semicolon();\n    return this.finishNode(node, \"ThrowStatement\");\n  }\n\n  parseCatchClauseParam(): N.Pattern {\n    const param = this.parseBindingAtom();\n\n    const simple = param.type === \"Identifier\";\n    this.scope.enter(simple ? SCOPE_SIMPLE_CATCH : 0);\n    this.checkLVal(param, {\n      in: { type: \"CatchClause\" },\n      binding: BIND_LEXICAL,\n      allowingSloppyLetBinding: true,\n    });\n\n    return param;\n  }\n\n  parseTryStatement(node: N.TryStatement): N.TryStatement {\n    this.next();\n\n    node.block = this.parseBlock();\n    node.handler = null;\n\n    if (this.match(tt._catch)) {\n      const clause = this.startNode();\n      this.next();\n      if (this.match(tt.parenL)) {\n        this.expect(tt.parenL);\n        clause.param = this.parseCatchClauseParam();\n        this.expect(tt.parenR);\n      } else {\n        clause.param = null;\n        this.scope.enter(SCOPE_OTHER);\n      }\n\n      // Parse the catch clause's body.\n      clause.body =\n        // For the smartPipelines plugin: Disable topic references from outer\n        // contexts within the catch clause's body.\n        this.withSmartMixTopicForbiddingContext(() =>\n          // Parse the catch clause's body.\n          this.parseBlock(false, false),\n        );\n\n      this.scope.exit();\n      node.handler = this.finishNode(clause, \"CatchClause\");\n    }\n\n    node.finalizer = this.eat(tt._finally) ? this.parseBlock() : null;\n\n    if (!node.handler && !node.finalizer) {\n      this.raise(Errors.NoCatchOrFinally, { at: node });\n    }\n\n    return this.finishNode(node, \"TryStatement\");\n  }\n\n  parseVarStatement(\n    node: N.VariableDeclaration,\n    kind: \"var\" | \"let\" | \"const\",\n    allowMissingInitializer: boolean = false,\n  ): N.VariableDeclaration {\n    this.next();\n    this.parseVar(node, false, kind, allowMissingInitializer);\n    this.semicolon();\n    return this.finishNode(node, \"VariableDeclaration\");\n  }\n\n  parseWhileStatement(node: N.WhileStatement): N.WhileStatement {\n    this.next();\n    node.test = this.parseHeaderExpression();\n    this.state.labels.push(loopLabel);\n\n    // Parse the loop body.\n    node.body =\n      // For the smartPipelines plugin:\n      // Disable topic references from outer contexts within the loop body.\n      // They are permitted in test expressions, outside of the loop body.\n      this.withSmartMixTopicForbiddingContext(() =>\n        // Parse loop body.\n        this.parseStatement(\"while\"),\n      );\n\n    this.state.labels.pop();\n\n    return this.finishNode(node, \"WhileStatement\");\n  }\n\n  parseWithStatement(node: N.WithStatement): N.WithStatement {\n    if (this.state.strict) {\n      this.raise(Errors.StrictWith, { at: this.state.startLoc });\n    }\n    this.next();\n    node.object = this.parseHeaderExpression();\n\n    // Parse the statement body.\n    node.body =\n      // For the smartPipelines plugin:\n      // Disable topic references from outer contexts within the with statement's body.\n      // They are permitted in function default-parameter expressions, which are\n      // part of the outer context, outside of the with statement's body.\n      this.withSmartMixTopicForbiddingContext(() =>\n        // Parse the statement body.\n        this.parseStatement(\"with\"),\n      );\n\n    return this.finishNode(node, \"WithStatement\");\n  }\n\n  parseEmptyStatement(node: N.EmptyStatement): N.EmptyStatement {\n    this.next();\n    return this.finishNode(node, \"EmptyStatement\");\n  }\n\n  parseLabeledStatement(\n    node: N.LabeledStatement,\n    maybeName: string,\n    expr: N.Identifier,\n    context: ?string,\n  ): N.LabeledStatement {\n    for (const label of this.state.labels) {\n      if (label.name === maybeName) {\n        this.raise(Errors.LabelRedeclaration, {\n          at: expr,\n          labelName: maybeName,\n        });\n      }\n    }\n\n    const kind = tokenIsLoop(this.state.type)\n      ? \"loop\"\n      : this.match(tt._switch)\n      ? \"switch\"\n      : null;\n    for (let i = this.state.labels.length - 1; i >= 0; i--) {\n      const label = this.state.labels[i];\n      if (label.statementStart === node.start) {\n        label.statementStart = this.state.start;\n        label.kind = kind;\n      } else {\n        break;\n      }\n    }\n\n    this.state.labels.push({\n      name: maybeName,\n      kind: kind,\n      statementStart: this.state.start,\n    });\n    node.body = this.parseStatement(\n      context\n        ? context.indexOf(\"label\") === -1\n          ? context + \"label\"\n          : context\n        : \"label\",\n    );\n\n    this.state.labels.pop();\n    node.label = expr;\n    return this.finishNode(node, \"LabeledStatement\");\n  }\n\n  parseExpressionStatement(\n    node: N.ExpressionStatement,\n    expr: N.Expression,\n  ): N.Statement {\n    node.expression = expr;\n    this.semicolon();\n    return this.finishNode(node, \"ExpressionStatement\");\n  }\n\n  // Parse a semicolon-enclosed block of statements, handling `\"use\n  // strict\"` declarations when `allowDirectives` is true (used for\n  // function bodies).\n\n  parseBlock(\n    allowDirectives?: boolean = false,\n    createNewLexicalScope?: boolean = true,\n    afterBlockParse?: (hasStrictModeDirective: boolean) => void,\n  ): N.BlockStatement {\n    const node = this.startNode();\n    if (allowDirectives) {\n      this.state.strictErrors.clear();\n    }\n    this.expect(tt.braceL);\n    if (createNewLexicalScope) {\n      this.scope.enter(SCOPE_OTHER);\n    }\n    this.parseBlockBody(\n      node,\n      allowDirectives,\n      false,\n      tt.braceR,\n      afterBlockParse,\n    );\n    if (createNewLexicalScope) {\n      this.scope.exit();\n    }\n    return this.finishNode(node, \"BlockStatement\");\n  }\n\n  isValidDirective(stmt: N.Statement): boolean {\n    return (\n      stmt.type === \"ExpressionStatement\" &&\n      stmt.expression.type === \"StringLiteral\" &&\n      !stmt.expression.extra.parenthesized\n    );\n  }\n\n  parseBlockBody(\n    node: N.BlockStatementLike,\n    allowDirectives: ?boolean,\n    topLevel: boolean,\n    end: TokenType,\n    afterBlockParse?: (hasStrictModeDirective: boolean) => void,\n  ): void {\n    const body = (node.body = []);\n    const directives = (node.directives = []);\n    this.parseBlockOrModuleBlockBody(\n      body,\n      allowDirectives ? directives : undefined,\n      topLevel,\n      end,\n      afterBlockParse,\n    );\n  }\n\n  // Undefined directives means that directives are not allowed.\n  // https://tc39.es/ecma262/#prod-Block\n  // https://tc39.es/ecma262/#prod-ModuleBody\n  parseBlockOrModuleBlockBody(\n    body: N.Statement[],\n    directives: ?(N.Directive[]),\n    topLevel: boolean,\n    end: TokenType,\n    afterBlockParse?: (hasStrictModeDirective: boolean) => void,\n  ): void {\n    const oldStrict = this.state.strict;\n    let hasStrictModeDirective = false;\n    let parsedNonDirective = false;\n\n    while (!this.match(end)) {\n      const stmt = this.parseStatement(null, topLevel);\n\n      if (directives && !parsedNonDirective) {\n        if (this.isValidDirective(stmt)) {\n          const directive = this.stmtToDirective(stmt);\n          directives.push(directive);\n\n          if (\n            !hasStrictModeDirective &&\n            directive.value.value === \"use strict\"\n          ) {\n            hasStrictModeDirective = true;\n            this.setStrict(true);\n          }\n\n          continue;\n        }\n        parsedNonDirective = true;\n        // clear strict errors since the strict mode will not change within the block\n        this.state.strictErrors.clear();\n      }\n      body.push(stmt);\n    }\n\n    if (afterBlockParse) {\n      afterBlockParse.call(this, hasStrictModeDirective);\n    }\n\n    if (!oldStrict) {\n      this.setStrict(false);\n    }\n\n    this.next();\n  }\n\n  // Parse a regular `for` loop. The disambiguation code in\n  // `parseStatement` will already have parsed the init statement or\n  // expression.\n\n  parseFor(\n    node: N.ForStatement,\n    init: ?(N.VariableDeclaration | N.Expression),\n  ): N.ForStatement {\n    node.init = init;\n    this.semicolon(/* allowAsi */ false);\n    node.test = this.match(tt.semi) ? null : this.parseExpression();\n    this.semicolon(/* allowAsi */ false);\n    node.update = this.match(tt.parenR) ? null : this.parseExpression();\n    this.expect(tt.parenR);\n\n    // Parse the loop body.\n    node.body =\n      // For the smartPipelines plugin: Disable topic references from outer\n      // contexts within the loop body. They are permitted in test expressions,\n      // outside of the loop body.\n      this.withSmartMixTopicForbiddingContext(() =>\n        // Parse the loop body.\n        this.parseStatement(\"for\"),\n      );\n\n    this.scope.exit();\n    this.state.labels.pop();\n\n    return this.finishNode(node, \"ForStatement\");\n  }\n\n  // Parse a `for`/`in` and `for`/`of` loop, which are almost\n  // same from parser's perspective.\n\n  parseForIn(\n    node: N.ForInOf,\n    init: N.VariableDeclaration | N.AssignmentPattern,\n    awaitAt: ?Position,\n  ): N.ForInOf {\n    const isForIn = this.match(tt._in);\n    this.next();\n\n    if (isForIn) {\n      if (awaitAt !== null) this.unexpected(awaitAt);\n    } else {\n      node.await = awaitAt !== null;\n    }\n\n    if (\n      init.type === \"VariableDeclaration\" &&\n      init.declarations[0].init != null &&\n      (!isForIn ||\n        this.state.strict ||\n        init.kind !== \"var\" ||\n        init.declarations[0].id.type !== \"Identifier\")\n    ) {\n      this.raise(Errors.ForInOfLoopInitializer, {\n        at: init,\n        type: isForIn ? \"ForInStatement\" : \"ForOfStatement\",\n      });\n    }\n\n    if (init.type === \"AssignmentPattern\") {\n      this.raise(Errors.InvalidLhs, {\n        at: init,\n        ancestor: { type: \"ForStatement\" },\n      });\n    }\n\n    node.left = init;\n    node.right = isForIn\n      ? this.parseExpression()\n      : this.parseMaybeAssignAllowIn();\n    this.expect(tt.parenR);\n\n    // Parse the loop body.\n    node.body =\n      // For the smartPipelines plugin:\n      // Disable topic references from outer contexts within the loop body.\n      // They are permitted in test expressions, outside of the loop body.\n      this.withSmartMixTopicForbiddingContext(() =>\n        // Parse loop body.\n        this.parseStatement(\"for\"),\n      );\n\n    this.scope.exit();\n    this.state.labels.pop();\n\n    return this.finishNode(node, isForIn ? \"ForInStatement\" : \"ForOfStatement\");\n  }\n\n  // Parse a list of variable declarations.\n\n  parseVar(\n    node: N.VariableDeclaration,\n    isFor: boolean,\n    kind: \"var\" | \"let\" | \"const\",\n    allowMissingInitializer: boolean = false,\n  ): N.VariableDeclaration {\n    const declarations = (node.declarations = []);\n    node.kind = kind;\n    for (;;) {\n      const decl = this.startNode();\n      this.parseVarId(decl, kind);\n      decl.init = !this.eat(tt.eq)\n        ? null\n        : isFor\n        ? this.parseMaybeAssignDisallowIn()\n        : this.parseMaybeAssignAllowIn();\n\n      if (decl.init === null && !allowMissingInitializer) {\n        if (\n          decl.id.type !== \"Identifier\" &&\n          !(isFor && (this.match(tt._in) || this.isContextual(tt._of)))\n        ) {\n          this.raise(Errors.DeclarationMissingInitializer, {\n            at: this.state.lastTokEndLoc,\n            kind: \"destructuring\",\n          });\n        } else if (\n          kind === \"const\" &&\n          !(this.match(tt._in) || this.isContextual(tt._of))\n        ) {\n          this.raise(Errors.DeclarationMissingInitializer, {\n            at: this.state.lastTokEndLoc,\n            kind: \"const\",\n          });\n        }\n      }\n      declarations.push(this.finishNode(decl, \"VariableDeclarator\"));\n      if (!this.eat(tt.comma)) break;\n    }\n    return node;\n  }\n\n  parseVarId(decl: N.VariableDeclarator, kind: \"var\" | \"let\" | \"const\"): void {\n    decl.id = this.parseBindingAtom();\n    this.checkLVal(decl.id, {\n      in: { type: \"VariableDeclarator\" },\n      binding: kind === \"var\" ? BIND_VAR : BIND_LEXICAL,\n    });\n  }\n\n  // Parse a function declaration or literal (depending on the\n  // `isStatement` parameter).\n\n  parseFunction<T: N.NormalFunction>(\n    node: T,\n    statement?: number = FUNC_NO_FLAGS,\n    isAsync?: boolean = false,\n  ): T {\n    const isStatement = statement & FUNC_STATEMENT;\n    const isHangingStatement = statement & FUNC_HANGING_STATEMENT;\n    const requireId = !!isStatement && !(statement & FUNC_NULLABLE_ID);\n\n    this.initFunction(node, isAsync);\n\n    if (this.match(tt.star) && isHangingStatement) {\n      this.raise(Errors.GeneratorInSingleStatementContext, {\n        at: this.state.startLoc,\n      });\n    }\n    node.generator = this.eat(tt.star);\n\n    if (isStatement) {\n      node.id = this.parseFunctionId(requireId);\n    }\n\n    const oldMaybeInArrowParameters = this.state.maybeInArrowParameters;\n    this.state.maybeInArrowParameters = false;\n    this.scope.enter(SCOPE_FUNCTION);\n    this.prodParam.enter(functionFlags(isAsync, node.generator));\n\n    if (!isStatement) {\n      node.id = this.parseFunctionId();\n    }\n\n    this.parseFunctionParams(node, /* allowModifiers */ false);\n\n    // For the smartPipelines plugin: Disable topic references from outer\n    // contexts within the function body. They are permitted in function\n    // default-parameter expressions, outside of the function body.\n    this.withSmartMixTopicForbiddingContext(() => {\n      // Parse the function body.\n      this.parseFunctionBodyAndFinish(\n        node,\n        isStatement ? \"FunctionDeclaration\" : \"FunctionExpression\",\n      );\n    });\n\n    this.prodParam.exit();\n    this.scope.exit();\n\n    if (isStatement && !isHangingStatement) {\n      // We need to register this _after_ parsing the function body\n      // because of TypeScript body-less function declarations,\n      // which shouldn't be added to the scope.\n      this.registerFunctionStatementId(node);\n    }\n\n    this.state.maybeInArrowParameters = oldMaybeInArrowParameters;\n    return node;\n  }\n\n  parseFunctionId(requireId?: boolean): ?N.Identifier {\n    return requireId || tokenIsIdentifier(this.state.type)\n      ? this.parseIdentifier()\n      : null;\n  }\n\n  parseFunctionParams(node: N.Function, allowModifiers?: boolean): void {\n    this.expect(tt.parenL);\n    this.expressionScope.enter(newParameterDeclarationScope());\n    node.params = this.parseBindingList(\n      tt.parenR,\n      charCodes.rightParenthesis,\n      /* allowEmpty */ false,\n      allowModifiers,\n    );\n\n    this.expressionScope.exit();\n  }\n\n  registerFunctionStatementId(node: N.Function): void {\n    if (!node.id) return;\n\n    // If it is a regular function declaration in sloppy mode, then it is\n    // subject to Annex B semantics (BIND_FUNCTION). Otherwise, the binding\n    // mode depends on properties of the current scope (see\n    // treatFunctionsAsVar).\n    this.scope.declareName(\n      node.id.name,\n      this.state.strict || node.generator || node.async\n        ? this.scope.treatFunctionsAsVar\n          ? BIND_VAR\n          : BIND_LEXICAL\n        : BIND_FUNCTION,\n      node.id.loc.start,\n    );\n  }\n\n  // Parse a class declaration or literal (depending on the\n  // `isStatement` parameter).\n\n  parseClass<T: N.Class>(\n    node: T,\n    isStatement: /* T === ClassDeclaration */ boolean,\n    optionalId?: boolean,\n  ): T {\n    this.next();\n    this.takeDecorators(node);\n\n    // A class definition is always strict mode code.\n    const oldStrict = this.state.strict;\n    this.state.strict = true;\n\n    this.parseClassId(node, isStatement, optionalId);\n    this.parseClassSuper(node);\n    // this.state.strict is restored in parseClassBody\n    node.body = this.parseClassBody(!!node.superClass, oldStrict);\n\n    return this.finishNode(\n      node,\n      isStatement ? \"ClassDeclaration\" : \"ClassExpression\",\n    );\n  }\n\n  isClassProperty(): boolean {\n    return this.match(tt.eq) || this.match(tt.semi) || this.match(tt.braceR);\n  }\n\n  isClassMethod(): boolean {\n    return this.match(tt.parenL);\n  }\n\n  isNonstaticConstructor(method: N.ClassMethod | N.ClassProperty): boolean {\n    return (\n      !method.computed &&\n      !method.static &&\n      (method.key.name === \"constructor\" || // Identifier\n        method.key.value === \"constructor\") // String literal\n    );\n  }\n\n  // https://tc39.es/ecma262/#prod-ClassBody\n  parseClassBody(hadSuperClass: boolean, oldStrict: boolean): N.ClassBody {\n    this.classScope.enter();\n\n    const state: N.ParseClassMemberState = {\n      hadConstructor: false,\n      hadSuperClass,\n    };\n    let decorators: N.Decorator[] = [];\n    const classBody: N.ClassBody = this.startNode();\n    classBody.body = [];\n\n    this.expect(tt.braceL);\n\n    // For the smartPipelines plugin: Disable topic references from outer\n    // contexts within the class body.\n    this.withSmartMixTopicForbiddingContext(() => {\n      // Parse the contents within the braces.\n      while (!this.match(tt.braceR)) {\n        if (this.eat(tt.semi)) {\n          if (decorators.length > 0) {\n            throw this.raise(Errors.DecoratorSemicolon, {\n              at: this.state.lastTokEndLoc,\n            });\n          }\n          continue;\n        }\n\n        if (this.match(tt.at)) {\n          decorators.push(this.parseDecorator());\n          continue;\n        }\n\n        const member = this.startNode();\n\n        // steal the decorators if there are any\n        if (decorators.length) {\n          member.decorators = decorators;\n          this.resetStartLocationFromNode(member, decorators[0]);\n          decorators = [];\n        }\n\n        this.parseClassMember(classBody, member, state);\n\n        if (\n          member.kind === \"constructor\" &&\n          member.decorators &&\n          member.decorators.length > 0\n        ) {\n          this.raise(Errors.DecoratorConstructor, { at: member });\n        }\n      }\n    });\n\n    this.state.strict = oldStrict;\n\n    this.next(); // eat `}`\n\n    if (decorators.length) {\n      throw this.raise(Errors.TrailingDecorator, { at: this.state.startLoc });\n    }\n\n    this.classScope.exit();\n\n    return this.finishNode(classBody, \"ClassBody\");\n  }\n\n  // returns true if the current identifier is a method/field name,\n  // false if it is a modifier\n  parseClassMemberFromModifier(\n    classBody: N.ClassBody,\n    member: N.ClassMember,\n  ): boolean {\n    const key = this.parseIdentifier(true); // eats the modifier\n\n    if (this.isClassMethod()) {\n      const method: N.ClassMethod = (member: any);\n\n      // a method named like the modifier\n      method.kind = \"method\";\n      method.computed = false;\n      method.key = key;\n      method.static = false;\n      this.pushClassMethod(\n        classBody,\n        method,\n        false,\n        false,\n        /* isConstructor */ false,\n        false,\n      );\n      return true;\n    } else if (this.isClassProperty()) {\n      const prop: N.ClassProperty = (member: any);\n\n      // a property named like the modifier\n      prop.computed = false;\n      prop.key = key;\n      prop.static = false;\n      classBody.body.push(this.parseClassProperty(prop));\n      return true;\n    }\n    this.resetPreviousNodeTrailingComments(key);\n    return false;\n  }\n\n  parseClassMember(\n    classBody: N.ClassBody,\n    member: N.ClassMember,\n    state: N.ParseClassMemberState,\n  ): void {\n    const isStatic = this.isContextual(tt._static);\n\n    if (isStatic) {\n      if (this.parseClassMemberFromModifier(classBody, member)) {\n        // a class element named 'static'\n        return;\n      }\n      if (this.eat(tt.braceL)) {\n        this.parseClassStaticBlock(classBody, ((member: any): N.StaticBlock));\n        return;\n      }\n    }\n\n    this.parseClassMemberWithIsStatic(classBody, member, state, isStatic);\n  }\n\n  parseClassMemberWithIsStatic(\n    classBody: N.ClassBody,\n    member: N.ClassMember,\n    state: N.ParseClassMemberState,\n    isStatic: boolean,\n  ) {\n    const publicMethod: $FlowSubtype<N.ClassMethod> = member;\n    const privateMethod: $FlowSubtype<N.ClassPrivateMethod> = member;\n    const publicProp: $FlowSubtype<N.ClassProperty> = member;\n    const privateProp: $FlowSubtype<N.ClassPrivateProperty> = member;\n    const accessorProp: $FlowSubtype<N.ClassAccessorProperty> = member;\n\n    const method: typeof publicMethod | typeof privateMethod = publicMethod;\n    const publicMember: typeof publicMethod | typeof publicProp = publicMethod;\n\n    member.static = isStatic;\n    this.parsePropertyNamePrefixOperator(member);\n\n    if (this.eat(tt.star)) {\n      // a generator\n      method.kind = \"method\";\n      const isPrivateName = this.match(tt.privateName);\n      this.parseClassElementName(method);\n\n      if (isPrivateName) {\n        // Private generator method\n        this.pushClassPrivateMethod(classBody, privateMethod, true, false);\n        return;\n      }\n\n      if (this.isNonstaticConstructor(publicMethod)) {\n        this.raise(Errors.ConstructorIsGenerator, {\n          at: publicMethod.key,\n        });\n      }\n\n      this.pushClassMethod(\n        classBody,\n        publicMethod,\n        true,\n        false,\n        /* isConstructor */ false,\n        false,\n      );\n\n      return;\n    }\n\n    const isContextual =\n      tokenIsIdentifier(this.state.type) && !this.state.containsEsc;\n    const isPrivate = this.match(tt.privateName);\n    const key = this.parseClassElementName(member);\n    const maybeQuestionTokenStartLoc = this.state.startLoc;\n\n    this.parsePostMemberNameModifiers(publicMember);\n\n    if (this.isClassMethod()) {\n      method.kind = \"method\";\n\n      if (isPrivate) {\n        this.pushClassPrivateMethod(classBody, privateMethod, false, false);\n        return;\n      }\n\n      // a normal method\n      const isConstructor = this.isNonstaticConstructor(publicMethod);\n      let allowsDirectSuper = false;\n      if (isConstructor) {\n        publicMethod.kind = \"constructor\";\n\n        // TypeScript allows multiple overloaded constructor declarations.\n        if (state.hadConstructor && !this.hasPlugin(\"typescript\")) {\n          this.raise(Errors.DuplicateConstructor, { at: key });\n        }\n        if (isConstructor && this.hasPlugin(\"typescript\") && member.override) {\n          this.raise(Errors.OverrideOnConstructor, { at: key });\n        }\n        state.hadConstructor = true;\n        allowsDirectSuper = state.hadSuperClass;\n      }\n\n      this.pushClassMethod(\n        classBody,\n        publicMethod,\n        false,\n        false,\n        isConstructor,\n        allowsDirectSuper,\n      );\n    } else if (this.isClassProperty()) {\n      if (isPrivate) {\n        this.pushClassPrivateProperty(classBody, privateProp);\n      } else {\n        this.pushClassProperty(classBody, publicProp);\n      }\n    } else if (\n      isContextual &&\n      key.name === \"async\" &&\n      !this.isLineTerminator()\n    ) {\n      // an async method\n      this.resetPreviousNodeTrailingComments(key);\n      const isGenerator = this.eat(tt.star);\n\n      if (publicMember.optional) {\n        this.unexpected(maybeQuestionTokenStartLoc);\n      }\n\n      method.kind = \"method\";\n      // The so-called parsed name would have been \"async\": get the real name.\n      const isPrivate = this.match(tt.privateName);\n      this.parseClassElementName(method);\n      this.parsePostMemberNameModifiers(publicMember);\n\n      if (isPrivate) {\n        // private async method\n        this.pushClassPrivateMethod(\n          classBody,\n          privateMethod,\n          isGenerator,\n          true,\n        );\n      } else {\n        if (this.isNonstaticConstructor(publicMethod)) {\n          this.raise(Errors.ConstructorIsAsync, { at: publicMethod.key });\n        }\n\n        this.pushClassMethod(\n          classBody,\n          publicMethod,\n          isGenerator,\n          true,\n          /* isConstructor */ false,\n          false,\n        );\n      }\n    } else if (\n      isContextual &&\n      (key.name === \"get\" || key.name === \"set\") &&\n      !(this.match(tt.star) && this.isLineTerminator())\n    ) {\n      // `get\\n*` is an uninitialized property named 'get' followed by a generator.\n      // a getter or setter\n      this.resetPreviousNodeTrailingComments(key);\n      method.kind = key.name;\n      // The so-called parsed name would have been \"get/set\": get the real name.\n      const isPrivate = this.match(tt.privateName);\n      this.parseClassElementName(publicMethod);\n\n      if (isPrivate) {\n        // private getter/setter\n        this.pushClassPrivateMethod(classBody, privateMethod, false, false);\n      } else {\n        if (this.isNonstaticConstructor(publicMethod)) {\n          this.raise(Errors.ConstructorIsAccessor, { at: publicMethod.key });\n        }\n        this.pushClassMethod(\n          classBody,\n          publicMethod,\n          false,\n          false,\n          /* isConstructor */ false,\n          false,\n        );\n      }\n\n      this.checkGetterSetterParams(publicMethod);\n    } else if (\n      isContextual &&\n      key.name === \"accessor\" &&\n      !this.isLineTerminator()\n    ) {\n      this.expectPlugin(\"decoratorAutoAccessors\");\n      this.resetPreviousNodeTrailingComments(key);\n\n      // The so-called parsed name would have been \"accessor\": get the real name.\n      const isPrivate = this.match(tt.privateName);\n      this.parseClassElementName(publicProp);\n      this.pushClassAccessorProperty(classBody, accessorProp, isPrivate);\n    } else if (this.isLineTerminator()) {\n      // an uninitialized class property (due to ASI, since we don't otherwise recognize the next token)\n      if (isPrivate) {\n        this.pushClassPrivateProperty(classBody, privateProp);\n      } else {\n        this.pushClassProperty(classBody, publicProp);\n      }\n    } else {\n      this.unexpected();\n    }\n  }\n\n  // https://tc39.es/ecma262/#prod-ClassElementName\n  parseClassElementName(member: N.ClassMember): N.Expression | N.Identifier {\n    const { type, value } = this.state;\n    if (\n      (type === tt.name || type === tt.string) &&\n      member.static &&\n      value === \"prototype\"\n    ) {\n      this.raise(Errors.StaticPrototype, { at: this.state.startLoc });\n    }\n\n    if (type === tt.privateName) {\n      if (value === \"constructor\") {\n        this.raise(Errors.ConstructorClassPrivateField, {\n          at: this.state.startLoc,\n        });\n      }\n      const key = this.parsePrivateName();\n      member.key = key;\n      return key;\n    }\n\n    return this.parsePropertyName(member);\n  }\n\n  parseClassStaticBlock(\n    classBody: N.ClassBody,\n    member: N.StaticBlock & { decorators?: Array<N.Decorator> },\n  ) {\n    // Start a new lexical scope\n    this.scope.enter(SCOPE_CLASS | SCOPE_STATIC_BLOCK | SCOPE_SUPER);\n    // Start a new scope with regard to loop labels\n    const oldLabels = this.state.labels;\n    this.state.labels = [];\n    // ClassStaticBlockStatementList:\n    //   StatementList[~Yield, ~Await, ~Return] opt\n    this.prodParam.enter(PARAM);\n    const body = (member.body = []);\n    this.parseBlockOrModuleBlockBody(body, undefined, false, tt.braceR);\n    this.prodParam.exit();\n    this.scope.exit();\n    this.state.labels = oldLabels;\n    classBody.body.push(this.finishNode<N.StaticBlock>(member, \"StaticBlock\"));\n    if (member.decorators?.length) {\n      this.raise(Errors.DecoratorStaticBlock, { at: member });\n    }\n  }\n\n  pushClassProperty(classBody: N.ClassBody, prop: N.ClassProperty) {\n    if (\n      !prop.computed &&\n      (prop.key.name === \"constructor\" || prop.key.value === \"constructor\")\n    ) {\n      // Non-computed field, which is either an identifier named \"constructor\"\n      // or a string literal named \"constructor\"\n      this.raise(Errors.ConstructorClassField, { at: prop.key });\n    }\n\n    classBody.body.push(this.parseClassProperty(prop));\n  }\n\n  pushClassPrivateProperty(\n    classBody: N.ClassBody,\n    prop: N.ClassPrivateProperty,\n  ) {\n    const node = this.parseClassPrivateProperty(prop);\n    classBody.body.push(node);\n\n    this.classScope.declarePrivateName(\n      this.getPrivateNameSV(node.key),\n      CLASS_ELEMENT_OTHER,\n      node.key.loc.start,\n    );\n  }\n\n  pushClassAccessorProperty(\n    classBody: N.ClassBody,\n    prop: N.ClassAccessorProperty,\n    isPrivate: boolean,\n  ) {\n    if (!isPrivate && !prop.computed) {\n      // Not private, so not node is not a PrivateName and we can safely cast\n      const key = (prop.key: N.Expression);\n\n      if (key.name === \"constructor\" || key.value === \"constructor\") {\n        // Non-computed field, which is either an identifier named \"constructor\"\n        // or a string literal named \"constructor\"\n        this.raise(Errors.ConstructorClassField, { at: key });\n      }\n    }\n\n    const node = this.parseClassAccessorProperty(prop);\n    classBody.body.push(node);\n\n    if (isPrivate) {\n      this.classScope.declarePrivateName(\n        this.getPrivateNameSV(node.key),\n        CLASS_ELEMENT_OTHER,\n        node.key.loc.start,\n      );\n    }\n  }\n\n  pushClassMethod(\n    classBody: N.ClassBody,\n    method: N.ClassMethod,\n    isGenerator: boolean,\n    isAsync: boolean,\n    isConstructor: boolean,\n    allowsDirectSuper: boolean,\n  ): void {\n    classBody.body.push(\n      this.parseMethod(\n        method,\n        isGenerator,\n        isAsync,\n        isConstructor,\n        allowsDirectSuper,\n        \"ClassMethod\",\n        true,\n      ),\n    );\n  }\n\n  pushClassPrivateMethod(\n    classBody: N.ClassBody,\n    method: N.ClassPrivateMethod,\n    isGenerator: boolean,\n    isAsync: boolean,\n  ): void {\n    const node = this.parseMethod(\n      method,\n      isGenerator,\n      isAsync,\n      /* isConstructor */ false,\n      false,\n      \"ClassPrivateMethod\",\n      true,\n    );\n    classBody.body.push(node);\n\n    const kind =\n      node.kind === \"get\"\n        ? node.static\n          ? CLASS_ELEMENT_STATIC_GETTER\n          : CLASS_ELEMENT_INSTANCE_GETTER\n        : node.kind === \"set\"\n        ? node.static\n          ? CLASS_ELEMENT_STATIC_SETTER\n          : CLASS_ELEMENT_INSTANCE_SETTER\n        : CLASS_ELEMENT_OTHER;\n    this.declareClassPrivateMethodInScope(node, kind);\n  }\n\n  declareClassPrivateMethodInScope(\n    node: N.ClassPrivateMethod | N.EstreeMethodDefinition | N.TSDeclareMethod,\n    kind: number,\n  ) {\n    this.classScope.declarePrivateName(\n      this.getPrivateNameSV(node.key),\n      kind,\n      node.key.loc.start,\n    );\n  }\n\n  // Overridden in typescript.js\n  parsePostMemberNameModifiers(\n    // eslint-disable-next-line no-unused-vars\n    methodOrProp: N.ClassMethod | N.ClassProperty,\n  ): void {}\n\n  // https://tc39.es/ecma262/#prod-FieldDefinition\n  parseClassPrivateProperty(\n    node: N.ClassPrivateProperty,\n  ): N.ClassPrivateProperty {\n    this.parseInitializer(node);\n    this.semicolon();\n    return this.finishNode(node, \"ClassPrivateProperty\");\n  }\n\n  // https://tc39.es/ecma262/#prod-FieldDefinition\n  parseClassProperty(node: N.ClassProperty): N.ClassProperty {\n    this.parseInitializer(node);\n    this.semicolon();\n    return this.finishNode(node, \"ClassProperty\");\n  }\n\n  parseClassAccessorProperty(\n    node: N.ClassAccessorProperty,\n  ): N.ClassAccessorProperty {\n    this.parseInitializer(node);\n    this.semicolon();\n    return this.finishNode(node, \"ClassAccessorProperty\");\n  }\n\n  // https://tc39.es/ecma262/#prod-Initializer\n  parseInitializer(\n    node: N.ClassProperty | N.ClassPrivateProperty | N.ClassAccessorProperty,\n  ): void {\n    this.scope.enter(SCOPE_CLASS | SCOPE_SUPER);\n    this.expressionScope.enter(newExpressionScope());\n    this.prodParam.enter(PARAM);\n    node.value = this.eat(tt.eq) ? this.parseMaybeAssignAllowIn() : null;\n    this.expressionScope.exit();\n    this.prodParam.exit();\n    this.scope.exit();\n  }\n\n  parseClassId(\n    node: N.Class,\n    isStatement: boolean,\n    optionalId: ?boolean,\n    bindingType: BindingTypes = BIND_CLASS,\n  ): void {\n    if (tokenIsIdentifier(this.state.type)) {\n      node.id = this.parseIdentifier();\n      if (isStatement) {\n        this.declareNameFromIdentifier(node.id, bindingType);\n      }\n    } else {\n      if (optionalId || !isStatement) {\n        node.id = null;\n      } else {\n        throw this.raise(Errors.MissingClassName, { at: this.state.startLoc });\n      }\n    }\n  }\n\n  // https://tc39.es/ecma262/#prod-ClassHeritage\n  parseClassSuper(node: N.Class): void {\n    node.superClass = this.eat(tt._extends) ? this.parseExprSubscripts() : null;\n  }\n\n  // Parses module export declaration.\n  // https://tc39.es/ecma262/#prod-ExportDeclaration\n\n  parseExport(node: N.Node): N.AnyExport {\n    const hasDefault = this.maybeParseExportDefaultSpecifier(node);\n    const parseAfterDefault = !hasDefault || this.eat(tt.comma);\n    const hasStar = parseAfterDefault && this.eatExportStar(node);\n    const hasNamespace =\n      hasStar && this.maybeParseExportNamespaceSpecifier(node);\n    const parseAfterNamespace =\n      parseAfterDefault && (!hasNamespace || this.eat(tt.comma));\n    const isFromRequired = hasDefault || hasStar;\n\n    if (hasStar && !hasNamespace) {\n      if (hasDefault) this.unexpected();\n      this.parseExportFrom(node, true);\n\n      return this.finishNode(node, \"ExportAllDeclaration\");\n    }\n\n    const hasSpecifiers = this.maybeParseExportNamedSpecifiers(node);\n\n    if (\n      (hasDefault && parseAfterDefault && !hasStar && !hasSpecifiers) ||\n      (hasNamespace && parseAfterNamespace && !hasSpecifiers)\n    ) {\n      throw this.unexpected(null, tt.braceL);\n    }\n\n    let hasDeclaration;\n    if (isFromRequired || hasSpecifiers) {\n      hasDeclaration = false;\n      this.parseExportFrom(node, isFromRequired);\n    } else {\n      hasDeclaration = this.maybeParseExportDeclaration(node);\n    }\n\n    if (isFromRequired || hasSpecifiers || hasDeclaration) {\n      this.checkExport(node, true, false, !!node.source);\n      return this.finishNode(node, \"ExportNamedDeclaration\");\n    }\n\n    if (this.eat(tt._default)) {\n      // export default ...\n      node.declaration = this.parseExportDefaultExpression();\n      this.checkExport(node, true, true);\n\n      return this.finishNode(node, \"ExportDefaultDeclaration\");\n    }\n\n    throw this.unexpected(null, tt.braceL);\n  }\n\n  // eslint-disable-next-line no-unused-vars\n  eatExportStar(node: N.Node): boolean {\n    return this.eat(tt.star);\n  }\n\n  maybeParseExportDefaultSpecifier(node: N.Node): boolean {\n    if (this.isExportDefaultSpecifier()) {\n      // export defaultObj ...\n      this.expectPlugin(\"exportDefaultFrom\");\n      const specifier = this.startNode();\n      specifier.exported = this.parseIdentifier(true);\n      node.specifiers = [this.finishNode(specifier, \"ExportDefaultSpecifier\")];\n      return true;\n    }\n    return false;\n  }\n\n  maybeParseExportNamespaceSpecifier(node: N.Node): boolean {\n    if (this.isContextual(tt._as)) {\n      if (!node.specifiers) node.specifiers = [];\n\n      const specifier = this.startNodeAt(\n        this.state.lastTokStart,\n        this.state.lastTokStartLoc,\n      );\n\n      this.next();\n\n      specifier.exported = this.parseModuleExportName();\n      node.specifiers.push(\n        this.finishNode(specifier, \"ExportNamespaceSpecifier\"),\n      );\n      return true;\n    }\n    return false;\n  }\n\n  maybeParseExportNamedSpecifiers(node: N.Node): boolean {\n    if (this.match(tt.braceL)) {\n      if (!node.specifiers) node.specifiers = [];\n      const isTypeExport = node.exportKind === \"type\";\n      node.specifiers.push(...this.parseExportSpecifiers(isTypeExport));\n\n      node.source = null;\n      node.declaration = null;\n      if (this.hasPlugin(\"importAssertions\")) {\n        node.assertions = [];\n      }\n\n      return true;\n    }\n    return false;\n  }\n\n  maybeParseExportDeclaration(node: N.Node): boolean {\n    if (this.shouldParseExportDeclaration()) {\n      node.specifiers = [];\n      node.source = null;\n      if (this.hasPlugin(\"importAssertions\")) {\n        node.assertions = [];\n      }\n      node.declaration = this.parseExportDeclaration(node);\n      return true;\n    }\n    return false;\n  }\n\n  isAsyncFunction(): boolean {\n    if (!this.isContextual(tt._async)) return false;\n    const next = this.nextTokenStart();\n    return (\n      !lineBreak.test(this.input.slice(this.state.pos, next)) &&\n      this.isUnparsedContextual(next, \"function\")\n    );\n  }\n\n  parseExportDefaultExpression(): N.Expression | N.Declaration {\n    const expr = this.startNode();\n\n    const isAsync = this.isAsyncFunction();\n\n    if (this.match(tt._function) || isAsync) {\n      this.next();\n      if (isAsync) {\n        this.next();\n      }\n\n      return this.parseFunction(\n        expr,\n        FUNC_STATEMENT | FUNC_NULLABLE_ID,\n        isAsync,\n      );\n    }\n\n    if (this.match(tt._class)) {\n      return this.parseClass(expr, true, true);\n    }\n\n    if (this.match(tt.at)) {\n      if (\n        this.hasPlugin(\"decorators\") &&\n        this.getPluginOption(\"decorators\", \"decoratorsBeforeExport\")\n      ) {\n        this.raise(Errors.DecoratorBeforeExport, { at: this.state.startLoc });\n      }\n      this.parseDecorators(false);\n      return this.parseClass(expr, true, true);\n    }\n\n    if (this.match(tt._const) || this.match(tt._var) || this.isLet()) {\n      throw this.raise(Errors.UnsupportedDefaultExport, {\n        at: this.state.startLoc,\n      });\n    }\n\n    const res = this.parseMaybeAssignAllowIn();\n    this.semicolon();\n    return res;\n  }\n\n  // eslint-disable-next-line no-unused-vars\n  parseExportDeclaration(node: N.ExportNamedDeclaration): ?N.Declaration {\n    return this.parseStatement(null);\n  }\n\n  isExportDefaultSpecifier(): boolean {\n    const { type } = this.state;\n    if (tokenIsIdentifier(type)) {\n      if ((type === tt._async && !this.state.containsEsc) || type === tt._let) {\n        return false;\n      }\n      if (\n        (type === tt._type || type === tt._interface) &&\n        !this.state.containsEsc\n      ) {\n        const { type: nextType } = this.lookahead();\n        // If we see any variable name other than `from` after `type` keyword,\n        // we consider it as flow/typescript type exports\n        // note that this approach may fail on some pedantic cases\n        // export type from = number\n        if (\n          (tokenIsIdentifier(nextType) && nextType !== tt._from) ||\n          nextType === tt.braceL\n        ) {\n          this.expectOnePlugin([\"flow\", \"typescript\"]);\n          return false;\n        }\n      }\n    } else if (!this.match(tt._default)) {\n      return false;\n    }\n\n    const next = this.nextTokenStart();\n    const hasFrom = this.isUnparsedContextual(next, \"from\");\n    if (\n      this.input.charCodeAt(next) === charCodes.comma ||\n      (tokenIsIdentifier(this.state.type) && hasFrom)\n    ) {\n      return true;\n    }\n    // lookahead again when `export default from` is seen\n    if (this.match(tt._default) && hasFrom) {\n      const nextAfterFrom = this.input.charCodeAt(\n        this.nextTokenStartSince(next + 4),\n      );\n      return (\n        nextAfterFrom === charCodes.quotationMark ||\n        nextAfterFrom === charCodes.apostrophe\n      );\n    }\n    return false;\n  }\n\n  parseExportFrom(node: N.ExportNamedDeclaration, expect?: boolean): void {\n    if (this.eatContextual(tt._from)) {\n      node.source = this.parseImportSource();\n      this.checkExport(node);\n      const assertions = this.maybeParseImportAssertions();\n      if (assertions) {\n        node.assertions = assertions;\n        this.checkJSONModuleImport(node);\n      }\n    } else if (expect) {\n      this.unexpected();\n    }\n\n    this.semicolon();\n  }\n\n  shouldParseExportDeclaration(): boolean {\n    const { type } = this.state;\n    if (type === tt.at) {\n      this.expectOnePlugin([\"decorators\", \"decorators-legacy\"]);\n      if (this.hasPlugin(\"decorators\")) {\n        if (this.getPluginOption(\"decorators\", \"decoratorsBeforeExport\")) {\n          throw this.raise(Errors.DecoratorBeforeExport, {\n            at: this.state.startLoc,\n          });\n        }\n\n        return true;\n      }\n    }\n\n    return (\n      type === tt._var ||\n      type === tt._const ||\n      type === tt._function ||\n      type === tt._class ||\n      this.isLet() ||\n      this.isAsyncFunction()\n    );\n  }\n\n  checkExport(\n    node: N.ExportNamedDeclaration,\n    checkNames?: boolean,\n    isDefault?: boolean,\n    isFrom?: boolean,\n  ): void {\n    if (checkNames) {\n      // Check for duplicate exports\n      if (isDefault) {\n        // Default exports\n        this.checkDuplicateExports(node, \"default\");\n        if (this.hasPlugin(\"exportDefaultFrom\")) {\n          const declaration = ((node: any): N.ExportDefaultDeclaration)\n            .declaration;\n          if (\n            declaration.type === \"Identifier\" &&\n            declaration.name === \"from\" &&\n            declaration.end - declaration.start === 4 && // does not contain escape\n            !declaration.extra?.parenthesized\n          ) {\n            this.raise(Errors.ExportDefaultFromAsIdentifier, {\n              at: declaration,\n            });\n          }\n        }\n      } else if (node.specifiers && node.specifiers.length) {\n        // Named exports\n        for (const specifier of node.specifiers) {\n          const { exported } = specifier;\n          const exportName =\n            exported.type === \"Identifier\" ? exported.name : exported.value;\n          this.checkDuplicateExports(specifier, exportName);\n          // $FlowIgnore\n          if (!isFrom && specifier.local) {\n            const { local } = specifier;\n            if (local.type !== \"Identifier\") {\n              this.raise(Errors.ExportBindingIsString, {\n                at: specifier,\n                localName: local.value,\n                exportName,\n              });\n            } else {\n              // check for keywords used as local names\n              this.checkReservedWord(local.name, local.loc.start, true, false);\n              // check if export is defined\n              this.scope.checkLocalExport(local);\n            }\n          }\n        }\n      } else if (node.declaration) {\n        // Exported declarations\n        if (\n          node.declaration.type === \"FunctionDeclaration\" ||\n          node.declaration.type === \"ClassDeclaration\"\n        ) {\n          const id = node.declaration.id;\n          if (!id) throw new Error(\"Assertion failure\");\n\n          this.checkDuplicateExports(node, id.name);\n        } else if (node.declaration.type === \"VariableDeclaration\") {\n          for (const declaration of node.declaration.declarations) {\n            this.checkDeclaration(declaration.id);\n          }\n        }\n      }\n    }\n\n    const currentContextDecorators =\n      this.state.decoratorStack[this.state.decoratorStack.length - 1];\n    // If node.declaration is a class, it will take all decorators in the current context.\n    // Thus we should throw if we see non-empty decorators here.\n    if (currentContextDecorators.length) {\n      throw this.raise(Errors.UnsupportedDecoratorExport, { at: node });\n    }\n  }\n\n  checkDeclaration(node: N.Pattern | N.ObjectProperty): void {\n    if (node.type === \"Identifier\") {\n      this.checkDuplicateExports(node, node.name);\n    } else if (node.type === \"ObjectPattern\") {\n      for (const prop of node.properties) {\n        this.checkDeclaration(prop);\n      }\n    } else if (node.type === \"ArrayPattern\") {\n      for (const elem of node.elements) {\n        if (elem) {\n          this.checkDeclaration(elem);\n        }\n      }\n    } else if (node.type === \"ObjectProperty\") {\n      this.checkDeclaration(node.value);\n    } else if (node.type === \"RestElement\") {\n      this.checkDeclaration(node.argument);\n    } else if (node.type === \"AssignmentPattern\") {\n      this.checkDeclaration(node.left);\n    }\n  }\n\n  checkDuplicateExports(\n    node:\n      | N.Identifier\n      | N.StringLiteral\n      | N.ExportNamedDeclaration\n      | N.ExportSpecifier\n      | N.ExportDefaultSpecifier,\n    exportName: string,\n  ): void {\n    if (this.exportedIdentifiers.has(exportName)) {\n      if (exportName === \"default\") {\n        this.raise(Errors.DuplicateDefaultExport, { at: node });\n      } else {\n        this.raise(Errors.DuplicateExport, { at: node, exportName });\n      }\n    }\n    this.exportedIdentifiers.add(exportName);\n  }\n\n  // Parses a comma-separated list of module exports.\n\n  parseExportSpecifiers(isInTypeExport: boolean): Array<N.ExportSpecifier> {\n    const nodes = [];\n    let first = true;\n\n    // export { x, y as z } [from '...']\n    this.expect(tt.braceL);\n\n    while (!this.eat(tt.braceR)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(tt.comma);\n        if (this.eat(tt.braceR)) break;\n      }\n      const isMaybeTypeOnly = this.isContextual(tt._type);\n      const isString = this.match(tt.string);\n      const node = this.startNode();\n      node.local = this.parseModuleExportName();\n      nodes.push(\n        this.parseExportSpecifier(\n          node,\n          isString,\n          isInTypeExport,\n          isMaybeTypeOnly,\n        ),\n      );\n    }\n\n    return nodes;\n  }\n\n  parseExportSpecifier(\n    node: any,\n    isString: boolean,\n    /* eslint-disable no-unused-vars -- used in TypeScript parser */\n    isInTypeExport: boolean,\n    isMaybeTypeOnly: boolean,\n    /* eslint-enable no-unused-vars */\n  ): N.ExportSpecifier {\n    if (this.eatContextual(tt._as)) {\n      node.exported = this.parseModuleExportName();\n    } else if (isString) {\n      node.exported = cloneStringLiteral(node.local);\n    } else if (!node.exported) {\n      node.exported = cloneIdentifier(node.local);\n    }\n    return this.finishNode<N.ExportSpecifier>(node, \"ExportSpecifier\");\n  }\n\n  // https://tc39.es/ecma262/#prod-ModuleExportName\n  parseModuleExportName(): N.StringLiteral | N.Identifier {\n    if (this.match(tt.string)) {\n      const result = this.parseStringLiteral(this.state.value);\n      const surrogate = result.value.match(loneSurrogate);\n      if (surrogate) {\n        this.raise(Errors.ModuleExportNameHasLoneSurrogate, {\n          at: result,\n          surrogateCharCode: surrogate[0].charCodeAt(0),\n        });\n      }\n      return result;\n    }\n    return this.parseIdentifier(true);\n  }\n\n  isJSONModuleImport(\n    node:\n      | N.ExportAllDeclaration\n      | N.ExportNamedDeclaration\n      | N.ImportDeclaration,\n  ): boolean {\n    if (node.assertions != null) {\n      return node.assertions.some(({ key, value }) => {\n        return (\n          value.value === \"json\" &&\n          (key.type === \"Identifier\"\n            ? key.name === \"type\"\n            : key.value === \"type\")\n        );\n      });\n    }\n    return false;\n  }\n\n  checkJSONModuleImport(\n    node:\n      | N.ExportAllDeclaration\n      | N.ExportNamedDeclaration\n      | N.ImportDeclaration,\n  ) {\n    if (this.isJSONModuleImport(node) && node.type !== \"ExportAllDeclaration\") {\n      const { specifiers } = node;\n      if (node.specifiers != null) {\n        const nonDefaultNamedSpecifier = specifiers.find(specifier => {\n          let imported;\n          if (specifier.type === \"ExportSpecifier\") {\n            imported = specifier.local;\n          } else if (specifier.type === \"ImportSpecifier\") {\n            imported = specifier.imported;\n          }\n          if (imported !== undefined) {\n            return imported.type === \"Identifier\"\n              ? imported.name !== \"default\"\n              : imported.value !== \"default\";\n          }\n        });\n        if (nonDefaultNamedSpecifier !== undefined) {\n          this.raise(Errors.ImportJSONBindingNotDefault, {\n            at: nonDefaultNamedSpecifier.loc.start,\n          });\n        }\n      }\n    }\n  }\n\n  // Parses import declaration.\n  // https://tc39.es/ecma262/#prod-ImportDeclaration\n\n  parseImport(node: N.Node): N.AnyImport {\n    // import '...'\n    node.specifiers = [];\n    if (!this.match(tt.string)) {\n      // check if we have a default import like\n      // import React from \"react\";\n      const hasDefault = this.maybeParseDefaultImportSpecifier(node);\n      /* we are checking if we do not have a default import, then it is obvious that we need named imports\n       * import { get } from \"axios\";\n       * but if we do have a default import\n       * we need to check if we have a comma after that and\n       * that is where this `|| this.eat` condition comes into play\n       */\n      const parseNext = !hasDefault || this.eat(tt.comma);\n      // if we do have to parse the next set of specifiers, we first check for star imports\n      // import React, * from \"react\";\n      const hasStar = parseNext && this.maybeParseStarImportSpecifier(node);\n      // now we check if we need to parse the next imports\n      // but only if they are not importing * (everything)\n      if (parseNext && !hasStar) this.parseNamedImportSpecifiers(node);\n      this.expectContextual(tt._from);\n    }\n    node.source = this.parseImportSource();\n    // https://github.com/tc39/proposal-import-assertions\n    // parse module import assertions if the next token is `assert` or ignore\n    // and finish the ImportDeclaration node.\n    const assertions = this.maybeParseImportAssertions();\n    if (assertions) {\n      node.assertions = assertions;\n    } else if (!process.env.BABEL_8_BREAKING) {\n      const attributes = this.maybeParseModuleAttributes();\n      if (attributes) {\n        node.attributes = attributes;\n      }\n    }\n    this.checkJSONModuleImport(node);\n\n    this.semicolon();\n    return this.finishNode(node, \"ImportDeclaration\");\n  }\n\n  parseImportSource(): N.StringLiteral {\n    if (!this.match(tt.string)) this.unexpected();\n    return this.parseExprAtom();\n  }\n\n  // eslint-disable-next-line no-unused-vars\n  shouldParseDefaultImport(node: N.ImportDeclaration): boolean {\n    return tokenIsIdentifier(this.state.type);\n  }\n\n  parseImportSpecifierLocal(\n    node: N.ImportDeclaration,\n    specifier: N.Node,\n    type: string,\n  ): void {\n    specifier.local = this.parseIdentifier();\n    node.specifiers.push(this.finishImportSpecifier(specifier, type));\n  }\n\n  finishImportSpecifier(specifier: N.Node, type: string) {\n    this.checkLVal(specifier.local, {\n      in: specifier,\n      binding: BIND_LEXICAL,\n    });\n    return this.finishNode(specifier, type);\n  }\n\n  /**\n   * parse assert entries\n   *\n   * @see {@link https://tc39.es/proposal-import-assertions/#prod-AssertEntries |AssertEntries}\n   * @returns {N.ImportAttribute[]}\n   * @memberof StatementParser\n   */\n  parseAssertEntries(): N.ImportAttribute[] {\n    const attrs = [];\n    const attrNames = new Set();\n\n    do {\n      if (this.match(tt.braceR)) {\n        break;\n      }\n\n      const node = this.startNode<N.ImportAttribute>();\n\n      // parse AssertionKey : IdentifierName, StringLiteral\n      const keyName = this.state.value;\n      // check if we already have an entry for an attribute\n      // if a duplicate entry is found, throw an error\n      // for now this logic will come into play only when someone declares `type` twice\n      if (attrNames.has(keyName)) {\n        this.raise(Errors.ModuleAttributesWithDuplicateKeys, {\n          at: this.state.startLoc,\n          key: keyName,\n        });\n      }\n      attrNames.add(keyName);\n      if (this.match(tt.string)) {\n        node.key = this.parseStringLiteral(keyName);\n      } else {\n        node.key = this.parseIdentifier(true);\n      }\n      this.expect(tt.colon);\n\n      if (!this.match(tt.string)) {\n        throw this.raise(Errors.ModuleAttributeInvalidValue, {\n          at: this.state.startLoc,\n        });\n      }\n      node.value = this.parseStringLiteral(this.state.value);\n      this.finishNode<N.ImportAttribute>(node, \"ImportAttribute\");\n      attrs.push(node);\n    } while (this.eat(tt.comma));\n\n    return attrs;\n  }\n\n  /**\n   * parse module attributes\n   * @deprecated It will be removed in Babel 8\n   * @returns\n   * @memberof StatementParser\n   */\n  maybeParseModuleAttributes() {\n    if (this.match(tt._with) && !this.hasPrecedingLineBreak()) {\n      this.expectPlugin(\"moduleAttributes\");\n      this.next();\n    } else {\n      if (this.hasPlugin(\"moduleAttributes\")) return [];\n      return null;\n    }\n    const attrs = [];\n    const attributes = new Set();\n    do {\n      const node = this.startNode();\n      node.key = this.parseIdentifier(true);\n\n      if (node.key.name !== \"type\") {\n        this.raise(Errors.ModuleAttributeDifferentFromType, {\n          at: node.key,\n        });\n      }\n\n      if (attributes.has(node.key.name)) {\n        this.raise(Errors.ModuleAttributesWithDuplicateKeys, {\n          at: node.key,\n          key: node.key.name,\n        });\n      }\n      attributes.add(node.key.name);\n      this.expect(tt.colon);\n      if (!this.match(tt.string)) {\n        throw this.raise(Errors.ModuleAttributeInvalidValue, {\n          at: this.state.startLoc,\n        });\n      }\n      node.value = this.parseStringLiteral(this.state.value);\n      this.finishNode(node, \"ImportAttribute\");\n      attrs.push(node);\n    } while (this.eat(tt.comma));\n\n    return attrs;\n  }\n\n  maybeParseImportAssertions() {\n    // [no LineTerminator here] AssertClause\n    if (this.isContextual(tt._assert) && !this.hasPrecedingLineBreak()) {\n      this.expectPlugin(\"importAssertions\");\n      this.next(); // eat `assert`\n    } else {\n      if (this.hasPlugin(\"importAssertions\")) return [];\n      return null;\n    }\n    // https://tc39.es/proposal-import-assertions/#prod-AssertClause\n    this.eat(tt.braceL);\n    const attrs = this.parseAssertEntries();\n    this.eat(tt.braceR);\n\n    return attrs;\n  }\n\n  maybeParseDefaultImportSpecifier(node: N.ImportDeclaration): boolean {\n    if (this.shouldParseDefaultImport(node)) {\n      // import defaultObj, { x, y as z } from '...'\n      this.parseImportSpecifierLocal(\n        node,\n        this.startNode(),\n        \"ImportDefaultSpecifier\",\n      );\n      return true;\n    }\n    return false;\n  }\n\n  maybeParseStarImportSpecifier(node: N.ImportDeclaration): boolean {\n    if (this.match(tt.star)) {\n      const specifier = this.startNode();\n      this.next();\n      this.expectContextual(tt._as);\n\n      this.parseImportSpecifierLocal(\n        node,\n        specifier,\n        \"ImportNamespaceSpecifier\",\n      );\n      return true;\n    }\n    return false;\n  }\n\n  parseNamedImportSpecifiers(node: N.ImportDeclaration) {\n    let first = true;\n    this.expect(tt.braceL);\n    while (!this.eat(tt.braceR)) {\n      if (first) {\n        first = false;\n      } else {\n        // Detect an attempt to deep destructure\n        if (this.eat(tt.colon)) {\n          throw this.raise(Errors.DestructureNamedImport, {\n            at: this.state.startLoc,\n          });\n        }\n\n        this.expect(tt.comma);\n        if (this.eat(tt.braceR)) break;\n      }\n\n      const specifier = this.startNode();\n      const importedIsString = this.match(tt.string);\n      const isMaybeTypeOnly = this.isContextual(tt._type);\n      specifier.imported = this.parseModuleExportName();\n      const importSpecifier = this.parseImportSpecifier(\n        specifier,\n        importedIsString,\n        node.importKind === \"type\" || node.importKind === \"typeof\",\n        isMaybeTypeOnly,\n      );\n      node.specifiers.push(importSpecifier);\n    }\n  }\n\n  // https://tc39.es/ecma262/#prod-ImportSpecifier\n  parseImportSpecifier(\n    specifier: any,\n    importedIsString: boolean,\n    /* eslint-disable no-unused-vars -- used in TypeScript and Flow parser */\n    isInTypeOnlyImport: boolean,\n    isMaybeTypeOnly: boolean,\n    /* eslint-enable no-unused-vars */\n  ): N.ImportSpecifier {\n    if (this.eatContextual(tt._as)) {\n      specifier.local = this.parseIdentifier();\n    } else {\n      const { imported } = specifier;\n      if (importedIsString) {\n        throw this.raise(Errors.ImportBindingIsString, {\n          at: specifier,\n          importName: imported.value,\n        });\n      }\n      this.checkReservedWord(imported.name, specifier.loc.start, true, true);\n      if (!specifier.local) {\n        specifier.local = cloneIdentifier(imported);\n      }\n    }\n    return this.finishImportSpecifier(specifier, \"ImportSpecifier\");\n  }\n\n  // This is used in flow and typescript plugin\n  // Determine whether a parameter is a this param\n  isThisParam(\n    param: N.Pattern | N.Identifier | N.TSParameterProperty,\n  ): boolean {\n    return param.type === \"Identifier\" && param.name === \"this\";\n  }\n}\n","// @flow\n\nimport type { Options } from \"../options\";\nimport type { File /*::, JSXOpeningElement */ } from \"../types\";\nimport type { PluginList } from \"../plugin-utils\";\nimport { getOptions } from \"../options\";\nimport StatementParser from \"./statement\";\nimport ScopeHandler from \"../util/scope\";\n\nexport type PluginsMap = Map<string, { [string]: any }>;\n\nexport default class Parser extends StatementParser {\n  // Forward-declaration so typescript plugin can override jsx plugin\n  /*::\n  +jsxParseOpeningElementAfterName: (\n    node: JSXOpeningElement,\n  ) => JSXOpeningElement;\n  */\n\n  constructor(options: ?Options, input: string) {\n    options = getOptions(options);\n    super(options, input);\n\n    this.options = options;\n    this.initializeScopes();\n    this.plugins = pluginsMap(this.options.plugins);\n    this.filename = options.sourceFilename;\n  }\n\n  // This can be overwritten, for example, by the TypeScript plugin.\n  getScopeHandler(): Class<ScopeHandler<*>> {\n    return ScopeHandler;\n  }\n\n  parse(): File {\n    this.enterInitialScopes();\n    const file = this.startNode();\n    const program = this.startNode();\n    this.nextToken();\n    file.errors = null;\n    this.parseTopLevel(file, program);\n    file.errors = this.state.errors;\n    return file;\n  }\n}\n\nfunction pluginsMap(plugins: PluginList): PluginsMap {\n  const pluginMap: PluginsMap = new Map();\n  for (const plugin of plugins) {\n    const [name, options] = Array.isArray(plugin) ? plugin : [plugin, {}];\n    if (!pluginMap.has(name)) pluginMap.set(name, options || {});\n  }\n  return pluginMap;\n}\n","// @flow\n\n// A recursive descent parser operates by defining functions for all\n// syntactic elements, and recursively calling those, each function\n// advancing the input stream and returning an AST node. Precedence\n// of constructs (for example, the fact that `!x[1]` means `!(x[1])`\n// instead of `(!x)[1]` is handled by the fact that the parser\n// function that parses unary prefix operators is called first, and\n// in turn calls the function that parses `[]` subscripts — that\n// way, it'll receive the node for `x[1]` already parsed, and wraps\n// *that* in the unary operator node.\n//\n// Acorn uses an [operator precedence parser][opp] to handle binary\n// operator precedence, because it is much more compact than using\n// the technique outlined above, which uses different, nesting\n// functions to specify precedence, for all of the ten binary\n// precedence levels that JavaScript defines.\n//\n// [opp]: http://en.wikipedia.org/wiki/Operator-precedence_parser\n\nimport {\n  tokenCanStartExpression,\n  tokenIsAssignment,\n  tokenIsIdentifier,\n  tokenIsKeywordOrIdentifier,\n  tokenIsOperator,\n  tokenIsPostfix,\n  tokenIsPrefix,\n  tokenIsRightAssociative,\n  tokenIsTemplate,\n  tokenKeywordOrIdentifierIsKeyword,\n  tokenLabelName,\n  tokenOperatorPrecedence,\n  tt,\n  type TokenType,\n} from \"../tokenizer/types\";\nimport * as N from \"../types\";\nimport LValParser from \"./lval\";\nimport {\n  isKeyword,\n  isReservedWord,\n  isStrictReservedWord,\n  isStrictBindReservedWord,\n  isIdentifierStart,\n  canBeReservedWord,\n} from \"../util/identifier\";\nimport { Position, createPositionWithColumnOffset } from \"../util/location\";\nimport * as charCodes from \"charcodes\";\nimport {\n  BIND_OUTSIDE,\n  BIND_VAR,\n  SCOPE_ARROW,\n  SCOPE_CLASS,\n  SCOPE_DIRECT_SUPER,\n  SCOPE_FUNCTION,\n  SCOPE_SUPER,\n} from \"../util/scopeflags\";\nimport { ExpressionErrors } from \"./util\";\nimport {\n  PARAM_AWAIT,\n  PARAM_IN,\n  PARAM_RETURN,\n  functionFlags,\n} from \"../util/production-parameter\";\nimport {\n  newArrowHeadScope,\n  newAsyncArrowScope,\n  newExpressionScope,\n} from \"../util/expression-scope\";\nimport { Errors, type ParseError } from \"../parse-error\";\nimport { UnparenthesizedPipeBodyDescriptions } from \"../parse-error/pipeline-operator-errors\";\nimport { setInnerComments } from \"./comments\";\nimport { cloneIdentifier } from \"./node\";\n\n/*::\nimport type { SourceType } from \"../options\";\ndeclare var invariant;\n*/\n\nexport default class ExpressionParser extends LValParser {\n  // Forward-declaration: defined in statement.js\n  /*::\n  +parseBlock: (\n    allowDirectives?: boolean,\n    createNewLexicalScope?: boolean,\n    afterBlockParse?: (hasStrictModeDirective: boolean) => void,\n  ) => N.BlockStatement;\n  +parseClass: (\n    node: N.Class,\n    isStatement: boolean,\n    optionalId?: boolean,\n  ) => N.Class;\n  +parseDecorators: (allowExport?: boolean) => void;\n  +parseFunction: <T: N.NormalFunction>(\n    node: T,\n    statement?: number,\n    allowExpressionBody?: boolean,\n    isAsync?: boolean,\n  ) => T;\n  +parseFunctionParams: (node: N.Function, allowModifiers?: boolean) => void;\n  +takeDecorators: (node: N.HasDecorators) => void;\n  +parseBlockOrModuleBlockBody: (\n    body: N.Statement[],\n    directives: ?(N.Directive[]),\n    topLevel: boolean,\n    end: TokenType,\n    afterBlockParse?: (hasStrictModeDirective: boolean) => void\n  ) => void\n  +parseProgram: (\n    program: N.Program, end: TokenType, sourceType?: SourceType\n  ) => N.Program\n  */\n\n  // For object literal, check if property __proto__ has been used more than once.\n  // If the expression is a destructuring assignment, then __proto__ may appear\n  // multiple times. Otherwise, __proto__ is a duplicated key.\n\n  // For record expression, check if property __proto__ exists\n\n  checkProto(\n    prop: N.ObjectMember | N.SpreadElement,\n    isRecord: ?boolean,\n    protoRef: { used: boolean },\n    refExpressionErrors: ?ExpressionErrors,\n  ): void {\n    if (\n      prop.type === \"SpreadElement\" ||\n      this.isObjectMethod(prop) ||\n      prop.computed ||\n      // $FlowIgnore\n      prop.shorthand\n    ) {\n      return;\n    }\n\n    const key = prop.key;\n    // It is either an Identifier or a String/NumericLiteral\n    const name = key.type === \"Identifier\" ? key.name : key.value;\n\n    if (name === \"__proto__\") {\n      if (isRecord) {\n        this.raise(Errors.RecordNoProto, { at: key });\n        return;\n      }\n      if (protoRef.used) {\n        if (refExpressionErrors) {\n          // Store the first redefinition's position, otherwise ignore because\n          // we are parsing ambiguous pattern\n          if (refExpressionErrors.doubleProtoLoc === null) {\n            refExpressionErrors.doubleProtoLoc = key.loc.start;\n          }\n        } else {\n          this.raise(Errors.DuplicateProto, { at: key });\n        }\n      }\n\n      protoRef.used = true;\n    }\n  }\n\n  shouldExitDescending(expr: N.Expression, potentialArrowAt: number): boolean {\n    return (\n      expr.type === \"ArrowFunctionExpression\" && expr.start === potentialArrowAt\n    );\n  }\n\n  // Convenience method to parse an Expression only\n  getExpression(): N.Expression & N.ParserOutput {\n    this.enterInitialScopes();\n    this.nextToken();\n    const expr = this.parseExpression();\n    if (!this.match(tt.eof)) {\n      this.unexpected();\n    }\n    // Unlike parseTopLevel, we need to drain remaining commentStacks\n    // because the top level node is _not_ Program.\n    this.finalizeRemainingComments();\n    expr.comments = this.state.comments;\n    expr.errors = this.state.errors;\n    if (this.options.tokens) {\n      expr.tokens = this.tokens;\n    }\n    return expr;\n  }\n\n  // ### Expression parsing\n\n  // These nest, from the most general expression type at the top to\n  // 'atomic', nondivisible expression types at the bottom. Most of\n  // the functions will simply let the function (s) below them parse,\n  // and, *if* the syntactic construct they handle is present, wrap\n  // the AST node that the inner parser gave them in another node.\n\n  // Parse a full expression.\n  // - `disallowIn`\n  //   is used to forbid the `in` operator (in for loops initialization expressions)\n  //   When `disallowIn` is true, the production parameter [In] is not present.\n\n  // - `refExpressionErrors `\n  //   provides reference for storing '=' operator inside shorthand\n  //   property assignment in contexts where both object expression\n  //   and object pattern might appear (so it's possible to raise\n  //   delayed syntax error at correct position).\n\n  parseExpression(\n    disallowIn?: boolean,\n    refExpressionErrors?: ExpressionErrors,\n  ): N.Expression {\n    if (disallowIn) {\n      return this.disallowInAnd(() =>\n        this.parseExpressionBase(refExpressionErrors),\n      );\n    }\n    return this.allowInAnd(() => this.parseExpressionBase(refExpressionErrors));\n  }\n\n  // https://tc39.es/ecma262/#prod-Expression\n  parseExpressionBase(refExpressionErrors?: ExpressionErrors): N.Expression {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    const expr = this.parseMaybeAssign(refExpressionErrors);\n    if (this.match(tt.comma)) {\n      const node = this.startNodeAt(startPos, startLoc);\n      node.expressions = [expr];\n      while (this.eat(tt.comma)) {\n        node.expressions.push(this.parseMaybeAssign(refExpressionErrors));\n      }\n      this.toReferencedList(node.expressions);\n      return this.finishNode(node, \"SequenceExpression\");\n    }\n    return expr;\n  }\n\n  // Set [~In] parameter for assignment expression\n  parseMaybeAssignDisallowIn(\n    refExpressionErrors?: ?ExpressionErrors,\n    afterLeftParse?: Function,\n  ) {\n    return this.disallowInAnd(() =>\n      this.parseMaybeAssign(refExpressionErrors, afterLeftParse),\n    );\n  }\n\n  // Set [+In] parameter for assignment expression\n  parseMaybeAssignAllowIn(\n    refExpressionErrors?: ?ExpressionErrors,\n    afterLeftParse?: Function,\n  ) {\n    return this.allowInAnd(() =>\n      this.parseMaybeAssign(refExpressionErrors, afterLeftParse),\n    );\n  }\n\n  // This method is only used by\n  // the typescript and flow plugins.\n  setOptionalParametersError(\n    refExpressionErrors: ExpressionErrors,\n    resultError?: ParseError<any>,\n  ) {\n    refExpressionErrors.optionalParametersLoc =\n      resultError?.loc ?? this.state.startLoc;\n  }\n\n  // Parse an assignment expression. This includes applications of\n  // operators like `+=`.\n  // https://tc39.es/ecma262/#prod-AssignmentExpression\n  parseMaybeAssign(\n    refExpressionErrors?: ?ExpressionErrors,\n    afterLeftParse?: Function,\n  ): N.Expression {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    if (this.isContextual(tt._yield)) {\n      if (this.prodParam.hasYield) {\n        let left = this.parseYield();\n        if (afterLeftParse) {\n          left = afterLeftParse.call(this, left, startPos, startLoc);\n        }\n        return left;\n      }\n    }\n\n    let ownExpressionErrors;\n    if (refExpressionErrors) {\n      ownExpressionErrors = false;\n    } else {\n      refExpressionErrors = new ExpressionErrors();\n      ownExpressionErrors = true;\n    }\n    const { type } = this.state;\n\n    if (type === tt.parenL || tokenIsIdentifier(type)) {\n      this.state.potentialArrowAt = this.state.start;\n    }\n\n    let left = this.parseMaybeConditional(refExpressionErrors);\n    if (afterLeftParse) {\n      left = afterLeftParse.call(this, left, startPos, startLoc);\n    }\n    if (tokenIsAssignment(this.state.type)) {\n      const node = this.startNodeAt(startPos, startLoc);\n      const operator = this.state.value;\n      node.operator = operator;\n\n      if (this.match(tt.eq)) {\n        this.toAssignable(left, /* isLHS */ true);\n        node.left = left;\n\n        if (\n          refExpressionErrors.doubleProtoLoc != null &&\n          refExpressionErrors.doubleProtoLoc.index >= startPos\n        ) {\n          refExpressionErrors.doubleProtoLoc = null; // reset because double __proto__ is valid in assignment expression\n        }\n        if (\n          refExpressionErrors.shorthandAssignLoc != null &&\n          refExpressionErrors.shorthandAssignLoc.index >= startPos\n        ) {\n          refExpressionErrors.shorthandAssignLoc = null; // reset because shorthand default was used correctly\n        }\n        if (\n          refExpressionErrors.privateKeyLoc != null &&\n          refExpressionErrors.privateKeyLoc.index >= startPos\n        ) {\n          this.checkDestructuringPrivate(refExpressionErrors);\n          refExpressionErrors.privateKeyLoc = null; // reset because `({ #x: x })` is an assignable pattern\n        }\n      } else {\n        node.left = left;\n      }\n\n      this.next();\n      node.right = this.parseMaybeAssign();\n      this.checkLVal(left, {\n        in: this.finishNode(node, \"AssignmentExpression\"),\n      });\n      return node;\n    } else if (ownExpressionErrors) {\n      this.checkExpressionErrors(refExpressionErrors, true);\n    }\n\n    return left;\n  }\n\n  // Parse a ternary conditional (`?:`) operator.\n  // https://tc39.es/ecma262/#prod-ConditionalExpression\n\n  parseMaybeConditional(refExpressionErrors: ExpressionErrors): N.Expression {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    const potentialArrowAt = this.state.potentialArrowAt;\n    const expr = this.parseExprOps(refExpressionErrors);\n\n    if (this.shouldExitDescending(expr, potentialArrowAt)) {\n      return expr;\n    }\n\n    return this.parseConditional(expr, startPos, startLoc, refExpressionErrors);\n  }\n\n  parseConditional(\n    expr: N.Expression,\n    startPos: number,\n    startLoc: Position,\n    // eslint-disable-next-line no-unused-vars\n    refExpressionErrors?: ?ExpressionErrors,\n  ): N.Expression {\n    if (this.eat(tt.question)) {\n      const node = this.startNodeAt(startPos, startLoc);\n      node.test = expr;\n      node.consequent = this.parseMaybeAssignAllowIn();\n      this.expect(tt.colon);\n      node.alternate = this.parseMaybeAssign();\n      return this.finishNode(node, \"ConditionalExpression\");\n    }\n    return expr;\n  }\n\n  parseMaybeUnaryOrPrivate(\n    refExpressionErrors?: ExpressionErrors,\n  ): N.Expression | N.PrivateName {\n    return this.match(tt.privateName)\n      ? this.parsePrivateName()\n      : this.parseMaybeUnary(refExpressionErrors);\n  }\n\n  // Start the precedence parser.\n  // https://tc39.es/ecma262/#prod-ShortCircuitExpression\n\n  parseExprOps(refExpressionErrors: ExpressionErrors): N.Expression {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    const potentialArrowAt = this.state.potentialArrowAt;\n    const expr = this.parseMaybeUnaryOrPrivate(refExpressionErrors);\n\n    if (this.shouldExitDescending(expr, potentialArrowAt)) {\n      return expr;\n    }\n\n    return this.parseExprOp(expr, startPos, startLoc, -1);\n  }\n\n  // Parse binary operators with the operator precedence parsing\n  // algorithm. `left` is the left-hand side of the operator.\n  // `minPrec` provides context that allows the function to stop and\n  // defer further parser to one of its callers when it encounters an\n  // operator that has a lower precedence than the set it is parsing.\n\n  parseExprOp(\n    left: N.Expression | N.PrivateName,\n    leftStartPos: number,\n    leftStartLoc: Position,\n    minPrec: number,\n  ): N.Expression {\n    if (this.isPrivateName(left)) {\n      // https://tc39.es/ecma262/#prod-RelationalExpression\n      // RelationalExpression [In, Yield, Await]\n      //   [+In] PrivateIdentifier in ShiftExpression[?Yield, ?Await]\n\n      const value = this.getPrivateNameSV(left);\n\n      if (\n        minPrec >= tokenOperatorPrecedence(tt._in) ||\n        !this.prodParam.hasIn ||\n        !this.match(tt._in)\n      ) {\n        this.raise(Errors.PrivateInExpectedIn, {\n          at: left,\n          identifierName: value,\n        });\n      }\n\n      this.classScope.usePrivateName(value, left.loc.start);\n    }\n\n    const op = this.state.type;\n    if (tokenIsOperator(op) && (this.prodParam.hasIn || !this.match(tt._in))) {\n      let prec = tokenOperatorPrecedence(op);\n      if (prec > minPrec) {\n        if (op === tt.pipeline) {\n          this.expectPlugin(\"pipelineOperator\");\n          if (this.state.inFSharpPipelineDirectBody) {\n            return left;\n          }\n          this.checkPipelineAtInfixOperator(left, leftStartLoc);\n        }\n        const node = this.startNodeAt(leftStartPos, leftStartLoc);\n        node.left = left;\n        node.operator = this.state.value;\n\n        const logical = op === tt.logicalOR || op === tt.logicalAND;\n        const coalesce = op === tt.nullishCoalescing;\n\n        if (coalesce) {\n          // Handle the precedence of `tt.coalesce` as equal to the range of logical expressions.\n          // In other words, `node.right` shouldn't contain logical expressions in order to check the mixed error.\n          prec = tokenOperatorPrecedence(tt.logicalAND);\n        }\n\n        this.next();\n\n        if (\n          op === tt.pipeline &&\n          this.hasPlugin([\"pipelineOperator\", { proposal: \"minimal\" }])\n        ) {\n          if (this.state.type === tt._await && this.prodParam.hasAwait) {\n            throw this.raise(Errors.UnexpectedAwaitAfterPipelineBody, {\n              at: this.state.startLoc,\n            });\n          }\n        }\n\n        node.right = this.parseExprOpRightExpr(op, prec);\n        this.finishNode(\n          node,\n          logical || coalesce ? \"LogicalExpression\" : \"BinaryExpression\",\n        );\n        /* this check is for all ?? operators\n         * a ?? b && c for this example\n         * when op is coalesce and nextOp is logical (&&), throw at the pos of nextOp that it can not be mixed.\n         * Symmetrically it also throws when op is logical and nextOp is coalesce\n         */\n        const nextOp = this.state.type;\n        if (\n          (coalesce && (nextOp === tt.logicalOR || nextOp === tt.logicalAND)) ||\n          (logical && nextOp === tt.nullishCoalescing)\n        ) {\n          throw this.raise(Errors.MixingCoalesceWithLogical, {\n            at: this.state.startLoc,\n          });\n        }\n\n        return this.parseExprOp(node, leftStartPos, leftStartLoc, minPrec);\n      }\n    }\n    return left;\n  }\n\n  // Helper function for `parseExprOp`. Parse the right-hand side of binary-\n  // operator expressions, then apply any operator-specific functions.\n\n  parseExprOpRightExpr(op: TokenType, prec: number): N.Expression {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    switch (op) {\n      case tt.pipeline:\n        switch (this.getPluginOption(\"pipelineOperator\", \"proposal\")) {\n          case \"hack\":\n            return this.withTopicBindingContext(() => {\n              return this.parseHackPipeBody();\n            });\n\n          case \"smart\":\n            return this.withTopicBindingContext(() => {\n              if (this.prodParam.hasYield && this.isContextual(tt._yield)) {\n                throw this.raise(Errors.PipeBodyIsTighter, {\n                  at: this.state.startLoc,\n                });\n              }\n              return this.parseSmartPipelineBodyInStyle(\n                this.parseExprOpBaseRightExpr(op, prec),\n                startPos,\n                startLoc,\n              );\n            });\n\n          case \"fsharp\":\n            return this.withSoloAwaitPermittingContext(() => {\n              return this.parseFSharpPipelineBody(prec);\n            });\n        }\n\n      // Falls through.\n      default:\n        return this.parseExprOpBaseRightExpr(op, prec);\n    }\n  }\n\n  // Helper function for `parseExprOpRightExpr`. Parse the right-hand side of\n  // binary-operator expressions without applying any operator-specific functions.\n\n  parseExprOpBaseRightExpr(op: TokenType, prec: number): N.Expression {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n\n    return this.parseExprOp(\n      this.parseMaybeUnaryOrPrivate(),\n      startPos,\n      startLoc,\n      tokenIsRightAssociative(op) ? prec - 1 : prec,\n    );\n  }\n\n  parseHackPipeBody(): N.Expression {\n    const { startLoc } = this.state;\n    const body = this.parseMaybeAssign();\n    const requiredParentheses = UnparenthesizedPipeBodyDescriptions.has(\n      body.type,\n    );\n\n    // TODO: Check how to handle type casts in Flow and TS once they are supported\n    if (requiredParentheses && !body.extra?.parenthesized) {\n      this.raise(Errors.PipeUnparenthesizedBody, {\n        at: startLoc,\n        type: body.type,\n      });\n    }\n    if (!this.topicReferenceWasUsedInCurrentContext()) {\n      // A Hack pipe body must use the topic reference at least once.\n      this.raise(Errors.PipeTopicUnused, { at: startLoc });\n    }\n\n    return body;\n  }\n\n  checkExponentialAfterUnary(node: N.AwaitExpression | N.UnaryExpression) {\n    if (this.match(tt.exponent)) {\n      this.raise(Errors.UnexpectedTokenUnaryExponentiation, {\n        at: node.argument,\n      });\n    }\n  }\n\n  // Parse unary operators, both prefix and postfix.\n  // https://tc39.es/ecma262/#prod-UnaryExpression\n  parseMaybeUnary(\n    refExpressionErrors: ?ExpressionErrors,\n    sawUnary?: boolean,\n  ): N.Expression {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    const isAwait = this.isContextual(tt._await);\n\n    if (isAwait && this.isAwaitAllowed()) {\n      this.next();\n      const expr = this.parseAwait(startPos, startLoc);\n      if (!sawUnary) this.checkExponentialAfterUnary(expr);\n      return expr;\n    }\n    const update = this.match(tt.incDec);\n    const node = this.startNode();\n    if (tokenIsPrefix(this.state.type)) {\n      node.operator = this.state.value;\n      node.prefix = true;\n\n      if (this.match(tt._throw)) {\n        this.expectPlugin(\"throwExpressions\");\n      }\n      const isDelete = this.match(tt._delete);\n      this.next();\n\n      node.argument = this.parseMaybeUnary(null, true);\n\n      this.checkExpressionErrors(refExpressionErrors, true);\n\n      if (this.state.strict && isDelete) {\n        const arg = node.argument;\n\n        if (arg.type === \"Identifier\") {\n          this.raise(Errors.StrictDelete, { at: node });\n        } else if (this.hasPropertyAsPrivateName(arg)) {\n          this.raise(Errors.DeletePrivateField, { at: node });\n        }\n      }\n\n      if (!update) {\n        if (!sawUnary) this.checkExponentialAfterUnary(node);\n        return this.finishNode(node, \"UnaryExpression\");\n      }\n    }\n\n    const expr = this.parseUpdate(node, update, refExpressionErrors);\n\n    if (isAwait) {\n      const { type } = this.state;\n      const startsExpr = this.hasPlugin(\"v8intrinsic\")\n        ? tokenCanStartExpression(type)\n        : tokenCanStartExpression(type) && !this.match(tt.modulo);\n      if (startsExpr && !this.isAmbiguousAwait()) {\n        this.raiseOverwrite(Errors.AwaitNotInAsyncContext, { at: startLoc });\n        return this.parseAwait(startPos, startLoc);\n      }\n    }\n\n    return expr;\n  }\n\n  // https://tc39.es/ecma262/#prod-UpdateExpression\n  parseUpdate(\n    node: N.Expression,\n    update: boolean,\n    refExpressionErrors: ?ExpressionErrors,\n  ): N.Expression {\n    if (update) {\n      this.checkLVal(node.argument, {\n        in: this.finishNode(node, \"UpdateExpression\"),\n      });\n      return node;\n    }\n\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    let expr = this.parseExprSubscripts(refExpressionErrors);\n    if (this.checkExpressionErrors(refExpressionErrors, false)) return expr;\n    while (tokenIsPostfix(this.state.type) && !this.canInsertSemicolon()) {\n      const node = this.startNodeAt(startPos, startLoc);\n      node.operator = this.state.value;\n      node.prefix = false;\n      node.argument = expr;\n      this.next();\n      this.checkLVal(expr, {\n        in: (expr = this.finishNode(node, \"UpdateExpression\")),\n      });\n    }\n    return expr;\n  }\n\n  // Parse call, dot, and `[]`-subscript expressions.\n  // https://tc39.es/ecma262/#prod-LeftHandSideExpression\n  parseExprSubscripts(refExpressionErrors: ?ExpressionErrors): N.Expression {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    const potentialArrowAt = this.state.potentialArrowAt;\n    const expr = this.parseExprAtom(refExpressionErrors);\n\n    if (this.shouldExitDescending(expr, potentialArrowAt)) {\n      return expr;\n    }\n\n    return this.parseSubscripts(expr, startPos, startLoc);\n  }\n\n  parseSubscripts(\n    base: N.Expression,\n    startPos: number,\n    startLoc: Position,\n    noCalls?: ?boolean,\n  ): N.Expression {\n    const state = {\n      optionalChainMember: false,\n      maybeAsyncArrow: this.atPossibleAsyncArrow(base),\n      stop: false,\n    };\n    do {\n      base = this.parseSubscript(base, startPos, startLoc, noCalls, state);\n\n      // After parsing a subscript, this isn't \"async\" for sure.\n      state.maybeAsyncArrow = false;\n    } while (!state.stop);\n    return base;\n  }\n\n  /**\n   * @param state Set 'state.stop = true' to indicate that we should stop parsing subscripts.\n   *   state.optionalChainMember to indicate that the member is currently in OptionalChain\n   */\n  parseSubscript(\n    base: N.Expression,\n    startPos: number,\n    startLoc: Position,\n    noCalls: ?boolean,\n    state: N.ParseSubscriptState,\n  ): N.Expression {\n    const { type } = this.state;\n    if (!noCalls && type === tt.doubleColon) {\n      return this.parseBind(base, startPos, startLoc, noCalls, state);\n    } else if (tokenIsTemplate(type)) {\n      return this.parseTaggedTemplateExpression(\n        base,\n        startPos,\n        startLoc,\n        state,\n      );\n    }\n\n    let optional = false;\n\n    if (type === tt.questionDot) {\n      if (noCalls && this.lookaheadCharCode() === charCodes.leftParenthesis) {\n        // stop at `?.` when parsing `new a?.()`\n        state.stop = true;\n        return base;\n      }\n      state.optionalChainMember = optional = true;\n      this.next();\n    }\n\n    if (!noCalls && this.match(tt.parenL)) {\n      return this.parseCoverCallAndAsyncArrowHead(\n        base,\n        startPos,\n        startLoc,\n        state,\n        optional,\n      );\n    } else {\n      const computed = this.eat(tt.bracketL);\n      if (computed || optional || this.eat(tt.dot)) {\n        return this.parseMember(\n          base,\n          startPos,\n          startLoc,\n          state,\n          computed,\n          optional,\n        );\n      } else {\n        state.stop = true;\n        return base;\n      }\n    }\n  }\n\n  // base[?Yield, ?Await] [ Expression[+In, ?Yield, ?Await] ]\n  // base[?Yield, ?Await] . IdentifierName\n  // base[?Yield, ?Await] . PrivateIdentifier\n  //   where `base` is one of CallExpression, MemberExpression and OptionalChain\n  parseMember(\n    base: N.Expression,\n    startPos: number,\n    startLoc: Position,\n    state: N.ParseSubscriptState,\n    computed: boolean,\n    optional: boolean,\n  ): N.OptionalMemberExpression | N.MemberExpression {\n    const node = this.startNodeAt(startPos, startLoc);\n    node.object = base;\n    node.computed = computed;\n    if (computed) {\n      node.property = this.parseExpression();\n      this.expect(tt.bracketR);\n    } else if (this.match(tt.privateName)) {\n      if (base.type === \"Super\") {\n        this.raise(Errors.SuperPrivateField, { at: startLoc });\n      }\n      this.classScope.usePrivateName(this.state.value, this.state.startLoc);\n      node.property = this.parsePrivateName();\n    } else {\n      node.property = this.parseIdentifier(true);\n    }\n\n    if (state.optionalChainMember) {\n      node.optional = optional;\n      return this.finishNode(node, \"OptionalMemberExpression\");\n    } else {\n      return this.finishNode(node, \"MemberExpression\");\n    }\n  }\n\n  // https://github.com/tc39/proposal-bind-operator#syntax\n  parseBind(\n    base: N.Expression,\n    startPos: number,\n    startLoc: Position,\n    noCalls: ?boolean,\n    state: N.ParseSubscriptState,\n  ): N.Expression {\n    const node = this.startNodeAt(startPos, startLoc);\n    node.object = base;\n    this.next(); // eat '::'\n    node.callee = this.parseNoCallExpr();\n    state.stop = true;\n    return this.parseSubscripts(\n      this.finishNode(node, \"BindExpression\"),\n      startPos,\n      startLoc,\n      noCalls,\n    );\n  }\n\n  // https://tc39.es/ecma262/#prod-CoverCallExpressionAndAsyncArrowHead\n  // CoverCallExpressionAndAsyncArrowHead\n  // CallExpression[?Yield, ?Await] Arguments[?Yield, ?Await]\n  // OptionalChain[?Yield, ?Await] Arguments[?Yield, ?Await]\n  parseCoverCallAndAsyncArrowHead(\n    base: N.Expression,\n    startPos: number,\n    startLoc: Position,\n    state: N.ParseSubscriptState,\n    optional: boolean,\n  ): N.Expression {\n    const oldMaybeInArrowParameters = this.state.maybeInArrowParameters;\n    let refExpressionErrors = null;\n\n    this.state.maybeInArrowParameters = true;\n    this.next(); // eat `(`\n\n    let node = this.startNodeAt(startPos, startLoc);\n    node.callee = base;\n    const { maybeAsyncArrow, optionalChainMember } = state;\n\n    if (maybeAsyncArrow) {\n      this.expressionScope.enter(newAsyncArrowScope());\n      refExpressionErrors = new ExpressionErrors();\n    }\n\n    if (optionalChainMember) {\n      node.optional = optional;\n    }\n\n    if (optional) {\n      node.arguments = this.parseCallExpressionArguments(tt.parenR);\n    } else {\n      node.arguments = this.parseCallExpressionArguments(\n        tt.parenR,\n        base.type === \"Import\",\n        base.type !== \"Super\",\n        node,\n        refExpressionErrors,\n      );\n    }\n    this.finishCallExpression(node, optionalChainMember);\n\n    if (maybeAsyncArrow && this.shouldParseAsyncArrow() && !optional) {\n      /*:: invariant(refExpressionErrors != null) */\n      state.stop = true;\n      this.checkDestructuringPrivate(refExpressionErrors);\n      this.expressionScope.validateAsPattern();\n      this.expressionScope.exit();\n      node = this.parseAsyncArrowFromCallExpression(\n        this.startNodeAt(startPos, startLoc),\n        node,\n      );\n    } else {\n      if (maybeAsyncArrow) {\n        this.checkExpressionErrors(refExpressionErrors, true);\n        this.expressionScope.exit();\n      }\n      this.toReferencedArguments(node);\n    }\n\n    this.state.maybeInArrowParameters = oldMaybeInArrowParameters;\n\n    return node;\n  }\n\n  toReferencedArguments(\n    node: N.CallExpression | N.OptionalCallExpression,\n    isParenthesizedExpr?: boolean,\n  ) {\n    this.toReferencedListDeep(node.arguments, isParenthesizedExpr);\n  }\n\n  // MemberExpression [?Yield, ?Await] TemplateLiteral[?Yield, ?Await, +Tagged]\n  // CallExpression [?Yield, ?Await] TemplateLiteral[?Yield, ?Await, +Tagged]\n  parseTaggedTemplateExpression(\n    base: N.Expression,\n    startPos: number,\n    startLoc: Position,\n    state: N.ParseSubscriptState,\n  ): N.TaggedTemplateExpression {\n    const node: N.TaggedTemplateExpression = this.startNodeAt(\n      startPos,\n      startLoc,\n    );\n    node.tag = base;\n    node.quasi = this.parseTemplate(true);\n    if (state.optionalChainMember) {\n      this.raise(Errors.OptionalChainingNoTemplate, { at: startLoc });\n    }\n    return this.finishNode(node, \"TaggedTemplateExpression\");\n  }\n\n  atPossibleAsyncArrow(base: N.Expression): boolean {\n    return (\n      base.type === \"Identifier\" &&\n      base.name === \"async\" &&\n      this.state.lastTokEndLoc.index === base.end &&\n      !this.canInsertSemicolon() &&\n      // check there are no escape sequences, such as \\u{61}sync\n      base.end - base.start === 5 &&\n      base.start === this.state.potentialArrowAt\n    );\n  }\n\n  finishCallExpression<T: N.CallExpression | N.OptionalCallExpression>(\n    node: T,\n    optional: boolean,\n  ): N.Expression {\n    if (node.callee.type === \"Import\") {\n      if (node.arguments.length === 2) {\n        if (process.env.BABEL_8_BREAKING) {\n          this.expectPlugin(\"importAssertions\");\n        } else {\n          if (!this.hasPlugin(\"moduleAttributes\")) {\n            this.expectPlugin(\"importAssertions\");\n          }\n        }\n      }\n      if (node.arguments.length === 0 || node.arguments.length > 2) {\n        this.raise(Errors.ImportCallArity, {\n          at: node,\n          maxArgumentCount:\n            this.hasPlugin(\"importAssertions\") ||\n            this.hasPlugin(\"moduleAttributes\")\n              ? 2\n              : 1,\n        });\n      } else {\n        for (const arg of node.arguments) {\n          if (arg.type === \"SpreadElement\") {\n            this.raise(Errors.ImportCallSpreadArgument, { at: arg });\n          }\n        }\n      }\n    }\n    return this.finishNode(\n      node,\n      optional ? \"OptionalCallExpression\" : \"CallExpression\",\n    );\n  }\n\n  parseCallExpressionArguments(\n    close: TokenType,\n    dynamicImport?: boolean,\n    allowPlaceholder?: boolean,\n    nodeForExtra?: ?N.Node,\n    refExpressionErrors?: ?ExpressionErrors,\n  ): $ReadOnlyArray<?N.Expression> {\n    const elts = [];\n    let first = true;\n    const oldInFSharpPipelineDirectBody = this.state.inFSharpPipelineDirectBody;\n    this.state.inFSharpPipelineDirectBody = false;\n\n    while (!this.eat(close)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(tt.comma);\n        if (this.match(close)) {\n          if (\n            dynamicImport &&\n            !this.hasPlugin(\"importAssertions\") &&\n            !this.hasPlugin(\"moduleAttributes\")\n          ) {\n            this.raise(Errors.ImportCallArgumentTrailingComma, {\n              at: this.state.lastTokStartLoc,\n            });\n          }\n          if (nodeForExtra) {\n            this.addTrailingCommaExtraToNode(nodeForExtra);\n          }\n          this.next();\n          break;\n        }\n      }\n\n      elts.push(\n        this.parseExprListItem(false, refExpressionErrors, allowPlaceholder),\n      );\n    }\n\n    this.state.inFSharpPipelineDirectBody = oldInFSharpPipelineDirectBody;\n\n    return elts;\n  }\n\n  shouldParseAsyncArrow(): boolean {\n    return this.match(tt.arrow) && !this.canInsertSemicolon();\n  }\n\n  parseAsyncArrowFromCallExpression(\n    node: N.ArrowFunctionExpression,\n    call: N.CallExpression,\n  ): N.ArrowFunctionExpression {\n    this.resetPreviousNodeTrailingComments(call);\n    this.expect(tt.arrow);\n    this.parseArrowExpression(\n      node,\n      call.arguments,\n      true,\n      call.extra?.trailingCommaLoc,\n    );\n    // mark inner comments of `async()` as inner comments of `async () =>`\n    if (call.innerComments) {\n      setInnerComments(node, call.innerComments);\n    }\n    // mark trailing comments of `async` to be inner comments\n    if (call.callee.trailingComments) {\n      setInnerComments(node, call.callee.trailingComments);\n    }\n    return node;\n  }\n\n  // Parse a no-call expression (like argument of `new` or `::` operators).\n  // https://tc39.es/ecma262/#prod-MemberExpression\n  parseNoCallExpr(): N.Expression {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    return this.parseSubscripts(this.parseExprAtom(), startPos, startLoc, true);\n  }\n\n  // Parse an atomic expression — either a single token that is an\n  // expression, an expression started by a keyword like `function` or\n  // `new`, or an expression wrapped in punctuation like `()`, `[]`,\n  // or `{}`.\n\n  // https://tc39.es/ecma262/#prod-PrimaryExpression\n  // https://tc39.es/ecma262/#prod-AsyncArrowFunction\n  // PrimaryExpression\n  // Super\n  // Import\n  // AsyncArrowFunction\n\n  parseExprAtom(refExpressionErrors?: ?ExpressionErrors): N.Expression {\n    let node;\n\n    const { type } = this.state;\n    switch (type) {\n      case tt._super:\n        return this.parseSuper();\n\n      case tt._import:\n        node = this.startNode();\n        this.next();\n\n        if (this.match(tt.dot)) {\n          return this.parseImportMetaProperty(node);\n        }\n\n        if (!this.match(tt.parenL)) {\n          this.raise(Errors.UnsupportedImport, {\n            at: this.state.lastTokStartLoc,\n          });\n        }\n        return this.finishNode(node, \"Import\");\n      case tt._this:\n        node = this.startNode();\n        this.next();\n        return this.finishNode(node, \"ThisExpression\");\n\n      case tt._do: {\n        return this.parseDo(this.startNode(), false);\n      }\n\n      case tt.slash:\n      case tt.slashAssign: {\n        this.readRegexp();\n        return this.parseRegExpLiteral(this.state.value);\n      }\n\n      case tt.num:\n        return this.parseNumericLiteral(this.state.value);\n\n      case tt.bigint:\n        return this.parseBigIntLiteral(this.state.value);\n\n      case tt.decimal:\n        return this.parseDecimalLiteral(this.state.value);\n\n      case tt.string:\n        return this.parseStringLiteral(this.state.value);\n\n      case tt._null:\n        return this.parseNullLiteral();\n\n      case tt._true:\n        return this.parseBooleanLiteral(true);\n      case tt._false:\n        return this.parseBooleanLiteral(false);\n\n      case tt.parenL: {\n        const canBeArrow = this.state.potentialArrowAt === this.state.start;\n        return this.parseParenAndDistinguishExpression(canBeArrow);\n      }\n\n      case tt.bracketBarL:\n      case tt.bracketHashL: {\n        return this.parseArrayLike(\n          this.state.type === tt.bracketBarL ? tt.bracketBarR : tt.bracketR,\n          /* canBePattern */ false,\n          /* isTuple */ true,\n        );\n      }\n      case tt.bracketL: {\n        return this.parseArrayLike(\n          tt.bracketR,\n          /* canBePattern */ true,\n          /* isTuple */ false,\n          refExpressionErrors,\n        );\n      }\n      case tt.braceBarL:\n      case tt.braceHashL: {\n        return this.parseObjectLike(\n          this.state.type === tt.braceBarL ? tt.braceBarR : tt.braceR,\n          /* isPattern */ false,\n          /* isRecord */ true,\n        );\n      }\n      case tt.braceL: {\n        return this.parseObjectLike(\n          tt.braceR,\n          /* isPattern */ false,\n          /* isRecord */ false,\n          refExpressionErrors,\n        );\n      }\n      case tt._function:\n        return this.parseFunctionOrFunctionSent();\n\n      case tt.at:\n        this.parseDecorators();\n      // fall through\n      case tt._class:\n        node = this.startNode();\n        this.takeDecorators(node);\n        return this.parseClass(node, false);\n\n      case tt._new:\n        return this.parseNewOrNewTarget();\n\n      case tt.templateNonTail:\n      case tt.templateTail:\n        return this.parseTemplate(false);\n\n      // BindExpression[Yield]\n      //   :: MemberExpression[?Yield]\n      case tt.doubleColon: {\n        node = this.startNode();\n        this.next();\n        node.object = null;\n        const callee = (node.callee = this.parseNoCallExpr());\n        if (callee.type === \"MemberExpression\") {\n          return this.finishNode(node, \"BindExpression\");\n        } else {\n          throw this.raise(Errors.UnsupportedBind, { at: callee });\n        }\n      }\n\n      case tt.privateName: {\n        // Standalone private names are only allowed in \"#x in obj\"\n        // expressions, and they are directly handled by callers of\n        // parseExprOp. If we reach this, the input is always invalid.\n        // We can throw a better error message and recover, rather than\n        // just throwing \"Unexpected token\" (which is the default\n        // behavior of this big switch statement).\n        this.raise(Errors.PrivateInExpectedIn, {\n          at: this.state.startLoc,\n          identifierName: this.state.value,\n        });\n        return this.parsePrivateName();\n      }\n\n      case tt.moduloAssign: {\n        return this.parseTopicReferenceThenEqualsSign(tt.modulo, \"%\");\n      }\n\n      case tt.xorAssign: {\n        return this.parseTopicReferenceThenEqualsSign(tt.bitwiseXOR, \"^\");\n      }\n\n      case tt.doubleCaret:\n      case tt.doubleAt: {\n        return this.parseTopicReference(\"hack\");\n      }\n\n      case tt.bitwiseXOR:\n      case tt.modulo:\n      case tt.hash: {\n        const pipeProposal = this.getPluginOption(\n          \"pipelineOperator\",\n          \"proposal\",\n        );\n\n        if (pipeProposal) {\n          return this.parseTopicReference(pipeProposal);\n        } else {\n          throw this.unexpected();\n        }\n      }\n\n      case tt.lt: {\n        const lookaheadCh = this.input.codePointAt(this.nextTokenStart());\n        if (\n          isIdentifierStart(lookaheadCh) || // Element/Type Parameter <foo>\n          lookaheadCh === charCodes.greaterThan // Fragment <>\n        ) {\n          this.expectOnePlugin([\"jsx\", \"flow\", \"typescript\"]);\n          break;\n        } else {\n          throw this.unexpected();\n        }\n      }\n\n      default:\n        if (tokenIsIdentifier(type)) {\n          if (\n            this.isContextual(tt._module) &&\n            this.lookaheadCharCode() === charCodes.leftCurlyBrace &&\n            !this.hasFollowingLineBreak()\n          ) {\n            return this.parseModuleExpression();\n          }\n          const canBeArrow = this.state.potentialArrowAt === this.state.start;\n          const containsEsc = this.state.containsEsc;\n          const id = this.parseIdentifier();\n\n          if (\n            !containsEsc &&\n            id.name === \"async\" &&\n            !this.canInsertSemicolon()\n          ) {\n            const { type } = this.state;\n            if (type === tt._function) {\n              this.resetPreviousNodeTrailingComments(id);\n              this.next();\n              return this.parseFunction(\n                this.startNodeAtNode(id),\n                undefined,\n                true,\n              );\n            } else if (tokenIsIdentifier(type)) {\n              // If the next token begins with \"=\", commit to parsing an async\n              // arrow function. (Peeking ahead for \"=\" lets us avoid a more\n              // expensive full-token lookahead on this common path.)\n              if (this.lookaheadCharCode() === charCodes.equalsTo) {\n                // although `id` is not used in async arrow unary function,\n                // we don't need to reset `async`'s trailing comments because\n                // it will be attached to the upcoming async arrow binding identifier\n                return this.parseAsyncArrowUnaryFunction(\n                  this.startNodeAtNode(id),\n                );\n              } else {\n                // Otherwise, treat \"async\" as an identifier and let calling code\n                // deal with the current tt.name token.\n                return id;\n              }\n            } else if (type === tt._do) {\n              this.resetPreviousNodeTrailingComments(id);\n              return this.parseDo(this.startNodeAtNode(id), true);\n            }\n          }\n\n          if (\n            canBeArrow &&\n            this.match(tt.arrow) &&\n            !this.canInsertSemicolon()\n          ) {\n            this.next();\n            return this.parseArrowExpression(\n              this.startNodeAtNode(id),\n              [id],\n              false,\n            );\n          }\n\n          return id;\n        } else {\n          throw this.unexpected();\n        }\n    }\n  }\n\n  // This helper method should only be called\n  // when the parser has reached a potential Hack pipe topic token\n  // that is followed by an equals sign.\n  // See <https://github.com/js-choi/proposal-hack-pipes>.\n  // If we find ^= or %= in an expression position\n  // (i.e., the tt.moduloAssign or tt.xorAssign token types), and if the\n  // Hack-pipes proposal is active with ^ or % as its topicToken, then the ^ or\n  // % could be the topic token (e.g., in x |> ^==y or x |> ^===y), and so we\n  // reparse the current token as ^ or %.\n  // Otherwise, this throws an unexpected-token error.\n  parseTopicReferenceThenEqualsSign(\n    topicTokenType: TokenType,\n    topicTokenValue: string,\n  ): N.Expression {\n    const pipeProposal = this.getPluginOption(\"pipelineOperator\", \"proposal\");\n\n    if (pipeProposal) {\n      // Set the most-recent token to be a topic token\n      // given by the tokenType and tokenValue.\n      // Now the next readToken() call (in parseTopicReference)\n      // will consume that “topic token”.\n      this.state.type = topicTokenType;\n      this.state.value = topicTokenValue;\n      // Rewind the tokenizer to the end of the “topic token”, so that the\n      // following token starts at the equals sign after that topic token.\n      this.state.pos--;\n      this.state.end--;\n      // This is safe to do since the preceding character was either ^ or %, and\n      // thus not a newline.\n      this.state.endLoc = createPositionWithColumnOffset(this.state.endLoc, -1);\n      // Now actually consume the topic token.\n      return this.parseTopicReference(pipeProposal);\n    } else {\n      throw this.unexpected();\n    }\n  }\n\n  // This helper method should only be called\n  // when the proposal-pipeline-operator plugin is active,\n  // and when the parser has reached a potential Hack pipe topic token.\n  // Although a pipe-operator proposal is assumed to be active,\n  // its configuration might not match the current token’s type.\n  // See <https://github.com/js-choi/proposal-hack-pipes>.\n  parseTopicReference(pipeProposal: string): N.Expression {\n    const node = this.startNode();\n    const startLoc = this.state.startLoc;\n    const tokenType = this.state.type;\n\n    // Consume the current token.\n    this.next();\n\n    // If the pipe-operator plugin’s configuration matches the current token’s type,\n    // then this will return `node`, will have been finished as a topic reference.\n    // Otherwise, this will throw a `PipeTopicUnconfiguredToken` error.\n    return this.finishTopicReference(node, startLoc, pipeProposal, tokenType);\n  }\n\n  // This helper method attempts to finish the given `node`\n  // into a topic-reference node for the given `pipeProposal`.\n  // See <https://github.com/js-choi/proposal-hack-pipes>.\n  //\n  // The method assumes that any topic token was consumed before it was called.\n  //\n  // If the `pipelineOperator` plugin is active,\n  // and if the given `tokenType` matches the plugin’s configuration,\n  // then this method will return the finished `node`.\n  //\n  // If the `pipelineOperator` plugin is active,\n  // but if the given `tokenType` does not match the plugin’s configuration,\n  // then this method will throw a `PipeTopicUnconfiguredToken` error.\n  finishTopicReference(\n    node: N.Node,\n    startLoc: Position,\n    pipeProposal: string,\n    tokenType: TokenType,\n  ): N.Expression {\n    if (\n      this.testTopicReferenceConfiguration(pipeProposal, startLoc, tokenType)\n    ) {\n      // The token matches the plugin’s configuration.\n      // The token is therefore a topic reference.\n\n      // Determine the node type for the topic reference\n      // that is appropriate for the active pipe-operator proposal.\n      const nodeType =\n        pipeProposal === \"smart\"\n          ? \"PipelinePrimaryTopicReference\"\n          : // The proposal must otherwise be \"hack\",\n            // as enforced by testTopicReferenceConfiguration.\n            \"TopicReference\";\n\n      if (!this.topicReferenceIsAllowedInCurrentContext()) {\n        this.raise(\n          // The topic reference is not allowed in the current context:\n          // it is outside of a pipe body.\n          // Raise recoverable errors.\n          pipeProposal === \"smart\"\n            ? Errors.PrimaryTopicNotAllowed\n            : // In this case, `pipeProposal === \"hack\"` is true.\n              Errors.PipeTopicUnbound,\n          { at: startLoc },\n        );\n      }\n\n      // Register the topic reference so that its pipe body knows\n      // that its topic was used at least once.\n      this.registerTopicReference();\n\n      return this.finishNode(node, nodeType);\n    } else {\n      // The token does not match the plugin’s configuration.\n      throw this.raise(Errors.PipeTopicUnconfiguredToken, {\n        at: startLoc,\n        token: tokenLabelName(tokenType),\n      });\n    }\n  }\n\n  // This helper method tests whether the given token type\n  // matches the pipelineOperator parser plugin’s configuration.\n  // If the active pipe proposal is Hack style,\n  // and if the given token is the same as the plugin configuration’s `topicToken`,\n  // then this is a valid topic reference.\n  // If the active pipe proposal is smart mix,\n  // then the topic token must always be `#`.\n  // If the active pipe proposal is neither (e.g., \"minimal\" or \"fsharp\"),\n  // then an error is thrown.\n  testTopicReferenceConfiguration(\n    pipeProposal: string,\n    startLoc: Position,\n    tokenType: TokenType,\n  ): boolean {\n    switch (pipeProposal) {\n      case \"hack\": {\n        return this.hasPlugin([\n          \"pipelineOperator\",\n          {\n            topicToken: tokenLabelName(tokenType),\n          },\n        ]);\n      }\n      case \"smart\":\n        return tokenType === tt.hash;\n      default:\n        throw this.raise(Errors.PipeTopicRequiresHackPipes, { at: startLoc });\n    }\n  }\n\n  // async [no LineTerminator here] AsyncArrowBindingIdentifier[?Yield] [no LineTerminator here] => AsyncConciseBody[?In]\n  parseAsyncArrowUnaryFunction(node: N.Node): N.ArrowFunctionExpression {\n    // We don't need to push a new ParameterDeclarationScope here since we are sure\n    // 1) it is an async arrow, 2) no biding pattern is allowed in params\n    this.prodParam.enter(functionFlags(true, this.prodParam.hasYield));\n    const params = [this.parseIdentifier()];\n    this.prodParam.exit();\n    if (this.hasPrecedingLineBreak()) {\n      this.raise(Errors.LineTerminatorBeforeArrow, {\n        at: this.state.curPosition(),\n      });\n    }\n    this.expect(tt.arrow);\n    // let foo = async bar => {};\n    this.parseArrowExpression(node, params, true);\n    return node;\n  }\n\n  // https://github.com/tc39/proposal-do-expressions\n  // https://github.com/tc39/proposal-async-do-expressions\n  parseDo(node: N.Node, isAsync: boolean): N.DoExpression {\n    this.expectPlugin(\"doExpressions\");\n    if (isAsync) {\n      this.expectPlugin(\"asyncDoExpressions\");\n    }\n    node.async = isAsync;\n    this.next(); // eat `do`\n    const oldLabels = this.state.labels;\n    this.state.labels = [];\n    if (isAsync) {\n      // AsyncDoExpression :\n      // async [no LineTerminator here] do Block[~Yield, +Await, ~Return]\n      this.prodParam.enter(PARAM_AWAIT);\n      node.body = this.parseBlock();\n      this.prodParam.exit();\n    } else {\n      node.body = this.parseBlock();\n    }\n\n    this.state.labels = oldLabels;\n    return this.finishNode(node, \"DoExpression\");\n  }\n\n  // Parse the `super` keyword\n  parseSuper(): N.Super {\n    const node = this.startNode();\n    this.next(); // eat `super`\n    if (\n      this.match(tt.parenL) &&\n      !this.scope.allowDirectSuper &&\n      !this.options.allowSuperOutsideMethod\n    ) {\n      this.raise(Errors.SuperNotAllowed, { at: node });\n    } else if (\n      !this.scope.allowSuper &&\n      !this.options.allowSuperOutsideMethod\n    ) {\n      this.raise(Errors.UnexpectedSuper, { at: node });\n    }\n\n    if (\n      !this.match(tt.parenL) &&\n      !this.match(tt.bracketL) &&\n      !this.match(tt.dot)\n    ) {\n      this.raise(Errors.UnsupportedSuper, { at: node });\n    }\n\n    return this.finishNode(node, \"Super\");\n  }\n\n  parsePrivateName(): N.PrivateName {\n    const node = this.startNode();\n    const id = this.startNodeAt(\n      this.state.start + 1,\n      // The position is hardcoded because we merge `#` and name into a single\n      // tt.privateName token\n      new Position(\n        this.state.curLine,\n        this.state.start + 1 - this.state.lineStart,\n        this.state.start + 1,\n      ),\n    );\n    const name = this.state.value;\n    this.next(); // eat #name;\n    node.id = this.createIdentifier(id, name);\n    return this.finishNode(node, \"PrivateName\");\n  }\n\n  parseFunctionOrFunctionSent(): N.FunctionExpression | N.MetaProperty {\n    const node = this.startNode();\n\n    // We do not do parseIdentifier here because when parseFunctionOrFunctionSent\n    // is called we already know that the current token is a \"name\" with the value \"function\"\n    // This will improve perf a tiny little bit as we do not do validation but more importantly\n    // here is that parseIdentifier will remove an item from the expression stack\n    // if \"function\" or \"class\" is parsed as identifier (in objects e.g.), which should not happen here.\n    this.next(); // eat `function`\n\n    if (this.prodParam.hasYield && this.match(tt.dot)) {\n      const meta = this.createIdentifier(\n        this.startNodeAtNode(node),\n        \"function\",\n      );\n      this.next(); // eat `.`\n      // https://github.com/tc39/proposal-function.sent#syntax-1\n      if (this.match(tt._sent)) {\n        this.expectPlugin(\"functionSent\");\n      } else if (!this.hasPlugin(\"functionSent\")) {\n        // The code wasn't `function.sent` but just `function.`, so a simple error is less confusing.\n        this.unexpected();\n      }\n      return this.parseMetaProperty(node, meta, \"sent\");\n    }\n    return this.parseFunction(node);\n  }\n\n  parseMetaProperty(\n    node: N.MetaProperty,\n    meta: N.Identifier,\n    propertyName: string,\n  ): N.MetaProperty {\n    node.meta = meta;\n\n    const containsEsc = this.state.containsEsc;\n\n    node.property = this.parseIdentifier(true);\n\n    if (node.property.name !== propertyName || containsEsc) {\n      this.raise(Errors.UnsupportedMetaProperty, {\n        at: node.property,\n        target: meta.name,\n        onlyValidPropertyName: propertyName,\n      });\n    }\n\n    return this.finishNode(node, \"MetaProperty\");\n  }\n\n  // https://tc39.es/ecma262/#prod-ImportMeta\n  parseImportMetaProperty(node: N.MetaProperty): N.MetaProperty {\n    const id = this.createIdentifier(this.startNodeAtNode(node), \"import\");\n    this.next(); // eat `.`\n\n    if (this.isContextual(tt._meta)) {\n      if (!this.inModule) {\n        this.raise(Errors.ImportMetaOutsideModule, { at: id });\n      }\n      this.sawUnambiguousESM = true;\n    }\n\n    return this.parseMetaProperty(node, id, \"meta\");\n  }\n\n  parseLiteralAtNode<T: N.Node>(\n    value: any,\n    type: $ElementType<T, \"type\">,\n    node: any,\n  ): T {\n    this.addExtra(node, \"rawValue\", value);\n    this.addExtra(node, \"raw\", this.input.slice(node.start, this.state.end));\n    node.value = value;\n    this.next();\n    return this.finishNode<T>(node, type);\n  }\n\n  parseLiteral<T: N.Node>(value: any, type: $ElementType<T, \"type\">): T {\n    const node = this.startNode();\n    return this.parseLiteralAtNode(value, type, node);\n  }\n\n  parseStringLiteral(value: any) {\n    return this.parseLiteral<N.StringLiteral>(value, \"StringLiteral\");\n  }\n\n  parseNumericLiteral(value: any) {\n    return this.parseLiteral<N.NumericLiteral>(value, \"NumericLiteral\");\n  }\n\n  parseBigIntLiteral(value: any) {\n    return this.parseLiteral<N.BigIntLiteral>(value, \"BigIntLiteral\");\n  }\n\n  parseDecimalLiteral(value: any) {\n    return this.parseLiteral<N.DecimalLiteral>(value, \"DecimalLiteral\");\n  }\n\n  parseRegExpLiteral(value: { value: any, pattern: string, flags: string }) {\n    const node = this.parseLiteral<N.RegExpLiteral>(\n      value.value,\n      \"RegExpLiteral\",\n    );\n    node.pattern = value.pattern;\n    node.flags = value.flags;\n    return node;\n  }\n\n  parseBooleanLiteral(value: boolean) {\n    const node = this.startNode();\n    node.value = value;\n    this.next();\n    return this.finishNode<N.BooleanLiteral>(node, \"BooleanLiteral\");\n  }\n\n  parseNullLiteral() {\n    const node = this.startNode();\n    this.next();\n    return this.finishNode<N.NullLiteral>(node, \"NullLiteral\");\n  }\n\n  // https://tc39.es/ecma262/#prod-CoverParenthesizedExpressionAndArrowParameterList\n  parseParenAndDistinguishExpression(canBeArrow: boolean): N.Expression {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n\n    let val;\n    this.next(); // eat `(`\n    this.expressionScope.enter(newArrowHeadScope());\n\n    const oldMaybeInArrowParameters = this.state.maybeInArrowParameters;\n    const oldInFSharpPipelineDirectBody = this.state.inFSharpPipelineDirectBody;\n    this.state.maybeInArrowParameters = true;\n    this.state.inFSharpPipelineDirectBody = false;\n\n    const innerStartPos = this.state.start;\n    const innerStartLoc = this.state.startLoc;\n    const exprList = [];\n    const refExpressionErrors = new ExpressionErrors();\n    let first = true;\n    let spreadStartLoc;\n    let optionalCommaStartLoc;\n\n    while (!this.match(tt.parenR)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(\n          tt.comma,\n          refExpressionErrors.optionalParametersLoc === null\n            ? null\n            : refExpressionErrors.optionalParametersLoc,\n        );\n        if (this.match(tt.parenR)) {\n          optionalCommaStartLoc = this.state.startLoc;\n          break;\n        }\n      }\n\n      if (this.match(tt.ellipsis)) {\n        const spreadNodeStartPos = this.state.start;\n        const spreadNodeStartLoc = this.state.startLoc;\n        spreadStartLoc = this.state.startLoc;\n        exprList.push(\n          this.parseParenItem(\n            this.parseRestBinding(),\n            spreadNodeStartPos,\n            spreadNodeStartLoc,\n          ),\n        );\n\n        if (!this.checkCommaAfterRest(charCodes.rightParenthesis)) {\n          break;\n        }\n      } else {\n        exprList.push(\n          this.parseMaybeAssignAllowIn(\n            refExpressionErrors,\n            this.parseParenItem,\n          ),\n        );\n      }\n    }\n\n    const innerEndLoc = this.state.lastTokEndLoc;\n    this.expect(tt.parenR);\n\n    this.state.maybeInArrowParameters = oldMaybeInArrowParameters;\n    this.state.inFSharpPipelineDirectBody = oldInFSharpPipelineDirectBody;\n\n    let arrowNode = this.startNodeAt(startPos, startLoc);\n    if (\n      canBeArrow &&\n      this.shouldParseArrow(exprList) &&\n      (arrowNode = this.parseArrow(arrowNode))\n    ) {\n      this.checkDestructuringPrivate(refExpressionErrors);\n      this.expressionScope.validateAsPattern();\n      this.expressionScope.exit();\n      this.parseArrowExpression(arrowNode, exprList, false);\n      return arrowNode;\n    }\n    this.expressionScope.exit();\n\n    if (!exprList.length) {\n      this.unexpected(this.state.lastTokStartLoc);\n    }\n    if (optionalCommaStartLoc) this.unexpected(optionalCommaStartLoc);\n    if (spreadStartLoc) this.unexpected(spreadStartLoc);\n    this.checkExpressionErrors(refExpressionErrors, true);\n\n    this.toReferencedListDeep(exprList, /* isParenthesizedExpr */ true);\n    if (exprList.length > 1) {\n      val = this.startNodeAt(innerStartPos, innerStartLoc);\n      val.expressions = exprList;\n      // finish node at current location so it can pick up comments after `)`\n      this.finishNode(val, \"SequenceExpression\");\n      this.resetEndLocation(val, innerEndLoc);\n    } else {\n      val = exprList[0];\n    }\n\n    return this.wrapParenthesis(startPos, startLoc, val);\n  }\n\n  wrapParenthesis(\n    startPos: number,\n    startLoc: Position,\n    expression: N.Expression,\n  ): N.Expression {\n    if (!this.options.createParenthesizedExpressions) {\n      this.addExtra(expression, \"parenthesized\", true);\n      this.addExtra(expression, \"parenStart\", startPos);\n\n      this.takeSurroundingComments(\n        expression,\n        startPos,\n        this.state.lastTokEndLoc.index,\n      );\n\n      return expression;\n    }\n\n    const parenExpression = this.startNodeAt(startPos, startLoc);\n    parenExpression.expression = expression;\n    this.finishNode(parenExpression, \"ParenthesizedExpression\");\n    return parenExpression;\n  }\n\n  // eslint-disable-next-line no-unused-vars -- `params` is used in typescript plugin\n  shouldParseArrow(params: Array<N.Node>): boolean {\n    return !this.canInsertSemicolon();\n  }\n\n  parseArrow(node: N.ArrowFunctionExpression): ?N.ArrowFunctionExpression {\n    if (this.eat(tt.arrow)) {\n      return node;\n    }\n  }\n\n  parseParenItem(\n    node: N.Expression,\n    startPos: number, // eslint-disable-line no-unused-vars\n    startLoc: Position, // eslint-disable-line no-unused-vars\n  ): N.Expression {\n    return node;\n  }\n\n  parseNewOrNewTarget(): N.NewExpression | N.MetaProperty {\n    const node = this.startNode();\n    this.next();\n    if (this.match(tt.dot)) {\n      // https://tc39.es/ecma262/#prod-NewTarget\n      const meta = this.createIdentifier(this.startNodeAtNode(node), \"new\");\n      this.next();\n      const metaProp = this.parseMetaProperty(node, meta, \"target\");\n\n      if (!this.scope.inNonArrowFunction && !this.scope.inClass) {\n        this.raise(Errors.UnexpectedNewTarget, { at: metaProp });\n      }\n\n      return metaProp;\n    }\n\n    return this.parseNew(node);\n  }\n\n  // New's precedence is slightly tricky. It must allow its argument to\n  // be a `[]` or dot subscript expression, but not a call — at least,\n  // not without wrapping it in parentheses. Thus, it uses the noCalls\n  // argument to parseSubscripts to prevent it from consuming the\n  // argument list.\n  // https://tc39.es/ecma262/#prod-NewExpression\n  parseNew(node: N.NewExpression): N.NewExpression {\n    this.parseNewCallee(node);\n\n    if (this.eat(tt.parenL)) {\n      const args = this.parseExprList(tt.parenR);\n      this.toReferencedList(args);\n      // $FlowFixMe (parseExprList should be all non-null in this case)\n      node.arguments = args;\n    } else {\n      node.arguments = [];\n    }\n\n    return this.finishNode(node, \"NewExpression\");\n  }\n\n  parseNewCallee(node: N.NewExpression): void {\n    node.callee = this.parseNoCallExpr();\n    if (node.callee.type === \"Import\") {\n      this.raise(Errors.ImportCallNotNewExpression, { at: node.callee });\n    } else if (this.isOptionalChain(node.callee)) {\n      this.raise(Errors.OptionalChainingNoNew, {\n        at: this.state.lastTokEndLoc,\n      });\n    } else if (this.eat(tt.questionDot)) {\n      this.raise(Errors.OptionalChainingNoNew, {\n        at: this.state.startLoc,\n      });\n    }\n  }\n\n  // Parse template expression.\n\n  parseTemplateElement(isTagged: boolean): N.TemplateElement {\n    const { start, startLoc, end, value } = this.state;\n    const elemStart = start + 1;\n    const elem = this.startNodeAt(\n      elemStart,\n      createPositionWithColumnOffset(startLoc, 1),\n    );\n    if (value === null) {\n      if (!isTagged) {\n        this.raise(Errors.InvalidEscapeSequenceTemplate, {\n          // FIXME: explain\n          at: createPositionWithColumnOffset(startLoc, 2),\n        });\n      }\n    }\n\n    const isTail = this.match(tt.templateTail);\n    const endOffset = isTail ? -1 : -2;\n    const elemEnd = end + endOffset;\n    elem.value = {\n      raw: this.input.slice(elemStart, elemEnd).replace(/\\r\\n?/g, \"\\n\"),\n      cooked: value === null ? null : value.slice(1, endOffset),\n    };\n    elem.tail = isTail;\n    this.next();\n    this.finishNode(elem, \"TemplateElement\");\n    this.resetEndLocation(\n      elem,\n      createPositionWithColumnOffset(this.state.lastTokEndLoc, endOffset),\n    );\n    return elem;\n  }\n\n  // https://tc39.es/ecma262/#prod-TemplateLiteral\n  parseTemplate(isTagged: boolean): N.TemplateLiteral {\n    const node = this.startNode();\n    node.expressions = [];\n    let curElt = this.parseTemplateElement(isTagged);\n    node.quasis = [curElt];\n    while (!curElt.tail) {\n      node.expressions.push(this.parseTemplateSubstitution());\n      this.readTemplateContinuation();\n      node.quasis.push((curElt = this.parseTemplateElement(isTagged)));\n    }\n    return this.finishNode(node, \"TemplateLiteral\");\n  }\n\n  // This is overwritten by the TypeScript plugin to parse template types\n  parseTemplateSubstitution(): N.Expression {\n    return this.parseExpression();\n  }\n\n  // Parse an object literal, binding pattern, or record.\n\n  parseObjectLike<T: N.ObjectPattern | N.ObjectExpression>(\n    close: TokenType,\n    isPattern: boolean,\n    isRecord?: ?boolean,\n    refExpressionErrors?: ?ExpressionErrors,\n  ): T {\n    if (isRecord) {\n      this.expectPlugin(\"recordAndTuple\");\n    }\n    const oldInFSharpPipelineDirectBody = this.state.inFSharpPipelineDirectBody;\n    this.state.inFSharpPipelineDirectBody = false;\n    const propHash: any = Object.create(null);\n    let first = true;\n    const node = this.startNode();\n\n    node.properties = [];\n    this.next();\n\n    while (!this.match(close)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(tt.comma);\n        if (this.match(close)) {\n          this.addTrailingCommaExtraToNode(node);\n          break;\n        }\n      }\n\n      let prop;\n      if (isPattern) {\n        prop = this.parseBindingProperty();\n      } else {\n        prop = this.parsePropertyDefinition(refExpressionErrors);\n        this.checkProto(prop, isRecord, propHash, refExpressionErrors);\n      }\n\n      if (\n        isRecord &&\n        !this.isObjectProperty(prop) &&\n        prop.type !== \"SpreadElement\"\n      ) {\n        this.raise(Errors.InvalidRecordProperty, { at: prop });\n      }\n\n      // $FlowIgnore\n      if (prop.shorthand) {\n        this.addExtra(prop, \"shorthand\", true);\n      }\n\n      node.properties.push(prop);\n    }\n\n    this.next();\n\n    this.state.inFSharpPipelineDirectBody = oldInFSharpPipelineDirectBody;\n    let type = \"ObjectExpression\";\n    if (isPattern) {\n      type = \"ObjectPattern\";\n    } else if (isRecord) {\n      type = \"RecordExpression\";\n    }\n    return this.finishNode(node, type);\n  }\n\n  addTrailingCommaExtraToNode(node: N.Node): void {\n    this.addExtra(node, \"trailingComma\", this.state.lastTokStart);\n    this.addExtra(node, \"trailingCommaLoc\", this.state.lastTokStartLoc, false);\n  }\n\n  // Check grammar production:\n  //   IdentifierName *_opt PropertyName\n  // It is used in `parsePropertyDefinition` to detect AsyncMethod and Accessors\n  maybeAsyncOrAccessorProp(prop: N.ObjectProperty): boolean {\n    return (\n      !prop.computed &&\n      prop.key.type === \"Identifier\" &&\n      (this.isLiteralPropertyName() ||\n        this.match(tt.bracketL) ||\n        this.match(tt.star))\n    );\n  }\n\n  // https://tc39.es/ecma262/#prod-PropertyDefinition\n  parsePropertyDefinition(\n    refExpressionErrors?: ?ExpressionErrors,\n  ): N.ObjectMember | N.SpreadElement {\n    let decorators = [];\n    if (this.match(tt.at)) {\n      if (this.hasPlugin(\"decorators\")) {\n        this.raise(Errors.UnsupportedPropertyDecorator, {\n          at: this.state.startLoc,\n        });\n      }\n\n      // we needn't check if decorators (stage 0) plugin is enabled since it's checked by\n      // the call to this.parseDecorator\n      while (this.match(tt.at)) {\n        decorators.push(this.parseDecorator());\n      }\n    }\n\n    const prop = this.startNode();\n    let isAsync = false;\n    let isAccessor = false;\n    let startPos;\n    let startLoc;\n\n    if (this.match(tt.ellipsis)) {\n      if (decorators.length) this.unexpected();\n      return this.parseSpread();\n    }\n\n    if (decorators.length) {\n      prop.decorators = decorators;\n      decorators = [];\n    }\n\n    prop.method = false;\n\n    if (refExpressionErrors) {\n      startPos = this.state.start;\n      startLoc = this.state.startLoc;\n    }\n\n    let isGenerator = this.eat(tt.star);\n    this.parsePropertyNamePrefixOperator(prop);\n    const containsEsc = this.state.containsEsc;\n    const key = this.parsePropertyName(prop, refExpressionErrors);\n\n    if (!isGenerator && !containsEsc && this.maybeAsyncOrAccessorProp(prop)) {\n      const keyName = key.name;\n      // https://tc39.es/ecma262/#prod-AsyncMethod\n      // https://tc39.es/ecma262/#prod-AsyncGeneratorMethod\n      if (keyName === \"async\" && !this.hasPrecedingLineBreak()) {\n        isAsync = true;\n        this.resetPreviousNodeTrailingComments(key);\n        isGenerator = this.eat(tt.star);\n        this.parsePropertyName(prop);\n      }\n      // get PropertyName[?Yield, ?Await] () { FunctionBody[~Yield, ~Await] }\n      // set PropertyName[?Yield, ?Await] ( PropertySetParameterList ) { FunctionBody[~Yield, ~Await] }\n      if (keyName === \"get\" || keyName === \"set\") {\n        isAccessor = true;\n        this.resetPreviousNodeTrailingComments(key);\n        prop.kind = keyName;\n        if (this.match(tt.star)) {\n          isGenerator = true;\n          this.raise(Errors.AccessorIsGenerator, {\n            at: this.state.curPosition(),\n            kind: keyName,\n          });\n          this.next();\n        }\n        this.parsePropertyName(prop);\n      }\n    }\n\n    this.parseObjPropValue(\n      prop,\n      startPos,\n      startLoc,\n      isGenerator,\n      isAsync,\n      false /* isPattern */,\n      isAccessor,\n      refExpressionErrors,\n    );\n\n    return prop;\n  }\n\n  getGetterSetterExpectedParamCount(\n    method: N.ObjectMethod | N.ClassMethod,\n  ): number {\n    return method.kind === \"get\" ? 0 : 1;\n  }\n\n  // This exists so we can override within the ESTree plugin\n  getObjectOrClassMethodParams(method: N.ObjectMethod | N.ClassMethod) {\n    return method.params;\n  }\n\n  // get methods aren't allowed to have any parameters\n  // set methods must have exactly 1 parameter which is not a rest parameter\n  checkGetterSetterParams(method: N.ObjectMethod | N.ClassMethod): void {\n    const paramCount = this.getGetterSetterExpectedParamCount(method);\n    const params = this.getObjectOrClassMethodParams(method);\n\n    if (params.length !== paramCount) {\n      this.raise(\n        method.kind === \"get\" ? Errors.BadGetterArity : Errors.BadSetterArity,\n        { at: method },\n      );\n    }\n\n    if (\n      method.kind === \"set\" &&\n      params[params.length - 1]?.type === \"RestElement\"\n    ) {\n      this.raise(Errors.BadSetterRestParameter, { at: method });\n    }\n  }\n\n  // https://tc39.es/ecma262/#prod-MethodDefinition\n  parseObjectMethod(\n    prop: N.ObjectMethod,\n    isGenerator: boolean,\n    isAsync: boolean,\n    isPattern: boolean,\n    isAccessor: boolean,\n  ): ?N.ObjectMethod {\n    if (isAccessor) {\n      // isAccessor implies isAsync: false, isPattern: false, isGenerator: false\n      this.parseMethod(\n        prop,\n        // This _should_ be false, but with error recovery, we allow it to be\n        // set for informational purposes\n        isGenerator,\n        /* isAsync */ false,\n        /* isConstructor */ false,\n        false,\n        \"ObjectMethod\",\n      );\n      this.checkGetterSetterParams(prop);\n      return prop;\n    }\n\n    if (isAsync || isGenerator || this.match(tt.parenL)) {\n      if (isPattern) this.unexpected();\n      prop.kind = \"method\";\n      prop.method = true;\n      return this.parseMethod(\n        prop,\n        isGenerator,\n        isAsync,\n        /* isConstructor */ false,\n        false,\n        \"ObjectMethod\",\n      );\n    }\n  }\n\n  // if `isPattern` is true, parse https://tc39.es/ecma262/#prod-BindingProperty\n  // else https://tc39.es/ecma262/#prod-PropertyDefinition\n  parseObjectProperty(\n    prop: N.ObjectProperty,\n    startPos: ?number,\n    startLoc: ?Position,\n    isPattern: boolean,\n    refExpressionErrors: ?ExpressionErrors,\n  ): ?N.ObjectProperty {\n    prop.shorthand = false;\n\n    if (this.eat(tt.colon)) {\n      prop.value = isPattern\n        ? this.parseMaybeDefault(this.state.start, this.state.startLoc)\n        : this.parseMaybeAssignAllowIn(refExpressionErrors);\n\n      return this.finishNode(prop, \"ObjectProperty\");\n    }\n\n    if (!prop.computed && prop.key.type === \"Identifier\") {\n      // PropertyDefinition:\n      //   IdentifierReference\n      //   CoverInitializedName\n      // Note: `{ eval } = {}` will be checked in `checkLVal` later.\n      this.checkReservedWord(prop.key.name, prop.key.loc.start, true, false);\n\n      if (isPattern) {\n        prop.value = this.parseMaybeDefault(\n          startPos,\n          startLoc,\n          cloneIdentifier(prop.key),\n        );\n      } else if (this.match(tt.eq)) {\n        const shorthandAssignLoc = this.state.startLoc;\n        if (refExpressionErrors != null) {\n          if (refExpressionErrors.shorthandAssignLoc === null) {\n            refExpressionErrors.shorthandAssignLoc = shorthandAssignLoc;\n          }\n        } else {\n          this.raise(Errors.InvalidCoverInitializedName, {\n            at: shorthandAssignLoc,\n          });\n        }\n        prop.value = this.parseMaybeDefault(\n          startPos,\n          startLoc,\n          cloneIdentifier(prop.key),\n        );\n      } else {\n        prop.value = cloneIdentifier(prop.key);\n      }\n      prop.shorthand = true;\n\n      return this.finishNode(prop, \"ObjectProperty\");\n    }\n  }\n\n  parseObjPropValue(\n    prop: any,\n    startPos: ?number,\n    startLoc: ?Position,\n    isGenerator: boolean,\n    isAsync: boolean,\n    isPattern: boolean,\n    isAccessor: boolean,\n    refExpressionErrors?: ?ExpressionErrors,\n  ): void {\n    const node =\n      this.parseObjectMethod(\n        prop,\n        isGenerator,\n        isAsync,\n        isPattern,\n        isAccessor,\n      ) ||\n      this.parseObjectProperty(\n        prop,\n        startPos,\n        startLoc,\n        isPattern,\n        refExpressionErrors,\n      );\n\n    if (!node) this.unexpected();\n\n    // $FlowFixMe\n    return node;\n  }\n\n  // https://tc39.es/ecma262/#prod-PropertyName\n  // when refExpressionErrors presents, it will parse private name\n  // and record the position of the first private name\n  parsePropertyName(\n    prop: N.ObjectOrClassMember | N.ClassMember | N.TsNamedTypeElementBase,\n    refExpressionErrors?: ?ExpressionErrors,\n  ): N.Expression | N.Identifier {\n    if (this.eat(tt.bracketL)) {\n      (prop: $FlowSubtype<N.ObjectOrClassMember>).computed = true;\n      prop.key = this.parseMaybeAssignAllowIn();\n      this.expect(tt.bracketR);\n    } else {\n      // We check if it's valid for it to be a private name when we push it.\n      const { type, value } = this.state;\n      let key;\n      // most un-computed property names are identifiers\n      if (tokenIsKeywordOrIdentifier(type)) {\n        key = this.parseIdentifier(true);\n      } else {\n        switch (type) {\n          case tt.num:\n            key = this.parseNumericLiteral(value);\n            break;\n          case tt.string:\n            key = this.parseStringLiteral(value);\n            break;\n          case tt.bigint:\n            key = this.parseBigIntLiteral(value);\n            break;\n          case tt.decimal:\n            key = this.parseDecimalLiteral(value);\n            break;\n          case tt.privateName: {\n            // the class private key has been handled in parseClassElementName\n            const privateKeyLoc = this.state.startLoc;\n            if (refExpressionErrors != null) {\n              if (refExpressionErrors.privateKeyLoc === null) {\n                refExpressionErrors.privateKeyLoc = privateKeyLoc;\n              }\n            } else {\n              this.raise(Errors.UnexpectedPrivateField, {\n                at: privateKeyLoc,\n              });\n            }\n            key = this.parsePrivateName();\n            break;\n          }\n          default:\n            throw this.unexpected();\n        }\n      }\n      (prop: $FlowFixMe).key = key;\n      if (type !== tt.privateName) {\n        // ClassPrivateProperty is never computed, so we don't assign in that case.\n        prop.computed = false;\n      }\n    }\n\n    return prop.key;\n  }\n\n  // Initialize empty function node.\n\n  initFunction(node: N.BodilessFunctionOrMethodBase, isAsync: ?boolean): void {\n    node.id = null;\n    node.generator = false;\n    node.async = !!isAsync;\n  }\n\n  // Parse object or class method.\n\n  parseMethod<T: N.MethodLike>(\n    node: T,\n    isGenerator: boolean,\n    isAsync: boolean,\n    isConstructor: boolean,\n    allowDirectSuper: boolean,\n    type: string,\n    inClassScope: boolean = false,\n  ): T {\n    this.initFunction(node, isAsync);\n    node.generator = !!isGenerator;\n    const allowModifiers = isConstructor; // For TypeScript parameter properties\n    this.scope.enter(\n      SCOPE_FUNCTION |\n        SCOPE_SUPER |\n        (inClassScope ? SCOPE_CLASS : 0) |\n        (allowDirectSuper ? SCOPE_DIRECT_SUPER : 0),\n    );\n    this.prodParam.enter(functionFlags(isAsync, node.generator));\n    this.parseFunctionParams((node: any), allowModifiers);\n    this.parseFunctionBodyAndFinish(node, type, true);\n    this.prodParam.exit();\n    this.scope.exit();\n\n    return node;\n  }\n\n  // parse an array literal or tuple literal\n  // https://tc39.es/ecma262/#prod-ArrayLiteral\n  // https://tc39.es/proposal-record-tuple/#prod-TupleLiteral\n  parseArrayLike(\n    close: TokenType,\n    canBePattern: boolean,\n    isTuple: boolean,\n    refExpressionErrors: ?ExpressionErrors,\n  ): N.ArrayExpression | N.TupleExpression {\n    if (isTuple) {\n      this.expectPlugin(\"recordAndTuple\");\n    }\n    const oldInFSharpPipelineDirectBody = this.state.inFSharpPipelineDirectBody;\n    this.state.inFSharpPipelineDirectBody = false;\n    const node = this.startNode();\n    this.next();\n    node.elements = this.parseExprList(\n      close,\n      /* allowEmpty */ !isTuple,\n      refExpressionErrors,\n      node,\n    );\n    this.state.inFSharpPipelineDirectBody = oldInFSharpPipelineDirectBody;\n    return this.finishNode(\n      node,\n      isTuple ? \"TupleExpression\" : \"ArrayExpression\",\n    );\n  }\n\n  // Parse arrow function expression.\n  // If the parameters are provided, they will be converted to an\n  // assignable list.\n  parseArrowExpression(\n    node: N.ArrowFunctionExpression,\n    params: ?(N.Expression[]),\n    isAsync: boolean,\n    trailingCommaLoc: ?Position,\n  ): N.ArrowFunctionExpression {\n    this.scope.enter(SCOPE_FUNCTION | SCOPE_ARROW);\n    let flags = functionFlags(isAsync, false);\n    // ConciseBody[In] :\n    //   [lookahead ≠ {] ExpressionBody[?In, ~Await]\n    //   { FunctionBody[~Yield, ~Await] }\n    if (!this.match(tt.braceL) && this.prodParam.hasIn) {\n      flags |= PARAM_IN;\n    }\n    this.prodParam.enter(flags);\n    this.initFunction(node, isAsync);\n    const oldMaybeInArrowParameters = this.state.maybeInArrowParameters;\n\n    if (params) {\n      this.state.maybeInArrowParameters = true;\n      this.setArrowFunctionParameters(node, params, trailingCommaLoc);\n    }\n    this.state.maybeInArrowParameters = false;\n    this.parseFunctionBody(node, true);\n\n    this.prodParam.exit();\n    this.scope.exit();\n    this.state.maybeInArrowParameters = oldMaybeInArrowParameters;\n\n    return this.finishNode(node, \"ArrowFunctionExpression\");\n  }\n\n  setArrowFunctionParameters(\n    node: N.ArrowFunctionExpression,\n    params: N.Expression[],\n    trailingCommaLoc: ?Position,\n  ): void {\n    this.toAssignableList(params, trailingCommaLoc, false);\n    node.params = params;\n  }\n\n  parseFunctionBodyAndFinish(\n    node: N.BodilessFunctionOrMethodBase,\n    type: string,\n    isMethod?: boolean = false,\n  ): void {\n    // $FlowIgnore (node is not bodiless if we get here)\n    this.parseFunctionBody(node, false, isMethod);\n    this.finishNode(node, type);\n  }\n\n  // Parse function body and check parameters.\n  parseFunctionBody(\n    node: N.Function,\n    allowExpression: ?boolean,\n    isMethod?: boolean = false,\n  ): void {\n    const isExpression = allowExpression && !this.match(tt.braceL);\n    this.expressionScope.enter(newExpressionScope());\n\n    if (isExpression) {\n      // https://tc39.es/ecma262/#prod-ExpressionBody\n      node.body = this.parseMaybeAssign();\n      this.checkParams(node, false, allowExpression, false);\n    } else {\n      const oldStrict = this.state.strict;\n      // Start a new scope with regard to labels\n      // flag (restore them to their old value afterwards).\n      const oldLabels = this.state.labels;\n      this.state.labels = [];\n\n      // FunctionBody[Yield, Await]:\n      //   StatementList[?Yield, ?Await, +Return] opt\n      this.prodParam.enter(this.prodParam.currentFlags() | PARAM_RETURN);\n      node.body = this.parseBlock(\n        true,\n        false,\n        // Strict mode function checks after we parse the statements in the function body.\n        (hasStrictModeDirective: boolean) => {\n          const nonSimple = !this.isSimpleParamList(node.params);\n\n          if (hasStrictModeDirective && nonSimple) {\n            // This logic is here to align the error location with the ESTree plugin.\n            this.raise(Errors.IllegalLanguageModeDirective, {\n              at:\n                // $FlowIgnore\n                (node.kind === \"method\" || node.kind === \"constructor\") &&\n                // $FlowIgnore\n                !!node.key\n                  ? node.key.loc.end\n                  : node,\n            });\n          }\n\n          const strictModeChanged = !oldStrict && this.state.strict;\n\n          // Add the params to varDeclaredNames to ensure that an error is thrown\n          // if a let/const declaration in the function clashes with one of the params.\n          this.checkParams(\n            node,\n            !this.state.strict && !allowExpression && !isMethod && !nonSimple,\n            allowExpression,\n            strictModeChanged,\n          );\n\n          // Ensure the function name isn't a forbidden identifier in strict mode, e.g. 'eval'\n          if (this.state.strict && node.id) {\n            this.checkIdentifier(node.id, BIND_OUTSIDE, strictModeChanged);\n          }\n        },\n      );\n      this.prodParam.exit();\n      this.state.labels = oldLabels;\n    }\n    this.expressionScope.exit();\n  }\n\n  isSimpleParameter(node: N.Pattern | N.TSParameterProperty) {\n    return node.type === \"Identifier\";\n  }\n\n  isSimpleParamList(\n    params: $ReadOnlyArray<N.Pattern | N.TSParameterProperty>,\n  ): boolean {\n    for (let i = 0, len = params.length; i < len; i++) {\n      if (!this.isSimpleParameter(params[i])) return false;\n    }\n    return true;\n  }\n\n  checkParams(\n    node: N.Function,\n    allowDuplicates: boolean,\n    // eslint-disable-next-line no-unused-vars\n    isArrowFunction: ?boolean,\n    strictModeChanged?: boolean = true,\n  ): void {\n    const checkClashes = !allowDuplicates && new Set();\n    // We create a fake node with the \"ephemeral\" type `FormalParameters`[1]\n    // since we just store an array of parameters. Perhaps someday we can have\n    // something like class FormalParameters extends Array { ... }, which would\n    // also be helpful when traversing this node.\n    //\n    // 1. https://tc39.es/ecma262/#prod-FormalParameters\n    const formalParameters = { type: \"FormalParameters\" };\n    for (const param of node.params) {\n      this.checkLVal(param, {\n        in: formalParameters,\n        binding: BIND_VAR,\n        checkClashes,\n        strictModeChanged,\n      });\n    }\n  }\n\n  // Parses a comma-separated list of expressions, and returns them as\n  // an array. `close` is the token type that ends the list, and\n  // `allowEmpty` can be turned on to allow subsequent commas with\n  // nothing in between them to be parsed as `null` (which is needed\n  // for array literals).\n\n  parseExprList(\n    close: TokenType,\n    allowEmpty?: boolean,\n    refExpressionErrors?: ?ExpressionErrors,\n    nodeForExtra?: ?N.Node,\n  ): $ReadOnlyArray<?N.Expression> {\n    const elts = [];\n    let first = true;\n\n    while (!this.eat(close)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(tt.comma);\n        if (this.match(close)) {\n          if (nodeForExtra) {\n            this.addTrailingCommaExtraToNode(nodeForExtra);\n          }\n          this.next();\n          break;\n        }\n      }\n\n      elts.push(this.parseExprListItem(allowEmpty, refExpressionErrors));\n    }\n    return elts;\n  }\n\n  parseExprListItem(\n    allowEmpty: ?boolean,\n    refExpressionErrors?: ?ExpressionErrors,\n    allowPlaceholder: ?boolean,\n  ): ?N.Expression {\n    let elt;\n    if (this.match(tt.comma)) {\n      if (!allowEmpty) {\n        this.raise(Errors.UnexpectedToken, {\n          at: this.state.curPosition(),\n          unexpected: \",\",\n        });\n      }\n      elt = null;\n    } else if (this.match(tt.ellipsis)) {\n      const spreadNodeStartPos = this.state.start;\n      const spreadNodeStartLoc = this.state.startLoc;\n\n      elt = this.parseParenItem(\n        this.parseSpread(refExpressionErrors),\n        spreadNodeStartPos,\n        spreadNodeStartLoc,\n      );\n    } else if (this.match(tt.question)) {\n      this.expectPlugin(\"partialApplication\");\n      if (!allowPlaceholder) {\n        this.raise(Errors.UnexpectedArgumentPlaceholder, {\n          at: this.state.startLoc,\n        });\n      }\n      const node = this.startNode();\n      this.next();\n      elt = this.finishNode(node, \"ArgumentPlaceholder\");\n    } else {\n      elt = this.parseMaybeAssignAllowIn(\n        refExpressionErrors,\n        this.parseParenItem,\n      );\n    }\n    return elt;\n  }\n\n  // Parse the next token as an identifier. If `liberal` is true (used\n  // when parsing properties), it will also convert keywords into\n  // identifiers.\n  // This shouldn't be used to parse the keywords of meta properties, since they\n  // are not identifiers and cannot contain escape sequences.\n\n  parseIdentifier(liberal?: boolean): N.Identifier {\n    const node = this.startNode();\n    const name = this.parseIdentifierName(node.start, liberal);\n\n    return this.createIdentifier(node, name);\n  }\n\n  createIdentifier(node: N.Identifier, name: string): N.Identifier {\n    node.name = name;\n    node.loc.identifierName = name;\n\n    return this.finishNode(node, \"Identifier\");\n  }\n\n  parseIdentifierName(pos: number, liberal?: boolean): string {\n    let name: string;\n\n    const { startLoc, type } = this.state;\n\n    if (tokenIsKeywordOrIdentifier(type)) {\n      name = this.state.value;\n    } else {\n      throw this.unexpected();\n    }\n\n    const tokenIsKeyword = tokenKeywordOrIdentifierIsKeyword(type);\n\n    if (liberal) {\n      // If the current token is not used as a keyword, set its type to \"tt.name\".\n      // This will prevent this.next() from throwing about unexpected escapes.\n      if (tokenIsKeyword) {\n        this.replaceToken(tt.name);\n      }\n    } else {\n      this.checkReservedWord(name, startLoc, tokenIsKeyword, false);\n    }\n\n    this.next();\n\n    return name;\n  }\n\n  checkReservedWord(\n    word: string,\n    startLoc: Position,\n    checkKeywords: boolean,\n    isBinding: boolean,\n  ): void {\n    // Every JavaScript reserved word is 10 characters or less.\n    if (word.length > 10) {\n      return;\n    }\n    // Most identifiers are not reservedWord-like, they don't need special\n    // treatments afterward, which very likely ends up throwing errors\n    if (!canBeReservedWord(word)) {\n      return;\n    }\n\n    if (word === \"yield\") {\n      if (this.prodParam.hasYield) {\n        this.raise(Errors.YieldBindingIdentifier, { at: startLoc });\n        return;\n      }\n    } else if (word === \"await\") {\n      if (this.prodParam.hasAwait) {\n        this.raise(Errors.AwaitBindingIdentifier, { at: startLoc });\n        return;\n      }\n\n      if (this.scope.inStaticBlock) {\n        this.raise(Errors.AwaitBindingIdentifierInStaticBlock, {\n          at: startLoc,\n        });\n        return;\n      }\n\n      this.expressionScope.recordAsyncArrowParametersError({ at: startLoc });\n    } else if (word === \"arguments\") {\n      if (this.scope.inClassAndNotInNonArrowFunction) {\n        this.raise(Errors.ArgumentsInClass, { at: startLoc });\n        return;\n      }\n    }\n\n    if (checkKeywords && isKeyword(word)) {\n      this.raise(Errors.UnexpectedKeyword, {\n        at: startLoc,\n        keyword: word,\n      });\n      return;\n    }\n\n    const reservedTest = !this.state.strict\n      ? isReservedWord\n      : isBinding\n      ? isStrictBindReservedWord\n      : isStrictReservedWord;\n\n    if (reservedTest(word, this.inModule)) {\n      this.raise(Errors.UnexpectedReservedWord, {\n        at: startLoc,\n        reservedWord: word,\n      });\n    }\n  }\n\n  isAwaitAllowed(): boolean {\n    if (this.prodParam.hasAwait) return true;\n    if (this.options.allowAwaitOutsideFunction && !this.scope.inFunction) {\n      return true;\n    }\n    return false;\n  }\n\n  // Parses await expression inside async function.\n\n  parseAwait(startPos: number, startLoc: Position): N.AwaitExpression {\n    const node = this.startNodeAt(startPos, startLoc);\n\n    this.expressionScope.recordParameterInitializerError(\n      Errors.AwaitExpressionFormalParameter,\n      { at: node },\n    );\n\n    if (this.eat(tt.star)) {\n      this.raise(Errors.ObsoleteAwaitStar, { at: node });\n    }\n\n    if (!this.scope.inFunction && !this.options.allowAwaitOutsideFunction) {\n      if (this.isAmbiguousAwait()) {\n        this.ambiguousScriptDifferentAst = true;\n      } else {\n        this.sawUnambiguousESM = true;\n      }\n    }\n\n    if (!this.state.soloAwait) {\n      node.argument = this.parseMaybeUnary(null, true);\n    }\n\n    return this.finishNode(node, \"AwaitExpression\");\n  }\n\n  isAmbiguousAwait(): boolean {\n    if (this.hasPrecedingLineBreak()) return true;\n    const { type } = this.state;\n    return (\n      // All the following expressions are ambiguous:\n      //   await + 0, await - 0, await ( 0 ), await [ 0 ], await / 0 /u, await ``\n      type === tt.plusMin ||\n      type === tt.parenL ||\n      type === tt.bracketL ||\n      tokenIsTemplate(type) ||\n      // Sometimes the tokenizer generates tt.slash for regexps, and this is\n      // handler by parseExprAtom\n      type === tt.regexp ||\n      type === tt.slash ||\n      // This code could be parsed both as a modulo operator or as an intrinsic:\n      //   await %x(0)\n      (this.hasPlugin(\"v8intrinsic\") && type === tt.modulo)\n    );\n  }\n\n  // Parses yield expression inside generator.\n\n  parseYield(): N.YieldExpression {\n    const node = this.startNode();\n\n    this.expressionScope.recordParameterInitializerError(\n      Errors.YieldInParameter,\n      { at: node },\n    );\n\n    this.next();\n    let delegating = false;\n    let argument = null;\n    if (!this.hasPrecedingLineBreak()) {\n      delegating = this.eat(tt.star);\n      switch (this.state.type) {\n        case tt.semi:\n        case tt.eof:\n        case tt.braceR:\n        case tt.parenR:\n        case tt.bracketR:\n        case tt.braceBarR:\n        case tt.colon:\n        case tt.comma:\n          // The above is the complete set of tokens that can\n          // follow an AssignmentExpression, and none of them\n          // can start an AssignmentExpression\n          if (!delegating) break;\n        /* fallthrough */\n        default:\n          argument = this.parseMaybeAssign();\n      }\n    }\n    node.delegate = delegating;\n    node.argument = argument;\n    return this.finishNode(node, \"YieldExpression\");\n  }\n\n  // Validates a pipeline (for any of the pipeline Babylon plugins) at the point\n  // of the infix operator `|>`.\n\n  checkPipelineAtInfixOperator(left: N.Expression, leftStartLoc: Position) {\n    if (this.hasPlugin([\"pipelineOperator\", { proposal: \"smart\" }])) {\n      if (left.type === \"SequenceExpression\") {\n        // Ensure that the pipeline head is not a comma-delimited\n        // sequence expression.\n        this.raise(Errors.PipelineHeadSequenceExpression, {\n          at: leftStartLoc,\n        });\n      }\n    }\n  }\n\n  parseSmartPipelineBodyInStyle(\n    childExpr: N.Expression,\n    startPos: number,\n    startLoc: Position,\n  ): N.PipelineBody {\n    const bodyNode = this.startNodeAt(startPos, startLoc);\n    if (this.isSimpleReference(childExpr)) {\n      bodyNode.callee = childExpr;\n      return this.finishNode(bodyNode, \"PipelineBareFunction\");\n    } else {\n      this.checkSmartPipeTopicBodyEarlyErrors(startLoc);\n      bodyNode.expression = childExpr;\n      return this.finishNode(bodyNode, \"PipelineTopicExpression\");\n    }\n  }\n\n  isSimpleReference(expression: N.Expression): boolean {\n    switch (expression.type) {\n      case \"MemberExpression\":\n        return (\n          !expression.computed && this.isSimpleReference(expression.object)\n        );\n      case \"Identifier\":\n        return true;\n      default:\n        return false;\n    }\n  }\n\n  // This helper method is to be called immediately\n  // after a topic-style smart-mix pipe body is parsed.\n  // The `startLoc` is the starting position of the pipe body.\n\n  checkSmartPipeTopicBodyEarlyErrors(startLoc: Position): void {\n    // If the following token is invalidly `=>`, then throw a human-friendly error\n    // instead of something like 'Unexpected token, expected \";\"'.\n    // For example, `x => x |> y => #` (assuming `#` is the topic reference)\n    // groups into `x => (x |> y) => #`,\n    // and `(x |> y) => #` is an invalid arrow function.\n    // This is because smart-mix `|>` has tighter precedence than `=>`.\n    if (this.match(tt.arrow)) {\n      throw this.raise(Errors.PipelineBodyNoArrow, { at: this.state.startLoc });\n    }\n\n    // A topic-style smart-mix pipe body must use the topic reference at least once.\n    if (!this.topicReferenceWasUsedInCurrentContext()) {\n      this.raise(Errors.PipelineTopicUnused, { at: startLoc });\n    }\n  }\n\n  // Enable topic references from outer contexts within Hack-style pipe bodies.\n  // The function modifies the parser's topic-context state to enable or disable\n  // the use of topic references.\n  // The function then calls a callback, then resets the parser\n  // to the old topic-context state that it had before the function was called.\n\n  withTopicBindingContext<T>(callback: () => T): T {\n    const outerContextTopicState = this.state.topicContext;\n    this.state.topicContext = {\n      // Enable the use of the primary topic reference.\n      maxNumOfResolvableTopics: 1,\n      // Hide the use of any topic references from outer contexts.\n      maxTopicIndex: null,\n    };\n\n    try {\n      return callback();\n    } finally {\n      this.state.topicContext = outerContextTopicState;\n    }\n  }\n\n  // This helper method is used only with the deprecated smart-mix pipe proposal.\n  // Disables topic references from outer contexts within syntax constructs\n  // such as the bodies of iteration statements.\n  // The function modifies the parser's topic-context state to enable or disable\n  // the use of topic references with the smartPipelines plugin. They then run a\n  // callback, then they reset the parser to the old topic-context state that it\n  // had before the function was called.\n\n  withSmartMixTopicForbiddingContext<T>(callback: () => T): T {\n    if (this.hasPlugin([\"pipelineOperator\", { proposal: \"smart\" }])) {\n      // Reset the parser’s topic context only if the smart-mix pipe proposal is active.\n      const outerContextTopicState = this.state.topicContext;\n      this.state.topicContext = {\n        // Disable the use of the primary topic reference.\n        maxNumOfResolvableTopics: 0,\n        // Hide the use of any topic references from outer contexts.\n        maxTopicIndex: null,\n      };\n\n      try {\n        return callback();\n      } finally {\n        this.state.topicContext = outerContextTopicState;\n      }\n    } else {\n      // If the pipe proposal is \"minimal\", \"fsharp\", or \"hack\",\n      // or if no pipe proposal is active,\n      // then the callback result is returned\n      // without touching any extra parser state.\n      return callback();\n    }\n  }\n\n  withSoloAwaitPermittingContext<T>(callback: () => T): T {\n    const outerContextSoloAwaitState = this.state.soloAwait;\n    this.state.soloAwait = true;\n\n    try {\n      return callback();\n    } finally {\n      this.state.soloAwait = outerContextSoloAwaitState;\n    }\n  }\n\n  allowInAnd<T>(callback: () => T): T {\n    const flags = this.prodParam.currentFlags();\n    const prodParamToSet = PARAM_IN & ~flags;\n    if (prodParamToSet) {\n      this.prodParam.enter(flags | PARAM_IN);\n      try {\n        return callback();\n      } finally {\n        this.prodParam.exit();\n      }\n    }\n    return callback();\n  }\n\n  disallowInAnd<T>(callback: () => T): T {\n    const flags = this.prodParam.currentFlags();\n    const prodParamToClear = PARAM_IN & flags;\n    if (prodParamToClear) {\n      this.prodParam.enter(flags & ~PARAM_IN);\n      try {\n        return callback();\n      } finally {\n        this.prodParam.exit();\n      }\n    }\n    return callback();\n  }\n\n  // Register the use of a topic reference within the current\n  // topic-binding context.\n  registerTopicReference(): void {\n    this.state.topicContext.maxTopicIndex = 0;\n  }\n\n  topicReferenceIsAllowedInCurrentContext(): boolean {\n    return this.state.topicContext.maxNumOfResolvableTopics >= 1;\n  }\n\n  topicReferenceWasUsedInCurrentContext(): boolean {\n    return (\n      this.state.topicContext.maxTopicIndex != null &&\n      this.state.topicContext.maxTopicIndex >= 0\n    );\n  }\n\n  parseFSharpPipelineBody(prec: number): N.Expression {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n\n    this.state.potentialArrowAt = this.state.start;\n    const oldInFSharpPipelineDirectBody = this.state.inFSharpPipelineDirectBody;\n    this.state.inFSharpPipelineDirectBody = true;\n\n    const ret = this.parseExprOp(\n      this.parseMaybeUnaryOrPrivate(),\n      startPos,\n      startLoc,\n      prec,\n    );\n\n    this.state.inFSharpPipelineDirectBody = oldInFSharpPipelineDirectBody;\n\n    return ret;\n  }\n\n  // https://github.com/tc39/proposal-js-module-blocks\n  parseModuleExpression(): N.ModuleExpression {\n    this.expectPlugin(\"moduleBlocks\");\n    const node = this.startNode<N.ModuleExpression>();\n    this.next(); // eat \"module\"\n    this.eat(tt.braceL);\n\n    const revertScopes = this.initializeScopes(/** inModule */ true);\n    this.enterInitialScopes();\n\n    const program = this.startNode<N.Program>();\n    try {\n      node.body = this.parseProgram(program, tt.braceR, \"module\");\n    } finally {\n      revertScopes();\n    }\n    this.eat(tt.braceR);\n    return this.finishNode<N.ModuleExpression>(node, \"ModuleExpression\");\n  }\n\n  // Used in Flow plugin\n  parsePropertyNamePrefixOperator(\n    // eslint-disable-next-line no-unused-vars\n    prop: N.ObjectOrClassMember | N.ClassMember,\n  ): void {}\n}\n","// @flow\n\nimport type { Options } from \"../options\";\nimport type State from \"../tokenizer/state\";\nimport type { PluginsMap } from \"./index\";\nimport type ScopeHandler from \"../util/scope\";\nimport type ExpressionScopeHandler from \"../util/expression-scope\";\nimport type ClassScopeHandler from \"../util/class-scope\";\nimport type ProductionParameterHandler from \"../util/production-parameter\";\n\nexport default class BaseParser {\n  // Properties set by constructor in index.js\n  declare options: Options;\n  declare inModule: boolean;\n  declare scope: ScopeHandler<*>;\n  declare classScope: ClassScopeHandler;\n  declare prodParam: ProductionParameterHandler;\n  declare expressionScope: ExpressionScopeHandler;\n  declare plugins: PluginsMap;\n  declare filename: ?string;\n  // Names of exports store. `default` is stored as a name for both\n  // `export default foo;` and `export { foo as default };`.\n  declare exportedIdentifiers: Set<string>;\n  sawUnambiguousESM: boolean = false;\n  ambiguousScriptDifferentAst: boolean = false;\n\n  // Initialized by Tokenizer\n  declare state: State;\n  // input and length are not in state as they are constant and we do\n  // not want to ever copy them, which happens if state gets cloned\n  declare input: string;\n  declare length: number;\n\n  // This method accepts either a string (plugin name) or an array pair\n  // (plugin name and options object). If an options object is given,\n  // then each value is non-recursively checked for identity with that\n  // plugin’s actual option value.\n  hasPlugin(pluginConfig: PluginConfig): boolean {\n    if (typeof pluginConfig === \"string\") {\n      return this.plugins.has(pluginConfig);\n    } else {\n      const [pluginName, pluginOptions] = pluginConfig;\n      if (!this.hasPlugin(pluginName)) {\n        return false;\n      }\n      const actualOptions = this.plugins.get(pluginName);\n      for (const key of Object.keys(pluginOptions)) {\n        if (actualOptions?.[key] !== pluginOptions[key]) {\n          return false;\n        }\n      }\n      return true;\n    }\n  }\n\n  getPluginOption(plugin: string, name: string) {\n    return this.plugins.get(plugin)?.[name];\n  }\n}\n\nexport type PluginConfig = string | [string, { [string]: any }];\n","// @flow\n\nimport { type Options } from \"./options\";\nimport {\n  hasPlugin,\n  validatePlugins,\n  mixinPluginNames,\n  mixinPlugins,\n  type PluginList,\n} from \"./plugin-utils\";\nimport Parser from \"./parser\";\n\nimport { getExportedToken, tt as internalTokenTypes } from \"./tokenizer/types\";\nimport \"./tokenizer/context\";\n\nimport type { Expression, File } from \"./types\";\n\nexport function parse(input: string, options?: Options): File {\n  if (options?.sourceType === \"unambiguous\") {\n    options = {\n      ...options,\n    };\n    try {\n      options.sourceType = \"module\";\n      const parser = getParser(options, input);\n      const ast = parser.parse();\n\n      if (parser.sawUnambiguousESM) {\n        return ast;\n      }\n\n      if (parser.ambiguousScriptDifferentAst) {\n        // Top level await introduces code which can be both a valid script and\n        // a valid module, but which produces different ASTs:\n        //    await\n        //    0\n        // can be parsed either as an AwaitExpression, or as two ExpressionStatements.\n        try {\n          options.sourceType = \"script\";\n          return getParser(options, input).parse();\n        } catch {}\n      } else {\n        // This is both a valid module and a valid script, but\n        // we parse it as a script by default\n        ast.program.sourceType = \"script\";\n      }\n\n      return ast;\n    } catch (moduleError) {\n      try {\n        options.sourceType = \"script\";\n        return getParser(options, input).parse();\n      } catch {}\n\n      throw moduleError;\n    }\n  } else {\n    return getParser(options, input).parse();\n  }\n}\n\nexport function parseExpression(input: string, options?: Options): Expression {\n  const parser = getParser(options, input);\n  if (parser.options.strictMode) {\n    parser.state.strict = true;\n  }\n  return parser.getExpression();\n}\n\nfunction generateExportedTokenTypes(internalTokenTypes) {\n  const tokenTypes = {};\n  for (const typeName of Object.keys(internalTokenTypes)) {\n    tokenTypes[typeName] = getExportedToken(internalTokenTypes[typeName]);\n  }\n  return tokenTypes;\n}\n\nexport const tokTypes = generateExportedTokenTypes(internalTokenTypes);\n\nfunction getParser(options: ?Options, input: string): Parser {\n  let cls = Parser;\n  if (options?.plugins) {\n    validatePlugins(options.plugins);\n    cls = getParserClass(options.plugins);\n  }\n\n  return new cls(options, input);\n}\n\nconst parserClassCache: { [key: string]: Class<Parser> } = {};\n\n/** Get a Parser class with plugins applied. */\nfunction getParserClass(pluginsFromOptions: PluginList): Class<Parser> {\n  const pluginList = mixinPluginNames.filter(name =>\n    hasPlugin(pluginsFromOptions, name),\n  );\n\n  const key = pluginList.join(\"/\");\n  let cls = parserClassCache[key];\n  if (!cls) {\n    cls = Parser;\n    for (const plugin of pluginList) {\n      cls = mixinPlugins[plugin](cls);\n    }\n    parserClassCache[key] = cls;\n  }\n  return cls;\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","__webpack_require__.nmd = (module) => {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","import * as fs from 'fs';\r\nimport * as path from 'path';\r\n\r\nexport interface IConfig {\r\n  port: number;\r\n  ingressUrl?: string;\r\n  homeAssistaneSocketUri: string;\r\n  homeAssistaneApiKey: string;\r\n}\r\n\r\nconst readFileAsJson = (filePath: string): any => {\r\n  console.info('Reading File:', filePath);\r\n  const rawdata = fs.readFileSync(filePath);\r\n  return JSON.parse(rawdata.toString());\r\n};\r\n\r\nconst options = fs.existsSync('/data/options.json')\r\n  ? readFileAsJson('/data/options.json')\r\n  : JSON.parse(process?.env?.options || '{}');\r\n\r\nconsole.debug('App options', options);\r\n\r\nconst port = process.env.SERVER_PORT ? parseInt(process.env.SERVER_PORT) : 4001;\r\n\r\nObject.keys(process.env).forEach((x) => {\r\n  console.log(`process.env.${x} = ${process.env[x]}`);\r\n});\r\n\r\nexport const getConfig = (): IConfig => {\r\n  return {\r\n    port: port,\r\n    ingressUrl: process.env.INGRESS_URL,\r\n    homeAssistaneApiKey: process.env.HASSIO_TOKEN || '',\r\n    homeAssistaneSocketUri:\r\n      process.env.HA_SOCKET_URL || 'ws://hassio/homeassistant/api/websocket',\r\n  };\r\n};\r\n","import { IHomeAssistantArea, IHomeAssistantDevice, IHomeAssistantEntity, IHomeAssistantEntityStatus } from './home-assistant-entities';\r\nimport { Observable, filter, map, shareReplay } from 'rxjs';\r\nimport { HomeAssistantWebSocket, IMassageBase } from './home-assistant-web-socket';\r\n\r\nexport class HomeAssistantDataAccess {\r\n  private homeAssistantWebSocket: HomeAssistantWebSocket;\r\n\r\n  private entityStatus?: Observable<IHomeAssistantEntityStatus[]>;\r\n  private entityStatusUpdated?: Observable<IHomeAssistantEntityStatus>;\r\n\r\n  private areas?: Observable<IHomeAssistantArea[]>;\r\n  private entities?: Observable<IHomeAssistantEntity[]>;\r\n  private devices?: Observable<IHomeAssistantDevice[]>;\r\n\r\n  private counter = 1;\r\n\r\n  constructor(private url: string, private token: string) {\r\n    this.homeAssistantWebSocket = new HomeAssistantWebSocket(url, token);\r\n  }\r\n\r\n  getEntityStatus(): Observable<IHomeAssistantEntityStatus[]> {\r\n    if (!this.entityStatus) {\r\n      this.entityStatus = this.createSubScription(\r\n        {\r\n          id: this.counter,\r\n          type: 'get_states'\r\n        },\r\n        this.counter++\r\n      ).pipe(\r\n        map(msg => {\r\n          return (msg as any).result as IHomeAssistantEntityStatus[];\r\n        }),\r\n        shareReplay(1)\r\n      );\r\n    }\r\n    return this.entityStatus;\r\n  }\r\n\r\n  getEntityStatusUpdated(): Observable<IHomeAssistantEntityStatus> {\r\n    if (!this.entityStatusUpdated) {\r\n      this.entityStatusUpdated = this.createSubScription(\r\n        {\r\n          id: this.counter,\r\n          type: 'subscribe_events',\r\n          event_type: 'state_changed'\r\n        },\r\n        this.counter++\r\n      ).pipe(\r\n        filter(x => x.event?.event_type === 'state_changed'),\r\n        map(msg => {\r\n          return (msg as any).event.data\r\n            .new_state as IHomeAssistantEntityStatus;\r\n        }),\r\n        shareReplay(1)\r\n      );\r\n    }\r\n    return this.entityStatusUpdated;\r\n  }\r\n\r\n  getAreas() {\r\n    if (!this.areas) {\r\n      this.areas = this.createSubScription(\r\n        {\r\n          id: this.counter,\r\n          type: 'config/area_registry/list'\r\n        },\r\n        this.counter++\r\n      ).pipe(\r\n        map(msg => {\r\n          return (msg as any).result as IHomeAssistantArea[];\r\n        }),\r\n        shareReplay(1)\r\n      );\r\n    }\r\n\r\n    return this.areas;\r\n  }\r\n\r\n  getEntities() {\r\n    if (!this.entities) {\r\n      this.entities = this.createSubScription(\r\n        {\r\n          id: this.counter,\r\n          type: 'config/entity_registry/list'\r\n        },\r\n        this.counter++\r\n      ).pipe(\r\n        map(msg => {\r\n          return (msg as any).result as IHomeAssistantEntity[];\r\n        }),\r\n        shareReplay(1)\r\n      );\r\n    }\r\n\r\n    return this.entities;\r\n  }\r\n\r\n  getDevices() {\r\n    if (!this.devices) {\r\n      this.devices = this.createSubScription(\r\n        {\r\n          id: this.counter,\r\n          type: 'config/device_registry/list'\r\n        },\r\n        this.counter++\r\n      ).pipe(\r\n        map(msg => {\r\n          return (msg as any).result as IHomeAssistantDevice[];\r\n        }),\r\n        shareReplay(1)\r\n      );\r\n    }\r\n\r\n    return this.devices;\r\n  }\r\n\r\n  private createSubScription(iniMessage: IMassageBase, resultId: number) {\r\n    this.homeAssistantWebSocket.next(iniMessage);\r\n\r\n    return this.homeAssistantWebSocket\r\n      .messages()\r\n      .pipe(filter(x => x.id === resultId));\r\n  }\r\n}\r\n\r\nlet instance: HomeAssistantDataAccess;\r\n\r\nexport const getHomeAssistantDataAccess = (url: string, token: string) => {\r\n  if (!instance) {\r\n    instance = new HomeAssistantDataAccess(url, token);\r\n  }\r\n  return instance;\r\n};\r\n","import { parse } from '@babel/parser';\r\nimport { ExpressionStatement, Identifier, Program, Node } from '@babel/types';\r\n\r\nexport interface DeviceFromProps {\r\n  domain: string;\r\n  name: string;\r\n  prop: string;\r\n}\r\n\r\nconst cleanSwitchDomain = (v: string): string =>\r\n  v.replace('switch.', '__switch.');\r\n\r\nconst restoreSwitchDomain = (v: string): string =>\r\n  v.replace('__switch', 'switch');\r\n\r\nconst fn: { [key: string]: (...args: any[]) => any } = {\r\n  equals: (...args: any[]) => {\r\n    // console.log('equals', args);\r\n    return args[0] === args[1];\r\n  },\r\n  toNum: (...args: any[]) => {\r\n    // console.log('toNum', args[0]);\r\n    return parseFloat(args[0]);\r\n  },\r\n  toInt: (...args: any[]) => {\r\n    // console.log('toInt', args[0]);\r\n    return parseInt(args[0]);\r\n  }\r\n};\r\n\r\nconst resolveType = (node: Node, object: any, resolve: boolean): any => {\r\n  if (node.type === 'StringLiteral') {\r\n    return node.value;\r\n  }\r\n\r\n  if (node.type === 'NumericLiteral') {\r\n    return node.value;\r\n  }\r\n\r\n  if (node.type === 'MemberExpression') {\r\n    const o = resolveType(node.object, object, resolve);\r\n    const p = resolveType(node.property, object, resolve);\r\n    if (resolve) {\r\n      const r = typeof o === 'string' ? object[o][p] : o[p];\r\n      return r;\r\n    }\r\n\r\n    if (typeof o === 'string') {\r\n      object[o] = {};\r\n      object[o][p] = {};\r\n      return object[o][p];\r\n    }\r\n\r\n    return (o[p] = {});\r\n  }\r\n\r\n  if (node.type === 'Identifier') {\r\n    return restoreSwitchDomain(node.name);\r\n  }\r\n\r\n  if (node.type === 'CallExpression') {\r\n    return fn[(node.callee as Identifier).name](\r\n      ...resolveTypes(node.arguments, object, resolve)\r\n    );\r\n  }\r\n\r\n  console.error('resolveType', node.type, node);\r\n};\r\n\r\nconst resolveTypes = (nodes: Node[], object: any, resolve: boolean): any[] => {\r\n  return nodes.map((x) => resolveType(x, object, resolve));\r\n};\r\n\r\nexport const resolveValue = (value: string, object: any) => {\r\n  const ast = parse(cleanSwitchDomain(value), {\r\n    sourceType: 'module',\r\n    plugins: [],\r\n  });\r\n\r\n  const body = (ast.program as Program).body;\r\n\r\n  const expressionStatement: ExpressionStatement[] = body.filter(\r\n    (x) => x.type === 'ExpressionStatement'\r\n  ) as ExpressionStatement[];\r\n\r\n  const results = expressionStatement.map((x) => {\r\n    const expression = x.expression;\r\n    return resolveType(expression, object, true);\r\n  });\r\n  return results[0];\r\n};\r\n\r\nconst findReferances = (value: string): { [key: string]: any } => {\r\n  const object = {};\r\n  const ast = parse(value, {\r\n    sourceType: 'module',\r\n    plugins: [],\r\n  });\r\n\r\n  const body = (ast.program as Program).body;\r\n\r\n  const expressionStatement: ExpressionStatement[] = body.filter(\r\n    (x) => x.type === 'ExpressionStatement'\r\n  ) as ExpressionStatement[];\r\n\r\n  expressionStatement.forEach((x) => {\r\n    const expression = x.expression;\r\n    resolveType(expression, object, false);\r\n  });\r\n  return object;\r\n};\r\n\r\nexport const getDevicesFromProps = (\r\n  stringOrExpression: string\r\n): DeviceFromProps[] | undefined => {\r\n  const deviceProp = cleanSwitchDomain(stringOrExpression);\r\n\r\n  const referances = findReferances(deviceProp);\r\n\r\n  // console.log('getDevicesFromProps.referances', referances);\r\n\r\n  if (!referances) {\r\n    return;\r\n  }\r\n\r\n  const results: DeviceFromProps[] = [];\r\n\r\n  Object.keys(referances).forEach((d) => {\r\n    Object.keys(referances[d]).forEach((e) => {\r\n      Object.keys(referances[d][e]).forEach((p) => {\r\n        results.push({\r\n          domain: restoreSwitchDomain(d),\r\n          name: e,\r\n          prop: p,\r\n        });\r\n      });\r\n    });\r\n  });\r\n\r\n  return results;\r\n};\r\n","import { Observable } from 'rxjs';\r\nimport { getDevicesFromProps } from './devices-props';\r\n\r\nexport interface IDeviceSubs {\r\n  [entityId: string]: {\r\n    key: string;\r\n    prop: string;\r\n    expression: string;\r\n  }[];\r\n}\r\n\r\nexport interface IDevice {\r\n  name: string;\r\n  subs: IDeviceSubs;\r\n}\r\n\r\nexport interface IDeviceV2 {\r\n  name: string;\r\n  status: { [key: string]: any };\r\n  subs: { [key: string]: any };\r\n}\r\n\r\nconst getDeviceDehumidifier = () => ({\r\n  // online: true,\r\n  on: `equals(switch.kogan_8.state, 'on')`,\r\n  currentFanSpeedSetting: 'low_key',\r\n  humiditySetpointPercent: '40',\r\n  humidityAmbientPercent: 'toInt(sensor.d1_mini_3_humidity.state)',\r\n});\r\n\r\nconst getDeviceClimate = (deviceName: string) => ({\r\n  thermostatMode: `climate.${deviceName}_climate.state`,\r\n  thermostatTemperatureSetpoint: `toInt(climate.${deviceName}_climate.temperature)`,\r\n  thermostatTemperatureAmbient: `toInt(sensor.${deviceName}_temperature.state)`,\r\n  thermostatHumidityAmbient: `toInt(sensor.${deviceName}_humidity.state)`,\r\n});\r\n\r\nconst getDeviceSubsV2 = (device: any): { [key: string]: any } =>\r\n  Object.keys(device).reduce<{ [key: string]: any }>((acc, x) => {\r\n    const list = getDevicesFromProps(device[x]);\r\n\r\n    if (list) {\r\n      list.forEach((item) => {\r\n        const key = `${item.domain}.${item.name}`;\r\n        acc[key] = true;\r\n      });\r\n    }\r\n    return acc;\r\n  }, {});\r\n\r\nexport const getDevicesV2$: Observable<{\r\n  devices: IDeviceV2[];\r\n  allSubs: { [key: string]: any };\r\n}> = new Observable((sub) => {\r\n  const fakeDevices: { [key: string]: any } = {\r\n    d1_mini_4: getDeviceClimate('d1_mini_4'),\r\n    d1_mini_3: getDeviceClimate('d1_mini_3'),\r\n    wroom_32_1: getDeviceClimate('wroom_32_1'),\r\n    dehumidifier: getDeviceDehumidifier(),\r\n  };\r\n\r\n  // console.warn('getDeviceSubs', fakeDevices);\r\n\r\n  const deviceSubs = Object.keys(fakeDevices).map((x) => ({\r\n    name: x,\r\n    status: fakeDevices[x],\r\n    subs: getDeviceSubsV2(fakeDevices[x]),\r\n  }));\r\n\r\n  sub.next({\r\n    devices: deviceSubs,\r\n    allSubs: deviceSubs.reduce<{ [key: string]: any }>((acc, i) => {\r\n      acc = { ...(acc || {}), ...i.subs };\r\n      return acc;\r\n    }, {}),\r\n  });\r\n});\r\n","export const logging = {\r\n  error: (err: any, ...parms: any[]) => console.error(err, ...parms),\r\n  warn: (msg: string, ...parms: any[]) => console.warn(msg, ...parms),\r\n  log: (msg: string, ...parms: any[]) => console.log(msg, ...parms),\r\n  info: (msg: string, ...parms: any[]) => console.info(msg, ...parms),\r\n  debug: (msg: string, ...parms: any[]) => console.warn(msg, ...parms),\r\n};\r\n","import { ReplaySubject } from 'rxjs';\r\nimport { webSocket, WebSocketSubject } from 'rxjs/webSocket';\r\nimport { logging } from './utils/logging';\r\n\r\nexport interface IMassageBase {\r\n  type: string;\r\n  id?: number;\r\n  access_token?: string;\r\n  success?: boolean;\r\n  event?: {\r\n    event_type?: string;\r\n  };\r\n  event_type?: string;\r\n}\r\n\r\nexport class HomeAssistantWebSocket {\r\n  private webSocketSubject!: WebSocketSubject<IMassageBase>;\r\n\r\n  private homeAssistantResult: ReplaySubject<IMassageBase> = new ReplaySubject(\r\n    1\r\n  );\r\n\r\n  private subscribedMessages: IMassageBase[] = [];\r\n\r\n  constructor(private url: string, private token: string) {\r\n    this.initWebSocket();\r\n  }\r\n\r\n  initWebSocket() {\r\n    this.webSocketSubject = webSocket<IMassageBase>({\r\n      url: this.url,\r\n      closeObserver: {\r\n        next: () => {\r\n          logging.error('Home Assistant Web Socket Closed');\r\n          setTimeout(() => {\r\n            logging.debug('Re connecting');\r\n            this.initWebSocket();\r\n          }, 5000);\r\n        },\r\n      },\r\n    });\r\n\r\n    this.webSocketSubject.subscribe({\r\n      next: (msg) => {\r\n        this.processMessage(msg);\r\n      },\r\n      error: () => {\r\n        logging.error('HomeAssistantWebSocket ws error');\r\n        this.webSocketSubject.complete();\r\n      },\r\n      complete: () => {\r\n        logging.warn('webSocket completed');\r\n      },\r\n    });\r\n  }\r\n\r\n  messages() {\r\n    return this.homeAssistantResult.asObservable();\r\n  }\r\n\r\n  next(massageBase: IMassageBase) {\r\n    this.subscribedMessages.push(massageBase);\r\n\r\n    if (!this.webSocketSubject) {\r\n      this.initWebSocket();\r\n    } else {\r\n      logging.debug('Adding Messages - WS Open', massageBase);\r\n      this.webSocketSubject.next(massageBase);\r\n    }\r\n  }\r\n\r\n  private processMessage(msg: IMassageBase) {\r\n    if (msg.type === 'auth_required') {\r\n      this.webSocketSubject.next({\r\n        type: 'auth',\r\n        access_token: this.token,\r\n      });\r\n    } else if (msg.type === 'auth_ok') {\r\n      this.subscribedMessages.forEach((m) => {\r\n        logging.debug('Adding Messages', m);\r\n        this.webSocketSubject.next(m);\r\n      });\r\n    } else if (msg.type === 'result') {\r\n      this.homeAssistantResult.next(msg);\r\n    } else if (msg.type === 'event') {\r\n      this.homeAssistantResult.next(msg);\r\n    } else if (msg.type === 'auth_invalid') {\r\n      logging.error('Auth Error', (msg as any).message);\r\n      logging.info('Token', {\r\n        token: this.token,\r\n        url: this.url,\r\n      });\r\n    } else {\r\n      logging.warn('processMessage unknown', msg);\r\n    }\r\n  }\r\n}\r\n","import createWebSocketStream from './lib/stream.js';\nimport Receiver from './lib/receiver.js';\nimport Sender from './lib/sender.js';\nimport WebSocket from './lib/websocket.js';\nimport WebSocketServer from './lib/websocket-server.js';\n\nexport { createWebSocketStream, Receiver, Sender, WebSocket, WebSocketServer };\nexport default WebSocket;\n","import {\r\n  getHomeAssistantDataAccess,\r\n  HomeAssistantDataAccess,\r\n  getDeviceStatusV2$,\r\n} from '@ha-assistant/listner';\r\nimport { Server } from 'http';\r\nimport WebSocket from 'ws';\r\nimport { getConfig } from './config';\r\n\r\nlet socket: HomeAssistantDataAccess;\r\n\r\nexport const webSocketInit = (server: Server) => {\r\n  const config = getConfig();\r\n\r\n  let lastDevices: any;\r\n\r\n  const wss = new WebSocket.Server({\r\n    path: '/ws',\r\n    server,\r\n  });\r\n\r\n  console.log('created socket server', wss.path);\r\n\r\n  wss.on('connection', (ws) => {\r\n    ws.send(JSON.stringify({ type: 'welcome', value: 'Hello' }));\r\n\r\n    if (lastDevices) {\r\n      ws.send(\r\n        JSON.stringify({ type: 'devices', value: lastDevices, fromCache: true })\r\n      );\r\n    }\r\n\r\n    ws.on('message', (message) => {\r\n      console.log('from Client', message.toLocaleString());\r\n      ws.send(\r\n        JSON.stringify({\r\n          type: 'debug',\r\n          value: 'There be gold in them thar hills.',\r\n        })\r\n      );\r\n    });\r\n\r\n    ws.on('close', (e) => {\r\n      console.log('client gone', e);\r\n    });\r\n  });\r\n\r\n  socket = getHomeAssistantDataAccess(\r\n    config.homeAssistaneSocketUri,\r\n    config.homeAssistaneApiKey\r\n  );\r\n\r\n  const deviceStatus$ = getDeviceStatusV2$(socket).subscribe({\r\n    next: (d) => {\r\n      lastDevices = d;\r\n\r\n      wss.clients.forEach(function each(client) {\r\n        if (client.readyState === WebSocket.OPEN) {\r\n          client.send(JSON.stringify({ type: 'devices', value: d }));\r\n        }\r\n      });\r\n    },\r\n  });\r\n\r\n  return wss;\r\n};\r\n","import dotenv from 'dotenv';\r\ndotenv.config();\r\n(global as any).WebSocket = require('ws');\r\n\r\nimport express from 'express';\r\nimport { apiInit } from './api-endpoints';\r\nimport { clientInit } from './client-endpoints';\r\nimport { IConfig, getConfig } from './config';\r\nimport { webSocketInit } from './websocket-endpoint';\r\nimport { Server } from 'http';\r\nimport * as http from 'http';\r\nimport * as WebSocket from 'ws';\r\n// import * as cors from 'cors';\r\n\r\nconst cors = require('cors');\r\n\r\nconst app = express();\r\n\r\napp.use(cors());\r\n\r\nconst config = getConfig();\r\n\r\nclientInit(app, config);\r\napiInit(app);\r\n\r\nconst server = http.createServer(app);\r\n\r\nwebSocketInit(server);\r\n\r\n\r\nserver.listen(config.port, () => {\r\n  console.log(`server started at http://localhost:${config.port}`);\r\n});\r\n\r\nconst handle = (signal: number) => {\r\n  console.log(`*^!@4=> Received event: ${signal}`);\r\n};\r\nprocess.on('SIGHUP', handle);\r\n","import express from 'express';\r\nimport { type Express } from 'express';\r\nimport { IConfig } from './config';\r\n\r\nexport const clientInit = (app: Express, config: IConfig) => {\r\n  app.use('/', express.static('public'));\r\n\r\n  app.get('/config.js', (req, res) => {\r\n    const clientConfig = {\r\n      API: config.port,\r\n      SOCKET: 123,\r\n      INGRESS_URL: config.ingressUrl,\r\n    };\r\n\r\n    res.set('Content-Type', 'application/javascript');\r\n    res.send(`window.config = ${JSON.stringify(clientConfig)}`);\r\n  });\r\n};\r\n","import { type Express } from 'express';\r\n\r\nexport const apiInit = (app: Express) => {\r\n  app.get('/api', (req, res) => {\r\n    res.send({\r\n      name: 'hello',\r\n    });\r\n  });\r\n};\r\n","import { Observable, combineLatestWith, map } from 'rxjs';\r\nimport { getDevicesV2$ } from './devices';\r\nimport { resolveValue } from './devices-props';\r\nimport { HomeAssistantDataAccess } from './home-assistant-data-access';\r\n\r\nexport const getDeviceStatusV2$ = (socket: HomeAssistantDataAccess) =>\r\n  new Observable<{ [key: string]: any }>((obs) => {\r\n    let devicesState: { [key: string]: any } = {};\r\n    const entitesState: { [key: string]: any } = {};\r\n\r\n    const entityStatus$ = getDevicesV2$\r\n      .pipe(\r\n        combineLatestWith(socket.getEntityStatus()),\r\n        map(([devices, entites]) => {\r\n          entites.forEach((x) => {\r\n            const [domain, name] = x.entity_id.split('.');\r\n            entitesState[domain] = { ...(entitesState[domain] || {}) };\r\n            entitesState[domain][name] = {\r\n              state: x.state,\r\n            };\r\n            Object.keys(x.attributes).forEach((a) => {\r\n              entitesState[domain][name][a] = x.attributes[a];\r\n            });\r\n          });\r\n\r\n          return devices.devices.reduce<{ [key: string]: any }>((acc, y) => {\r\n            acc[y.name] = Object.keys(y.status).reduce<{ [key: string]: any }>(\r\n              (acc2, i) => ({\r\n                ...acc2,\r\n                [i]: resolveValue(y.status[i], entitesState),\r\n              }),\r\n              {}\r\n            );\r\n            return acc;\r\n          }, {});\r\n        })\r\n      )\r\n      .subscribe({\r\n        next: (msg) => {\r\n          devicesState = msg;\r\n          obs.next(devicesState);\r\n        },\r\n      });\r\n\r\n    const entityStatusUpdated$ = getDevicesV2$\r\n      .pipe(\r\n        combineLatestWith(socket.getEntityStatusUpdated()),\r\n        map(([devices, update]) => {\r\n          let found = false;\r\n\r\n          if (update === undefined || update.entity_id === undefined) {\r\n            return {\r\n              found: false,\r\n              devices: {}\r\n            };\r\n          }\r\n\r\n          if (update.entity_id in devices.allSubs) {\r\n            console.warn('found', update);\r\n            found = true;\r\n\r\n            const [domain, name] = update.entity_id.split('.');\r\n            entitesState[domain] = { ...(entitesState[domain] || {}) };\r\n            entitesState[domain][name] = {\r\n              state: update.state,\r\n            };\r\n            Object.keys(update.attributes).forEach((a) => {\r\n              entitesState[domain][name][a] = update.attributes[a];\r\n            });\r\n          }\r\n\r\n          let updatedDevices: { [key: string]: any } = {};\r\n\r\n          if (found) {\r\n            updatedDevices = devices.devices.reduce<{\r\n              [key: string]: any;\r\n            }>((acc, y) => {\r\n              acc[y.name] = Object.keys(y.status).reduce<{\r\n                [key: string]: any;\r\n              }>(\r\n                (acc2, i) => ({\r\n                  ...acc2,\r\n                  [i]: resolveValue(y.status[i], entitesState),\r\n                }),\r\n                {}\r\n              );\r\n              return acc;\r\n            }, {});\r\n          }\r\n\r\n          return {\r\n            devices: updatedDevices,\r\n            found,\r\n          };\r\n        })\r\n      )\r\n      .subscribe({\r\n        next: (msg) => {\r\n          if (msg.found) {\r\n            devicesState = msg.devices;\r\n            obs.next(devicesState);\r\n          }\r\n          //   console.log('entityStatusUpdated$', msg);\r\n        },\r\n      });\r\n\r\n    return () => {\r\n      console.warn('unsub');\r\n      entityStatus$.unsubscribe();\r\n      entityStatusUpdated$.unsubscribe();\r\n    };\r\n  });\r\n"],"names":["webpackEmptyContext","req","e","Error","code","keys","resolve","id","module","exports","Negotiator","mime","Accepts","this","headers","negotiator","extToMime","type","indexOf","lookup","validMime","prototype","types","types_","Array","isArray","arguments","length","i","mediaTypes","accept","mimes","map","accepts","filter","first","encoding","encodings","encodings_","charset","charsets","charsets_","lang","langs","language","languages","languages_","flattenWithDepth","array","result","depth","value","push","flattenForever","deprecate","parsers","Object","create","createParserGetter","name","parserName","parser","undefined","loadParser","function","options","opts","prop","_urlencoded","urlencoded","_json","json","res","next","err","defineProperty","configurable","enumerable","get","createError","destroy","getBody","iconv","onFinished","unpipe","zlib","parse","debug","stream","_body","verify","inflate","toLowerCase","createInflate","pipe","createGunzip","contentstream","encodingExists","toUpperCase","error","body","_error","callback","isFinished","resume","dump","str","decode","bytes","contentType","read","typeis","limit","reviver","strict","TypeError","shouldParse","Boolean","typeChecker","match","FIRST_CHAR_REGEXP","exec","char","index","partial","substring","JSON","SyntaxError","normalizeJsonSyntaxError","message","replace","stack","createStrictSyntaxError","hasBody","parameters","getCharset","slice","obj","getOwnPropertyNames","key","buf","defaultCharset","extended","queryparse","parameterLimit","isNaN","isFinite","paramCount","parameterCount","arrayLimit","Math","max","allowPrototypes","Infinity","extendedparser","maxKeys","simpleparser","count","mod","load","r","storage","process","env","DEBUG","log","console","Function","apply","call","formatArgs","args","useColors","namespace","humanize","diff","c","color","splice","lastC","save","namespaces","removeItem","window","document","documentElement","style","WebkitAppearance","firebug","exception","table","navigator","userAgent","parseInt","RegExp","$1","chrome","local","localStorage","localstorage","colors","formatters","j","v","stringify","enable","prevTime","createDebug","enabled","self","curr","Date","ms","prev","coerce","unshift","format","formatter","val","logFn","bind","hash","charCodeAt","abs","selectColor","init","disable","names","skips","split","len","substr","test","tty","util","inspectOpts","write","prefix","join","toUTCString","isatty","fd","reduce","_","k","Number","DEBUG_FD","stdout","stderr","binding","guessHandleType","WriteStream","_type","_handle","unref","SyncWriteStream","autoClose","Socket","readable","writable","_isStdio","createWritableStdioStream","o","inspect","trim","O","s","m","h","d","plural","n","floor","ceil","String","parseFloat","long","round","fmtShort","mask","source","output","offset","unmask","buffer","__dirname","formatThousandsRegExp","formatDecimalsRegExp","b","kb","mb","gb","tb","pow","pb","parseRegExp","mag","thousandsSeparator","unitSeparator","decimalPlaces","fixedDecimals","unit","toFixed","floatValue","results","GetIntrinsic","callBind","$indexOf","allowMissing","intrinsic","$apply","$call","$reflectApply","$gOPD","$defineProperty","$max","originalFunction","func","desc","applyBind","filename","params","fallback","NON_LATIN1_REGEXP","basename","isQuotedString","TEXT_REGEXP","fallbackName","getlatin1","hasFallback","HEX_ESCAPE_REGEXP","createparams","TOKEN_REGEXP","string","param","sort","ustring","qstring","ContentDisposition","DISPOSITION_TYPE_REGEXP","PARAM_REGEXP","lastIndex","QESC_REGEXP","decodefield","Buffer","ENCODE_URL_ATTR_CHAR_REGEXP","HEX_ESCAPE_REPLACE_REGEXP","QUOTE_REGEXP","EXT_VALUE_REGEXP","binary","pdecode","from","toString","hex","fromCharCode","pencode","encodeURIComponent","copyProps","src","dst","SafeBuffer","arg","encodingOrOffset","alloc","allocUnsafe","allocUnsafeSlow","size","fill","SlowBuffer","TYPE_REGEXP","ContentType","header","getHeader","getcontenttype","crypto","sha1","createHash","update","digest","sign","secret","createHmac","unsign","lastIndexOf","dec","eqIdx","endIdx","tryDecode","serialize","opt","enc","encode","fieldContentRegExp","maxAge","domain","path","expires","__toString","isDate","valueOf","httpOnly","secure","priority","sameSite","decodeURIComponent","assign","vary","defaults","origin","methods","preflightContinue","optionsSuccessStatus","isString","isOriginAllowed","allowedOrigin","configureOrigin","isAllowed","requestOrigin","configureCredentials","credentials","configureExposedHeaders","exposedHeaders","applyHeaders","setHeader","optionsCallback","cb","corsOptions","originCallback","err2","method","configureMethods","allowedHeaders","configureAllowedHeaders","configureMaxAge","statusCode","end","cors","relative","file","callSiteLocation","getStack","_file","_ignored","noDeprecation","containsNamespace","NO_DEPRECATION","isignored","_namespace","_traced","traceDeprecation","TRACE_DEPRECATION","istraced","_warned","wrapfunction","property","wrapproperty","basePath","cwd","vals","ns","createStackString","site","emitter","haslisteners","listenerCount","listeners","caller","callFile","callSite","depSite","seen","msg","defaultMessage","DeprecationError","emit","isTTY","formatColor","formatPlain","getFileName","line","getLineNumber","colm","getColumnNumber","isEval","getEvalOrigin","getFunctionName","funcName","formatLocation","context","getThis","typeName","getTypeName","getMethodName","formatted","stackTraceLimit","prep","prepareStackTrace","prepareObjectStackTrace","captureStackTrace","fn","arity","createArgumentsString","descriptor","getOwnPropertyDescriptor","set","convertDataDescriptorToAccessor","stackString","EventEmitter","ReadStream","Stream","Zlib","noop","onDrainClearBinding","_binding","clear","onOpenClose","close","suppress","isFsReadStream","Gzip","Gunzip","Deflate","DeflateRaw","Inflate","InflateRaw","Unzip","isZlibStream","_processing","_needDrain","once","_destroy","Transform","destroyed","_hadError","closeZlibStream","destroyZlibStream","hasDestroy","on","destroyReadStream","removeAllListeners","addListener","fs","os","LINE","_log","DotenvModule","config","dotenvPath","override","envPath","homedir","parsed","readFileSync","forEach","hasOwnProperty","lines","maybeQuote","listener","event","done","arg1","ee","stuff","cleanups","arr","cleanup","x","removeListener","thunk","cancel","url","UNMATCHED_SURROGATE_PAIR_REGEXP","ENCODE_CHARS_REGEXP","encodeURI","matchHtmlRegExp","escape","html","entity","isStats","Stats","ctime","mtime","ino","weak","isBuffer","stat","tag","getTime","byteLength","entitytag","finalhandler","Router","middleware","query","View","http","compileETag","compileQueryParser","compileTrust","flatten","merge","setPrototypeOf","app","trustProxyDefaultSymbol","logerror","cache","engines","settings","defaultConfiguration","parent","request","response","locals","mountpath","lazyrouter","_router","caseSensitive","use","handle","router","onerror","fns","orig","route","engine","ext","extension","setting","getPrototypeOf","disabled","all","del","delete","render","view","renderOptions","_locals","defaultEngine","root","dirs","tryRender","listen","server","createServer","bodyParser","mixin","proto","Route","application","raw","text","parseUrl","qs","isIP","fresh","parseRange","proxyaddr","IncomingMessage","defineGetter","getter","lc","referrer","referer","acceptsEncodings","acceptsEncoding","acceptsCharsets","acceptsCharset","acceptsLanguages","acceptsLanguage","range","defaultValue","is","connection","encrypted","trust","remoteAddress","protocol","addrs","reverse","pop","hostname","pathname","host","trimRight","status","contentDisposition","encodeUrl","escapeHtml","isAbsolute","statuses","normalizeType","normalizeTypes","setCharset","cookie","send","extname","ServerResponse","charsetRegExp","sendfile","streaming","onaborted","setImmediate","replacer","spaces","links","link","rel","chunk","etag","etagFn","generateETag","removeHeader","jsonp","sendStatus","sendFile","syscall","download","fullPath","ct","default","attachment","append","field","concat","clearCookie","signed","now","location","loc","redirect","address","u","Layer","objectRegExp","_params","mergeParams","appendMethods","list","addition","gettype","matchLayer","layer","ret","out","old","idx","protohost","searchIndex","pathLength","fqdnIndex","getProtohost","removed","slashAdded","sync","paramcalled","parentParams","parentUrl","baseUrl","props","restore","layerError","getPathname","has_method","_handles_method","_options","layerPath","process_params","handle_request","originalUrl","handle_error","trim_prefix","sendOptionsResponse","called","paramVal","paramCallbacks","paramCalled","paramIndex","paramCallback","callbacks","sensitive","dispatch","pathRegexp","regexp","fast_star","fast_slash","decode_param","URIError","_all","head","handles","querystring","createETagGenerator","parseExtendedQueryString","newObject","wetag","parts","quality","originalIndex","acceptParams","pms","a","compile","dirname","fileName","__express","tryStat","statSync","roots","dir","isFile","DOUBLE_SPACE_REGEXP","NEWLINE_REGEXP","defer","nextTick","headersSent","_header","getErrorStatusCode","getResponseStatusCode","getErrorHeaders","getErrorMessage","original","getResourceName","socket","createHtmlDocument","statusMessage","setHeaders","getSocketAddr","proxyAddrs","start","CACHE_CONTROL_NO_CACHE_REGEXP","parseHttpDate","date","timestamp","NaN","reqHeaders","resHeaders","modifiedSince","noneMatch","cacheControl","etagStale","matches","parseTokenList","lastModified","ERROR_MESSAGE","toStr","funcType","that","target","bound","binder","boundLength","boundArgs","Empty","implementation","$SyntaxError","$Function","$TypeError","getEvalledConstructor","expressionSyntax","throwTypeError","ThrowTypeError","calleeThrows","gOPDthrows","hasSymbols","getProto","__proto__","needsEval","TypedArray","Uint8Array","INTRINSICS","AggregateError","ArrayBuffer","Symbol","iterator","Atomics","BigInt","DataView","decodeURI","eval","EvalError","Float32Array","Float64Array","FinalizationRegistry","Int8Array","Int16Array","Int32Array","Map","Promise","Proxy","RangeError","ReferenceError","Reflect","Set","SharedArrayBuffer","Uint8ClampedArray","Uint16Array","Uint32Array","WeakMap","WeakRef","WeakSet","doEval","gen","LEGACY_ALIASES","hasOwn","$concat","$spliceApply","$replace","$strSlice","$exec","rePropName","reEscapeChar","stringToPath","last","number","quote","subString","getBaseIntrinsic","alias","intrinsicName","intrinsicBaseName","intrinsicRealName","skipFurtherCaching","isOwn","part","origSymbol","hasSymbolSham","getOwnPropertySymbols","sym","symObj","syms","propertyIsEnumerable","HttpError","inherits","toIdentifier","codeClass","charAt","nameFunc","toClassName","expose","createHttpErrorConstructor","isHttpError","codes","CodeError","className","ClientError","createClientErrorConstructor","ServerError","createServerErrorConstructor","populateConstructorExports","_dbcs","DBCSCodec","UNASSIGNED","SEQ_START","NODE_START","UNASSIGNED_NODE","codecOptions","encodingName","mappingTable","decodeTables","decodeTableSeq","_addDecodeChunk","defaultCharUnicode","encodeTable","encodeTableSeq","skipEncodeChars","encodeSkipVals","to","_fillEncodeTable","encodeAdd","uChar","_setEncodeChar","defCharSB","defaultCharSingleByte","gb18030","thirdByteNodeIdx","thirdByteNode","fourthByteNodeIdx","fourthByteNode","secondByteNodeIdx","secondByteNode","DBCSEncoder","codec","leadSurrogate","seqObj","DBCSDecoder","nodeIdx","prevBuf","findIdx","l","mid","encoder","decoder","_getDecodeTrieNode","addr","node","curAddr","writeTable","codeTrail","seq","charCode","_getEncodeBucket","uCode","high","dbcsCode","bucket","low","_setEncodeSequence","oldVal","mbCode","newBuf","nextChar","resCode","subtable","uChars","gbChars","prevBufOffset","seqStart","curByte","curSeq","ptr","uCodeLead","modules","InternalCodec","bomAware","InternalEncoderBase64","InternalEncoderCesu8","InternalDecoderCesu8","utf8","cesu8","unicode11utf8","ucs2","utf16le","base64","_internal","InternalEncoder","InternalDecoder","StringDecoder","prevStr","acc","contBytes","accBytes","completeQuads","bufIdx","SBCSCodec","chars","asciiString","decodeBuf","encodeBuf","SBCSEncoder","SBCSDecoder","_sbcs","idx1","idx2","Utf16BECodec","Utf16BEEncoder","Utf16BEDecoder","overflowByte","Utf16Codec","Utf16Encoder","addBOM","getEncoder","Utf16Decoder","initialBytes","initialBytesLen","detectEncoding","defaultEncoding","asciiCharsLE","asciiCharsBE","_len","min","utf16be","tmp","buf2","utf16","getDecoder","trail","Utf7Codec","utf7","unicode11utf7","Utf7Encoder","Utf7Decoder","nonDirectChars","inBase64","base64Accum","base64Regex","base64Chars","plusChar","minusChar","andChar","Utf7IMAPCodec","Utf7IMAPEncoder","base64AccumIdx","Utf7IMAPDecoder","lastI","b64str","canBeDecoded","utf7imap","base64IMAPChars","PrependBOMWrapper","StripBOMWrapper","pass","PrependBOM","StripBOM","stripBOM","supportsNodeEncodingsExtension","extendNodeEncodings","nodeNativeEncodings","isNativeEncoding","SlowBufferToString","SlowBufferWrite","swap","remaining","copy","BufferIsEncoding","isEncoding","BufferByteLength","BufferToString","BufferWrite","_offset","_length","_encoding","supportsStreams","Readable","ReadableSetEncoding","setEncoding","_readableState","collect","_collect","undoExtendNodeEncodings","bomHandling","skipDecodeWarning","getCodec","toEncoding","fromEncoding","_codecDataCache","_canonicalizeEncoding","codecDef","nodeVer","versions","nodeVerArr","IconvLiteEncoderStream","conv","decodeStrings","IconvLiteDecoderStream","encodeStream","decodeStream","constructor","_transform","_flush","chunks","ctor","superCtor","super_","TempCtor","expandIPv6","ipaddr","ipv4Part","ipv4Regexes","ipv6Part","ipv6Regexes","matchCIDR","zoneIndex","second","partSize","cidrBits","shift","subnetMatch","rangeList","defaultName","rangeName","rangeSubnets","subnet","kind","IPv4","octets","octet","toNormalizedString","toByteArray","other","cidrRange","ref","SpecialRanges","unspecified","broadcast","multicast","linkLocal","loopback","carrierGradeNat","reserved","toIPv4MappedAddress","IPv6","prefixLengthFromSubnetMask","cidr","stop","zeros","zerotable","fourOctet","longValue","parseIntAuto","zoneId","toRFC5952String","bestMatchIndex","bestMatchLength","regex","suffix","toFixedLengthString","padStart","uniqueLocal","ipv4Mapped","rfc6145","rfc6052","teredo","isIPv4MappedAddress","toIPv4Address","transitional","colonCount","lastColon","replacement","replacementCount","isIPv4","isIPv6","isValid","error1","isValidFourPartDecimal","parseCIDR","maskLength","subnetMaskFromPrefixLength","filledOctetCount","broadcastAddressFromCIDR","ipInterfaceOctets","subnetMaskOctets","networkAddressFromCIDR","fromByteArray","paramRegExp","textRegExp","tokenRegExp","qescRegExp","quoteRegExp","subtypeNameRegExp","typeNameRegExp","typeRegExp","subtype","splitType","dest","redefine","METHODS","extensions","preference","db","EXTRACT_TYPE_REGEXP","TEXT_TYPE_REGEXP","exts","Mime","define","DEBUG_MIME","warn","_loading","fields","default_type","mimeType","preferredCharsets","preferredEncodings","preferredLanguages","preferredMediaTypes","available","mediaType","preferredCharset","preferredEncoding","preferredLanguage","preferredMediaType","simpleCharsetRegExp","parseCharset","q","p","specify","spec","provided","parseAcceptCharset","isQuality","compareSpecs","getFullCharset","priorities","accepted","getCharsetPriority","simpleEncodingRegExp","parseEncoding","hasIdentity","minQuality","parseAcceptEncoding","getFullEncoding","getEncodingPriority","simpleLanguageRegExp","parseLanguage","full","parseAcceptLanguage","getFullLanguage","getLanguagePriority","simpleMediaTypeRegExp","parseMediaType","kvps","quoteCount","splitParameters","splitKeyValuePair","pair","every","splitMediaTypes","parseAccept","getFullType","getMediaTypePriority","runtimeRequire","vars","variables","prebuildsOnly","PREBUILDS_ONLY","abi","runtime","electron","ELECTRON_RUN_AS_NODE","nw","arch","npm_config_arch","platform","npm_config_platform","libc","LIBC","existsSync","isAlpine","armv","ARM_VERSION","arm_version","uv","readdirSync","getFirst","files","matchBuild","parseTuple","architectures","matchTuple","tuple","includes","compareTuples","parseTags","tags","specificity","napi","matchTags","runtimeAgnostic","compareTags","release","prebuild","nearby","execPath","prebuilds","winner","propIsEnumerable","toObject","test1","test2","test3","letter","shouldUseNative","symbols","hasMap","mapSizeDescriptor","mapSize","mapForEach","hasSet","setSizeDescriptor","setSize","setForEach","weakMapHas","has","weakSetHas","weakRefDeref","deref","booleanValueOf","objectToString","functionToString","$match","$slice","$toUpperCase","$toLowerCase","$test","$join","$arrSlice","$floor","bigIntValueOf","gOPS","symToString","hasShammedSymbols","toStringTag","isEnumerable","gPO","addNumericSeparator","num","sepRegex","int","intStr","utilInspect","inspectCustom","custom","inspectSymbol","isSymbol","wrapQuotes","defaultStyle","quoteChar","quoteStyle","isRegExp","inspect_","maxStringLength","customInspect","indent","numericSeparator","inspectString","bigIntStr","maxDepth","baseIndent","base","getIndent","noIndent","newOpts","f","nameOf","arrObjKeys","symString","markBoxed","HTMLElement","nodeName","getAttribute","attrs","attributes","childNodes","xs","singleLineValues","indentedJoin","isError","cause","isMap","mapParts","collectionOf","isSet","setParts","isWeakMap","weakCollectionOf","isWeakSet","isWeakRef","isNumber","isBigInt","isBoolean","ys","isPlainObject","protoTag","stringTag","trailer","lowbyte","entries","lineJoiner","isArr","symMap","attached","__onFinished","queue","createListener","eeMsg","eeSocket","finished","onFinish","onSocket","assignSocket","patchAssignSocket","attachFinishedListener","attachListener","asyncHooks","AsyncResource","runInAsyncScope","tryRequireAsyncHooks","complete","upgrade","Url","parseurl","_parsedUrl","fastparse","_raw","search","href","parsedUrl","_parsedOriginalUrl","pathtoRegexp","flags","extraOffset","keysOffset","MATCHING_GROUP_REGEXP","optional","slash","capture","star","escapeCount","alladdrs","forwarded","DIGIT_REGEXP","isip","parseip","IP_RANGES","linklocal","uniquelocal","subnets","subnetip","subnetkind","subnetisipv4","subnetrange","parseipNotation","compileRangeSubnets","trustNone","ip","ipconv","trusted","note","pos","netmask","parseNetmask","percentTwenties","Format","RFC1738","RFC3986","formats","utils","allowDots","allowSparse","charsetSentinel","comma","delimiter","ignoreQueryPrefix","interpretNumericEntities","parseArrays","plainObjects","strictNullHandling","$0","numberStr","parseArrayValue","parseKeys","givenKey","valuesParsed","child","segment","chain","leaf","cleanRoot","parseObject","normalizeParseOptions","tempObj","cleanStr","skipIndex","bracketEqualsPos","maybeMap","encodedVal","combine","parseValues","newObj","compact","getSideChannel","arrayPrefixGenerators","brackets","indices","repeat","pushToArray","valueOrArray","toISO","toISOString","defaultFormat","addQueryPrefix","encodeValuesOnly","serializeDate","skipNulls","sentinel","object","generateArrayPrefix","sideChannel","tmpSc","step","findFlag","keyValue","valuesArray","valuesJoined","objKeys","values","keyPrefix","valueSideChannel","normalizeStringifyOptions","arrayFormat","joined","hexTable","arrayToObject","refs","item","compacted","compactQueue","strWithoutPlus","unescape","defaultEncoder","mapped","mergeTarget","targetItem","mapWithIndex","mapWithoutIndex","sortByRangeIndex","sortByRangeStart","ranges","ordered","current","combined","combineRanges","global","readStream","reject","ICONV_ENCODING_MESSAGE_REGEXP","halt","pause","expected","state","_decoder","received","invokeCallback","onAborted","onData","onEnd","Observable","ConnectableObservable","observable","animationFrames","Subject","BehaviorSubject","ReplaySubject","AsyncSubject","asap","asapScheduler","async","asyncScheduler","queueScheduler","animationFrame","animationFrameScheduler","VirtualTimeScheduler","VirtualAction","Scheduler","Subscription","Subscriber","Notification","NotificationKind","identity","isObservable","lastValueFrom","firstValueFrom","ArgumentOutOfRangeError","EmptyError","NotFoundError","ObjectUnsubscribedError","SequenceError","TimeoutError","UnsubscriptionError","bindCallback","bindNodeCallback","combineLatest","connectable","empty","forkJoin","fromEvent","fromEventPattern","generate","iif","interval","never","of","onErrorResumeNext","pairs","partition","race","throwError","timer","using","zip","scheduled","EMPTY","NEVER","audit","auditTime","bufferCount","bufferTime","bufferToggle","bufferWhen","catchError","combineAll","combineLatestAll","combineLatestWith","concatAll","concatMap","concatMapTo","concatWith","connect","debounce","debounceTime","defaultIfEmpty","delay","delayWhen","dematerialize","distinct","distinctUntilChanged","distinctUntilKeyChanged","elementAt","endWith","exhaust","exhaustAll","exhaustMap","expand","finalize","find","findIndex","groupBy","ignoreElements","isEmpty","mapTo","materialize","mergeAll","flatMap","mergeMap","mergeMapTo","mergeScan","mergeWith","observeOn","pairwise","pluck","publish","publishBehavior","publishLast","publishReplay","raceWith","repeatWhen","retry","retryWhen","refCount","sample","sampleTime","scan","sequenceEqual","share","shareReplay","single","skip","skipLast","skipUntil","skipWhile","startWith","subscribeOn","switchAll","switchMap","switchMapTo","switchScan","take","takeLast","takeUntil","takeWhile","tap","throttle","throttleTime","throwIfEmpty","timeInterval","timeout","timeoutWith","toArray","windowCount","windowTime","windowToggle","windowWhen","withLatestFrom","zipAll","zipWith","_value","_hasValue","_isComplete","_checkFinalizedStatuses","subscriber","hasError","thrownError","isStopped","getValue","_subscribe","subscription","closed","_throwIfClosed","hasValue","observe","observer","observeNotification","do","nextHandler","errorHandler","completeHandler","nextOrObserver","isFunction","toObservable","createNext","createComplete","completeNotification","notification","createNotification","COMPLETE_NOTIFICATION","subscribe","lift","operator","observerOrNext","isObserver","isSubscription","SafeSubscriber","errorContext","add","_trySubscribe","sink","promiseCtor","getPromiseCtor","unsubscribe","pipeFromArray","operations","toPromise","_bufferSize","_windowTime","_timestampProvider","dateTimestampProvider","_buffer","_infiniteTimeWindow","_trimBuffer","_innerSubscribe","adjustedBufferSize","schedulerActionCtor","schedule","work","currentObservers","observers","subject","AnonymousSubject","EMPTY_SUBSCRIPTION","arrRemove","asObservable","destination","EMPTY_OBSERVER","handleStoppedNotification","nextNotification","_next","errorNotification","_complete","_bind","thisArg","partialObserver","handleUnhandledError","useDeprecatedNextContext","ConsumerObserver","useDeprecatedSynchronousErrorHandling","captureError","reportUnhandledError","onStoppedNotification","timeoutProvider","setTimeout","initialTeardown","_parentage","_finalizers","errors","remove","initialFinalizer","finalizer","execFinalizer","teardown","_hasParent","_addParent","_removeParent","onUnhandledError","hasConfig","subjectFactory","_subject","_refCount","_connection","hasLift","getSubject","_teardown","createOperatorSubscriber","callbackFunc","resultSelector","scheduler","bindCallbackInternals","isNodeStyle","isScheduler","mapOneOrManyArgs","uninitialized","subs","combineLatestInit","observables","valueTransform","maybeSchedule","active","remainingFirstValues","hasFirstValue","execute","executeSchedule","popScheduler","popResultSelector","argsArgArrayOrObject","createObject","DEFAULT_CONFIG","connector","resetOnDisconnect","observableFactory","innerFrom","DEFAULT_WEBSOCKET_CONFIG","deserializer","data","serializer","urlConfigOrSource","_socket","_config","_output","WebSocketCtor","WebSocket","sock","WebSocketSubject","_resetState","multiplex","subMsg","unsubMsg","messageFilter","_connectSocket","binaryType","readyState","onopen","evt","openObserver","closingObserver","reason","onclose","closeObserver","wasClean","onmessage","animationFramesFactory","timestampProvider","animationFrameProvider","provider","performanceTimestampProvider","run","elapsed","DEFAULT_ANIMATION_FRAMES","emptyScheduled","sources","remainingCompletions","remainingEmissions","sourceIndex","input","nodeEventEmitterMethods","eventTargetMethods","jqueryMethods","toCommonHandlerRegistry","eventName","methodName","handler","addEventListener","removeEventListener","isEventTarget","isNodeStyleEventEmitter","off","isJQueryStyleEventEmitter","isArrayLike","subTarget","addHandler","removeHandler","retValue","subscribable","initialStateOrOptions","condition","iterate","resultSelectorOrScheduler","initialState","scheduleIterable","trueResult","falseResult","fromInteropObservable","obs","fromArrayLike","fromPromise","promise","then","fromIterable","iterable","fromAsyncIterable","asyncIterable","catch","fromReadableStreamLike","readableStream","readableStreamLikeToAsyncGenerator","isInteropObservable","isPromise","isAsyncIterable","isIterable","isReadableStreamLike","createInvalidObservableTypeError","period","concurrent","popNumber","argsOrArgArray","predicate","not","raceInit","subscriptions","errorOrErrorFactory","errorFactory","dueTime","intervalOrScheduler","intervalDuration","due","isValidDate","resourceFactory","resource","buffers","completed","some","onNext","onComplete","onError","onFinalize","OperatorSubscriber","shouldUnsubscribe","durationSelector","operate","lastValue","durationSubscriber","isComplete","endDuration","cleanupDuration","duration","closingNotifier","currentBuffer","bufferSize","startBufferEvery","toEmit","bufferTimeSpan","otherArgs","bufferCreationInterval","maxBufferSize","bufferRecords","restartOnEmit","record","startBuffer","bufferTimeSubscriber","recordsCopy","openings","closingSelector","openValue","closingSubscription","closingSubscriber","openBuffer","selector","handledResult","innerSub","syncUnsub","project","joinAllInternals","otherSources","innerObservable","fromSubscribable","total","activeTask","lastTime","emitWhenIdle","targetTime","delayDurationSelector","subscriptionDelay","keySelector","flushes","distinctKeys","defaultCompare","comparator","previousKey","currentKey","compare","y","hasDefaultValue","ii","outerValue","mergeInternals","createFind","elementOrOptions","element","groups","notify","handleError","consumer","activeGroups","teardownAttempted","groupBySourceSubscriber","grouped","groupSubject","groupSubscriber","joinFn","comparer","onBeforeNext","innerSubScheduler","additionalFinalizer","checkComplete","outerNext","doInnerSub","innerComplete","innerValue","bufferedValue","accumulator","seed","subjectOrSubjectFactory","nextSources","subscribeNext","nextSource","hasPrev","properties","currentProp","initialValue","selectorOrScheduler","scanInternals","refCounter","sharedConnection","conn","countOrConfig","sourceSub","soFar","resubscribe","notifier","subscribeToSource","completions$","syncResub","isNotifierComplete","isMainComplete","subscribeForRepeatWhen","configOrCount","resetOnSuccess","subscribeForRetry","errors$","subscribeForRetryWhen","hasSeed","emitOnNext","emitBeforeComplete","hasState","compareTo","aState","bState","isEqual","createSubscriber","selfState","otherState","sequenceEqualSubscriber","handleReset","reset","onSubscriber","resetOnError","resetOnComplete","resetOnRefCountZero","wrapperSource","resetConnection","hasCompleted","hasErrored","cancelReset","resetAndUnsubscribe","configOrBufferSize","singleValue","seenValue","skipCount","ring","valueIndex","oldValue","taking","skipSubscriber","innerSubscriber","innerIndex","outerIndex","inclusive","tapObserver","isUnsub","defaultThrottleConfig","leading","trailing","sendValue","throttled","endThrottling","cleanupThrottling","startThrottle","duration$","defaultErrorFactory","TimeInterval","timeoutErrorFactory","info","createErrorClass","_super","schedulerArg","each","with","_with","meta","originalSourceSubscription","timerSubscription","startTimer","withObservable","arrReducer","windowBoundaries","windowSubject","windowSize","startWindowEvery","startEvery","windows","windowTimeSpan","windowCreationInterval","maxWindowSize","windowRecords","restartOnClose","closeWindow","startWindow","loop","terminate","windowsCopy","openWindow","inputs","otherValues","ready","otherInputs","asyncIterator","return","scheduleAsyncIterable","scheduleObservable","scheduleArray","schedulePromise","scheduleReadableStreamLike","Action","requestAsyncId","actions","_scheduled","requestAnimationFrame","flush","recycleAsyncId","action","cancelAnimationFrame","AsyncAction","AnimationFrameAction","_active","flushId","AsyncScheduler","AnimationFrameScheduler","immediateProvider","clearImmediate","AsapAction","AsapScheduler","pending","_id","intervalProvider","setInterval","_scheduler","clearInterval","_execute","_delay","errorValue","errored","SchedulerAction","QueueAction","QueueScheduler","maxFrames","frame","frameTimeFactor","sortActions","delegate","Immediate","performance","clearTimeout","getSymbolIterator","resolved","nextHandle","activeHandles","findAndClearHandle","TestTools","objectProto","getKeys","createImpl","ctorFunc","instance","isRoot","errorThrown","parentSubscription","scheduleSubscription","reader","getReader","releaseLock","liftedSource","callOrApply","pred","webSocket","safer","Safer","kStringMaxLength","constants","MAX_LENGTH","kMaxLength","MAX_STRING_LENGTH","normalize","sep","BYTES_RANGE_REGEXP","MAX_MAXAGE","UP_PATH_REGEXP","SendStream","_acceptRanges","acceptRanges","_cacheControl","_etag","_dotfiles","dotfiles","_hidden","hidden","_extensions","normalizeList","_immutable","immutable","_index","_lastModified","_maxage","maxage","_root","contentRange","title","hasListeners","paths","createHttpError","doc","getHeaderNames","_headers","clearHeaders","hasTrailingSlash","isConditionalGET","isPreconditionFailure","unmodifiedSince","removeContentHeaderFields","notModified","headersAlreadySent","isCachable","onStatError","isFresh","isRangeFresh","ifRange","collapseLeadingSlashes","containsDotFile","access","sendIndex","isDirectory","createReadStream","modified","msAbs","isPlural","fallthrough","onDirectory","forwardError","callBound","$WeakMap","$Map","$weakMapGet","$weakMapSet","$weakMapHas","$mapGet","$mapSet","$mapHas","listGetNode","$wm","$m","$o","channel","assert","objects","listGet","listHas","listSet","getStatusMessage","getStatusCode","createMessageToStatusCodeMap","createStatusCodeList","token","typer","tryNormalizeType","mimeMatch","hasbody","actual","actualParts","expectedParts","hasPipeDataListeners","FIELD_NAME_REGEXP","fld","createWebSocketStream","Server","Receiver","Sender","WebSocketServer","EMPTY_BUFFER","_mask","_unmask","totalLength","toArrayBuffer","byteOffset","toBuffer","readOnly","isView","WS_NO_BUFFER_UTIL","bufferUtil","BINARY_TYPES","GUID","kForOnEventAttribute","kListener","kStatusCode","kWebSocket","NOOP","kCode","kData","kError","kMessage","kReason","kTarget","kType","kWasClean","Event","CloseEvent","super","ErrorEvent","MessageEvent","EventTarget","wrapper","isBinary","_closeFrameReceived","_closeFrameSent","tokenChars","elem","configurations","offers","extensionName","paramName","mustUnescape","isEscaping","inQuotes","kDone","kRun","concurrency","jobs","job","Limiter","TRAILER","kPerMessageDeflate","kTotalLength","kCallback","kBuffers","zlibLimiter","deflateOnData","inflateOnData","_maxPayload","inflateOnError","_inflate","isServer","maxPayload","_threshold","threshold","_isServer","_deflate","concurrencyLimit","offer","serverNoContextTakeover","server_no_context_takeover","clientNoContextTakeover","client_no_context_takeover","serverMaxWindowBits","server_max_window_bits","clientMaxWindowBits","client_max_window_bits","normalizeParams","acceptAsServer","acceptAsClient","isInteger","decompress","fin","_decompress","compress","_compress","endpoint","windowBits","Z_DEFAULT_WINDOWBITS","createInflateRaw","zlibInflateOptions","endEmitted","createDeflateRaw","zlibDeflateOptions","Z_SYNC_FLUSH","Writable","PerMessageDeflate","isValidStatusCode","isValidUTF8","ErrorCtor","errorCode","_binaryType","_skipUTF8Validation","skipUTF8Validation","_bufferedBytes","_buffers","_compressed","_payloadLength","_fragmented","_masked","_fin","_opcode","_totalPayloadLength","_messageLength","_fragments","_state","_loop","_write","startLoop","consume","getInfo","getPayloadLength16","getPayloadLength64","getMask","getData","compressed","haveLength","readUInt16BE","readUInt32BE","controlMessage","dataMessage","er","messageLength","fragments","randomFillSync","applyMask","kByteLength","maskBuffer","generateMask","_generateMask","_maskBuffer","_firstFragment","_deflating","_queue","static","dataLength","skipMasking","payloadLength","opcode","rsv1","writeUInt16BE","writeUIntBE","enqueue","sendFrame","ping","pong","perMessageDeflate","dequeue","cork","uncork","Duplex","emitClose","duplexOnEnd","_writableState","duplexOnError","ws","terminateOnDestroy","duplex","autoDestroy","objectMode","writableObjectMode","CLOSED","_final","CONNECTING","_read","isPaused","protocols","_isValidUTF8","WS_NO_UTF_8_VALIDATE","subprotocol","keyRegex","socketOnError","abortHandshake","STATUS_CODES","Connection","abortHandshakeOrEmitwsClientError","handleProtocols","clientTracking","verifyClient","noServer","backlog","port","_server","writeHead","emitConnection","_removeListeners","addListeners","listening","handleUpgrade","clients","_shouldEmitClose","shouldHandle","version","secWebSocketProtocol","secWebSocketExtensions","authorized","verified","completeUpgrade","_protocol","setSocket","https","net","tls","randomBytes","URL","kAborted","protocolVersions","readyStates","subprotocolRegex","_closeCode","_closeMessage","_closeTimer","_paused","_readyState","_receiver","_sender","_bufferedAmount","_redirects","initAsClient","bufferedAmount","_url","receiver","receiverOnConclude","receiverOnDrain","receiverOnError","receiverOnMessage","receiverOnPing","receiverOnPong","setNoDelay","socketOnClose","socketOnData","socketOnEnd","OPEN","_req","CLOSING","errorEmitted","sendAfterClose","needDrain","websocket","protocolVersion","followRedirects","maxRedirects","createConnection","socketPath","isSecure","isUnixSocket","invalidURLMessage","emitErrorAndClose","defaultPort","protocolSet","tlsConnect","netConnect","startsWith","Upgrade","handshakeTimeout","Origin","username","password","auth","_originalUnixSocket","_originalSecure","_originalHostOrSocketPath","isSameHost","authorization","abort","serverProt","protError","extensionNames","servername","receiverOnFinish","require","Position","col","column","SourceLocation","identifierName","createPositionWithColumnOffset","position","columnOffset","ParseErrorCodes","freeze","SourceTypeModuleError","reflect","NodeDescriptions","ArrayPattern","AssignmentExpression","AssignmentPattern","ArrowFunctionExpression","ConditionalExpression","ForOfStatement","ForInStatement","ForStatement","FormalParameters","Identifier","ObjectPattern","ParenthesizedExpression","RestElement","UpdateExpression","true","false","VariableDeclarator","YieldExpression","toNodeDescription","UnparenthesizedPipeBodyDescriptions","toParseErrorConstructor","toMessage","_excluded","details","descriptors","instantiate","clone","overrides","missingPlugin","toParseErrorCredentials","toMessageOrMessage","ParseErrorEnum","argument","syntaxPlugin","toParseErrorCredentialsMap","partialCredentials","ParseErrorConstructors","reasonCode","Errors","ImportMetaOutsideModule","ImportOutsideModule","AccessorIsGenerator","ArgumentsInClass","AsyncFunctionInSingleStatementContext","AwaitBindingIdentifier","AwaitBindingIdentifierInStaticBlock","AwaitExpressionFormalParameter","AwaitNotInAsyncContext","AwaitNotInAsyncFunction","BadGetterArity","BadSetterArity","BadSetterRestParameter","ConstructorClassField","ConstructorClassPrivateField","ConstructorIsAccessor","ConstructorIsAsync","ConstructorIsGenerator","DeclarationMissingInitializer","DecoratorBeforeExport","DecoratorConstructor","DecoratorExportClass","DecoratorSemicolon","DecoratorStaticBlock","DeletePrivateField","DestructureNamedImport","DuplicateConstructor","DuplicateDefaultExport","DuplicateExport","exportName","DuplicateProto","DuplicateRegExpFlags","ElementAfterRest","EscapedCharNotAnIdentifier","ExportBindingIsString","localName","ExportDefaultFromAsIdentifier","ForInOfLoopInitializer","ForOfAsync","ForOfLet","GeneratorInSingleStatementContext","IllegalBreakContinue","IllegalLanguageModeDirective","IllegalReturn","ImportBindingIsString","importName","ImportCallArgumentTrailingComma","ImportCallArity","maxArgumentCount","ImportCallNotNewExpression","ImportCallSpreadArgument","ImportJSONBindingNotDefault","IncompatibleRegExpUVFlags","InvalidBigIntLiteral","InvalidCodePoint","InvalidCoverInitializedName","InvalidDecimal","InvalidDigit","radix","InvalidEscapeSequence","InvalidEscapeSequenceTemplate","InvalidEscapedReservedWord","reservedWord","InvalidIdentifier","InvalidLhs","ancestor","InvalidLhsBinding","InvalidNumber","InvalidOrMissingExponent","InvalidOrUnexpectedToken","unexpected","InvalidParenthesizedAssignment","InvalidPrivateFieldResolution","InvalidPropertyBindingPattern","InvalidRecordProperty","InvalidRestAssignmentPattern","LabelRedeclaration","labelName","LetInLexicalBinding","LineTerminatorBeforeArrow","MalformedRegExpFlags","MissingClassName","MissingEqInAssignment","MissingSemicolon","MissingPlugin","MissingOneOfPlugins","MissingUnicodeEscape","MixingCoalesceWithLogical","ModuleAttributeDifferentFromType","ModuleAttributeInvalidValue","ModuleAttributesWithDuplicateKeys","ModuleExportNameHasLoneSurrogate","surrogateCharCode","ModuleExportUndefined","MultipleDefaultsInSwitch","NewlineAfterThrow","NoCatchOrFinally","NumberIdentifier","NumericSeparatorInEscapeSequence","ObsoleteAwaitStar","OptionalChainingNoNew","OptionalChainingNoTemplate","OverrideOnConstructor","ParamDupe","PatternHasAccessor","PatternHasMethod","PrivateInExpectedIn","PrivateNameRedeclaration","RecordExpressionBarIncorrectEndSyntaxType","RecordExpressionBarIncorrectStartSyntaxType","RecordExpressionHashIncorrectStartSyntaxType","RecordNoProto","RestTrailingComma","SloppyFunction","StaticPrototype","SuperNotAllowed","SuperPrivateField","TrailingDecorator","TupleExpressionBarIncorrectEndSyntaxType","TupleExpressionBarIncorrectStartSyntaxType","TupleExpressionHashIncorrectStartSyntaxType","UnexpectedArgumentPlaceholder","UnexpectedAwaitAfterPipelineBody","UnexpectedDigitAfterHash","UnexpectedImportExport","UnexpectedKeyword","keyword","UnexpectedLeadingDecorator","UnexpectedLexicalDeclaration","UnexpectedNewTarget","UnexpectedNumericSeparator","UnexpectedPrivateField","UnexpectedReservedWord","UnexpectedSuper","UnexpectedToken","UnexpectedTokenUnaryExponentiation","UnsupportedBind","UnsupportedDecoratorExport","UnsupportedDefaultExport","UnsupportedImport","UnsupportedMetaProperty","onlyValidPropertyName","UnsupportedParameterDecorator","UnsupportedPropertyDecorator","UnsupportedSuper","UnterminatedComment","UnterminatedRegExp","UnterminatedString","UnterminatedTemplate","VarRedeclaration","YieldBindingIdentifier","YieldInParameter","ZeroDigitNumericSeparator","StrictDelete","StrictEvalArguments","referenceName","StrictEvalArgumentsBinding","bindingName","StrictFunction","StrictNumericEscape","StrictOctalLiteral","StrictWith","PipeBodyIsTighter","PipeTopicRequiresHackPipes","PipeTopicUnbound","PipeTopicUnconfiguredToken","PipeTopicUnused","PipeUnparenthesizedBody","PipelineBodyNoArrow","PipelineBodySequenceExpression","PipelineHeadSequenceExpression","PipelineTopicUnused","PrimaryTopicNotAllowed","PrimaryTopicRequiresSmartPipeline","toUnenumerable","toESTreeLocation","TokContext","preserveSpace","brace","j_oTag","j_cTag","j_expr","template","beforeExpr","startsExpr","isLoop","isAssign","ExportedTokenType","label","conf","rightAssociative","postfix","binop","updateContext","keywords","createKeyword","createToken","createBinop","tokenTypeCounter","tokenTypes","tokenLabels","tokenBinops","tokenBeforeExprs","tokenStartsExprs","tokenPrefixes","createKeywordLike","tt","bracketL","bracketHashL","bracketBarL","bracketR","bracketBarR","braceL","braceBarL","braceHashL","braceR","braceBarR","parenL","parenR","semi","colon","doubleColon","dot","question","questionDot","arrow","ellipsis","backQuote","dollarBraceL","templateTail","templateNonTail","at","interpreterDirective","eq","slashAssign","xorAssign","moduloAssign","incDec","bang","tilde","doubleCaret","doubleAt","pipeline","nullishCoalescing","logicalOR","logicalAND","bitwiseOR","bitwiseXOR","bitwiseAND","equality","lt","gt","relational","bitShift","bitShiftL","bitShiftR","plusMin","modulo","exponent","_in","_instanceof","_break","_case","_catch","_continue","_debugger","_default","_else","_finally","_function","_if","_return","_switch","_throw","_try","_var","_const","_new","_this","_class","_extends","_export","_import","_null","_true","_false","_typeof","_void","_delete","_do","_for","_while","_as","_assert","_async","_await","_from","_get","_let","_meta","_of","_sent","_set","_static","_yield","_asserts","_checks","_exports","_global","_implements","_intrinsic","_infer","_is","_mixins","_proto","_require","_keyof","_readonly","_unique","_abstract","_declare","_enum","_module","_interface","_opaque","bigint","decimal","privateName","eof","jsxName","jsxText","jsxTagStart","jsxTagEnd","placeholder","tokenIsIdentifier","tokenIsKeywordOrIdentifier","tokenIsLiteralPropertyName","tokenCanStartExpression","tokenIsFlowInterfaceOrTypeOrOpaque","tokenIsKeyword","tokenLabelName","tokenOperatorPrecedence","tokenIsTemplate","getExportedToken","tc","nonASCIIidentifierStartChars","nonASCIIidentifierChars","nonASCIIidentifierStart","nonASCIIidentifier","astralIdentifierStartCodes","astralIdentifierCodes","isInAstralSet","isIdentifierStart","isIdentifierChar","reservedWordsStrictSet","reservedWordsStrictBindSet","isReservedWord","word","inModule","isStrictReservedWord","isStrictBindOnlyReservedWord","isStrictBindReservedWord","reservedWordLikeSet","BIND_NONE","setTrailingComments","comments","trailingComments","setInnerComments","innerComments","adjustInnerComments","elements","commentWS","lastElement","lineBreak","lineBreakG","isNewLine","skipWhiteSpace","skipWhiteSpaceToLineBreak","isWhitespace","State","curLine","lineStart","startLoc","endLoc","potentialArrowAt","noArrowAt","noArrowParamsConversionAt","maybeInArrowParameters","inType","noAnonFunctionType","hasFlowComment","isAmbientContext","inAbstractClass","inDisallowConditionalTypesContext","topicContext","maxNumOfResolvableTopics","maxTopicIndex","soloAwait","inFSharpPipelineDirectBody","labels","decoratorStack","commentStack","lastTokEndLoc","lastTokStartLoc","lastTokStart","canStartJSXElement","containsEsc","strictErrors","tokensLength","strictMode","sourceType","startLine","startColumn","curPosition","skipArrays","VALID_REGEX_FLAGS","forbiddenNumericSeparatorSiblings","decBinOct","isAllowedNumericSeparatorSibling","bin","ch","oct","Token","Scope","var","lexical","functions","ScopeHandler","scopeStack","undefinedExports","inFunction","currentVarScopeFlags","allowSuper","currentThisScopeFlags","allowDirectSuper","inClass","inClassAndNotInNonArrowFunction","inStaticBlock","inNonArrowFunction","treatFunctionsAsVar","treatFunctionsAsVarInScope","currentScope","createScope","enter","exit","scope","declareName","bindingType","checkRedeclarationInScope","maybeExportDefined","SCOPE_PROGRAM","isRedeclaredInScope","raise","checkLocalExport","topLevelScope","FlowScope","declareFunctions","FlowScopeHandler","ClassScope","privateNames","loneAccessors","undefinedPrivateNames","ClassScopeHandler","oldClassScope","declarePrivateName","elementType","redefined","CLASS_ELEMENT_KIND_GETTER","accessor","oldStatic","newStatic","usePrivateName","classScope","ExpressionScope","canBeArrowParameterDeclaration","isCertainlyParameterDeclaration","ArrowHeadParsingScope","declarationErrors","recordDeclarationError","ParsingErrorClass","clearDeclarationError","iterateErrors","ExpressionScopeHandler","recordParameterInitializerError","toParseError","recordArrowParemeterBindingError","recordAsyncArrowParametersError","validateAsPattern","newExpressionScope","ProductionParameterHandler","stacks","currentFlags","hasAwait","hasYield","hasReturn","hasIn","functionFlags","isAsync","isGenerator","ExpressionErrors","shorthandAssignLoc","doubleProtoLoc","privateKeyLoc","optionalParametersLoc","Node","NodePrototype","cloneIdentifier","extra","cloned","expectedNode","__clone","newNode","reservedTypes","FlowErrors","AmbiguousConditionalArrow","AmbiguousDeclareModuleKind","AssignReservedType","reservedType","DeclareClassElement","DeclareClassFieldInitializer","DuplicateDeclareModuleExports","EnumBooleanMemberNotInitialized","memberName","enumName","EnumDuplicateMemberName","EnumInconsistentMemberValues","EnumInvalidExplicitType","invalidEnumType","EnumInvalidExplicitTypeUnknownSupplied","EnumInvalidMemberInitializerPrimaryType","explicitType","EnumInvalidMemberInitializerSymbolType","EnumInvalidMemberInitializerUnknownType","EnumInvalidMemberName","suggestion","EnumNumberMemberNotInitialized","EnumStringMemberInconsistentlyInitailized","GetterMayNotHaveThisParam","ImportTypeShorthandOnlyInPureImport","InexactInsideExact","InexactInsideNonObject","InexactVariance","InvalidNonTypeImportInDeclareModule","MissingTypeParamDefault","NestedDeclareModule","NestedFlowComment","PatternIsOptional","SetterMayNotHaveThisParam","SpreadVariance","ThisParamAnnotationRequired","ThisParamBannedInConstructor","ThisParamMayNotBeOptional","ThisParamMustBeFirst","ThisParamNoDefault","TypeBeforeInitializer","TypeCastInPattern","UnexpectedExplicitInexactInObject","UnexpectedReservedType","UnexpectedReservedUnderscore","UnexpectedSpaceBetweenModuloChecks","UnexpectedSpreadType","UnexpectedSubtractionOperand","UnexpectedTokenAfterTypeParameter","UnexpectedTypeParameterBeforeAsyncArrowFunction","UnsupportedDeclareExportKind","unsupportedExportKind","UnsupportedStatementInDeclareModule","UnterminatedFlowComment","hasTypeImportKind","importKind","isMaybeDefaultImport","exportSuggestions","const","let","interface","FLOW_PRAGMA_REGEX","entities","quot","amp","apos","nbsp","iexcl","cent","pound","curren","yen","brvbar","sect","uml","ordf","laquo","shy","reg","macr","deg","plusmn","sup2","sup3","acute","micro","para","middot","cedil","sup1","ordm","raquo","frac14","frac12","frac34","iquest","Agrave","Aacute","Acirc","Atilde","Auml","Aring","AElig","Ccedil","Egrave","Eacute","Ecirc","Euml","Igrave","Iacute","Icirc","Iuml","ETH","Ntilde","Ograve","Oacute","Ocirc","Otilde","Ouml","times","Oslash","Ugrave","Uacute","Ucirc","Uuml","Yacute","THORN","szlig","agrave","aacute","acirc","atilde","auml","aring","aelig","ccedil","egrave","eacute","ecirc","euml","igrave","iacute","icirc","iuml","eth","ntilde","ograve","oacute","ocirc","otilde","ouml","divide","oslash","ugrave","uacute","ucirc","uuml","yacute","thorn","yuml","OElig","oelig","Scaron","scaron","Yuml","fnof","circ","Alpha","Beta","Gamma","Delta","Epsilon","Zeta","Eta","Theta","Iota","Kappa","Lambda","Mu","Nu","Xi","Omicron","Pi","Rho","Sigma","Tau","Upsilon","Phi","Chi","Psi","Omega","alpha","beta","gamma","delta","epsilon","zeta","eta","theta","iota","kappa","lambda","mu","nu","xi","omicron","pi","rho","sigmaf","sigma","tau","upsilon","phi","chi","psi","omega","thetasym","upsih","piv","ensp","emsp","thinsp","zwnj","zwj","lrm","rlm","ndash","mdash","lsquo","rsquo","sbquo","ldquo","rdquo","bdquo","dagger","Dagger","bull","hellip","permil","prime","Prime","lsaquo","rsaquo","oline","frasl","euro","image","weierp","real","trade","alefsym","larr","uarr","rarr","darr","harr","crarr","lArr","uArr","rArr","dArr","hArr","forall","exist","nabla","isin","notin","ni","prod","sum","minus","lowast","radic","infin","ang","and","or","cap","cup","there4","sim","cong","asymp","ne","equiv","le","ge","sub","sup","nsub","sube","supe","oplus","otimes","perp","sdot","lceil","rceil","lfloor","rfloor","rang","loz","spades","clubs","hearts","diams","JsxErrors","AttributeIsEmpty","MissingClosingTagElement","openingTagName","MissingClosingTagFragment","UnexpectedSequenceExpression","HTMLEntity","UnsupportedJsxValue","UnterminatedJsxContent","UnwrappedAdjacentJSXElements","isFragment","getQualifiedJSXName","TypeScriptScope","enums","constEnums","classes","exportOnlyBindings","TypeScriptScopeHandler","TSErrors","AbstractMethodHasImplementation","AbstractPropertyHasInitializer","propertyName","AccesorCannotDeclareThisParameter","AccesorCannotHaveTypeParameters","CannotFindName","ClassMethodHasDeclare","ClassMethodHasReadonly","ConstInitiailizerMustBeStringOrNumericLiteralOrLiteralEnumReference","ConstructorHasTypeParameters","DeclareAccessor","DeclareClassFieldHasInitializer","DeclareFunctionHasImplementation","DuplicateAccessibilityModifier","modifier","DuplicateModifier","EmptyHeritageClauseType","EmptyTypeArguments","EmptyTypeParameters","ExpectedAmbientAfterExportDeclare","ImportAliasHasImportType","IncompatibleModifiers","modifiers","IndexSignatureHasAbstract","IndexSignatureHasAccessibility","IndexSignatureHasDeclare","IndexSignatureHasOverride","IndexSignatureHasStatic","InitializerNotAllowedInAmbientContext","InvalidModifierOnTypeMember","InvalidModifierOnTypeParameter","InvalidModifierOnTypeParameterPositions","InvalidModifiersOrder","orderedModifiers","InvalidPropertyAccessAfterInstantiationExpression","InvalidTupleMemberLabel","MissingInterfaceName","MixedLabeledAndUnlabeledElements","NonAbstractClassHasAbstractMethod","NonClassMethodPropertyHasAbstractModifer","OptionalTypeBeforeRequired","OverrideNotInSubClass","PrivateElementHasAbstract","PrivateElementHasAccessibility","ReadonlyForMethodSignature","ReservedArrowTypeParam","ReservedTypeAssertion","SetAccesorCannotHaveOptionalParameter","SetAccesorCannotHaveRestParameter","SetAccesorCannotHaveReturnType","SingleTypeParameterWithoutTrailingComma","typeParameterName","StaticBlockCannotHaveModifier","TypeAnnotationAfterAssign","TypeImportCannotSpecifyDefaultAndNamed","TypeModifierIsUsedInTypeExports","TypeModifierIsUsedInTypeImports","UnexpectedParameterModifier","UnexpectedReadonly","UnexpectedTypeAnnotation","UnexpectedTypeCastInParameter","UnsupportedImportTypeArgument","UnsupportedParameterPropertyKind","UnsupportedSignatureParameterKind","tsIsAccessModifier","tsIsVarianceAnnotations","isPossiblyLiteralEnum","expression","computed","expressions","isUncomputedMemberExpressionChain","PlaceholderErrors","ClassNameIsRequired","UnexpectedSpace","hasPlugin","plugins","expectedConfig","expectedName","expectedOptions","expectedKeys","expectedOptionsIsEmpty","pluginName","pluginOptions","getPluginOption","option","plugin","PIPELINE_PROPOSALS","TOPIC_TOKENS","RECORD_AND_TUPLE_SYNTAX_TYPES","mixinPlugins","estree","superClass","tokens","parseRegExpLiteral","pattern","estreeParseLiteral","parseBigIntLiteral","bigInt","parseDecimalLiteral","parseLiteral","parseStringLiteral","parseNumericLiteral","parseNullLiteral","parseBooleanLiteral","directiveToStmt","directive","directiveLiteral","stmt","startNodeAt","expressionValue","finishNodeAt","initFunction","checkDeclaration","isObjectProperty","getObjectOrClassMethodParams","isValidDirective","parenthesized","parseBlockBody","directiveStatements","directives","pushClassMethod","classBody","isConstructor","allowsDirectSuper","parseMethod","typeParameters","parsePrivateName","convertPrivateNameToPrivateIdentifier","getPrivateNameSV","isPrivateName","parseFunctionBody","allowExpression","isMethod","inClassScope","funcNode","startNode","finishNode","parseClassProperty","propertyNode","parseClassPrivateProperty","parseObjectMethod","isPattern","isAccessor","shorthand","parseObjectProperty","startPos","refExpressionErrors","isValidLVal","rest","isAssignable","isBinding","toAssignable","isLHS","toAssignableObjectExpressionProp","finishCallExpression","callee","toReferencedArguments","parseExport","exported","specifiers","parseSubscript","noCalls","optionalChainMember","startNodeAtNode","hasPropertyAsPrivateName","isOptionalChain","isObjectMethod","resetStartLocation","resetEndLocation","jsx","jsxReadToken","chunkStart","finishToken","getTokenFromCode","jsxReadEntity","jsxReadNewLine","normalizeCRLF","jsxReadString","codePointAtPos","codePoint","readInt","fromCodePoint","XHTMLEntities","jsxReadWord","jsxParseIdentifier","jsxParseNamespacedName","eat","jsxParseElementName","jsxParseAttributeValue","setContext","jsxParseExpressionContainer","parseExprAtom","jsxParseEmptyExpression","jsxParseSpreadChild","parseExpression","expect","previousContext","jsxParseAttribute","parseMaybeAssignAllowIn","jsxParseOpeningElementAt","jsxParseOpeningElementAfterName","selfClosing","jsxParseClosingElementAt","jsxParseElementAt","children","openingElement","closingElement","contents","openingFragment","closingFragment","jsxParseElement","newContext","replaceToken","skipSpace","curContext","prevType","flow","flowPragma","getScopeHandler","shouldParseTypes","shouldParseEnums","addComment","comment","flowParseTypeInitialiser","tok","oldInType","flowParseType","flowParsePredicate","moduloLoc","expectContextual","flowParseTypeAndPredicateInitialiser","flowParseDeclareClass","flowParseInterfaceish","flowParseDeclareFunction","parseIdentifier","typeNode","typeContainer","flowParseTypeParameterDeclaration","flowParseFunctionTypeParams","returnType","typeAnnotation","semicolon","BIND_FLAGS_FLOW_DECLARE_FN","flowParseDeclare","insideModule","flowParseDeclareVariable","eatContextual","flowParseDeclareModuleExports","flowParseDeclareModule","isContextual","flowParseDeclareTypeAlias","flowParseDeclareOpaqueType","flowParseDeclareInterface","flowParseDeclareExportDeclaration","flowParseTypeAnnotatableIdentifier","BIND_KIND_VALUE","bodyNode","parseImport","hasModuleExport","bodyElement","declaration","isEsModuleType","isLet","exportKind","flowParseTypeAnnotation","flowParseTypeAlias","flowParseOpaqueType","isClass","flowParseRestrictedIdentifier","extends","implements","mixins","flowParseInterfaceExtends","flowParseObjectType","allowStatic","allowExact","allowSpread","allowProto","allowInexact","flowParseQualifiedTypeIdentifier","flowParseTypeParameterInstantiation","flowParseInterface","checkNotUnderscore","checkReservedType","liberal","right","declare","supertype","impltype","flowParseTypeParameter","requireDefault","nodeStartLoc","variance","flowParseVariance","ident","defaultRequired","typeParameter","oldNoAnonFunctionType","flowParseTypeParameterInstantiationCallOrNew","flowParseTypeOrImplicitInstantiation","flowParseInterfaceType","flowParseObjectPropertyKey","flowParseObjectTypeIndexer","isStatic","lookahead","flowParseObjectTypeInternalSlot","flowParseObjectTypeMethodish","flowParseFunctionTypeParam","flowParseObjectTypeCallProperty","valueNode","nodeStart","endDelim","exact","callProperties","indexers","internalSlots","inexact","protoStartLoc","inexactStartLoc","propOrInexact","flowParseObjectTypeProperty","flowObjectTypeSemicolon","flowCheckGetterSetterParams","node2","qualification","flowParseGenericType","flowParseTypeofType","flowParsePrimaryType","flowParseTupleType","lh","isThis","reinterpretTypeAsFunctionTypeParam","flowIdentToTypeAnnotation","isGroupedType","parseLiteralAtNode","createIdentifier","flowParsePostfixType","seenOptionalIndexedAccess","canInsertSemicolon","objectType","indexType","flowParsePrefixType","flowParseAnonFunctionWithoutParens","flowParseIntersectionType","flowParseUnionType","allowPrimitiveOverride","typeCastToParameter","allowExpressionBody","forwardNoArrowParamsConversionAt","parseFunctionBodyAndFinish","parseStatement","topLevel","flowParseEnumDeclaration","parseExpressionStatement","expr","shouldParseExportDeclaration","isExportDefaultSpecifier","parseExportDefaultExpression","parseConditional","nextCh","lookaheadCharCode","setOptionalParametersError","originalNoArrowAt","consequent","failed","tryParseConditionalConsequent","valid","invalid","getArrowLikeExpressions","alternate","parseMaybeAssign","disallowInvalid","arrows","finishArrowValidation","list1","list2","toAssignableList","trailingCommaLoc","SCOPE_FUNCTION","checkParams","parseParenItem","typeCastNode","assertModuleNodeAllowed","decl","parseExportDeclaration","declarationNode","parseExportSpecifiers","parseExportFrom","eatExportStar","maybeParseExportNamespaceSpecifier","hasNamespace","parseClassId","isStatement","optionalId","parseClassMember","member","parseClassMemberFromModifier","isIterator","readIterator","readWord1","fullWord","finishOp","next2","isIteratorStart","left","exprList","toReferencedList","isParenthesizedExpr","parseArrayLike","canBePattern","isTuple","isClassMethod","isClassProperty","isNonstaticConstructor","isThisParam","pushClassPrivateMethod","parseClassSuper","superTypeParameters","implemented","checkGetterSetterParams","parsePropertyNamePrefixOperator","parseObjPropValue","parseAssignableListItemTypes","parseMaybeDefault","shouldParseDefaultImport","parseImportSpecifierLocal","specifier","finishImportSpecifier","maybeParseDefaultImportSpecifier","parseImportSpecifier","importedIsString","isInTypeOnlyImport","isMaybeTypeOnly","firstIdent","imported","specifierTypeKind","isLookaheadContextual","as_ident","specifierIsTypeImport","checkReservedWord","parseBindingAtom","parseFunctionParams","allowModifiers","parseVarId","parseAsyncArrowFromCallExpression","shouldParseAsyncArrow","afterLeftParse","tryParse","currentContext","arrowExpression","resetStartLocationFromNode","maybeUnwrapTypeCastExpression","aborted","failState","thrown","parseArrow","shouldParseArrow","setArrowFunctionParameters","allowDuplicates","isArrowFunction","parseParenAndDistinguishExpression","canBeArrow","parseSubscripts","parseCallExpressionArguments","parseAsyncArrowWithTypeParameters","subscriptState","isLookaheadToken_lt","typeArguments","parseNewCallee","targs","parseArrowExpression","readToken_mult_modulo","nextToken","readToken_pipe_amp","parseTopLevel","program","fileNode","skipBlockComment","skipFlowComment","hasFlowCommentCompletion","shiftToFirstNonWhiteSpace","ch2","ch3","flowEnumErrorBooleanMemberNotInitialized","flowEnumErrorInvalidMemberInitializer","enumContext","flowEnumErrorNumberMemberNotInitialized","flowEnumErrorStringMemberInconsistentlyInitailized","flowEnumMemberInit","endOfInit","literal","flowEnumMemberRaw","flowEnumCheckExplicitTypeMismatch","expectedType","flowEnumMembers","seenNames","members","booleanMembers","numberMembers","stringMembers","defaultedMembers","hasUnknownMembers","memberNode","flowEnumStringMembers","initializedMembers","flowEnumParseExplicitType","flowEnumBody","nameLoc","boolsLen","numsLen","strsLen","defaultedLen","nextTokenStart","afterNext","typescript","tsIsIdentifier","tsTokenCanFollowModifier","isLiteralPropertyName","hasPrecedingLineBreak","tsNextTokenCanFollowModifier","tsParseModifier","allowedModifiers","stopOnStartOfClassStaticBlock","tsIsStartOfStaticBlocks","tsTryParse","tsParseModifiers","disallowedModifiers","errorTemplate","enforceOrder","before","after","incompatible","mod1","mod2","accessibility","tsIsListTerminator","tsParseList","parseElement","tsParseDelimitedList","refTrailingCommaPos","nonNull","tsParseDelimitedListWorker","expectSuccess","trailingCommaPos","tsParseBracketedList","bracket","skipFirstToken","tsParseImportType","qualifier","tsParseEntityName","tsParseTypeArguments","allowReservedWords","tsParseTypeReference","tsParseThisTypePredicate","lhs","parameterName","tsParseTypeAnnotation","asserts","tsParseThisTypeNode","tsParseTypeQuery","exprName","tsParseInOutModifiers","tsParseNoneModifiers","tsParseTypeParameter","parseModifiers","tsParseTypeParameterName","constraint","tsEatThenParseType","tsTryParseTypeParameters","tsParseTypeParameters","addExtra","tsTryNextParseConstantContext","typeReference","tsFillSignature","returnToken","signature","returnTokenRequired","tsParseBindingListForSignature","tsParseTypeOrTypePredicateAnnotation","parseBindingList","tsParseTypeMemberSemicolon","isLineTerminator","tsParseSignatureMember","tsIsUnambiguouslyIndexSignature","tsTryParseIndexSignature","tsLookAhead","tsTryParseTypeAnnotation","tsParsePropertyOrMethodSignature","readonly","nodeAny","paramsKey","returnTypeKey","firstParameter","tsParseTypeMember","parsePropertyName","tsParseTypeLiteral","tsParseObjectTypeMembers","tsIsStartOfMappedType","tsParseMappedTypeParameter","tsExpectThenParseType","tsParseMappedType","nameType","tsParseType","tsTryParseType","tsParseTupleType","elementTypes","tsParseTupleElementType","seenOptionalElement","labeledElements","elementNode","isLabeled","labeledNode","optionalTypeNode","restNode","tsParseParenthesizedType","tsParseFunctionOrConstructorType","abstract","tsInAllowConditionalTypesContext","tsParseLiteralTypeNode","tsParseTemplateLiteralType","parseTemplate","parseTemplateSubstitution","tsParseThisTypeOrThisTypePredicate","thisKeyword","tsParseNonArrayType","parseMaybeUnary","nodeType","keywordTypeFromName","tsParseArrayTypeOrHigher","tsParseTypeOperator","tsParseTypeOperatorOrHigher","tsCheckTypeAnnotationForReadOnly","tsParseInferType","tsParseConstraintForInferType","tsInDisallowConditionalTypesContext","tsParseUnionOrIntersectionType","parseConstituentType","hasLeadingOperator","tsParseIntersectionTypeOrHigher","tsParseUnionTypeOrHigher","tsIsStartOfFunctionType","tsIsUnambiguouslyStartOfFunctionType","tsSkipParameterStart","previousErrorCount","parseObjectLike","tsInType","t","tsParseTypePredicateAsserts","thisTypePredicate","typePredicateVariable","tsParseTypePredicatePrefix","tsTryParseTypeOrTypePredicateAnnotation","eatColon","tsParseNonConditionalType","checkType","extendsType","trueType","falseType","isAbstractConstructorSignature","tsParseTypeAssertion","tsNextThenParseType","tsParseHeritageClause","originalStartLoc","delimitedList","tsParseInterfaceDeclaration","hasFollowingLineBreak","checkIdentifier","tsParseTypeAliasDeclaration","tsInNoContext","oldContext","oldInDisallowConditionalTypesContext","tsDoThenParseType","tsParseEnumMember","initializer","tsParseEnumDeclaration","BIND_TS_ENUM","tsParseModuleBlock","parseBlockOrModuleBlockBody","tsParseModuleOrNamespaceDeclaration","nested","inner","prodParam","tsParseAmbientExternalModuleDeclaration","tsParseImportEqualsDeclaration","isExport","moduleReference","tsParseModuleReference","tsIsExternalModuleReference","tsParseExternalModuleReference","tsTryParseAndCatch","tsTryParseDeclare","nany","starttype","tsInAmbientContext","parseFunctionStatement","parseClass","parseVarStatement","tsParseDeclaration","tsTryParseExportDeclaration","tsParseExpressionStatement","tsCheckLineTerminator","tsParseAbstractDeclaration","tsTryParseGenericAsyncArrowFunction","oldMaybeInArrowParameters","tsParseTypeArgumentsInExpression","reScan_lt","tsIsDeclarationStart","parseAssignableListItem","decorators","elt","pp","parameter","isSimpleParameter","bodilessType","registerFunctionStatementId","tsCheckForInvalidTypeCasts","items","isInParens","nonNullExpression","isOptionalCall","missingParenErrorLoc","atPossibleAsyncArrow","asyncArrowFn","parseTaggedTemplateExpression","tokenType","parseExprOp","leftStartPos","leftStartLoc","minPrec","reScan_lt_gt","checkKeywords","checkDuplicateExports","ahead","importNode","isAbstractClass","cls","allowMissingInitializer","declarations","parseStatementContent","parseAccessModifier","tsHasSomeModifiers","callParseClassMemberWithIsStatic","parseClassStaticBlock","parseClassMemberWithIsStatic","hadSuperClass","parsePostMemberNameModifiers","methodOrProp","isDeclare","parseClassPropertyAnnotation","definite","declareClassPrivateMethodInScope","typeCast","reportReservedArrowTypeParam","trailingComma","toAssignableParenthesizedExpression","expressionScope","checkToRestConversion","allowPattern","isUnparenthesizedInAssign","TSTypeCastExpression","TSParameterProperty","TSNonNullExpression","TSAsExpression","TSTypeAssertion","parseMaybeDecoratorArguments","checkCommaAfterRest","readToken_lt","readToken_gt","canHaveLeadingDecorator","getGetterSetterExpectedParamCount","baseCount","firstParam","parseCatchClauseParam","oldIsAmbientContext","oldInAbstractClass","shouldParseAsAmbientContext","getExpression","parseExportSpecifier","isInTypeExport","parseTypeOnlyImportExportSpecifier","isImport","isInTypeOnlyImportExport","leftOfAsKey","rightOfAsKey","rightOfAs","leftOfAs","hasTypeSpecifier","canParseAsKeyword","firstAs","secondAs","parseModuleExportName","v8intrinsic","parseV8Intrinsic","v8IntrinsicStartLoc","parseIdentifierName","identifier","placeholders","parsePlaceholder","assertNoSpace","finishPlaceholder","verifyBreakContinue","parseBlock","parseFunctionId","takeDecorators","oldStrict","parseClassBody","expectPlugin","isUnparsedContextual","nextTokenStartSince","maybeParseExportDefaultSpecifier","checkExport","maybeParseStarImportSpecifier","parseNamedImportSpecifiers","parseImportSource","mixinPluginNames","defaultOptions","sourceFilename","allowAwaitOutsideFunction","allowReturnOutsideFunction","allowImportExportEverywhere","allowSuperOutsideMethod","allowUndeclaredExports","createParenthesizedExpressions","errorRecovery","attachComment","unwrapParenthesizedExpression","loopLabel","switchLabel","loneSurrogate","keywordRelationalOperator","Parser","sawUnambiguousESM","ambiguousScriptDifferentAst","pluginConfig","actualOptions","processComment","commentStackLength","lastCommentWS","leadingNode","commentEnd","trailingNode","containingNode","finalizeComment","leadingComments","setLeadingComments","commentStart","finalizeRemainingComments","resetPreviousNodeTrailingComments","takeSurroundingComments","isLookahead","pushToken","checkKeywordEscapes","createLookaheadState","cp","setStrict","skipLineComment","startSkip","spaceStart","CommentWhitespace","readToken_numberSign","readToken_interpreter","nextPos","readToken_dot","readNumber","readToken_slash","width","readToken_caret","proposal","topicToken","codePointAt","readToken_atSign","readToken_plus_min","readToken_eq_excl","readToken_question","readTemplateToken","readRadixNumber","readString","readWord","readRegexp","escaped","content","mods","forceLen","allowNumSeparator","forbiddenSiblings","isAllowedSibling","startsWithDot","isFloat","isDecimal","hasExponent","isOctal","hasLeadingZero","integer","recordStrictModeErrors","underscorePos","readCodePoint","throwOnInvalid","readHexChar","readEscapedChar","readTemplateContinuation","containsInvalid","inTemplate","codePos","octalStr","octal","codeLoc","firstCode","escStart","identifierCheck","esc","keywordTypes","raiseProperties","raiseOverwrite","expectOnePlugin","pluginNames","nameStart","nameEnd","allowAsi","oldState","abortSignal","checkExpressionErrors","andThrow","initializeScopes","oldLabels","oldExportedIdentifiers","exportedIdentifiers","oldInModule","oldScope","oldProdParam","oldExpressionScope","enterInitialScopes","paramFlags","checkDestructuringPrivate","locationNode","isLast","toReferencedListDeep","parseSpread","refNeedsArrowPos","parseRestBinding","closeCharCode","allowEmpty","elts","parseDecorator","parseBindingRestProperty","parseBindingProperty","ObjectProperty","checkLVal","in","checkClashes","strictModeChanged","allowingSloppyLetBinding","hasParenthesizedAncestor","validity","ParseErrorClass","isParenthesizedExpression","nextAncestor","allowLetBinding","declareNameFromIdentifier","checkProto","isRecord","protoRef","used","shouldExitDescending","disallowIn","disallowInAnd","parseExpressionBase","allowInAnd","parseMaybeAssignDisallowIn","resultError","parseYield","ownExpressionErrors","parseMaybeConditional","parseExprOps","parseMaybeUnaryOrPrivate","op","prec","checkPipelineAtInfixOperator","logical","coalesce","parseExprOpRightExpr","nextOp","withTopicBindingContext","parseHackPipeBody","parseSmartPipelineBodyInStyle","parseExprOpBaseRightExpr","withSoloAwaitPermittingContext","parseFSharpPipelineBody","topicReferenceWasUsedInCurrentContext","checkExponentialAfterUnary","sawUnary","isAwait","isAwaitAllowed","parseAwait","isDelete","parseUpdate","isAmbiguousAwait","parseExprSubscripts","maybeAsyncArrow","parseBind","parseCoverCallAndAsyncArrowHead","parseMember","parseNoCallExpr","quasi","dynamicImport","allowPlaceholder","nodeForExtra","oldInFSharpPipelineDirectBody","addTrailingCommaExtraToNode","parseExprListItem","parseSuper","parseImportMetaProperty","parseDo","parseFunctionOrFunctionSent","parseDecorators","parseNewOrNewTarget","parseTopicReferenceThenEqualsSign","parseTopicReference","pipeProposal","lookaheadCh","parseModuleExpression","parseFunction","parseAsyncArrowUnaryFunction","topicTokenType","topicTokenValue","finishTopicReference","testTopicReferenceConfiguration","topicReferenceIsAllowedInCurrentContext","registerTopicReference","parseMetaProperty","innerStartPos","innerStartLoc","spreadStartLoc","optionalCommaStartLoc","spreadNodeStartPos","spreadNodeStartLoc","innerEndLoc","arrowNode","wrapParenthesis","parenExpression","metaProp","parseNew","parseExprList","parseTemplateElement","isTagged","elemStart","isTail","endOffset","elemEnd","cooked","tail","curElt","quasis","propHash","parsePropertyDefinition","maybeAsyncOrAccessorProp","keyName","generator","isExpression","hasStrictModeDirective","nonSimple","isSimpleParamList","formalParameters","canBeReservedWord","isKeyword","delegating","childExpr","isSimpleReference","checkSmartPipeTopicBodyEarlyErrors","outerContextTopicState","withSmartMixTopicForbiddingContext","outerContextSoloAwaitState","revertScopes","parseProgram","hashEndPos","hashEndLoc","backquoteEnd","backquoteEndLoc","startToken","templateValue","templateElementEnd","templateElementEndLoc","endToken","babel7CompatTokens","interpreter","parseInterpreterDirective","stmtToDirective","isLetKeyword","endCh","parseBreakContinueStatement","parseDebuggerStatement","parseDoStatement","parseForStatement","parseIfStatement","parseReturnStatement","parseSwitchStatement","parseThrowStatement","parseTryStatement","parseWhileStatement","parseWithStatement","parseEmptyStatement","nextTokenCharCode","isAsyncFunction","maybeName","parseLabeledStatement","allowExport","currentContextDecorators","decorator","isBreak","lab","parseHeaderExpression","awaitAt","parseFor","startsWithLet","parseVar","parseForIn","startsWithAsync","isForOf","declarationPosition","discriminant","cases","cur","sawDefault","isCase","simple","block","clause","statementStart","allowDirectives","createNewLexicalScope","afterBlockParse","parsedNonDirective","isForIn","await","isFor","statement","isHangingStatement","requireId","hadConstructor","publicMethod","privateMethod","publicProp","privateProp","accessorProp","publicMember","parseClassElementName","isPrivate","maybeQuestionTokenStartLoc","pushClassPrivateProperty","pushClassProperty","pushClassAccessorProperty","SCOPE_CLASS","parseClassAccessorProperty","CLASS_ELEMENT_KIND_SETTER","parseInitializer","hasDefault","parseAfterDefault","hasStar","parseAfterNamespace","isFromRequired","hasSpecifiers","maybeParseExportNamedSpecifiers","hasDeclaration","maybeParseExportDeclaration","isTypeExport","assertions","FUNC_STATEMENT","nextType","hasFrom","nextAfterFrom","maybeParseImportAssertions","checkJSONModuleImport","checkNames","isDefault","isFrom","nodes","clonePlaceholder","cloneStringLiteral","surrogate","isJSONModuleImport","nonDefaultNamedSpecifier","parseNext","maybeParseModuleAttributes","parseAssertEntries","attrNames","importSpecifier","getOptions","pluginMap","pluginsMap","internalTokenTypes","generateExportedTokenTypes","getParser","decoratorsBeforeExport","proposalList","tupleSyntaxIsHash","syntaxType","tokenList","missingPlugins","validatePlugins","pluginsFromOptions","pluginList","parserClassCache","getParserClass","ast","moduleError","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","loaded","__webpack_modules__","__esModule","definition","nmd","filePath","rawdata","readFileAsJson","SERVER_PORT","getConfig","ingressUrl","INGRESS_URL","homeAssistaneApiKey","HASSIO_TOKEN","homeAssistaneSocketUri","HA_SOCKET_URL","cleanSwitchDomain","restoreSwitchDomain","equals","toNum","toInt","resolveType","resolveTypes","resolveValue","getDeviceClimate","deviceName","thermostatMode","thermostatTemperatureSetpoint","thermostatTemperatureAmbient","thermostatHumidityAmbient","getDevicesV2$","fakeDevices","d1_mini_4","d1_mini_3","wroom_32_1","dehumidifier","currentFanSpeedSetting","humiditySetpointPercent","humidityAmbientPercent","deviceSubs","device","stringOrExpression","referances","findReferances","getDevicesFromProps","devices","allSubs","logging","parms","getHomeAssistantDataAccess","counter","homeAssistantWebSocket","homeAssistantResult","subscribedMessages","initWebSocket","webSocketSubject","processMessage","messages","massageBase","access_token","getEntityStatus","entityStatus","createSubScription","map2","getEntityStatusUpdated","entityStatusUpdated","event_type","new_state","getAreas","areas","getEntities","getDevices","iniMessage","resultId","dotenv","express","clientConfig","API","SOCKET","clientInit","apiInit","lastDevices","wss","fromCache","toLocaleString","Observable2","devicesState","entitesState","entityStatus$","entites","entity_id","acc2","entityStatusUpdated$","found","updatedDevices","getDeviceStatusV2$","client","webSocketInit","signal"],"sourceRoot":""}